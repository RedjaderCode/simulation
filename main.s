	.file	"main.cpp"
 # GNU C++20 (Rev6, Built by MSYS2 project) version 12.2.0 (x86_64-w64-mingw32)
 #	compiled by GNU C version 12.2.0, GMP version 6.2.1, MPFR version 4.1.0-p13, MPC version 1.2.1, isl version isl-0.25-GMP

 # GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
 # options passed: -mtune=generic -march=x86-64 -g -std=c++20 -fstack-usage -fno-inline -fno-omit-frame-pointer
	.text
.Ltext0:
	.file 0 "C:/code/redjader/simulation" "src/main.cpp"
	.section	.text$__is_constant_evaluated,"x"
	.linkonce discard
	.globl	__is_constant_evaluated
	.def	__is_constant_evaluated;	.scl	2;	.type	32;	.endef
	.seh_proc	__is_constant_evaluated
__is_constant_evaluated:
.LFB404:
	.file 1 "C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/c++config.h"
	.loc 1 517 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI0:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1:
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/c++config.h:523:     return __builtin_is_constant_evaluated();
	.loc 1 523 44
	movl	$0, %eax	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/c++config.h:527:   }
	.loc 1 527 3
	popq	%rbp	 #
.LCFI2:
	ret	
.LFE404:
	.seh_endproc
	.section	.text$_Z6printfPKcz,"x"
	.linkonce discard
	.globl	_Z6printfPKcz
	.def	_Z6printfPKcz;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z6printfPKcz
_Z6printfPKcz:
.LFB5616:
	.file 2 "C:/msys64/mingw64/include/stdio.h"
	.loc 2 369 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI3:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI4:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI5:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI6:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __format, __format
	movq	%rdx, 40(%rbp)	 #,
	movq	%r8, 48(%rbp)	 #,
	movq	%r9, 56(%rbp)	 #,
 # C:/msys64/mingw64/include/stdio.h:371:   __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
	.loc 2 371 53
	leaq	40(%rbp), %rax	 #, tmp86
	movq	%rax, -16(%rbp)	 # tmp86, MEM[(char * *)&__local_argv]
 # C:/msys64/mingw64/include/stdio.h:372:   __retval = __mingw_vfprintf( stdout, __format, __local_argv );
	.loc 2 372 30
	movq	-16(%rbp), %rbx	 # __local_argv, __local_argv.44_1
	movl	$1, %ecx	 #,
	movq	__imp___acrt_iob_func(%rip), %rax	 #, tmp87
	call	*%rax	 # tmp87
.LVL0:
	movq	%rax, %rcx	 #, _2
	movq	32(%rbp), %rax	 # __format, tmp88
	movq	%rbx, %r8	 # __local_argv.44_1,
	movq	%rax, %rdx	 # tmp88,
	call	__mingw_vfprintf	 #
	movl	%eax, -4(%rbp)	 # tmp89, __retval
 # C:/msys64/mingw64/include/stdio.h:374:   return __retval;
	.loc 2 374 10
	movl	-4(%rbp), %eax	 # __retval, _11
 # C:/msys64/mingw64/include/stdio.h:375: }
	.loc 2 375 1
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI7:
	popq	%rbp	 #
.LCFI8:
	ret	
.LFE5616:
	.seh_endproc
	.section	.text$_ZSt4fabsf,"x"
	.linkonce discard
	.globl	_ZSt4fabsf
	.def	_ZSt4fabsf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4fabsf
_ZSt4fabsf:
.LFB5680:
	.file 3 "C:/msys64/mingw64/include/c++/12.2.0/cmath"
	.loc 3 242 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI9:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI10:
	.seh_endprologue
	movss	%xmm0, 16(%rbp)	 # __x, __x
 # C:/msys64/mingw64/include/c++/12.2.0/cmath:242:   { return __builtin_fabsf(__x); }
	.loc 3 242 31
	movss	16(%rbp), %xmm0	 # __x, tmp84
	movss	.LC0(%rip), %xmm1	 #, tmp85
	andps	%xmm1, %xmm0	 # tmp85, _2
 # C:/msys64/mingw64/include/c++/12.2.0/cmath:242:   { return __builtin_fabsf(__x); }
	.loc 3 242 34
	popq	%rbp	 #
.LCFI11:
	ret	
.LFE5680:
	.seh_endproc
	.section	.text$_ZSt5floorf,"x"
	.linkonce discard
	.globl	_ZSt5floorf
	.def	_ZSt5floorf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt5floorf
_ZSt5floorf:
.LFB5683:
	.loc 3 261 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI12:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI13:
	.seh_endprologue
	movss	%xmm0, 16(%rbp)	 # __x, __x
 # C:/msys64/mingw64/include/c++/12.2.0/cmath:261:   { return __builtin_floorf(__x); }
	.loc 3 261 28
	movss	16(%rbp), %xmm0	 # __x, tmp84
	movss	.LC1(%rip), %xmm1	 #, tmp85
	movaps	%xmm0, %xmm2	 # tmp84, tmp86
	movss	.LC0(%rip), %xmm0	 #, tmp88
	movaps	%xmm0, %xmm3	 # tmp88, tmp89
	movaps	%xmm2, %xmm0	 # tmp86, tmp87
	andps	%xmm3, %xmm0	 # tmp89, tmp87
	ucomiss	%xmm0, %xmm1	 # tmp87, tmp85
	jbe	.L8	 #,
	cvttss2sil	%xmm2, %eax	 # tmp86, tmp90
	pxor	%xmm0, %xmm0	 # tmp87
	cvtsi2ssl	%eax, %xmm0	 # tmp90, tmp87
	movss	.LC2(%rip), %xmm4	 #, tmp91
	movaps	%xmm0, %xmm1	 # tmp87, tmp92
	cmpnless	%xmm2, %xmm1	 #, tmp86, tmp92
	andps	%xmm4, %xmm1	 # tmp91, tmp92
	subss	%xmm1, %xmm0	 # tmp92, tmp93
	andnps	%xmm2, %xmm3	 # tmp86, tmp89
	movaps	%xmm3, %xmm1	 # tmp89, tmp94
	orps	%xmm1, %xmm0	 # tmp94, tmp93
	movaps	%xmm0, %xmm2	 # tmp93, tmp86
.L8:
	movaps	%xmm2, %xmm0	 # tmp86, _2
 # C:/msys64/mingw64/include/c++/12.2.0/cmath:261:   { return __builtin_floorf(__x); }
	.loc 3 261 35
	popq	%rbp	 #
.LCFI14:
	ret	
.LFE5683:
	.seh_endproc
	.section	.text$_ZNSt9__cmp_cat8__unspecC1EPS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__cmp_cat8__unspecC1EPS0_
	.def	_ZNSt9__cmp_cat8__unspecC1EPS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__cmp_cat8__unspecC1EPS0_
_ZNSt9__cmp_cat8__unspecC1EPS0_:
.LFB5910:
	.file 4 "C:/msys64/mingw64/include/c++/12.2.0/compare"
	.loc 4 59 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI15:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI16:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.101057, D.101057
 # C:/msys64/mingw64/include/c++/12.2.0/compare:59:       constexpr __unspec(__unspec*) noexcept { }
	.loc 4 59 48
	nop	
	popq	%rbp	 #
.LCFI17:
	ret	
.LFE5910:
	.seh_endproc
	.section	.text$_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE,"x"
	.linkonce discard
	.globl	_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE
	.def	_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE
_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE:
.LFB5949:
	.loc 4 294 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI18:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI19:
	.seh_endprologue
	movb	%cl, 16(%rbp)	 # __v, __v
 # C:/msys64/mingw64/include/c++/12.2.0/compare:295:     { return __v._M_value < 0; }
	.loc 4 295 18
	movzbl	16(%rbp), %eax	 # __v._M_value, _1
 # C:/msys64/mingw64/include/c++/12.2.0/compare:295:     { return __v._M_value < 0; }
	.loc 4 295 29
	shrb	$7, %al	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/compare:295:     { return __v._M_value < 0; }
	.loc 4 295 32
	popq	%rbp	 #
.LCFI20:
	ret	
.LFE5949:
	.seh_endproc
	.section	.text$_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE,"x"
	.linkonce discard
	.globl	_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE
	.def	_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE
_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE:
.LFB5951:
	.loc 4 304 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI21:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI22:
	.seh_endprologue
	movb	%cl, 16(%rbp)	 # __v, __v
 # C:/msys64/mingw64/include/c++/12.2.0/compare:305:     { return __v._M_value <= 0; }
	.loc 4 305 18
	movzbl	16(%rbp), %eax	 # __v._M_value, _1
 # C:/msys64/mingw64/include/c++/12.2.0/compare:305:     { return __v._M_value <= 0; }
	.loc 4 305 30
	testb	%al, %al	 # _1
	setle	%al	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/compare:305:     { return __v._M_value <= 0; }
	.loc 4 305 33
	popq	%rbp	 #
.LCFI23:
	ret	
.LFE5951:
	.seh_endproc
	.section	.text$_ZnwyPv,"x"
	.linkonce discard
	.globl	_ZnwyPv
	.def	_ZnwyPv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZnwyPv
_ZnwyPv:
.LFB6076:
	.file 5 "C:/msys64/mingw64/include/c++/12.2.0/new"
	.loc 5 175 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI24:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI25:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.104986, D.104986
	movq	%rdx, 24(%rbp)	 # __p, __p
 # C:/msys64/mingw64/include/c++/12.2.0/new:175: { return __p; }
	.loc 5 175 10
	movq	24(%rbp), %rax	 # __p, _2
 # C:/msys64/mingw64/include/c++/12.2.0/new:175: { return __p; }
	.loc 5 175 15
	popq	%rbp	 #
.LCFI26:
	ret	
.LFE6076:
	.seh_endproc
	.section	.text$_ZNSt14numeric_limitsIfE8infinityEv,"x"
	.linkonce discard
	.globl	_ZNSt14numeric_limitsIfE8infinityEv
	.def	_ZNSt14numeric_limitsIfE8infinityEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt14numeric_limitsIfE8infinityEv
_ZNSt14numeric_limitsIfE8infinityEv:
.LFB6601:
	.file 6 "C:/msys64/mingw64/include/c++/12.2.0/limits"
	.loc 6 1716 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI27:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI28:
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/limits:1716:       infinity() _GLIBCXX_USE_NOEXCEPT { return __builtin_huge_valf(); }
	.loc 6 1716 69
	movss	.LC3(%rip), %xmm0	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/limits:1716:       infinity() _GLIBCXX_USE_NOEXCEPT { return __builtin_huge_valf(); }
	.loc 6 1716 72
	popq	%rbp	 #
.LCFI29:
	ret	
.LFE6601:
	.seh_endproc
	.section	.text$_ZNSt10_Hash_impl4hashEPKvyy,"x"
	.linkonce discard
	.globl	_ZNSt10_Hash_impl4hashEPKvyy
	.def	_ZNSt10_Hash_impl4hashEPKvyy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Hash_impl4hashEPKvyy
_ZNSt10_Hash_impl4hashEPKvyy:
.LFB7262:
	.file 7 "C:/msys64/mingw64/include/c++/12.2.0/bits/functional_hash.h"
	.loc 7 204 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI30:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI31:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __ptr, __ptr
	movq	%rdx, 24(%rbp)	 # __clength, __clength
	movq	%r8, 32(%rbp)	 # __seed, __seed
 # C:/msys64/mingw64/include/c++/12.2.0/bits/functional_hash.h:206:     { return _Hash_bytes(__ptr, __clength, __seed); }
	.loc 7 206 25
	movq	32(%rbp), %rcx	 # __seed, tmp84
	movq	24(%rbp), %rdx	 # __clength, tmp85
	movq	16(%rbp), %rax	 # __ptr, tmp86
	movq	%rcx, %r8	 # tmp84,
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt11_Hash_bytesPKvyy	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/functional_hash.h:206:     { return _Hash_bytes(__ptr, __clength, __seed); }
	.loc 7 206 53
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI32:
	ret	
.LFE7262:
	.seh_endproc
	.text
	.def	_ZL18__gthread_active_pv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL18__gthread_active_pv
_ZL18__gthread_active_pv:
.LFB7436:
	.file 8 "C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h"
	.loc 8 301 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI33:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI34:
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:302:   return 1;
	.loc 8 302 10
	movl	$1, %eax	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:303: }
	.loc 8 303 1
	popq	%rbp	 #
.LCFI35:
	ret	
.LFE7436:
	.seh_endproc
	.def	_ZL14__gthread_selfv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL14__gthread_selfv
_ZL14__gthread_selfv:
.LFB7441:
	.loc 8 686 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI36:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI37:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:687:   return __gthrw_(pthread_self) ();
	.loc 8 687 33
	call	pthread_self	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:688: }
	.loc 8 688 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI38:
	ret	
.LFE7441:
	.seh_endproc
	.def	_ZL15__gthread_yieldv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL15__gthread_yieldv
_ZL15__gthread_yieldv:
.LFB7442:
	.loc 8 692 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI39:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI40:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:693:   return __gthrw_(sched_yield) ();
	.loc 8 693 32
	call	sched_yield	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:694: }
	.loc 8 694 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI41:
	ret	
.LFE7442:
	.seh_endproc
	.def	_ZL29__gthread_mutex_init_functionPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL29__gthread_mutex_init_functionPx
_ZL29__gthread_mutex_init_functionPx:
.LFB7448:
	.loc 8 731 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI42:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI43:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __mutex, __mutex
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:732:   if (__gthread_active_p ())
	.loc 8 732 26
	call	_ZL18__gthread_active_pv	 #
	testl	%eax, %eax	 # _1
	setne	%al	 #, retval.147_5
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:732:   if (__gthread_active_p ())
	.loc 8 732 3
	testb	%al, %al	 # retval.147_5
	je	.L29	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:733:     __gthrw_(pthread_mutex_init) (__mutex, NULL);
	.loc 8 733 34
	movq	16(%rbp), %rax	 # __mutex, tmp84
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp84,
	call	pthread_mutex_init	 #
.L29:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:734: }
	.loc 8 734 1
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI44:
	ret	
.LFE7448:
	.seh_endproc
	.def	_ZL23__gthread_mutex_destroyPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL23__gthread_mutex_destroyPx
_ZL23__gthread_mutex_destroyPx:
.LFB7449:
	.loc 8 738 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI45:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI46:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __mutex, __mutex
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:739:   if (__gthread_active_p ())
	.loc 8 739 26
	call	_ZL18__gthread_active_pv	 #
	testl	%eax, %eax	 # _1
	setne	%al	 #, retval.146_6
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:739:   if (__gthread_active_p ())
	.loc 8 739 3
	testb	%al, %al	 # retval.146_6
	je	.L31	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:740:     return __gthrw_(pthread_mutex_destroy) (__mutex);
	.loc 8 740 44
	movq	16(%rbp), %rax	 # __mutex, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	pthread_mutex_destroy	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:740:     return __gthrw_(pthread_mutex_destroy) (__mutex);
	.loc 8 740 52
	jmp	.L32	 #
.L31:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:742:     return 0;
	.loc 8 742 12
	movl	$0, %eax	 #, _10
.L32:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:743: }
	.loc 8 743 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI47:
	ret	
.LFE7449:
	.seh_endproc
	.def	_ZL20__gthread_mutex_lockPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL20__gthread_mutex_lockPx
_ZL20__gthread_mutex_lockPx:
.LFB7450:
	.loc 8 747 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI48:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI49:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __mutex, __mutex
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:748:   if (__gthread_active_p ())
	.loc 8 748 26
	call	_ZL18__gthread_active_pv	 #
	testl	%eax, %eax	 # _1
	setne	%al	 #, retval.228_6
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:748:   if (__gthread_active_p ())
	.loc 8 748 3
	testb	%al, %al	 # retval.228_6
	je	.L34	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:749:     return __gthrw_(pthread_mutex_lock) (__mutex);
	.loc 8 749 41
	movq	16(%rbp), %rax	 # __mutex, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	pthread_mutex_lock	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:749:     return __gthrw_(pthread_mutex_lock) (__mutex);
	.loc 8 749 49
	jmp	.L35	 #
.L34:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:751:     return 0;
	.loc 8 751 12
	movl	$0, %eax	 #, _10
.L35:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:752: }
	.loc 8 752 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI50:
	ret	
.LFE7450:
	.seh_endproc
	.def	_ZL22__gthread_mutex_unlockPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL22__gthread_mutex_unlockPx
_ZL22__gthread_mutex_unlockPx:
.LFB7453:
	.loc 8 777 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI51:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI52:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __mutex, __mutex
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:778:   if (__gthread_active_p ())
	.loc 8 778 26
	call	_ZL18__gthread_active_pv	 #
	testl	%eax, %eax	 # _1
	setne	%al	 #, retval.231_6
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:778:   if (__gthread_active_p ())
	.loc 8 778 3
	testb	%al, %al	 # retval.231_6
	je	.L37	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:779:     return __gthrw_(pthread_mutex_unlock) (__mutex);
	.loc 8 779 43
	movq	16(%rbp), %rax	 # __mutex, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	pthread_mutex_unlock	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:779:     return __gthrw_(pthread_mutex_unlock) (__mutex);
	.loc 8 779 51
	jmp	.L38	 #
.L37:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:781:     return 0;
	.loc 8 781 12
	movl	$0, %eax	 #, _10
.L38:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:782: }
	.loc 8 782 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI53:
	ret	
.LFE7453:
	.seh_endproc
	.def	_ZL24__gthread_cond_broadcastPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL24__gthread_cond_broadcastPx
_ZL24__gthread_cond_broadcastPx:
.LFB7460:
	.loc 8 852 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI54:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI55:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __cond, __cond
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:853:   return __gthrw_(pthread_cond_broadcast) (__cond);
	.loc 8 853 43
	movq	16(%rbp), %rax	 # __cond, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	pthread_cond_broadcast	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:854: }
	.loc 8 854 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI56:
	ret	
.LFE7460:
	.seh_endproc
	.def	_ZL21__gthread_cond_signalPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL21__gthread_cond_signalPx
_ZL21__gthread_cond_signalPx:
.LFB7461:
	.loc 8 858 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI57:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI58:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __cond, __cond
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:859:   return __gthrw_(pthread_cond_signal) (__cond);
	.loc 8 859 40
	movq	16(%rbp), %rax	 # __cond, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	pthread_cond_signal	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:860: }
	.loc 8 860 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI59:
	ret	
.LFE7461:
	.seh_endproc
	.def	_ZL19__gthread_cond_waitPxS_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL19__gthread_cond_waitPxS_
_ZL19__gthread_cond_waitPxS_:
.LFB7462:
	.loc 8 864 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI60:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI61:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __cond, __cond
	movq	%rdx, 24(%rbp)	 # __mutex, __mutex
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:865:   return __gthrw_(pthread_cond_wait) (__cond, __mutex);
	.loc 8 865 38
	movq	24(%rbp), %rdx	 # __mutex, tmp84
	movq	16(%rbp), %rax	 # __cond, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	pthread_cond_wait	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:866: }
	.loc 8 866 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI62:
	ret	
.LFE7462:
	.seh_endproc
	.def	_ZL22__gthread_cond_destroyPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL22__gthread_cond_destroyPx
_ZL22__gthread_cond_destroyPx:
.LFB7465:
	.loc 8 884 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI63:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI64:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __cond, __cond
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:885:   return __gthrw_(pthread_cond_destroy) (__cond);
	.loc 8 885 41
	movq	16(%rbp), %rax	 # __cond, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	pthread_cond_destroy	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:886: }
	.loc 8 886 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI65:
	ret	
.LFE7465:
	.seh_endproc
	.section .rdata,"dr"
	.align 4
_ZN9__gnu_cxxL21__default_lock_policyE:
	.long	2
	.section	.text$_ZNSt12__mutex_baseC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12__mutex_baseC2Ev
	.def	_ZNSt12__mutex_baseC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12__mutex_baseC2Ev
_ZNSt12__mutex_baseC2Ev:
.LFB8921:
	.file 9 "C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h"
	.loc 9 69 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI66:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI67:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB86:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:72:       __GTHREAD_MUTEX_INIT_FUNCTION(&_M_mutex);
	.loc 9 72 36
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL29__gthread_mutex_init_functionPx	 #
.LBE86:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:73:     }
	.loc 9 73 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI68:
	ret	
.LFE8921:
	.def	__gxx_personality_seh0;	.scl	2;	.type	32;	.endef
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8921:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8921-.LLSDACSB8921
.LLSDACSB8921:
.LLSDACSE8921:
	.section	.text$_ZNSt12__mutex_baseC2Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt12__mutex_baseD2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12__mutex_baseD2Ev
	.def	_ZNSt12__mutex_baseD2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12__mutex_baseD2Ev
_ZNSt12__mutex_baseD2Ev:
.LFB8924:
	.loc 9 75 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI69:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI70:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB87:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:75:     ~__mutex_base() noexcept { __gthread_mutex_destroy(&_M_mutex); }
	.loc 9 75 55
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL23__gthread_mutex_destroyPx	 #
.LBE87:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:75:     ~__mutex_base() noexcept { __gthread_mutex_destroy(&_M_mutex); }
	.loc 9 75 68
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI71:
	ret	
.LFE8924:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8924:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8924-.LLSDACSB8924
.LLSDACSB8924:
.LLSDACSE8924:
	.section	.text$_ZNSt12__mutex_baseD2Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt5mutex4lockEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5mutex4lockEv
	.def	_ZNSt5mutex4lockEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5mutex4lockEv
_ZNSt5mutex4lockEv:
.LFB8926:
	.loc 9 98 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI72:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI73:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:100:       int __e = __gthread_mutex_lock(&_M_mutex);
	.loc 9 100 37
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL20__gthread_mutex_lockPx	 #
	movl	%eax, -4(%rbp)	 # _5, __e
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:103:       if (__e)
	.loc 9 103 7
	cmpl	$0, -4(%rbp)	 #, __e
	je	.L51	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:104: 	__throw_system_error(__e);
	.loc 9 104 22
	movl	-4(%rbp), %eax	 # __e, tmp84
	movl	%eax, %ecx	 # tmp84,
	call	_ZSt20__throw_system_errori	 #
.L51:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:105:     }
	.loc 9 105 5
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI74:
	ret	
.LFE8926:
	.seh_endproc
	.section	.text$_ZNSt5mutex6unlockEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5mutex6unlockEv
	.def	_ZNSt5mutex6unlockEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5mutex6unlockEv
_ZNSt5mutex6unlockEv:
.LFB8928:
	.loc 9 115 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI75:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI76:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:118:       __gthread_mutex_unlock(&_M_mutex);
	.loc 9 118 29
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL22__gthread_mutex_unlockPx	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:119:     }
	.loc 9 119 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI77:
	ret	
.LFE8928:
	.seh_endproc
	.section	.text$_ZNSt5mutex13native_handleEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5mutex13native_handleEv
	.def	_ZNSt5mutex13native_handleEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5mutex13native_handleEv
_ZNSt5mutex13native_handleEv:
.LFB8929:
	.loc 9 122 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI78:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI79:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:123:     { return &_M_mutex; }
	.loc 9 123 15
	movq	16(%rbp), %rax	 # this, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:123:     { return &_M_mutex; }
	.loc 9 123 25
	popq	%rbp	 #
.LCFI80:
	ret	
.LFE8929:
	.seh_endproc
	.section	.text$_ZNSt9__condvarC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__condvarC1Ev
	.def	_ZNSt9__condvarC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__condvarC1Ev
_ZNSt9__condvarC1Ev:
.LFB8932:
	.loc 9 132 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI81:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI82:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB88:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:133:     {
	.loc 9 133 5
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$-1, (%rax)	 #, this_2(D)->_M_cond
.LBE88:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:137:     }
	.loc 9 137 5
	nop	
	popq	%rbp	 #
.LCFI83:
	ret	
.LFE8932:
	.seh_endproc
	.section	.text$_ZNSt9__condvarD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__condvarD1Ev
	.def	_ZNSt9__condvarD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__condvarD1Ev
_ZNSt9__condvarD1Ev:
.LFB8935:
	.loc 9 139 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI84:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI85:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB89:
.LBB90:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:141:       int __e __attribute__((__unused__)) = __gthread_cond_destroy(&_M_cond);
	.loc 9 141 67
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL22__gthread_cond_destroyPx	 #
	movl	%eax, -4(%rbp)	 # _7, __e
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:142:       __glibcxx_assert(__e != EBUSY); // threads are still blocked
	.loc 9 142 7
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _2
	je	.L57	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:142:       __glibcxx_assert(__e != EBUSY); // threads are still blocked
	.loc 9 142 7 is_stmt 0 discriminator 1
	cmpl	$16, -4(%rbp)	 #, __e
	jne	.L57	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:142:       __glibcxx_assert(__e != EBUSY); // threads are still blocked
	.loc 9 142 7 discriminator 3
	movl	$1, %eax	 #, iftmp.145_3
	jmp	.L58	 #
.L57:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:142:       __glibcxx_assert(__e != EBUSY); // threads are still blocked
	.loc 9 142 7 discriminator 4
	movl	$0, %eax	 #, iftmp.145_3
.L58:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:142:       __glibcxx_assert(__e != EBUSY); // threads are still blocked
	.loc 9 142 7 discriminator 6
	testb	%al, %al	 # iftmp.145_3
.LBE90:
.LBE89:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:143:     }
	.loc 9 143 5 is_stmt 1 discriminator 6
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI86:
	ret	
.LFE8935:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8935:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8935-.LLSDACSB8935
.LLSDACSB8935:
.LLSDACSE8935:
	.section	.text$_ZNSt9__condvarD1Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt9__condvar4waitERSt5mutex,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__condvar4waitERSt5mutex
	.def	_ZNSt9__condvar4waitERSt5mutex;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__condvar4waitERSt5mutex
_ZNSt9__condvar4waitERSt5mutex:
.LFB8937:
	.loc 9 152 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI87:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI88:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:155: 	= __gthread_cond_wait(&_M_cond, __m.native_handle());
	.loc 9 155 23
	movq	24(%rbp), %rax	 # __m, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt5mutex13native_handleEv	 #
	movq	%rax, %rdx	 #, _1
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZL19__gthread_cond_waitPxS_	 #
	movl	%eax, -4(%rbp)	 # _10, __e
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:156:       __glibcxx_assert(__e == 0);
	.loc 9 156 7
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _3
	je	.L61	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:156:       __glibcxx_assert(__e == 0);
	.loc 9 156 7 is_stmt 0 discriminator 1
	cmpl	$0, -4(%rbp)	 #, __e
	je	.L61	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:156:       __glibcxx_assert(__e == 0);
	.loc 9 156 7 discriminator 3
	movl	$1, %eax	 #, iftmp.230_4
	jmp	.L62	 #
.L61:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:156:       __glibcxx_assert(__e == 0);
	.loc 9 156 7 discriminator 4
	movl	$0, %eax	 #, iftmp.230_4
.L62:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:156:       __glibcxx_assert(__e == 0);
	.loc 9 156 7 discriminator 6
	testb	%al, %al	 # iftmp.230_4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:157:     }
	.loc 9 157 5 is_stmt 1 discriminator 6
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI89:
	ret	
.LFE8937:
	.seh_endproc
	.section	.text$_ZNSt9__condvar10notify_oneEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__condvar10notify_oneEv
	.def	_ZNSt9__condvar10notify_oneEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__condvar10notify_oneEv
_ZNSt9__condvar10notify_oneEv:
.LFB8939:
	.loc 9 175 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI90:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI91:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:177:       int __e __attribute__((__unused__)) = __gthread_cond_signal(&_M_cond);
	.loc 9 177 66
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL21__gthread_cond_signalPx	 #
	movl	%eax, -4(%rbp)	 # _7, __e
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:178:       __glibcxx_assert(__e == 0);
	.loc 9 178 7
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _2
	je	.L65	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:178:       __glibcxx_assert(__e == 0);
	.loc 9 178 7 is_stmt 0 discriminator 1
	cmpl	$0, -4(%rbp)	 #, __e
	je	.L65	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:178:       __glibcxx_assert(__e == 0);
	.loc 9 178 7 discriminator 3
	movl	$1, %eax	 #, iftmp.155_3
	jmp	.L66	 #
.L65:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:178:       __glibcxx_assert(__e == 0);
	.loc 9 178 7 discriminator 4
	movl	$0, %eax	 #, iftmp.155_3
.L66:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:178:       __glibcxx_assert(__e == 0);
	.loc 9 178 7 discriminator 6
	testb	%al, %al	 # iftmp.155_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:179:     }
	.loc 9 179 5 is_stmt 1 discriminator 6
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI92:
	ret	
.LFE8939:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8939:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8939-.LLSDACSB8939
.LLSDACSB8939:
.LLSDACSE8939:
	.section	.text$_ZNSt9__condvar10notify_oneEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt9__condvar10notify_allEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__condvar10notify_allEv
	.def	_ZNSt9__condvar10notify_allEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__condvar10notify_allEv
_ZNSt9__condvar10notify_allEv:
.LFB8940:
	.loc 9 182 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI93:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI94:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:184:       int __e __attribute__((__unused__)) = __gthread_cond_broadcast(&_M_cond);
	.loc 9 184 69
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL24__gthread_cond_broadcastPx	 #
	movl	%eax, -4(%rbp)	 # _7, __e
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:185:       __glibcxx_assert(__e == 0);
	.loc 9 185 7
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _2
	je	.L69	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:185:       __glibcxx_assert(__e == 0);
	.loc 9 185 7 is_stmt 0 discriminator 1
	cmpl	$0, -4(%rbp)	 #, __e
	je	.L69	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:185:       __glibcxx_assert(__e == 0);
	.loc 9 185 7 discriminator 3
	movl	$1, %eax	 #, iftmp.153_3
	jmp	.L70	 #
.L69:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:185:       __glibcxx_assert(__e == 0);
	.loc 9 185 7 discriminator 4
	movl	$0, %eax	 #, iftmp.153_3
.L70:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:185:       __glibcxx_assert(__e == 0);
	.loc 9 185 7 discriminator 6
	testb	%al, %al	 # iftmp.153_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:186:     }
	.loc 9 186 5 is_stmt 1 discriminator 6
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI95:
	ret	
.LFE8940:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8940:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8940-.LLSDACSB8940
.LLSDACSB8940:
.LLSDACSE8940:
	.section	.text$_ZNSt9__condvar10notify_allEv,"x"
	.linkonce discard
	.seh_endproc
	.section .rdata,"dr"
	.align 8
_ZNSt8__detailL25__platform_wait_alignmentE:
	.quad	8
	.section	.text$_ZNSt8__detail14__thread_yieldEv,"x"
	.linkonce discard
	.globl	_ZNSt8__detail14__thread_yieldEv
	.def	_ZNSt8__detail14__thread_yieldEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail14__thread_yieldEv
_ZNSt8__detail14__thread_yieldEv:
.LFB8944:
	.file 10 "C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h"
	.loc 10 129 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI96:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI97:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:131:      __gthread_yield();
	.loc 10 131 21
	call	_ZL15__gthread_yieldv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:133:     }
	.loc 10 133 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI98:
	ret	
.LFE8944:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8944:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8944-.LLSDACSB8944
.LLSDACSB8944:
.LLSDACSE8944:
	.section	.text$_ZNSt8__detail14__thread_yieldEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt8__detail14__thread_relaxEv,"x"
	.linkonce discard
	.globl	_ZNSt8__detail14__thread_relaxEv
	.def	_ZNSt8__detail14__thread_relaxEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail14__thread_relaxEv
_ZNSt8__detail14__thread_relaxEv:
.LFB8945:
	.loc 10 137 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI99:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI100:
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:139:       __builtin_ia32_pause();
	.loc 10 139 27
	rep nop
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:143:     }
	.loc 10 143 5
	nop	
	popq	%rbp	 #
.LCFI101:
	ret	
.LFE8945:
	.seh_endproc
	.section .rdata,"dr"
	.align 4
_ZNSt8__detailL25__atomic_spin_count_relaxE:
	.long	12
	.align 4
_ZNSt8__detailL19__atomic_spin_countE:
	.long	16
	.section	.text$_ZNKSt8__detail21__default_spin_policyclEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt8__detail21__default_spin_policyclEv
	.def	_ZNKSt8__detail21__default_spin_policyclEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt8__detail21__default_spin_policyclEv
_ZNKSt8__detail21__default_spin_policyclEv:
.LFB8946:
	.loc 10 151 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI102:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI103:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:152:       { return false; }
	.loc 10 152 16
	movl	$0, %eax	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:152:       { return false; }
	.loc 10 152 23
	popq	%rbp	 #
.LCFI104:
	ret	
.LFE8946:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv
	.def	_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv
_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv:
.LFB8949:
	.loc 10 208 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI105:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI106:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:209:       { __atomic_fetch_add(&_M_wait, 1, __ATOMIC_SEQ_CST); }
	.loc 10 209 28
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:209:       { __atomic_fetch_add(&_M_wait, 1, __ATOMIC_SEQ_CST); }
	.loc 10 209 27
	lock addq	$1, (%rax)	 #,,* _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:209:       { __atomic_fetch_add(&_M_wait, 1, __ATOMIC_SEQ_CST); }
	.loc 10 209 60
	nop	
	popq	%rbp	 #
.LCFI107:
	ret	
.LFE8949:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv
	.def	_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv
_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv:
.LFB8950:
	.loc 10 212 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI108:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI109:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:213:       { __atomic_fetch_sub(&_M_wait, 1, __ATOMIC_RELEASE); }
	.loc 10 213 28
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:213:       { __atomic_fetch_sub(&_M_wait, 1, __ATOMIC_RELEASE); }
	.loc 10 213 27
	lock subq	$1, (%rax)	 #,,* _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:213:       { __atomic_fetch_sub(&_M_wait, 1, __ATOMIC_RELEASE); }
	.loc 10 213 60
	nop	
	popq	%rbp	 #
.LCFI110:
	ret	
.LFE8950:
	.seh_endproc
	.section	.text$_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv
	.def	_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv
_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv:
.LFB8951:
	.loc 10 216 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI111:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI112:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:219: 	__atomic_load(&_M_wait, &__res, __ATOMIC_SEQ_CST);
	.loc 10 219 16
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:219: 	__atomic_load(&_M_wait, &__res, __ATOMIC_SEQ_CST);
	.loc 10 219 15
	movq	(%rax), %rax	 #* _1, _2
	movq	%rax, -8(%rbp)	 # _2, __res
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:220: 	return __res != 0;
	.loc 10 220 15
	movq	-8(%rbp), %rax	 # __res, __res.151_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:220: 	return __res != 0;
	.loc 10 220 18
	testq	%rax, %rax	 # __res.151_3
	setne	%al	 #, _8
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:221:       }
	.loc 10 221 7
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI113:
	ret	
.LFE8951:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb
	.def	_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb
_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb:
.LFB8952:
	.loc 10 224 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI114:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI115:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __addr, __addr
	movl	%r8d, %eax	 # __all, tmp88
	movl	%r9d, %edx	 # __bare, tmp90
	movb	%al, 32(%rbp)	 # tmp89, __all
	movl	%edx, %eax	 # tmp90, tmp91
	movb	%al, 40(%rbp)	 # tmp91, __bare
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 10 226 8
	movzbl	40(%rbp), %eax	 # __bare, tmp92
	xorl	$1, %eax	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 10 226 6
	testb	%al, %al	 # _1
	je	.L81	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 10 226 28 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp93
	movq	%rax, %rcx	 # tmp93,
	call	_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv	 #
	xorl	$1, %eax	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 10 226 6 discriminator 1
	testb	%al, %al	 # _3
	je	.L81	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 10 226 6 is_stmt 0 discriminator 3
	movl	$1, %eax	 #, iftmp.150_6
	jmp	.L82	 #
.L81:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 10 226 6 discriminator 4
	movl	$0, %eax	 #, iftmp.150_6
.L82:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 10 226 2 is_stmt 1 discriminator 6
	testb	%al, %al	 # iftmp.150_6
	jne	.L86	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:232: 	if (__all)
	.loc 10 232 2
	cmpb	$0, 32(%rbp)	 #, __all
	je	.L85	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:233: 	  _M_cv.notify_all();
	.loc 10 233 20
	movq	16(%rbp), %rax	 # this, tmp94
	addq	$72, %rax	 #, _4
	movq	%rax, %rcx	 # _4,
	call	_ZNSt9__condvar10notify_allEv	 #
	jmp	.L80	 #
.L85:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:235: 	  _M_cv.notify_one();
	.loc 10 235 20
	movq	16(%rbp), %rax	 # this, tmp95
	addq	$72, %rax	 #, _5
	movq	%rax, %rcx	 # _5,
	call	_ZNSt9__condvar10notify_oneEv	 #
	jmp	.L80	 #
.L86:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:227: 	  return;
	.loc 10 227 4
	nop	
.L80:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:237:       }
	.loc 10 237 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI116:
	ret	
.LFE8952:
	.seh_endproc
	.globl	_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w
	.section	.data$_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w,"w"
	.linkonce same_size
	.align 64
_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w:
	.space 2048
	.section	.text$_ZNSt5mutexD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5mutexD1Ev
	.def	_ZNSt5mutexD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5mutexD1Ev
_ZNSt5mutexD1Ev:
.LFB8957:
	.loc 9 92 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI117:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI118:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB91:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:92:     ~mutex() = default;
	.loc 9 92 5
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12__mutex_baseD2Ev	 #
.LBE91:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI119:
	ret	
.LFE8957:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_baseD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail18__waiter_pool_baseD1Ev
	.def	_ZNSt8__detail18__waiter_pool_baseD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_baseD1Ev
_ZNSt8__detail18__waiter_pool_baseD1Ev:
.LFB8959:
	.loc 10 188 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI120:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI121:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB92:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:188:     struct __waiter_pool_base
	.loc 10 188 12
	movq	16(%rbp), %rax	 # this, tmp84
	addq	$72, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt9__condvarD1Ev	 #
	movq	16(%rbp), %rax	 # this, tmp85
	addq	$8, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt5mutexD1Ev	 #
.LBE92:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI122:
	ret	
.LFE8959:
	.seh_endproc
	.section	.text$_ZNSt5mutexC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5mutexC1Ev
	.def	_ZNSt5mutexC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5mutexC1Ev
_ZNSt5mutexC1Ev:
.LFB8963:
	.loc 9 91 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI123:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI124:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB93:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:91:     mutex() noexcept = default;
	.loc 9 91 5
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12__mutex_baseC2Ev	 #
.LBE93:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI125:
	ret	
.LFE8963:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_baseC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail18__waiter_pool_baseC1Ev
	.def	_ZNSt8__detail18__waiter_pool_baseC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_baseC1Ev
_ZNSt8__detail18__waiter_pool_baseC1Ev:
.LFB8965:
	.loc 10 205 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI126:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI127:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB94:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:205:       __waiter_pool_base() = default;
	.loc 10 205 7
	movq	16(%rbp), %rax	 # this, tmp86
	movq	$0, (%rax)	 #, this_6(D)->_M_wait
	movq	16(%rbp), %rax	 # this, tmp87
	addq	$8, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5mutexC1Ev	 #
	movq	16(%rbp), %rax	 # this, tmp88
	movq	$0, 64(%rax)	 #, this_6(D)->_M_ver
	movq	16(%rbp), %rax	 # this, tmp89
	addq	$72, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt9__condvarC1Ev	 #
.LBE94:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI128:
	ret	
.LFE8965:
	.seh_endproc
	.globl	_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w
	.section	.data$_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w,"w"
	.linkonce same_size
	.align 8
_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w:
	.space 8
	.text
	.def	__tcf_0;	.scl	3;	.type	32;	.endef
	.seh_proc	__tcf_0
__tcf_0:
.LFB8966:
	.loc 10 243 36
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI129:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI130:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI131:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI132:
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 10 243 36
	leaq	2048+_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rbx	 #, _1
.L93:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 10 243 36 is_stmt 0 discriminator 4
	leaq	_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rax	 #, tmp83
	cmpq	%rax, %rbx	 # tmp83, _1
	je	.L91	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 10 243 36 discriminator 3
	addq	$-128, %rbx	 #, _1
	movq	%rbx, %rcx	 # _1,
	call	_ZNSt8__detail18__waiter_pool_baseD1Ev	 #
	jmp	.L93	 #
.L91:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 10 243 36
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI133:
	popq	%rbp	 #
.LCFI134:
	ret	
.LFE8966:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_base6_S_forEPKv,"x"
	.linkonce discard
	.globl	_ZNSt8__detail18__waiter_pool_base6_S_forEPKv
	.def	_ZNSt8__detail18__waiter_pool_base6_S_forEPKv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_base6_S_forEPKv
_ZNSt8__detail18__waiter_pool_base6_S_forEPKv:
.LFB8953:
	.loc 10 240 7 is_stmt 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI135:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI136:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI137:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
.LCFI138:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI139:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __addr, __addr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:242: 	constexpr uintptr_t __ct = 16;
	.loc 10 242 22
	movq	$16, -8(%rbp)	 #, __ct
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 10 243 36
	movzbl	_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %eax	 #, _1
	testb	%al, %al	 # _1
	sete	%al	 #, retval.140_15
	testb	%al, %al	 # retval.140_15
	je	.L95	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 10 243 36 is_stmt 0 discriminator 1
	leaq	_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rax	 #, tmp98
	movq	%rax, %rcx	 # tmp98,
	call	__cxa_guard_acquire	 #
	testl	%eax, %eax	 # _2
	setne	%al	 #, retval.141_17
	testb	%al, %al	 # retval.141_17
	je	.L95	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 10 243 36 discriminator 2
	leaq	_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rax	 #, _19
	movl	$15, %ebx	 #, _9
	movq	%rax, %rsi	 # _19, _8
	jmp	.L96	 #
.L97:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 10 243 36 discriminator 5
	movq	%rsi, %rcx	 # _8,
	call	_ZNSt8__detail18__waiter_pool_baseC1Ev	 #
	subq	$1, %rbx	 #, _9
	subq	$-128, %rsi	 #, _8
.L96:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 10 243 36 discriminator 3
	testq	%rbx, %rbx	 # _9
	jns	.L97	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 10 243 36 discriminator 6
	leaq	__tcf_0(%rip), %rax	 #, tmp99
	movq	%rax, %rcx	 # tmp99,
	call	atexit	 #
	leaq	_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rax	 #, tmp100
	movq	%rax, %rcx	 # tmp100,
	call	__cxa_guard_release	 #
.L95:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:244: 	auto __key = (uintptr_t(__addr) >> 2) % __ct;
	.loc 10 244 34 is_stmt 1
	movq	32(%rbp), %rax	 # __addr, __addr.143_6
	shrq	$2, %rax	 #, _7
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:244: 	auto __key = (uintptr_t(__addr) >> 2) % __ct;
	.loc 10 244 7
	andl	$15, %eax	 #, tmp101
	movq	%rax, -16(%rbp)	 # tmp101, __key
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:245: 	return __w[__key];
	.loc 10 245 18
	movq	-16(%rbp), %rax	 # __key, tmp103
	salq	$7, %rax	 #, tmp103
	movq	%rax, %rdx	 # tmp103, tmp102
	leaq	_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rax	 #, tmp104
	addq	%rdx, %rax	 # tmp102, _31
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:246:       }
	.loc 10 246 7
	addq	$48, %rsp	 #,
	popq	%rbx	 #
.LCFI140:
	popq	%rsi	 #
.LCFI141:
	popq	%rbp	 #
.LCFI142:
	ret	
.LFE8953:
	.seh_endproc
	.section	.text$_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy
	.def	_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy
_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy:
.LFB8967:
	.loc 10 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI143:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI144:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __addr, __addr
	movq	%r8, 32(%rbp)	 # __old, __old
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:258: 	__atomic_load(__addr, &__val, __ATOMIC_SEQ_CST);
	.loc 10 258 15
	movq	24(%rbp), %rax	 # __addr, tmp87
	movq	(%rax), %rax	 #, _1
	movq	%rax, -8(%rbp)	 # _1, __val
.LBB95:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:259: 	if (__val == __old)
	.loc 10 259 12
	movq	-8(%rbp), %rax	 # __val, __val.227_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:259: 	if (__val == __old)
	.loc 10 259 2
	cmpq	%rax, 32(%rbp)	 # __val.227_2, __old
	jne	.L101	 #,
.LBB96:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:261: 	    lock_guard<mutex> __l(_M_mtx);
	.loc 10 261 28
	movq	16(%rbp), %rax	 # this, tmp88
	leaq	8(%rax), %rdx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:261: 	    lock_guard<mutex> __l(_M_mtx);
	.loc 10 261 34
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt10lock_guardISt5mutexEC1ERS0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:262: 	    _M_cv.wait(_M_mtx);
	.loc 10 262 16
	movq	16(%rbp), %rax	 # this, tmp90
	addq	$72, %rax	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:262: 	    _M_cv.wait(_M_mtx);
	.loc 10 262 17
	movq	16(%rbp), %rdx	 # this, tmp91
	addq	$8, %rdx	 #, _5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:262: 	    _M_cv.wait(_M_mtx);
	.loc 10 262 16
	movq	%rax, %rcx	 # _4,
	call	_ZNSt9__condvar4waitERSt5mutex	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:263: 	  }
	.loc 10 263 4
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNSt10lock_guardISt5mutexED1Ev	 #
.L101:
.LBE96:
.LBE95:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:265:       }
	.loc 10 265 7
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI145:
	ret	
.LFE8967:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8967:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8967-.LLSDACSB8967
.LLSDACSB8967:
.LLSDACSE8967:
	.section	.text$_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZStorSt12memory_orderSt23__memory_order_modifier,"x"
	.linkonce discard
	.globl	_ZStorSt12memory_orderSt23__memory_order_modifier
	.def	_ZStorSt12memory_orderSt23__memory_order_modifier;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStorSt12memory_orderSt23__memory_order_modifier
_ZStorSt12memory_orderSt23__memory_order_modifier:
.LFB8987:
	.file 11 "C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h"
	.loc 11 99 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI146:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI147:
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # __m, __m
	movl	%edx, 24(%rbp)	 # __mod, __mod
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:100:     return memory_order(int(__m) | int(__mod));
	.loc 11 100 36
	movl	24(%rbp), %eax	 # __mod, __mod.119_1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:100:     return memory_order(int(__m) | int(__mod));
	.loc 11 100 46
	orl	16(%rbp), %eax	 # __m, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:101:   }
	.loc 11 101 3
	popq	%rbp	 #
.LCFI148:
	ret	
.LFE8987:
	.seh_endproc
	.section	.text$_ZStanSt12memory_orderSt23__memory_order_modifier,"x"
	.linkonce discard
	.globl	_ZStanSt12memory_orderSt23__memory_order_modifier
	.def	_ZStanSt12memory_orderSt23__memory_order_modifier;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStanSt12memory_orderSt23__memory_order_modifier
_ZStanSt12memory_orderSt23__memory_order_modifier:
.LFB8988:
	.loc 11 105 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI149:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI150:
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # __m, __m
	movl	%edx, 24(%rbp)	 # __mod, __mod
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:106:     return memory_order(int(__m) & int(__mod));
	.loc 11 106 36
	movl	24(%rbp), %eax	 # __mod, __mod.113_1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:106:     return memory_order(int(__m) & int(__mod));
	.loc 11 106 46
	andl	16(%rbp), %eax	 # __m, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:107:   }
	.loc 11 107 3
	popq	%rbp	 #
.LCFI151:
	ret	
.LFE8988:
	.seh_endproc
	.section	.text$_ZSt24__cmpexch_failure_order2St12memory_order,"x"
	.linkonce discard
	.globl	_ZSt24__cmpexch_failure_order2St12memory_order
	.def	_ZSt24__cmpexch_failure_order2St12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt24__cmpexch_failure_order2St12memory_order
_ZSt24__cmpexch_failure_order2St12memory_order:
.LFB8989:
	.loc 11 112 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI152:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI153:
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 11 113 16
	movl	16(%rbp), %eax	 # __m, __m.115_1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 11 113 40
	cmpl	$4, %eax	 #, __m.115_1
	je	.L107	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:114:       : __m == memory_order_release ? memory_order_relaxed : __m;
	.loc 11 114 13 discriminator 1
	movl	16(%rbp), %eax	 # __m, __m.117_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 11 113 40 discriminator 1
	cmpl	$3, %eax	 #, __m.117_2
	je	.L108	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:114:       : __m == memory_order_release ? memory_order_relaxed : __m;
	.loc 11 114 62 discriminator 3
	leaq	16(%rbp), %rax	 #, __m.118_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 11 113 40 discriminator 3
	movl	(%rax), %eax	 # MEM[(const memory_order &)__m.118_3], iftmp.116_5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:114:       : __m == memory_order_release ? memory_order_relaxed : __m;
	.loc 11 114 62 discriminator 3
	jmp	.L111	 #
.L108:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 11 113 40 discriminator 4
	movl	$0, %eax	 #, iftmp.116_5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:114:       : __m == memory_order_release ? memory_order_relaxed : __m;
	.loc 11 114 62 discriminator 4
	jmp	.L111	 #
.L107:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 11 113 40 discriminator 2
	movl	$2, %eax	 #, iftmp.116_5
.L111:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:115:   }
	.loc 11 115 3 discriminator 1
	popq	%rbp	 #
.LCFI154:
	ret	
.LFE8989:
	.seh_endproc
	.section	.text$_ZSt23__cmpexch_failure_orderSt12memory_order,"x"
	.linkonce discard
	.globl	_ZSt23__cmpexch_failure_orderSt12memory_order
	.def	_ZSt23__cmpexch_failure_orderSt12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt23__cmpexch_failure_orderSt12memory_order
_ZSt23__cmpexch_failure_orderSt12memory_order:
.LFB8990:
	.loc 11 119 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI155:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI156:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI157:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI158:
	.seh_endprologue
	movl	%ecx, 32(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:121:       | __memory_order_modifier(__m & __memory_order_modifier_mask));
	.loc 11 121 37
	movl	32(%rbp), %eax	 # __m, tmp88
	movl	$-65536, %edx	 #,
	movl	%eax, %ecx	 # tmp88,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:121:       | __memory_order_modifier(__m & __memory_order_modifier_mask));
	.loc 11 121 7
	movl	%eax, %ebx	 # _1, _2
	movl	32(%rbp), %eax	 # __m, tmp89
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp89,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, %ecx	 # _3,
	call	_ZSt24__cmpexch_failure_order2St12memory_order	 #
	movl	%ebx, %edx	 # _2,
	movl	%eax, %ecx	 # _4,
	call	_ZStorSt12memory_orderSt23__memory_order_modifier	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:122:   }
	.loc 11 122 3
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI159:
	popq	%rbp	 #
.LCFI160:
	ret	
.LFE8990:
	.seh_endproc
	.section	.text$_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order,"x"
	.linkonce discard
	.globl	_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order
	.def	_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order
_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order:
.LFB8991:
	.loc 11 126 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI161:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI162:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:127:     return (__m & __memory_order_mask) != memory_order_release
	.loc 11 127 17
	movl	16(%rbp), %eax	 # __m, tmp86
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp86,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:128: 	&& (__m & __memory_order_mask) != memory_order_acq_rel;
	.loc 11 128 2
	cmpl	$3, %eax	 #, _1
	je	.L115	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:128: 	&& (__m & __memory_order_mask) != memory_order_acq_rel;
	.loc 11 128 10 discriminator 1
	movl	16(%rbp), %eax	 # __m, tmp87
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp87,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:128: 	&& (__m & __memory_order_mask) != memory_order_acq_rel;
	.loc 11 128 2 discriminator 1
	cmpl	$4, %eax	 #, _2
	je	.L115	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:128: 	&& (__m & __memory_order_mask) != memory_order_acq_rel;
	.loc 11 128 2 is_stmt 0 discriminator 3
	movl	$1, %eax	 #, iftmp.122_3
	jmp	.L116	 #
.L115:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:128: 	&& (__m & __memory_order_mask) != memory_order_acq_rel;
	.loc 11 128 2 discriminator 4
	movl	$0, %eax	 #, iftmp.122_3
.L116:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:129:   }
	.loc 11 129 3 is_stmt 1 discriminator 6
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI163:
	ret	
.LFE8991:
	.seh_endproc
	.section .rdata,"dr"
_ZN6__pstl9execution2v1L3seqE:
	.space 1
_ZN6__pstl9execution2v1L3parE:
	.space 1
_ZN6__pstl9execution2v1L9par_unseqE:
	.space 1
_ZN6__pstl9execution2v1L5unseqE:
	.space 1
	.section	.text$_ZNSt6atomicIbEaSEb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6atomicIbEaSEb
	.def	_ZNSt6atomicIbEaSEb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6atomicIbEaSEb
_ZNSt6atomicIbEaSEb:
.LFB9402:
	.file 12 "C:/msys64/mingw64/include/c++/12.2.0/atomic"
	.loc 12 79 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI164:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI165:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __i, tmp86
	movb	%al, 24(%rbp)	 # tmp87, __i
 # C:/msys64/mingw64/include/c++/12.2.0/atomic:80:     { return _M_base.operator=(__i); }
	.loc 12 80 31
	movq	16(%rbp), %rax	 # this, _1
	movzbl	24(%rbp), %edx	 # __i, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt13__atomic_baseIbEaSEb	 #
 # C:/msys64/mingw64/include/c++/12.2.0/atomic:80:     { return _M_base.operator=(__i); }
	.loc 12 80 38
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI166:
	ret	
.LFE9402:
	.seh_endproc
	.section	.text$_ZNKSt6atomicIbEcvbEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6atomicIbEcvbEv
	.def	_ZNKSt6atomicIbEcvbEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6atomicIbEcvbEv
_ZNKSt6atomicIbEcvbEv:
.LFB9404:
	.loc 12 86 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI167:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI168:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/atomic:87:     { return _M_base.load(); }
	.loc 12 87 26
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, -8(%rbp)	 # _1, this
	movl	$5, -12(%rbp)	 #, __m
.LBB97:
.LBB98:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:484: 	  = __m & __memory_order_mask;
	.loc 11 484 10
	movl	-12(%rbp), %eax	 # __m, tmp91
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp91,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, -16(%rbp)	 # tmp92, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:485: 	__glibcxx_assert(__b != memory_order_release);
	.loc 11 485 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _8
	je	.L121	 #,
	cmpl	$3, -16(%rbp)	 #, __b
	jne	.L121	 #,
	movl	$1, %eax	 #, iftmp.185_9
	jmp	.L122	 #
.L121:
	movl	$0, %eax	 #, iftmp.185_9
.L122:
	testb	%al, %al	 # iftmp.185_9
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:486: 	__glibcxx_assert(__b != memory_order_acq_rel);
	.loc 11 486 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _13
	je	.L124	 #,
	cmpl	$4, -16(%rbp)	 #, __b
	jne	.L124	 #,
	movl	$1, %eax	 #, iftmp.187_14
	jmp	.L125	 #
.L124:
	movl	$0, %eax	 #, iftmp.187_14
.L125:
	testb	%al, %al	 # iftmp.187_14
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 11 488 25
	movq	-8(%rbp), %rax	 # this, _18
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 11 488 24
	movzbl	(%rax), %eax	 #* _18, _19
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 11 488 40
	testb	%al, %al	 # _19
	setne	%al	 #, D.239055
.LBE98:
.LBE97:
 # C:/msys64/mingw64/include/c++/12.2.0/atomic:87:     { return _M_base.load(); }
	.loc 12 87 30
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI169:
	ret	
.LFE9404:
	.seh_endproc
	.section	.text$_ZNSt6thread2idC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6thread2idC1Ev
	.def	_ZNSt6thread2idC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6thread2idC1Ev
_ZNSt6thread2idC1Ev:
.LFB9603:
	.file 13 "C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h"
	.loc 13 85 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI170:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI171:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB99:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:85:       id() noexcept : _M_thread() { }
	.loc 13 85 23
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_thread
.LBE99:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:85:       id() noexcept : _M_thread() { }
	.loc 13 85 37
	nop	
	popq	%rbp	 #
.LCFI172:
	ret	
.LFE9603:
	.seh_endproc
	.section	.text$_ZNSt6thread2idC1Ey,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6thread2idC1Ey
	.def	_ZNSt6thread2idC1Ey;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6thread2idC1Ey
_ZNSt6thread2idC1Ey:
.LFB9606:
	.loc 13 88 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI173:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI174:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __id, __id
.LBB100:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:88:       id(native_handle_type __id) : _M_thread(__id) { }
	.loc 13 88 37
	movq	16(%rbp), %rax	 # this, tmp82
	movq	24(%rbp), %rdx	 # __id, tmp83
	movq	%rdx, (%rax)	 # tmp83, this_2(D)->_M_thread
.LBE100:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:88:       id(native_handle_type __id) : _M_thread(__id) { }
	.loc 13 88 55
	nop	
	popq	%rbp	 #
.LCFI175:
	ret	
.LFE9606:
	.seh_endproc
	.section	.text$_ZNSt6threadD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6threadD1Ev
	.def	_ZNSt6threadD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6threadD1Ev
_ZNSt6threadD1Ev:
.LFB9610:
	.loc 13 148 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI176:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI177:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB101:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:150:       if (joinable())
	.loc 13 150 19
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNKSt6thread8joinableEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:150:       if (joinable())
	.loc 13 150 7
	testb	%al, %al	 # retval.163_4
	je	.L133	 #,
.LBB102:
.LBB103:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/c++config.h:312:     terminate();
	.loc 1 312 14
	call	_ZSt9terminatev	 #
.L133:
.LBE103:
.LBE102:
.LBE101:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:152:     }
	.loc 13 152 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI178:
	ret	
.LFE9610:
	.seh_endproc
	.section	.text$_ZNSt6threadaSEOS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6threadaSEOS_
	.def	_ZNSt6threadaSEOS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6threadaSEOS_
_ZNSt6threadaSEOS_:
.LFB9614:
	.loc 13 161 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI179:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI180:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:163:       if (joinable())
	.loc 13 163 19
	movq	16(%rbp), %rax	 # this, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNKSt6thread8joinableEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:163:       if (joinable())
	.loc 13 163 7
	testb	%al, %al	 # retval.162_4
	je	.L135	 #,
.LBB104:
.LBB105:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/c++config.h:312:     terminate();
	.loc 1 312 14
	call	_ZSt9terminatev	 #
.L135:
.LBE105:
.LBE104:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:165:       swap(__t);
	.loc 13 165 11
	movq	24(%rbp), %rdx	 # __t, tmp86
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt6thread4swapERS_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:166:       return *this;
	.loc 13 166 15
	movq	16(%rbp), %rax	 # this, _7
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:167:     }
	.loc 13 167 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI181:
	ret	
.LFE9614:
	.seh_endproc
	.section	.text$_ZNSt6thread4swapERS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6thread4swapERS_
	.def	_ZNSt6thread4swapERS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6thread4swapERS_
_ZNSt6thread4swapERS_:
.LFB9615:
	.loc 13 170 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI182:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI183:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:171:     { std::swap(_M_id, __t._M_id); }
	.loc 13 171 28
	movq	24(%rbp), %rdx	 # __t, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:171:     { std::swap(_M_id, __t._M_id); }
	.loc 13 171 17
	movq	16(%rbp), %rax	 # this, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:171:     { std::swap(_M_id, __t._M_id); }
	.loc 13 171 16
	movq	%rax, %rcx	 # _2,
	call	_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:171:     { std::swap(_M_id, __t._M_id); }
	.loc 13 171 36
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI184:
	ret	
.LFE9615:
	.seh_endproc
	.section	.text$_ZNKSt6thread8joinableEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6thread8joinableEv
	.def	_ZNKSt6thread8joinableEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6thread8joinableEv
_ZNKSt6thread8joinableEv:
.LFB9617:
	.loc 13 174 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI185:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI186:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:175:     { return !(_M_id == id()); }
	.loc 13 175 22
	leaq	-8(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt6thread2idC1Ev	 #
	movq	-8(%rbp), %rdx	 # D.169368, tmp86
	movq	16(%rbp), %rax	 # this, tmp87
	movq	(%rax), %rax	 # this_4(D)->_M_id, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSteqNSt6thread2idES0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:175:     { return !(_M_id == id()); }
	.loc 13 175 29
	xorl	$1, %eax	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:175:     { return !(_M_id == id()); }
	.loc 13 175 32
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI187:
	ret	
.LFE9617:
	.seh_endproc
	.section	.text$_ZNKSt6thread6get_idEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6thread6get_idEv
	.def	_ZNKSt6thread6get_idEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6thread6get_idEv
_ZNKSt6thread6get_idEv:
.LFB9618:
	.loc 13 184 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI188:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI189:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:185:     { return _M_id; }
	.loc 13 185 14
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->_M_id, D.238468
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:185:     { return _M_id; }
	.loc 13 185 21
	popq	%rbp	 #
.LCFI190:
	ret	
.LFE9618:
	.seh_endproc
	.section	.text$_ZSteqNSt6thread2idES0_,"x"
	.linkonce discard
	.globl	_ZSteqNSt6thread2idES0_
	.def	_ZSteqNSt6thread2idES0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSteqNSt6thread2idES0_
_ZSteqNSt6thread2idES0_:
.LFB9625:
	.loc 13 281 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI191:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI192:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __x, __x
	movq	%rdx, 24(%rbp)	 # __y, __y
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:286:     return __x._M_thread == __y._M_thread;
	.loc 13 286 16
	movq	16(%rbp), %rdx	 # __x._M_thread, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:286:     return __x._M_thread == __y._M_thread;
	.loc 13 286 33
	movq	24(%rbp), %rax	 # __y._M_thread, _2
	cmpq	%rax, %rdx	 # _2, _1
	sete	%al	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:287:   }
	.loc 13 287 3
	popq	%rbp	 #
.LCFI193:
	ret	
.LFE9625:
	.seh_endproc
	.section	.text$_ZNKSt4hashINSt6thread2idEEclERKS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt4hashINSt6thread2idEEclERKS1_
	.def	_ZNKSt4hashINSt6thread2idEEclERKS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt4hashINSt6thread2idEEclERKS1_
_ZNKSt4hashINSt6thread2idEEclERKS1_:
.LFB9626:
	.loc 13 298 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI194:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI195:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __id, __id
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:299:       { return std::_Hash_impl::hash(__id._M_thread); }
	.loc 13 299 43
	movq	24(%rbp), %rax	 # __id, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:299:       { return std::_Hash_impl::hash(__id._M_thread); }
	.loc 13 299 37
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Hash_impl4hashIyEEyRKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:299:       { return std::_Hash_impl::hash(__id._M_thread); }
	.loc 13 299 55
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI196:
	ret	
.LFE9626:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA9626:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE9626-.LLSDACSB9626
.LLSDACSB9626:
.LLSDACSE9626:
	.section	.text$_ZNKSt4hashINSt6thread2idEEclERKS1_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt11this_thread6get_idEv,"x"
	.linkonce discard
	.globl	_ZNSt11this_thread6get_idEv
	.def	_ZNSt11this_thread6get_idEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11this_thread6get_idEv
_ZNSt11this_thread6get_idEv:
.LFB9627:
	.loc 13 307 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI197:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI198:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:313:       return thread::id(__gthread_self());
	.loc 13 313 22
	call	_ZL14__gthread_selfv	 #
	movq	%rax, %rdx	 #, _1
	leaq	-8(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt6thread2idC1Ey	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:313:       return thread::id(__gthread_self());
	.loc 13 313 41
	movq	-8(%rbp), %rax	 # D.169418, D.237651
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:315:     }
	.loc 13 315 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI199:
	ret	
.LFE9627:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA9627:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE9627-.LLSDACSB9627
.LLSDACSB9627:
.LLSDACSE9627:
	.section	.text$_ZNSt11this_thread6get_idEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv
	.def	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv
_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv:
.LFB9701:
	.file 14 "C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h"
	.loc 14 521 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI200:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI201:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 14 522 11
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->__r, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 14 522 16
	popq	%rbp	 #
.LCFI202:
	ret	
.LFE9701:
	.seh_endproc
	.section	.text$_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE
	.def	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE
_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE:
.LFB9700:
	.loc 14 770 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI203:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI204:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI205:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI206:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 9
	movq	32(%rbp), %rax	 # __lhs, tmp86
	movq	(%rax), %rax	 # *__lhs_3(D), tmp87
	movq	%rax, -16(%rbp)	 # tmp87, D.171894
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 26
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rbx	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 33
	movq	40(%rbp), %rax	 # __rhs, tmp89
	movq	(%rax), %rax	 # *__rhs_7(D), tmp90
	movq	%rax, -8(%rbp)	 # tmp90, D.171895
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 50
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51
	cmpq	%rax, %rbx	 # _10, _6
	je	.L151	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 is_stmt 0 discriminator 1
	cmpq	%rax, %rbx	 # _10, _6
	jge	.L152	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 discriminator 3
	movl	$-1, %eax	 #, D.238113
	jmp	.L154	 #
.L152:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 discriminator 4
	movl	$1, %eax	 #, D.238113
	jmp	.L154	 #
.L151:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 discriminator 2
	movl	$0, %eax	 #, D.238113
.L154:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:776:       }
	.loc 14 776 7 is_stmt 1 discriminator 6
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI207:
	popq	%rbp	 #
.LCFI208:
	ret	
.LFE9700:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv,"x"
	.linkonce discard
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv:
.LFB9703:
	.loc 14 607 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI209:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI210:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 14 608 46
	call	_ZNSt6chrono15duration_valuesIxE4zeroEv	 #
	movq	%rax, -8(%rbp)	 # _1, D.172019
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 14 608 11
	leaq	-8(%rbp), %rdx	 #, tmp85
	leaq	-16(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 14 608 48
	movq	-16(%rbp), %rax	 # D.172020, D.238107
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 14 608 51
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI211:
	ret	
.LFE9703:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_:
.LFB9707:
	.loc 14 505 23
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI212:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI213:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __rep, __rep
.LBB106:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 10
	movq	24(%rbp), %rax	 # __rep, tmp83
	movq	(%rax), %rdx	 # *__rep_5(D), _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 6
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->__r
.LBE106:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 37
	nop	
	popq	%rbp	 #
.LCFI214:
	ret	
.LFE9707:
	.seh_endproc
	.section	.text$_ZNSt6chrono15duration_valuesIxE4zeroEv,"x"
	.linkonce discard
	.globl	_ZNSt6chrono15duration_valuesIxE4zeroEv
	.def	_ZNSt6chrono15duration_valuesIxE4zeroEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono15duration_valuesIxE4zeroEv
_ZNSt6chrono15duration_valuesIxE4zeroEv:
.LFB9708:
	.loc 14 416 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI215:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI216:
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:417: 	{ return _Rep(0); }
	.loc 14 417 17
	movl	$0, %eax	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:417: 	{ return _Rep(0); }
	.loc 14 417 20
	popq	%rbp	 #
.LCFI217:
	ret	
.LFE9708:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_
_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_:
.LFB9727:
	.loc 14 505 23
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI218:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI219:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __rep, __rep
.LBB107:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 10
	movq	24(%rbp), %rax	 # __rep, tmp83
	movq	(%rax), %rdx	 # *__rep_5(D), _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 6
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->__r
.LBE107:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 37
	nop	
	popq	%rbp	 #
.LCFI220:
	ret	
.LFE9727:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE:
.LFB9747:
	.loc 14 513 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI221:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI222:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __d, __d
.LBB108:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 33
	movq	24(%rbp), %rax	 # __d, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -8(%rbp)	 # tmp85, D.175306
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 44
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 6
	movq	16(%rbp), %rdx	 # this, tmp87
	movq	%rax, (%rdx)	 # _1, this_3(D)->__r
.LBE108:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 50
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI223:
	ret	
.LFE9747:
	.seh_endproc
	.section	.text$_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE
	.def	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE
_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE:
.LFB9743:
	.loc 14 770 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI224:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI225:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI226:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI227:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 9
	movq	32(%rbp), %rax	 # __lhs, tmp86
	movq	(%rax), %rax	 # *__lhs_3(D), tmp87
	movq	%rax, -16(%rbp)	 # tmp87, D.175197
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 26
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rbx	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 33
	movq	40(%rbp), %rdx	 # __rhs, tmp89
	leaq	-8(%rbp), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 50
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51
	cmpq	%rax, %rbx	 # _10, _6
	je	.L163	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 is_stmt 0 discriminator 3
	cmpq	%rax, %rbx	 # _10, _6
	jge	.L164	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 discriminator 5
	movl	$-1, %eax	 #, D.238052
	jmp	.L166	 #
.L164:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 discriminator 6
	movl	$1, %eax	 #, D.238052
	jmp	.L166	 #
.L163:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 discriminator 4
	movl	$0, %eax	 #, D.238052
.L166:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:776:       }
	.loc 14 776 7 is_stmt 1 discriminator 8
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI228:
	popq	%rbp	 #
.LCFI229:
	ret	
.LFE9743:
	.seh_endproc
	.section	.text$_ZNSt6threadC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6threadC1Ev
	.def	_ZNSt6threadC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6threadC1Ev
_ZNSt6threadC1Ev:
.LFB9886:
	.loc 13 120 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI230:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI231:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB109:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:120:     thread() noexcept = default;
	.loc 13 120 5
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6thread2idC1Ev	 #
.LBE109:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI232:
	ret	
.LFE9886:
	.seh_endproc
	.section	.text$_ZNK17ID2D1RenderTarget14GetPixelFormatEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK17ID2D1RenderTarget14GetPixelFormatEv
	.def	_ZNK17ID2D1RenderTarget14GetPixelFormatEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK17ID2D1RenderTarget14GetPixelFormatEv
_ZNK17ID2D1RenderTarget14GetPixelFormatEv:
.LFB10606:
	.file 15 "C:/msys64/mingw64/include/d2d1.h"
	.loc 15 752 41
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI233:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI234:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/d2d1.h:754:         GetPixelFormat(&__ret);
	.loc 15 754 23
	movq	16(%rbp), %rax	 # this, tmp87
	movq	(%rax), %rax	 # this_5(D)->D.199359.D.198587._vptr.IUnknown, _1
	addq	$400, %rax	 #, _2
	movq	(%rax), %r8	 # *_2, _3
	leaq	-8(%rbp), %rdx	 #, tmp88
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	*%r8	 # _3
.LVL1:
 # C:/msys64/mingw64/include/d2d1.h:755:         return __ret;
	.loc 15 755 16
	movq	-8(%rbp), %rax	 # __ret, D.237332
 # C:/msys64/mingw64/include/d2d1.h:756:     }
	.loc 15 756 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI235:
	ret	
.LFE10606:
	.seh_endproc
	.section	.text$_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_
	.def	_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_
_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_:
.LFB10637:
	.loc 15 899 10
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI236:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI237:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # bitmap, bitmap
	movq	%r8, 32(%rbp)	 # destinationRectangle, destinationRectangle
	movss	%xmm3, 40(%rbp)	 # opacity, opacity
 # C:/msys64/mingw64/include/d2d1.h:900:         DrawBitmap(bitmap, &destinationRectangle, opacity, interpolationMode, sourceRectangle);
	.loc 15 900 19
	movq	16(%rbp), %rax	 # this, tmp85
	movq	(%rax), %rax	 # this_5(D)->D.199359.D.198587._vptr.IUnknown, _1
	addq	$208, %rax	 #, _2
	movq	(%rax), %r9	 # *_2, _3
	movss	40(%rbp), %xmm0	 # opacity, tmp86
	movq	32(%rbp), %r8	 # destinationRectangle, tmp87
	movq	24(%rbp), %rdx	 # bitmap, tmp88
	movq	16(%rbp), %rax	 # this, tmp89
	movq	56(%rbp), %rcx	 # sourceRectangle, tmp90
	movq	%rcx, 40(%rsp)	 # tmp90,
	movl	48(%rbp), %ecx	 # interpolationMode, tmp91
	movl	%ecx, 32(%rsp)	 # tmp91,
	movaps	%xmm0, %xmm3	 # tmp86,
	movq	%rax, %rcx	 # tmp89,
	call	*%r9	 # _3
.LVL2:
 # C:/msys64/mingw64/include/d2d1.h:901:     }
	.loc 15 901 5
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI238:
	ret	
.LFE10637:
	.seh_endproc
	.section	.text$_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE,"x"
	.linkonce discard
	.align 2
	.globl	_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE
	.def	_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE
_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE:
.LFB10642:
	.loc 15 919 10
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI239:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI240:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # clearColor, clearColor
 # C:/msys64/mingw64/include/d2d1.h:920:         return Clear(&clearColor);
	.loc 15 920 21
	movq	16(%rbp), %rax	 # this, tmp85
	movq	(%rax), %rax	 # this_5(D)->D.199359.D.198587._vptr.IUnknown, _1
	addq	$376, %rax	 #, _2
	movq	(%rax), %r8	 # *_2, _3
	movq	24(%rbp), %rdx	 # clearColor, tmp86
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	*%r8	 # _3
.LVL3:
 # C:/msys64/mingw64/include/d2d1.h:920:         return Clear(&clearColor);
	.loc 15 920 33
	nop	
 # C:/msys64/mingw64/include/d2d1.h:921:     }
	.loc 15 921 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI241:
	ret	
.LFE10642:
	.seh_endproc
	.section	.text$_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget,"x"
	.linkonce discard
	.align 2
	.globl	_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget
	.def	_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget
_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget:
.LFB10691:
	.loc 15 1610 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI242:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI243:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # renderTargetProperties, renderTargetProperties
	movq	%r8, 32(%rbp)	 # hwndRenderTargetProperties, hwndRenderTargetProperties
	movq	%r9, 40(%rbp)	 # hwndRenderTarget, hwndRenderTarget
 # C:/msys64/mingw64/include/d2d1.h:1611:         return CreateHwndRenderTarget(&renderTargetProperties, &hwndRenderTargetProperties, hwndRenderTarget);
	.loc 15 1611 38
	movq	16(%rbp), %rax	 # this, tmp87
	movq	(%rax), %rax	 # this_5(D)->D.200338._vptr.IUnknown, _1
	addq	$112, %rax	 #, _2
	movq	(%rax), %r10	 # *_2, _3
	movq	40(%rbp), %r8	 # hwndRenderTarget, tmp88
	movq	32(%rbp), %rcx	 # hwndRenderTargetProperties, tmp89
	movq	24(%rbp), %rdx	 # renderTargetProperties, tmp90
	movq	16(%rbp), %rax	 # this, tmp91
	movq	%r8, %r9	 # tmp88,
	movq	%rcx, %r8	 # tmp89,
	movq	%rax, %rcx	 # tmp91,
	call	*%r10	 # _3
.LVL4:
 # C:/msys64/mingw64/include/d2d1.h:1612:     }
	.loc 15 1612 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI244:
	ret	
.LFE10691:
	.seh_endproc
	.section	.text$_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U,"x"
	.linkonce discard
	.align 2
	.globl	_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U
	.def	_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U
_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U:
.LFB10696:
	.loc 15 1843 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI245:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI246:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # pixelSize, pixelSize
 # C:/msys64/mingw64/include/d2d1.h:1844:         return Resize(&pixelSize);
	.loc 15 1844 22
	movq	16(%rbp), %rax	 # this, tmp87
	movq	(%rax), %rax	 # this_5(D)->D.200562.D.199359.D.198587._vptr.IUnknown, _1
	addq	$464, %rax	 #, _2
	movq	(%rax), %r8	 # *_2, _3
	movq	24(%rbp), %rdx	 # pixelSize, tmp88
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	*%r8	 # _3
.LVL5:
 # C:/msys64/mingw64/include/d2d1.h:1845:     }
	.loc 15 1845 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI247:
	ret	
.LFE10696:
	.seh_endproc
	.globl	_ZN16__mingw_uuidof_sI12ID2D1FactoryE11__uuid_instE
	.section	.rdata$_ZN16__mingw_uuidof_sI12ID2D1FactoryE11__uuid_instE,"dr"
	.linkonce same_size
	.align 16
_ZN16__mingw_uuidof_sI12ID2D1FactoryE11__uuid_instE:
 # Data1:
	.long	102048327
 # Data2:
	.word	28496
 # Data3:
	.word	18010
 # Data4:
	.ascii "\222E\21\213\375;`\7"
	.section	.text$_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv,"x"
	.linkonce discard
	.globl	_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv
	.def	_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv
_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv:
.LFB10722:
	.loc 15 2452 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI248:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI249:
	.seh_endprologue
 # C:/msys64/mingw64/include/d2d1.h:2452: __CRT_UUID_DECL(ID2D1Factory, 0x06152247,0x6f50,0x465a,0x92,0x45,0x11,0x8b,0xfd,0x3b,0x60,0x07)
	.loc 15 2452 1
	leaq	_ZN16__mingw_uuidof_sI12ID2D1FactoryE11__uuid_instE(%rip), %rax	 #, _1
	popq	%rbp	 #
.LCFI250:
	ret	
.LFE10722:
	.seh_endproc
	.section	.text$_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv,"x"
	.linkonce discard
	.globl	_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv
	.def	_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv
_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv:
.LFB10823:
	.loc 15 2515 90
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI251:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI252:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # factoryType, factoryType
	movq	%rdx, 24(%rbp)	 # riid, riid
	movq	%r8, 32(%rbp)	 # ppv, ppv
 # C:/msys64/mingw64/include/d2d1.h:2516:     return D2D1CreateFactory(factoryType, riid, NULL, ppv);
	.loc 15 2516 29
	movq	32(%rbp), %rcx	 # ppv, tmp84
	movq	24(%rbp), %rdx	 # riid, tmp85
	movl	16(%rbp), %eax	 # factoryType, tmp86
	movq	%rcx, %r9	 # tmp84,
	movl	$0, %r8d	 #,
	movl	%eax, %ecx	 # tmp86,
	call	D2D1CreateFactory	 #
 # C:/msys64/mingw64/include/d2d1.h:2517: }
	.loc 15 2517 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI253:
	ret	
.LFE10823:
	.seh_endproc
	.globl	Factory
	.bss
	.align 8
Factory:
	.space 8
	.globl	RenderTarget
	.align 8
RenderTarget:
	.space 8
	.globl	Bitmap
	.align 8
Bitmap:
	.space 8
	.globl	pixelBuffer
	.align 8
pixelBuffer:
	.space 8
	.globl	elementColor
	.align 8
elementColor:
	.space 8
	.section .rdata,"dr"
	.align 2
_ZL9CELL_NONE:
	.space 2
	.align 2
_ZL8CELL_AIR:
	.word	1
	.align 2
_ZL10CELL_WATER:
	.word	2
	.align 2
_ZL9CELL_WOOD:
	.word	4
	.align 2
_ZL9CELL_FIRE:
	.word	8
	.align 2
_ZL10CELL_METAL:
	.word	16
	.align 2
_ZL11CELL_CUSTOM:
	.word	32
	.align 2
_ZL10CELL_DIRTY:
	.word	64
	.align 2
_ZL11CELL_ACTIVE:
	.word	128
	.align 2
_ZL11CELL_STATIC:
	.word	256
	.align 2
_ZL12CELL_VISIBLE:
	.word	512
	.align 2
_ZL10CELL_SOLID:
	.word	1024
	.align 2
_ZL16CELL_ELEMENT_ALL:
	.word	63
_ZL8KEY_DOWN:
	.byte	1
_ZL11KEY_PRESSED:
	.byte	2
_ZL8KEY_HELD:
	.byte	4
_ZL12KEY_RELEASED:
	.byte	8
_ZL8KEY_PREV:
	.byte	16
	.align 2
_ZL13MATERIAL_SIZE:
	.word	16
	.text
	.globl	_Z12ElementIndext
	.def	_Z12ElementIndext;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z12ElementIndext
_Z12ElementIndext:
.LFB10884:
	.file 16 "src/main.cpp"
	.loc 16 79 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI254:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI255:
	.seh_endprologue
	movl	%ecx, %eax	 # CELL, tmp85
	movw	%ax, 16(%rbp)	 # tmp86, CELL
 # src\main.cpp:80: 	switch(CELL)
	.loc 16 80 9
	movzwl	16(%rbp), %eax	 # CELL, _1
 # src\main.cpp:80: 	switch(CELL)
	.loc 16 80 2
	cmpl	$32, %eax	 #, _1
	ja	.L182	 #,
	movl	%eax, %eax	 # _1, tmp87
	leaq	0(,%rax,4), %rdx	 #, tmp88
	leaq	.L184(%rip), %rax	 #, tmp89
	movl	(%rdx,%rax), %eax	 #, tmp90
	cltq
	leaq	.L184(%rip), %rdx	 #, tmp93
	addq	%rdx, %rax	 # tmp93, tmp92
	jmp	*%rax	 # tmp92
	.section .rdata,"dr"
	.align 4
.L184:
	.long	.L182-.L184
	.long	.L189-.L184
	.long	.L188-.L184
	.long	.L182-.L184
	.long	.L187-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L186-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L185-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L182-.L184
	.long	.L183-.L184
	.text
.L189:
 # src\main.cpp:82: 		case CELL_AIR:    return 0;
	.loc 16 82 28
	movl	$0, %eax	 #, _2
	jmp	.L181	 #
.L188:
 # src\main.cpp:83: 		case CELL_WATER:  return 1;
	.loc 16 83 28
	movl	$1, %eax	 #, _2
	jmp	.L181	 #
.L187:
 # src\main.cpp:84: 		case CELL_WOOD:   return 2;
	.loc 16 84 28
	movl	$2, %eax	 #, _2
	jmp	.L181	 #
.L186:
 # src\main.cpp:85: 		case CELL_FIRE:   return 3;
	.loc 16 85 28
	movl	$3, %eax	 #, _2
	jmp	.L181	 #
.L185:
 # src\main.cpp:86: 		case CELL_METAL:  return 4;
	.loc 16 86 28
	movl	$4, %eax	 #, _2
	jmp	.L181	 #
.L183:
 # src\main.cpp:87: 		case CELL_CUSTOM: return 5;
	.loc 16 87 28
	movl	$5, %eax	 #, _2
	jmp	.L181	 #
.L182:
.L181:
 # src\main.cpp:89: }
	.loc 16 89 1
	popq	%rbp	 #
.LCFI256:
	ret	
.LFE10884:
	.seh_endproc
	.section	.text$_ZN5Vec3DC1Efff,"x"
	.linkonce discard
	.align 2
	.globl	_ZN5Vec3DC1Efff
	.def	_ZN5Vec3DC1Efff;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5Vec3DC1Efff
_ZN5Vec3DC1Efff:
.LFB10890:
	.loc 16 95 29
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI257:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI258:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movss	%xmm1, 24(%rbp)	 # _x, _x
	movss	%xmm2, 32(%rbp)	 # _y, _y
	movss	%xmm3, 40(%rbp)	 # _z, _z
.LBB110:
 # src\main.cpp:95: 	float x; float y; float z; Vec3D(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}
	.loc 16 95 67
	movq	16(%rbp), %rax	 # this, tmp82
	movss	24(%rbp), %xmm0	 # _x, tmp83
	movss	%xmm0, (%rax)	 # tmp83, this_2(D)->x
 # src\main.cpp:95: 	float x; float y; float z; Vec3D(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}
	.loc 16 95 74
	movq	16(%rbp), %rax	 # this, tmp84
	movss	32(%rbp), %xmm0	 # _y, tmp85
	movss	%xmm0, 4(%rax)	 # tmp85, this_2(D)->y
 # src\main.cpp:95: 	float x; float y; float z; Vec3D(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}
	.loc 16 95 81
	movq	16(%rbp), %rax	 # this, tmp86
	movss	40(%rbp), %xmm0	 # _z, tmp87
	movss	%xmm0, 8(%rax)	 # tmp87, this_2(D)->z
.LBE110:
 # src\main.cpp:95: 	float x; float y; float z; Vec3D(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}
	.loc 16 95 88
	nop	
	popq	%rbp	 #
.LCFI259:
	ret	
.LFE10890:
	.seh_endproc
	.section	.text$_ZNK5Vec3DmiERKS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK5Vec3DmiERKS_
	.def	_ZNK5Vec3DmiERKS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK5Vec3DmiERKS_
_ZNK5Vec3DmiERKS_:
.LFB10891:
	.loc 16 97 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI260:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI261:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
	movq	%r8, 32(%rbp)	 # other, other
 # src\main.cpp:97: 	Vec3D operator-(const Vec3D& other) const {return {x - other.x, y - other.y, z - other.z};}
	.loc 16 97 53
	movq	24(%rbp), %rax	 # this, tmp91
	movss	(%rax), %xmm0	 # this_11(D)->x, _1
 # src\main.cpp:97: 	Vec3D operator-(const Vec3D& other) const {return {x - other.x, y - other.y, z - other.z};}
	.loc 16 97 63
	movq	32(%rbp), %rax	 # other, tmp92
	movss	(%rax), %xmm1	 # other_12(D)->x, _2
 # src\main.cpp:97: 	Vec3D operator-(const Vec3D& other) const {return {x - other.x, y - other.y, z - other.z};}
	.loc 16 97 90
	movaps	%xmm0, %xmm4	 # _1, _1
	subss	%xmm1, %xmm4	 # _2, _1
 # src\main.cpp:97: 	Vec3D operator-(const Vec3D& other) const {return {x - other.x, y - other.y, z - other.z};}
	.loc 16 97 66
	movq	24(%rbp), %rax	 # this, tmp93
	movss	4(%rax), %xmm0	 # this_11(D)->y, _4
 # src\main.cpp:97: 	Vec3D operator-(const Vec3D& other) const {return {x - other.x, y - other.y, z - other.z};}
	.loc 16 97 76
	movq	32(%rbp), %rax	 # other, tmp94
	movss	4(%rax), %xmm1	 # other_12(D)->y, _5
 # src\main.cpp:97: 	Vec3D operator-(const Vec3D& other) const {return {x - other.x, y - other.y, z - other.z};}
	.loc 16 97 90
	movaps	%xmm0, %xmm2	 # _4, _4
	subss	%xmm1, %xmm2	 # _5, _4
 # src\main.cpp:97: 	Vec3D operator-(const Vec3D& other) const {return {x - other.x, y - other.y, z - other.z};}
	.loc 16 97 79
	movq	24(%rbp), %rax	 # this, tmp95
	movss	8(%rax), %xmm0	 # this_11(D)->z, _7
 # src\main.cpp:97: 	Vec3D operator-(const Vec3D& other) const {return {x - other.x, y - other.y, z - other.z};}
	.loc 16 97 89
	movq	32(%rbp), %rax	 # other, tmp96
	movss	8(%rax), %xmm1	 # other_12(D)->z, _8
 # src\main.cpp:97: 	Vec3D operator-(const Vec3D& other) const {return {x - other.x, y - other.y, z - other.z};}
	.loc 16 97 90
	subss	%xmm1, %xmm0	 # _8, _9
	movq	16(%rbp), %rax	 # .result_ptr, tmp97
	movaps	%xmm0, %xmm3	 # _9,
	movaps	%xmm4, %xmm1	 # _3,
	movq	%rax, %rcx	 # tmp97,
	call	_ZN5Vec3DC1Efff	 #
 # src\main.cpp:97: 	Vec3D operator-(const Vec3D& other) const {return {x - other.x, y - other.y, z - other.z};}
	.loc 16 97 92
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI262:
	ret	
.LFE10891:
	.seh_endproc
	.section	.text$_ZNK5Vec3DmlEf,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK5Vec3DmlEf
	.def	_ZNK5Vec3DmlEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK5Vec3DmlEf
_ZNK5Vec3DmlEf:
.LFB10892:
	.loc 16 98 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI263:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI264:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
	movss	%xmm2, 32(%rbp)	 # scalar, scalar
 # src\main.cpp:98:     Vec3D operator*(float scalar      ) const {return {x * scalar, y * scalar, z * scalar};   }
	.loc 16 98 56
	movq	24(%rbp), %rax	 # this, tmp88
	movss	(%rax), %xmm0	 # this_8(D)->x, _1
 # src\main.cpp:98:     Vec3D operator*(float scalar      ) const {return {x * scalar, y * scalar, z * scalar};   }
	.loc 16 98 90
	movaps	%xmm0, %xmm1	 # _1, _1
	mulss	32(%rbp), %xmm1	 # scalar, _1
 # src\main.cpp:98:     Vec3D operator*(float scalar      ) const {return {x * scalar, y * scalar, z * scalar};   }
	.loc 16 98 68
	movq	24(%rbp), %rax	 # this, tmp89
	movss	4(%rax), %xmm0	 # this_8(D)->y, _3
 # src\main.cpp:98:     Vec3D operator*(float scalar      ) const {return {x * scalar, y * scalar, z * scalar};   }
	.loc 16 98 90
	movaps	%xmm0, %xmm2	 # _3, _3
	mulss	32(%rbp), %xmm2	 # scalar, _3
 # src\main.cpp:98:     Vec3D operator*(float scalar      ) const {return {x * scalar, y * scalar, z * scalar};   }
	.loc 16 98 80
	movq	24(%rbp), %rax	 # this, tmp90
	movss	8(%rax), %xmm0	 # this_8(D)->z, _5
 # src\main.cpp:98:     Vec3D operator*(float scalar      ) const {return {x * scalar, y * scalar, z * scalar};   }
	.loc 16 98 90
	mulss	32(%rbp), %xmm0	 # scalar, _6
	movq	16(%rbp), %rax	 # .result_ptr, tmp91
	movaps	%xmm0, %xmm3	 # _6,
	movq	%rax, %rcx	 # tmp91,
	call	_ZN5Vec3DC1Efff	 #
 # src\main.cpp:98:     Vec3D operator*(float scalar      ) const {return {x * scalar, y * scalar, z * scalar};   }
	.loc 16 98 95
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI265:
	ret	
.LFE10892:
	.seh_endproc
	.section	.text$_ZNK5Vec3DplERKS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK5Vec3DplERKS_
	.def	_ZNK5Vec3DplERKS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK5Vec3DplERKS_
_ZNK5Vec3DplERKS_:
.LFB10893:
	.loc 16 99 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI266:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI267:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
	movq	%r8, 32(%rbp)	 # other, other
 # src\main.cpp:99:     Vec3D operator+(const Vec3D& other) const {return {x + other.x, y + other.y, z + other.z};}
	.loc 16 99 56
	movq	24(%rbp), %rax	 # this, tmp91
	movss	(%rax), %xmm1	 # this_11(D)->x, _1
 # src\main.cpp:99:     Vec3D operator+(const Vec3D& other) const {return {x + other.x, y + other.y, z + other.z};}
	.loc 16 99 66
	movq	32(%rbp), %rax	 # other, tmp92
	movss	(%rax), %xmm0	 # other_12(D)->x, _2
 # src\main.cpp:99:     Vec3D operator+(const Vec3D& other) const {return {x + other.x, y + other.y, z + other.z};}
	.loc 16 99 93
	movaps	%xmm1, %xmm4	 # _1, _1
	addss	%xmm0, %xmm4	 # _2, _1
 # src\main.cpp:99:     Vec3D operator+(const Vec3D& other) const {return {x + other.x, y + other.y, z + other.z};}
	.loc 16 99 69
	movq	24(%rbp), %rax	 # this, tmp93
	movss	4(%rax), %xmm1	 # this_11(D)->y, _4
 # src\main.cpp:99:     Vec3D operator+(const Vec3D& other) const {return {x + other.x, y + other.y, z + other.z};}
	.loc 16 99 79
	movq	32(%rbp), %rax	 # other, tmp94
	movss	4(%rax), %xmm0	 # other_12(D)->y, _5
 # src\main.cpp:99:     Vec3D operator+(const Vec3D& other) const {return {x + other.x, y + other.y, z + other.z};}
	.loc 16 99 93
	movaps	%xmm1, %xmm2	 # _4, _4
	addss	%xmm0, %xmm2	 # _5, _4
 # src\main.cpp:99:     Vec3D operator+(const Vec3D& other) const {return {x + other.x, y + other.y, z + other.z};}
	.loc 16 99 82
	movq	24(%rbp), %rax	 # this, tmp95
	movss	8(%rax), %xmm1	 # this_11(D)->z, _7
 # src\main.cpp:99:     Vec3D operator+(const Vec3D& other) const {return {x + other.x, y + other.y, z + other.z};}
	.loc 16 99 92
	movq	32(%rbp), %rax	 # other, tmp96
	movss	8(%rax), %xmm0	 # other_12(D)->z, _8
 # src\main.cpp:99:     Vec3D operator+(const Vec3D& other) const {return {x + other.x, y + other.y, z + other.z};}
	.loc 16 99 93
	addss	%xmm1, %xmm0	 # _7, _9
	movq	16(%rbp), %rax	 # .result_ptr, tmp97
	movaps	%xmm0, %xmm3	 # _9,
	movaps	%xmm4, %xmm1	 # _3,
	movq	%rax, %rcx	 # tmp97,
	call	_ZN5Vec3DC1Efff	 #
 # src\main.cpp:99:     Vec3D operator+(const Vec3D& other) const {return {x + other.x, y + other.y, z + other.z};}
	.loc 16 99 95
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI268:
	ret	
.LFE10893:
	.seh_endproc
	.section	.text$_ZN6MATRIX4cellC1Et,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX4cellC1Et
	.def	_ZN6MATRIX4cellC1Et;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX4cellC1Et
_ZN6MATRIX4cellC1Et:
.LFB10905:
	.loc 16 136 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI269:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI270:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # _MaterialType, tmp82
	movw	%ax, 24(%rbp)	 # tmp83, _MaterialType
.LBB111:
 # src\main.cpp:136: 		cell(s8flagcell _MaterialType) : MaterialType(_MaterialType) {}
	.loc 16 136 36
	movq	16(%rbp), %rax	 # this, tmp84
	movzwl	24(%rbp), %edx	 # _MaterialType, tmp85
	movw	%dx, (%rax)	 # tmp85, this_2(D)->MaterialType
.LBE111:
 # src\main.cpp:136: 		cell(s8flagcell _MaterialType) : MaterialType(_MaterialType) {}
	.loc 16 136 65
	nop	
	popq	%rbp	 #
.LCFI271:
	ret	
.LFE10905:
	.seh_endproc
	.section	.text$_ZN6MATRIX4cellD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX4cellD1Ev
	.def	_ZN6MATRIX4cellD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX4cellD1Ev
_ZN6MATRIX4cellD1Ev:
.LFB10908:
	.loc 16 138 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI272:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI273:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB112:
 # src\main.cpp:140: 			MaterialType &= CELL_NONE;
	.loc 16 140 17
	movq	16(%rbp), %rax	 # this, tmp82
	movw	$0, (%rax)	 #, this_2(D)->MaterialType
.LBE112:
 # src\main.cpp:141: 		}
	.loc 16 141 3
	nop	
	popq	%rbp	 #
.LCFI274:
	ret	
.LFE10908:
	.seh_endproc
	.section	.text$_ZN6MATRIX18MaterialAttributesC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX18MaterialAttributesC1Ev
	.def	_ZN6MATRIX18MaterialAttributesC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX18MaterialAttributesC1Ev
_ZN6MATRIX18MaterialAttributesC1Ev:
.LFB10912:
	.loc 16 117 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI275:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI276:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB113:
 # src\main.cpp:117: 	struct MaterialAttributes
	.loc 16 117 9
	movq	16(%rbp), %rax	 # this, tmp83
	pxor	%xmm0, %xmm0	 # tmp84
	movss	%xmm0, 28(%rax)	 # tmp84, this_3(D)->temperature
	movq	16(%rbp), %rax	 # this, tmp85
	addq	$32, %rax	 #, _1
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _1,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp86
	pxor	%xmm0, %xmm0	 # tmp87
	movsd	%xmm0, 48(%rax)	 # tmp87, this_3(D)->pressure
	movq	16(%rbp), %rax	 # this, tmp88
	movq	$0, 56(%rax)	 #, this_3(D)->name
.LBE113:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI277:
	ret	
.LFE10912:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_
	.def	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_
_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_:
.LFB10914:
	.file 17 "C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h"
	.loc 17 235 24
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI278:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI279:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.206442, D.206442
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:235:       __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
	.loc 17 235 24
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.206442, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_	 #
	movq	16(%rbp), %rax	 # this, _7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI280:
	ret	
.LFE10914:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_
	.def	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_
_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_:
.LFB10913:
	.loc 17 680 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI281:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI282:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.206709, D.206709
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:680:       operator=(unique_ptr&&) = default;
	.loc 17 680 7
	movq	24(%rbp), %rdx	 # D.206709, _1
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_	 #
	movq	16(%rbp), %rax	 # this, _7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI283:
	ret	
.LFE10913:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC6:
	.ascii "-> cells set to: element::air\12\0"
.LC7:
	.ascii "-> elements::name... \12\0"
.LC8:
	.ascii "air\0"
.LC9:
	.ascii "water\0"
.LC10:
	.ascii "wood\0"
.LC11:
	.ascii "fire\0"
.LC12:
	.ascii "metal\0"
.LC13:
	.ascii "Custom\0"
.LC14:
	.ascii "-> elements::density... \12\0"
.LC19:
	.ascii "-> elements::friction... \12\0"
	.align 8
.LC24:
	.ascii "-> elements::ThermalConductivity... \12\0"
	.align 8
.LC28:
	.ascii "-> elements::specificHeat... \12\0"
.LC33:
	.ascii "-> elements::restitution... \12\0"
.LC36:
	.ascii "-> elements::hardness... \12\0"
	.align 8
.LC38:
	.ascii "matrix initialized: CELLS: [%d] BPC: [%d]\12\12\0"
	.section	.text$_ZN6MATRIX10InitMatrixEjjj,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX10InitMatrixEjjj
	.def	_ZN6MATRIX10InitMatrixEjjj;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX10InitMatrixEjjj
_ZN6MATRIX10InitMatrixEjjj:
.LFB10909:
	.loc 16 146 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI284:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI285:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI286:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI287:
	subq	$104, %rsp	 #,
	.seh_stackalloc	104
.LCFI288:
	leaq	96(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 96
.LCFI289:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # this, this
	movl	%edx, 56(%rbp)	 # width, width
	movl	%r8d, 64(%rbp)	 # height, height
	movl	%r9d, 72(%rbp)	 # depth, depth
 # src\main.cpp:148: 		w = width; h = height; d = depth;
	.loc 16 148 5
	movq	48(%rbp), %rax	 # this, tmp355
	movl	56(%rbp), %edx	 # width, tmp356
	movl	%edx, 32(%rax)	 # tmp356, this_270(D)->w
 # src\main.cpp:148: 		w = width; h = height; d = depth;
	.loc 16 148 16
	movq	48(%rbp), %rax	 # this, tmp357
	movl	64(%rbp), %edx	 # height, tmp358
	movl	%edx, 36(%rax)	 # tmp358, this_270(D)->h
 # src\main.cpp:148: 		w = width; h = height; d = depth;
	.loc 16 148 28
	movq	48(%rbp), %rax	 # this, tmp359
	movl	72(%rbp), %edx	 # depth, tmp360
	movl	%edx, 40(%rax)	 # tmp360, this_270(D)->d
 # src\main.cpp:154: 		CELL_FRONT_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 16 154 71
	movl	56(%rbp), %eax	 # width, tmp361
	imull	64(%rbp), %eax	 # height, _1
 # src\main.cpp:154: 		CELL_FRONT_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 16 154 80
	imull	72(%rbp), %eax	 # depth, _2
	movl	%eax, %eax	 # _2, _3
 # src\main.cpp:154: 		CELL_FRONT_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 16 154 48
	addq	%rax, %rax	 # _4
	movq	%rax, %rcx	 # _4,
	call	malloc	 #
	movq	%rax, %rdx	 # tmp362, _5
 # src\main.cpp:154: 		CELL_FRONT_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 16 154 21
	movq	48(%rbp), %rax	 # this, tmp363
	movq	%rdx, 8(%rax)	 # _5, this_270(D)->CELL_FRONT_BUFFER
.LBB114:
 # src\main.cpp:155: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_FRONT_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 155 16
	movl	$0, -4(%rbp)	 #, i
 # src\main.cpp:155: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_FRONT_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 155 3
	jmp	.L206	 #
.L207:
 # src\main.cpp:155: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_FRONT_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 155 59 discriminator 3
	movq	48(%rbp), %rax	 # this, tmp364
	movq	8(%rax), %rax	 # this_270(D)->CELL_FRONT_BUFFER, _6
 # src\main.cpp:155: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_FRONT_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 155 77 discriminator 3
	movl	-4(%rbp), %edx	 # i, _7
 # src\main.cpp:155: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_FRONT_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 155 78 discriminator 3
	addq	%rdx, %rdx	 # _8
 # src\main.cpp:155: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_FRONT_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 155 53 discriminator 3
	addq	%rdx, %rax	 # _8, _477
 # src\main.cpp:155: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_FRONT_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 155 95 discriminator 3
	movq	%rax, %rdx	 # _477,
	movl	$2, %ecx	 #,
	call	_ZnwyPv	 #
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _479,
	call	_ZN6MATRIX4cellC1Et	 #
 # src\main.cpp:155: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_FRONT_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 155 3 discriminator 3
	addl	$1, -4(%rbp)	 #, i
.L206:
 # src\main.cpp:155: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_FRONT_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 155 29 discriminator 1
	movl	56(%rbp), %eax	 # width, tmp365
	imull	64(%rbp), %eax	 # height, _9
 # src\main.cpp:155: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_FRONT_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 155 38 discriminator 1
	imull	72(%rbp), %eax	 # depth, _10
 # src\main.cpp:155: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_FRONT_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 155 22 discriminator 1
	cmpl	%eax, -4(%rbp)	 # _10, i
	jb	.L207	 #,
.LBE114:
 # src\main.cpp:159: 		CELL_BACK_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 16 159 70
	movl	56(%rbp), %eax	 # width, tmp366
	imull	64(%rbp), %eax	 # height, _11
 # src\main.cpp:159: 		CELL_BACK_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 16 159 79
	imull	72(%rbp), %eax	 # depth, _12
	movl	%eax, %eax	 # _12, _13
 # src\main.cpp:159: 		CELL_BACK_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 16 159 47
	addq	%rax, %rax	 # _14
	movq	%rax, %rcx	 # _14,
	call	malloc	 #
	movq	%rax, %rdx	 # tmp367, _15
 # src\main.cpp:159: 		CELL_BACK_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 16 159 20
	movq	48(%rbp), %rax	 # this, tmp368
	movq	%rdx, 16(%rax)	 # _15, this_270(D)->CELL_BACK_BUFFER
.LBB115:
 # src\main.cpp:160: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_BACK_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 160 16
	movl	$0, -8(%rbp)	 #, i
 # src\main.cpp:160: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_BACK_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 160 3
	jmp	.L208	 #
.L209:
 # src\main.cpp:160: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_BACK_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 160 59 discriminator 3
	movq	48(%rbp), %rax	 # this, tmp369
	movq	16(%rax), %rax	 # this_270(D)->CELL_BACK_BUFFER, _16
 # src\main.cpp:160: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_BACK_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 160 76 discriminator 3
	movl	-8(%rbp), %edx	 # i, _17
 # src\main.cpp:160: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_BACK_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 160 77 discriminator 3
	addq	%rdx, %rdx	 # _18
 # src\main.cpp:160: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_BACK_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 160 53 discriminator 3
	addq	%rdx, %rax	 # _18, _470
 # src\main.cpp:160: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_BACK_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 160 94 discriminator 3
	movq	%rax, %rdx	 # _470,
	movl	$2, %ecx	 #,
	call	_ZnwyPv	 #
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _472,
	call	_ZN6MATRIX4cellC1Et	 #
 # src\main.cpp:160: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_BACK_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 160 3 discriminator 3
	addl	$1, -8(%rbp)	 #, i
.L208:
 # src\main.cpp:160: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_BACK_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 160 29 discriminator 1
	movl	56(%rbp), %eax	 # width, tmp370
	imull	64(%rbp), %eax	 # height, _19
 # src\main.cpp:160: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_BACK_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 160 38 discriminator 1
	imull	72(%rbp), %eax	 # depth, _20
 # src\main.cpp:160: 		for(uint32_t i=0; i<width * height * depth; ++i){ new (&CELL_BACK_BUFFER[i]) cell(CELL_NONE); }
	.loc 16 160 22 discriminator 1
	cmpl	%eax, -8(%rbp)	 # _20, i
	jb	.L209	 #,
.LBE115:
 # src\main.cpp:164: 		flag = (s8flagcell*)malloc(sizeof(s8flagcell) * (width * height * depth));
	.loc 16 164 58
	movl	56(%rbp), %eax	 # width, tmp371
	imull	64(%rbp), %eax	 # height, _21
 # src\main.cpp:164: 		flag = (s8flagcell*)malloc(sizeof(s8flagcell) * (width * height * depth));
	.loc 16 164 67
	imull	72(%rbp), %eax	 # depth, _22
	movl	%eax, %eax	 # _22, _23
 # src\main.cpp:164: 		flag = (s8flagcell*)malloc(sizeof(s8flagcell) * (width * height * depth));
	.loc 16 164 29
	addq	%rax, %rax	 # _24
	movq	%rax, %rcx	 # _24,
	call	malloc	 #
	movq	%rax, %rdx	 # tmp372, _25
 # src\main.cpp:164: 		flag = (s8flagcell*)malloc(sizeof(s8flagcell) * (width * height * depth));
	.loc 16 164 8
	movq	48(%rbp), %rax	 # this, tmp373
	movq	%rdx, (%rax)	 # _25, this_270(D)->flag
 # src\main.cpp:165: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[MATERIAL_SIZE]);
	.loc 16 165 86
	movl	$1024, %ecx	 #,
	call	_Znay	 #
	movq	%rax, %rdi	 # tmp374, _286
	movq	%rdi, %rsi	 # _286, _259
	movl	$15, %ebx	 #, _260
	jmp	.L210	 #
.L211:
 # src\main.cpp:165: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[MATERIAL_SIZE]);
	.loc 16 165 86 is_stmt 0 discriminator 5
	movq	%rsi, %rcx	 # _259,
	call	_ZN6MATRIX18MaterialAttributesC1Ev	 #
	subq	$1, %rbx	 #, _260
	addq	$64, %rsi	 #, _259
.L210:
 # src\main.cpp:165: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[MATERIAL_SIZE]);
	.loc 16 165 86 discriminator 3
	testq	%rbx, %rbx	 # _260
	jns	.L211	 #,
 # src\main.cpp:165: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[MATERIAL_SIZE]);
	.loc 16 165 17 is_stmt 1 discriminator 6
	leaq	-32(%rbp), %rax	 #, tmp375
	movq	%rdi, %rdx	 # _286,
	movq	%rax, %rcx	 # tmp375,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_	 #
 # src\main.cpp:165: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[MATERIAL_SIZE]);
	.loc 16 165 87 discriminator 6
	movq	48(%rbp), %rax	 # this, tmp376
	leaq	24(%rax), %rcx	 #, _26
	leaq	-32(%rbp), %rax	 #, tmp377
	movq	%rax, %rdx	 # tmp377,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_	 #
 # src\main.cpp:165: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[MATERIAL_SIZE]);
	.loc 16 165 17 discriminator 6
	leaq	-32(%rbp), %rax	 #, tmp378
	movq	%rax, %rcx	 # tmp378,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev	 #
 # src\main.cpp:170: 		printf("-> cells set to: element::air\n");
	.loc 16 170 9 discriminator 6
	leaq	.LC6(%rip), %rax	 #, tmp379
	movq	%rax, %rcx	 # tmp379,
	call	_Z6printfPKcz	 #
.LBB116:
 # src\main.cpp:171: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 16 171 16 discriminator 6
	movl	$0, -12(%rbp)	 #, i
 # src\main.cpp:171: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 16 171 3 discriminator 6
	jmp	.L212	 #
.L219:
.LBB117:
 # src\main.cpp:173: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 16 173 21
	movq	48(%rbp), %rax	 # this, tmp380
	movl	32(%rax), %ecx	 # this_270(D)->w, _27
 # src\main.cpp:173: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 16 173 13
	movl	-12(%rbp), %eax	 # i, tmp382
	movl	$0, %edx	 #, tmp383
	divl	%ecx	 # _27
	movl	%edx, -16(%rbp)	 # tmp383, x
 # src\main.cpp:173: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 16 173 42
	movq	48(%rbp), %rax	 # this, tmp385
	movl	32(%rax), %esi	 # this_270(D)->w, _28
 # src\main.cpp:173: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 16 173 40
	movl	-12(%rbp), %eax	 # i, tmp388
	movl	$0, %edx	 #, tmp387
	divl	%esi	 # _28
	movl	%eax, %edx	 # tmp386, _29
 # src\main.cpp:173: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 16 173 47
	movq	48(%rbp), %rax	 # this, tmp389
	movl	36(%rax), %ecx	 # this_270(D)->h, _30
 # src\main.cpp:173: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 16 173 33
	movl	%edx, %eax	 # _29, _29
	movl	$0, %edx	 #, tmp390
	divl	%ecx	 # _30
	movl	%edx, -20(%rbp)	 # tmp390, y
 # src\main.cpp:173: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 16 173 68
	movq	48(%rbp), %rax	 # this, tmp392
	movl	32(%rax), %edx	 # this_270(D)->w, _31
 # src\main.cpp:173: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 16 173 72
	movq	48(%rbp), %rax	 # this, tmp393
	movl	36(%rax), %eax	 # this_270(D)->h, _32
 # src\main.cpp:173: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 16 173 70
	movl	%edx, %edi	 # _31, _31
	imull	%eax, %edi	 # _32, _31
 # src\main.cpp:173: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 16 173 59
	movl	-12(%rbp), %eax	 # i, tmp396
	movl	$0, %edx	 #, tmp395
	divl	%edi	 # _33
	movl	%eax, -24(%rbp)	 # tmp394, z
 # src\main.cpp:174: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, CELL_CUSTOM) : WriteDataTo(x, y, z, CELL_CUSTOM);
	.loc 16 174 49
	cmpl	$0, -16(%rbp)	 #, x
	je	.L213	 #,
 # src\main.cpp:174: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, CELL_CUSTOM) : WriteDataTo(x, y, z, CELL_CUSTOM);
	.loc 16 174 28 discriminator 2
	movq	48(%rbp), %rax	 # this, tmp397
	movl	32(%rax), %eax	 # this_270(D)->w, _34
	subl	$1, %eax	 #, _35
	cmpl	%eax, -16(%rbp)	 # _35, x
	je	.L213	 #,
 # src\main.cpp:174: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, CELL_CUSTOM) : WriteDataTo(x, y, z, CELL_CUSTOM);
	.loc 16 174 28 is_stmt 0 discriminator 4
	cmpl	$0, -20(%rbp)	 #, y
	je	.L213	 #,
 # src\main.cpp:174: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, CELL_CUSTOM) : WriteDataTo(x, y, z, CELL_CUSTOM);
	.loc 16 174 28 discriminator 6
	movq	48(%rbp), %rax	 # this, tmp398
	movl	36(%rax), %eax	 # this_270(D)->h, _36
	subl	$1, %eax	 #, _37
	cmpl	%eax, -20(%rbp)	 # _37, y
	je	.L213	 #,
 # src\main.cpp:174: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, CELL_CUSTOM) : WriteDataTo(x, y, z, CELL_CUSTOM);
	.loc 16 174 28 discriminator 8
	cmpl	$0, -24(%rbp)	 #, z
	je	.L213	 #,
 # src\main.cpp:174: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, CELL_CUSTOM) : WriteDataTo(x, y, z, CELL_CUSTOM);
	.loc 16 174 28 discriminator 10
	movq	48(%rbp), %rax	 # this, tmp399
	movl	40(%rax), %eax	 # this_270(D)->d, _38
	subl	$1, %eax	 #, _39
	cmpl	%eax, -24(%rbp)	 # _39, z
	jne	.L214	 #,
.L213:
 # src\main.cpp:174: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, CELL_CUSTOM) : WriteDataTo(x, y, z, CELL_CUSTOM);
	.loc 16 174 119 is_stmt 1 discriminator 11
	leaq	-34(%rbp), %rax	 #, tmp400
	movl	-20(%rbp), %r9d	 # y, tmp401
	movl	-16(%rbp), %r8d	 # x, tmp402
	movq	48(%rbp), %rdx	 # this, tmp403
	movl	$32, 40(%rsp)	 #,
	movl	-24(%rbp), %ecx	 # z, tmp404
	movl	%ecx, 32(%rsp)	 # tmp404,
	movq	%rax, %rcx	 # tmp400,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	jmp	.L215	 #
.L214:
 # src\main.cpp:174: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, CELL_CUSTOM) : WriteDataTo(x, y, z, CELL_CUSTOM);
	.loc 16 174 119 is_stmt 0 discriminator 12
	leaq	-34(%rbp), %rax	 #, tmp405
	movl	-20(%rbp), %r9d	 # y, tmp406
	movl	-16(%rbp), %r8d	 # x, tmp407
	movq	48(%rbp), %rdx	 # this, tmp408
	movl	$32, 40(%rsp)	 #,
	movl	-24(%rbp), %ecx	 # z, tmp409
	movl	%ecx, 32(%rsp)	 # tmp409,
	movq	%rax, %rcx	 # tmp405,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
.L215:
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 4 is_stmt 1
	movq	48(%rbp), %rax	 # this, tmp410
	movq	(%rax), %rax	 # this_270(D)->flag, _40
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 10
	movl	-12(%rbp), %edx	 # i, _41
	addq	%rdx, %rdx	 # _42
	addq	%rdx, %rax	 # _42, _43
	movzwl	(%rax), %ecx	 # *_43, _44
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 25
	cmpl	$0, -16(%rbp)	 #, x
	je	.L216	 #,
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 28 discriminator 2
	movq	48(%rbp), %rax	 # this, tmp411
	movl	32(%rax), %eax	 # this_270(D)->w, _45
	subl	$1, %eax	 #, _46
	cmpl	%eax, -16(%rbp)	 # _46, x
	je	.L216	 #,
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 28 is_stmt 0 discriminator 4
	cmpl	$0, -20(%rbp)	 #, y
	je	.L216	 #,
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 28 discriminator 6
	movq	48(%rbp), %rax	 # this, tmp412
	movl	36(%rax), %eax	 # this_270(D)->h, _47
	subl	$1, %eax	 #, _48
	cmpl	%eax, -20(%rbp)	 # _48, y
	je	.L216	 #,
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 28 discriminator 8
	cmpl	$0, -24(%rbp)	 #, z
	je	.L216	 #,
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 28 discriminator 10
	movq	48(%rbp), %rax	 # this, tmp413
	movl	40(%rax), %eax	 # this_270(D)->d, _49
	subl	$1, %eax	 #, _50
	cmpl	%eax, -24(%rbp)	 # _50, z
	jne	.L217	 #,
.L216:
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 25 is_stmt 1 discriminator 11
	movl	$256, %r8d	 #, iftmp.90_262
	jmp	.L218	 #
.L217:
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 25 is_stmt 0 discriminator 12
	movl	$0, %r8d	 #, iftmp.90_262
.L218:
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 4 is_stmt 1 discriminator 14
	movq	48(%rbp), %rax	 # this, tmp414
	movq	(%rax), %rax	 # this_270(D)->flag, _51
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 10 discriminator 14
	movl	-12(%rbp), %edx	 # i, _52
	addq	%rdx, %rdx	 # _53
	addq	%rdx, %rax	 # _53, _54
 # src\main.cpp:175: 			flag[i]              |= CHECK_MATRIX_WALLS() ? CELL_STATIC : CELL_NONE;
	.loc 16 175 25 discriminator 14
	movl	%r8d, %edx	 # iftmp.90_262, iftmp.90_262
	orl	%ecx, %edx	 # _44, iftmp.90_262
	movw	%dx, (%rax)	 # _55, *_54
 # src\main.cpp:176: 		}
	.loc 16 176 3 discriminator 14
	leaq	-34(%rbp), %rax	 #, tmp415
	movq	%rax, %rcx	 # tmp415,
	call	_ZN6MATRIX4cellD1Ev	 #
.LBE117:
 # src\main.cpp:171: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 16 171 3 discriminator 14
	addl	$1, -12(%rbp)	 #, i
.L212:
 # src\main.cpp:171: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 16 171 31 discriminator 2
	movl	56(%rbp), %eax	 # width, tmp416
	imull	64(%rbp), %eax	 # height, _56
 # src\main.cpp:171: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 16 171 40 discriminator 2
	imull	72(%rbp), %eax	 # depth, _57
 # src\main.cpp:171: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 16 171 48 discriminator 2
	subl	$1, %eax	 #, _58
 # src\main.cpp:171: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 16 171 22 discriminator 2
	cmpl	-12(%rbp), %eax	 # i, _58
	jnb	.L219	 #,
.LBE116:
 # src\main.cpp:179: 		printf("-> elements::name... \n");
	.loc 16 179 9
	leaq	.LC7(%rip), %rax	 #, tmp417
	movq	%rax, %rcx	 # tmp417,
	call	_Z6printfPKcz	 #
 # src\main.cpp:180: 		matAtt[ElementIndex(CELL_AIR)   ].name 			      = "air";
	.loc 16 180 35
	movq	48(%rbp), %rax	 # this, tmp418
	leaq	24(%rax), %rbx	 #, _59
 # src\main.cpp:180: 		matAtt[ElementIndex(CELL_AIR)   ].name 			      = "air";
	.loc 16 180 22
	movl	$1, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:180: 		matAtt[ElementIndex(CELL_AIR)   ].name 			      = "air";
	.loc 16 180 35
	movl	%eax, %eax	 # _60, _61
	movq	%rax, %rdx	 # _61,
	movq	%rbx, %rcx	 # _59,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:180: 		matAtt[ElementIndex(CELL_AIR)   ].name 			      = "air";
	.loc 16 180 51
	leaq	.LC8(%rip), %rdx	 #, tmp419
	movq	%rdx, 56(%rax)	 # tmp419, _62->name
 # src\main.cpp:181: 		matAtt[ElementIndex(CELL_WATER) ].name 			      = "water";
	.loc 16 181 35
	movq	48(%rbp), %rax	 # this, tmp420
	leaq	24(%rax), %rbx	 #, _63
 # src\main.cpp:181: 		matAtt[ElementIndex(CELL_WATER) ].name 			      = "water";
	.loc 16 181 22
	movl	$2, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:181: 		matAtt[ElementIndex(CELL_WATER) ].name 			      = "water";
	.loc 16 181 35
	movl	%eax, %eax	 # _64, _65
	movq	%rax, %rdx	 # _65,
	movq	%rbx, %rcx	 # _63,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:181: 		matAtt[ElementIndex(CELL_WATER) ].name 			      = "water";
	.loc 16 181 51
	leaq	.LC9(%rip), %rdx	 #, tmp421
	movq	%rdx, 56(%rax)	 # tmp421, _66->name
 # src\main.cpp:182: 		matAtt[ElementIndex(CELL_WOOD)  ].name 			      = "wood";
	.loc 16 182 35
	movq	48(%rbp), %rax	 # this, tmp422
	leaq	24(%rax), %rbx	 #, _67
 # src\main.cpp:182: 		matAtt[ElementIndex(CELL_WOOD)  ].name 			      = "wood";
	.loc 16 182 22
	movl	$4, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:182: 		matAtt[ElementIndex(CELL_WOOD)  ].name 			      = "wood";
	.loc 16 182 35
	movl	%eax, %eax	 # _68, _69
	movq	%rax, %rdx	 # _69,
	movq	%rbx, %rcx	 # _67,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:182: 		matAtt[ElementIndex(CELL_WOOD)  ].name 			      = "wood";
	.loc 16 182 51
	leaq	.LC10(%rip), %rdx	 #, tmp423
	movq	%rdx, 56(%rax)	 # tmp423, _70->name
 # src\main.cpp:183: 		matAtt[ElementIndex(CELL_FIRE)  ].name 			      = "fire";
	.loc 16 183 35
	movq	48(%rbp), %rax	 # this, tmp424
	leaq	24(%rax), %rbx	 #, _71
 # src\main.cpp:183: 		matAtt[ElementIndex(CELL_FIRE)  ].name 			      = "fire";
	.loc 16 183 22
	movl	$8, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:183: 		matAtt[ElementIndex(CELL_FIRE)  ].name 			      = "fire";
	.loc 16 183 35
	movl	%eax, %eax	 # _72, _73
	movq	%rax, %rdx	 # _73,
	movq	%rbx, %rcx	 # _71,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:183: 		matAtt[ElementIndex(CELL_FIRE)  ].name 			      = "fire";
	.loc 16 183 51
	leaq	.LC11(%rip), %rdx	 #, tmp425
	movq	%rdx, 56(%rax)	 # tmp425, _74->name
 # src\main.cpp:184: 		matAtt[ElementIndex(CELL_METAL) ].name 			      = "metal";
	.loc 16 184 35
	movq	48(%rbp), %rax	 # this, tmp426
	leaq	24(%rax), %rbx	 #, _75
 # src\main.cpp:184: 		matAtt[ElementIndex(CELL_METAL) ].name 			      = "metal";
	.loc 16 184 22
	movl	$16, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:184: 		matAtt[ElementIndex(CELL_METAL) ].name 			      = "metal";
	.loc 16 184 35
	movl	%eax, %eax	 # _76, _77
	movq	%rax, %rdx	 # _77,
	movq	%rbx, %rcx	 # _75,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:184: 		matAtt[ElementIndex(CELL_METAL) ].name 			      = "metal";
	.loc 16 184 51
	leaq	.LC12(%rip), %rdx	 #, tmp427
	movq	%rdx, 56(%rax)	 # tmp427, _78->name
 # src\main.cpp:185: 		matAtt[ElementIndex(CELL_CUSTOM)].name 			      = "Custom";
	.loc 16 185 35
	movq	48(%rbp), %rax	 # this, tmp428
	leaq	24(%rax), %rbx	 #, _79
 # src\main.cpp:185: 		matAtt[ElementIndex(CELL_CUSTOM)].name 			      = "Custom";
	.loc 16 185 22
	movl	$32, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:185: 		matAtt[ElementIndex(CELL_CUSTOM)].name 			      = "Custom";
	.loc 16 185 35
	movl	%eax, %eax	 # _80, _81
	movq	%rax, %rdx	 # _81,
	movq	%rbx, %rcx	 # _79,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:185: 		matAtt[ElementIndex(CELL_CUSTOM)].name 			      = "Custom";
	.loc 16 185 51
	leaq	.LC13(%rip), %rdx	 #, tmp429
	movq	%rdx, 56(%rax)	 # tmp429, _82->name
 # src\main.cpp:187: 		printf("-> elements::density... \n");
	.loc 16 187 9
	leaq	.LC14(%rip), %rax	 #, tmp430
	movq	%rax, %rcx	 # tmp430,
	call	_Z6printfPKcz	 #
 # src\main.cpp:188: 		matAtt[ElementIndex(CELL_AIR)   ].density 		      = 1.225f;
	.loc 16 188 35
	movq	48(%rbp), %rax	 # this, tmp431
	leaq	24(%rax), %rbx	 #, _83
 # src\main.cpp:188: 		matAtt[ElementIndex(CELL_AIR)   ].density 		      = 1.225f;
	.loc 16 188 22
	movl	$1, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:188: 		matAtt[ElementIndex(CELL_AIR)   ].density 		      = 1.225f;
	.loc 16 188 35
	movl	%eax, %eax	 # _84, _85
	movq	%rax, %rdx	 # _85,
	movq	%rbx, %rcx	 # _83,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:188: 		matAtt[ElementIndex(CELL_AIR)   ].density 		      = 1.225f;
	.loc 16 188 53
	movss	.LC15(%rip), %xmm0	 #, tmp432
	movss	%xmm0, (%rax)	 # tmp432, _86->density
 # src\main.cpp:189: 		matAtt[ElementIndex(CELL_WATER) ].density 		      = 1000.0f;
	.loc 16 189 35
	movq	48(%rbp), %rax	 # this, tmp433
	leaq	24(%rax), %rbx	 #, _87
 # src\main.cpp:189: 		matAtt[ElementIndex(CELL_WATER) ].density 		      = 1000.0f;
	.loc 16 189 22
	movl	$2, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:189: 		matAtt[ElementIndex(CELL_WATER) ].density 		      = 1000.0f;
	.loc 16 189 35
	movl	%eax, %eax	 # _88, _89
	movq	%rax, %rdx	 # _89,
	movq	%rbx, %rcx	 # _87,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:189: 		matAtt[ElementIndex(CELL_WATER) ].density 		      = 1000.0f;
	.loc 16 189 53
	movss	.LC16(%rip), %xmm0	 #, tmp434
	movss	%xmm0, (%rax)	 # tmp434, _90->density
 # src\main.cpp:190: 		matAtt[ElementIndex(CELL_WOOD)  ].density 		      = 700.0f;
	.loc 16 190 35
	movq	48(%rbp), %rax	 # this, tmp435
	leaq	24(%rax), %rbx	 #, _91
 # src\main.cpp:190: 		matAtt[ElementIndex(CELL_WOOD)  ].density 		      = 700.0f;
	.loc 16 190 22
	movl	$4, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:190: 		matAtt[ElementIndex(CELL_WOOD)  ].density 		      = 700.0f;
	.loc 16 190 35
	movl	%eax, %eax	 # _92, _93
	movq	%rax, %rdx	 # _93,
	movq	%rbx, %rcx	 # _91,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:190: 		matAtt[ElementIndex(CELL_WOOD)  ].density 		      = 700.0f;
	.loc 16 190 53
	movss	.LC17(%rip), %xmm0	 #, tmp436
	movss	%xmm0, (%rax)	 # tmp436, _94->density
 # src\main.cpp:191: 		matAtt[ElementIndex(CELL_FIRE)  ].density 		      = 0.0f;
	.loc 16 191 35
	movq	48(%rbp), %rax	 # this, tmp437
	leaq	24(%rax), %rbx	 #, _95
 # src\main.cpp:191: 		matAtt[ElementIndex(CELL_FIRE)  ].density 		      = 0.0f;
	.loc 16 191 22
	movl	$8, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:191: 		matAtt[ElementIndex(CELL_FIRE)  ].density 		      = 0.0f;
	.loc 16 191 35
	movl	%eax, %eax	 # _96, _97
	movq	%rax, %rdx	 # _97,
	movq	%rbx, %rcx	 # _95,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:191: 		matAtt[ElementIndex(CELL_FIRE)  ].density 		      = 0.0f;
	.loc 16 191 53
	pxor	%xmm0, %xmm0	 # tmp438
	movss	%xmm0, (%rax)	 # tmp438, _98->density
 # src\main.cpp:192: 		matAtt[ElementIndex(CELL_METAL) ].density 		      = 7800.0f;
	.loc 16 192 35
	movq	48(%rbp), %rax	 # this, tmp439
	leaq	24(%rax), %rbx	 #, _99
 # src\main.cpp:192: 		matAtt[ElementIndex(CELL_METAL) ].density 		      = 7800.0f;
	.loc 16 192 22
	movl	$16, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:192: 		matAtt[ElementIndex(CELL_METAL) ].density 		      = 7800.0f;
	.loc 16 192 35
	movl	%eax, %eax	 # _100, _101
	movq	%rax, %rdx	 # _101,
	movq	%rbx, %rcx	 # _99,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:192: 		matAtt[ElementIndex(CELL_METAL) ].density 		      = 7800.0f;
	.loc 16 192 53
	movss	.LC18(%rip), %xmm0	 #, tmp440
	movss	%xmm0, (%rax)	 # tmp440, _102->density
 # src\main.cpp:193: 		matAtt[ElementIndex(CELL_CUSTOM)].density 		      = 0.0f;
	.loc 16 193 35
	movq	48(%rbp), %rax	 # this, tmp441
	leaq	24(%rax), %rbx	 #, _103
 # src\main.cpp:193: 		matAtt[ElementIndex(CELL_CUSTOM)].density 		      = 0.0f;
	.loc 16 193 22
	movl	$32, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:193: 		matAtt[ElementIndex(CELL_CUSTOM)].density 		      = 0.0f;
	.loc 16 193 35
	movl	%eax, %eax	 # _104, _105
	movq	%rax, %rdx	 # _105,
	movq	%rbx, %rcx	 # _103,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:193: 		matAtt[ElementIndex(CELL_CUSTOM)].density 		      = 0.0f;
	.loc 16 193 53
	pxor	%xmm0, %xmm0	 # tmp442
	movss	%xmm0, (%rax)	 # tmp442, _106->density
 # src\main.cpp:195: 		printf("-> elements::friction... \n");
	.loc 16 195 9
	leaq	.LC19(%rip), %rax	 #, tmp443
	movq	%rax, %rcx	 # tmp443,
	call	_Z6printfPKcz	 #
 # src\main.cpp:196: 		matAtt[ElementIndex(CELL_AIR)   ].friction 		      = 0.02f;
	.loc 16 196 35
	movq	48(%rbp), %rax	 # this, tmp444
	leaq	24(%rax), %rbx	 #, _107
 # src\main.cpp:196: 		matAtt[ElementIndex(CELL_AIR)   ].friction 		      = 0.02f;
	.loc 16 196 22
	movl	$1, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:196: 		matAtt[ElementIndex(CELL_AIR)   ].friction 		      = 0.02f;
	.loc 16 196 35
	movl	%eax, %eax	 # _108, _109
	movq	%rax, %rdx	 # _109,
	movq	%rbx, %rcx	 # _107,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:196: 		matAtt[ElementIndex(CELL_AIR)   ].friction 		      = 0.02f;
	.loc 16 196 54
	movss	.LC20(%rip), %xmm0	 #, tmp445
	movss	%xmm0, 4(%rax)	 # tmp445, _110->friction
 # src\main.cpp:197: 		matAtt[ElementIndex(CELL_WATER) ].friction 		      = 0.1f;
	.loc 16 197 35
	movq	48(%rbp), %rax	 # this, tmp446
	leaq	24(%rax), %rbx	 #, _111
 # src\main.cpp:197: 		matAtt[ElementIndex(CELL_WATER) ].friction 		      = 0.1f;
	.loc 16 197 22
	movl	$2, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:197: 		matAtt[ElementIndex(CELL_WATER) ].friction 		      = 0.1f;
	.loc 16 197 35
	movl	%eax, %eax	 # _112, _113
	movq	%rax, %rdx	 # _113,
	movq	%rbx, %rcx	 # _111,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:197: 		matAtt[ElementIndex(CELL_WATER) ].friction 		      = 0.1f;
	.loc 16 197 54
	movss	.LC21(%rip), %xmm0	 #, tmp447
	movss	%xmm0, 4(%rax)	 # tmp447, _114->friction
 # src\main.cpp:198: 		matAtt[ElementIndex(CELL_WOOD)  ].friction 		      = 0.4f;
	.loc 16 198 35
	movq	48(%rbp), %rax	 # this, tmp448
	leaq	24(%rax), %rbx	 #, _115
 # src\main.cpp:198: 		matAtt[ElementIndex(CELL_WOOD)  ].friction 		      = 0.4f;
	.loc 16 198 22
	movl	$4, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:198: 		matAtt[ElementIndex(CELL_WOOD)  ].friction 		      = 0.4f;
	.loc 16 198 35
	movl	%eax, %eax	 # _116, _117
	movq	%rax, %rdx	 # _117,
	movq	%rbx, %rcx	 # _115,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:198: 		matAtt[ElementIndex(CELL_WOOD)  ].friction 		      = 0.4f;
	.loc 16 198 54
	movss	.LC22(%rip), %xmm0	 #, tmp449
	movss	%xmm0, 4(%rax)	 # tmp449, _118->friction
 # src\main.cpp:199: 		matAtt[ElementIndex(CELL_FIRE)  ].friction 		      = 0.0f;
	.loc 16 199 35
	movq	48(%rbp), %rax	 # this, tmp450
	leaq	24(%rax), %rbx	 #, _119
 # src\main.cpp:199: 		matAtt[ElementIndex(CELL_FIRE)  ].friction 		      = 0.0f;
	.loc 16 199 22
	movl	$8, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:199: 		matAtt[ElementIndex(CELL_FIRE)  ].friction 		      = 0.0f;
	.loc 16 199 35
	movl	%eax, %eax	 # _120, _121
	movq	%rax, %rdx	 # _121,
	movq	%rbx, %rcx	 # _119,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:199: 		matAtt[ElementIndex(CELL_FIRE)  ].friction 		      = 0.0f;
	.loc 16 199 54
	pxor	%xmm0, %xmm0	 # tmp451
	movss	%xmm0, 4(%rax)	 # tmp451, _122->friction
 # src\main.cpp:200: 		matAtt[ElementIndex(CELL_METAL) ].friction 		      = 0.6f;
	.loc 16 200 35
	movq	48(%rbp), %rax	 # this, tmp452
	leaq	24(%rax), %rbx	 #, _123
 # src\main.cpp:200: 		matAtt[ElementIndex(CELL_METAL) ].friction 		      = 0.6f;
	.loc 16 200 22
	movl	$16, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:200: 		matAtt[ElementIndex(CELL_METAL) ].friction 		      = 0.6f;
	.loc 16 200 35
	movl	%eax, %eax	 # _124, _125
	movq	%rax, %rdx	 # _125,
	movq	%rbx, %rcx	 # _123,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:200: 		matAtt[ElementIndex(CELL_METAL) ].friction 		      = 0.6f;
	.loc 16 200 54
	movss	.LC23(%rip), %xmm0	 #, tmp453
	movss	%xmm0, 4(%rax)	 # tmp453, _126->friction
 # src\main.cpp:201: 		matAtt[ElementIndex(CELL_CUSTOM)].friction 		      = 0.0f;
	.loc 16 201 35
	movq	48(%rbp), %rax	 # this, tmp454
	leaq	24(%rax), %rbx	 #, _127
 # src\main.cpp:201: 		matAtt[ElementIndex(CELL_CUSTOM)].friction 		      = 0.0f;
	.loc 16 201 22
	movl	$32, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:201: 		matAtt[ElementIndex(CELL_CUSTOM)].friction 		      = 0.0f;
	.loc 16 201 35
	movl	%eax, %eax	 # _128, _129
	movq	%rax, %rdx	 # _129,
	movq	%rbx, %rcx	 # _127,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:201: 		matAtt[ElementIndex(CELL_CUSTOM)].friction 		      = 0.0f;
	.loc 16 201 54
	pxor	%xmm0, %xmm0	 # tmp455
	movss	%xmm0, 4(%rax)	 # tmp455, _130->friction
 # src\main.cpp:203: 		printf("-> elements::ThermalConductivity... \n");
	.loc 16 203 9
	leaq	.LC24(%rip), %rax	 #, tmp456
	movq	%rax, %rcx	 # tmp456,
	call	_Z6printfPKcz	 #
 # src\main.cpp:204: 		matAtt[ElementIndex(CELL_AIR)   ].thermalConductivity = 0.025f;
	.loc 16 204 35
	movq	48(%rbp), %rax	 # this, tmp457
	leaq	24(%rax), %rbx	 #, _131
 # src\main.cpp:204: 		matAtt[ElementIndex(CELL_AIR)   ].thermalConductivity = 0.025f;
	.loc 16 204 22
	movl	$1, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:204: 		matAtt[ElementIndex(CELL_AIR)   ].thermalConductivity = 0.025f;
	.loc 16 204 35
	movl	%eax, %eax	 # _132, _133
	movq	%rax, %rdx	 # _133,
	movq	%rbx, %rcx	 # _131,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:204: 		matAtt[ElementIndex(CELL_AIR)   ].thermalConductivity = 0.025f;
	.loc 16 204 57
	movss	.LC25(%rip), %xmm0	 #, tmp458
	movss	%xmm0, 8(%rax)	 # tmp458, _134->thermalConductivity
 # src\main.cpp:205: 		matAtt[ElementIndex(CELL_WATER) ].thermalConductivity = 0.6f;
	.loc 16 205 35
	movq	48(%rbp), %rax	 # this, tmp459
	leaq	24(%rax), %rbx	 #, _135
 # src\main.cpp:205: 		matAtt[ElementIndex(CELL_WATER) ].thermalConductivity = 0.6f;
	.loc 16 205 22
	movl	$2, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:205: 		matAtt[ElementIndex(CELL_WATER) ].thermalConductivity = 0.6f;
	.loc 16 205 35
	movl	%eax, %eax	 # _136, _137
	movq	%rax, %rdx	 # _137,
	movq	%rbx, %rcx	 # _135,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:205: 		matAtt[ElementIndex(CELL_WATER) ].thermalConductivity = 0.6f;
	.loc 16 205 57
	movss	.LC23(%rip), %xmm0	 #, tmp460
	movss	%xmm0, 8(%rax)	 # tmp460, _138->thermalConductivity
 # src\main.cpp:206: 		matAtt[ElementIndex(CELL_WOOD)  ].thermalConductivity = 0.12f;
	.loc 16 206 35
	movq	48(%rbp), %rax	 # this, tmp461
	leaq	24(%rax), %rbx	 #, _139
 # src\main.cpp:206: 		matAtt[ElementIndex(CELL_WOOD)  ].thermalConductivity = 0.12f;
	.loc 16 206 22
	movl	$4, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:206: 		matAtt[ElementIndex(CELL_WOOD)  ].thermalConductivity = 0.12f;
	.loc 16 206 35
	movl	%eax, %eax	 # _140, _141
	movq	%rax, %rdx	 # _141,
	movq	%rbx, %rcx	 # _139,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:206: 		matAtt[ElementIndex(CELL_WOOD)  ].thermalConductivity = 0.12f;
	.loc 16 206 57
	movss	.LC26(%rip), %xmm0	 #, tmp462
	movss	%xmm0, 8(%rax)	 # tmp462, _142->thermalConductivity
 # src\main.cpp:207: 		matAtt[ElementIndex(CELL_FIRE)  ].thermalConductivity = 0.0f;
	.loc 16 207 35
	movq	48(%rbp), %rax	 # this, tmp463
	leaq	24(%rax), %rbx	 #, _143
 # src\main.cpp:207: 		matAtt[ElementIndex(CELL_FIRE)  ].thermalConductivity = 0.0f;
	.loc 16 207 22
	movl	$8, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:207: 		matAtt[ElementIndex(CELL_FIRE)  ].thermalConductivity = 0.0f;
	.loc 16 207 35
	movl	%eax, %eax	 # _144, _145
	movq	%rax, %rdx	 # _145,
	movq	%rbx, %rcx	 # _143,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:207: 		matAtt[ElementIndex(CELL_FIRE)  ].thermalConductivity = 0.0f;
	.loc 16 207 57
	pxor	%xmm0, %xmm0	 # tmp464
	movss	%xmm0, 8(%rax)	 # tmp464, _146->thermalConductivity
 # src\main.cpp:208: 		matAtt[ElementIndex(CELL_METAL) ].thermalConductivity = 400.0f;
	.loc 16 208 35
	movq	48(%rbp), %rax	 # this, tmp465
	leaq	24(%rax), %rbx	 #, _147
 # src\main.cpp:208: 		matAtt[ElementIndex(CELL_METAL) ].thermalConductivity = 400.0f;
	.loc 16 208 22
	movl	$16, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:208: 		matAtt[ElementIndex(CELL_METAL) ].thermalConductivity = 400.0f;
	.loc 16 208 35
	movl	%eax, %eax	 # _148, _149
	movq	%rax, %rdx	 # _149,
	movq	%rbx, %rcx	 # _147,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:208: 		matAtt[ElementIndex(CELL_METAL) ].thermalConductivity = 400.0f;
	.loc 16 208 57
	movss	.LC27(%rip), %xmm0	 #, tmp466
	movss	%xmm0, 8(%rax)	 # tmp466, _150->thermalConductivity
 # src\main.cpp:209: 		matAtt[ElementIndex(CELL_CUSTOM)].thermalConductivity = 0.0f;
	.loc 16 209 35
	movq	48(%rbp), %rax	 # this, tmp467
	leaq	24(%rax), %rbx	 #, _151
 # src\main.cpp:209: 		matAtt[ElementIndex(CELL_CUSTOM)].thermalConductivity = 0.0f;
	.loc 16 209 22
	movl	$32, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:209: 		matAtt[ElementIndex(CELL_CUSTOM)].thermalConductivity = 0.0f;
	.loc 16 209 35
	movl	%eax, %eax	 # _152, _153
	movq	%rax, %rdx	 # _153,
	movq	%rbx, %rcx	 # _151,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:209: 		matAtt[ElementIndex(CELL_CUSTOM)].thermalConductivity = 0.0f;
	.loc 16 209 57
	pxor	%xmm0, %xmm0	 # tmp468
	movss	%xmm0, 8(%rax)	 # tmp468, _154->thermalConductivity
 # src\main.cpp:211: 		printf("-> elements::specificHeat... \n");
	.loc 16 211 9
	leaq	.LC28(%rip), %rax	 #, tmp469
	movq	%rax, %rcx	 # tmp469,
	call	_Z6printfPKcz	 #
 # src\main.cpp:212: 		matAtt[ElementIndex(CELL_AIR)   ].specificHeat 	  	  = 1005.0f;
	.loc 16 212 35
	movq	48(%rbp), %rax	 # this, tmp470
	leaq	24(%rax), %rbx	 #, _155
 # src\main.cpp:212: 		matAtt[ElementIndex(CELL_AIR)   ].specificHeat 	  	  = 1005.0f;
	.loc 16 212 22
	movl	$1, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:212: 		matAtt[ElementIndex(CELL_AIR)   ].specificHeat 	  	  = 1005.0f;
	.loc 16 212 35
	movl	%eax, %eax	 # _156, _157
	movq	%rax, %rdx	 # _157,
	movq	%rbx, %rcx	 # _155,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:212: 		matAtt[ElementIndex(CELL_AIR)   ].specificHeat 	  	  = 1005.0f;
	.loc 16 212 56
	movss	.LC29(%rip), %xmm0	 #, tmp471
	movss	%xmm0, 12(%rax)	 # tmp471, _158->specificHeat
 # src\main.cpp:213: 		matAtt[ElementIndex(CELL_WATER) ].specificHeat 	  	  = 4186.0f;
	.loc 16 213 35
	movq	48(%rbp), %rax	 # this, tmp472
	leaq	24(%rax), %rbx	 #, _159
 # src\main.cpp:213: 		matAtt[ElementIndex(CELL_WATER) ].specificHeat 	  	  = 4186.0f;
	.loc 16 213 22
	movl	$2, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:213: 		matAtt[ElementIndex(CELL_WATER) ].specificHeat 	  	  = 4186.0f;
	.loc 16 213 35
	movl	%eax, %eax	 # _160, _161
	movq	%rax, %rdx	 # _161,
	movq	%rbx, %rcx	 # _159,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:213: 		matAtt[ElementIndex(CELL_WATER) ].specificHeat 	  	  = 4186.0f;
	.loc 16 213 56
	movss	.LC30(%rip), %xmm0	 #, tmp473
	movss	%xmm0, 12(%rax)	 # tmp473, _162->specificHeat
 # src\main.cpp:214: 		matAtt[ElementIndex(CELL_WOOD)  ].specificHeat 	  	  = 2400.0f;
	.loc 16 214 35
	movq	48(%rbp), %rax	 # this, tmp474
	leaq	24(%rax), %rbx	 #, _163
 # src\main.cpp:214: 		matAtt[ElementIndex(CELL_WOOD)  ].specificHeat 	  	  = 2400.0f;
	.loc 16 214 22
	movl	$4, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:214: 		matAtt[ElementIndex(CELL_WOOD)  ].specificHeat 	  	  = 2400.0f;
	.loc 16 214 35
	movl	%eax, %eax	 # _164, _165
	movq	%rax, %rdx	 # _165,
	movq	%rbx, %rcx	 # _163,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:214: 		matAtt[ElementIndex(CELL_WOOD)  ].specificHeat 	  	  = 2400.0f;
	.loc 16 214 56
	movss	.LC31(%rip), %xmm0	 #, tmp475
	movss	%xmm0, 12(%rax)	 # tmp475, _166->specificHeat
 # src\main.cpp:215: 		matAtt[ElementIndex(CELL_FIRE)  ].specificHeat 	  	  = 0.0f;
	.loc 16 215 35
	movq	48(%rbp), %rax	 # this, tmp476
	leaq	24(%rax), %rbx	 #, _167
 # src\main.cpp:215: 		matAtt[ElementIndex(CELL_FIRE)  ].specificHeat 	  	  = 0.0f;
	.loc 16 215 22
	movl	$8, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:215: 		matAtt[ElementIndex(CELL_FIRE)  ].specificHeat 	  	  = 0.0f;
	.loc 16 215 35
	movl	%eax, %eax	 # _168, _169
	movq	%rax, %rdx	 # _169,
	movq	%rbx, %rcx	 # _167,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:215: 		matAtt[ElementIndex(CELL_FIRE)  ].specificHeat 	  	  = 0.0f;
	.loc 16 215 56
	pxor	%xmm0, %xmm0	 # tmp477
	movss	%xmm0, 12(%rax)	 # tmp477, _170->specificHeat
 # src\main.cpp:216: 		matAtt[ElementIndex(CELL_METAL) ].specificHeat 	  	  = 450.0f;
	.loc 16 216 35
	movq	48(%rbp), %rax	 # this, tmp478
	leaq	24(%rax), %rbx	 #, _171
 # src\main.cpp:216: 		matAtt[ElementIndex(CELL_METAL) ].specificHeat 	  	  = 450.0f;
	.loc 16 216 22
	movl	$16, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:216: 		matAtt[ElementIndex(CELL_METAL) ].specificHeat 	  	  = 450.0f;
	.loc 16 216 35
	movl	%eax, %eax	 # _172, _173
	movq	%rax, %rdx	 # _173,
	movq	%rbx, %rcx	 # _171,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:216: 		matAtt[ElementIndex(CELL_METAL) ].specificHeat 	  	  = 450.0f;
	.loc 16 216 56
	movss	.LC32(%rip), %xmm0	 #, tmp479
	movss	%xmm0, 12(%rax)	 # tmp479, _174->specificHeat
 # src\main.cpp:217: 		matAtt[ElementIndex(CELL_CUSTOM)].specificHeat 	  	  = 0.0f;
	.loc 16 217 35
	movq	48(%rbp), %rax	 # this, tmp480
	leaq	24(%rax), %rbx	 #, _175
 # src\main.cpp:217: 		matAtt[ElementIndex(CELL_CUSTOM)].specificHeat 	  	  = 0.0f;
	.loc 16 217 22
	movl	$32, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:217: 		matAtt[ElementIndex(CELL_CUSTOM)].specificHeat 	  	  = 0.0f;
	.loc 16 217 35
	movl	%eax, %eax	 # _176, _177
	movq	%rax, %rdx	 # _177,
	movq	%rbx, %rcx	 # _175,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:217: 		matAtt[ElementIndex(CELL_CUSTOM)].specificHeat 	  	  = 0.0f;
	.loc 16 217 56
	pxor	%xmm0, %xmm0	 # tmp481
	movss	%xmm0, 12(%rax)	 # tmp481, _178->specificHeat
 # src\main.cpp:219: 		printf("-> elements::restitution... \n");
	.loc 16 219 9
	leaq	.LC33(%rip), %rax	 #, tmp482
	movq	%rax, %rcx	 # tmp482,
	call	_Z6printfPKcz	 #
 # src\main.cpp:220: 		matAtt[ElementIndex(CELL_AIR)   ].restitution 		  = 0.0f;
	.loc 16 220 35
	movq	48(%rbp), %rax	 # this, tmp483
	leaq	24(%rax), %rbx	 #, _179
 # src\main.cpp:220: 		matAtt[ElementIndex(CELL_AIR)   ].restitution 		  = 0.0f;
	.loc 16 220 22
	movl	$1, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:220: 		matAtt[ElementIndex(CELL_AIR)   ].restitution 		  = 0.0f;
	.loc 16 220 35
	movl	%eax, %eax	 # _180, _181
	movq	%rax, %rdx	 # _181,
	movq	%rbx, %rcx	 # _179,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:220: 		matAtt[ElementIndex(CELL_AIR)   ].restitution 		  = 0.0f;
	.loc 16 220 53
	pxor	%xmm0, %xmm0	 # tmp484
	movss	%xmm0, 16(%rax)	 # tmp484, _182->restitution
 # src\main.cpp:221: 		matAtt[ElementIndex(CELL_WATER) ].restitution 		  = 0.1f;
	.loc 16 221 35
	movq	48(%rbp), %rax	 # this, tmp485
	leaq	24(%rax), %rbx	 #, _183
 # src\main.cpp:221: 		matAtt[ElementIndex(CELL_WATER) ].restitution 		  = 0.1f;
	.loc 16 221 22
	movl	$2, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:221: 		matAtt[ElementIndex(CELL_WATER) ].restitution 		  = 0.1f;
	.loc 16 221 35
	movl	%eax, %eax	 # _184, _185
	movq	%rax, %rdx	 # _185,
	movq	%rbx, %rcx	 # _183,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:221: 		matAtt[ElementIndex(CELL_WATER) ].restitution 		  = 0.1f;
	.loc 16 221 53
	movss	.LC21(%rip), %xmm0	 #, tmp486
	movss	%xmm0, 16(%rax)	 # tmp486, _186->restitution
 # src\main.cpp:222: 		matAtt[ElementIndex(CELL_WOOD)  ].restitution 		  = 0.3f;
	.loc 16 222 35
	movq	48(%rbp), %rax	 # this, tmp487
	leaq	24(%rax), %rbx	 #, _187
 # src\main.cpp:222: 		matAtt[ElementIndex(CELL_WOOD)  ].restitution 		  = 0.3f;
	.loc 16 222 22
	movl	$4, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:222: 		matAtt[ElementIndex(CELL_WOOD)  ].restitution 		  = 0.3f;
	.loc 16 222 35
	movl	%eax, %eax	 # _188, _189
	movq	%rax, %rdx	 # _189,
	movq	%rbx, %rcx	 # _187,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:222: 		matAtt[ElementIndex(CELL_WOOD)  ].restitution 		  = 0.3f;
	.loc 16 222 53
	movss	.LC34(%rip), %xmm0	 #, tmp488
	movss	%xmm0, 16(%rax)	 # tmp488, _190->restitution
 # src\main.cpp:223: 		matAtt[ElementIndex(CELL_FIRE)  ].restitution 		  = 0.0f;
	.loc 16 223 35
	movq	48(%rbp), %rax	 # this, tmp489
	leaq	24(%rax), %rbx	 #, _191
 # src\main.cpp:223: 		matAtt[ElementIndex(CELL_FIRE)  ].restitution 		  = 0.0f;
	.loc 16 223 22
	movl	$8, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:223: 		matAtt[ElementIndex(CELL_FIRE)  ].restitution 		  = 0.0f;
	.loc 16 223 35
	movl	%eax, %eax	 # _192, _193
	movq	%rax, %rdx	 # _193,
	movq	%rbx, %rcx	 # _191,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:223: 		matAtt[ElementIndex(CELL_FIRE)  ].restitution 		  = 0.0f;
	.loc 16 223 53
	pxor	%xmm0, %xmm0	 # tmp490
	movss	%xmm0, 16(%rax)	 # tmp490, _194->restitution
 # src\main.cpp:224: 		matAtt[ElementIndex(CELL_METAL) ].restitution 		  = 0.9f;
	.loc 16 224 35
	movq	48(%rbp), %rax	 # this, tmp491
	leaq	24(%rax), %rbx	 #, _195
 # src\main.cpp:224: 		matAtt[ElementIndex(CELL_METAL) ].restitution 		  = 0.9f;
	.loc 16 224 22
	movl	$16, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:224: 		matAtt[ElementIndex(CELL_METAL) ].restitution 		  = 0.9f;
	.loc 16 224 35
	movl	%eax, %eax	 # _196, _197
	movq	%rax, %rdx	 # _197,
	movq	%rbx, %rcx	 # _195,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:224: 		matAtt[ElementIndex(CELL_METAL) ].restitution 		  = 0.9f;
	.loc 16 224 53
	movss	.LC35(%rip), %xmm0	 #, tmp492
	movss	%xmm0, 16(%rax)	 # tmp492, _198->restitution
 # src\main.cpp:225: 		matAtt[ElementIndex(CELL_CUSTOM)].restitution 		  = 0.0f;
	.loc 16 225 35
	movq	48(%rbp), %rax	 # this, tmp493
	leaq	24(%rax), %rbx	 #, _199
 # src\main.cpp:225: 		matAtt[ElementIndex(CELL_CUSTOM)].restitution 		  = 0.0f;
	.loc 16 225 22
	movl	$32, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:225: 		matAtt[ElementIndex(CELL_CUSTOM)].restitution 		  = 0.0f;
	.loc 16 225 35
	movl	%eax, %eax	 # _200, _201
	movq	%rax, %rdx	 # _201,
	movq	%rbx, %rcx	 # _199,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:225: 		matAtt[ElementIndex(CELL_CUSTOM)].restitution 		  = 0.0f;
	.loc 16 225 53
	pxor	%xmm0, %xmm0	 # tmp494
	movss	%xmm0, 16(%rax)	 # tmp494, _202->restitution
 # src\main.cpp:227: 		printf("-> elements::hardness... \n");
	.loc 16 227 9
	leaq	.LC36(%rip), %rax	 #, tmp495
	movq	%rax, %rcx	 # tmp495,
	call	_Z6printfPKcz	 #
 # src\main.cpp:228: 		matAtt[ElementIndex(CELL_AIR)   ].hardness 		      = 0.0f;
	.loc 16 228 35
	movq	48(%rbp), %rax	 # this, tmp496
	leaq	24(%rax), %rbx	 #, _203
 # src\main.cpp:228: 		matAtt[ElementIndex(CELL_AIR)   ].hardness 		      = 0.0f;
	.loc 16 228 22
	movl	$1, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:228: 		matAtt[ElementIndex(CELL_AIR)   ].hardness 		      = 0.0f;
	.loc 16 228 35
	movl	%eax, %eax	 # _204, _205
	movq	%rax, %rdx	 # _205,
	movq	%rbx, %rcx	 # _203,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:228: 		matAtt[ElementIndex(CELL_AIR)   ].hardness 		      = 0.0f;
	.loc 16 228 54
	pxor	%xmm0, %xmm0	 # tmp497
	movss	%xmm0, 20(%rax)	 # tmp497, _206->hardness
 # src\main.cpp:229: 		matAtt[ElementIndex(CELL_WATER) ].hardness 		      = 0.1f;
	.loc 16 229 35
	movq	48(%rbp), %rax	 # this, tmp498
	leaq	24(%rax), %rbx	 #, _207
 # src\main.cpp:229: 		matAtt[ElementIndex(CELL_WATER) ].hardness 		      = 0.1f;
	.loc 16 229 22
	movl	$2, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:229: 		matAtt[ElementIndex(CELL_WATER) ].hardness 		      = 0.1f;
	.loc 16 229 35
	movl	%eax, %eax	 # _208, _209
	movq	%rax, %rdx	 # _209,
	movq	%rbx, %rcx	 # _207,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:229: 		matAtt[ElementIndex(CELL_WATER) ].hardness 		      = 0.1f;
	.loc 16 229 54
	movss	.LC21(%rip), %xmm0	 #, tmp499
	movss	%xmm0, 20(%rax)	 # tmp499, _210->hardness
 # src\main.cpp:230: 		matAtt[ElementIndex(CELL_WOOD)  ].hardness 		      = 0.3f;
	.loc 16 230 35
	movq	48(%rbp), %rax	 # this, tmp500
	leaq	24(%rax), %rbx	 #, _211
 # src\main.cpp:230: 		matAtt[ElementIndex(CELL_WOOD)  ].hardness 		      = 0.3f;
	.loc 16 230 22
	movl	$4, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:230: 		matAtt[ElementIndex(CELL_WOOD)  ].hardness 		      = 0.3f;
	.loc 16 230 35
	movl	%eax, %eax	 # _212, _213
	movq	%rax, %rdx	 # _213,
	movq	%rbx, %rcx	 # _211,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:230: 		matAtt[ElementIndex(CELL_WOOD)  ].hardness 		      = 0.3f;
	.loc 16 230 54
	movss	.LC34(%rip), %xmm0	 #, tmp501
	movss	%xmm0, 20(%rax)	 # tmp501, _214->hardness
 # src\main.cpp:231: 		matAtt[ElementIndex(CELL_FIRE)  ].hardness 		      = 0.0f;
	.loc 16 231 35
	movq	48(%rbp), %rax	 # this, tmp502
	leaq	24(%rax), %rbx	 #, _215
 # src\main.cpp:231: 		matAtt[ElementIndex(CELL_FIRE)  ].hardness 		      = 0.0f;
	.loc 16 231 22
	movl	$8, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:231: 		matAtt[ElementIndex(CELL_FIRE)  ].hardness 		      = 0.0f;
	.loc 16 231 35
	movl	%eax, %eax	 # _216, _217
	movq	%rax, %rdx	 # _217,
	movq	%rbx, %rcx	 # _215,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:231: 		matAtt[ElementIndex(CELL_FIRE)  ].hardness 		      = 0.0f;
	.loc 16 231 54
	pxor	%xmm0, %xmm0	 # tmp503
	movss	%xmm0, 20(%rax)	 # tmp503, _218->hardness
 # src\main.cpp:232: 		matAtt[ElementIndex(CELL_METAL) ].hardness 		      = 0.9f;
	.loc 16 232 35
	movq	48(%rbp), %rax	 # this, tmp504
	leaq	24(%rax), %rbx	 #, _219
 # src\main.cpp:232: 		matAtt[ElementIndex(CELL_METAL) ].hardness 		      = 0.9f;
	.loc 16 232 22
	movl	$16, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:232: 		matAtt[ElementIndex(CELL_METAL) ].hardness 		      = 0.9f;
	.loc 16 232 35
	movl	%eax, %eax	 # _220, _221
	movq	%rax, %rdx	 # _221,
	movq	%rbx, %rcx	 # _219,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:232: 		matAtt[ElementIndex(CELL_METAL) ].hardness 		      = 0.9f;
	.loc 16 232 54
	movss	.LC35(%rip), %xmm0	 #, tmp505
	movss	%xmm0, 20(%rax)	 # tmp505, _222->hardness
 # src\main.cpp:233: 		matAtt[ElementIndex(CELL_CUSTOM)].hardness 		      = 10000.0f;
	.loc 16 233 35
	movq	48(%rbp), %rax	 # this, tmp506
	leaq	24(%rax), %rbx	 #, _223
 # src\main.cpp:233: 		matAtt[ElementIndex(CELL_CUSTOM)].hardness 		      = 10000.0f;
	.loc 16 233 22
	movl	$32, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:233: 		matAtt[ElementIndex(CELL_CUSTOM)].hardness 		      = 10000.0f;
	.loc 16 233 35
	movl	%eax, %eax	 # _224, _225
	movq	%rax, %rdx	 # _225,
	movq	%rbx, %rcx	 # _223,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:233: 		matAtt[ElementIndex(CELL_CUSTOM)].hardness 		      = 10000.0f;
	.loc 16 233 54
	movss	.LC37(%rip), %xmm0	 #, tmp507
	movss	%xmm0, 20(%rax)	 # tmp507, _226->hardness
 # src\main.cpp:235: 		printf("-> elements::hardness... \n");
	.loc 16 235 9
	leaq	.LC36(%rip), %rax	 #, tmp508
	movq	%rax, %rcx	 # tmp508,
	call	_Z6printfPKcz	 #
 # src\main.cpp:236: 		matAtt[ElementIndex(CELL_AIR)   ].liquid 			  = false;
	.loc 16 236 35
	movq	48(%rbp), %rax	 # this, tmp509
	leaq	24(%rax), %rbx	 #, _227
 # src\main.cpp:236: 		matAtt[ElementIndex(CELL_AIR)   ].liquid 			  = false;
	.loc 16 236 22
	movl	$1, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:236: 		matAtt[ElementIndex(CELL_AIR)   ].liquid 			  = false;
	.loc 16 236 35
	movl	%eax, %eax	 # _228, _229
	movq	%rax, %rdx	 # _229,
	movq	%rbx, %rcx	 # _227,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:236: 		matAtt[ElementIndex(CELL_AIR)   ].liquid 			  = false;
	.loc 16 236 49
	movb	$0, 24(%rax)	 #, _230->liquid
 # src\main.cpp:237: 		matAtt[ElementIndex(CELL_WATER) ].liquid 			  = true;
	.loc 16 237 35
	movq	48(%rbp), %rax	 # this, tmp510
	leaq	24(%rax), %rbx	 #, _231
 # src\main.cpp:237: 		matAtt[ElementIndex(CELL_WATER) ].liquid 			  = true;
	.loc 16 237 22
	movl	$2, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:237: 		matAtt[ElementIndex(CELL_WATER) ].liquid 			  = true;
	.loc 16 237 35
	movl	%eax, %eax	 # _232, _233
	movq	%rax, %rdx	 # _233,
	movq	%rbx, %rcx	 # _231,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:237: 		matAtt[ElementIndex(CELL_WATER) ].liquid 			  = true;
	.loc 16 237 49
	movb	$1, 24(%rax)	 #, _234->liquid
 # src\main.cpp:238: 		matAtt[ElementIndex(CELL_WOOD)  ].liquid 			  = false;
	.loc 16 238 35
	movq	48(%rbp), %rax	 # this, tmp511
	leaq	24(%rax), %rbx	 #, _235
 # src\main.cpp:238: 		matAtt[ElementIndex(CELL_WOOD)  ].liquid 			  = false;
	.loc 16 238 22
	movl	$4, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:238: 		matAtt[ElementIndex(CELL_WOOD)  ].liquid 			  = false;
	.loc 16 238 35
	movl	%eax, %eax	 # _236, _237
	movq	%rax, %rdx	 # _237,
	movq	%rbx, %rcx	 # _235,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:238: 		matAtt[ElementIndex(CELL_WOOD)  ].liquid 			  = false;
	.loc 16 238 49
	movb	$0, 24(%rax)	 #, _238->liquid
 # src\main.cpp:239: 		matAtt[ElementIndex(CELL_FIRE)  ].liquid 			  = false;
	.loc 16 239 35
	movq	48(%rbp), %rax	 # this, tmp512
	leaq	24(%rax), %rbx	 #, _239
 # src\main.cpp:239: 		matAtt[ElementIndex(CELL_FIRE)  ].liquid 			  = false;
	.loc 16 239 22
	movl	$8, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:239: 		matAtt[ElementIndex(CELL_FIRE)  ].liquid 			  = false;
	.loc 16 239 35
	movl	%eax, %eax	 # _240, _241
	movq	%rax, %rdx	 # _241,
	movq	%rbx, %rcx	 # _239,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:239: 		matAtt[ElementIndex(CELL_FIRE)  ].liquid 			  = false;
	.loc 16 239 49
	movb	$0, 24(%rax)	 #, _242->liquid
 # src\main.cpp:240: 		matAtt[ElementIndex(CELL_METAL) ].liquid 			  = false;
	.loc 16 240 35
	movq	48(%rbp), %rax	 # this, tmp513
	leaq	24(%rax), %rbx	 #, _243
 # src\main.cpp:240: 		matAtt[ElementIndex(CELL_METAL) ].liquid 			  = false;
	.loc 16 240 22
	movl	$16, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:240: 		matAtt[ElementIndex(CELL_METAL) ].liquid 			  = false;
	.loc 16 240 35
	movl	%eax, %eax	 # _244, _245
	movq	%rax, %rdx	 # _245,
	movq	%rbx, %rcx	 # _243,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:240: 		matAtt[ElementIndex(CELL_METAL) ].liquid 			  = false;
	.loc 16 240 49
	movb	$0, 24(%rax)	 #, _246->liquid
 # src\main.cpp:241: 		matAtt[ElementIndex(CELL_CUSTOM)].liquid 			  = false;
	.loc 16 241 35
	movq	48(%rbp), %rax	 # this, tmp514
	leaq	24(%rax), %rbx	 #, _247
 # src\main.cpp:241: 		matAtt[ElementIndex(CELL_CUSTOM)].liquid 			  = false;
	.loc 16 241 22
	movl	$32, %ecx	 #,
	call	_Z12ElementIndext	 #
 # src\main.cpp:241: 		matAtt[ElementIndex(CELL_CUSTOM)].liquid 			  = false;
	.loc 16 241 35
	movl	%eax, %eax	 # _248, _249
	movq	%rax, %rdx	 # _249,
	movq	%rbx, %rcx	 # _247,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:241: 		matAtt[ElementIndex(CELL_CUSTOM)].liquid 			  = false;
	.loc 16 241 49
	movb	$0, 24(%rax)	 #, _250->liquid
 # src\main.cpp:245: 		printf("matrix initialized: CELLS: [%d] BPC: [%d]\n\n", (w*h*d), sizeof(CELL_BACK_BUFFER[0]));
	.loc 16 245 60
	movq	48(%rbp), %rax	 # this, tmp515
	movl	32(%rax), %edx	 # this_270(D)->w, _251
 # src\main.cpp:245: 		printf("matrix initialized: CELLS: [%d] BPC: [%d]\n\n", (w*h*d), sizeof(CELL_BACK_BUFFER[0]));
	.loc 16 245 62
	movq	48(%rbp), %rax	 # this, tmp516
	movl	36(%rax), %eax	 # this_270(D)->h, _252
 # src\main.cpp:245: 		printf("matrix initialized: CELLS: [%d] BPC: [%d]\n\n", (w*h*d), sizeof(CELL_BACK_BUFFER[0]));
	.loc 16 245 61
	imull	%eax, %edx	 # _252, _253
 # src\main.cpp:245: 		printf("matrix initialized: CELLS: [%d] BPC: [%d]\n\n", (w*h*d), sizeof(CELL_BACK_BUFFER[0]));
	.loc 16 245 64
	movq	48(%rbp), %rax	 # this, tmp517
	movl	40(%rax), %eax	 # this_270(D)->d, _254
 # src\main.cpp:245: 		printf("matrix initialized: CELLS: [%d] BPC: [%d]\n\n", (w*h*d), sizeof(CELL_BACK_BUFFER[0]));
	.loc 16 245 9
	imull	%edx, %eax	 # _253, _255
	movl	$2, %r8d	 #,
	movl	%eax, %edx	 # _255,
	leaq	.LC38(%rip), %rax	 #, tmp518
	movq	%rax, %rcx	 # tmp518,
	call	_Z6printfPKcz	 #
 # src\main.cpp:246: 		return width * height * depth;
	.loc 16 246 16
	movl	56(%rbp), %eax	 # width, tmp519
	imull	64(%rbp), %eax	 # height, _256
 # src\main.cpp:246: 		return width * height * depth;
	.loc 16 246 27
	imull	72(%rbp), %eax	 # depth, _453
 # src\main.cpp:247: 	}
	.loc 16 247 2
	addq	$104, %rsp	 #,
	popq	%rbx	 #
.LCFI290:
	popq	%rsi	 #
.LCFI291:
	popq	%rdi	 #
.LCFI292:
	popq	%rbp	 #
.LCFI293:
	ret	
.LFE10909:
	.seh_endproc
	.section	.text$_ZN6MATRIX11WriteDataToEjjjt,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX11WriteDataToEjjjt
	.def	_ZN6MATRIX11WriteDataToEjjjt;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX11WriteDataToEjjjt
_ZN6MATRIX11WriteDataToEjjjt:
.LFB10916:
	.loc 16 255 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI294:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI295:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI296:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI297:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 40(%rbp)	 # this, this
	movl	%r8d, 48(%rbp)	 # x, x
	movl	%r9d, 56(%rbp)	 # y, y
	movl	72(%rbp), %eax	 # _data, tmp103
	movw	%ax, -4(%rbp)	 # tmp104, _data
 # src\main.cpp:257: 		ClearDataFrom(x,y,z,CELL_ELEMENT_ALL);
	.loc 16 257 16
	movl	64(%rbp), %r8d	 # z, tmp105
	movl	56(%rbp), %ecx	 # y, tmp106
	movl	48(%rbp), %edx	 # x, tmp107
	movq	40(%rbp), %rax	 # this, tmp108
	movl	$63, 32(%rsp)	 #,
	movl	%r8d, %r9d	 # tmp105,
	movl	%ecx, %r8d	 # tmp106,
	movq	%rax, %rcx	 # tmp108,
	call	_ZN6MATRIX13ClearDataFromEjjjt	 #
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 10
	movq	40(%rbp), %rax	 # this, tmp109
	movl	32(%rax), %eax	 # this_20(D)->w, _1
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 12
	cmpl	%eax, 48(%rbp)	 # _1, x
	jb	.L222	 #,
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 14 discriminator 1
	movq	40(%rbp), %rax	 # this, tmp110
	movl	32(%rax), %eax	 # this_20(D)->w, _2
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 12 discriminator 1
	subl	$1, %eax	 #, iftmp.164_16
	jmp	.L223	 #
.L222:
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 12 is_stmt 0 discriminator 2
	movl	48(%rbp), %eax	 # x, iftmp.164_16
.L223:
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 5 is_stmt 1 discriminator 4
	movl	%eax, 48(%rbp)	 # iftmp.164_16, x
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 30 discriminator 4
	movq	40(%rbp), %rax	 # this, tmp111
	movl	36(%rax), %eax	 # this_20(D)->h, _3
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 32 discriminator 4
	cmpl	%eax, 56(%rbp)	 # _3, y
	jb	.L224	 #,
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 34 discriminator 5
	movq	40(%rbp), %rax	 # this, tmp112
	movl	36(%rax), %eax	 # this_20(D)->h, _4
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 32 discriminator 5
	subl	$1, %eax	 #, iftmp.165_17
	jmp	.L225	 #
.L224:
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 32 is_stmt 0 discriminator 6
	movl	56(%rbp), %eax	 # y, iftmp.165_17
.L225:
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 25 is_stmt 1 discriminator 8
	movl	%eax, 56(%rbp)	 # iftmp.165_17, y
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 50 discriminator 8
	movq	40(%rbp), %rax	 # this, tmp113
	movl	40(%rax), %eax	 # this_20(D)->d, _5
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 52 discriminator 8
	cmpl	%eax, 64(%rbp)	 # _5, z
	jb	.L226	 #,
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 54 discriminator 9
	movq	40(%rbp), %rax	 # this, tmp114
	movl	40(%rax), %eax	 # this_20(D)->d, _6
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 52 discriminator 9
	subl	$1, %eax	 #, iftmp.166_18
	jmp	.L227	 #
.L226:
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 52 is_stmt 0 discriminator 10
	movl	64(%rbp), %eax	 # z, iftmp.166_18
.L227:
 # src\main.cpp:258: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 258 45 is_stmt 1 discriminator 12
	movl	%eax, 64(%rbp)	 # iftmp.166_18, z
 # src\main.cpp:259: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)].MaterialType |= _data;
	.loc 16 259 3 discriminator 12
	movq	40(%rbp), %rax	 # this, tmp115
	movq	16(%rax), %rbx	 # this_20(D)->CELL_BACK_BUFFER, _34
 # src\main.cpp:259: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)].MaterialType |= _data;
	.loc 16 259 34 discriminator 12
	movl	64(%rbp), %r8d	 # z, tmp116
	movl	56(%rbp), %ecx	 # y, tmp117
	movl	48(%rbp), %edx	 # x, tmp118
	movq	40(%rbp), %rax	 # this, tmp119
	movl	%r8d, %r9d	 # tmp116,
	movl	%ecx, %r8d	 # tmp117,
	movq	%rax, %rcx	 # tmp119,
	call	_ZN6MATRIX14FlattenedIndexEjjj	 #
	movl	%eax, %eax	 # _7, _8
 # src\main.cpp:259: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)].MaterialType |= _data;
	.loc 16 259 43 discriminator 12
	addq	%rax, %rax	 # _9
	addq	%rbx, %rax	 # _34, _36
 # src\main.cpp:259: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)].MaterialType |= _data;
	.loc 16 259 45 discriminator 12
	movzwl	(%rax), %edx	 # _36->MaterialType, _10
 # src\main.cpp:259: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)].MaterialType |= _data;
	.loc 16 259 58 discriminator 12
	orw	-4(%rbp), %dx	 # _data, _11
	movw	%dx, (%rax)	 # _11, _36->MaterialType
 # src\main.cpp:260: 		return CELL_BACK_BUFFER[FlattenedIndex(x, y, z)];
	.loc 16 260 10 discriminator 12
	movq	40(%rbp), %rax	 # this, tmp120
	movq	16(%rax), %rbx	 # this_20(D)->CELL_BACK_BUFFER, _39
 # src\main.cpp:260: 		return CELL_BACK_BUFFER[FlattenedIndex(x, y, z)];
	.loc 16 260 41 discriminator 12
	movl	64(%rbp), %r8d	 # z, tmp121
	movl	56(%rbp), %ecx	 # y, tmp122
	movl	48(%rbp), %edx	 # x, tmp123
	movq	40(%rbp), %rax	 # this, tmp124
	movl	%r8d, %r9d	 # tmp121,
	movl	%ecx, %r8d	 # tmp122,
	movq	%rax, %rcx	 # tmp124,
	call	_ZN6MATRIX14FlattenedIndexEjjj	 #
	movl	%eax, %eax	 # _12, _13
 # src\main.cpp:260: 		return CELL_BACK_BUFFER[FlattenedIndex(x, y, z)];
	.loc 16 260 50 discriminator 12
	addq	%rax, %rax	 # _14
	leaq	(%rbx,%rax), %rdx	 #, _15
	movq	32(%rbp), %rax	 # <retval>, tmp125
	movzwl	(%rdx), %edx	 # MEM[(const struct cell &)_15], tmp126
	movw	%dx, (%rax)	 # tmp126, *_41(D)
 # src\main.cpp:261: 	}
	.loc 16 261 2 discriminator 12
	movq	32(%rbp), %rax	 # <retval>,
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI298:
	popq	%rbp	 #
.LCFI299:
	ret	
.LFE10916:
	.seh_endproc
	.section	.text$_ZN6MATRIX13ClearDataFromEjjjt,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX13ClearDataFromEjjjt
	.def	_ZN6MATRIX13ClearDataFromEjjjt;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX13ClearDataFromEjjjt
_ZN6MATRIX13ClearDataFromEjjjt:
.LFB10917:
	.loc 16 263 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI300:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI301:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI302:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI303:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movl	%edx, 40(%rbp)	 # x, x
	movl	%r8d, 48(%rbp)	 # y, y
	movl	%r9d, 56(%rbp)	 # z, z
	movl	64(%rbp), %eax	 # _data, tmp102
	movw	%ax, -4(%rbp)	 # tmp103, _data
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 10
	movq	32(%rbp), %rax	 # this, tmp104
	movl	32(%rax), %eax	 # this_20(D)->w, _1
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 12
	cmpl	%eax, 40(%rbp)	 # _1, x
	jb	.L230	 #,
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 14 discriminator 1
	movq	32(%rbp), %rax	 # this, tmp105
	movl	32(%rax), %eax	 # this_20(D)->w, _2
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 12 discriminator 1
	subl	$1, %eax	 #, iftmp.167_16
	jmp	.L231	 #
.L230:
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 12 is_stmt 0 discriminator 2
	movl	40(%rbp), %eax	 # x, iftmp.167_16
.L231:
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 5 is_stmt 1 discriminator 4
	movl	%eax, 40(%rbp)	 # iftmp.167_16, x
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 30 discriminator 4
	movq	32(%rbp), %rax	 # this, tmp106
	movl	36(%rax), %eax	 # this_20(D)->h, _3
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 32 discriminator 4
	cmpl	%eax, 48(%rbp)	 # _3, y
	jb	.L232	 #,
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 34 discriminator 5
	movq	32(%rbp), %rax	 # this, tmp107
	movl	36(%rax), %eax	 # this_20(D)->h, _4
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 32 discriminator 5
	subl	$1, %eax	 #, iftmp.168_17
	jmp	.L233	 #
.L232:
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 32 is_stmt 0 discriminator 6
	movl	48(%rbp), %eax	 # y, iftmp.168_17
.L233:
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 25 is_stmt 1 discriminator 8
	movl	%eax, 48(%rbp)	 # iftmp.168_17, y
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 50 discriminator 8
	movq	32(%rbp), %rax	 # this, tmp108
	movl	40(%rax), %eax	 # this_20(D)->d, _5
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 52 discriminator 8
	cmpl	%eax, 56(%rbp)	 # _5, z
	jb	.L234	 #,
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 54 discriminator 9
	movq	32(%rbp), %rax	 # this, tmp109
	movl	40(%rax), %eax	 # this_20(D)->d, _6
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 52 discriminator 9
	subl	$1, %eax	 #, iftmp.169_18
	jmp	.L235	 #
.L234:
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 52 is_stmt 0 discriminator 10
	movl	56(%rbp), %eax	 # z, iftmp.169_18
.L235:
 # src\main.cpp:265: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 265 45 is_stmt 1 discriminator 12
	movl	%eax, 56(%rbp)	 # iftmp.169_18, z
 # src\main.cpp:266: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)].MaterialType &= ~_data;
	.loc 16 266 3 discriminator 12
	movq	32(%rbp), %rax	 # this, tmp110
	movq	16(%rax), %rbx	 # this_20(D)->CELL_BACK_BUFFER, _33
 # src\main.cpp:266: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)].MaterialType &= ~_data;
	.loc 16 266 34 discriminator 12
	movl	56(%rbp), %r8d	 # z, tmp111
	movl	48(%rbp), %ecx	 # y, tmp112
	movl	40(%rbp), %edx	 # x, tmp113
	movq	32(%rbp), %rax	 # this, tmp114
	movl	%r8d, %r9d	 # tmp111,
	movl	%ecx, %r8d	 # tmp112,
	movq	%rax, %rcx	 # tmp114,
	call	_ZN6MATRIX14FlattenedIndexEjjj	 #
	movl	%eax, %eax	 # _7, _8
 # src\main.cpp:266: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)].MaterialType &= ~_data;
	.loc 16 266 43 discriminator 12
	addq	%rax, %rax	 # _9
	addq	%rbx, %rax	 # _33, _35
 # src\main.cpp:266: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)].MaterialType &= ~_data;
	.loc 16 266 45 discriminator 12
	movzwl	(%rax), %edx	 # _35->MaterialType, _10
	movl	%edx, %ecx	 # _10, _11
 # src\main.cpp:266: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)].MaterialType &= ~_data;
	.loc 16 266 58 discriminator 12
	movzwl	-4(%rbp), %edx	 # _data, _data.170_12
	notl	%edx	 # _13
	andl	%ecx, %edx	 # _11, _14
	movw	%dx, (%rax)	 # _15, _35->MaterialType
 # src\main.cpp:267: 	}
	.loc 16 267 2 discriminator 12
	nop	
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI304:
	popq	%rbp	 #
.LCFI305:
	ret	
.LFE10917:
	.seh_endproc
	.section	.text$_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE
	.def	_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE
_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE:
.LFB10918:
	.loc 16 269 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI306:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI307:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # hwnd, hwnd
	movq	%r8, 32(%rbp)	 # running, running
 # src\main.cpp:271: 		flag[ 0 ] |= CELL_DIRTY;
	.loc 16 271 3
	movq	16(%rbp), %rax	 # this, tmp153
	movq	(%rax), %rax	 # this_77(D)->flag, _1
 # src\main.cpp:271: 		flag[ 0 ] |= CELL_DIRTY;
	.loc 16 271 11
	movzwl	(%rax), %edx	 # *_1, _2
 # src\main.cpp:271: 		flag[ 0 ] |= CELL_DIRTY;
	.loc 16 271 3
	movq	16(%rbp), %rax	 # this, tmp154
	movq	(%rax), %rax	 # this_77(D)->flag, _3
 # src\main.cpp:271: 		flag[ 0 ] |= CELL_DIRTY;
	.loc 16 271 13
	orl	$64, %edx	 #, _4
	movw	%dx, (%rax)	 # _4, *_3
.LBB118:
 # src\main.cpp:273: 		if(flag[ 0 ] & CELL_DIRTY)
	.loc 16 273 6
	movq	16(%rbp), %rax	 # this, tmp155
	movq	(%rax), %rax	 # this_77(D)->flag, _5
 # src\main.cpp:273: 		if(flag[ 0 ] & CELL_DIRTY)
	.loc 16 273 14
	movzwl	(%rax), %eax	 # *_5, _6
 # src\main.cpp:273: 		if(flag[ 0 ] & CELL_DIRTY)
	.loc 16 273 16
	movzwl	%ax, %eax	 # _6, _7
	andl	$64, %eax	 #, _8
 # src\main.cpp:273: 		if(flag[ 0 ] & CELL_DIRTY)
	.loc 16 273 3
	testl	%eax, %eax	 # _8
	je	.L237	 #,
.LBB119:
 # src\main.cpp:275: 			std::swap(CELL_FRONT_BUFFER, CELL_BACK_BUFFER);
	.loc 16 275 33
	movq	16(%rbp), %rax	 # this, tmp156
	leaq	16(%rax), %rdx	 #, _9
 # src\main.cpp:275: 			std::swap(CELL_FRONT_BUFFER, CELL_BACK_BUFFER);
	.loc 16 275 14
	movq	16(%rbp), %rax	 # this, tmp157
	addq	$8, %rax	 #, _10
 # src\main.cpp:275: 			std::swap(CELL_FRONT_BUFFER, CELL_BACK_BUFFER);
	.loc 16 275 13
	movq	%rax, %rcx	 # _10,
	call	_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_	 #
 # src\main.cpp:276: 			D2D1_RECT_U rect = {0, 0, WIDTH, HEIGHT};
	.loc 16 276 16
	movl	$0, -32(%rbp)	 #, rect.left
	movl	$0, -28(%rbp)	 #, rect.top
	movl	$800, -24(%rbp)	 #, rect.right
	movl	$600, -20(%rbp)	 #, rect.bottom
 # src\main.cpp:277: 			Bitmap->CopyFromMemory(&rect, pixelBuffer, WIDTH * sizeof(uint32_t));
	.loc 16 277 26
	movq	Bitmap(%rip), %rax	 # Bitmap, Bitmap.124_12
	movq	(%rax), %rax	 # Bitmap.124_12->D.198697.D.198646.D.198587._vptr.IUnknown, _13
	addq	$80, %rax	 #, _14
	movq	(%rax), %r10	 # *_14, _15
	movq	Bitmap(%rip), %rax	 # Bitmap, Bitmap.125_16
	movq	pixelBuffer(%rip), %rcx	 # pixelBuffer, pixelBuffer.126_17
	leaq	-32(%rbp), %rdx	 #, tmp158
	movl	$3200, %r9d	 #,
	movq	%rcx, %r8	 # pixelBuffer.126_17,
	movq	%rax, %rcx	 # Bitmap.125_16,
	call	*%r10	 # _15
.LVL6:
 # src\main.cpp:278: 			InvalidateRect(hwnd, nullptr, FALSE);
	.loc 16 278 18
	movq	24(%rbp), %rax	 # hwnd, tmp159
	movl	$0, %r8d	 #,
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp159,
	movq	__imp_InvalidateRect(%rip), %rax	 #, tmp160
	call	*%rax	 # tmp160
.LVL7:
.L237:
.LBE119:
.LBE118:
.LBB120:
 # src\main.cpp:280: 		for(uint32_t i=0; i<w*h*d; ++i)
	.loc 16 280 16
	movl	$0, -4(%rbp)	 #, i
 # src\main.cpp:280: 		for(uint32_t i=0; i<w*h*d; ++i)
	.loc 16 280 3
	jmp	.L238	 #
.L243:
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 4
	movq	16(%rbp), %rax	 # this, tmp161
	movq	(%rax), %rax	 # this_77(D)->flag, _18
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 12
	movl	-4(%rbp), %edx	 # i, _19
	addq	%rdx, %rdx	 # _20
	addq	%rdx, %rax	 # _20, _21
	movzwl	(%rax), %r8d	 # *_21, _22
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 17
	movq	16(%rbp), %rax	 # this, tmp162
	movq	16(%rax), %rax	 # this_77(D)->CELL_BACK_BUFFER, _23
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 35
	movl	-4(%rbp), %edx	 # i, _24
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 37
	addq	%rdx, %rdx	 # _25
	addq	%rdx, %rax	 # _25, _26
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 39
	movzwl	(%rax), %edx	 # _26->MaterialType, _27
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 55
	movq	16(%rbp), %rax	 # this, tmp163
	movq	8(%rax), %rax	 # this_77(D)->CELL_FRONT_BUFFER, _28
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 74
	movl	-4(%rbp), %ecx	 # i, _29
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 76
	addq	%rcx, %rcx	 # _30
	addq	%rcx, %rax	 # _30, _31
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 78
	movzwl	(%rax), %eax	 # _31->MaterialType, _32
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 14
	cmpw	%ax, %dx	 # _32, _27
	je	.L239	 #,
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 14 is_stmt 0 discriminator 1
	movl	$64, %ecx	 #, iftmp.127_71
	jmp	.L240	 #
.L239:
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 14 discriminator 2
	movl	$0, %ecx	 #, iftmp.127_71
.L240:
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 4 is_stmt 1 discriminator 4
	movq	16(%rbp), %rax	 # this, tmp164
	movq	(%rax), %rax	 # this_77(D)->flag, _33
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 12 discriminator 4
	movl	-4(%rbp), %edx	 # i, _34
	addq	%rdx, %rdx	 # _35
	addq	%rdx, %rax	 # _35, _36
 # src\main.cpp:282: 			flag[ i ] |= CELL_BACK_BUFFER[ i ].MaterialType != CELL_FRONT_BUFFER[ i ].MaterialType ? CELL_DIRTY : CELL_NONE;
	.loc 16 282 14 discriminator 4
	orl	%r8d, %ecx	 # _22, iftmp.127_71
	movl	%ecx, %edx	 # iftmp.127_71, _37
	movw	%dx, (%rax)	 # _37, *_36
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 29 discriminator 4
	movq	16(%rbp), %rax	 # this, tmp165
	movq	(%rax), %rax	 # this_77(D)->flag, _38
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 35 discriminator 4
	movl	-4(%rbp), %edx	 # i, _39
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 37 discriminator 4
	addq	%rdx, %rdx	 # _40
	addq	%rdx, %rax	 # _40, _41
	movzwl	(%rax), %eax	 # *_41, _42
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 39 discriminator 4
	movzwl	%ax, %eax	 # _42, _43
	andl	$64, %eax	 #, _44
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 53 discriminator 4
	testl	%eax, %eax	 # _44
	je	.L241	 #,
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 55 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp166
	movq	8(%rax), %rax	 # this_77(D)->CELL_FRONT_BUFFER, _45
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 74 discriminator 1
	movl	-4(%rbp), %edx	 # i, _46
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 76 discriminator 1
	addq	%rdx, %rdx	 # _47
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 53 discriminator 1
	addq	%rdx, %rax	 # _47, iftmp.128_72
	jmp	.L242	 #
.L241:
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 80 discriminator 2
	movq	16(%rbp), %rax	 # this, tmp167
	movq	16(%rax), %rax	 # this_77(D)->CELL_BACK_BUFFER, _48
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 98 discriminator 2
	movl	-4(%rbp), %edx	 # i, _49
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 100 discriminator 2
	addq	%rdx, %rdx	 # _50
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 53 discriminator 2
	addq	%rdx, %rax	 # _50, iftmp.128_72
.L242:
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 4 discriminator 4
	movq	16(%rbp), %rdx	 # this, tmp168
	movq	16(%rdx), %rdx	 # this_77(D)->CELL_BACK_BUFFER, _51
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 22 discriminator 4
	movl	-4(%rbp), %ecx	 # i, _52
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 24 discriminator 4
	addq	%rcx, %rcx	 # _53
	addq	%rcx, %rdx	 # _53, _54
 # src\main.cpp:283: 			CELL_BACK_BUFFER[ i ] = (flag[ i ] & CELL_DIRTY) ? CELL_FRONT_BUFFER[ i ] : CELL_BACK_BUFFER[ i ];
	.loc 16 283 26 discriminator 4
	movzwl	(%rax), %eax	 # MEM[(const struct cell &)iftmp.128_72], tmp169
	movw	%ax, (%rdx)	 # tmp169, *_54
 # src\main.cpp:284: 			flag[ i ] &= ~CELL_DIRTY;
	.loc 16 284 4 discriminator 4
	movq	16(%rbp), %rax	 # this, tmp170
	movq	(%rax), %rax	 # this_77(D)->flag, _55
 # src\main.cpp:284: 			flag[ i ] &= ~CELL_DIRTY;
	.loc 16 284 12 discriminator 4
	movl	-4(%rbp), %edx	 # i, _56
	addq	%rdx, %rdx	 # _57
	addq	%rdx, %rax	 # _57, _58
	movzwl	(%rax), %edx	 # *_58, _59
 # src\main.cpp:284: 			flag[ i ] &= ~CELL_DIRTY;
	.loc 16 284 4 discriminator 4
	movq	16(%rbp), %rax	 # this, tmp171
	movq	(%rax), %rax	 # this_77(D)->flag, _60
 # src\main.cpp:284: 			flag[ i ] &= ~CELL_DIRTY;
	.loc 16 284 12 discriminator 4
	movl	-4(%rbp), %ecx	 # i, _61
	addq	%rcx, %rcx	 # _62
	addq	%rcx, %rax	 # _62, _63
 # src\main.cpp:284: 			flag[ i ] &= ~CELL_DIRTY;
	.loc 16 284 14 discriminator 4
	andl	$-65, %edx	 #, _64
	movw	%dx, (%rax)	 # _64, *_63
 # src\main.cpp:280: 		for(uint32_t i=0; i<w*h*d; ++i)
	.loc 16 280 3 discriminator 4
	addl	$1, -4(%rbp)	 #, i
.L238:
 # src\main.cpp:280: 		for(uint32_t i=0; i<w*h*d; ++i)
	.loc 16 280 23 discriminator 2
	movq	16(%rbp), %rax	 # this, tmp172
	movl	32(%rax), %edx	 # this_77(D)->w, _65
 # src\main.cpp:280: 		for(uint32_t i=0; i<w*h*d; ++i)
	.loc 16 280 25 discriminator 2
	movq	16(%rbp), %rax	 # this, tmp173
	movl	36(%rax), %eax	 # this_77(D)->h, _66
 # src\main.cpp:280: 		for(uint32_t i=0; i<w*h*d; ++i)
	.loc 16 280 24 discriminator 2
	imull	%eax, %edx	 # _66, _67
 # src\main.cpp:280: 		for(uint32_t i=0; i<w*h*d; ++i)
	.loc 16 280 27 discriminator 2
	movq	16(%rbp), %rax	 # this, tmp174
	movl	40(%rax), %eax	 # this_77(D)->d, _68
 # src\main.cpp:280: 		for(uint32_t i=0; i<w*h*d; ++i)
	.loc 16 280 26 discriminator 2
	imull	%edx, %eax	 # _67, _69
 # src\main.cpp:280: 		for(uint32_t i=0; i<w*h*d; ++i)
	.loc 16 280 22 discriminator 2
	cmpl	%eax, -4(%rbp)	 # _69, i
	jb	.L243	 #,
.LBE120:
 # src\main.cpp:286: 	}
	.loc 16 286 2
	nop	
	nop	
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI308:
	ret	
.LFE10918:
	.seh_endproc
	.section	.text$_ZN6MATRIX14FlattenedIndexEjjj,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX14FlattenedIndexEjjj
	.def	_ZN6MATRIX14FlattenedIndexEjjj;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX14FlattenedIndexEjjj
_ZN6MATRIX14FlattenedIndexEjjj:
.LFB10921:
	.loc 16 333 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI309:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI310:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, 24(%rbp)	 # x, x
	movl	%r8d, 32(%rbp)	 # y, y
	movl	%r9d, 40(%rbp)	 # z, z
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 10
	movq	16(%rbp), %rax	 # this, tmp100
	movl	32(%rax), %eax	 # this_18(D)->w, _1
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 12
	cmpl	%eax, 24(%rbp)	 # _1, x
	jb	.L245	 #,
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 14 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp101
	movl	32(%rax), %eax	 # this_18(D)->w, _2
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 12 discriminator 1
	subl	$1, %eax	 #, iftmp.171_14
	jmp	.L246	 #
.L245:
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 12 is_stmt 0 discriminator 2
	movl	24(%rbp), %eax	 # x, iftmp.171_14
.L246:
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 5 is_stmt 1 discriminator 4
	movl	%eax, 24(%rbp)	 # iftmp.171_14, x
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 30 discriminator 4
	movq	16(%rbp), %rax	 # this, tmp102
	movl	36(%rax), %eax	 # this_18(D)->h, _3
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 32 discriminator 4
	cmpl	%eax, 32(%rbp)	 # _3, y
	jb	.L247	 #,
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 34 discriminator 5
	movq	16(%rbp), %rax	 # this, tmp103
	movl	36(%rax), %eax	 # this_18(D)->h, _4
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 32 discriminator 5
	subl	$1, %eax	 #, iftmp.172_15
	jmp	.L248	 #
.L247:
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 32 is_stmt 0 discriminator 6
	movl	32(%rbp), %eax	 # y, iftmp.172_15
.L248:
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 25 is_stmt 1 discriminator 8
	movl	%eax, 32(%rbp)	 # iftmp.172_15, y
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 50 discriminator 8
	movq	16(%rbp), %rax	 # this, tmp104
	movl	40(%rax), %eax	 # this_18(D)->d, _5
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 52 discriminator 8
	cmpl	%eax, 40(%rbp)	 # _5, z
	jb	.L249	 #,
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 54 discriminator 9
	movq	16(%rbp), %rax	 # this, tmp105
	movl	40(%rax), %eax	 # this_18(D)->d, _6
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 52 discriminator 9
	subl	$1, %eax	 #, iftmp.173_16
	jmp	.L250	 #
.L249:
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 52 is_stmt 0 discriminator 10
	movl	40(%rbp), %eax	 # z, iftmp.173_16
.L250:
 # src\main.cpp:335: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 16 335 45 is_stmt 1 discriminator 12
	movl	%eax, 40(%rbp)	 # iftmp.173_16, z
 # src\main.cpp:336: 		return z * (w * h) + y * w + x; 
	.loc 16 336 15 discriminator 12
	movq	16(%rbp), %rax	 # this, tmp106
	movl	32(%rax), %edx	 # this_18(D)->w, _7
 # src\main.cpp:336: 		return z * (w * h) + y * w + x; 
	.loc 16 336 19 discriminator 12
	movq	16(%rbp), %rax	 # this, tmp107
	movl	36(%rax), %eax	 # this_18(D)->h, _8
 # src\main.cpp:336: 		return z * (w * h) + y * w + x; 
	.loc 16 336 17 discriminator 12
	imull	%edx, %eax	 # _7, _9
 # src\main.cpp:336: 		return z * (w * h) + y * w + x; 
	.loc 16 336 12 discriminator 12
	imull	40(%rbp), %eax	 # z, _9
	movl	%eax, %edx	 # _9, _10
 # src\main.cpp:336: 		return z * (w * h) + y * w + x; 
	.loc 16 336 28 discriminator 12
	movq	16(%rbp), %rax	 # this, tmp108
	movl	32(%rax), %eax	 # this_18(D)->w, _11
 # src\main.cpp:336: 		return z * (w * h) + y * w + x; 
	.loc 16 336 26 discriminator 12
	imull	32(%rbp), %eax	 # y, _12
 # src\main.cpp:336: 		return z * (w * h) + y * w + x; 
	.loc 16 336 22 discriminator 12
	addl	%eax, %edx	 # _12, _13
 # src\main.cpp:336: 		return z * (w * h) + y * w + x; 
	.loc 16 336 32 discriminator 12
	movl	24(%rbp), %eax	 # x, tmp109
	addl	%edx, %eax	 # _13, _31
 # src\main.cpp:337: 	}
	.loc 16 337 2 discriminator 12
	popq	%rbp	 #
.LCFI311:
	ret	
.LFE10921:
	.seh_endproc
	.section	.text$_ZN6MATRIX13DestroyMatrixEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX13DestroyMatrixEv
	.def	_ZN6MATRIX13DestroyMatrixEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX13DestroyMatrixEv
_ZN6MATRIX13DestroyMatrixEv:
.LFB10922:
	.loc 16 357 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI312:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI313:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB121:
 # src\main.cpp:359: 		for(uint32_t i=0; i<w * h * d; ++i)
	.loc 16 359 16
	movl	$0, -4(%rbp)	 #, i
 # src\main.cpp:359: 		for(uint32_t i=0; i<w * h * d; ++i)
	.loc 16 359 3
	jmp	.L253	 #
.L254:
 # src\main.cpp:361: 			CELL_FRONT_BUFFER[i].~cell();
	.loc 16 361 4 discriminator 3
	movq	16(%rbp), %rax	 # this, tmp98
	movq	8(%rax), %rax	 # this_21(D)->CELL_FRONT_BUFFER, _1
 # src\main.cpp:361: 			CELL_FRONT_BUFFER[i].~cell();
	.loc 16 361 22 discriminator 3
	movl	-4(%rbp), %edx	 # i, _2
 # src\main.cpp:361: 			CELL_FRONT_BUFFER[i].~cell();
	.loc 16 361 23 discriminator 3
	addq	%rdx, %rdx	 # _3
 # src\main.cpp:361: 			CELL_FRONT_BUFFER[i].~cell();
	.loc 16 361 30 discriminator 3
	addq	%rdx, %rax	 # _3, _4
	movq	%rax, %rcx	 # _4,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:362: 			CELL_BACK_BUFFER[ i].~cell();
	.loc 16 362 4 discriminator 3
	movq	16(%rbp), %rax	 # this, tmp99
	movq	16(%rax), %rax	 # this_21(D)->CELL_BACK_BUFFER, _5
 # src\main.cpp:362: 			CELL_BACK_BUFFER[ i].~cell();
	.loc 16 362 22 discriminator 3
	movl	-4(%rbp), %edx	 # i, _6
 # src\main.cpp:362: 			CELL_BACK_BUFFER[ i].~cell();
	.loc 16 362 23 discriminator 3
	addq	%rdx, %rdx	 # _7
 # src\main.cpp:362: 			CELL_BACK_BUFFER[ i].~cell();
	.loc 16 362 30 discriminator 3
	addq	%rdx, %rax	 # _7, _8
	movq	%rax, %rcx	 # _8,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:359: 		for(uint32_t i=0; i<w * h * d; ++i)
	.loc 16 359 3 discriminator 3
	addl	$1, -4(%rbp)	 #, i
.L253:
 # src\main.cpp:359: 		for(uint32_t i=0; i<w * h * d; ++i)
	.loc 16 359 23 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp100
	movl	32(%rax), %edx	 # this_21(D)->w, _9
 # src\main.cpp:359: 		for(uint32_t i=0; i<w * h * d; ++i)
	.loc 16 359 27 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp101
	movl	36(%rax), %eax	 # this_21(D)->h, _10
 # src\main.cpp:359: 		for(uint32_t i=0; i<w * h * d; ++i)
	.loc 16 359 25 discriminator 1
	imull	%eax, %edx	 # _10, _11
 # src\main.cpp:359: 		for(uint32_t i=0; i<w * h * d; ++i)
	.loc 16 359 31 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp102
	movl	40(%rax), %eax	 # this_21(D)->d, _12
 # src\main.cpp:359: 		for(uint32_t i=0; i<w * h * d; ++i)
	.loc 16 359 29 discriminator 1
	imull	%edx, %eax	 # _11, _13
 # src\main.cpp:359: 		for(uint32_t i=0; i<w * h * d; ++i)
	.loc 16 359 22 discriminator 1
	cmpl	%eax, -4(%rbp)	 # _13, i
	jb	.L254	 #,
.LBE121:
 # src\main.cpp:364: 		free(CELL_FRONT_BUFFER); CELL_FRONT_BUFFER = nullptr;
	.loc 16 364 8
	movq	16(%rbp), %rax	 # this, tmp103
	movq	8(%rax), %rax	 # this_21(D)->CELL_FRONT_BUFFER, _14
 # src\main.cpp:364: 		free(CELL_FRONT_BUFFER); CELL_FRONT_BUFFER = nullptr;
	.loc 16 364 7
	movq	%rax, %rcx	 # _14,
	call	free	 #
 # src\main.cpp:364: 		free(CELL_FRONT_BUFFER); CELL_FRONT_BUFFER = nullptr;
	.loc 16 364 46
	movq	16(%rbp), %rax	 # this, tmp104
	movq	$0, 8(%rax)	 #, this_21(D)->CELL_FRONT_BUFFER
 # src\main.cpp:365: 		free(CELL_BACK_BUFFER ); CELL_BACK_BUFFER  = nullptr;
	.loc 16 365 8
	movq	16(%rbp), %rax	 # this, tmp105
	movq	16(%rax), %rax	 # this_21(D)->CELL_BACK_BUFFER, _15
 # src\main.cpp:365: 		free(CELL_BACK_BUFFER ); CELL_BACK_BUFFER  = nullptr;
	.loc 16 365 7
	movq	%rax, %rcx	 # _15,
	call	free	 #
 # src\main.cpp:365: 		free(CELL_BACK_BUFFER ); CELL_BACK_BUFFER  = nullptr;
	.loc 16 365 46
	movq	16(%rbp), %rax	 # this, tmp106
	movq	$0, 16(%rax)	 #, this_21(D)->CELL_BACK_BUFFER
 # src\main.cpp:366: 		free(flag);              flag              = nullptr;
	.loc 16 366 8
	movq	16(%rbp), %rax	 # this, tmp107
	movq	(%rax), %rax	 # this_21(D)->flag, _16
 # src\main.cpp:366: 		free(flag);              flag              = nullptr;
	.loc 16 366 7
	movq	%rax, %rcx	 # _16,
	call	free	 #
 # src\main.cpp:366: 		free(flag);              flag              = nullptr;
	.loc 16 366 46
	movq	16(%rbp), %rax	 # this, tmp108
	movq	$0, (%rax)	 #, this_21(D)->flag
 # src\main.cpp:367: 	}
	.loc 16 367 2
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI314:
	ret	
.LFE10922:
	.seh_endproc
	.section	.text$_ZN6Camera6SetFOVEf,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6Camera6SetFOVEf
	.def	_ZN6Camera6SetFOVEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera6SetFOVEf
_ZN6Camera6SetFOVEf:
.LFB10923:
	.loc 16 375 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI315:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI316:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movss	%xmm1, 24(%rbp)	 # degrees, degrees
 # src\main.cpp:376:         FOV = degrees;
	.loc 16 376 13
	movq	16(%rbp), %rax	 # this, tmp82
	movss	24(%rbp), %xmm0	 # degrees, tmp83
	movss	%xmm0, 72(%rax)	 # tmp83, this_2(D)->FOV
 # src\main.cpp:377:     }
	.loc 16 377 5
	nop	
	popq	%rbp	 #
.LCFI317:
	ret	
.LFE10923:
	.seh_endproc
	.section	.text$_ZN6Camera11SetPositionE5Vec3D,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6Camera11SetPositionE5Vec3D
	.def	_ZN6Camera11SetPositionE5Vec3D;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera11SetPositionE5Vec3D
_ZN6Camera11SetPositionE5Vec3D:
.LFB10924:
	.loc 16 379 10
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI318:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI319:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI320:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI321:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, %rbx	 #, tmp82
 # src\main.cpp:380:         position = pos;
	.loc 16 380 18
	movq	32(%rbp), %rax	 # this, tmp83
	movq	(%rbx), %rdx	 # pos, tmp84
	movq	%rdx, 36(%rax)	 # tmp84, this_2(D)->position
	movl	8(%rbx), %edx	 # pos, tmp85
	movl	%edx, 44(%rax)	 # tmp85, this_2(D)->position
 # src\main.cpp:381:         UpdateBasis();
	.loc 16 381 20
	movq	32(%rbp), %rax	 # this, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZN6Camera11UpdateBasisEv	 #
 # src\main.cpp:382:     }
	.loc 16 382 5
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI322:
	popq	%rbp	 #
.LCFI323:
	ret	
.LFE10924:
	.seh_endproc
	.section	.text$_ZN6Camera6RotateEff,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6Camera6RotateEff
	.def	_ZN6Camera6RotateEff;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera6RotateEff
_ZN6Camera6RotateEff:
.LFB10925:
	.loc 16 384 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI324:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI325:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movss	%xmm1, 24(%rbp)	 # deltaYaw, deltaYaw
	movss	%xmm2, 32(%rbp)	 # deltaPitch, deltaPitch
 # src\main.cpp:385:         yaw += deltaYaw;
	.loc 16 385 9
	movq	16(%rbp), %rax	 # this, tmp88
	movss	76(%rax), %xmm0	 # this_10(D)->yaw, _1
 # src\main.cpp:385:         yaw += deltaYaw;
	.loc 16 385 13
	addss	24(%rbp), %xmm0	 # deltaYaw, _2
	movq	16(%rbp), %rax	 # this, tmp89
	movss	%xmm0, 76(%rax)	 # _2, this_10(D)->yaw
 # src\main.cpp:386:         pitch += deltaPitch;
	.loc 16 386 9
	movq	16(%rbp), %rax	 # this, tmp90
	movss	80(%rax), %xmm0	 # this_10(D)->pitch, _3
 # src\main.cpp:386:         pitch += deltaPitch;
	.loc 16 386 15
	addss	32(%rbp), %xmm0	 # deltaPitch, _4
	movq	16(%rbp), %rax	 # this, tmp91
	movss	%xmm0, 80(%rax)	 # _4, this_10(D)->pitch
 # src\main.cpp:389:         const float pitchLimit = 89.0f;
	.loc 16 389 21
	movss	.LC39(%rip), %xmm0	 #, tmp92
	movss	%xmm0, -4(%rbp)	 # tmp92, pitchLimit
 # src\main.cpp:390:         if (pitch > pitchLimit) pitch = pitchLimit;
	.loc 16 390 13
	movq	16(%rbp), %rax	 # this, tmp93
	movss	80(%rax), %xmm0	 # this_10(D)->pitch, _5
 # src\main.cpp:390:         if (pitch > pitchLimit) pitch = pitchLimit;
	.loc 16 390 9
	comiss	.LC39(%rip), %xmm0	 #, _5
	jbe	.L258	 #,
 # src\main.cpp:390:         if (pitch > pitchLimit) pitch = pitchLimit;
	.loc 16 390 39 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp94
	movss	.LC39(%rip), %xmm0	 #, tmp95
	movss	%xmm0, 80(%rax)	 # tmp95, this_10(D)->pitch
.L258:
 # src\main.cpp:391:         if (pitch < -pitchLimit) pitch = -pitchLimit;
	.loc 16 391 13
	movq	16(%rbp), %rax	 # this, tmp96
	movss	80(%rax), %xmm1	 # this_10(D)->pitch, _6
 # src\main.cpp:391:         if (pitch < -pitchLimit) pitch = -pitchLimit;
	.loc 16 391 9
	movss	.LC40(%rip), %xmm0	 #, tmp97
	comiss	%xmm1, %xmm0	 # _6, tmp97
	jbe	.L260	 #,
 # src\main.cpp:391:         if (pitch < -pitchLimit) pitch = -pitchLimit;
	.loc 16 391 40 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp98
	movss	.LC40(%rip), %xmm0	 #, tmp99
	movss	%xmm0, 80(%rax)	 # tmp99, this_10(D)->pitch
.L260:
 # src\main.cpp:393:         UpdateBasis();
	.loc 16 393 20
	movq	16(%rbp), %rax	 # this, tmp100
	movq	%rax, %rcx	 # tmp100,
	call	_ZN6Camera11UpdateBasisEv	 #
 # src\main.cpp:394:     }
	.loc 16 394 5
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI326:
	ret	
.LFE10925:
	.seh_endproc
	.section	.text$_ZN6Camera11MoveForwardEf,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6Camera11MoveForwardEf
	.def	_ZN6Camera11MoveForwardEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera11MoveForwardEf
_ZN6Camera11MoveForwardEf:
.LFB10926:
	.loc 16 396 10
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI327:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI328:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI329:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI330:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movss	%xmm1, 40(%rbp)	 # amount, amount
 # src\main.cpp:398:         position = position - forward * amount;
	.loc 16 398 41
	movq	32(%rbp), %rdx	 # this, _1
	leaq	-12(%rbp), %rax	 #, tmp84
	movss	40(%rbp), %xmm0	 # amount, tmp85
	movaps	%xmm0, %xmm2	 # tmp85,
	movq	%rax, %rcx	 # tmp84,
	call	_ZNK5Vec3DmlEf	 #
	movq	32(%rbp), %rax	 # this, tmp86
	leaq	36(%rax), %rdx	 #, _2
	movq	32(%rbp), %rbx	 # this, tmp87
	leaq	-32(%rbp), %rax	 #, tmp88
	leaq	-12(%rbp), %rcx	 #, tmp89
	movq	%rcx, %r8	 # tmp89,
	movq	%rax, %rcx	 # tmp88,
	call	_ZNK5Vec3DmiERKS_	 #
	movq	-32(%rbp), %rax	 #, tmp90
	movq	%rax, 36(%rbx)	 # tmp90, this_3(D)->position
	movl	-24(%rbp), %eax	 #, tmp91
	movl	%eax, 44(%rbx)	 # tmp91, this_3(D)->position
 # src\main.cpp:399:     }
	.loc 16 399 5
	nop	
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI331:
	popq	%rbp	 #
.LCFI332:
	ret	
.LFE10926:
	.seh_endproc
	.section	.text$_ZN6Camera8MoveBackEf,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6Camera8MoveBackEf
	.def	_ZN6Camera8MoveBackEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera8MoveBackEf
_ZN6Camera8MoveBackEf:
.LFB10927:
	.loc 16 401 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI333:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI334:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI335:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI336:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movss	%xmm1, 40(%rbp)	 # amount, amount
 # src\main.cpp:403: 		position = position + forward * amount;
	.loc 16 403 35
	movq	32(%rbp), %rdx	 # this, _1
	leaq	-12(%rbp), %rax	 #, tmp84
	movss	40(%rbp), %xmm0	 # amount, tmp85
	movaps	%xmm0, %xmm2	 # tmp85,
	movq	%rax, %rcx	 # tmp84,
	call	_ZNK5Vec3DmlEf	 #
	movq	32(%rbp), %rax	 # this, tmp86
	leaq	36(%rax), %rdx	 #, _2
	movq	32(%rbp), %rbx	 # this, tmp87
	leaq	-32(%rbp), %rax	 #, tmp88
	leaq	-12(%rbp), %rcx	 #, tmp89
	movq	%rcx, %r8	 # tmp89,
	movq	%rax, %rcx	 # tmp88,
	call	_ZNK5Vec3DplERKS_	 #
	movq	-32(%rbp), %rax	 #, tmp90
	movq	%rax, 36(%rbx)	 # tmp90, this_3(D)->position
	movl	-24(%rbp), %eax	 #, tmp91
	movl	%eax, 44(%rbx)	 # tmp91, this_3(D)->position
 # src\main.cpp:404: 	}
	.loc 16 404 2
	nop	
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI337:
	popq	%rbp	 #
.LCFI338:
	ret	
.LFE10927:
	.seh_endproc
	.section	.text$_ZN6Camera9MoveRightEf,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6Camera9MoveRightEf
	.def	_ZN6Camera9MoveRightEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera9MoveRightEf
_ZN6Camera9MoveRightEf:
.LFB10928:
	.loc 16 406 10
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI339:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI340:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI341:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI342:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movss	%xmm1, 40(%rbp)	 # amount, amount
 # src\main.cpp:408:         position = position + right * amount;
	.loc 16 408 39
	movq	32(%rbp), %rax	 # this, tmp84
	leaq	12(%rax), %rdx	 #, _1
	leaq	-12(%rbp), %rax	 #, tmp85
	movss	40(%rbp), %xmm0	 # amount, tmp86
	movaps	%xmm0, %xmm2	 # tmp86,
	movq	%rax, %rcx	 # tmp85,
	call	_ZNK5Vec3DmlEf	 #
	movq	32(%rbp), %rax	 # this, tmp87
	leaq	36(%rax), %rdx	 #, _2
	movq	32(%rbp), %rbx	 # this, tmp88
	leaq	-32(%rbp), %rax	 #, tmp89
	leaq	-12(%rbp), %rcx	 #, tmp90
	movq	%rcx, %r8	 # tmp90,
	movq	%rax, %rcx	 # tmp89,
	call	_ZNK5Vec3DplERKS_	 #
	movq	-32(%rbp), %rax	 #, tmp91
	movq	%rax, 36(%rbx)	 # tmp91, this_3(D)->position
	movl	-24(%rbp), %eax	 #, tmp92
	movl	%eax, 44(%rbx)	 # tmp92, this_3(D)->position
 # src\main.cpp:409:     }
	.loc 16 409 5
	nop	
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI343:
	popq	%rbp	 #
.LCFI344:
	ret	
.LFE10928:
	.seh_endproc
	.section	.text$_ZN6Camera8MoveLeftEf,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6Camera8MoveLeftEf
	.def	_ZN6Camera8MoveLeftEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera8MoveLeftEf
_ZN6Camera8MoveLeftEf:
.LFB10929:
	.loc 16 411 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI345:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI346:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI347:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI348:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movss	%xmm1, 40(%rbp)	 # amount, amount
 # src\main.cpp:413:         position = position - right * amount;
	.loc 16 413 39
	movq	32(%rbp), %rax	 # this, tmp84
	leaq	12(%rax), %rdx	 #, _1
	leaq	-12(%rbp), %rax	 #, tmp85
	movss	40(%rbp), %xmm0	 # amount, tmp86
	movaps	%xmm0, %xmm2	 # tmp86,
	movq	%rax, %rcx	 # tmp85,
	call	_ZNK5Vec3DmlEf	 #
	movq	32(%rbp), %rax	 # this, tmp87
	leaq	36(%rax), %rdx	 #, _2
	movq	32(%rbp), %rbx	 # this, tmp88
	leaq	-32(%rbp), %rax	 #, tmp89
	leaq	-12(%rbp), %rcx	 #, tmp90
	movq	%rcx, %r8	 # tmp90,
	movq	%rax, %rcx	 # tmp89,
	call	_ZNK5Vec3DmiERKS_	 #
	movq	-32(%rbp), %rax	 #, tmp91
	movq	%rax, 36(%rbx)	 # tmp91, this_3(D)->position
	movl	-24(%rbp), %eax	 #, tmp92
	movl	%eax, 44(%rbx)	 # tmp92, this_3(D)->position
 # src\main.cpp:414:     }
	.loc 16 414 5
	nop	
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI349:
	popq	%rbp	 #
.LCFI350:
	ret	
.LFE10929:
	.seh_endproc
	.section	.text$_ZN6Camera6MoveUpEf,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6Camera6MoveUpEf
	.def	_ZN6Camera6MoveUpEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera6MoveUpEf
_ZN6Camera6MoveUpEf:
.LFB10930:
	.loc 16 416 10
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI351:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI352:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI353:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI354:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movss	%xmm1, 40(%rbp)	 # amount, amount
 # src\main.cpp:418:         position = position + up * amount;
	.loc 16 418 36
	movq	32(%rbp), %rax	 # this, tmp84
	leaq	24(%rax), %rdx	 #, _1
	leaq	-12(%rbp), %rax	 #, tmp85
	movss	40(%rbp), %xmm0	 # amount, tmp86
	movaps	%xmm0, %xmm2	 # tmp86,
	movq	%rax, %rcx	 # tmp85,
	call	_ZNK5Vec3DmlEf	 #
	movq	32(%rbp), %rax	 # this, tmp87
	leaq	36(%rax), %rdx	 #, _2
	movq	32(%rbp), %rbx	 # this, tmp88
	leaq	-32(%rbp), %rax	 #, tmp89
	leaq	-12(%rbp), %rcx	 #, tmp90
	movq	%rcx, %r8	 # tmp90,
	movq	%rax, %rcx	 # tmp89,
	call	_ZNK5Vec3DplERKS_	 #
	movq	-32(%rbp), %rax	 #, tmp91
	movq	%rax, 36(%rbx)	 # tmp91, this_3(D)->position
	movl	-24(%rbp), %eax	 #, tmp92
	movl	%eax, 44(%rbx)	 # tmp92, this_3(D)->position
 # src\main.cpp:419:     }
	.loc 16 419 5
	nop	
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI355:
	popq	%rbp	 #
.LCFI356:
	ret	
.LFE10930:
	.seh_endproc
	.section	.text$_ZN6Camera8MoveDownEf,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6Camera8MoveDownEf
	.def	_ZN6Camera8MoveDownEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera8MoveDownEf
_ZN6Camera8MoveDownEf:
.LFB10931:
	.loc 16 421 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI357:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI358:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI359:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI360:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movss	%xmm1, 40(%rbp)	 # amount, amount
 # src\main.cpp:423:         position = position - up * amount;
	.loc 16 423 36
	movq	32(%rbp), %rax	 # this, tmp84
	leaq	24(%rax), %rdx	 #, _1
	leaq	-12(%rbp), %rax	 #, tmp85
	movss	40(%rbp), %xmm0	 # amount, tmp86
	movaps	%xmm0, %xmm2	 # tmp86,
	movq	%rax, %rcx	 # tmp85,
	call	_ZNK5Vec3DmlEf	 #
	movq	32(%rbp), %rax	 # this, tmp87
	leaq	36(%rax), %rdx	 #, _2
	movq	32(%rbp), %rbx	 # this, tmp88
	leaq	-32(%rbp), %rax	 #, tmp89
	leaq	-12(%rbp), %rcx	 #, tmp90
	movq	%rcx, %r8	 # tmp90,
	movq	%rax, %rcx	 # tmp89,
	call	_ZNK5Vec3DmiERKS_	 #
	movq	-32(%rbp), %rax	 #, tmp91
	movq	%rax, 36(%rbx)	 # tmp91, this_3(D)->position
	movl	-24(%rbp), %eax	 #, tmp92
	movl	%eax, 44(%rbx)	 # tmp92, this_3(D)->position
 # src\main.cpp:424:     }
	.loc 16 424 5
	nop	
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI361:
	popq	%rbp	 #
.LCFI362:
	ret	
.LFE10931:
	.seh_endproc
	.section	.text$_ZNK6Camera11GetPositionEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK6Camera11GetPositionEv
	.def	_ZNK6Camera11GetPositionEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK6Camera11GetPositionEv
_ZNK6Camera11GetPositionEv:
.LFB10932:
	.loc 16 426 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI363:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI364:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
 # src\main.cpp:427:         return position;
	.loc 16 427 16
	movq	16(%rbp), %rax	 # .result_ptr, tmp82
	movq	24(%rbp), %rdx	 # this, tmp83
	movq	36(%rdx), %rcx	 # this_2(D)->position, tmp84
	movq	%rcx, (%rax)	 # tmp84, <retval>
	movl	44(%rdx), %edx	 # this_2(D)->position, tmp85
	movl	%edx, 8(%rax)	 # tmp85, <retval>
 # src\main.cpp:428:     }
	.loc 16 428 5
	movq	16(%rbp), %rax	 # .result_ptr,
	popq	%rbp	 #
.LCFI365:
	ret	
.LFE10932:
	.seh_endproc
	.section	.text$_ZNK6Camera20GenerateRayDirectionEiiii,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK6Camera20GenerateRayDirectionEiiii
	.def	_ZNK6Camera20GenerateRayDirectionEiiii;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK6Camera20GenerateRayDirectionEiiii
_ZNK6Camera20GenerateRayDirectionEiiii:
.LFB10933:
	.loc 16 430 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI366:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI367:
	addq	$-128, %rsp	 #,
	.seh_stackalloc	128
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
	movl	%r8d, 32(%rbp)	 # i, i
	movl	%r9d, 40(%rbp)	 # j, j
 # src\main.cpp:431:         float aspectRatio = static_cast<float>(screenWidth) / static_cast<float>(screenHeight);
	.loc 16 431 29
	pxor	%xmm0, %xmm0	 # _1
	cvtsi2ssl	48(%rbp), %xmm0	 # screenWidth, _1
 # src\main.cpp:431:         float aspectRatio = static_cast<float>(screenWidth) / static_cast<float>(screenHeight);
	.loc 16 431 63
	pxor	%xmm1, %xmm1	 # _2
	cvtsi2ssl	56(%rbp), %xmm1	 # screenHeight, _2
 # src\main.cpp:431:         float aspectRatio = static_cast<float>(screenWidth) / static_cast<float>(screenHeight);
	.loc 16 431 15
	divss	%xmm1, %xmm0	 # _2, tmp99
	movss	%xmm0, -4(%rbp)	 # tmp99, aspectRatio
 # src\main.cpp:432:         float fovRadians = FOV * (3.14159f / 180.0f);
	.loc 16 432 28
	movq	24(%rbp), %rax	 # this, tmp100
	movss	72(%rax), %xmm1	 # this_22(D)->FOV, _3
 # src\main.cpp:432:         float fovRadians = FOV * (3.14159f / 180.0f);
	.loc 16 432 15
	movss	.LC41(%rip), %xmm0	 #, tmp102
	mulss	%xmm1, %xmm0	 # _3, tmp101
	movss	%xmm0, -8(%rbp)	 # tmp101, fovRadians
 # src\main.cpp:433:         float screenHalfWidth = tanf(fovRadians / 2.0f);
	.loc 16 433 37
	movss	-8(%rbp), %xmm0	 # fovRadians, tmp103
	movss	.LC42(%rip), %xmm1	 #, tmp104
	divss	%xmm1, %xmm0	 # tmp104, tmp103
	movd	%xmm0, %eax	 # tmp103, _4
	movd	%eax, %xmm0	 # _4,
	call	tanf	 #
	movd	%xmm0, %eax	 #, tmp105
	movl	%eax, -12(%rbp)	 # tmp105, screenHalfWidth
 # src\main.cpp:434:         float screenHalfHeight = screenHalfWidth / aspectRatio;
	.loc 16 434 15
	movss	-12(%rbp), %xmm0	 # screenHalfWidth, tmp107
	divss	-4(%rbp), %xmm0	 # aspectRatio, tmp106
	movss	%xmm0, -16(%rbp)	 # tmp106, screenHalfHeight
 # src\main.cpp:436:         float u = (i + 0.5f) / screenWidth;
	.loc 16 436 22
	pxor	%xmm1, %xmm1	 # _5
	cvtsi2ssl	32(%rbp), %xmm1	 # i, _5
	movss	.LC43(%rip), %xmm0	 #, tmp108
	addss	%xmm1, %xmm0	 # _5, _6
 # src\main.cpp:436:         float u = (i + 0.5f) / screenWidth;
	.loc 16 436 30
	pxor	%xmm1, %xmm1	 # _7
	cvtsi2ssl	48(%rbp), %xmm1	 # screenWidth, _7
 # src\main.cpp:436:         float u = (i + 0.5f) / screenWidth;
	.loc 16 436 15
	divss	%xmm1, %xmm0	 # _7, tmp109
	movss	%xmm0, -20(%rbp)	 # tmp109, u
 # src\main.cpp:437:         float v = (j + 0.5f) / screenHeight;
	.loc 16 437 22
	pxor	%xmm1, %xmm1	 # _8
	cvtsi2ssl	40(%rbp), %xmm1	 # j, _8
	movss	.LC43(%rip), %xmm0	 #, tmp110
	addss	%xmm1, %xmm0	 # _8, _9
 # src\main.cpp:437:         float v = (j + 0.5f) / screenHeight;
	.loc 16 437 30
	pxor	%xmm1, %xmm1	 # _10
	cvtsi2ssl	56(%rbp), %xmm1	 # screenHeight, _10
 # src\main.cpp:437:         float v = (j + 0.5f) / screenHeight;
	.loc 16 437 15
	divss	%xmm1, %xmm0	 # _10, tmp111
	movss	%xmm0, -24(%rbp)	 # tmp111, v
 # src\main.cpp:439:         float screenX = (2.0f * u - 1.0f) * screenHalfWidth;
	.loc 16 439 31
	movss	-20(%rbp), %xmm0	 # u, tmp112
	addss	%xmm0, %xmm0	 # tmp112, _11
 # src\main.cpp:439:         float screenX = (2.0f * u - 1.0f) * screenHalfWidth;
	.loc 16 439 35
	movss	.LC2(%rip), %xmm1	 #, tmp113
	subss	%xmm1, %xmm0	 # tmp113, _12
 # src\main.cpp:439:         float screenX = (2.0f * u - 1.0f) * screenHalfWidth;
	.loc 16 439 15
	movss	-12(%rbp), %xmm1	 # screenHalfWidth, tmp115
	mulss	%xmm1, %xmm0	 # tmp115, tmp114
	movss	%xmm0, -28(%rbp)	 # tmp114, screenX
 # src\main.cpp:440:         float screenY = (1.0f - 2.0f * v) * screenHalfHeight;
	.loc 16 440 38
	movss	-24(%rbp), %xmm0	 # v, tmp116
	movaps	%xmm0, %xmm1	 # tmp116, tmp116
	addss	%xmm0, %xmm1	 # tmp116, tmp116
 # src\main.cpp:440:         float screenY = (1.0f - 2.0f * v) * screenHalfHeight;
	.loc 16 440 31
	movss	.LC2(%rip), %xmm0	 #, tmp117
	subss	%xmm1, %xmm0	 # _13, _14
 # src\main.cpp:440:         float screenY = (1.0f - 2.0f * v) * screenHalfHeight;
	.loc 16 440 15
	movss	-16(%rbp), %xmm1	 # screenHalfHeight, tmp119
	mulss	%xmm1, %xmm0	 # tmp119, tmp118
	movss	%xmm0, -32(%rbp)	 # tmp118, screenY
 # src\main.cpp:442:         Vec3D rayDir = normalize(forward + right * screenX + up * screenY);
	.loc 16 442 67
	movq	24(%rbp), %rax	 # this, tmp120
	leaq	24(%rax), %rdx	 #, _15
	leaq	-80(%rbp), %rax	 #, tmp121
	movss	-32(%rbp), %xmm0	 # screenY, tmp122
	movaps	%xmm0, %xmm2	 # tmp122,
	movq	%rax, %rcx	 # tmp121,
	call	_ZNK5Vec3DmlEf	 #
 # src\main.cpp:442:         Vec3D rayDir = normalize(forward + right * screenX + up * screenY);
	.loc 16 442 52
	movq	24(%rbp), %rax	 # this, tmp123
	leaq	12(%rax), %rdx	 #, _16
	leaq	-56(%rbp), %rax	 #, tmp124
	movss	-28(%rbp), %xmm0	 # screenX, tmp125
	movaps	%xmm0, %xmm2	 # tmp125,
	movq	%rax, %rcx	 # tmp124,
	call	_ZNK5Vec3DmlEf	 #
	movq	24(%rbp), %rdx	 # this, _17
	leaq	-68(%rbp), %rax	 #, tmp126
	leaq	-56(%rbp), %rcx	 #, tmp127
	movq	%rcx, %r8	 # tmp127,
	movq	%rax, %rcx	 # tmp126,
	call	_ZNK5Vec3DplERKS_	 #
 # src\main.cpp:442:         Vec3D rayDir = normalize(forward + right * screenX + up * screenY);
	.loc 16 442 33
	leaq	-44(%rbp), %rax	 #, tmp128
	leaq	-80(%rbp), %rcx	 #, tmp129
	leaq	-68(%rbp), %rdx	 #, tmp130
	movq	%rcx, %r8	 # tmp129,
	movq	%rax, %rcx	 # tmp128,
	call	_ZNK5Vec3DplERKS_	 #
	movq	16(%rbp), %rax	 # .result_ptr, tmp131
	movq	-44(%rbp), %rdx	 # D.238575, tmp132
	movq	%rdx, -96(%rbp)	 # tmp132,
	movl	-36(%rbp), %edx	 # D.238575, tmp133
	movl	%edx, -88(%rbp)	 # tmp133,
	leaq	-96(%rbp), %rdx	 #, tmp134
	movq	%rax, %rcx	 # tmp131,
	call	_ZN6Camera9normalizeE5Vec3D	 #
 # src\main.cpp:443:         return rayDir;
	.loc 16 443 16
	nop	
 # src\main.cpp:444:     }
	.loc 16 444 5
	movq	16(%rbp), %rax	 # .result_ptr,
	subq	$-128, %rsp	 #,
	popq	%rbp	 #
.LCFI368:
	ret	
.LFE10933:
	.seh_endproc
	.section	.text$_ZN6Camera11UpdateBasisEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6Camera11UpdateBasisEv
	.def	_ZN6Camera11UpdateBasisEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera11UpdateBasisEv
_ZN6Camera11UpdateBasisEv:
.LFB10934:
	.loc 16 447 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI369:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI370:
	subq	$136, %rsp	 #,
	.seh_stackalloc	136
.LCFI371:
	leaq	112(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 112
.LCFI372:
	movups	%xmm6, 0(%rbp)	 #,
	.seh_savexmm	%xmm6, 112
.LCFI373:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # this, this
 # src\main.cpp:449: 		float radYaw   = (yaw + 180.0f) * (3.14159f / 180.0f);
	.loc 16 449 21
	movq	48(%rbp), %rax	 # this, tmp92
	movss	76(%rax), %xmm1	 # this_12(D)->yaw, _1
 # src\main.cpp:449: 		float radYaw   = (yaw + 180.0f) * (3.14159f / 180.0f);
	.loc 16 449 25
	movss	.LC44(%rip), %xmm0	 #, tmp93
	addss	%xmm0, %xmm1	 # tmp93, _2
 # src\main.cpp:449: 		float radYaw   = (yaw + 180.0f) * (3.14159f / 180.0f);
	.loc 16 449 9
	movss	.LC41(%rip), %xmm0	 #, tmp95
	mulss	%xmm1, %xmm0	 # _2, tmp94
	movss	%xmm0, -4(%rbp)	 # tmp94, radYaw
 # src\main.cpp:450: 		float radPitch = pitch * (3.14159f / 180.0f);
	.loc 16 450 20
	movq	48(%rbp), %rax	 # this, tmp96
	movss	80(%rax), %xmm1	 # this_12(D)->pitch, _3
 # src\main.cpp:450: 		float radPitch = pitch * (3.14159f / 180.0f);
	.loc 16 450 9
	movss	.LC41(%rip), %xmm0	 #, tmp98
	mulss	%xmm1, %xmm0	 # _3, tmp97
	movss	%xmm0, -8(%rbp)	 # tmp97, radPitch
 # src\main.cpp:452: 		forward.x = cosf(radPitch) * sinf(radYaw);
	.loc 16 452 19
	movl	-8(%rbp), %eax	 # radPitch, tmp99
	movd	%eax, %xmm0	 # tmp99,
	call	cosf	 #
	movaps	%xmm0, %xmm6	 #, _4
 # src\main.cpp:452: 		forward.x = cosf(radPitch) * sinf(radYaw);
	.loc 16 452 36
	movl	-4(%rbp), %eax	 # radYaw, tmp100
	movd	%eax, %xmm0	 # tmp100,
	call	sinf	 #
 # src\main.cpp:452: 		forward.x = cosf(radPitch) * sinf(radYaw);
	.loc 16 452 30
	mulss	%xmm6, %xmm0	 # _4, _6
 # src\main.cpp:452: 		forward.x = cosf(radPitch) * sinf(radYaw);
	.loc 16 452 13
	movq	48(%rbp), %rax	 # this, tmp101
	movss	%xmm0, (%rax)	 # _6, this_12(D)->forward.x
 # src\main.cpp:453:         forward.y = sinf(radPitch);
	.loc 16 453 25
	movl	-8(%rbp), %eax	 # radPitch, tmp102
	movd	%eax, %xmm0	 # tmp102,
	call	sinf	 #
	movd	%xmm0, %eax	 #, _7
 # src\main.cpp:453:         forward.y = sinf(radPitch);
	.loc 16 453 19
	movq	48(%rbp), %rdx	 # this, tmp103
	movl	%eax, 4(%rdx)	 # _7, this_12(D)->forward.y
 # src\main.cpp:454:         forward.z = cosf(radPitch) * cosf(radYaw);
	.loc 16 454 25
	movl	-8(%rbp), %eax	 # radPitch, tmp104
	movd	%eax, %xmm0	 # tmp104,
	call	cosf	 #
	movaps	%xmm0, %xmm6	 #, _8
 # src\main.cpp:454:         forward.z = cosf(radPitch) * cosf(radYaw);
	.loc 16 454 42
	movl	-4(%rbp), %eax	 # radYaw, tmp105
	movd	%eax, %xmm0	 # tmp105,
	call	cosf	 #
 # src\main.cpp:454:         forward.z = cosf(radPitch) * cosf(radYaw);
	.loc 16 454 36
	mulss	%xmm6, %xmm0	 # _8, _10
 # src\main.cpp:454:         forward.z = cosf(radPitch) * cosf(radYaw);
	.loc 16 454 19
	movq	48(%rbp), %rax	 # this, tmp106
	movss	%xmm0, 8(%rax)	 # _10, this_12(D)->forward.z
 # src\main.cpp:456: 		forward = normalize(forward);
	.loc 16 456 22
	movq	48(%rbp), %rbx	 # this, tmp107
	leaq	-48(%rbp), %rcx	 #, tmp108
	movq	48(%rbp), %rax	 # this, tmp109
	movq	(%rax), %rdx	 # this_12(D)->forward, tmp110
	movq	%rdx, -64(%rbp)	 # tmp110,
	movl	8(%rax), %eax	 # this_12(D)->forward, tmp111
	movl	%eax, -56(%rbp)	 # tmp111,
	leaq	-64(%rbp), %rax	 #, tmp112
	movq	%rax, %rdx	 # tmp112,
	call	_ZN6Camera9normalizeE5Vec3D	 #
	movq	-48(%rbp), %rax	 #, tmp113
	movq	%rax, (%rbx)	 # tmp113, this_12(D)->forward
	movl	-40(%rbp), %eax	 #, tmp114
	movl	%eax, 8(%rbx)	 # tmp114, this_12(D)->forward
 # src\main.cpp:457: 		worldup  = Vec3D(0.0f, 1.0f, 0.0f);
	.loc 16 457 14
	leaq	-32(%rbp), %rax	 #, tmp115
	pxor	%xmm3, %xmm3	 #
	movss	.LC2(%rip), %xmm2	 #,
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # tmp115,
	call	_ZN5Vec3DC1Efff	 #
 # src\main.cpp:457: 		worldup  = Vec3D(0.0f, 1.0f, 0.0f);
	.loc 16 457 12
	movq	48(%rbp), %rax	 # this, tmp116
	movq	-32(%rbp), %rdx	 # D.207499, tmp117
	movq	%rdx, 60(%rax)	 # tmp117, this_12(D)->worldup
	movl	-24(%rbp), %edx	 # D.207499, tmp118
	movl	%edx, 68(%rax)	 # tmp118, this_12(D)->worldup
 # src\main.cpp:459: 		right = normalize(Cross(worldup, forward));
	.loc 16 459 20
	leaq	-20(%rbp), %rcx	 #, tmp119
	movq	48(%rbp), %rax	 # this, tmp120
	movq	60(%rax), %rdx	 # this_12(D)->worldup, tmp121
	movq	%rdx, -64(%rbp)	 # tmp121,
	movl	68(%rax), %eax	 # this_12(D)->worldup, tmp122
	movl	%eax, -56(%rbp)	 # tmp122,
	movq	48(%rbp), %rax	 # this, tmp123
	movq	(%rax), %rdx	 # this_12(D)->forward, tmp124
	movq	%rdx, -48(%rbp)	 # tmp124,
	movl	8(%rax), %eax	 # this_12(D)->forward, tmp125
	movl	%eax, -40(%rbp)	 # tmp125,
	leaq	-48(%rbp), %rdx	 #, tmp126
	leaq	-64(%rbp), %rax	 #, tmp127
	movq	%rdx, %r8	 # tmp126,
	movq	%rax, %rdx	 # tmp127,
	call	_ZN6Camera5CrossE5Vec3DS0_	 #
	movq	48(%rbp), %rbx	 # this, tmp128
	leaq	-64(%rbp), %rax	 #, tmp129
	movq	-20(%rbp), %rdx	 # D.238348, tmp130
	movq	%rdx, -48(%rbp)	 # tmp130,
	movl	-12(%rbp), %edx	 # D.238348, tmp131
	movl	%edx, -40(%rbp)	 # tmp131,
	leaq	-48(%rbp), %rdx	 #, tmp132
	movq	%rax, %rcx	 # tmp129,
	call	_ZN6Camera9normalizeE5Vec3D	 #
	movq	-64(%rbp), %rax	 #, tmp133
	movq	%rax, 12(%rbx)	 # tmp133, this_12(D)->right
	movl	-56(%rbp), %eax	 #, tmp134
	movl	%eax, 20(%rbx)	 # tmp134, this_12(D)->right
 # src\main.cpp:460: 		up    = Cross(forward, right);
	.loc 16 460 16
	movq	48(%rbp), %rbx	 # this, tmp135
	leaq	-64(%rbp), %rcx	 #, tmp136
	movq	48(%rbp), %rax	 # this, tmp137
	movq	(%rax), %rdx	 # this_12(D)->forward, tmp138
	movq	%rdx, -48(%rbp)	 # tmp138,
	movl	8(%rax), %eax	 # this_12(D)->forward, tmp139
	movl	%eax, -40(%rbp)	 # tmp139,
	movq	48(%rbp), %rax	 # this, tmp140
	movq	12(%rax), %rdx	 # this_12(D)->right, tmp141
	movq	%rdx, -80(%rbp)	 # tmp141,
	movl	20(%rax), %eax	 # this_12(D)->right, tmp142
	movl	%eax, -72(%rbp)	 # tmp142,
	leaq	-80(%rbp), %rdx	 #, tmp143
	leaq	-48(%rbp), %rax	 #, tmp144
	movq	%rdx, %r8	 # tmp143,
	movq	%rax, %rdx	 # tmp144,
	call	_ZN6Camera5CrossE5Vec3DS0_	 #
	movq	-64(%rbp), %rax	 #, tmp145
	movq	%rax, 24(%rbx)	 # tmp145, this_12(D)->up
	movl	-56(%rbp), %eax	 #, tmp146
	movl	%eax, 32(%rbx)	 # tmp146, this_12(D)->up
 # src\main.cpp:461: 	}
	.loc 16 461 2
	nop	
	movups	0(%rbp), %xmm6	 #,
	addq	$136, %rsp	 #,
.LCFI374:
	popq	%rbx	 #
.LCFI375:
	popq	%rbp	 #
.LCFI376:
	ret	
.LFE10934:
	.seh_endproc
	.section	.text$_ZN6Camera9normalizeE5Vec3D,"x"
	.linkonce discard
	.globl	_ZN6Camera9normalizeE5Vec3D
	.def	_ZN6Camera9normalizeE5Vec3D;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera9normalizeE5Vec3D
_ZN6Camera9normalizeE5Vec3D:
.LFB10935:
	.loc 16 462 15
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI377:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI378:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI379:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI380:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp101
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 24
	movss	(%rbx), %xmm1	 # vec.x, _1
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 30
	movss	(%rbx), %xmm0	 # vec.x, _2
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 25
	mulss	%xmm0, %xmm1	 # _2, _3
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 38
	movss	4(%rbx), %xmm2	 # vec.y, _4
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 44
	movss	4(%rbx), %xmm0	 # vec.y, _5
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 39
	mulss	%xmm2, %xmm0	 # _4, _6
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 32
	addss	%xmm0, %xmm1	 # _6, _7
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 52
	movss	8(%rbx), %xmm2	 # vec.z, _8
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 58
	movss	8(%rbx), %xmm0	 # vec.z, _9
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 53
	mulss	%xmm2, %xmm0	 # _8, _10
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 46
	addss	%xmm1, %xmm0	 # _7, _11
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 19
	pxor	%xmm4, %xmm4	 # _12
	cvtss2sd	%xmm0, %xmm4	 # _11, _12
	movq	%xmm4, %rax	 # _12, _12
	movq	%rax, %xmm0	 # _12,
	call	sqrt	 #
 # src\main.cpp:464: 		float len = sqrt(vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);
	.loc 16 464 59
	cvtsd2ss	%xmm0, %xmm0	 # _13, tmp103
	movss	%xmm0, -4(%rbp)	 # tmp103, len
 # src\main.cpp:465: 		return {vec.x / len, vec.y / len, vec.z / len};
	.loc 16 465 15
	movss	(%rbx), %xmm0	 # vec.x, _14
 # src\main.cpp:465: 		return {vec.x / len, vec.y / len, vec.z / len};
	.loc 16 465 48
	movaps	%xmm0, %xmm1	 # _14, _14
	divss	-4(%rbp), %xmm1	 # len, _14
 # src\main.cpp:465: 		return {vec.x / len, vec.y / len, vec.z / len};
	.loc 16 465 28
	movss	4(%rbx), %xmm0	 # vec.y, _16
 # src\main.cpp:465: 		return {vec.x / len, vec.y / len, vec.z / len};
	.loc 16 465 48
	movaps	%xmm0, %xmm2	 # _16, _16
	divss	-4(%rbp), %xmm2	 # len, _16
 # src\main.cpp:465: 		return {vec.x / len, vec.y / len, vec.z / len};
	.loc 16 465 41
	movss	8(%rbx), %xmm0	 # vec.z, _18
 # src\main.cpp:465: 		return {vec.x / len, vec.y / len, vec.z / len};
	.loc 16 465 48
	divss	-4(%rbp), %xmm0	 # len, _19
	movq	32(%rbp), %rax	 # .result_ptr, tmp104
	movaps	%xmm0, %xmm3	 # _19,
	movq	%rax, %rcx	 # tmp104,
	call	_ZN5Vec3DC1Efff	 #
 # src\main.cpp:466: 	}
	.loc 16 466 2
	movq	32(%rbp), %rax	 # .result_ptr,
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI381:
	popq	%rbp	 #
.LCFI382:
	ret	
.LFE10935:
	.seh_endproc
	.section	.text$_ZN6Camera5CrossE5Vec3DS0_,"x"
	.linkonce discard
	.globl	_ZN6Camera5CrossE5Vec3DS0_
	.def	_ZN6Camera5CrossE5Vec3DS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6Camera5CrossE5Vec3DS0_
_ZN6Camera5CrossE5Vec3DS0_:
.LFB10936:
	.loc 16 467 15
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI383:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI384:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI385:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
.LCFI386:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI387:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp103
	movq	%r8, %rsi	 #, tmp104
 # src\main.cpp:471: 			a.y * b.z - a.z * b.y, 
	.loc 16 471 6
	movss	4(%rbx), %xmm1	 # a.y, _1
 # src\main.cpp:471: 			a.y * b.z - a.z * b.y, 
	.loc 16 471 12
	movss	8(%rsi), %xmm0	 # b.z, _2
 # src\main.cpp:471: 			a.y * b.z - a.z * b.y, 
	.loc 16 471 8
	mulss	%xmm1, %xmm0	 # _1, _3
 # src\main.cpp:471: 			a.y * b.z - a.z * b.y, 
	.loc 16 471 18
	movss	8(%rbx), %xmm2	 # a.z, _4
 # src\main.cpp:471: 			a.y * b.z - a.z * b.y, 
	.loc 16 471 24
	movss	4(%rsi), %xmm1	 # b.y, _5
 # src\main.cpp:471: 			a.y * b.z - a.z * b.y, 
	.loc 16 471 20
	mulss	%xmm2, %xmm1	 # _4, _6
 # src\main.cpp:474: 		};
	.loc 16 474 3
	movaps	%xmm0, %xmm4	 # _3, _3
	subss	%xmm1, %xmm4	 # _6, _3
 # src\main.cpp:472: 			a.z * b.x - a.x * b.z, 
	.loc 16 472 6
	movss	8(%rbx), %xmm1	 # a.z, _8
 # src\main.cpp:472: 			a.z * b.x - a.x * b.z, 
	.loc 16 472 12
	movss	(%rsi), %xmm0	 # b.x, _9
 # src\main.cpp:472: 			a.z * b.x - a.x * b.z, 
	.loc 16 472 8
	mulss	%xmm1, %xmm0	 # _8, _10
 # src\main.cpp:472: 			a.z * b.x - a.x * b.z, 
	.loc 16 472 18
	movss	(%rbx), %xmm2	 # a.x, _11
 # src\main.cpp:472: 			a.z * b.x - a.x * b.z, 
	.loc 16 472 24
	movss	8(%rsi), %xmm1	 # b.z, _12
 # src\main.cpp:472: 			a.z * b.x - a.x * b.z, 
	.loc 16 472 20
	mulss	%xmm2, %xmm1	 # _11, _13
 # src\main.cpp:474: 		};
	.loc 16 474 3
	movaps	%xmm0, %xmm5	 # _10, _10
	subss	%xmm1, %xmm5	 # _13, _10
 # src\main.cpp:473: 			a.x * b.y - a.y * b.x
	.loc 16 473 6
	movss	(%rbx), %xmm1	 # a.x, _15
 # src\main.cpp:473: 			a.x * b.y - a.y * b.x
	.loc 16 473 12
	movss	4(%rsi), %xmm0	 # b.y, _16
 # src\main.cpp:473: 			a.x * b.y - a.y * b.x
	.loc 16 473 8
	mulss	%xmm1, %xmm0	 # _15, _17
 # src\main.cpp:473: 			a.x * b.y - a.y * b.x
	.loc 16 473 18
	movss	4(%rbx), %xmm2	 # a.y, _18
 # src\main.cpp:473: 			a.x * b.y - a.y * b.x
	.loc 16 473 24
	movss	(%rsi), %xmm1	 # b.x, _19
 # src\main.cpp:473: 			a.x * b.y - a.y * b.x
	.loc 16 473 20
	mulss	%xmm2, %xmm1	 # _18, _20
 # src\main.cpp:474: 		};
	.loc 16 474 3
	subss	%xmm1, %xmm0	 # _20, _21
	movq	32(%rbp), %rax	 # .result_ptr, tmp105
	movaps	%xmm0, %xmm3	 # _21,
	movaps	%xmm5, %xmm2	 # _14,
	movaps	%xmm4, %xmm1	 # _7,
	movq	%rax, %rcx	 # tmp105,
	call	_ZN5Vec3DC1Efff	 #
 # src\main.cpp:475: 	}
	.loc 16 475 2
	movq	32(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbx	 #
.LCFI388:
	popq	%rsi	 #
.LCFI389:
	popq	%rbp	 #
.LCFI390:
	ret	
.LFE10936:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC45:
	.ascii "D\0"
	.ascii "2\0D\0"
	.ascii "1\0C\0r\0e\0a\0t\0e\0F\0a\0c\0t\0o\0r\0y\0 \0f\0a\0i\0l\0e\0d\0 \0w\0i\0t\0h\0 \0H\0R\0E\0S\0U\0L\0T\0:\0 \0"
	.ascii "0\0x\0%\0"
	.ascii "0\0"
	.ascii "8\0X\0\0\0"
	.align 2
.LC46:
	.ascii "E\0r\0r\0o\0r\0\0\0"
	.section	.text$_ZN21WINDOWGraphicsOverlay11ErrorHandleEl,"x"
	.linkonce discard
	.globl	_ZN21WINDOWGraphicsOverlay11ErrorHandleEl
	.def	_ZN21WINDOWGraphicsOverlay11ErrorHandleEl;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay11ErrorHandleEl
_ZN21WINDOWGraphicsOverlay11ErrorHandleEl:
.LFB10937:
	.loc 16 493 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI391:
	subq	$1056, %rsp	 #,
	.seh_stackalloc	1056
.LCFI392:
	leaq	128(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 128
.LCFI393:
	.seh_endprologue
	movl	%ecx, 944(%rbp)	 # hr, hr
.LBB122:
 # src\main.cpp:494: 		if(FAILED(hr))
	.loc 16 494 3
	cmpl	$0, 944(%rbp)	 #, hr
	jns	.L281	 #,
.LBB123:
 # src\main.cpp:497:        		swprintf_s(errorMsg, L"D2D1CreateFactory failed with HRESULT: 0x%08X", hr);
	.loc 16 497 20
	movl	944(%rbp), %edx	 # hr, tmp82
	leaq	-96(%rbp), %rax	 #, tmp83
	movl	%edx, %r8d	 # tmp82,
	leaq	.LC45(%rip), %rdx	 #, tmp84
	movq	%rax, %rcx	 # tmp83,
	call	_Z10swprintf_sILy512EEiRAT__wPKwz	 #
 # src\main.cpp:498:        		MessageBoxW(0, errorMsg, L"Error", MB_ICONERROR);
	.loc 16 498 21
	leaq	-96(%rbp), %rax	 #, tmp85
	movl	$16, %r9d	 #,
	leaq	.LC46(%rip), %r8	 #,
	movq	%rax, %rdx	 # tmp85,
	movl	$0, %ecx	 #,
	movq	__imp_MessageBoxW(%rip), %rax	 #, tmp86
	call	*%rax	 # tmp86
.LVL8:
.L281:
.LBE123:
.LBE122:
 # src\main.cpp:500: 	}
	.loc 16 500 2
	nop	
	addq	$1056, %rsp	 #,
	popq	%rbp	 #
.LCFI394:
	ret	
.LFE10937:
	.seh_endproc
	.section	.text$_ZN6MATRIXD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIXD1Ev
	.def	_ZN6MATRIXD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIXD1Ev
_ZN6MATRIXD1Ev:
.LFB10943:
	.loc 16 112 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI395:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI396:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB124:
 # src\main.cpp:112: struct MATRIX
	.loc 16 112 8
	movq	16(%rbp), %rax	 # this, tmp83
	addq	$24, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev	 #
.LBE124:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI397:
	ret	
.LFE10943:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC48:
	.ascii "WM_SIZE: RENDERTARGET = nullptr\0"
	.text
	.globl	_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx
	.def	_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx
_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx:
.LFB10940:
	.loc 16 611 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI398:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI399:
	subq	$1480, %rsp	 #,
	.seh_stackalloc	1480
.LCFI400:
	leaq	128(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 128
.LCFI401:
	.seh_endprologue
	movq	%rcx, 1376(%rbp)	 # hwnd, hwnd
	movl	%edx, 1384(%rbp)	 # msg, msg
	movq	%r8, 1392(%rbp)	 # wp, wp
	movq	%r9, 1400(%rbp)	 # lp, lp
.LBB125:
 # src\main.cpp:612: 		if (msg == WM_NCCREATE)
	.loc 16 612 3
	cmpl	$129, 1384(%rbp)	 #, msg
	jne	.L284	 #,
.LBB126:
 # src\main.cpp:614:     	    CREATESTRUCT* pcs = reinterpret_cast<CREATESTRUCT*>(lp);
	.loc 16 614 24
	movq	1400(%rbp), %rax	 # lp, tmp228
	movq	%rax, 1280(%rbp)	 # tmp228, pcs
 # src\main.cpp:615:     	    MATRIX* matrix = static_cast<MATRIX*>(pcs->lpCreateParams);
	.loc 16 615 18
	movq	1280(%rbp), %rax	 # pcs, tmp229
	movq	(%rax), %rax	 # pcs_240->lpCreateParams, tmp230
	movq	%rax, 1272(%rbp)	 # tmp230, matrix
 # src\main.cpp:616:     	   	SetWindowLongPtr(hwnd, GWLP_USERDATA, reinterpret_cast<LONG_PTR>(matrix));
	.loc 16 616 26
	movq	1272(%rbp), %rdx	 # matrix, matrix.0_1
	movq	1376(%rbp), %rax	 # hwnd, tmp231
	movq	%rdx, %r8	 # matrix.0_1,
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp231,
	movq	__imp_SetWindowLongPtrW(%rip), %rax	 #, tmp232
	call	*%rax	 # tmp232
.LVL9:
 # src\main.cpp:618: 			return 1;
	.loc 16 618 11
	movl	$1, %eax	 #, _118
	jmp	.L285	 #
.L284:
.LBE126:
.LBE125:
.LBB127:
 # src\main.cpp:621: 		if(msg == WM_NCDESTROY)
	.loc 16 621 3
	cmpl	$130, 1384(%rbp)	 #, msg
	jne	.L286	 #,
.LBB128:
 # src\main.cpp:623: 			MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 16 623 63
	movq	1376(%rbp), %rax	 # hwnd, tmp233
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp233,
	movq	__imp_GetWindowLongPtrW(%rip), %rax	 #, tmp234
	call	*%rax	 # tmp234
.LVL10:
 # src\main.cpp:623: 			MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 16 623 84
	movq	%rax, 1320(%rbp)	 # _2, matrix
 # src\main.cpp:624: 			delete matrix;
	.loc 16 624 11
	movq	1320(%rbp), %rbx	 # matrix, matrix.1_144
 # src\main.cpp:624: 			delete matrix;
	.loc 16 624 4
	testq	%rbx, %rbx	 # matrix.1_144
	je	.L287	 #,
 # src\main.cpp:624: 			delete matrix;
	.loc 16 624 11 discriminator 1
	movq	%rbx, %rcx	 # matrix.1_144,
	call	_ZN6MATRIXD1Ev	 #
	movl	$56, %edx	 #,
	movq	%rbx, %rcx	 # matrix.1_144,
	call	_ZdlPvy	 #
.L287:
 # src\main.cpp:625: 			matrix=nullptr;
	.loc 16 625 10
	movq	$0, 1320(%rbp)	 #, matrix
 # src\main.cpp:626: 			SetWindowLongPtr(hwnd, GWLP_USERDATA, 0);
	.loc 16 626 20
	movq	1376(%rbp), %rax	 # hwnd, tmp235
	movl	$0, %r8d	 #,
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp235,
	movq	__imp_SetWindowLongPtrW(%rip), %rax	 #, tmp236
	call	*%rax	 # tmp236
.LVL11:
 # src\main.cpp:628: 			if(RenderTarget){RenderTarget->Release();}
	.loc 16 628 7
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.2_3
 # src\main.cpp:628: 			if(RenderTarget){RenderTarget->Release();}
	.loc 16 628 4
	testq	%rax, %rax	 # RenderTarget.2_3
	je	.L288	 #,
 # src\main.cpp:628: 			if(RenderTarget){RenderTarget->Release();}
	.loc 16 628 42 discriminator 1
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.4_6
	movq	(%rax), %rax	 # RenderTarget.4_6->D.200562.D.199359.D.198587._vptr.IUnknown, _7
	addq	$16, %rax	 #, _8
	movq	(%rax), %rax	 # *_8, _9
	movq	RenderTarget(%rip), %rdx	 # RenderTarget, RenderTarget.5_10
	movq	%rdx, %rcx	 # _11,
	call	*%rax	 # _9
.LVL12:
.L288:
 # src\main.cpp:629: 			if(Bitmap)      {Bitmap->Release();      }
	.loc 16 629 7
	movq	Bitmap(%rip), %rax	 # Bitmap, Bitmap.6_12
 # src\main.cpp:629: 			if(Bitmap)      {Bitmap->Release();      }
	.loc 16 629 4
	testq	%rax, %rax	 # Bitmap.6_12
	je	.L289	 #,
 # src\main.cpp:629: 			if(Bitmap)      {Bitmap->Release();      }
	.loc 16 629 36 discriminator 1
	movq	Bitmap(%rip), %rax	 # Bitmap, Bitmap.8_15
	movq	(%rax), %rax	 # Bitmap.8_15->D.198697.D.198646.D.198587._vptr.IUnknown, _16
	addq	$16, %rax	 #, _17
	movq	(%rax), %rax	 # *_17, _18
	movq	Bitmap(%rip), %rdx	 # Bitmap, Bitmap.9_19
	movq	%rdx, %rcx	 # _20,
	call	*%rax	 # _18
.LVL13:
.L289:
 # src\main.cpp:630: 			if(Factory)     {Factory->Release();     }
	.loc 16 630 7
	movq	Factory(%rip), %rax	 # Factory, Factory.10_21
 # src\main.cpp:630: 			if(Factory)     {Factory->Release();     }
	.loc 16 630 4
	testq	%rax, %rax	 # Factory.10_21
	je	.L286	 #,
 # src\main.cpp:630: 			if(Factory)     {Factory->Release();     }
	.loc 16 630 37 discriminator 1
	movq	Factory(%rip), %rax	 # Factory, Factory.12_24
	movq	(%rax), %rax	 # Factory.12_24->D.200338._vptr.IUnknown, _25
	addq	$16, %rax	 #, _26
	movq	(%rax), %rax	 # *_26, _27
	movq	Factory(%rip), %rdx	 # Factory, Factory.13_28
	movq	%rdx, %rcx	 # _29,
	call	*%rax	 # _27
.LVL14:
.L286:
.LBE128:
.LBE127:
.LBB129:
 # src\main.cpp:633: 		switch(msg)
	.loc 16 633 3
	cmpl	$512, 1384(%rbp)	 #, msg
	je	.L290	 #,
	cmpl	$512, 1384(%rbp)	 #, msg
	ja	.L291	 #,
	cmpl	$15, 1384(%rbp)	 #, msg
	je	.L292	 #,
	cmpl	$15, 1384(%rbp)	 #, msg
	ja	.L291	 #,
	cmpl	$5, 1384(%rbp)	 #, msg
	je	.L293	 #,
	cmpl	$5, 1384(%rbp)	 #, msg
	ja	.L291	 #,
	cmpl	$1, 1384(%rbp)	 #, msg
	je	.L294	 #,
	cmpl	$2, 1384(%rbp)	 #, msg
	je	.L295	 #,
	jmp	.L291	 #
.L294:
.LBB130:
.LBB131:
 # src\main.cpp:637: 				HRESULT hr = D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, &Factory);
	.loc 16 637 35
	leaq	Factory(%rip), %rax	 #, tmp237
	movq	%rax, %rdx	 # tmp237,
	movl	$0, %ecx	 #,
	call	_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_	 #
	movl	%eax, 1340(%rbp)	 # _179, hr
.LBB132:
 # src\main.cpp:638: 				if(FAILED(hr))
	.loc 16 638 5
	cmpl	$0, 1340(%rbp)	 #, hr
	jns	.L296	 #,
.LBB133:
 # src\main.cpp:641:         			swprintf_s(errorMsg, L"D2D1CreateFactory failed with HRESULT: 0x%08X", hr);
	.loc 16 641 22
	movl	1340(%rbp), %edx	 # hr, tmp238
	leaq	-80(%rbp), %rax	 #, tmp239
	movl	%edx, %r8d	 # tmp238,
	leaq	.LC45(%rip), %rdx	 #, tmp240
	movq	%rax, %rcx	 # tmp239,
	call	_Z10swprintf_sILy512EEiRAT__wPKwz	 #
 # src\main.cpp:642:         			MessageBoxW(0, errorMsg, L"Error", MB_ICONERROR);
	.loc 16 642 23
	leaq	-80(%rbp), %rax	 #, tmp241
	movl	$16, %r9d	 #,
	leaq	.LC46(%rip), %r8	 #,
	movq	%rax, %rdx	 # tmp241,
	movl	$0, %ecx	 #,
	movq	__imp_MessageBoxW(%rip), %rax	 #, tmp242
	call	*%rax	 # tmp242
.LVL15:
.L296:
.LBE133:
.LBE132:
 # src\main.cpp:645: 				FLOAT dpiX = 96.0f;
	.loc 16 645 11
	movss	.LC47(%rip), %xmm0	 #, tmp243
	movss	%xmm0, 1292(%rbp)	 # tmp243, dpiX
 # src\main.cpp:646: 				FLOAT dpiY = 96.0f;
	.loc 16 646 11
	movss	.LC47(%rip), %xmm0	 #, tmp244
	movss	%xmm0, 1288(%rbp)	 # tmp244, dpiY
 # src\main.cpp:650: 				GetClientRect(hwnd, &rc);
	.loc 16 650 18
	leaq	1072(%rbp), %rdx	 #, tmp245
	movq	1376(%rbp), %rax	 # hwnd, tmp246
	movq	%rax, %rcx	 # tmp246,
	movq	__imp_GetClientRect(%rip), %rax	 #, tmp247
	call	*%rax	 # tmp247
.LVL16:
 # src\main.cpp:652: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 16 652 59
	movl	1084(%rbp), %edx	 # rc.bottom, _30
 # src\main.cpp:652: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 16 652 71
	movl	1076(%rbp), %eax	 # rc.top, _31
 # src\main.cpp:652: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 16 652 66
	subl	%eax, %edx	 # _31, _32
 # src\main.cpp:652: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 16 652 35
	movl	%edx, %ecx	 # _32, _33
 # src\main.cpp:652: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 16 652 39
	movl	1080(%rbp), %edx	 # rc.right, _34
 # src\main.cpp:652: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 16 652 50
	movl	1072(%rbp), %eax	 # rc.left, _35
 # src\main.cpp:652: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 16 652 45
	subl	%eax, %edx	 # _35, _36
 # src\main.cpp:652: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 16 652 35
	movl	%edx, %eax	 # _36, _37
	movl	%eax, 1268(%rbp)	 # _37, width
	movl	%ecx, 1264(%rbp)	 # _33, height
	movl	1268(%rbp), %eax	 # width, tmp248
	movl	%eax, 1260(%rbp)	 # tmp248, width
	movl	1264(%rbp), %eax	 # height, tmp249
	movl	%eax, 1256(%rbp)	 # tmp249, height
.LBB134:
.LBB135:
.LBB136:
.LBB137:
 # C:/msys64/mingw64/include/d2d1helper.h:45:     typename TypeTraits<T>::Size r = {width, height};
	.file 18 "C:/msys64/mingw64/include/d2d1helper.h"
	.loc 18 45 34
	movl	1260(%rbp), %eax	 # width, tmp250
	movl	%eax, 976(%rbp)	 # tmp250, r.width
	movl	1256(%rbp), %eax	 # height, tmp251
	movl	%eax, 980(%rbp)	 # tmp251, r.height
 # C:/msys64/mingw64/include/d2d1helper.h:46:     return r;
	.loc 18 46 12
	movq	976(%rbp), %rax	 # r, D.239110
.LBE137:
.LBE136:
 # C:/msys64/mingw64/include/d2d1helper.h:54:     return Size<UINT32>(width, height);
	.loc 18 54 38
	nop	
.LBE135:
.LBE134:
 # src\main.cpp:652: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 16 652 35
	movq	%rax, 1064(%rbp)	 # D.239109, size
	movl	$87, 1232(%rbp)	 #, dxgiFormat
	movl	$1, 1228(%rbp)	 #, alphaMode
.LBB138:
.LBB139:
 # C:/msys64/mingw64/include/d2d1helper.h:146:     D2D1_PIXEL_FORMAT r = {dxgiFormat, alphaMode};
	.loc 18 146 49
	movl	1232(%rbp), %eax	 # dxgiFormat, tmp252
	movl	%eax, 984(%rbp)	 # tmp252, r.format
	movl	1228(%rbp), %eax	 # alphaMode, tmp253
	movl	%eax, 988(%rbp)	 # tmp253, r.alphaMode
 # C:/msys64/mingw64/include/d2d1helper.h:147:     return r;
	.loc 18 147 12
	movq	984(%rbp), %rax	 # r, D.239127
.LBE139:
.LBE138:
 # src\main.cpp:656:     				D2D1::PixelFormat(DXGI_FORMAT_B8G8R8A8_UNORM, D2D1_ALPHA_MODE_PREMULTIPLIED),
	.loc 16 656 26
	movq	%rax, 1088(%rbp)	 # D.239126, D.207650
	movl	$2, 1252(%rbp)	 #, type
	movss	1292(%rbp), %xmm0	 # dpiX, tmp254
	movss	%xmm0, 1248(%rbp)	 # tmp254, dpiX
	movss	1288(%rbp), %xmm0	 # dpiY, tmp255
	movss	%xmm0, 1244(%rbp)	 # tmp255, dpiY
	movl	$0, 1240(%rbp)	 #, usage
	movl	$0, 1236(%rbp)	 #, minLevel
.LBB140:
.LBB141:
 # C:/msys64/mingw64/include/d2d1helper.h:164:     D2D1_RENDER_TARGET_PROPERTIES r = {type, pixelFormat, dpiX, dpiY, usage, minLevel};
	.loc 18 164 86
	movl	1252(%rbp), %eax	 # type, tmp256
	movl	%eax, 1024(%rbp)	 # tmp256, props.type
	movq	1088(%rbp), %rax	 # D.207650, tmp257
	movq	%rax, 1028(%rbp)	 # tmp257, props.pixelFormat
	movss	1248(%rbp), %xmm0	 # dpiX, tmp258
	movss	%xmm0, 1036(%rbp)	 # tmp258, props.dpiX
	movss	1244(%rbp), %xmm0	 # dpiY, tmp259
	movss	%xmm0, 1040(%rbp)	 # tmp259, props.dpiY
	movl	1240(%rbp), %eax	 # usage, tmp260
	movl	%eax, 1044(%rbp)	 # tmp260, props.usage
	movl	1236(%rbp), %eax	 # minLevel, tmp261
	movl	%eax, 1048(%rbp)	 # tmp261, props.minLevel
 # C:/msys64/mingw64/include/d2d1helper.h:165:     return r;
	.loc 18 165 12
	nop	
.LBE141:
.LBE140:
 # src\main.cpp:660: 				D2D1_HWND_RENDER_TARGET_PROPERTIES hwndProps = {};
	.loc 16 660 40
	pxor	%xmm0, %xmm0	 # tmp262
	movups	%xmm0, 992(%rbp)	 # tmp262, hwndProps
	movq	%xmm0, 1008(%rbp)	 # tmp262, hwndProps
 # src\main.cpp:661: 				hwndProps.hwnd 			   = hwnd;
	.loc 16 661 26
	movq	1376(%rbp), %rax	 # hwnd, tmp263
	movq	%rax, 992(%rbp)	 # tmp263, hwndProps.hwnd
 # src\main.cpp:662: 				hwndProps.pixelSize		   = size;
	.loc 16 662 29
	movq	1064(%rbp), %rax	 # size, tmp264
	movq	%rax, 1000(%rbp)	 # tmp264, hwndProps.pixelSize
 # src\main.cpp:663: 				hwndProps.presentOptions   = D2D1_PRESENT_OPTIONS_NONE;
	.loc 16 663 32
	movl	$0, 1008(%rbp)	 #, hwndProps.presentOptions
 # src\main.cpp:665: 				if(Factory)
	.loc 16 665 8
	movq	Factory(%rip), %rax	 # Factory, Factory.14_38
 # src\main.cpp:665: 				if(Factory)
	.loc 16 665 5
	testq	%rax, %rax	 # Factory.14_38
	je	.L301	 #,
 # src\main.cpp:667: 					hr = Factory->CreateHwndRenderTarget(props, hwndProps, &RenderTarget);
	.loc 16 667 42
	movq	Factory(%rip), %rax	 # Factory, Factory.15_39
	leaq	992(%rbp), %rcx	 #, tmp265
	leaq	1024(%rbp), %rdx	 #, tmp266
	leaq	RenderTarget(%rip), %r9	 #,
	movq	%rcx, %r8	 # tmp265,
	movq	%rax, %rcx	 # Factory.15_39,
	call	_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget	 #
	movl	%eax, 1340(%rbp)	 # _194, hr
.L301:
 # src\main.cpp:669: 				ErrorHandle(hr);
	.loc 16 669 16
	movl	1340(%rbp), %eax	 # hr, tmp267
	movl	%eax, %ecx	 # tmp267,
	call	_ZN21WINDOWGraphicsOverlay11ErrorHandleEl	 #
.LBB142:
 # src\main.cpp:671: 				if(RenderTarget)
	.loc 16 671 8
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.16_40
 # src\main.cpp:671: 				if(RenderTarget)
	.loc 16 671 5
	testq	%rax, %rax	 # RenderTarget.16_40
	je	.L324	 #,
.LBB143:
 # src\main.cpp:674: 					    .pixelFormat = RenderTarget->GetPixelFormat(),
	.loc 16 674 53
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.17_41
	movq	%rax, %rcx	 # _42,
	call	_ZNK17ID2D1RenderTarget14GetPixelFormatEv	 #
	movq	%rax, 960(%rbp)	 # tmp268, bmpProps.pixelFormat
 # src\main.cpp:677: 					};
	.loc 16 677 6
	movss	1292(%rbp), %xmm0	 # dpiX, tmp269
	movss	%xmm0, 968(%rbp)	 # tmp269, bmpProps.dpiX
	movss	1288(%rbp), %xmm0	 # dpiY, tmp270
	movss	%xmm0, 972(%rbp)	 # tmp270, bmpProps.dpiY
 # src\main.cpp:679: 					RenderTarget->CreateBitmap(
	.loc 16 679 32
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.19_45
	movq	(%rax), %rax	 # RenderTarget.19_45->D.200562.D.199359.D.198587._vptr.IUnknown, _46
	addq	$32, %rax	 #, _47
	movq	(%rax), %rax	 # *_47, _48
	movq	RenderTarget(%rip), %rdx	 # RenderTarget, RenderTarget.20_49
	movq	%rdx, %rcx	 # RenderTarget.20_49, _50
	movl	$800, 1224(%rbp)	 #, width
	movl	$600, 1220(%rbp)	 #, height
	movl	1224(%rbp), %edx	 # width, tmp271
	movl	%edx, 1216(%rbp)	 # tmp271, width
	movl	1220(%rbp), %edx	 # height, tmp272
	movl	%edx, 1212(%rbp)	 # tmp272, height
.LBB144:
.LBB145:
.LBB146:
.LBB147:
 # C:/msys64/mingw64/include/d2d1helper.h:45:     typename TypeTraits<T>::Size r = {width, height};
	.loc 18 45 34
	movl	1216(%rbp), %edx	 # width, tmp273
	movl	%edx, 952(%rbp)	 # tmp273, r.width
	movl	1212(%rbp), %edx	 # height, tmp274
	movl	%edx, 956(%rbp)	 # tmp274, r.height
 # C:/msys64/mingw64/include/d2d1helper.h:46:     return r;
	.loc 18 46 12
	movq	952(%rbp), %rdx	 # r, D.239134
.LBE147:
.LBE146:
 # C:/msys64/mingw64/include/d2d1helper.h:54:     return Size<UINT32>(width, height);
	.loc 18 54 38
	nop	
	movq	%rdx, %r10	 # D.239135, D.237248
.LBE145:
.LBE144:
 # src\main.cpp:679: 					RenderTarget->CreateBitmap(
	.loc 16 679 32
	leaq	Bitmap(%rip), %rdx	 #, tmp275
	movq	%rdx, 40(%rsp)	 # tmp275,
	leaq	960(%rbp), %rdx	 #, tmp276
	movq	%rdx, 32(%rsp)	 # tmp276,
	movl	$0, %r9d	 #,
	movl	$0, %r8d	 #,
	movq	%r10, %rdx	 # D.237248,
	call	*%rax	 # _48
.LVL17:
 # src\main.cpp:687: 					pixelBuffer  = (uint32_t*)malloc(sizeof(uint32_t) * WIDTH * HEIGHT);
	.loc 16 687 38
	movl	$1920000, %ecx	 #,
	call	malloc	 #
 # src\main.cpp:687: 					pixelBuffer  = (uint32_t*)malloc(sizeof(uint32_t) * WIDTH * HEIGHT);
	.loc 16 687 19
	movq	%rax, pixelBuffer(%rip)	 # _51, pixelBuffer
 # src\main.cpp:688: 					elementColor = (uint32_t*)malloc(sizeof(uint32_t) * MATERIAL_SIZE );
	.loc 16 688 38
	movl	$64, %ecx	 #,
	call	malloc	 #
 # src\main.cpp:688: 					elementColor = (uint32_t*)malloc(sizeof(uint32_t) * MATERIAL_SIZE );
	.loc 16 688 19
	movq	%rax, elementColor(%rip)	 # _52, elementColor
.LBB148:
 # src\main.cpp:689: 					for(int i=0; i<WIDTH * HEIGHT; ++i){ pixelBuffer[i]  = 0xFFFFFFFF; }
	.loc 16 689 14
	movl	$0, 1336(%rbp)	 #, i
 # src\main.cpp:689: 					for(int i=0; i<WIDTH * HEIGHT; ++i){ pixelBuffer[i]  = 0xFFFFFFFF; }
	.loc 16 689 6
	jmp	.L305	 #
.L306:
 # src\main.cpp:689: 					for(int i=0; i<WIDTH * HEIGHT; ++i){ pixelBuffer[i]  = 0xFFFFFFFF; }
	.loc 16 689 56 discriminator 3
	movq	pixelBuffer(%rip), %rax	 # pixelBuffer, pixelBuffer.21_53
 # src\main.cpp:689: 					for(int i=0; i<WIDTH * HEIGHT; ++i){ pixelBuffer[i]  = 0xFFFFFFFF; }
	.loc 16 689 55 discriminator 3
	movl	1336(%rbp), %edx	 # i, tmp279
	movslq	%edx, %rdx	 # tmp279, _54
 # src\main.cpp:689: 					for(int i=0; i<WIDTH * HEIGHT; ++i){ pixelBuffer[i]  = 0xFFFFFFFF; }
	.loc 16 689 56 discriminator 3
	salq	$2, %rdx	 #, _55
	addq	%rdx, %rax	 # _55, _56
 # src\main.cpp:689: 					for(int i=0; i<WIDTH * HEIGHT; ++i){ pixelBuffer[i]  = 0xFFFFFFFF; }
	.loc 16 689 59 discriminator 3
	movl	$-1, (%rax)	 #, *_56
 # src\main.cpp:689: 					for(int i=0; i<WIDTH * HEIGHT; ++i){ pixelBuffer[i]  = 0xFFFFFFFF; }
	.loc 16 689 6 discriminator 3
	addl	$1, 1336(%rbp)	 #, i
.L305:
 # src\main.cpp:689: 					for(int i=0; i<WIDTH * HEIGHT; ++i){ pixelBuffer[i]  = 0xFFFFFFFF; }
	.loc 16 689 20 discriminator 1
	cmpl	$479999, 1336(%rbp)	 #, i
	jle	.L306	 #,
.LBE148:
.LBB149:
 # src\main.cpp:690: 					for(int i=0; i<MATERIAL_SIZE; ++i) { elementColor[i] = 0xFFFFFFFF; }
	.loc 16 690 14
	movl	$0, 1332(%rbp)	 #, i
 # src\main.cpp:690: 					for(int i=0; i<MATERIAL_SIZE; ++i) { elementColor[i] = 0xFFFFFFFF; }
	.loc 16 690 6
	jmp	.L307	 #
.L308:
 # src\main.cpp:690: 					for(int i=0; i<MATERIAL_SIZE; ++i) { elementColor[i] = 0xFFFFFFFF; }
	.loc 16 690 57 discriminator 3
	movq	elementColor(%rip), %rax	 # elementColor, elementColor.22_57
 # src\main.cpp:690: 					for(int i=0; i<MATERIAL_SIZE; ++i) { elementColor[i] = 0xFFFFFFFF; }
	.loc 16 690 56 discriminator 3
	movl	1332(%rbp), %edx	 # i, tmp280
	movslq	%edx, %rdx	 # tmp280, _58
 # src\main.cpp:690: 					for(int i=0; i<MATERIAL_SIZE; ++i) { elementColor[i] = 0xFFFFFFFF; }
	.loc 16 690 57 discriminator 3
	salq	$2, %rdx	 #, _59
	addq	%rdx, %rax	 # _59, _60
 # src\main.cpp:690: 					for(int i=0; i<MATERIAL_SIZE; ++i) { elementColor[i] = 0xFFFFFFFF; }
	.loc 16 690 59 discriminator 3
	movl	$-1, (%rax)	 #, *_60
 # src\main.cpp:690: 					for(int i=0; i<MATERIAL_SIZE; ++i) { elementColor[i] = 0xFFFFFFFF; }
	.loc 16 690 6 discriminator 3
	addl	$1, 1332(%rbp)	 #, i
.L307:
 # src\main.cpp:690: 					for(int i=0; i<MATERIAL_SIZE; ++i) { elementColor[i] = 0xFFFFFFFF; }
	.loc 16 690 20 discriminator 1
	cmpl	$15, 1332(%rbp)	 #, i
	jle	.L308	 #,
.LBE149:
 # src\main.cpp:692: 					elementColor[ElementIndex(CELL_AIR)  ] = 0xFFC5F9FF;
	.loc 16 692 6
	movq	elementColor(%rip), %rbx	 # elementColor, elementColor.23_207
 # src\main.cpp:692: 					elementColor[ElementIndex(CELL_AIR)  ] = 0xFFC5F9FF;
	.loc 16 692 31
	movl	$1, %ecx	 #,
	call	_Z12ElementIndext	 #
	movl	%eax, %eax	 # _61, _62
 # src\main.cpp:692: 					elementColor[ElementIndex(CELL_AIR)  ] = 0xFFC5F9FF;
	.loc 16 692 43
	salq	$2, %rax	 #, _63
	addq	%rbx, %rax	 # elementColor.23_207, _64
 # src\main.cpp:692: 					elementColor[ElementIndex(CELL_AIR)  ] = 0xFFC5F9FF;
	.loc 16 692 45
	movl	$-3802625, (%rax)	 #, *_64
 # src\main.cpp:693: 					elementColor[ElementIndex(CELL_WATER)] = 0xFF11B6FF;
	.loc 16 693 6
	movq	elementColor(%rip), %rbx	 # elementColor, elementColor.24_210
 # src\main.cpp:693: 					elementColor[ElementIndex(CELL_WATER)] = 0xFF11B6FF;
	.loc 16 693 31
	movl	$2, %ecx	 #,
	call	_Z12ElementIndext	 #
	movl	%eax, %eax	 # _65, _66
 # src\main.cpp:693: 					elementColor[ElementIndex(CELL_WATER)] = 0xFF11B6FF;
	.loc 16 693 43
	salq	$2, %rax	 #, _67
	addq	%rbx, %rax	 # elementColor.24_210, _68
 # src\main.cpp:693: 					elementColor[ElementIndex(CELL_WATER)] = 0xFF11B6FF;
	.loc 16 693 45
	movl	$-15616257, (%rax)	 #, *_68
 # src\main.cpp:694: 					elementColor[ElementIndex(CELL_WOOD) ] = 0xFF915119; 
	.loc 16 694 6
	movq	elementColor(%rip), %rbx	 # elementColor, elementColor.25_213
 # src\main.cpp:694: 					elementColor[ElementIndex(CELL_WOOD) ] = 0xFF915119; 
	.loc 16 694 31
	movl	$4, %ecx	 #,
	call	_Z12ElementIndext	 #
	movl	%eax, %eax	 # _69, _70
 # src\main.cpp:694: 					elementColor[ElementIndex(CELL_WOOD) ] = 0xFF915119; 
	.loc 16 694 43
	salq	$2, %rax	 #, _71
	addq	%rbx, %rax	 # elementColor.25_213, _72
 # src\main.cpp:694: 					elementColor[ElementIndex(CELL_WOOD) ] = 0xFF915119; 
	.loc 16 694 45
	movl	$-7253735, (%rax)	 #, *_72
 # src\main.cpp:695: 					elementColor[ElementIndex(CELL_FIRE) ] = 0xFFC70000; 
	.loc 16 695 6
	movq	elementColor(%rip), %rbx	 # elementColor, elementColor.26_216
 # src\main.cpp:695: 					elementColor[ElementIndex(CELL_FIRE) ] = 0xFFC70000; 
	.loc 16 695 31
	movl	$8, %ecx	 #,
	call	_Z12ElementIndext	 #
	movl	%eax, %eax	 # _73, _74
 # src\main.cpp:695: 					elementColor[ElementIndex(CELL_FIRE) ] = 0xFFC70000; 
	.loc 16 695 43
	salq	$2, %rax	 #, _75
	addq	%rbx, %rax	 # elementColor.26_216, _76
 # src\main.cpp:695: 					elementColor[ElementIndex(CELL_FIRE) ] = 0xFFC70000; 
	.loc 16 695 45
	movl	$-3735552, (%rax)	 #, *_76
 # src\main.cpp:696: 					elementColor[ElementIndex(CELL_METAL)] = 0xFF636363;
	.loc 16 696 6
	movq	elementColor(%rip), %rbx	 # elementColor, elementColor.27_219
 # src\main.cpp:696: 					elementColor[ElementIndex(CELL_METAL)] = 0xFF636363;
	.loc 16 696 31
	movl	$16, %ecx	 #,
	call	_Z12ElementIndext	 #
	movl	%eax, %eax	 # _77, _78
 # src\main.cpp:696: 					elementColor[ElementIndex(CELL_METAL)] = 0xFF636363;
	.loc 16 696 43
	salq	$2, %rax	 #, _79
	addq	%rbx, %rax	 # elementColor.27_219, _80
 # src\main.cpp:696: 					elementColor[ElementIndex(CELL_METAL)] = 0xFF636363;
	.loc 16 696 45
	movl	$-10263709, (%rax)	 #, *_80
.LBE143:
.LBE142:
.LBE131:
 # src\main.cpp:699: 			break;
	.loc 16 699 4
	jmp	.L324	 #
.L293:
.LBB150:
.LBB151:
 # src\main.cpp:702: 			    if (RenderTarget)
	.loc 16 702 12
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.28_81
 # src\main.cpp:702: 			    if (RenderTarget)
	.loc 16 702 8
	testq	%rax, %rax	 # RenderTarget.28_81
	je	.L310	 #,
.LBB152:
 # src\main.cpp:704: 			        UINT width  = LOWORD(lp);
	.loc 16 704 26
	movq	1400(%rbp), %rax	 # lp, tmp281
 # src\main.cpp:704: 			        UINT width  = LOWORD(lp);
	.loc 16 704 17
	movzwl	%ax, %eax	 # _82, tmp282
	movl	%eax, 1300(%rbp)	 # tmp282, width
 # src\main.cpp:705: 			        UINT height = HIWORD(lp);
	.loc 16 705 26
	movq	1400(%rbp), %rax	 # lp, lp.29_83
	shrq	$16, %rax	 #, _84
 # src\main.cpp:705: 			        UINT height = HIWORD(lp);
	.loc 16 705 17
	movzwl	%ax, %eax	 # _85, tmp283
	movl	%eax, 1296(%rbp)	 # tmp283, height
 # src\main.cpp:706: 			        RenderTarget->Resize(D2D1::SizeU(width, height));
	.loc 16 706 32
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.30_86
	movl	1300(%rbp), %edx	 # width, tmp284
	movl	%edx, 1208(%rbp)	 # tmp284, width
	movl	1296(%rbp), %edx	 # height, tmp285
	movl	%edx, 1204(%rbp)	 # tmp285, height
	movl	1208(%rbp), %edx	 # width, tmp286
	movl	%edx, 1200(%rbp)	 # tmp286, width
	movl	1204(%rbp), %edx	 # height, tmp287
	movl	%edx, 1196(%rbp)	 # tmp287, height
.LBB153:
.LBB154:
.LBB155:
.LBB156:
 # C:/msys64/mingw64/include/d2d1helper.h:45:     typename TypeTraits<T>::Size r = {width, height};
	.loc 18 45 34
	movl	1200(%rbp), %edx	 # width, tmp288
	movl	%edx, 944(%rbp)	 # tmp288, r.width
	movl	1196(%rbp), %edx	 # height, tmp289
	movl	%edx, 948(%rbp)	 # tmp289, r.height
 # C:/msys64/mingw64/include/d2d1helper.h:46:     return r;
	.loc 18 46 12
	movq	944(%rbp), %rdx	 # r, D.239144
.LBE156:
.LBE155:
 # C:/msys64/mingw64/include/d2d1helper.h:54:     return Size<UINT32>(width, height);
	.loc 18 54 38
	nop	
.LBE154:
.LBE153:
 # src\main.cpp:706: 			        RenderTarget->Resize(D2D1::SizeU(width, height));
	.loc 16 706 44
	movq	%rdx, 1096(%rbp)	 # D.239143, D.207667
 # src\main.cpp:706: 			        RenderTarget->Resize(D2D1::SizeU(width, height));
	.loc 16 706 32
	leaq	1096(%rbp), %rdx	 #, tmp290
	movq	%rax, %rcx	 # RenderTarget.30_86,
	call	_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U	 #
.LBE152:
.LBE151:
.LBE150:
 # src\main.cpp:712: 			break;
	.loc 16 712 4
	jmp	.L309	 #
.L310:
.LBB158:
.LBB157:
 # src\main.cpp:709: 					printf("WM_SIZE: RENDERTARGET = nullptr");
	.loc 16 709 12
	leaq	.LC48(%rip), %rax	 #, tmp291
	movq	%rax, %rcx	 # tmp291,
	call	_Z6printfPKcz	 #
.LBE157:
.LBE158:
 # src\main.cpp:712: 			break;
	.loc 16 712 4
	jmp	.L309	 #
.L290:
.LBB159:
 # src\main.cpp:715: 				MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 16 715 64
	movq	1376(%rbp), %rax	 # hwnd, tmp292
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp292,
	movq	__imp_GetWindowLongPtrW(%rip), %rax	 #, tmp293
	call	*%rax	 # tmp293
.LVL18:
 # src\main.cpp:715: 				MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 16 715 85
	movq	%rax, 1312(%rbp)	 # _87, matrix
 # src\main.cpp:716: 				CHECK_MATRIX_POPULATION();
	.loc 16 716 5
	cmpq	$0, 1312(%rbp)	 #, matrix
	jne	.L314	 #,
 # src\main.cpp:716: 				CHECK_MATRIX_POPULATION();
	.loc 16 716 5 is_stmt 0 discriminator 1
	movq	1400(%rbp), %r8	 # lp, tmp294
	movq	1392(%rbp), %rcx	 # wp, tmp295
	movl	1384(%rbp), %edx	 # msg, tmp296
	movq	1376(%rbp), %rax	 # hwnd, tmp297
	movq	%r8, %r9	 # tmp294,
	movq	%rcx, %r8	 # tmp295,
	movq	%rax, %rcx	 # tmp297,
	movq	__imp_DefWindowProcW(%rip), %rax	 #, tmp298
	call	*%rax	 # tmp298
.LVL19:
	jmp	.L285	 #
.L314:
 # src\main.cpp:718: 				uint32_t x = GET_X_LPARAM(lp);
	.loc 16 718 18 is_stmt 1
	movq	1400(%rbp), %rax	 # lp, tmp299
 # src\main.cpp:718: 				uint32_t x = GET_X_LPARAM(lp);
	.loc 16 718 14
	cwtl
	movl	%eax, 1308(%rbp)	 # tmp300, x
 # src\main.cpp:719: 				uint32_t y = GET_Y_LPARAM(lp);
	.loc 16 719 18
	movq	1400(%rbp), %rax	 # lp, lp.31_89
	shrq	$16, %rax	 #, _90
 # src\main.cpp:719: 				uint32_t y = GET_Y_LPARAM(lp);
	.loc 16 719 14
	cwtl
	movl	%eax, 1304(%rbp)	 # tmp301, y
.LBE159:
 # src\main.cpp:721: 			break;
	.loc 16 721 4
	jmp	.L309	 #
.L292:
 # src\main.cpp:727: 				ValidateRect(hwnd, nullptr);
	.loc 16 727 17
	movq	1376(%rbp), %rax	 # hwnd, tmp302
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp302,
	movq	__imp_ValidateRect(%rip), %rax	 #, tmp303
	call	*%rax	 # tmp303
.LVL20:
 # src\main.cpp:729: 				if(RenderTarget && Bitmap)
	.loc 16 729 8
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.32_92
 # src\main.cpp:729: 				if(RenderTarget && Bitmap)
	.loc 16 729 5
	testq	%rax, %rax	 # RenderTarget.32_92
	je	.L325	 #,
 # src\main.cpp:729: 				if(RenderTarget && Bitmap)
	.loc 16 729 24 discriminator 1
	movq	Bitmap(%rip), %rax	 # Bitmap, Bitmap.33_93
 # src\main.cpp:729: 				if(RenderTarget && Bitmap)
	.loc 16 729 21 discriminator 1
	testq	%rax, %rax	 # Bitmap.33_93
	je	.L325	 #,
 # src\main.cpp:731: 					RenderTarget->BeginDraw();
	.loc 16 731 29
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.35_96
	movq	(%rax), %rax	 # RenderTarget.35_96->D.200562.D.199359.D.198587._vptr.IUnknown, _97
	addq	$384, %rax	 #, _98
	movq	(%rax), %rax	 # *_98, _99
	movq	RenderTarget(%rip), %rdx	 # RenderTarget, RenderTarget.36_100
	movq	%rdx, %rcx	 # _101,
	call	*%rax	 # _99
.LVL21:
 # src\main.cpp:732: 					RenderTarget->Clear(D2D1::ColorF(D2D1::ColorF::Black));
	.loc 16 732 25
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.37_102
	movq	%rax, %rcx	 # RenderTarget.37_102, _103
	movl	$0, 1192(%rbp)	 #, knownColor
	movss	.LC2(%rip), %xmm0	 #, tmp304
	movss	%xmm0, 1188(%rbp)	 # tmp304, _a
	leaq	1104(%rbp), %rax	 #, tmp305
	movq	%rax, 1176(%rbp)	 # tmp305, this
	movl	1192(%rbp), %eax	 # knownColor, tmp306
	movl	%eax, 1172(%rbp)	 # tmp306, rgb
	movss	1188(%rbp), %xmm0	 # _a, tmp307
	movss	%xmm0, 1168(%rbp)	 # tmp307, _a
.LBB160:
.LBB161:
.LBB162:
.LBB163:
.LBB164:
 # C:/msys64/mingw64/include/d2d1helper.h:360:         r = static_cast<float>((rgb>>16)&0xff)/255.0f;
	.loc 18 360 36
	movl	1172(%rbp), %eax	 # rgb, tmp308
	shrl	$16, %eax	 #, _268
 # C:/msys64/mingw64/include/d2d1helper.h:360:         r = static_cast<float>((rgb>>16)&0xff)/255.0f;
	.loc 18 360 41
	movzbl	%al, %eax	 # _268, _269
 # C:/msys64/mingw64/include/d2d1helper.h:360:         r = static_cast<float>((rgb>>16)&0xff)/255.0f;
	.loc 18 360 13
	movl	%eax, %eax	 # _269, tmp309
	testq	%rax, %rax	 # tmp309
	js	.L316	 #,
	pxor	%xmm0, %xmm0	 # _270
	cvtsi2ssq	%rax, %xmm0	 # tmp309, _270
	jmp	.L317	 #
.L316:
	movq	%rax, %rdx	 # tmp309, tmp311
	shrq	%rdx	 # tmp311
	andl	$1, %eax	 #, tmp312
	orq	%rax, %rdx	 # tmp312, tmp311
	pxor	%xmm0, %xmm0	 # tmp310
	cvtsi2ssq	%rdx, %xmm0	 # tmp311, tmp310
	addss	%xmm0, %xmm0	 # tmp310, _270
.L317:
 # C:/msys64/mingw64/include/d2d1helper.h:360:         r = static_cast<float>((rgb>>16)&0xff)/255.0f;
	.loc 18 360 47
	movss	.LC49(%rip), %xmm1	 #, tmp313
	divss	%xmm1, %xmm0	 # tmp313, _271
 # C:/msys64/mingw64/include/d2d1helper.h:360:         r = static_cast<float>((rgb>>16)&0xff)/255.0f;
	.loc 18 360 11
	movq	1176(%rbp), %rax	 # this, tmp314
	movss	%xmm0, (%rax)	 # _271, this_265->D.201921.r
 # C:/msys64/mingw64/include/d2d1helper.h:361:         g = static_cast<float>((rgb>>8)&0xff)/255.0f;
	.loc 18 361 36
	movl	1172(%rbp), %eax	 # rgb, tmp315
	shrl	$8, %eax	 #, _272
 # C:/msys64/mingw64/include/d2d1helper.h:361:         g = static_cast<float>((rgb>>8)&0xff)/255.0f;
	.loc 18 361 40
	movzbl	%al, %eax	 # _272, _273
 # C:/msys64/mingw64/include/d2d1helper.h:361:         g = static_cast<float>((rgb>>8)&0xff)/255.0f;
	.loc 18 361 13
	movl	%eax, %eax	 # _273, tmp316
	testq	%rax, %rax	 # tmp316
	js	.L318	 #,
	pxor	%xmm0, %xmm0	 # _274
	cvtsi2ssq	%rax, %xmm0	 # tmp316, _274
	jmp	.L319	 #
.L318:
	movq	%rax, %rdx	 # tmp316, tmp318
	shrq	%rdx	 # tmp318
	andl	$1, %eax	 #, tmp319
	orq	%rax, %rdx	 # tmp319, tmp318
	pxor	%xmm0, %xmm0	 # tmp317
	cvtsi2ssq	%rdx, %xmm0	 # tmp318, tmp317
	addss	%xmm0, %xmm0	 # tmp317, _274
.L319:
 # C:/msys64/mingw64/include/d2d1helper.h:361:         g = static_cast<float>((rgb>>8)&0xff)/255.0f;
	.loc 18 361 46
	movss	.LC49(%rip), %xmm1	 #, tmp320
	divss	%xmm1, %xmm0	 # tmp320, _275
 # C:/msys64/mingw64/include/d2d1helper.h:361:         g = static_cast<float>((rgb>>8)&0xff)/255.0f;
	.loc 18 361 11
	movq	1176(%rbp), %rax	 # this, tmp321
	movss	%xmm0, 4(%rax)	 # _275, this_265->D.201921.g
 # C:/msys64/mingw64/include/d2d1helper.h:362:         b = static_cast<float>(rgb&0xff)/255.0f;
	.loc 18 362 35
	movl	1172(%rbp), %eax	 # rgb, tmp322
	movzbl	%al, %eax	 # tmp322, _276
 # C:/msys64/mingw64/include/d2d1helper.h:362:         b = static_cast<float>(rgb&0xff)/255.0f;
	.loc 18 362 13
	movl	%eax, %eax	 # _276, tmp323
	testq	%rax, %rax	 # tmp323
	js	.L320	 #,
	pxor	%xmm0, %xmm0	 # _277
	cvtsi2ssq	%rax, %xmm0	 # tmp323, _277
	jmp	.L321	 #
.L320:
	movq	%rax, %rdx	 # tmp323, tmp325
	shrq	%rdx	 # tmp325
	andl	$1, %eax	 #, tmp326
	orq	%rax, %rdx	 # tmp326, tmp325
	pxor	%xmm0, %xmm0	 # tmp324
	cvtsi2ssq	%rdx, %xmm0	 # tmp325, tmp324
	addss	%xmm0, %xmm0	 # tmp324, _277
.L321:
 # C:/msys64/mingw64/include/d2d1helper.h:362:         b = static_cast<float>(rgb&0xff)/255.0f;
	.loc 18 362 41
	movss	.LC49(%rip), %xmm1	 #, tmp327
	divss	%xmm1, %xmm0	 # tmp327, _278
 # C:/msys64/mingw64/include/d2d1helper.h:362:         b = static_cast<float>(rgb&0xff)/255.0f;
	.loc 18 362 11
	movq	1176(%rbp), %rax	 # this, tmp328
	movss	%xmm0, 8(%rax)	 # _278, this_265->D.201921.b
 # C:/msys64/mingw64/include/d2d1helper.h:363:         a = _a;
	.loc 18 363 11
	movq	1176(%rbp), %rax	 # this, tmp329
	movss	1168(%rbp), %xmm0	 # _a, tmp330
	movss	%xmm0, 12(%rax)	 # tmp330, this_265->D.201921.a
 # C:/msys64/mingw64/include/d2d1helper.h:364:     }
	.loc 18 364 5
	nop	
.LBE164:
.LBE163:
.LBE162:
 # C:/msys64/mingw64/include/d2d1helper.h:350:     }
	.loc 18 350 5
	nop	
.LBE161:
.LBE160:
 # src\main.cpp:732: 					RenderTarget->Clear(D2D1::ColorF(D2D1::ColorF::Black));
	.loc 16 732 25
	leaq	1104(%rbp), %rax	 #, tmp331
	movq	%rax, %rdx	 # tmp331,
	call	_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE	 #
 # src\main.cpp:733: 					RenderTarget->DrawBitmap(Bitmap, D2D1::RectF(0, 0, static_cast<float>(WIDTH), static_cast<float>(HEIGHT)));
	.loc 16 733 30
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.38_104
	movq	%rax, %rcx	 # RenderTarget.38_104, _105
	pxor	%xmm0, %xmm0	 # tmp332
	movss	%xmm0, 1164(%rbp)	 # tmp332, left
	pxor	%xmm0, %xmm0	 # tmp333
	movss	%xmm0, 1160(%rbp)	 # tmp333, top
	movss	.LC50(%rip), %xmm0	 #, tmp334
	movss	%xmm0, 1156(%rbp)	 # tmp334, right
	movss	.LC51(%rip), %xmm0	 #, tmp335
	movss	%xmm0, 1152(%rbp)	 # tmp335, bottom
	movss	1164(%rbp), %xmm0	 # left, tmp336
	movss	%xmm0, 1148(%rbp)	 # tmp336, left
	movss	1160(%rbp), %xmm0	 # top, tmp337
	movss	%xmm0, 1144(%rbp)	 # tmp337, top
	movss	1156(%rbp), %xmm0	 # right, tmp338
	movss	%xmm0, 1140(%rbp)	 # tmp338, right
	movss	1152(%rbp), %xmm0	 # bottom, tmp339
	movss	%xmm0, 1136(%rbp)	 # tmp339, bottom
.LBB165:
.LBB166:
.LBB167:
.LBB168:
 # C:/msys64/mingw64/include/d2d1helper.h:58:     typename TypeTraits<T>::Rect r = {left, top, right, bottom};
	.loc 18 58 34
	movss	1148(%rbp), %xmm0	 # left, tmp340
	movss	%xmm0, 1120(%rbp)	 # tmp340, D.207701.left
	movss	1144(%rbp), %xmm0	 # top, tmp341
	movss	%xmm0, 1124(%rbp)	 # tmp341, D.207701.top
	movss	1140(%rbp), %xmm0	 # right, tmp342
	movss	%xmm0, 1128(%rbp)	 # tmp342, D.207701.right
	movss	1136(%rbp), %xmm0	 # bottom, tmp343
	movss	%xmm0, 1132(%rbp)	 # tmp343, D.207701.bottom
 # C:/msys64/mingw64/include/d2d1helper.h:59:     return r;
	.loc 18 59 12
	nop	
.LBE168:
.LBE167:
 # C:/msys64/mingw64/include/d2d1helper.h:63:     return Rect<FLOAT>(left, top, right, bottom);
	.loc 18 63 48
	nop	
.LBE166:
.LBE165:
 # src\main.cpp:733: 					RenderTarget->DrawBitmap(Bitmap, D2D1::RectF(0, 0, static_cast<float>(WIDTH), static_cast<float>(HEIGHT)));
	.loc 16 733 30
	movq	Bitmap(%rip), %rax	 # Bitmap, Bitmap.39_106
	leaq	1120(%rbp), %rdx	 #, tmp344
	movq	$0, 40(%rsp)	 #,
	movl	$1, 32(%rsp)	 #,
	movss	.LC2(%rip), %xmm3	 #,
	movq	%rdx, %r8	 # tmp344,
	movq	%rax, %rdx	 # Bitmap.39_106,
	call	_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_	 #
 # src\main.cpp:734: 					RenderTarget->EndDraw();
	.loc 16 734 27
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.41_109
	movq	(%rax), %rax	 # RenderTarget.41_109->D.200562.D.199359.D.198587._vptr.IUnknown, _110
	addq	$392, %rax	 #, _111
	movq	(%rax), %rax	 # *_111, _112
	movq	RenderTarget(%rip), %rdx	 # RenderTarget, RenderTarget.42_113
	movq	%rdx, %rcx	 # RenderTarget.42_113, _114
	movl	$0, %r8d	 #,
	movl	$0, %edx	 #,
	call	*%rax	 # _112
.LVL22:
 # src\main.cpp:737: 			break;
	.loc 16 737 4
	jmp	.L325	 #
.L295:
 # src\main.cpp:738: 			case WM_DESTROY: PostQuitMessage(0); break;
	.loc 16 738 36
	movl	$0, %ecx	 #,
	movq	__imp_PostQuitMessage(%rip), %rax	 #, tmp345
	call	*%rax	 # tmp345
.LVL23:
 # src\main.cpp:738: 			case WM_DESTROY: PostQuitMessage(0); break;
	.loc 16 738 41
	jmp	.L309	 #
.L291:
 # src\main.cpp:739: 			default: return DefWindowProc(hwnd, msg, wp, lp); break;
	.loc 16 739 33
	movq	1400(%rbp), %r8	 # lp, tmp346
	movq	1392(%rbp), %rcx	 # wp, tmp347
	movl	1384(%rbp), %edx	 # msg, tmp348
	movq	1376(%rbp), %rax	 # hwnd, tmp349
	movq	%r8, %r9	 # tmp346,
	movq	%rcx, %r8	 # tmp347,
	movq	%rax, %rcx	 # tmp349,
	movq	__imp_DefWindowProcW(%rip), %rax	 #, tmp350
	call	*%rax	 # tmp350
.LVL24:
 # src\main.cpp:739: 			default: return DefWindowProc(hwnd, msg, wp, lp); break;
	.loc 16 739 51
	jmp	.L285	 #
.L324:
 # src\main.cpp:699: 			break;
	.loc 16 699 4
	nop	
	jmp	.L309	 #
.L325:
 # src\main.cpp:737: 			break;
	.loc 16 737 4
	nop	
.L309:
.LBE130:
.LBE129:
 # src\main.cpp:742: 		return 0;
	.loc 16 742 10
	movl	$0, %eax	 #, _118
.L285:
 # src\main.cpp:743: 	}
	.loc 16 743 2
	addq	$1480, %rsp	 #,
	popq	%rbx	 #
.LCFI402:
	popq	%rbp	 #
.LCFI403:
	ret	
.LFE10940:
	.seh_endproc
	.globl	_ZN21WINDOWGraphicsOverlay16ShowErrorMessageEPKc
	.def	_ZN21WINDOWGraphicsOverlay16ShowErrorMessageEPKc;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay16ShowErrorMessageEPKc
_ZN21WINDOWGraphicsOverlay16ShowErrorMessageEPKc:
.LFB10944:
	.loc 16 745 47
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI404:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI405:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # errorText, errorText
 # src\main.cpp:746: 		int len = MultiByteToWideChar(CP_ACP, 0, errorText, -1, NULL, 0);
	.loc 16 746 32
	movq	16(%rbp), %rax	 # errorText, tmp86
	movl	$0, 40(%rsp)	 #,
	movq	$0, 32(%rsp)	 #,
	movl	$-1, %r9d	 #,
	movq	%rax, %r8	 # tmp86,
	movl	$0, %edx	 #,
	movl	$0, %ecx	 #,
	movq	__imp_MultiByteToWideChar(%rip), %rax	 #, tmp87
	call	*%rax	 # tmp87
.LVL25:
	movl	%eax, -4(%rbp)	 # _5, len
 # src\main.cpp:747: 		wchar_t* wideErrorText = new wchar_t[len];
	.loc 16 747 40
	movl	-4(%rbp), %eax	 # len, tmp88
	cltq
 # src\main.cpp:747: 		wchar_t* wideErrorText = new wchar_t[len];
	.loc 16 747 43
	movabsq	$4611686018427387900, %rdx	 #, tmp89
	cmpq	%rax, %rdx	 # _7, tmp89
	jb	.L327	 #,
 # src\main.cpp:747: 		wchar_t* wideErrorText = new wchar_t[len];
	.loc 16 747 43 is_stmt 0 discriminator 1
	addq	%rax, %rax	 # iftmp.45_9
	movq	%rax, %rcx	 # iftmp.45_9,
	call	_Znay	 #
	movq	%rax, -16(%rbp)	 # _11, wideErrorText
 # src\main.cpp:748: 		MultiByteToWideChar(CP_ACP, 0, errorText, -1, wideErrorText, len);
	.loc 16 748 22 is_stmt 1 discriminator 1
	movq	16(%rbp), %rdx	 # errorText, tmp91
	movl	-4(%rbp), %eax	 # len, tmp92
	movl	%eax, 40(%rsp)	 # tmp92,
	movq	-16(%rbp), %rax	 # wideErrorText, tmp93
	movq	%rax, 32(%rsp)	 # tmp93,
	movl	$-1, %r9d	 #,
	movq	%rdx, %r8	 # tmp91,
	movl	$0, %edx	 #,
	movl	$0, %ecx	 #,
	movq	__imp_MultiByteToWideChar(%rip), %rax	 #, tmp94
	call	*%rax	 # tmp94
.LVL26:
 # src\main.cpp:749: 		MessageBoxW(NULL, wideErrorText, L"Error", MB_ICONERROR | MB_OK);
	.loc 16 749 14 discriminator 1
	movq	-16(%rbp), %rax	 # wideErrorText, tmp95
	movl	$16, %r9d	 #,
	leaq	.LC46(%rip), %r8	 #,
	movq	%rax, %rdx	 # tmp95,
	movl	$0, %ecx	 #,
	movq	__imp_MessageBoxW(%rip), %rax	 #, tmp96
	call	*%rax	 # tmp96
.LVL27:
 # src\main.cpp:750: 		delete[] wideErrorText;
	.loc 16 750 3 discriminator 1
	cmpq	$0, -16(%rbp)	 #, wideErrorText
	je	.L331	 #,
	jmp	.L330	 #
.L327:
 # src\main.cpp:747: 		wchar_t* wideErrorText = new wchar_t[len];
	.loc 16 747 43 discriminator 2
	call	__cxa_throw_bad_array_new_length	 #
.L330:
 # src\main.cpp:750: 		delete[] wideErrorText;
	.loc 16 750 12 discriminator 1
	movq	-16(%rbp), %rax	 # wideErrorText, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZdaPv	 #
.L331:
 # src\main.cpp:751: 	}
	.loc 16 751 2
	nop	
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI406:
	ret	
.LFE10944:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC52:
	.ascii "3\0D\0S\0i\0m\0u\0l\0a\0t\0i\0o\0n\0O\0v\0e\0r\0l\0a\0y\0\0\0"
	.align 8
.LC53:
	.ascii "-> Window Class not initialized or registered\12\0"
	.align 8
.LC54:
	.ascii "R\0E\0D\0J\0A\0D\0E\0R\0 \0-\0 \0S\0I\0M\0U\0L\0A\0T\0I\0O\0N\0\0\0"
.LC55:
	.ascii "Error creating window: %s\12\0"
.LC56:
	.ascii "-> Window Created\12\0"
	.text
	.globl	_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj
	.def	_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj
_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj:
.LFB10945:
	.loc 16 754 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI407:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI408:
	subq	$208, %rsp	 #,
	.seh_stackalloc	208
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # matrix, matrix
	movl	%edx, 24(%rbp)	 # width, width
	movl	%r8d, 32(%rbp)	 # height, height
 # src\main.cpp:755: 		void* _handle = nullptr;
	.loc 16 755 9
	movq	$0, -8(%rbp)	 #, _handle
 # src\main.cpp:757: 		WNDCLASSEX wc = { };
	.loc 16 757 14
	pxor	%xmm0, %xmm0	 # tmp94
	movups	%xmm0, -96(%rbp)	 # tmp94, wc
	movups	%xmm0, -80(%rbp)	 # tmp94, wc
	movups	%xmm0, -64(%rbp)	 # tmp94, wc
	movups	%xmm0, -48(%rbp)	 # tmp94, wc
	movups	%xmm0, -32(%rbp)	 # tmp94, wc
 # src\main.cpp:758: 		wc.cbSize        = sizeof(WNDCLASSEX);
	.loc 16 758 20
	movl	$80, -96(%rbp)	 #, wc.cbSize
 # src\main.cpp:759: 		wc.lpfnWndProc   = WindowProc;
	.loc 16 759 20
	leaq	_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx(%rip), %rax	 #, tmp95
	movq	%rax, -88(%rbp)	 # tmp95, wc.lpfnWndProc
 # src\main.cpp:760: 		wc.hInstance     = GetInstance();
	.loc 16 760 22
	movl	$0, %ecx	 #,
	movq	__imp_GetModuleHandleW(%rip), %rax	 #, tmp96
	call	*%rax	 # tmp96
.LVL28:
 # src\main.cpp:760: 		wc.hInstance     = GetInstance();
	.loc 16 760 20
	movq	%rax, -72(%rbp)	 # _1, wc.hInstance
 # src\main.cpp:761: 		wc.hCursor       = LoadCursor(nullptr, IDC_ARROW);
	.loc 16 761 32
	movl	$32512, %edx	 #,
	movl	$0, %ecx	 #,
	movq	__imp_LoadCursorW(%rip), %rax	 #, tmp97
	call	*%rax	 # tmp97
.LVL29:
 # src\main.cpp:761: 		wc.hCursor       = LoadCursor(nullptr, IDC_ARROW);
	.loc 16 761 20
	movq	%rax, -56(%rbp)	 # _2, wc.hCursor
 # src\main.cpp:762: 		wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
	.loc 16 762 20
	movq	$6, -48(%rbp)	 #, wc.hbrBackground
 # src\main.cpp:763: 		wc.lpszClassName = L"3DSimulationOverlay";
	.loc 16 763 20
	leaq	.LC52(%rip), %rax	 #, tmp98
	movq	%rax, -32(%rbp)	 # tmp98, wc.lpszClassName
 # src\main.cpp:764: 		if(!RegisterClassEx(&wc))
	.loc 16 764 22
	leaq	-96(%rbp), %rax	 #, tmp99
	movq	%rax, %rcx	 # tmp99,
	movq	__imp_RegisterClassExW(%rip), %rax	 #, tmp100
	call	*%rax	 # tmp100
.LVL30:
 # src\main.cpp:764: 		if(!RegisterClassEx(&wc))
	.loc 16 764 6
	testw	%ax, %ax	 # _3
	sete	%al	 #, retval.46_28
 # src\main.cpp:764: 		if(!RegisterClassEx(&wc))
	.loc 16 764 3
	testb	%al, %al	 # retval.46_28
	je	.L333	 #,
 # src\main.cpp:766: 			printf("-> Window Class not initialized or registered\n");
	.loc 16 766 10
	leaq	.LC53(%rip), %rax	 #, tmp101
	movq	%rax, %rcx	 # tmp101,
	call	_Z6printfPKcz	 #
.L333:
 # src\main.cpp:769: 		_handle = CreateWindowEx(
	.loc 16 769 27
	movl	$0, %ecx	 #,
	movq	__imp_GetModuleHandleW(%rip), %rax	 #, tmp102
	call	*%rax	 # tmp102
.LVL31:
	movq	%rax, %rdx	 #, _4
	movq	-32(%rbp), %rax	 # wc.lpszClassName, _5
	movq	16(%rbp), %rcx	 # matrix, tmp103
	movq	%rcx, 88(%rsp)	 # tmp103,
	movq	%rdx, 80(%rsp)	 # _4,
	movq	$0, 72(%rsp)	 #,
	movq	$0, 64(%rsp)	 #,
	movl	$600, 56(%rsp)	 #,
	movl	$800, 48(%rsp)	 #,
	movl	$-2147483648, 40(%rsp)	 #,
	movl	$-2147483648, 32(%rsp)	 #,
	movl	$13565952, %r9d	 #,
	leaq	.LC54(%rip), %r8	 #,
	movq	%rax, %rdx	 # _5,
	movl	$0, %ecx	 #,
	movq	__imp_CreateWindowExW(%rip), %rax	 #, tmp104
	call	*%rax	 # tmp104
.LVL32:
	movq	%rax, -8(%rbp)	 # _34, _handle
.LBB169:
 # src\main.cpp:778: 		if(_handle==nullptr)
	.loc 16 778 3
	cmpq	$0, -8(%rbp)	 #, _handle
	jne	.L334	 #,
.LBB170:
 # src\main.cpp:780: 			DWORD errorCode = GetLastError();
	.loc 16 780 34
	movq	__imp_GetLastError(%rip), %rax	 #, tmp105
	call	*%rax	 # tmp105
.LVL33:
	movl	%eax, -12(%rbp)	 # _41, errorCode
 # src\main.cpp:781:     		LPSTR errorText = NULL;
	.loc 16 781 13
	movq	$0, -104(%rbp)	 #, errorText
 # src\main.cpp:782:     		FormatMessage(
	.loc 16 782 20
	movl	-12(%rbp), %edx	 # errorCode, tmp106
	movq	$0, 48(%rsp)	 #,
	movl	$0, 40(%rsp)	 #,
	leaq	-104(%rbp), %rax	 #, tmp107
	movq	%rax, 32(%rsp)	 # tmp107,
	movl	$1024, %r9d	 #,
	movl	%edx, %r8d	 # tmp106,
	movl	$0, %edx	 #,
	movl	$4864, %ecx	 #,
	movq	__imp_FormatMessageW(%rip), %rax	 #, tmp108
	call	*%rax	 # tmp108
.LVL34:
 # src\main.cpp:787:     		printf("Error creating window: %s\n", errorText);
	.loc 16 787 13
	movq	-104(%rbp), %rax	 # errorText, errorText.47_6
	movq	%rax, %rdx	 # errorText.47_6,
	leaq	.LC55(%rip), %rax	 #, tmp109
	movq	%rax, %rcx	 # tmp109,
	call	_Z6printfPKcz	 #
 # src\main.cpp:788:     		LocalFree(errorText);
	.loc 16 788 16
	movq	-104(%rbp), %rax	 # errorText, errorText.48_7
	movq	%rax, %rcx	 # errorText.48_7,
	movq	__imp_LocalFree(%rip), %rax	 #, tmp110
	call	*%rax	 # tmp110
.LVL35:
 # src\main.cpp:789: 			return nullptr;
	.loc 16 789 11
	movl	$0, %eax	 #, _8
	jmp	.L336	 #
.L334:
.LBE170:
 # src\main.cpp:793: 			printf("-> Window Created\n");
	.loc 16 793 10
	leaq	.LC56(%rip), %rax	 #, tmp111
	movq	%rax, %rcx	 # tmp111,
	call	_Z6printfPKcz	 #
.LBE169:
 # src\main.cpp:796: 		::ShowWindow((HWND)_handle, SW_SHOW);
	.loc 16 796 15
	movq	-8(%rbp), %rax	 # _handle, tmp112
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # tmp112,
	movq	__imp_ShowWindow(%rip), %rax	 #, tmp113
	call	*%rax	 # tmp113
.LVL36:
 # src\main.cpp:797: 		::UpdateWindow((HWND)_handle);
	.loc 16 797 17
	movq	-8(%rbp), %rax	 # _handle, tmp114
	movq	%rax, %rcx	 # tmp114,
	movq	__imp_UpdateWindow(%rip), %rax	 #, tmp115
	call	*%rax	 # tmp115
.LVL37:
 # src\main.cpp:799: 		return _handle;
	.loc 16 799 10
	movq	-8(%rbp), %rax	 # _handle, _8
.L336:
 # src\main.cpp:800: 	}
	.loc 16 800 2 discriminator 2
	addq	$208, %rsp	 #,
	popq	%rbp	 #
.LCFI409:
	ret	
.LFE10945:
	.seh_endproc
	.section	.text$_ZN6MATRIXC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIXC1Ev
	.def	_ZN6MATRIXC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIXC1Ev
_ZN6MATRIXC1Ev:
.LFB10949:
	.loc 16 112 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI410:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI411:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB171:
 # src\main.cpp:112: struct MATRIX
	.loc 16 112 8
	movq	16(%rbp), %rax	 # this, tmp84
	movq	$0, (%rax)	 #, this_4(D)->flag
	movq	16(%rbp), %rax	 # this, tmp85
	movq	$0, 8(%rax)	 #, this_4(D)->CELL_FRONT_BUFFER
	movq	16(%rbp), %rax	 # this, tmp86
	movq	$0, 16(%rax)	 #, this_4(D)->CELL_BACK_BUFFER
	movq	16(%rbp), %rax	 # this, tmp87
	addq	$24, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv	 #
	movq	16(%rbp), %rax	 # this, tmp88
	movl	$0, 32(%rax)	 #, this_4(D)->w
	movq	16(%rbp), %rax	 # this, tmp89
	movl	$0, 36(%rax)	 #, this_4(D)->h
	movq	16(%rbp), %rax	 # this, tmp90
	movl	$0, 40(%rax)	 #, this_4(D)->d
	movq	16(%rbp), %rax	 # this, tmp91
	movw	$5, 44(%rax)	 #, this_4(D)->_pixelWidth
	movq	16(%rbp), %rax	 # this, tmp92
	movw	$5, 46(%rax)	 #, this_4(D)->_pixelHeight
	movq	16(%rbp), %rax	 # this, tmp93
	movss	.LC2(%rip), %xmm0	 #, tmp94
	movss	%xmm0, 48(%rax)	 # tmp94, this_4(D)->cellSize
.LBE171:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI412:
	ret	
.LFE10949:
	.seh_endproc
	.section	.text$_ZN6CameraC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6CameraC1Ev
	.def	_ZN6CameraC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6CameraC1Ev
_ZN6CameraC1Ev:
.LFB10964:
	.loc 16 372 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI413:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI414:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB172:
 # src\main.cpp:372: 	Camera() = default;
	.loc 16 372 2
	movq	16(%rbp), %rax	 # this, _1
	movss	.LC2(%rip), %xmm3	 #,
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _1,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp88
	addq	$12, %rax	 #, _2
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	movss	.LC2(%rip), %xmm1	 #,
	movq	%rax, %rcx	 # _2,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp89
	addq	$24, %rax	 #, _3
	pxor	%xmm3, %xmm3	 #
	movss	.LC2(%rip), %xmm2	 #,
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _3,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp90
	addq	$36, %rax	 #, _4
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _4,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp91
	addq	$48, %rax	 #, _5
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _5,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp92
	addq	$60, %rax	 #, _6
	pxor	%xmm3, %xmm3	 #
	movss	.LC2(%rip), %xmm2	 #,
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _6,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp93
	movss	.LC57(%rip), %xmm0	 #, tmp94
	movss	%xmm0, 72(%rax)	 # tmp94, this_7(D)->FOV
	movq	16(%rbp), %rax	 # this, tmp95
	pxor	%xmm0, %xmm0	 # tmp96
	movss	%xmm0, 76(%rax)	 # tmp96, this_7(D)->yaw
	movq	16(%rbp), %rax	 # this, tmp97
	pxor	%xmm0, %xmm0	 # tmp98
	movss	%xmm0, 80(%rax)	 # tmp98, this_7(D)->pitch
.LBE172:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI415:
	ret	
.LFE10964:
	.seh_endproc
	.text
	.align 2
	.def	_ZZ7WinMainENKUlvE_clEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZZ7WinMainENKUlvE_clEv
_ZZ7WinMainENKUlvE_clEv:
.LFB10973:
	.loc 16 834 33
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI416:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI417:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __closure, __closure
 # src\main.cpp:834: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 16 834 49
	movq	16(%rbp), %rax	 # __closure, tmp85
	movq	8(%rax), %rax	 # __closure_5(D)->__matrix, _1
 # src\main.cpp:834: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 16 834 47
	movq	16(%rbp), %rdx	 # __closure, tmp86
	movq	(%rdx), %rcx	 # __closure_5(D)->__running, _2
 # src\main.cpp:834: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 16 834 73
	movq	16(%rbp), %rdx	 # __closure, tmp87
	movq	16(%rdx), %rdx	 # __closure_5(D)->___handle, _3
 # src\main.cpp:834: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 16 834 72
	movq	%rcx, %r8	 # _2,
	movq	%rax, %rcx	 # _1,
	call	_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE	 #
 # src\main.cpp:834: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 16 834 91
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI418:
	ret	
.LFE10973:
	.seh_endproc
	.align 2
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED2Ev
_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED2Ev:
.LFB10984:
	.file 19 "C:/msys64/mingw64/include/c++/12.2.0/barrier"
	.loc 19 76 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI419:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI420:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB173:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:76:     class __tree_barrier
	.loc 19 76 11
	movq	16(%rbp), %rax	 # this, tmp83
	addq	$8, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED1Ev	 #
.LBE173:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI421:
	ret	
.LFE10984:
	.seh_endproc
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED1Ev;	.scl	3;	.type	32;	.endef
	.set	_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED1Ev,_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED2Ev
	.align 2
	.def	_ZNSt7barrierIZ7WinMainEUlvE_ED2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt7barrierIZ7WinMainEUlvE_ED2Ev
_ZNSt7barrierIZ7WinMainEUlvE_ED2Ev:
.LFB10986:
	.loc 19 204 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI422:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI423:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB174:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:204:     class barrier
	.loc 19 204 11
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED1Ev	 #
.LBE174:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI424:
	ret	
.LFE10986:
	.seh_endproc
	.def	_ZNSt7barrierIZ7WinMainEUlvE_ED1Ev;	.scl	3;	.type	32;	.endef
	.set	_ZNSt7barrierIZ7WinMainEUlvE_ED1Ev,_ZNSt7barrierIZ7WinMainEUlvE_ED2Ev
	.align 2
	.def	_ZZ7WinMainENKUlvE0_clEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZZ7WinMainENKUlvE0_clEv
_ZZ7WinMainENKUlvE0_clEv:
.LFB10988:
	.loc 16 862 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI425:
	pushq	%r12	 #
	.seh_pushreg	%r12
.LCFI426:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI427:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI428:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI429:
	subq	$96, %rsp	 #,
	.seh_stackalloc	96
.LCFI430:
	leaq	96(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 96
.LCFI431:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # __closure, __closure
 # src\main.cpp:862: 						[=, &SyncPoint, &keyfield, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, keyfield, SyncPoint, running, x1, x2, y1, y2, z1, z2); }
	.loc 16 862 75
	movq	48(%rbp), %rax	 # __closure, tmp93
	movq	48(%rax), %rax	 # __closure_13(D)->__matrix, _1
 # src\main.cpp:862: 						[=, &SyncPoint, &keyfield, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, keyfield, SyncPoint, running, x1, x2, y1, y2, z1, z2); }
	.loc 16 862 72
	movq	48(%rbp), %rdx	 # __closure, tmp94
	movl	44(%rdx), %esi	 # __closure_13(D)->__z2, _2
	movq	48(%rbp), %rdx	 # __closure, tmp95
	movl	40(%rdx), %ebx	 # __closure_13(D)->__z1, _3
	movq	48(%rbp), %rdx	 # __closure, tmp96
	movl	36(%rdx), %r11d	 # __closure_13(D)->__y2, _4
	movq	48(%rbp), %rdx	 # __closure, tmp97
	movl	32(%rdx), %r10d	 # __closure_13(D)->__y1, _5
	movq	48(%rbp), %rdx	 # __closure, tmp98
	movl	28(%rdx), %r9d	 # __closure_13(D)->__x2, _6
	movq	48(%rbp), %rdx	 # __closure, tmp99
	movl	24(%rdx), %r8d	 # __closure_13(D)->__x1, _7
	movq	48(%rbp), %rdx	 # __closure, tmp100
	movq	16(%rdx), %rcx	 # __closure_13(D)->__running, _8
	movq	48(%rbp), %rdx	 # __closure, tmp101
	movq	(%rdx), %r12	 # __closure_13(D)->__SyncPoint, _9
	movq	48(%rbp), %rdx	 # __closure, tmp102
	movq	8(%rdx), %rdi	 # __closure_13(D)->__keyfield, _10
 # src\main.cpp:862: 						[=, &SyncPoint, &keyfield, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, keyfield, SyncPoint, running, x1, x2, y1, y2, z1, z2); }
	.loc 16 862 105
	movq	48(%rbp), %rdx	 # __closure, tmp103
	movq	56(%rdx), %rdx	 # __closure_13(D)->___handle, _11
 # src\main.cpp:862: 						[=, &SyncPoint, &keyfield, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, keyfield, SyncPoint, running, x1, x2, y1, y2, z1, z2); }
	.loc 16 862 104
	movl	%esi, 80(%rsp)	 # _2,
	movl	%ebx, 72(%rsp)	 # _3,
	movl	%r11d, 64(%rsp)	 # _4,
	movl	%r10d, 56(%rsp)	 # _5,
	movl	%r9d, 48(%rsp)	 # _6,
	movl	%r8d, 40(%rsp)	 # _7,
	movq	%rcx, 32(%rsp)	 # _8,
	movq	%r12, %r9	 # _9,
	movq	%rdi, %r8	 # _10,
	movq	%rax, %rcx	 # _1,
	call	_ZN6MATRIX21UpdateSimulationStateIZ7WinMainEUlvE_EEvP6HWND__PSt6atomicIhERSt7barrierIT_ERS4_IbEjjjjjj	 #
 # src\main.cpp:862: 						[=, &SyncPoint, &keyfield, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, keyfield, SyncPoint, running, x1, x2, y1, y2, z1, z2); }
	.loc 16 862 169
	nop	
	addq	$96, %rsp	 #,
	popq	%rbx	 #
.LCFI432:
	popq	%rsi	 #
.LCFI433:
	popq	%rdi	 #
.LCFI434:
	popq	%r12	 #
.LCFI435:
	popq	%rbp	 #
.LCFI436:
	ret	
.LFE10988:
	.seh_endproc
	.align 2
	.def	_ZZ7WinMainENKUlvE1_clEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZZ7WinMainENKUlvE1_clEv
_ZZ7WinMainENKUlvE1_clEv:
.LFB10989:
	.loc 16 877 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI437:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI438:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __closure, __closure
 # src\main.cpp:877: 				[=, &running, &cam, &SyncPoint](){ WINDOWGraphicsOverlay::blitOverlay(_handle, SyncPoint, cam, running, StartX, EndX); }
	.loc 16 877 117
	movq	16(%rbp), %rax	 # __closure, tmp90
	movl	36(%rax), %eax	 # __closure_10(D)->__EndX, _1
 # src\main.cpp:877: 				[=, &running, &cam, &SyncPoint](){ WINDOWGraphicsOverlay::blitOverlay(_handle, SyncPoint, cam, running, StartX, EndX); }
	.loc 16 877 74
	movl	%eax, %r10d	 # _1, _2
 # src\main.cpp:877: 				[=, &running, &cam, &SyncPoint](){ WINDOWGraphicsOverlay::blitOverlay(_handle, SyncPoint, cam, running, StartX, EndX); }
	.loc 16 877 109
	movq	16(%rbp), %rax	 # __closure, tmp91
	movl	32(%rax), %eax	 # __closure_10(D)->__StartX, _3
 # src\main.cpp:877: 				[=, &running, &cam, &SyncPoint](){ WINDOWGraphicsOverlay::blitOverlay(_handle, SyncPoint, cam, running, StartX, EndX); }
	.loc 16 877 74
	movl	%eax, %r9d	 # _3, _4
 # src\main.cpp:877: 				[=, &running, &cam, &SyncPoint](){ WINDOWGraphicsOverlay::blitOverlay(_handle, SyncPoint, cam, running, StartX, EndX); }
	.loc 16 877 37
	movq	16(%rbp), %rax	 # __closure, tmp92
	movq	(%rax), %r8	 # __closure_10(D)->__running, _5
	movq	16(%rbp), %rax	 # __closure, tmp93
	movq	8(%rax), %rcx	 # __closure_10(D)->__cam, _6
	movq	16(%rbp), %rax	 # __closure, tmp94
	movq	16(%rax), %rdx	 # __closure_10(D)->__SyncPoint, _7
 # src\main.cpp:877: 				[=, &running, &cam, &SyncPoint](){ WINDOWGraphicsOverlay::blitOverlay(_handle, SyncPoint, cam, running, StartX, EndX); }
	.loc 16 877 75
	movq	16(%rbp), %rax	 # __closure, tmp95
	movq	24(%rax), %rax	 # __closure_10(D)->___handle, _8
 # src\main.cpp:877: 				[=, &running, &cam, &SyncPoint](){ WINDOWGraphicsOverlay::blitOverlay(_handle, SyncPoint, cam, running, StartX, EndX); }
	.loc 16 877 74
	movl	%r10d, 40(%rsp)	 # _2,
	movl	%r9d, 32(%rsp)	 # _4,
	movq	%r8, %r9	 # _5,
	movq	%rcx, %r8	 # _6,
	movq	%rax, %rcx	 # _8,
	call	_ZN21WINDOWGraphicsOverlay11blitOverlayIZ7WinMainEUlvE_EEbP6HWND__RSt7barrierIT_ER6CameraRSt6atomicIbEjj	 #
 # src\main.cpp:877: 				[=, &running, &cam, &SyncPoint](){ WINDOWGraphicsOverlay::blitOverlay(_handle, SyncPoint, cam, running, StartX, EndX); }
	.loc 16 877 124
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI439:
	ret	
.LFE10989:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IfvEERKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IfvEERKT_
	.def	_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IfvEERKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IfvEERKT_
_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IfvEERKT_:
.LFB10992:
	.loc 14 505 23
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI440:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI441:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __rep, __rep
.LBB175:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 10
	movq	24(%rbp), %rax	 # __rep, tmp83
	movss	(%rax), %xmm0	 # *__rep_5(D), _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 6
	movq	16(%rbp), %rax	 # this, tmp84
	movss	%xmm0, (%rax)	 # _1, this_3(D)->__r
.LBE175:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 37
	nop	
	popq	%rbp	 #
.LCFI442:
	ret	
.LFE10992:
	.seh_endproc
	.section	.text$_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE
	.def	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE
_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE:
.LFB10994:
	.loc 14 1026 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI443:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI444:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __lhs, __lhs
	movq	%rdx, 24(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:1028:       { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
	.loc 14 1028 65
	movq	24(%rbp), %rax	 # __rhs, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv	 #
	movq	%rax, -16(%rbp)	 # tmp86, D.215251
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:1028:       { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
	.loc 14 1028 38
	movq	16(%rbp), %rax	 # __lhs, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv	 #
	movq	%rax, -8(%rbp)	 # tmp89, D.215250
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:1028:       { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
	.loc 14 1028 41
	leaq	-16(%rbp), %rdx	 #, tmp90
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:1028:       { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
	.loc 14 1028 69
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI445:
	ret	
.LFE10994:
	.seh_endproc
	.section	.text$_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv
	.def	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv
_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv:
.LFB10995:
	.loc 14 882 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI446:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI447:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:883: 	{ return __d; }
	.loc 14 883 11
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->__d, D.238305
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:883: 	{ return __d; }
	.loc 14 883 16
	popq	%rbp	 #
.LCFI448:
	ret	
.LFE10995:
	.seh_endproc
	.section .rdata,"dr"
.LC58:
	.ascii "MatrixThread[%d] -> indexed\12\0"
.LC59:
	.ascii "UpdateThread[%d] -> \0"
.LC60:
	.ascii "NewThread\12\0"
.LC61:
	.ascii "MainThread\0"
.LC62:
	.ascii "Starting...\12\12\0"
.LC67:
	.ascii "*\0"
	.align 8
.LC68:
	.ascii "\12camera positoned -> at(%f, %f, %f)\12\12\0"
.LC70:
	.ascii "Goodbye!\12\12\0"
.LC73:
	.ascii "Thread[%d] -> closing\12\0"
	.align 2
.LC74:
	.ascii "E\0R\0R\0O\0R\0\0\0"
	.align 8
.LC75:
	.ascii "W\0I\0N\0D\0O\0W\0 \0H\0A\0N\0D\0L\0E\0 \0I\0S\0 \0E\0M\0P\0T\0Y\0\0\0"
	.text
	.globl	WinMain
	.def	WinMain;	.scl	2;	.type	32;	.endef
	.seh_proc	WinMain
WinMain:
.LFB10946:
	.loc 16 804 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI449:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI450:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI451:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI452:
	subq	$1144, %rsp	 #,
	.seh_stackalloc	1144
.LCFI453:
	leaq	128(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 128
.LCFI454:
	movups	%xmm6, 976(%rbp)	 #,
	.seh_savexmm	%xmm6, 1104
	movups	%xmm7, 992(%rbp)	 #,
	.seh_savexmm	%xmm7, 1120
.LCFI455:
	.seh_endprologue
	movq	%rcx, 1056(%rbp)	 # D.207762, D.207762
	movq	%rdx, 1064(%rbp)	 # D.207763, D.207763
	movq	%r8, 1072(%rbp)	 # D.207764, D.207764
	movl	%r9d, 1080(%rbp)	 # D.207765, D.207765
 # src\main.cpp:805: 	MATRIX* matrix = new MATRIX();
	.loc 16 805 30
	movl	$56, %ecx	 #,
.LEHB0:
	call	_Znwy	 #
	movq	%rax, %rbx	 # tmp271, _206
	pxor	%xmm0, %xmm0	 # tmp272
	movups	%xmm0, (%rbx)	 # tmp272, MEM[(struct MATRIX *)_207]
	movups	%xmm0, 16(%rbx)	 # tmp272, MEM[(struct MATRIX *)_207]
	movups	%xmm0, 32(%rbx)	 # tmp272, MEM[(struct MATRIX *)_207]
	movq	%xmm0, 48(%rbx)	 # tmp272, MEM[(struct MATRIX *)_207]
	movq	%rbx, %rcx	 # _206,
	call	_ZN6MATRIXC1Ev	 #
	movq	%rbx, 928(%rbp)	 # _206, matrix
 # src\main.cpp:807: 	uint32_t width  = 100;
	.loc 16 807 11
	movl	$100, 924(%rbp)	 #, width
 # src\main.cpp:808: 	uint32_t height = 100;
	.loc 16 808 11
	movl	$100, 920(%rbp)	 #, height
 # src\main.cpp:809: 	uint32_t depth  = 100;
	.loc 16 809 11
	movl	$100, 916(%rbp)	 #, depth
 # src\main.cpp:811: 	std::atomic<s8flagkeys> keyfield[0xFF] = { 0 };
	.loc 16 811 26
	leaq	224(%rbp), %rdx	 #, tmp273
	movl	$0, %eax	 #, tmp274
	movl	$31, %ecx	 #, tmp275
	movq	%rdx, %rdi	 # tmp273, tmp273
	rep stosq
	movq	%rdi, %rdx	 # tmp273, tmp273
	movl	%eax, (%rdx)	 # tmp274, keyfield
	addq	$4, %rdx	 #, tmp273
	movw	%ax, (%rdx)	 # tmp274, keyfield
	addq	$2, %rdx	 #, tmp273
	movb	%al, (%rdx)	 # tmp274, keyfield
	addq	$1, %rdx	 #, tmp273
 # src\main.cpp:813: 	uint32_t SizeOfMatrix = matrix->InitMatrix(width, height, depth);
	.loc 16 813 44
	movl	916(%rbp), %r8d	 # depth, tmp276
	movl	920(%rbp), %ecx	 # height, tmp277
	movl	924(%rbp), %edx	 # width, tmp278
	movq	928(%rbp), %rax	 # matrix, tmp279
	movl	%r8d, %r9d	 # tmp276,
	movl	%ecx, %r8d	 # tmp277,
	movq	%rax, %rcx	 # tmp279,
	call	_ZN6MATRIX10InitMatrixEjjj	 #
	movl	%eax, 912(%rbp)	 # _218, SizeOfMatrix
 # src\main.cpp:814: 	HWND _handle = (HWND)WINDOWGraphicsOverlay::CreateWindowOverlay(matrix, width, height);
	.loc 16 814 65
	movl	920(%rbp), %ecx	 # height, tmp280
	movl	924(%rbp), %edx	 # width, tmp281
	movq	928(%rbp), %rax	 # matrix, tmp282
	movl	%ecx, %r8d	 # tmp280,
	movq	%rax, %rcx	 # tmp282,
	call	_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj	 #
	movq	%rax, 904(%rbp)	 # _221, _handle
 # src\main.cpp:816: 	std::atomic<bool> running = true;
	.loc 16 816 20
	movb	$1, 223(%rbp)	 #, running._M_base._M_i
 # src\main.cpp:817: 	std::atomic<bool> ready   = false;
	.loc 16 817 20
	movb	$0, 222(%rbp)	 #, ready._M_base._M_i
 # src\main.cpp:819: 	std::thread::id MainThreadID = std::this_thread::get_id();
	.loc 16 819 57
	call	_ZNSt11this_thread6get_idEv	 #
	movq	%rax, 208(%rbp)	 # tmp284, MainThreadID
 # src\main.cpp:821: 	MSG msg = {NULL};
	.loc 16 821 6
	pxor	%xmm0, %xmm0	 # tmp285
	movups	%xmm0, 160(%rbp)	 # tmp285, msg
	movups	%xmm0, 176(%rbp)	 # tmp285, msg
	movups	%xmm0, 192(%rbp)	 # tmp285, msg
.LBB176:
 # src\main.cpp:823: 	if(_handle)
	.loc 16 823 2
	cmpq	$0, 904(%rbp)	 #, _handle
	je	.L350	 #,
.LBB177:
 # src\main.cpp:825: 		Camera cam;
	.loc 16 825 10
	leaq	16(%rbp), %rax	 #, tmp286
	movq	%rax, %rcx	 # tmp286,
	call	_ZN6CameraC1Ev	 #
 # src\main.cpp:828: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 16 828 129
	call	_ZNSt6thread20hardware_concurrencyEv	 #
	movl	%eax, %ebx	 # _1, _231
 # src\main.cpp:828: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 16 828 131
	movabsq	$1152921504606846975, %rax	 #, tmp287
	cmpq	%rbx, %rax	 # _231, tmp287
	jb	.L351	 #,
 # src\main.cpp:828: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 16 828 131 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	 #, _2
	salq	$3, %rax	 #, iftmp.49_160
	jmp	.L352	 #
.L351:
 # src\main.cpp:828: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 16 828 131 discriminator 2
	movq	$-1, %rax	 #, iftmp.49_160
.L352:
 # src\main.cpp:828: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 16 828 131 discriminator 4
	movq	%rax, %rcx	 # iftmp.49_160,
	call	_Znay	 #
.LEHE0:
	movq	%rax, %rsi	 # tmp288, _235
 # src\main.cpp:828: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 16 828 132 is_stmt 1 discriminator 4
	movq	%rbx, (%rsi)	 # _231, MEM[(sizetype *)_236]
 # src\main.cpp:828: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 16 828 131 discriminator 4
	leaq	8(%rsi), %rax	 #, _239
	leaq	-1(%rbx), %rdx	 #, _4
	movq	%rdx, %rbx	 # _4, _146
	movq	%rax, %rdi	 # _239, _145
	jmp	.L353	 #
.L354:
 # src\main.cpp:828: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 16 828 131 is_stmt 0 discriminator 8
	movq	%rdi, %rcx	 # _145,
	call	_ZNSt6threadC1Ev	 #
	subq	$1, %rbx	 #, _146
	addq	$8, %rdi	 #, _145
.L353:
 # src\main.cpp:828: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 16 828 131 discriminator 6
	testq	%rbx, %rbx	 # _146
	jns	.L354	 #,
 # src\main.cpp:828: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 16 828 132 is_stmt 1 discriminator 9
	leaq	8(%rsi), %rdx	 #, _9
	leaq	152(%rbp), %rax	 #, tmp289
	movq	%rax, %rcx	 # tmp289,
	call	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_	 #
 # src\main.cpp:830: 		uint32_t splitPerAxis = std::round(std::cbrt(std::thread::hardware_concurrency()));
	.loc 16 830 37 discriminator 9
	call	_ZNSt6thread20hardware_concurrencyEv	 #
	movl	%eax, %ecx	 # _10,
	call	_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_	 #
	movq	%xmm0, %rax	 #, _11
	movq	%rax, %xmm0	 # _11,
	call	round	 #
 # src\main.cpp:830: 		uint32_t splitPerAxis = std::round(std::cbrt(std::thread::hardware_concurrency()));
	.loc 16 830 84 discriminator 9
	cvttsd2siq	%xmm0, %rax	 # _12, tmp290
	movl	%eax, 900(%rbp)	 # tmp290, splitPerAxis
 # src\main.cpp:831: 		uint32_t numofMatrixThreads = splitPerAxis * splitPerAxis * splitPerAxis;
	.loc 16 831 46 discriminator 9
	movl	900(%rbp), %eax	 # splitPerAxis, tmp291
	imull	%eax, %eax	 # tmp291, _13
 # src\main.cpp:831: 		uint32_t numofMatrixThreads = splitPerAxis * splitPerAxis * splitPerAxis;
	.loc 16 831 12 discriminator 9
	movl	900(%rbp), %edx	 # splitPerAxis, tmp293
	imull	%edx, %eax	 # tmp293, tmp292
	movl	%eax, 896(%rbp)	 # tmp292, numofMatrixThreads
 # src\main.cpp:832: 		uint32_t threadsRemaining   = std::thread::hardware_concurrency() - numofMatrixThreads;
	.loc 16 832 66 discriminator 9
	call	_ZNSt6thread20hardware_concurrencyEv	 #
 # src\main.cpp:832: 		uint32_t threadsRemaining   = std::thread::hardware_concurrency() - numofMatrixThreads;
	.loc 16 832 71 discriminator 9
	subl	896(%rbp), %eax	 # numofMatrixThreads, tmp295
	movl	%eax, 892(%rbp)	 # tmp295, threadsRemaining
 # src\main.cpp:834: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 16 834 91 discriminator 9
	leaq	223(%rbp), %rax	 #, tmp296
	movq	%rax, 128(%rbp)	 # tmp296, rondevousPointFunction.__running
	movq	928(%rbp), %rax	 # matrix, tmp297
	movq	%rax, 136(%rbp)	 # tmp297, rondevousPointFunction.__matrix
	movq	904(%rbp), %rax	 # _handle, tmp298
	movq	%rax, 144(%rbp)	 # tmp298, rondevousPointFunction.___handle
 # src\main.cpp:835: 		std::barrier SyncPoint(numofMatrixThreads + threadsRemaining, rondevousPointFunction);
	.loc 16 835 45 discriminator 9
	movl	896(%rbp), %edx	 # numofMatrixThreads, tmp299
	movl	892(%rbp), %eax	 # threadsRemaining, tmp300
	addl	%edx, %eax	 # tmp299, _15
 # src\main.cpp:835: 		std::barrier SyncPoint(numofMatrixThreads + threadsRemaining, rondevousPointFunction);
	.loc 16 835 87 discriminator 9
	movl	%eax, %ecx	 # _15, _16
	movq	128(%rbp), %rax	 # rondevousPointFunction, tmp301
	movq	136(%rbp), %rdx	 # rondevousPointFunction,
	movq	%rax, -80(%rbp)	 # tmp301,
	movq	%rdx, -72(%rbp)	 #,
	movq	144(%rbp), %rax	 # rondevousPointFunction, tmp302
	movq	%rax, -64(%rbp)	 # tmp302,
	leaq	-80(%rbp), %rdx	 #, tmp303
	leaq	-48(%rbp), %rax	 #, tmp304
	movq	%rdx, %r8	 # tmp303,
	movq	%rcx, %rdx	 # _16,
	movq	%rax, %rcx	 # tmp304,
.LEHB1:
	call	_ZNSt7barrierIZ7WinMainEUlvE_EC1ExS0_	 #
.LEHE1:
 # src\main.cpp:837: 		uint32_t chunkSizeX = width  / splitPerAxis;
	.loc 16 837 12
	movl	924(%rbp), %eax	 # width, tmp308
	movl	$0, %edx	 #, tmp307
	divl	900(%rbp)	 # splitPerAxis
	movl	%eax, 888(%rbp)	 # tmp306, chunkSizeX
 # src\main.cpp:838: 		uint32_t chunkSizeY = height / splitPerAxis;
	.loc 16 838 12
	movl	920(%rbp), %eax	 # height, tmp312
	movl	$0, %edx	 #, tmp311
	divl	900(%rbp)	 # splitPerAxis
	movl	%eax, 884(%rbp)	 # tmp310, chunkSizeY
 # src\main.cpp:839: 		uint32_t chunkSizeZ = depth  / splitPerAxis;
	.loc 16 839 12
	movl	916(%rbp), %eax	 # depth, tmp316
	movl	$0, %edx	 #, tmp315
	divl	900(%rbp)	 # splitPerAxis
	movl	%eax, 880(%rbp)	 # tmp314, chunkSizeZ
 # src\main.cpp:841: 		uint32_t threadIndex = 0;
	.loc 16 841 12
	movl	$0, 972(%rbp)	 #, threadIndex
.LBB178:
 # src\main.cpp:843: 		for (uint32_t x = 0; x < splitPerAxis; ++x) 
	.loc 16 843 17
	movl	$0, 968(%rbp)	 #, x
 # src\main.cpp:843: 		for (uint32_t x = 0; x < splitPerAxis; ++x) 
	.loc 16 843 3
	jmp	.L355	 #
.L366:
.LBB179:
.LBB180:
 # src\main.cpp:845: 		    for (uint32_t y = 0; y < splitPerAxis; ++y) 
	.loc 16 845 21
	movl	$0, 964(%rbp)	 #, y
 # src\main.cpp:845: 		    for (uint32_t y = 0; y < splitPerAxis; ++y) 
	.loc 16 845 7
	jmp	.L356	 #
.L365:
.LBB181:
.LBB182:
 # src\main.cpp:847: 		        for (uint32_t z = 0; z < splitPerAxis; ++z) 
	.loc 16 847 25
	movl	$0, 960(%rbp)	 #, z
 # src\main.cpp:847: 		        for (uint32_t z = 0; z < splitPerAxis; ++z) 
	.loc 16 847 11
	jmp	.L357	 #
.L364:
.LBB183:
 # src\main.cpp:849: 		            uint32_t x1 = x * chunkSizeX;
	.loc 16 849 24
	movl	968(%rbp), %eax	 # x, tmp318
	imull	888(%rbp), %eax	 # chunkSizeX, tmp317
	movl	%eax, 848(%rbp)	 # tmp317, x1
 # src\main.cpp:850: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 16 850 48
	movl	900(%rbp), %eax	 # splitPerAxis, tmp319
	subl	$1, %eax	 #, _17
 # src\main.cpp:850: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 16 850 53
	cmpl	%eax, 968(%rbp)	 # _17, x
	je	.L358	 #,
 # src\main.cpp:850: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 16 850 66 discriminator 1
	movl	968(%rbp), %eax	 # x, tmp320
	addl	$1, %eax	 #, _18
 # src\main.cpp:850: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 16 850 53 discriminator 1
	imull	888(%rbp), %eax	 # chunkSizeX, iftmp.52_161
	jmp	.L359	 #
.L358:
 # src\main.cpp:850: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 16 850 53 is_stmt 0 discriminator 2
	movl	924(%rbp), %eax	 # width, iftmp.52_161
.L359:
 # src\main.cpp:850: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 16 850 24 is_stmt 1 discriminator 4
	movl	%eax, 844(%rbp)	 # iftmp.52_161, x2
 # src\main.cpp:852: 		            uint32_t y1 = y * chunkSizeY;
	.loc 16 852 24 discriminator 4
	movl	964(%rbp), %eax	 # y, tmp322
	imull	884(%rbp), %eax	 # chunkSizeY, tmp321
	movl	%eax, 840(%rbp)	 # tmp321, y1
 # src\main.cpp:853: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 16 853 48 discriminator 4
	movl	900(%rbp), %eax	 # splitPerAxis, tmp323
	subl	$1, %eax	 #, _19
 # src\main.cpp:853: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 16 853 53 discriminator 4
	cmpl	%eax, 964(%rbp)	 # _19, y
	je	.L360	 #,
 # src\main.cpp:853: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 16 853 67 discriminator 1
	movl	964(%rbp), %eax	 # y, tmp324
	addl	$1, %eax	 #, _20
 # src\main.cpp:853: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 16 853 53 discriminator 1
	imull	884(%rbp), %eax	 # chunkSizeY, iftmp.53_162
	jmp	.L361	 #
.L360:
 # src\main.cpp:853: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 16 853 53 is_stmt 0 discriminator 2
	movl	920(%rbp), %eax	 # height, iftmp.53_162
.L361:
 # src\main.cpp:853: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 16 853 24 is_stmt 1 discriminator 4
	movl	%eax, 836(%rbp)	 # iftmp.53_162, y2
 # src\main.cpp:855: 		            uint32_t z1 = z * chunkSizeZ;
	.loc 16 855 24 discriminator 4
	movl	960(%rbp), %eax	 # z, tmp326
	imull	880(%rbp), %eax	 # chunkSizeZ, tmp325
	movl	%eax, 832(%rbp)	 # tmp325, z1
 # src\main.cpp:856: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 16 856 48 discriminator 4
	movl	900(%rbp), %eax	 # splitPerAxis, tmp327
	subl	$1, %eax	 #, _21
 # src\main.cpp:856: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 16 856 53 discriminator 4
	cmpl	%eax, 960(%rbp)	 # _21, z
	je	.L362	 #,
 # src\main.cpp:856: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 16 856 66 discriminator 1
	movl	960(%rbp), %eax	 # z, tmp328
	addl	$1, %eax	 #, _22
 # src\main.cpp:856: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 16 856 53 discriminator 1
	imull	880(%rbp), %eax	 # chunkSizeZ, iftmp.54_163
	jmp	.L363	 #
.L362:
 # src\main.cpp:856: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 16 856 53 is_stmt 0 discriminator 2
	movl	916(%rbp), %eax	 # depth, iftmp.54_163
.L363:
 # src\main.cpp:856: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 16 856 24 is_stmt 1 discriminator 4
	movl	%eax, 828(%rbp)	 # iftmp.54_163, z2
 # src\main.cpp:858: 					printf("MatrixThread[%d] -> indexed\n", threadIndex);
	.loc 16 858 12 discriminator 4
	movl	972(%rbp), %eax	 # threadIndex, tmp329
	movl	%eax, %edx	 # tmp329,
	leaq	.LC58(%rip), %rax	 #, tmp330
	movq	%rax, %rcx	 # tmp330,
.LEHB2:
	call	_Z6printfPKcz	 #
 # src\main.cpp:862: 						[=, &SyncPoint, &keyfield, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, keyfield, SyncPoint, running, x1, x2, y1, y2, z1, z2); }
	.loc 16 862 7
	leaq	-48(%rbp), %rax	 #, tmp331
	movq	%rax, 496(%rbp)	 # tmp331, D.214596.__SyncPoint
	leaq	224(%rbp), %rax	 #, tmp332
	movq	%rax, 504(%rbp)	 # tmp332, D.214596.__keyfield
	leaq	223(%rbp), %rax	 #, tmp333
	movq	%rax, 512(%rbp)	 # tmp333, D.214596.__running
	movl	848(%rbp), %eax	 # x1, tmp334
	movl	%eax, 520(%rbp)	 # tmp334, D.214596.__x1
	movl	844(%rbp), %eax	 # x2, tmp335
	movl	%eax, 524(%rbp)	 # tmp335, D.214596.__x2
	movl	840(%rbp), %eax	 # y1, tmp336
	movl	%eax, 528(%rbp)	 # tmp336, D.214596.__y1
	movl	836(%rbp), %eax	 # y2, tmp337
	movl	%eax, 532(%rbp)	 # tmp337, D.214596.__y2
	movl	832(%rbp), %eax	 # z1, tmp338
	movl	%eax, 536(%rbp)	 # tmp338, D.214596.__z1
	movl	828(%rbp), %eax	 # z2, tmp339
	movl	%eax, 540(%rbp)	 # tmp339, D.214596.__z2
	movq	928(%rbp), %rax	 # matrix, tmp340
	movq	%rax, 544(%rbp)	 # tmp340, D.214596.__matrix
	movq	904(%rbp), %rax	 # _handle, tmp341
	movq	%rax, 552(%rbp)	 # tmp341, D.214596.___handle
 # src\main.cpp:860: 		            ChunkThreads[threadIndex++] = std::thread
	.loc 16 860 50
	leaq	496(%rbp), %rdx	 #, tmp342
	leaq	488(%rbp), %rax	 #, tmp343
	movq	%rax, %rcx	 # tmp343,
	call	_ZNSt6threadC1IZ7WinMainEUlvE0_JEvEEOT_DpOT0_	 #
 # src\main.cpp:860: 		            ChunkThreads[threadIndex++] = std::thread
	.loc 16 860 39 discriminator 1
	movl	972(%rbp), %eax	 # threadIndex, threadIndex.55_23
	leal	1(%rax), %edx	 #, tmp344
	movl	%edx, 972(%rbp)	 # tmp344, threadIndex
 # src\main.cpp:860: 		            ChunkThreads[threadIndex++] = std::thread
	.loc 16 860 41 discriminator 1
	movl	%eax, %edx	 # threadIndex.55_23, _24
	leaq	152(%rbp), %rax	 #, tmp345
	movq	%rax, %rcx	 # tmp345,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
	movq	%rax, %rcx	 #, _25
 # src\main.cpp:863: 					);
	.loc 16 863 6 discriminator 1
	leaq	488(%rbp), %rax	 #, tmp346
	movq	%rax, %rdx	 # tmp346,
	call	_ZNSt6threadaSEOS_	 #
 # src\main.cpp:860: 		            ChunkThreads[threadIndex++] = std::thread
	.loc 16 860 50 discriminator 1
	leaq	488(%rbp), %rax	 #, tmp347
	movq	%rax, %rcx	 # tmp347,
	call	_ZNSt6threadD1Ev	 #
.LBE183:
 # src\main.cpp:847: 		        for (uint32_t z = 0; z < splitPerAxis; ++z) 
	.loc 16 847 11 discriminator 1
	addl	$1, 960(%rbp)	 #, z
.L357:
 # src\main.cpp:847: 		        for (uint32_t z = 0; z < splitPerAxis; ++z) 
	.loc 16 847 34 discriminator 2
	movl	960(%rbp), %eax	 # z, tmp348
	cmpl	900(%rbp), %eax	 # splitPerAxis, tmp348
	jb	.L364	 #,
.LBE182:
.LBE181:
 # src\main.cpp:845: 		    for (uint32_t y = 0; y < splitPerAxis; ++y) 
	.loc 16 845 7 discriminator 2
	addl	$1, 964(%rbp)	 #, y
.L356:
 # src\main.cpp:845: 		    for (uint32_t y = 0; y < splitPerAxis; ++y) 
	.loc 16 845 30 discriminator 1
	movl	964(%rbp), %eax	 # y, tmp349
	cmpl	900(%rbp), %eax	 # splitPerAxis, tmp349
	jb	.L365	 #,
.LBE180:
.LBE179:
 # src\main.cpp:843: 		for (uint32_t x = 0; x < splitPerAxis; ++x) 
	.loc 16 843 3 discriminator 2
	addl	$1, 968(%rbp)	 #, x
.L355:
 # src\main.cpp:843: 		for (uint32_t x = 0; x < splitPerAxis; ++x) 
	.loc 16 843 26 discriminator 1
	movl	968(%rbp), %eax	 # x, tmp350
	cmpl	900(%rbp), %eax	 # splitPerAxis, tmp350
	jb	.L366	 #,
.LBE178:
 # src\main.cpp:868: 		threadsRemaining = std::thread::hardware_concurrency() - threadIndex;
	.loc 16 868 55
	call	_ZNSt6thread20hardware_concurrencyEv	 #
 # src\main.cpp:868: 		threadsRemaining = std::thread::hardware_concurrency() - threadIndex;
	.loc 16 868 20
	subl	972(%rbp), %eax	 # threadIndex, tmp352
	movl	%eax, 892(%rbp)	 # tmp352, threadsRemaining
.LBB184:
 # src\main.cpp:870: 		for(int i=0; i<threadsRemaining; ++i)
	.loc 16 870 11
	movl	$0, 956(%rbp)	 #, i
 # src\main.cpp:870: 		for(int i=0; i<threadsRemaining; ++i)
	.loc 16 870 3
	jmp	.L367	 #
.L370:
.LBB185:
 # src\main.cpp:872: 			int32_t StartX = i * (WIDTH / threadsRemaining);
	.loc 16 872 32
	movl	$800, %eax	 #, tmp355
	movl	$0, %edx	 #, tmp354
	divl	892(%rbp)	 # threadsRemaining
	movl	%eax, %edx	 # tmp353, _27
 # src\main.cpp:872: 			int32_t StartX = i * (WIDTH / threadsRemaining);
	.loc 16 872 21
	movl	956(%rbp), %eax	 # i, i.56_28
 # src\main.cpp:872: 			int32_t StartX = i * (WIDTH / threadsRemaining);
	.loc 16 872 23
	imull	%edx, %eax	 # _27, _29
 # src\main.cpp:872: 			int32_t StartX = i * (WIDTH / threadsRemaining);
	.loc 16 872 12
	movl	%eax, 856(%rbp)	 # _29, StartX
 # src\main.cpp:873: 			int32_t EndX   = i == threadsRemaining -1 ? WIDTH : StartX + (WIDTH / threadsRemaining);
	.loc 16 873 43
	movl	892(%rbp), %eax	 # threadsRemaining, tmp356
	leal	-1(%rax), %edx	 #, _30
 # src\main.cpp:873: 			int32_t EndX   = i == threadsRemaining -1 ? WIDTH : StartX + (WIDTH / threadsRemaining);
	.loc 16 873 21
	movl	956(%rbp), %eax	 # i, i.58_31
 # src\main.cpp:873: 			int32_t EndX   = i == threadsRemaining -1 ? WIDTH : StartX + (WIDTH / threadsRemaining);
	.loc 16 873 46
	cmpl	%eax, %edx	 # i.58_31, _30
	je	.L368	 #,
 # src\main.cpp:873: 			int32_t EndX   = i == threadsRemaining -1 ? WIDTH : StartX + (WIDTH / threadsRemaining);
	.loc 16 873 72 discriminator 1
	movl	$800, %eax	 #, tmp359
	movl	$0, %edx	 #, tmp358
	divl	892(%rbp)	 # threadsRemaining
	movl	%eax, %edx	 # tmp357, _32
 # src\main.cpp:873: 			int32_t EndX   = i == threadsRemaining -1 ? WIDTH : StartX + (WIDTH / threadsRemaining);
	.loc 16 873 56 discriminator 1
	movl	856(%rbp), %eax	 # StartX, StartX.59_33
 # src\main.cpp:873: 			int32_t EndX   = i == threadsRemaining -1 ? WIDTH : StartX + (WIDTH / threadsRemaining);
	.loc 16 873 63 discriminator 1
	addl	%edx, %eax	 # _32, _34
	jmp	.L369	 #
.L368:
 # src\main.cpp:873: 			int32_t EndX   = i == threadsRemaining -1 ? WIDTH : StartX + (WIDTH / threadsRemaining);
	.loc 16 873 46 discriminator 2
	movl	$800, %eax	 #, iftmp.57_164
.L369:
 # src\main.cpp:873: 			int32_t EndX   = i == threadsRemaining -1 ? WIDTH : StartX + (WIDTH / threadsRemaining);
	.loc 16 873 12 discriminator 4
	movl	%eax, 852(%rbp)	 # iftmp.57_164, EndX
 # src\main.cpp:877: 				[=, &running, &cam, &SyncPoint](){ WINDOWGraphicsOverlay::blitOverlay(_handle, SyncPoint, cam, running, StartX, EndX); }
	.loc 16 877 5 discriminator 4
	leaq	223(%rbp), %rax	 #, tmp360
	movq	%rax, 576(%rbp)	 # tmp360, D.214678.__running
	leaq	16(%rbp), %rax	 #, tmp361
	movq	%rax, 584(%rbp)	 # tmp361, D.214678.__cam
	leaq	-48(%rbp), %rax	 #, tmp362
	movq	%rax, 592(%rbp)	 # tmp362, D.214678.__SyncPoint
	movq	904(%rbp), %rax	 # _handle, tmp363
	movq	%rax, 600(%rbp)	 # tmp363, D.214678.___handle
	movl	856(%rbp), %eax	 # StartX, tmp364
	movl	%eax, 608(%rbp)	 # tmp364, D.214678.__StartX
	movl	852(%rbp), %eax	 # EndX, tmp365
	movl	%eax, 612(%rbp)	 # tmp365, D.214678.__EndX
 # src\main.cpp:875: 			ChunkThreads[threadIndex++] = std::thread
	.loc 16 875 39 discriminator 4
	leaq	576(%rbp), %rdx	 #, tmp366
	leaq	568(%rbp), %rax	 #, tmp367
	movq	%rax, %rcx	 # tmp367,
	call	_ZNSt6threadC1IZ7WinMainEUlvE1_JEvEEOT_DpOT0_	 #
 # src\main.cpp:875: 			ChunkThreads[threadIndex++] = std::thread
	.loc 16 875 28 discriminator 1
	movl	972(%rbp), %eax	 # threadIndex, threadIndex.60_35
	leal	1(%rax), %edx	 #, tmp368
	movl	%edx, 972(%rbp)	 # tmp368, threadIndex
 # src\main.cpp:875: 			ChunkThreads[threadIndex++] = std::thread
	.loc 16 875 30 discriminator 1
	movl	%eax, %edx	 # threadIndex.60_35, _36
	leaq	152(%rbp), %rax	 #, tmp369
	movq	%rax, %rcx	 # tmp369,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
	movq	%rax, %rcx	 #, _37
 # src\main.cpp:878: 			);
	.loc 16 878 4 discriminator 1
	leaq	568(%rbp), %rax	 #, tmp370
	movq	%rax, %rdx	 # tmp370,
	call	_ZNSt6threadaSEOS_	 #
 # src\main.cpp:875: 			ChunkThreads[threadIndex++] = std::thread
	.loc 16 875 39 discriminator 1
	leaq	568(%rbp), %rax	 #, tmp371
	movq	%rax, %rcx	 # tmp371,
	call	_ZNSt6threadD1Ev	 #
.LBE185:
 # src\main.cpp:870: 		for(int i=0; i<threadsRemaining; ++i)
	.loc 16 870 3 discriminator 1
	addl	$1, 956(%rbp)	 #, i
.L367:
 # src\main.cpp:870: 		for(int i=0; i<threadsRemaining; ++i)
	.loc 16 870 16 discriminator 2
	movl	956(%rbp), %eax	 # i, i.61_38
 # src\main.cpp:870: 		for(int i=0; i<threadsRemaining; ++i)
	.loc 16 870 17 discriminator 2
	cmpl	892(%rbp), %eax	 # threadsRemaining, i.61_38
	jb	.L370	 #,
.LBE184:
.LBB186:
 # src\main.cpp:881: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 16 881 16
	movw	$0, 954(%rbp)	 #, i
 # src\main.cpp:881: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 16 881 3
	jmp	.L371	 #
.L374:
.LBB187:
 # src\main.cpp:882: 			printf("UpdateThread[%d] -> ", ChunkThreads[i].get_id());
	.loc 16 882 49
	movzwl	954(%rbp), %edx	 # i, _39
	leaq	152(%rbp), %rax	 #, tmp372
	movq	%rax, %rcx	 # tmp372,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
 # src\main.cpp:882: 			printf("UpdateThread[%d] -> ", ChunkThreads[i].get_id());
	.loc 16 882 10
	movq	%rax, %rcx	 # _40,
	call	_ZNKSt6thread6get_idEv	 #
	movq	%rax, %rdx	 # D.237422,
	leaq	.LC59(%rip), %rax	 #, tmp373
	movq	%rax, %rcx	 # tmp373,
	call	_Z6printfPKcz	 #
 # src\main.cpp:883: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 16 883 31
	movzwl	954(%rbp), %edx	 # i, _41
	leaq	152(%rbp), %rax	 #, tmp374
	movq	%rax, %rcx	 # tmp374,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
 # src\main.cpp:883: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 16 883 45
	movq	%rax, %rcx	 # _42,
	call	_ZNKSt6thread6get_idEv	 #
	movq	%rax, %rcx	 #, D.237424
	movq	208(%rbp), %rax	 # MainThreadID, tmp375
	movq	%rax, %rdx	 # tmp375,
	call	_ZSteqNSt6thread2idES0_	 #
 # src\main.cpp:883: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 16 883 42
	xorl	$1, %eax	 #, _44
 # src\main.cpp:883: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 16 883 58
	testb	%al, %al	 # _44
	je	.L372	 #,
 # src\main.cpp:883: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 16 883 66 discriminator 1
	leaq	.LC60(%rip), %rax	 #, tmp376
	movq	%rax, %rcx	 # tmp376,
	call	_Z6printfPKcz	 #
	jmp	.L373	 #
.L372:
 # src\main.cpp:883: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 16 883 90 discriminator 2
	leaq	.LC61(%rip), %rax	 #, tmp377
	movq	%rax, %rcx	 # tmp377,
	call	_Z6printfPKcz	 #
.L373:
 # src\main.cpp:883: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 16 883 103 discriminator 6
	movl	%eax, 860(%rbp)	 # iftmp.62_165, n
.LBE187:
 # src\main.cpp:881: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 16 881 3 discriminator 6
	addw	$1, 954(%rbp)	 #, i
.L371:
 # src\main.cpp:881: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 16 881 21 discriminator 2
	movzwl	954(%rbp), %ebx	 # i, _47
 # src\main.cpp:881: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 16 881 57 discriminator 2
	call	_ZNSt6thread20hardware_concurrencyEv	 #
 # src\main.cpp:881: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 16 881 60 discriminator 2
	subl	$1, %eax	 #, _49
 # src\main.cpp:881: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 16 881 22 discriminator 2
	cmpl	%ebx, %eax	 # _47, _49
	setnb	%al	 #, retval.63_265
	testb	%al, %al	 # retval.63_265
	jne	.L374	 #,
.LBE186:
 # src\main.cpp:889: 		printf("Starting...\n\n");
	.loc 16 889 9
	leaq	.LC62(%rip), %rax	 #, tmp378
	movq	%rax, %rcx	 # tmp378,
	call	_Z6printfPKcz	 #
 # src\main.cpp:891: 		float RotationState = 0.5f;
	.loc 16 891 9
	movss	.LC43(%rip), %xmm0	 #, tmp379
	movss	%xmm0, 876(%rbp)	 # tmp379, RotationState
 # src\main.cpp:893: 		cam.SetFOV(90.0f);
	.loc 16 893 13
	leaq	16(%rbp), %rax	 #, tmp380
	movss	.LC57(%rip), %xmm1	 #,
	movq	%rax, %rcx	 # tmp380,
	call	_ZN6Camera6SetFOVEf	 #
 # src\main.cpp:894: 		cam.SetPosition({10.0f, 3.0f, 12.0f});
	.loc 16 894 18
	leaq	624(%rbp), %rax	 #, tmp381
	movss	.LC63(%rip), %xmm3	 #,
	movss	.LC64(%rip), %xmm2	 #,
	movss	.LC65(%rip), %xmm1	 #,
	movq	%rax, %rcx	 # tmp381,
	call	_ZN5Vec3DC1Efff	 #
	movq	624(%rbp), %rax	 # D.214730, tmp382
	movq	%rax, -80(%rbp)	 # tmp382,
	movl	632(%rbp), %eax	 # D.214730, tmp383
	movl	%eax, -72(%rbp)	 # tmp383,
	leaq	-80(%rbp), %rdx	 #, tmp384
	leaq	16(%rbp), %rax	 #, tmp385
	movq	%rax, %rcx	 # tmp385,
	call	_ZN6Camera11SetPositionE5Vec3D	 #
 # src\main.cpp:895: 		cam.Rotate(0.0f, -10.0f);
	.loc 16 895 13 discriminator 2
	leaq	16(%rbp), %rax	 #, tmp386
	movss	.LC66(%rip), %xmm2	 #,
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # tmp386,
	call	_ZN6Camera6RotateEff	 #
 # src\main.cpp:897: 		matrix->WriteDataTo(10, 2, 5, CELL_FIRE );
	.loc 16 897 22
	leaq	638(%rbp), %rax	 #, tmp387
	movq	928(%rbp), %rdx	 # matrix, tmp388
	movl	$8, 40(%rsp)	 #,
	movl	$5, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp387,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
 # src\main.cpp:897: 		matrix->WriteDataTo(10, 2, 5, CELL_FIRE );
	.loc 16 897 22 is_stmt 0 discriminator 2
	leaq	638(%rbp), %rax	 #, tmp389
	movq	%rax, %rcx	 # tmp389,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:898: 		matrix->WriteDataTo(9,  2, 5, CELL_METAL);
	.loc 16 898 22 is_stmt 1 discriminator 2
	leaq	640(%rbp), %rax	 #, tmp390
	movq	928(%rbp), %rdx	 # matrix, tmp391
	movl	$16, 40(%rsp)	 #,
	movl	$5, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp390,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	640(%rbp), %rax	 #, tmp392
	movq	%rax, %rcx	 # tmp392,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:899: 		matrix->WriteDataTo(8,  2, 5, CELL_WOOD );
	.loc 16 899 22 discriminator 2
	leaq	642(%rbp), %rax	 #, tmp393
	movq	928(%rbp), %rdx	 # matrix, tmp394
	movl	$4, 40(%rsp)	 #,
	movl	$5, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp393,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	642(%rbp), %rax	 #, tmp395
	movq	%rax, %rcx	 # tmp395,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:900: 		matrix->WriteDataTo(7,  2, 5, CELL_WATER);
	.loc 16 900 22 discriminator 2
	leaq	644(%rbp), %rax	 #, tmp396
	movq	928(%rbp), %rdx	 # matrix, tmp397
	movl	$2, 40(%rsp)	 #,
	movl	$5, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp396,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	644(%rbp), %rax	 #, tmp398
	movq	%rax, %rcx	 # tmp398,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:902: 		matrix->WriteDataTo(10, 2, 6, CELL_FIRE );
	.loc 16 902 22 discriminator 2
	leaq	646(%rbp), %rax	 #, tmp399
	movq	928(%rbp), %rdx	 # matrix, tmp400
	movl	$8, 40(%rsp)	 #,
	movl	$6, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp399,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	646(%rbp), %rax	 #, tmp401
	movq	%rax, %rcx	 # tmp401,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:903: 		matrix->WriteDataTo(9,  2, 6, CELL_METAL);
	.loc 16 903 22 discriminator 2
	leaq	648(%rbp), %rax	 #, tmp402
	movq	928(%rbp), %rdx	 # matrix, tmp403
	movl	$16, 40(%rsp)	 #,
	movl	$6, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp402,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	648(%rbp), %rax	 #, tmp404
	movq	%rax, %rcx	 # tmp404,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:904: 		matrix->WriteDataTo(8,  2, 6, CELL_WOOD );
	.loc 16 904 22 discriminator 2
	leaq	650(%rbp), %rax	 #, tmp405
	movq	928(%rbp), %rdx	 # matrix, tmp406
	movl	$4, 40(%rsp)	 #,
	movl	$6, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp405,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	650(%rbp), %rax	 #, tmp407
	movq	%rax, %rcx	 # tmp407,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:905: 		matrix->WriteDataTo(7,  2, 6, CELL_WATER);
	.loc 16 905 22 discriminator 2
	leaq	652(%rbp), %rax	 #, tmp408
	movq	928(%rbp), %rdx	 # matrix, tmp409
	movl	$2, 40(%rsp)	 #,
	movl	$6, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp408,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	652(%rbp), %rax	 #, tmp410
	movq	%rax, %rcx	 # tmp410,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:907: 		matrix->WriteDataTo(10, 2, 7, CELL_FIRE );
	.loc 16 907 22 discriminator 2
	leaq	654(%rbp), %rax	 #, tmp411
	movq	928(%rbp), %rdx	 # matrix, tmp412
	movl	$8, 40(%rsp)	 #,
	movl	$7, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp411,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	654(%rbp), %rax	 #, tmp413
	movq	%rax, %rcx	 # tmp413,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:908: 		matrix->WriteDataTo(9,  2, 7, CELL_METAL);
	.loc 16 908 22 discriminator 2
	leaq	656(%rbp), %rax	 #, tmp414
	movq	928(%rbp), %rdx	 # matrix, tmp415
	movl	$16, 40(%rsp)	 #,
	movl	$7, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp414,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	656(%rbp), %rax	 #, tmp416
	movq	%rax, %rcx	 # tmp416,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:909: 		matrix->WriteDataTo(8,  2, 7, CELL_WOOD );
	.loc 16 909 22 discriminator 2
	leaq	658(%rbp), %rax	 #, tmp417
	movq	928(%rbp), %rdx	 # matrix, tmp418
	movl	$4, 40(%rsp)	 #,
	movl	$7, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp417,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	658(%rbp), %rax	 #, tmp419
	movq	%rax, %rcx	 # tmp419,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:910: 		matrix->WriteDataTo(7,  2, 7, CELL_WATER);
	.loc 16 910 22 discriminator 2
	leaq	660(%rbp), %rax	 #, tmp420
	movq	928(%rbp), %rdx	 # matrix, tmp421
	movl	$2, 40(%rsp)	 #,
	movl	$7, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp420,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	660(%rbp), %rax	 #, tmp422
	movq	%rax, %rcx	 # tmp422,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:912: 		matrix->WriteDataTo(10, 2, 8, CELL_FIRE );
	.loc 16 912 22 discriminator 2
	leaq	662(%rbp), %rax	 #, tmp423
	movq	928(%rbp), %rdx	 # matrix, tmp424
	movl	$8, 40(%rsp)	 #,
	movl	$8, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp423,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	662(%rbp), %rax	 #, tmp425
	movq	%rax, %rcx	 # tmp425,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:913: 		matrix->WriteDataTo(9,  2, 8, CELL_METAL);
	.loc 16 913 22 discriminator 2
	leaq	664(%rbp), %rax	 #, tmp426
	movq	928(%rbp), %rdx	 # matrix, tmp427
	movl	$16, 40(%rsp)	 #,
	movl	$8, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp426,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	664(%rbp), %rax	 #, tmp428
	movq	%rax, %rcx	 # tmp428,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:914: 		matrix->WriteDataTo(8,  2, 8, CELL_WOOD );
	.loc 16 914 22 discriminator 2
	leaq	666(%rbp), %rax	 #, tmp429
	movq	928(%rbp), %rdx	 # matrix, tmp430
	movl	$4, 40(%rsp)	 #,
	movl	$8, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp429,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	666(%rbp), %rax	 #, tmp431
	movq	%rax, %rcx	 # tmp431,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:915: 		matrix->WriteDataTo(7,  2, 8, CELL_WATER);
	.loc 16 915 22 discriminator 2
	leaq	668(%rbp), %rax	 #, tmp432
	movq	928(%rbp), %rdx	 # matrix, tmp433
	movl	$2, 40(%rsp)	 #,
	movl	$8, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp432,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	668(%rbp), %rax	 #, tmp434
	movq	%rax, %rcx	 # tmp434,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:917: 		matrix->WriteDataTo(10, 2, 9, CELL_FIRE );
	.loc 16 917 22 discriminator 2
	leaq	670(%rbp), %rax	 #, tmp435
	movq	928(%rbp), %rdx	 # matrix, tmp436
	movl	$8, 40(%rsp)	 #,
	movl	$9, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp435,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	670(%rbp), %rax	 #, tmp437
	movq	%rax, %rcx	 # tmp437,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:918: 		matrix->WriteDataTo(9,  2, 9, CELL_METAL);
	.loc 16 918 22 discriminator 2
	leaq	672(%rbp), %rax	 #, tmp438
	movq	928(%rbp), %rdx	 # matrix, tmp439
	movl	$16, 40(%rsp)	 #,
	movl	$9, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp438,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	672(%rbp), %rax	 #, tmp440
	movq	%rax, %rcx	 # tmp440,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:919: 		matrix->WriteDataTo(8,  2, 9, CELL_WOOD );
	.loc 16 919 22 discriminator 2
	leaq	674(%rbp), %rax	 #, tmp441
	movq	928(%rbp), %rdx	 # matrix, tmp442
	movl	$4, 40(%rsp)	 #,
	movl	$9, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp441,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	674(%rbp), %rax	 #, tmp443
	movq	%rax, %rcx	 # tmp443,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:920: 		matrix->WriteDataTo(7,  2, 9, CELL_WATER);
	.loc 16 920 22 discriminator 2
	leaq	676(%rbp), %rax	 #, tmp444
	movq	928(%rbp), %rdx	 # matrix, tmp445
	movl	$2, 40(%rsp)	 #,
	movl	$9, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp444,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	676(%rbp), %rax	 #, tmp446
	movq	%rax, %rcx	 # tmp446,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:922: 		matrix->WriteDataTo(10, 2, 10, CELL_FIRE );
	.loc 16 922 22 discriminator 2
	leaq	678(%rbp), %rax	 #, tmp447
	movq	928(%rbp), %rdx	 # matrix, tmp448
	movl	$8, 40(%rsp)	 #,
	movl	$10, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp447,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	678(%rbp), %rax	 #, tmp449
	movq	%rax, %rcx	 # tmp449,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:923: 		matrix->WriteDataTo(9,  2, 10, CELL_METAL);
	.loc 16 923 22 discriminator 2
	leaq	680(%rbp), %rax	 #, tmp450
	movq	928(%rbp), %rdx	 # matrix, tmp451
	movl	$16, 40(%rsp)	 #,
	movl	$10, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp450,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	680(%rbp), %rax	 #, tmp452
	movq	%rax, %rcx	 # tmp452,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:924: 		matrix->WriteDataTo(8,  2, 10, CELL_WOOD );
	.loc 16 924 22 discriminator 2
	leaq	682(%rbp), %rax	 #, tmp453
	movq	928(%rbp), %rdx	 # matrix, tmp454
	movl	$4, 40(%rsp)	 #,
	movl	$10, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp453,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	682(%rbp), %rax	 #, tmp455
	movq	%rax, %rcx	 # tmp455,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:925: 		matrix->WriteDataTo(7,  2, 10, CELL_WATER);
	.loc 16 925 22 discriminator 2
	leaq	684(%rbp), %rax	 #, tmp456
	movq	928(%rbp), %rdx	 # matrix, tmp457
	movl	$2, 40(%rsp)	 #,
	movl	$10, 32(%rsp)	 #,
	movl	$2, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp456,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	684(%rbp), %rax	 #, tmp458
	movq	%rax, %rcx	 # tmp458,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:927: 		matrix->WriteDataTo(10, 7, 5, CELL_FIRE );
	.loc 16 927 22 discriminator 2
	leaq	686(%rbp), %rax	 #, tmp459
	movq	928(%rbp), %rdx	 # matrix, tmp460
	movl	$8, 40(%rsp)	 #,
	movl	$5, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp459,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	686(%rbp), %rax	 #, tmp461
	movq	%rax, %rcx	 # tmp461,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:928: 		matrix->WriteDataTo(9,  7, 5, CELL_METAL);
	.loc 16 928 22 discriminator 2
	leaq	688(%rbp), %rax	 #, tmp462
	movq	928(%rbp), %rdx	 # matrix, tmp463
	movl	$16, 40(%rsp)	 #,
	movl	$5, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp462,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	688(%rbp), %rax	 #, tmp464
	movq	%rax, %rcx	 # tmp464,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:929: 		matrix->WriteDataTo(8,  7, 5, CELL_WOOD );
	.loc 16 929 22 discriminator 2
	leaq	690(%rbp), %rax	 #, tmp465
	movq	928(%rbp), %rdx	 # matrix, tmp466
	movl	$4, 40(%rsp)	 #,
	movl	$5, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp465,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	690(%rbp), %rax	 #, tmp467
	movq	%rax, %rcx	 # tmp467,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:930: 		matrix->WriteDataTo(7,  7, 5, CELL_WATER);
	.loc 16 930 22 discriminator 2
	leaq	692(%rbp), %rax	 #, tmp468
	movq	928(%rbp), %rdx	 # matrix, tmp469
	movl	$2, 40(%rsp)	 #,
	movl	$5, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp468,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	692(%rbp), %rax	 #, tmp470
	movq	%rax, %rcx	 # tmp470,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:932: 		matrix->WriteDataTo(10, 7, 6, CELL_FIRE );
	.loc 16 932 22 discriminator 2
	leaq	694(%rbp), %rax	 #, tmp471
	movq	928(%rbp), %rdx	 # matrix, tmp472
	movl	$8, 40(%rsp)	 #,
	movl	$6, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp471,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	694(%rbp), %rax	 #, tmp473
	movq	%rax, %rcx	 # tmp473,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:933: 		matrix->WriteDataTo(9,  7, 6, CELL_METAL);
	.loc 16 933 22 discriminator 2
	leaq	696(%rbp), %rax	 #, tmp474
	movq	928(%rbp), %rdx	 # matrix, tmp475
	movl	$16, 40(%rsp)	 #,
	movl	$6, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp474,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	696(%rbp), %rax	 #, tmp476
	movq	%rax, %rcx	 # tmp476,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:934: 		matrix->WriteDataTo(8,  7, 6, CELL_WOOD );
	.loc 16 934 22 discriminator 2
	leaq	698(%rbp), %rax	 #, tmp477
	movq	928(%rbp), %rdx	 # matrix, tmp478
	movl	$4, 40(%rsp)	 #,
	movl	$6, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp477,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	698(%rbp), %rax	 #, tmp479
	movq	%rax, %rcx	 # tmp479,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:935: 		matrix->WriteDataTo(7,  7, 6, CELL_WATER);
	.loc 16 935 22 discriminator 2
	leaq	700(%rbp), %rax	 #, tmp480
	movq	928(%rbp), %rdx	 # matrix, tmp481
	movl	$2, 40(%rsp)	 #,
	movl	$6, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp480,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	700(%rbp), %rax	 #, tmp482
	movq	%rax, %rcx	 # tmp482,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:937: 		matrix->WriteDataTo(10, 7, 7, CELL_FIRE );
	.loc 16 937 22 discriminator 2
	leaq	702(%rbp), %rax	 #, tmp483
	movq	928(%rbp), %rdx	 # matrix, tmp484
	movl	$8, 40(%rsp)	 #,
	movl	$7, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp483,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	702(%rbp), %rax	 #, tmp485
	movq	%rax, %rcx	 # tmp485,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:938: 		matrix->WriteDataTo(9,  7, 7, CELL_METAL);
	.loc 16 938 22 discriminator 2
	leaq	704(%rbp), %rax	 #, tmp486
	movq	928(%rbp), %rdx	 # matrix, tmp487
	movl	$16, 40(%rsp)	 #,
	movl	$7, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp486,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	704(%rbp), %rax	 #, tmp488
	movq	%rax, %rcx	 # tmp488,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:939: 		matrix->WriteDataTo(8,  7, 7, CELL_WOOD );
	.loc 16 939 22 discriminator 2
	leaq	706(%rbp), %rax	 #, tmp489
	movq	928(%rbp), %rdx	 # matrix, tmp490
	movl	$4, 40(%rsp)	 #,
	movl	$7, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp489,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	706(%rbp), %rax	 #, tmp491
	movq	%rax, %rcx	 # tmp491,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:940: 		matrix->WriteDataTo(7,  7, 7, CELL_WATER);
	.loc 16 940 22 discriminator 2
	leaq	708(%rbp), %rax	 #, tmp492
	movq	928(%rbp), %rdx	 # matrix, tmp493
	movl	$2, 40(%rsp)	 #,
	movl	$7, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp492,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	708(%rbp), %rax	 #, tmp494
	movq	%rax, %rcx	 # tmp494,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:942: 		matrix->WriteDataTo(10, 7, 8, CELL_FIRE );
	.loc 16 942 22 discriminator 2
	leaq	710(%rbp), %rax	 #, tmp495
	movq	928(%rbp), %rdx	 # matrix, tmp496
	movl	$8, 40(%rsp)	 #,
	movl	$8, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp495,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	710(%rbp), %rax	 #, tmp497
	movq	%rax, %rcx	 # tmp497,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:943: 		matrix->WriteDataTo(9,  7, 8, CELL_METAL);
	.loc 16 943 22 discriminator 2
	leaq	712(%rbp), %rax	 #, tmp498
	movq	928(%rbp), %rdx	 # matrix, tmp499
	movl	$16, 40(%rsp)	 #,
	movl	$8, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp498,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	712(%rbp), %rax	 #, tmp500
	movq	%rax, %rcx	 # tmp500,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:944: 		matrix->WriteDataTo(8,  7, 8, CELL_WOOD );
	.loc 16 944 22 discriminator 2
	leaq	714(%rbp), %rax	 #, tmp501
	movq	928(%rbp), %rdx	 # matrix, tmp502
	movl	$4, 40(%rsp)	 #,
	movl	$8, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp501,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	714(%rbp), %rax	 #, tmp503
	movq	%rax, %rcx	 # tmp503,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:945: 		matrix->WriteDataTo(7,  7, 8, CELL_WATER);
	.loc 16 945 22 discriminator 2
	leaq	716(%rbp), %rax	 #, tmp504
	movq	928(%rbp), %rdx	 # matrix, tmp505
	movl	$2, 40(%rsp)	 #,
	movl	$8, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp504,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	716(%rbp), %rax	 #, tmp506
	movq	%rax, %rcx	 # tmp506,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:947: 		matrix->WriteDataTo(10, 7, 9, CELL_FIRE );
	.loc 16 947 22 discriminator 2
	leaq	718(%rbp), %rax	 #, tmp507
	movq	928(%rbp), %rdx	 # matrix, tmp508
	movl	$8, 40(%rsp)	 #,
	movl	$9, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp507,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	718(%rbp), %rax	 #, tmp509
	movq	%rax, %rcx	 # tmp509,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:948: 		matrix->WriteDataTo(9,  7, 9, CELL_METAL);
	.loc 16 948 22 discriminator 2
	leaq	720(%rbp), %rax	 #, tmp510
	movq	928(%rbp), %rdx	 # matrix, tmp511
	movl	$16, 40(%rsp)	 #,
	movl	$9, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp510,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	720(%rbp), %rax	 #, tmp512
	movq	%rax, %rcx	 # tmp512,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:949: 		matrix->WriteDataTo(8,  7, 9, CELL_WOOD );
	.loc 16 949 22 discriminator 2
	leaq	722(%rbp), %rax	 #, tmp513
	movq	928(%rbp), %rdx	 # matrix, tmp514
	movl	$4, 40(%rsp)	 #,
	movl	$9, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp513,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	722(%rbp), %rax	 #, tmp515
	movq	%rax, %rcx	 # tmp515,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:950: 		matrix->WriteDataTo(7,  7, 9, CELL_WATER);
	.loc 16 950 22 discriminator 2
	leaq	724(%rbp), %rax	 #, tmp516
	movq	928(%rbp), %rdx	 # matrix, tmp517
	movl	$2, 40(%rsp)	 #,
	movl	$9, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp516,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	724(%rbp), %rax	 #, tmp518
	movq	%rax, %rcx	 # tmp518,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:952: 		matrix->WriteDataTo(10, 7, 10, CELL_FIRE );
	.loc 16 952 22 discriminator 2
	leaq	726(%rbp), %rax	 #, tmp519
	movq	928(%rbp), %rdx	 # matrix, tmp520
	movl	$8, 40(%rsp)	 #,
	movl	$10, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$10, %r8d	 #,
	movq	%rax, %rcx	 # tmp519,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	726(%rbp), %rax	 #, tmp521
	movq	%rax, %rcx	 # tmp521,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:953: 		matrix->WriteDataTo(9,  7, 10, CELL_METAL);
	.loc 16 953 22 discriminator 2
	leaq	728(%rbp), %rax	 #, tmp522
	movq	928(%rbp), %rdx	 # matrix, tmp523
	movl	$16, 40(%rsp)	 #,
	movl	$10, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$9, %r8d	 #,
	movq	%rax, %rcx	 # tmp522,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	728(%rbp), %rax	 #, tmp524
	movq	%rax, %rcx	 # tmp524,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:954: 		matrix->WriteDataTo(8,  7, 10, CELL_WOOD );
	.loc 16 954 22 discriminator 2
	leaq	730(%rbp), %rax	 #, tmp525
	movq	928(%rbp), %rdx	 # matrix, tmp526
	movl	$4, 40(%rsp)	 #,
	movl	$10, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$8, %r8d	 #,
	movq	%rax, %rcx	 # tmp525,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	730(%rbp), %rax	 #, tmp527
	movq	%rax, %rcx	 # tmp527,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:955: 		matrix->WriteDataTo(7,  7, 10, CELL_WATER);
	.loc 16 955 22 discriminator 2
	leaq	732(%rbp), %rax	 #, tmp528
	movq	928(%rbp), %rdx	 # matrix, tmp529
	movl	$2, 40(%rsp)	 #,
	movl	$10, 32(%rsp)	 #,
	movl	$7, %r9d	 #,
	movl	$7, %r8d	 #,
	movq	%rax, %rcx	 # tmp528,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
	leaq	732(%rbp), %rax	 #, tmp530
	movq	%rax, %rcx	 # tmp530,
	call	_ZN6MATRIX4cellD1Ev	 #
.LBB188:
 # src\main.cpp:957: 		for(uint32_t j = 1; j<matrix->w; ++j)
	.loc 16 957 16 discriminator 2
	movl	$1, 948(%rbp)	 #, j
 # src\main.cpp:957: 		for(uint32_t j = 1; j<matrix->w; ++j)
	.loc 16 957 3 discriminator 2
	jmp	.L375	 #
.L379:
.LBB189:
.LBB190:
 # src\main.cpp:959: 			for(uint32_t i=1; i<matrix->d; ++i)
	.loc 16 959 17
	movl	$1, 944(%rbp)	 #, i
 # src\main.cpp:959: 			for(uint32_t i=1; i<matrix->d; ++i)
	.loc 16 959 4
	jmp	.L376	 #
.L378:
 # src\main.cpp:961: 				if((j*i)%10==0)
	.loc 16 961 10
	movl	948(%rbp), %eax	 # j, tmp531
	imull	944(%rbp), %eax	 # i, tmp531
	movl	%eax, %ecx	 # tmp531, _50
 # src\main.cpp:961: 				if((j*i)%10==0)
	.loc 16 961 13
	movl	%ecx, %edx	 # _50, tmp532
	movl	$3435973837, %eax	 #, tmp534
	imulq	%rdx, %rax	 # tmp532, tmp533
	shrq	$32, %rax	 #, tmp535
	movl	%eax, %edx	 # tmp535, _51
	shrl	$3, %edx	 #, _51
	movl	%edx, %eax	 # _51, tmp536
	sall	$2, %eax	 #, tmp536
	addl	%edx, %eax	 # _51, tmp536
	addl	%eax, %eax	 # tmp537
	subl	%eax, %ecx	 # tmp536, _50
	movl	%ecx, %edx	 # _50, _51
 # src\main.cpp:961: 				if((j*i)%10==0)
	.loc 16 961 5
	testl	%edx, %edx	 # _51
	jne	.L377	 #,
 # src\main.cpp:963: 					printf("*");
	.loc 16 963 12
	leaq	.LC67(%rip), %rax	 #, tmp538
	movq	%rax, %rcx	 # tmp538,
	call	_Z6printfPKcz	 #
.L377:
 # src\main.cpp:965: 				matrix->WriteDataTo(j, 2, i, (1<<((rand() % 4) + 1)));
	.loc 16 965 24
	movq	928(%rbp), %rbx	 # matrix, matrix.64_52
 # src\main.cpp:965: 				matrix->WriteDataTo(j, 2, i, (1<<((rand() % 4) + 1)));
	.loc 16 965 44
	call	rand	 #
	movl	%eax, %edx	 #, _53
 # src\main.cpp:965: 				matrix->WriteDataTo(j, 2, i, (1<<((rand() % 4) + 1)));
	.loc 16 965 47
	movl	%edx, %eax	 # _53, tmp539
	sarl	$31, %eax	 #, tmp539
	shrl	$30, %eax	 #, tmp540
	addl	%eax, %edx	 # tmp540, tmp541
	andl	$3, %edx	 #, tmp542
	subl	%eax, %edx	 # tmp540, tmp543
	movl	%edx, %eax	 # tmp543, _54
 # src\main.cpp:965: 				matrix->WriteDataTo(j, 2, i, (1<<((rand() % 4) + 1)));
	.loc 16 965 52
	addl	$1, %eax	 #, _55
 # src\main.cpp:965: 				matrix->WriteDataTo(j, 2, i, (1<<((rand() % 4) + 1)));
	.loc 16 965 36
	movl	$1, %edx	 #, tmp544
	movl	%eax, %ecx	 # _55, tmp688
	sall	%cl, %edx	 # tmp688, tmp544
	movl	%edx, %eax	 # tmp544, _56
 # src\main.cpp:965: 				matrix->WriteDataTo(j, 2, i, (1<<((rand() % 4) + 1)));
	.loc 16 965 24
	movzwl	%ax, %edx	 # _57, _58
	leaq	734(%rbp), %rax	 #, tmp545
	movl	948(%rbp), %ecx	 # j, tmp546
	movl	%edx, 40(%rsp)	 # _58,
	movl	944(%rbp), %edx	 # i, tmp547
	movl	%edx, 32(%rsp)	 # tmp547,
	movl	$2, %r9d	 #,
	movl	%ecx, %r8d	 # tmp546,
	movq	%rbx, %rdx	 # matrix.64_52,
	movq	%rax, %rcx	 # tmp545,
	call	_ZN6MATRIX11WriteDataToEjjjt	 #
 # src\main.cpp:965: 				matrix->WriteDataTo(j, 2, i, (1<<((rand() % 4) + 1)));
	.loc 16 965 24 is_stmt 0 discriminator 2
	leaq	734(%rbp), %rax	 #, tmp548
	movq	%rax, %rcx	 # tmp548,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:959: 			for(uint32_t i=1; i<matrix->d; ++i)
	.loc 16 959 4 is_stmt 1 discriminator 2
	addl	$1, 944(%rbp)	 #, i
.L376:
 # src\main.cpp:959: 			for(uint32_t i=1; i<matrix->d; ++i)
	.loc 16 959 32 discriminator 2
	movq	928(%rbp), %rax	 # matrix, tmp549
	movl	40(%rax), %eax	 # matrix_212->d, _59
 # src\main.cpp:959: 			for(uint32_t i=1; i<matrix->d; ++i)
	.loc 16 959 23 discriminator 2
	cmpl	%eax, 944(%rbp)	 # _59, i
	jb	.L378	 #,
.LBE190:
.LBE189:
 # src\main.cpp:957: 		for(uint32_t j = 1; j<matrix->w; ++j)
	.loc 16 957 3 discriminator 2
	addl	$1, 948(%rbp)	 #, j
.L375:
 # src\main.cpp:957: 		for(uint32_t j = 1; j<matrix->w; ++j)
	.loc 16 957 33 discriminator 1
	movq	928(%rbp), %rax	 # matrix, tmp550
	movl	32(%rax), %eax	 # matrix_212->w, _60
 # src\main.cpp:957: 		for(uint32_t j = 1; j<matrix->w; ++j)
	.loc 16 957 24 discriminator 1
	cmpl	%eax, 948(%rbp)	 # _60, j
	jb	.L379	 #,
.LBE188:
 # src\main.cpp:969: 		printf("\ncamera positoned -> at(%f, %f, %f)\n\n", cam.GetPosition().x, cam.GetPosition().y, cam.GetPosition().z);
	.loc 16 969 111
	leaq	736(%rbp), %rax	 #, tmp551
	leaq	16(%rbp), %rdx	 #, tmp552
	movq	%rax, %rcx	 # tmp551,
	call	_ZNK6Camera11GetPositionEv	 #
 # src\main.cpp:969: 		printf("\ncamera positoned -> at(%f, %f, %f)\n\n", cam.GetPosition().x, cam.GetPosition().y, cam.GetPosition().z);
	.loc 16 969 114
	movss	744(%rbp), %xmm0	 # D.214784.z, _61
 # src\main.cpp:969: 		printf("\ncamera positoned -> at(%f, %f, %f)\n\n", cam.GetPosition().x, cam.GetPosition().y, cam.GetPosition().z);
	.loc 16 969 9
	pxor	%xmm7, %xmm7	 # _62
	cvtss2sd	%xmm0, %xmm7	 # _61, _62
 # src\main.cpp:969: 		printf("\ncamera positoned -> at(%f, %f, %f)\n\n", cam.GetPosition().x, cam.GetPosition().y, cam.GetPosition().z);
	.loc 16 969 90
	leaq	748(%rbp), %rax	 #, tmp553
	leaq	16(%rbp), %rdx	 #, tmp554
	movq	%rax, %rcx	 # tmp553,
	call	_ZNK6Camera11GetPositionEv	 #
 # src\main.cpp:969: 		printf("\ncamera positoned -> at(%f, %f, %f)\n\n", cam.GetPosition().x, cam.GetPosition().y, cam.GetPosition().z);
	.loc 16 969 93
	movss	752(%rbp), %xmm0	 # D.214783.y, _63
 # src\main.cpp:969: 		printf("\ncamera positoned -> at(%f, %f, %f)\n\n", cam.GetPosition().x, cam.GetPosition().y, cam.GetPosition().z);
	.loc 16 969 9
	pxor	%xmm6, %xmm6	 # _64
	cvtss2sd	%xmm0, %xmm6	 # _63, _64
 # src\main.cpp:969: 		printf("\ncamera positoned -> at(%f, %f, %f)\n\n", cam.GetPosition().x, cam.GetPosition().y, cam.GetPosition().z);
	.loc 16 969 69
	leaq	760(%rbp), %rax	 #, tmp555
	leaq	16(%rbp), %rdx	 #, tmp556
	movq	%rax, %rcx	 # tmp555,
	call	_ZNK6Camera11GetPositionEv	 #
 # src\main.cpp:969: 		printf("\ncamera positoned -> at(%f, %f, %f)\n\n", cam.GetPosition().x, cam.GetPosition().y, cam.GetPosition().z);
	.loc 16 969 72
	movss	760(%rbp), %xmm0	 # D.214782.x, _65
 # src\main.cpp:969: 		printf("\ncamera positoned -> at(%f, %f, %f)\n\n", cam.GetPosition().x, cam.GetPosition().y, cam.GetPosition().z);
	.loc 16 969 9
	cvtss2sd	%xmm0, %xmm0	 # _65, _66
	movq	%xmm7, %rax	 # _62, tmp557
	movq	%rax, %rdx	 # tmp557, tmp558
	movq	%rdx, %xmm2	 # tmp558, tmp560
	movq	%rax, %rcx	 # tmp559, tmp561
	movq	%xmm6, %rax	 # _64, tmp562
	movq	%rax, %rdx	 # tmp562, tmp563
	movq	%rdx, %xmm1	 # tmp563, tmp565
	movq	%rax, %rdx	 # tmp564, tmp566
	movq	%xmm0, %rax	 # _66, tmp567
	movq	%rax, %r8	 # tmp567, tmp568
	movq	%r8, %xmm0	 # tmp568, tmp570
	movapd	%xmm2, %xmm3	 # tmp560,
	movq	%rcx, %r9	 # tmp561,
	movapd	%xmm1, %xmm2	 # tmp565,
	movq	%rdx, %r8	 # tmp566,
	movapd	%xmm0, %xmm1	 # tmp570,
	movq	%rax, %rdx	 # tmp571,
	leaq	.LC68(%rip), %rax	 #, tmp572
	movq	%rax, %rcx	 # tmp572,
	call	_Z6printfPKcz	 #
 # src\main.cpp:971: 		const std::chrono::duration<float> FrameDuration(1.0f / TARGET_FPS);
	.loc 16 971 38 discriminator 2
	movss	.LC69(%rip), %xmm0	 #, tmp573
	movss	%xmm0, 124(%rbp)	 # tmp573, FrameDuration.__r
 # src\main.cpp:973: 		while(running)
	.loc 16 973 3 discriminator 2
	jmp	.L380	 #
.L404:
.LBB191:
 # src\main.cpp:975: 			auto frameStart = std::chrono::high_resolution_clock::now();
	.loc 16 975 61
	call	_ZNSt6chrono3_V212system_clock3nowEv	 #
	movq	%rax, 112(%rbp)	 # tmp575, frameStart
 # src\main.cpp:977: 			while(PeekMessage(&msg, NULL, 0, 0,PM_REMOVE))
	.loc 16 977 4
	jmp	.L381	 #
.L392:
.LBB192:
.LBB193:
 # src\main.cpp:980: 				for (int i = 0; i <= 0xFF - 1; i++)
	.loc 16 980 14
	movl	$0, 940(%rbp)	 #, i
 # src\main.cpp:980: 				for (int i = 0; i <= 0xFF - 1; i++)
	.loc 16 980 5
	jmp	.L382	 #
.L389:
.LBB194:
 # src\main.cpp:982: 					short   state  =  GetAsyncKeyState(i);
	.loc 16 982 40
	movl	940(%rbp), %eax	 # i, tmp576
	movl	%eax, %ecx	 # tmp576,
	movq	__imp_GetAsyncKeyState(%rip), %rax	 #, tmp577
	call	*%rax	 # tmp577
.LVL38:
	movw	%ax, 874(%rbp)	 # _469, state
 # src\main.cpp:983:     				uint8_t down   = ((state >> 15) & 0x1) * KEY_DOWN;
	.loc 16 983 41
	movzwl	874(%rbp), %eax	 # state, state.65_67
	shrw	$15, %ax	 #, _68
 # src\main.cpp:983:     				uint8_t down   = ((state >> 15) & 0x1) * KEY_DOWN;
	.loc 16 983 17
	movb	%al, 873(%rbp)	 # _68, down
 # src\main.cpp:984:     				uint8_t prev   =  keyfield[i] & KEY_DOWN;
	.loc 16 984 41
	leaq	224(%rbp), %rdx	 #, tmp578
	movl	940(%rbp), %eax	 # i, tmp580
	cltq
	addq	%rdx, %rax	 # tmp578, _69
	movq	%rax, %rcx	 # _69,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
	andl	$1, %eax	 #, tmp581
	movb	%al, 872(%rbp)	 # tmp581, prev
 # src\main.cpp:986:     				keyfield[i] &= ~(KEY_PRESSED | KEY_HELD | KEY_RELEASED);
	.loc 16 986 21
	leaq	224(%rbp), %rdx	 #, tmp582
	movl	940(%rbp), %eax	 # i, tmp584
	cltq
	addq	%rdx, %rax	 # tmp582, _71
	movl	$241, %edx	 #,
	movq	%rax, %rcx	 # _71,
	call	_ZNSt13__atomic_baseIhEaNEh	 #
 # src\main.cpp:988:     				uint8_t pressed   = (~prev &  down) ? KEY_PRESSED  : 0;
	.loc 16 988 31
	movzbl	872(%rbp), %eax	 # prev, _72
 # src\main.cpp:988:     				uint8_t pressed   = (~prev &  down) ? KEY_PRESSED  : 0;
	.loc 16 988 30
	notl	%eax	 # _72
	movl	%eax, %edx	 # _72, _73
 # src\main.cpp:988:     				uint8_t pressed   = (~prev &  down) ? KEY_PRESSED  : 0;
	.loc 16 988 39
	movzbl	873(%rbp), %eax	 # down, _74
 # src\main.cpp:988:     				uint8_t pressed   = (~prev &  down) ? KEY_PRESSED  : 0;
	.loc 16 988 36
	andl	%edx, %eax	 # _73, _75
 # src\main.cpp:988:     				uint8_t pressed   = (~prev &  down) ? KEY_PRESSED  : 0;
	.loc 16 988 17
	testl	%eax, %eax	 # _75
	je	.L383	 #,
 # src\main.cpp:988:     				uint8_t pressed   = (~prev &  down) ? KEY_PRESSED  : 0;
	.loc 16 988 17 is_stmt 0 discriminator 1
	movl	$2, %eax	 #, iftmp.66_166
	jmp	.L384	 #
.L383:
 # src\main.cpp:988:     				uint8_t pressed   = (~prev &  down) ? KEY_PRESSED  : 0;
	.loc 16 988 17 discriminator 2
	movl	$0, %eax	 #, iftmp.66_166
.L384:
 # src\main.cpp:988:     				uint8_t pressed   = (~prev &  down) ? KEY_PRESSED  : 0;
	.loc 16 988 17 discriminator 4
	movb	%al, 871(%rbp)	 # iftmp.66_166, pressed
 # src\main.cpp:989:     				uint8_t held      = ( prev &  down) ? KEY_HELD     : 0;
	.loc 16 989 36 is_stmt 1 discriminator 4
	movzbl	872(%rbp), %eax	 # prev, tmp585
	andb	873(%rbp), %al	 # down, _76
 # src\main.cpp:989:     				uint8_t held      = ( prev &  down) ? KEY_HELD     : 0;
	.loc 16 989 17 discriminator 4
	testb	%al, %al	 # _76
	je	.L385	 #,
 # src\main.cpp:989:     				uint8_t held      = ( prev &  down) ? KEY_HELD     : 0;
	.loc 16 989 17 is_stmt 0 discriminator 1
	movl	$4, %eax	 #, iftmp.67_167
	jmp	.L386	 #
.L385:
 # src\main.cpp:989:     				uint8_t held      = ( prev &  down) ? KEY_HELD     : 0;
	.loc 16 989 17 discriminator 2
	movl	$0, %eax	 #, iftmp.67_167
.L386:
 # src\main.cpp:989:     				uint8_t held      = ( prev &  down) ? KEY_HELD     : 0;
	.loc 16 989 17 discriminator 4
	movb	%al, 870(%rbp)	 # iftmp.67_167, held
 # src\main.cpp:990:     				uint8_t released  = ( prev & ~down) ? KEY_RELEASED : 0;
	.loc 16 990 31 is_stmt 1 discriminator 4
	movzbl	872(%rbp), %eax	 # prev, _77
 # src\main.cpp:990:     				uint8_t released  = ( prev & ~down) ? KEY_RELEASED : 0;
	.loc 16 990 39 discriminator 4
	movzbl	873(%rbp), %edx	 # down, _78
 # src\main.cpp:990:     				uint8_t released  = ( prev & ~down) ? KEY_RELEASED : 0;
	.loc 16 990 38 discriminator 4
	notl	%edx	 # _79
 # src\main.cpp:990:     				uint8_t released  = ( prev & ~down) ? KEY_RELEASED : 0;
	.loc 16 990 36 discriminator 4
	andl	%edx, %eax	 # _79, _80
 # src\main.cpp:990:     				uint8_t released  = ( prev & ~down) ? KEY_RELEASED : 0;
	.loc 16 990 17 discriminator 4
	testl	%eax, %eax	 # _80
	je	.L387	 #,
 # src\main.cpp:990:     				uint8_t released  = ( prev & ~down) ? KEY_RELEASED : 0;
	.loc 16 990 17 is_stmt 0 discriminator 1
	movl	$8, %eax	 #, iftmp.68_168
	jmp	.L388	 #
.L387:
 # src\main.cpp:990:     				uint8_t released  = ( prev & ~down) ? KEY_RELEASED : 0;
	.loc 16 990 17 discriminator 2
	movl	$0, %eax	 #, iftmp.68_168
.L388:
 # src\main.cpp:990:     				uint8_t released  = ( prev & ~down) ? KEY_RELEASED : 0;
	.loc 16 990 17 discriminator 4
	movb	%al, 869(%rbp)	 # iftmp.68_168, released
 # src\main.cpp:992:     				keyfield[i] = (keyfield[i] & ~KEY_DOWN) | down | pressed | held | released;
	.loc 16 992 39 is_stmt 1 discriminator 4
	leaq	224(%rbp), %rdx	 #, tmp586
	movl	940(%rbp), %eax	 # i, tmp588
	cltq
	addq	%rdx, %rax	 # tmp586, _81
	movq	%rax, %rcx	 # _81,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:992:     				keyfield[i] = (keyfield[i] & ~KEY_DOWN) | down | pressed | held | released;
	.loc 16 992 36 discriminator 4
	andl	$-2, %eax	 #, _83
	movl	%eax, %edx	 # _83, _84
 # src\main.cpp:992:     				keyfield[i] = (keyfield[i] & ~KEY_DOWN) | down | pressed | held | released;
	.loc 16 992 49 discriminator 4
	movzbl	873(%rbp), %eax	 # down, down.69_85
	orl	%eax, %edx	 # down.69_85, _86
 # src\main.cpp:992:     				keyfield[i] = (keyfield[i] & ~KEY_DOWN) | down | pressed | held | released;
	.loc 16 992 56 discriminator 4
	movzbl	871(%rbp), %eax	 # pressed, pressed.70_87
	orl	%eax, %edx	 # pressed.70_87, _88
 # src\main.cpp:992:     				keyfield[i] = (keyfield[i] & ~KEY_DOWN) | down | pressed | held | released;
	.loc 16 992 66 discriminator 4
	movzbl	870(%rbp), %eax	 # held, held.71_89
	orl	%eax, %edx	 # held.71_89, _90
 # src\main.cpp:992:     				keyfield[i] = (keyfield[i] & ~KEY_DOWN) | down | pressed | held | released;
	.loc 16 992 73 discriminator 4
	movzbl	869(%rbp), %eax	 # released, released.72_91
	orl	%edx, %eax	 # _90, _92
 # src\main.cpp:992:     				keyfield[i] = (keyfield[i] & ~KEY_DOWN) | down | pressed | held | released;
	.loc 16 992 21 discriminator 4
	movzbl	%al, %eax	 # _93, _94
	leaq	224(%rbp), %rcx	 #, tmp589
	movl	940(%rbp), %edx	 # i, tmp591
	movslq	%edx, %rdx	 # tmp591, tmp590
	addq	%rdx, %rcx	 # tmp590, _95
	movl	%eax, %edx	 # _94,
	call	_ZNSt13__atomic_baseIhEaSEh	 #
.LBE194:
 # src\main.cpp:980: 				for (int i = 0; i <= 0xFF - 1; i++)
	.loc 16 980 5 discriminator 4
	addl	$1, 940(%rbp)	 #, i
.L382:
 # src\main.cpp:980: 				for (int i = 0; i <= 0xFF - 1; i++)
	.loc 16 980 23 discriminator 2
	cmpl	$254, 940(%rbp)	 #, i
	jle	.L389	 #,
.LBE193:
 # src\main.cpp:995: 				if(keyfield[VK_INSERT] & KEY_RELEASED)
	.loc 16 995 30
	leaq	224(%rbp), %rax	 #, tmp592
	addq	$45, %rax	 #, tmp593
	movq	%rax, %rcx	 # tmp593,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:995: 				if(keyfield[VK_INSERT] & KEY_RELEASED)
	.loc 16 995 28
	movzbl	%al, %eax	 # _96, _97
	andl	$8, %eax	 #, _98
	testl	%eax, %eax	 # _98
	setne	%al	 #, retval.73_463
 # src\main.cpp:995: 				if(keyfield[VK_INSERT] & KEY_RELEASED)
	.loc 16 995 5
	testb	%al, %al	 # retval.73_463
	je	.L390	 #,
 # src\main.cpp:997: 					running = false;
	.loc 16 997 14
	leaq	223(%rbp), %rax	 #, tmp594
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp594,
	call	_ZNSt6atomicIbEaSEb	 #
 # src\main.cpp:998: 					printf("Goodbye!\n\n");
	.loc 16 998 12
	leaq	.LC70(%rip), %rax	 #, tmp595
	movq	%rax, %rcx	 # tmp595,
	call	_Z6printfPKcz	 #
 # src\main.cpp:999: 					break;
	.loc 16 999 6
	jmp	.L391	 #
.L390:
 # src\main.cpp:1002: 				::TranslateMessage(&msg);
	.loc 16 1002 23
	leaq	160(%rbp), %rax	 #, tmp596
	movq	%rax, %rcx	 # tmp596,
	movq	__imp_TranslateMessage(%rip), %rax	 #, tmp597
	call	*%rax	 # tmp597
.LVL39:
 # src\main.cpp:1003: 				::DispatchMessage(&msg);
	.loc 16 1003 22
	leaq	160(%rbp), %rax	 #, tmp598
	movq	%rax, %rcx	 # tmp598,
	movq	__imp_DispatchMessageW(%rip), %rax	 #, tmp599
	call	*%rax	 # tmp599
.LVL40:
.L381:
.LBE192:
 # src\main.cpp:977: 			while(PeekMessage(&msg, NULL, 0, 0,PM_REMOVE))
	.loc 16 977 21
	leaq	160(%rbp), %rax	 #, tmp600
	movl	$1, 32(%rsp)	 #,
	movl	$0, %r9d	 #,
	movl	$0, %r8d	 #,
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp600,
	movq	__imp_PeekMessageW(%rip), %rax	 #, tmp601
	call	*%rax	 # tmp601
.LVL41:
	testl	%eax, %eax	 # _99
	setne	%al	 #, retval.74_460
	testb	%al, %al	 # retval.74_460
	jne	.L392	 #,
.L391:
 # src\main.cpp:1006: 			auto frameEnd = std::chrono::high_resolution_clock::now();
	.loc 16 1006 59
	call	_ZNSt6chrono3_V212system_clock3nowEv	 #
	movq	%rax, 104(%rbp)	 # tmp603, frameEnd
 # src\main.cpp:1007:     		float deltaTime = std::chrono::duration<float>(frameEnd - frameStart).count();
	.loc 16 1007 65
	leaq	112(%rbp), %rdx	 #, tmp604
	leaq	104(%rbp), %rax	 #, tmp605
	movq	%rax, %rcx	 # tmp605,
	call	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE	 #
	movq	%rax, 776(%rbp)	 # tmp607, D.215138
 # src\main.cpp:1007:     		float deltaTime = std::chrono::duration<float>(frameEnd - frameStart).count();
	.loc 16 1007 38
	leaq	776(%rbp), %rdx	 #, tmp608
	leaq	772(%rbp), %rax	 #, tmp609
	movq	%rax, %rcx	 # tmp609,
	call	_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IxS1_ILx1ELx1000000000EEvEERKNS0_IT_T0_EE	 #
 # src\main.cpp:1007:     		float deltaTime = std::chrono::duration<float>(frameEnd - frameStart).count();
	.loc 16 1007 82 discriminator 4
	leaq	772(%rbp), %rax	 #, tmp610
	movq	%rax, %rcx	 # tmp610,
	call	_ZNKSt6chrono8durationIfSt5ratioILx1ELx1EEE5countEv	 #
	movd	%xmm0, %eax	 #, tmp611
	movl	%eax, 864(%rbp)	 # tmp611, deltaTime
 # src\main.cpp:1009: 			if(keyfield[0x57] & KEY_HELD) { cam.MoveBack(   0.1f); } // s
	.loc 16 1009 24 discriminator 4
	leaq	224(%rbp), %rax	 #, tmp612
	addq	$87, %rax	 #, tmp613
	movq	%rax, %rcx	 # tmp613,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:1009: 			if(keyfield[0x57] & KEY_HELD) { cam.MoveBack(   0.1f); } // s
	.loc 16 1009 22 discriminator 4
	movzbl	%al, %eax	 # _100, _101
	andl	$4, %eax	 #, _102
	testl	%eax, %eax	 # _102
	setne	%al	 #, retval.75_495
 # src\main.cpp:1009: 			if(keyfield[0x57] & KEY_HELD) { cam.MoveBack(   0.1f); } // s
	.loc 16 1009 4 discriminator 4
	testb	%al, %al	 # retval.75_495
	je	.L393	 #,
 # src\main.cpp:1009: 			if(keyfield[0x57] & KEY_HELD) { cam.MoveBack(   0.1f); } // s
	.loc 16 1009 48 discriminator 1
	leaq	16(%rbp), %rax	 #, tmp614
	movss	.LC21(%rip), %xmm1	 #,
	movq	%rax, %rcx	 # tmp614,
	call	_ZN6Camera8MoveBackEf	 #
.L393:
 # src\main.cpp:1010: 			if(keyfield[0x53] & KEY_HELD) { cam.MoveForward(0.1f); } // w
	.loc 16 1010 24
	leaq	224(%rbp), %rax	 #, tmp615
	addq	$83, %rax	 #, tmp616
	movq	%rax, %rcx	 # tmp616,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:1010: 			if(keyfield[0x53] & KEY_HELD) { cam.MoveForward(0.1f); } // w
	.loc 16 1010 22
	movzbl	%al, %eax	 # _103, _104
	andl	$4, %eax	 #, _105
	testl	%eax, %eax	 # _105
	setne	%al	 #, retval.76_498
 # src\main.cpp:1010: 			if(keyfield[0x53] & KEY_HELD) { cam.MoveForward(0.1f); } // w
	.loc 16 1010 4
	testb	%al, %al	 # retval.76_498
	je	.L394	 #,
 # src\main.cpp:1010: 			if(keyfield[0x53] & KEY_HELD) { cam.MoveForward(0.1f); } // w
	.loc 16 1010 51 discriminator 1
	leaq	16(%rbp), %rax	 #, tmp617
	movss	.LC21(%rip), %xmm1	 #,
	movq	%rax, %rcx	 # tmp617,
	call	_ZN6Camera11MoveForwardEf	 #
.L394:
 # src\main.cpp:1011: 			if(keyfield[0x41] & KEY_HELD) { cam.MoveLeft(   0.1f); } // a
	.loc 16 1011 24
	leaq	224(%rbp), %rax	 #, tmp618
	addq	$65, %rax	 #, tmp619
	movq	%rax, %rcx	 # tmp619,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:1011: 			if(keyfield[0x41] & KEY_HELD) { cam.MoveLeft(   0.1f); } // a
	.loc 16 1011 22
	movzbl	%al, %eax	 # _106, _107
	andl	$4, %eax	 #, _108
	testl	%eax, %eax	 # _108
	setne	%al	 #, retval.77_501
 # src\main.cpp:1011: 			if(keyfield[0x41] & KEY_HELD) { cam.MoveLeft(   0.1f); } // a
	.loc 16 1011 4
	testb	%al, %al	 # retval.77_501
	je	.L395	 #,
 # src\main.cpp:1011: 			if(keyfield[0x41] & KEY_HELD) { cam.MoveLeft(   0.1f); } // a
	.loc 16 1011 48 discriminator 1
	leaq	16(%rbp), %rax	 #, tmp620
	movss	.LC21(%rip), %xmm1	 #,
	movq	%rax, %rcx	 # tmp620,
	call	_ZN6Camera8MoveLeftEf	 #
.L395:
 # src\main.cpp:1012: 			if(keyfield[0x44] & KEY_HELD) { cam.MoveRight(  0.1f); } // d
	.loc 16 1012 24
	leaq	224(%rbp), %rax	 #, tmp621
	addq	$68, %rax	 #, tmp622
	movq	%rax, %rcx	 # tmp622,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:1012: 			if(keyfield[0x44] & KEY_HELD) { cam.MoveRight(  0.1f); } // d
	.loc 16 1012 22
	movzbl	%al, %eax	 # _109, _110
	andl	$4, %eax	 #, _111
	testl	%eax, %eax	 # _111
	setne	%al	 #, retval.78_504
 # src\main.cpp:1012: 			if(keyfield[0x44] & KEY_HELD) { cam.MoveRight(  0.1f); } // d
	.loc 16 1012 4
	testb	%al, %al	 # retval.78_504
	je	.L396	 #,
 # src\main.cpp:1012: 			if(keyfield[0x44] & KEY_HELD) { cam.MoveRight(  0.1f); } // d
	.loc 16 1012 49 discriminator 1
	leaq	16(%rbp), %rax	 #, tmp623
	movss	.LC21(%rip), %xmm1	 #,
	movq	%rax, %rcx	 # tmp623,
	call	_ZN6Camera9MoveRightEf	 #
.L396:
 # src\main.cpp:1013: 			if(keyfield[0x20] & KEY_HELD) { cam.MoveUp(     0.1f); } // space
	.loc 16 1013 24
	leaq	224(%rbp), %rax	 #, tmp624
	addq	$32, %rax	 #, tmp625
	movq	%rax, %rcx	 # tmp625,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:1013: 			if(keyfield[0x20] & KEY_HELD) { cam.MoveUp(     0.1f); } // space
	.loc 16 1013 22
	movzbl	%al, %eax	 # _112, _113
	andl	$4, %eax	 #, _114
	testl	%eax, %eax	 # _114
	setne	%al	 #, retval.79_507
 # src\main.cpp:1013: 			if(keyfield[0x20] & KEY_HELD) { cam.MoveUp(     0.1f); } // space
	.loc 16 1013 4
	testb	%al, %al	 # retval.79_507
	je	.L397	 #,
 # src\main.cpp:1013: 			if(keyfield[0x20] & KEY_HELD) { cam.MoveUp(     0.1f); } // space
	.loc 16 1013 46 discriminator 1
	leaq	16(%rbp), %rax	 #, tmp626
	movss	.LC21(%rip), %xmm1	 #,
	movq	%rax, %rcx	 # tmp626,
	call	_ZN6Camera6MoveUpEf	 #
.L397:
 # src\main.cpp:1014: 			if(keyfield[0x10] & KEY_HELD) { cam.MoveDown(   0.1f); } // shift
	.loc 16 1014 24
	leaq	224(%rbp), %rax	 #, tmp627
	addq	$16, %rax	 #, tmp628
	movq	%rax, %rcx	 # tmp628,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:1014: 			if(keyfield[0x10] & KEY_HELD) { cam.MoveDown(   0.1f); } // shift
	.loc 16 1014 22
	movzbl	%al, %eax	 # _115, _116
	andl	$4, %eax	 #, _117
	testl	%eax, %eax	 # _117
	setne	%al	 #, retval.80_510
 # src\main.cpp:1014: 			if(keyfield[0x10] & KEY_HELD) { cam.MoveDown(   0.1f); } // shift
	.loc 16 1014 4
	testb	%al, %al	 # retval.80_510
	je	.L398	 #,
 # src\main.cpp:1014: 			if(keyfield[0x10] & KEY_HELD) { cam.MoveDown(   0.1f); } // shift
	.loc 16 1014 48 discriminator 1
	leaq	16(%rbp), %rax	 #, tmp629
	movss	.LC21(%rip), %xmm1	 #,
	movq	%rax, %rcx	 # tmp629,
	call	_ZN6Camera8MoveDownEf	 #
.L398:
 # src\main.cpp:1018: 			if(keyfield[VK_UP] & KEY_HELD)   { cam.Rotate(0.0f, RotationState);  }
	.loc 16 1018 25
	leaq	224(%rbp), %rax	 #, tmp630
	addq	$38, %rax	 #, tmp631
	movq	%rax, %rcx	 # tmp631,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:1018: 			if(keyfield[VK_UP] & KEY_HELD)   { cam.Rotate(0.0f, RotationState);  }
	.loc 16 1018 23
	movzbl	%al, %eax	 # _118, _119
	andl	$4, %eax	 #, _120
	testl	%eax, %eax	 # _120
	setne	%al	 #, retval.81_513
 # src\main.cpp:1018: 			if(keyfield[VK_UP] & KEY_HELD)   { cam.Rotate(0.0f, RotationState);  }
	.loc 16 1018 4
	testb	%al, %al	 # retval.81_513
	je	.L399	 #,
 # src\main.cpp:1018: 			if(keyfield[VK_UP] & KEY_HELD)   { cam.Rotate(0.0f, RotationState);  }
	.loc 16 1018 49 discriminator 1
	movss	876(%rbp), %xmm0	 # RotationState, tmp632
	leaq	16(%rbp), %rax	 #, tmp633
	movaps	%xmm0, %xmm2	 # tmp632,
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # tmp633,
	call	_ZN6Camera6RotateEff	 #
.L399:
 # src\main.cpp:1019: 			if(keyfield[VK_DOWN] & KEY_HELD) { cam.Rotate(0.0f, -RotationState); }
	.loc 16 1019 27
	leaq	224(%rbp), %rax	 #, tmp634
	addq	$40, %rax	 #, tmp635
	movq	%rax, %rcx	 # tmp635,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:1019: 			if(keyfield[VK_DOWN] & KEY_HELD) { cam.Rotate(0.0f, -RotationState); }
	.loc 16 1019 25
	movzbl	%al, %eax	 # _121, _122
	andl	$4, %eax	 #, _123
	testl	%eax, %eax	 # _123
	setne	%al	 #, retval.82_516
 # src\main.cpp:1019: 			if(keyfield[VK_DOWN] & KEY_HELD) { cam.Rotate(0.0f, -RotationState); }
	.loc 16 1019 4
	testb	%al, %al	 # retval.82_516
	je	.L400	 #,
 # src\main.cpp:1019: 			if(keyfield[VK_DOWN] & KEY_HELD) { cam.Rotate(0.0f, -RotationState); }
	.loc 16 1019 49 discriminator 1
	movss	876(%rbp), %xmm0	 # RotationState, tmp636
	movss	.LC71(%rip), %xmm1	 #, tmp637
	xorps	%xmm1, %xmm0	 # tmp637, _124
	leaq	16(%rbp), %rax	 #, tmp638
	movaps	%xmm0, %xmm2	 # _124,
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # tmp638,
	call	_ZN6Camera6RotateEff	 #
.L400:
 # src\main.cpp:1020: 			if(keyfield[VK_RIGHT] & KEY_HELD){ cam.Rotate(RotationState, 0.0f);  }
	.loc 16 1020 28
	leaq	224(%rbp), %rax	 #, tmp639
	addq	$39, %rax	 #, tmp640
	movq	%rax, %rcx	 # tmp640,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:1020: 			if(keyfield[VK_RIGHT] & KEY_HELD){ cam.Rotate(RotationState, 0.0f);  }
	.loc 16 1020 26
	movzbl	%al, %eax	 # _125, _126
	andl	$4, %eax	 #, _127
	testl	%eax, %eax	 # _127
	setne	%al	 #, retval.83_519
 # src\main.cpp:1020: 			if(keyfield[VK_RIGHT] & KEY_HELD){ cam.Rotate(RotationState, 0.0f);  }
	.loc 16 1020 4
	testb	%al, %al	 # retval.83_519
	je	.L401	 #,
 # src\main.cpp:1020: 			if(keyfield[VK_RIGHT] & KEY_HELD){ cam.Rotate(RotationState, 0.0f);  }
	.loc 16 1020 49 discriminator 1
	movss	876(%rbp), %xmm0	 # RotationState, tmp641
	leaq	16(%rbp), %rax	 #, tmp642
	pxor	%xmm2, %xmm2	 #
	movaps	%xmm0, %xmm1	 # tmp641,
	movq	%rax, %rcx	 # tmp642,
	call	_ZN6Camera6RotateEff	 #
.L401:
 # src\main.cpp:1021: 			if(keyfield[VK_LEFT] & KEY_HELD) { cam.Rotate(-RotationState, 0.0f); }
	.loc 16 1021 27
	leaq	224(%rbp), %rax	 #, tmp643
	addq	$37, %rax	 #, tmp644
	movq	%rax, %rcx	 # tmp644,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:1021: 			if(keyfield[VK_LEFT] & KEY_HELD) { cam.Rotate(-RotationState, 0.0f); }
	.loc 16 1021 25
	movzbl	%al, %eax	 # _128, _129
	andl	$4, %eax	 #, _130
	testl	%eax, %eax	 # _130
	setne	%al	 #, retval.84_522
 # src\main.cpp:1021: 			if(keyfield[VK_LEFT] & KEY_HELD) { cam.Rotate(-RotationState, 0.0f); }
	.loc 16 1021 4
	testb	%al, %al	 # retval.84_522
	je	.L402	 #,
 # src\main.cpp:1021: 			if(keyfield[VK_LEFT] & KEY_HELD) { cam.Rotate(-RotationState, 0.0f); }
	.loc 16 1021 49 discriminator 1
	movss	876(%rbp), %xmm0	 # RotationState, tmp645
	movss	.LC71(%rip), %xmm1	 #, tmp646
	xorps	%xmm1, %xmm0	 # tmp646, _131
	leaq	16(%rbp), %rax	 #, tmp647
	pxor	%xmm2, %xmm2	 #
	movaps	%xmm0, %xmm1	 # _131,
	movq	%rax, %rcx	 # tmp647,
	call	_ZN6Camera6RotateEff	 #
.L402:
 # src\main.cpp:1023: 			if(keyfield[VK_ESCAPE] & KEY_PRESSED) // camera reset button
	.loc 16 1023 29
	leaq	224(%rbp), %rax	 #, tmp648
	addq	$27, %rax	 #, tmp649
	movq	%rax, %rcx	 # tmp649,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
 # src\main.cpp:1023: 			if(keyfield[VK_ESCAPE] & KEY_PRESSED) // camera reset button
	.loc 16 1023 27
	movzbl	%al, %eax	 # _132, _133
	andl	$2, %eax	 #, _134
	testl	%eax, %eax	 # _134
	setne	%al	 #, retval.85_525
 # src\main.cpp:1023: 			if(keyfield[VK_ESCAPE] & KEY_PRESSED) // camera reset button
	.loc 16 1023 4
	testb	%al, %al	 # retval.85_525
	je	.L403	 #,
 # src\main.cpp:1025: 				cam.SetFOV(90.0f);
	.loc 16 1025 15
	leaq	16(%rbp), %rax	 #, tmp650
	movss	.LC57(%rip), %xmm1	 #,
	movq	%rax, %rcx	 # tmp650,
	call	_ZN6Camera6SetFOVEf	 #
 # src\main.cpp:1026: 				cam.SetPosition({10.0f, 2.5f, 10.0f});
	.loc 16 1026 20
	leaq	788(%rbp), %rax	 #, tmp651
	movss	.LC65(%rip), %xmm3	 #,
	movss	.LC72(%rip), %xmm2	 #,
	movss	.LC65(%rip), %xmm1	 #,
	movq	%rax, %rcx	 # tmp651,
	call	_ZN5Vec3DC1Efff	 #
	movq	788(%rbp), %rax	 # D.215267, tmp652
	movq	%rax, -80(%rbp)	 # tmp652,
	movl	796(%rbp), %eax	 # D.215267, tmp653
	movl	%eax, -72(%rbp)	 # tmp653,
	leaq	-80(%rbp), %rdx	 #, tmp654
	leaq	16(%rbp), %rax	 #, tmp655
	movq	%rax, %rcx	 # tmp655,
	call	_ZN6Camera11SetPositionE5Vec3D	 #
 # src\main.cpp:1027: 				cam.Rotate(0.0f, -10.0f);
	.loc 16 1027 15 discriminator 2
	leaq	16(%rbp), %rax	 #, tmp656
	movss	.LC66(%rip), %xmm2	 #,
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # tmp656,
	call	_ZN6Camera6RotateEff	 #
.L403:
 # src\main.cpp:1032:         	std::this_thread::sleep_for(std::chrono::milliseconds(1000 / TARGET_FPS));
	.loc 16 1032 69
	movl	$16, 812(%rbp)	 #, D.215277
 # src\main.cpp:1032:         	std::this_thread::sleep_for(std::chrono::milliseconds(1000 / TARGET_FPS));
	.loc 16 1032 51
	leaq	812(%rbp), %rdx	 #, tmp657
	leaq	800(%rbp), %rax	 #, tmp658
	movq	%rax, %rcx	 # tmp658,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_	 #
 # src\main.cpp:1032:         	std::this_thread::sleep_for(std::chrono::milliseconds(1000 / TARGET_FPS));
	.loc 16 1032 37
	leaq	800(%rbp), %rax	 #, tmp659
	movq	%rax, %rcx	 # tmp659,
	call	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE	 #
.L380:
.LBE191:
 # src\main.cpp:973: 		while(running)
	.loc 16 973 9
	leaq	223(%rbp), %rax	 #, tmp660
	movq	%rax, %rcx	 # tmp660,
	call	_ZNKSt6atomicIbEcvbEv	 #
	testb	%al, %al	 # retval.86_427
	jne	.L404	 #,
 # src\main.cpp:1035: 		running = false;
	.loc 16 1035 11
	leaq	223(%rbp), %rax	 #, tmp661
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp661,
	call	_ZNSt6atomicIbEaSEb	 #
 # src\main.cpp:1037: 		std::this_thread::sleep_for(std::chrono::milliseconds(1000));
	.loc 16 1037 57
	movl	$1000, 824(%rbp)	 #, D.215279
 # src\main.cpp:1037: 		std::this_thread::sleep_for(std::chrono::milliseconds(1000));
	.loc 16 1037 44
	leaq	824(%rbp), %rdx	 #, tmp662
	leaq	816(%rbp), %rax	 #, tmp663
	movq	%rax, %rcx	 # tmp663,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_	 #
 # src\main.cpp:1037: 		std::this_thread::sleep_for(std::chrono::milliseconds(1000));
	.loc 16 1037 30
	leaq	816(%rbp), %rax	 #, tmp664
	movq	%rax, %rcx	 # tmp664,
	call	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE	 #
.LBB195:
 # src\main.cpp:1039: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 16 1039 16 discriminator 2
	movw	$0, 938(%rbp)	 #, i
 # src\main.cpp:1039: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 16 1039 3 discriminator 2
	jmp	.L405	 #
.L407:
 # src\main.cpp:1041: 			if(ChunkThreads[i].joinable())
	.loc 16 1041 21
	movzwl	938(%rbp), %edx	 # i, _135
	leaq	152(%rbp), %rax	 #, tmp665
	movq	%rax, %rcx	 # tmp665,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
 # src\main.cpp:1041: 			if(ChunkThreads[i].joinable())
	.loc 16 1041 31
	movq	%rax, %rcx	 # _136,
	call	_ZNKSt6thread8joinableEv	 #
 # src\main.cpp:1041: 			if(ChunkThreads[i].joinable())
	.loc 16 1041 4
	testb	%al, %al	 # retval.87_448
	je	.L406	 #,
 # src\main.cpp:1043: 				printf("Thread[%d] -> closing\n", ChunkThreads[i].get_id());
	.loc 16 1043 53
	movzwl	938(%rbp), %edx	 # i, _137
	leaq	152(%rbp), %rax	 #, tmp666
	movq	%rax, %rcx	 # tmp666,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
 # src\main.cpp:1043: 				printf("Thread[%d] -> closing\n", ChunkThreads[i].get_id());
	.loc 16 1043 11
	movq	%rax, %rcx	 # _138,
	call	_ZNKSt6thread6get_idEv	 #
	movq	%rax, %rdx	 # D.237496,
	leaq	.LC73(%rip), %rax	 #, tmp667
	movq	%rax, %rcx	 # tmp667,
	call	_Z6printfPKcz	 #
 # src\main.cpp:1044: 				ChunkThreads[i].join();
	.loc 16 1044 19
	movzwl	938(%rbp), %edx	 # i, _139
	leaq	152(%rbp), %rax	 #, tmp668
	movq	%rax, %rcx	 # tmp668,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
 # src\main.cpp:1044: 				ChunkThreads[i].join();
	.loc 16 1044 25
	movq	%rax, %rcx	 # _140,
	call	_ZNSt6thread4joinEv	 #
.LEHE2:
.L406:
 # src\main.cpp:1039: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 16 1039 3 discriminator 2
	addw	$1, 938(%rbp)	 #, i
.L405:
 # src\main.cpp:1039: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 16 1039 21 discriminator 1
	movzwl	938(%rbp), %ebx	 # i, _141
 # src\main.cpp:1039: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 16 1039 57 discriminator 1
	call	_ZNSt6thread20hardware_concurrencyEv	 #
 # src\main.cpp:1039: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 16 1039 60 discriminator 1
	subl	$1, %eax	 #, _143
 # src\main.cpp:1039: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 16 1039 22 discriminator 1
	cmpl	%ebx, %eax	 # _141, _143
	setnb	%al	 #, retval.88_436
	testb	%al, %al	 # retval.88_436
	jne	.L407	 #,
.LBE195:
 # src\main.cpp:1047: 	}
	.loc 16 1047 2
	leaq	-48(%rbp), %rax	 #, tmp669
	movq	%rax, %rcx	 # tmp669,
	call	_ZNSt7barrierIZ7WinMainEUlvE_ED1Ev	 #
	leaq	152(%rbp), %rax	 #, tmp670
	movq	%rax, %rcx	 # tmp670,
	call	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev	 #
.LBE177:
.LBE176:
 # src\main.cpp:1054: 	matrix->DestroyMatrix();
	.loc 16 1054 23
	movq	928(%rbp), %rax	 # matrix, tmp673
	movq	%rax, %rcx	 # tmp673,
	call	_ZN6MATRIX13DestroyMatrixEv	 #
 # src\main.cpp:1055: 	return EXIT_SUCCESS;
	.loc 16 1055 9
	movl	$0, %eax	 #, _169
	jmp	.L415	 #
.L350:
.LBB197:
 # src\main.cpp:1050: 		MessageBoxW(nullptr, L"WINDOW HANDLE IS EMPTY", L"ERROR", MB_ICONERROR | MB_OK);
	.loc 16 1050 14
	movl	$16, %r9d	 #,
	leaq	.LC74(%rip), %r8	 #,
	leaq	.LC75(%rip), %rax	 #, tmp671
	movq	%rax, %rdx	 # tmp671,
	movl	$0, %ecx	 #,
	movq	__imp_MessageBoxW(%rip), %rax	 #, tmp672
.LEHB3:
	call	*%rax	 # tmp672
.LVL42:
 # src\main.cpp:1051: 		return msg.wParam;
	.loc 16 1051 14
	movq	176(%rbp), %rax	 # msg.wParam, _144
	jmp	.L415	 #
.L414:
.LBB196:
 # src\main.cpp:1047: 	}
	.loc 16 1047 2
	movq	%rax, %rbx	 #, tmp677
	leaq	-48(%rbp), %rax	 #, tmp675
	movq	%rax, %rcx	 # tmp675,
	call	_ZNSt7barrierIZ7WinMainEUlvE_ED1Ev	 #
	jmp	.L412	 #
.L413:
	movq	%rax, %rbx	 #, tmp676
.L412:
	leaq	152(%rbp), %rax	 #, tmp680
	movq	%rax, %rcx	 # tmp680,
	call	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev	 #
	movq	%rbx, %rax	 # tmp676, D.239296
	movq	%rax, %rcx	 # D.239296,
	call	_Unwind_Resume	 #
.LEHE3:
.L415:
.LBE196:
.LBE197:
 # src\main.cpp:1056: }
	.loc 16 1056 1
	movups	976(%rbp), %xmm6	 #,
	movups	992(%rbp), %xmm7	 #,
	addq	$1144, %rsp	 #,
.LCFI456:
	popq	%rbx	 #
.LCFI457:
	popq	%rsi	 #
.LCFI458:
	popq	%rdi	 #
.LCFI459:
	popq	%rbp	 #
.LCFI460:
	ret	
.LFE10946:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA10946:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE10946-.LLSDACSB10946
.LLSDACSB10946:
	.uleb128 .LEHB0-.LFB10946
	.uleb128 .LEHE0-.LEHB0
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB1-.LFB10946
	.uleb128 .LEHE1-.LEHB1
	.uleb128 .L413-.LFB10946
	.uleb128 0
	.uleb128 .LEHB2-.LFB10946
	.uleb128 .LEHE2-.LEHB2
	.uleb128 .L414-.LFB10946
	.uleb128 0
	.uleb128 .LEHB3-.LFB10946
	.uleb128 .LEHE3-.LEHB3
	.uleb128 0
	.uleb128 0
.LLSDACSE10946:
	.text
	.seh_endproc
	.section	.text$_ZNSt10lock_guardISt5mutexEC1ERS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10lock_guardISt5mutexEC1ERS0_
	.def	_ZNSt10lock_guardISt5mutexEC1ERS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10lock_guardISt5mutexEC1ERS0_
_ZNSt10lock_guardISt5mutexEC1ERS0_:
.LFB11361:
	.loc 9 228 16
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI461:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI462:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __m, __m
.LBB198:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:228:       explicit lock_guard(mutex_type& __m) : _M_device(__m)
	.loc 9 228 46
	movq	16(%rbp), %rax	 # this, tmp83
	movq	24(%rbp), %rdx	 # __m, tmp84
	movq	%rdx, (%rax)	 # tmp84, this_3(D)->_M_device
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:229:       { _M_device.lock(); }
	.loc 9 229 9
	movq	16(%rbp), %rax	 # this, tmp85
	movq	(%rax), %rax	 # this_3(D)->_M_device, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:229:       { _M_device.lock(); }
	.loc 9 229 23
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5mutex4lockEv	 #
.LBE198:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:229:       { _M_device.lock(); }
	.loc 9 229 27
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI463:
	ret	
.LFE11361:
	.seh_endproc
	.section	.text$_ZNSt10lock_guardISt5mutexED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10lock_guardISt5mutexED1Ev
	.def	_ZNSt10lock_guardISt5mutexED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10lock_guardISt5mutexED1Ev
_ZNSt10lock_guardISt5mutexED1Ev:
.LFB11364:
	.loc 9 234 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI464:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI465:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB199:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:235:       { _M_device.unlock(); }
	.loc 9 235 9
	movq	16(%rbp), %rax	 # this, tmp83
	movq	(%rax), %rax	 # this_3(D)->_M_device, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:235:       { _M_device.unlock(); }
	.loc 9 235 25
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5mutex6unlockEv	 #
.LBE199:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:235:       { _M_device.unlock(); }
	.loc 9 235 29
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI466:
	ret	
.LFE11364:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA11364:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE11364-.LLSDACSB11364
.LLSDACSB11364:
.LLSDACSE11364:
	.section	.text$_ZNSt10lock_guardISt5mutexED1Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev
	.def	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev
_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev:
.LFB11370:
	.loc 10 378 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI467:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI468:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:382: 	}
	.loc 10 382 2
	nop	
	popq	%rbp	 #
.LCFI469:
	ret	
.LFE11370:
	.seh_endproc
	.section	.text$_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb:
.LFB11371:
	.loc 10 305 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI470:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI471:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __all, tmp89
	movl	%r8d, %edx	 # __bare, tmp91
	movb	%al, 24(%rbp)	 # tmp90, __all
	movl	%edx, %eax	 # tmp91, tmp92
	movb	%al, 32(%rbp)	 # tmp92, __bare
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:307: 	  if (_M_laundered())
	.loc 10 307 20
	movq	16(%rbp), %rax	 # this, tmp93
	movq	%rax, %rcx	 # tmp93,
	call	_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:307: 	  if (_M_laundered())
	.loc 10 307 4
	testb	%al, %al	 # retval.148_12
	je	.L420	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:309: 	      __atomic_fetch_add(_M_addr, 1, __ATOMIC_SEQ_CST);
	.loc 10 309 27
	movq	16(%rbp), %rax	 # this, tmp94
	movq	8(%rax), %rax	 # this_10(D)->_M_addr, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:309: 	      __atomic_fetch_add(_M_addr, 1, __ATOMIC_SEQ_CST);
	.loc 10 309 26
	lock addq	$1, (%rax)	 #,,* _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:310: 	      __all = true;
	.loc 10 310 14
	movb	$1, 24(%rbp)	 #, __all
.L420:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:312: 	  _M_w._M_notify(_M_addr, __all, __bare);
	.loc 10 312 4
	movq	16(%rbp), %rax	 # this, tmp95
	movq	(%rax), %rax	 # this_10(D)->_M_w, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:312: 	  _M_w._M_notify(_M_addr, __all, __bare);
	.loc 10 312 18
	movq	%rax, %r10	 # _2, _3
	movzbl	32(%rbp), %ecx	 # __bare, _4
	movzbl	24(%rbp), %edx	 # __all, _5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:312: 	  _M_w._M_notify(_M_addr, __all, __bare);
	.loc 10 312 19
	movq	16(%rbp), %rax	 # this, tmp96
	movq	8(%rax), %rax	 # this_10(D)->_M_addr, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:312: 	  _M_w._M_notify(_M_addr, __all, __bare);
	.loc 10 312 18
	movl	%ecx, %r9d	 # _4,
	movl	%edx, %r8d	 # _5,
	movq	%rax, %rdx	 # _6,
	movq	%r10, %rcx	 # _3,
	call	_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:313: 	}
	.loc 10 313 2
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI472:
	ret	
.LFE11371:
	.seh_endproc
	.section	.text$_ZNSt13__atomic_baseIbEaSEb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13__atomic_baseIbEaSEb
	.def	_ZNSt13__atomic_baseIbEaSEb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13__atomic_baseIbEaSEb
_ZNSt13__atomic_baseIbEaSEb:
.LFB11374:
	.loc 11 354 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI473:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI474:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __i, tmp93
	movb	%al, 24(%rbp)	 # tmp94, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:356: 	store(__i);
	.loc 11 356 7
	movzbl	24(%rbp), %eax	 # __i, _1
	movq	16(%rbp), %rdx	 # this, tmp95
	movq	%rdx, -8(%rbp)	 # tmp95, this
	movb	%al, -9(%rbp)	 # _1, __i
	andb	$1, -9(%rbp)	 #, __i
	movl	$5, -16(%rbp)	 #, __m
.LBB200:
.LBB201:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:459: 	  = __m & __memory_order_mask;
	.loc 11 459 10
	movl	-16(%rbp), %eax	 # __m, tmp96
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp96,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, -20(%rbp)	 # tmp97, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:460: 	__glibcxx_assert(__b != memory_order_acquire);
	.loc 11 460 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _10
	je	.L422	 #,
	cmpl	$2, -20(%rbp)	 #, __b
	jne	.L422	 #,
	movl	$1, %eax	 #, iftmp.189_11
	jmp	.L423	 #
.L422:
	movl	$0, %eax	 #, iftmp.189_11
.L423:
	testb	%al, %al	 # iftmp.189_11
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:461: 	__glibcxx_assert(__b != memory_order_acq_rel);
	.loc 11 461 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _15
	je	.L425	 #,
	cmpl	$4, -20(%rbp)	 #, __b
	jne	.L425	 #,
	movl	$1, %eax	 #, iftmp.191_16
	jmp	.L426	 #
.L425:
	movl	$0, %eax	 #, iftmp.191_16
.L426:
	testb	%al, %al	 # iftmp.191_16
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:462: 	__glibcxx_assert(__b != memory_order_consume);
	.loc 11 462 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _20
	je	.L428	 #,
	cmpl	$1, -20(%rbp)	 #, __b
	jne	.L428	 #,
	movl	$1, %eax	 #, iftmp.193_21
	jmp	.L429	 #
.L428:
	movl	$0, %eax	 #, iftmp.193_21
.L429:
	testb	%al, %al	 # iftmp.193_21
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 11 464 18
	movzbl	-9(%rbp), %edx	 # __i, _25
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 11 464 19
	movq	-8(%rbp), %rax	 # this, _26
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 11 464 18
	xchgb	(%rax), %dl	 #,* _26, tmp99
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:465:       }
	.loc 11 465 7
	nop	
.LBE201:
.LBE200:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:357: 	return __i;
	.loc 11 357 9
	movzbl	24(%rbp), %eax	 # __i, _5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:358:       }
	.loc 11 358 7
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI475:
	ret	
.LFE11374:
	.seh_endproc
	.section	.text$_ZNSt13__atomic_baseIxEC1Ex,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13__atomic_baseIxEC1Ex
	.def	_ZNSt13__atomic_baseIxEC1Ex;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13__atomic_baseIxEC1Ex
_ZNSt13__atomic_baseIxEC1Ex:
.LFB11422:
	.loc 11 345 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI476:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI477:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
.LBB202:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:345:       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
	.loc 11 345 58
	movq	16(%rbp), %rax	 # this, tmp82
	movq	24(%rbp), %rdx	 # __i, tmp83
	movq	%rdx, (%rax)	 # tmp83, this_2(D)->_M_i
.LBE202:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:345:       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
	.loc 11 345 71
	nop	
	popq	%rbp	 #
.LCFI478:
	ret	
.LFE11422:
	.seh_endproc
	.section	.text$_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_,"x"
	.linkonce discard
	.globl	_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_
	.def	_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_
_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_:
.LFB11447:
	.file 20 "C:/msys64/mingw64/include/c++/12.2.0/bits/move.h"
	.loc 20 196 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI479:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI480:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:204:       _Tp __tmp = _GLIBCXX_MOVE(__a);
	.loc 20 204 19
	movq	16(%rbp), %rax	 # __a, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:204:       _Tp __tmp = _GLIBCXX_MOVE(__a);
	.loc 20 204 11
	movq	(%rax), %rax	 # MEM[(struct id &)_1], tmp86
	movq	%rax, -8(%rbp)	 # tmp86, __tmp
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:205:       __a = _GLIBCXX_MOVE(__b);
	.loc 20 205 13
	movq	24(%rbp), %rax	 # __b, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:205:       __a = _GLIBCXX_MOVE(__b);
	.loc 20 205 7
	movq	16(%rbp), %rdx	 # __a, tmp88
	movq	(%rax), %rax	 # MEM[(struct id &)_2], tmp89
	movq	%rax, (%rdx)	 # tmp89, *__a_5(D)
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:206:       __b = _GLIBCXX_MOVE(__tmp);
	.loc 20 206 13
	leaq	-8(%rbp), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:206:       __b = _GLIBCXX_MOVE(__tmp);
	.loc 20 206 7
	movq	24(%rbp), %rdx	 # __b, tmp91
	movq	(%rax), %rax	 # MEM[(struct id &)_3], tmp92
	movq	%rax, (%rdx)	 # tmp92, *__b_8(D)
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:207:     }
	.loc 20 207 5
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI481:
	ret	
.LFE11447:
	.seh_endproc
	.section	.text$_ZNSt10_Hash_impl4hashIyEEyRKT_,"x"
	.linkonce discard
	.globl	_ZNSt10_Hash_impl4hashIyEEyRKT_
	.def	_ZNSt10_Hash_impl4hashIyEEyRKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Hash_impl4hashIyEEyRKT_
_ZNSt10_Hash_impl4hashIyEEyRKT_:
.LFB11448:
	.loc 7 210 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI482:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI483:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __val, __val
 # C:/msys64/mingw64/include/c++/12.2.0/bits/functional_hash.h:211:       { return hash(&__val, sizeof(__val)); }
	.loc 7 211 20
	movq	16(%rbp), %rax	 # __val, tmp84
	movl	$3339675911, %r8d	 #,
	movl	$8, %edx	 #,
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt10_Hash_impl4hashEPKvyy	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/functional_hash.h:211:       { return hash(&__val, sizeof(__val)); }
	.loc 7 211 45
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI484:
	ret	
.LFE11448:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE:
.LFB11449:
	.loc 14 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI485:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI486:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 14 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 14 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI487:
	ret	
.LFE11449:
	.seh_endproc
	.section	.text$_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv
	.def	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv
_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv:
.LFB11450:
	.loc 14 521 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI488:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI489:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 14 522 11
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->__r, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 14 522 16
	popq	%rbp	 #
.LCFI490:
	ret	
.LFE11450:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE:
.LFB11477:
	.loc 14 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI491:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI492:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 14 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 14 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI493:
	ret	
.LFE11477:
	.seh_endproc
	.section	.text$_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv
	.def	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv
_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv:
.LFB11481:
	.loc 14 521 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI494:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI495:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 14 522 11
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->__r, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 14 522 16
	popq	%rbp	 #
.LCFI496:
	ret	
.LFE11481:
	.seh_endproc
	.section	.text$_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE
	.def	_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE
_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE:
.LFB11480:
	.loc 14 770 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI497:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI498:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI499:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI500:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 9
	movq	32(%rbp), %rax	 # __lhs, tmp86
	movq	(%rax), %rax	 # *__lhs_3(D), tmp87
	movq	%rax, -16(%rbp)	 # tmp87, D.220305
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 26
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
	movq	%rax, %rbx	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 33
	movq	40(%rbp), %rax	 # __rhs, tmp89
	movq	(%rax), %rax	 # *__rhs_7(D), tmp90
	movq	%rax, -8(%rbp)	 # tmp90, D.220306
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 50
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51
	cmpq	%rax, %rbx	 # _10, _6
	je	.L445	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 is_stmt 0 discriminator 1
	cmpq	%rax, %rbx	 # _10, _6
	jge	.L446	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 discriminator 3
	movl	$-1, %eax	 #, D.238430
	jmp	.L448	 #
.L446:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 discriminator 4
	movl	$1, %eax	 #, D.238430
	jmp	.L448	 #
.L445:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 14 775 51 discriminator 2
	movl	$0, %eax	 #, D.238430
.L448:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:776:       }
	.loc 14 776 7 is_stmt 1 discriminator 6
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI501:
	popq	%rbp	 #
.LCFI502:
	ret	
.LFE11480:
	.seh_endproc
	.section	.text$_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE
	.def	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE
_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE:
.LFB11479:
	.file 21 "C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h"
	.loc 21 68 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI503:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI504:
	subq	$96, %rsp	 #,
	.seh_stackalloc	96
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __rtime, __rtime
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 21 70 14
	leaq	-17(%rbp), %rax	 #, tmp91
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt9__cmp_cat8__unspecC1EPS0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 21 70 29
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv	 #
	movq	%rax, -16(%rbp)	 # tmp93, D.220278
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 21 70 14
	leaq	-16(%rbp), %rdx	 #, tmp94
	movq	16(%rbp), %rax	 # __rtime, tmp95
	movq	%rax, %rcx	 # tmp95,
	call	_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE	 #
	movl	%eax, %ecx	 #, D.238408
	movzbl	-17(%rbp), %eax	 # D.220320, tmp96
	movl	%eax, %edx	 # tmp96,
	call	_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 21 70 2
	testb	%al, %al	 # retval.194_20
	jne	.L455	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:72: 	auto __s = chrono::duration_cast<chrono::seconds>(__rtime);
	.loc 21 72 51
	movq	16(%rbp), %rax	 # __rtime, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -32(%rbp)	 # tmp99, __s
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:73: 	auto __ns = chrono::duration_cast<chrono::nanoseconds>(__rtime - __s);
	.loc 21 73 65
	leaq	-32(%rbp), %rdx	 #, tmp100
	movq	16(%rbp), %rax	 # __rtime, tmp101
	movq	%rax, %rcx	 # tmp101,
	call	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_	 #
	movq	%rax, -8(%rbp)	 # tmp103, D.220345
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:73: 	auto __ns = chrono::duration_cast<chrono::nanoseconds>(__rtime - __s);
	.loc 21 73 56
	leaq	-8(%rbp), %rax	 #, tmp104
	movq	%rax, %rcx	 # tmp104,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -40(%rbp)	 # tmp106, __ns
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:77: 	    static_cast<std::time_t>(__s.count()),
	.loc 21 77 40
	leaq	-32(%rbp), %rax	 #, tmp107
	movq	%rax, %rcx	 # tmp107,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:75: 	struct ::timespec __ts =
	.loc 21 75 20
	movq	%rax, -64(%rbp)	 # _1, __ts.tv_sec
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:78: 	    static_cast<long>(__ns.count())
	.loc 21 78 34
	leaq	-40(%rbp), %rax	 #, tmp108
	movq	%rax, %rcx	 # tmp108,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:75: 	struct ::timespec __ts =
	.loc 21 75 20
	movl	%eax, -56(%rbp)	 # _3, __ts.tv_nsec
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 2
	nop	
.L454:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 20 discriminator 9
	leaq	-64(%rbp), %rdx	 #, tmp109
	leaq	-64(%rbp), %rax	 #, tmp110
	movq	%rax, %rcx	 # tmp110,
	call	nanosleep	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 41 discriminator 9
	cmpl	$-1, %eax	 #, _4
	jne	.L452	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 44 discriminator 2
	movq	__imp__errno(%rip), %rax	 #, tmp111
	call	*%rax	 # tmp111
.LVL43:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 50 discriminator 2
	movl	(%rax), %eax	 # *_5, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 41 discriminator 2
	cmpl	$4, %eax	 #, _6
	jne	.L452	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 41 is_stmt 0 discriminator 5
	movl	$1, %eax	 #, iftmp.196_7
	jmp	.L453	 #
.L452:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 41 discriminator 6
	movl	$0, %eax	 #, iftmp.196_7
.L453:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 41 discriminator 8
	testb	%al, %al	 # iftmp.196_7
	jne	.L454	 #,
	jmp	.L449	 #
.L455:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:71: 	  return;
	.loc 21 71 4 is_stmt 1
	nop	
.L449:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:85:       }
	.loc 21 85 7
	addq	$96, %rsp	 #,
	popq	%rbp	 #
.LCFI505:
	ret	
.LFE11479:
	.seh_endproc
	.section	.text$_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE
	.def	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE
_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE:
.LFB11485:
	.loc 21 68 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI506:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI507:
	subq	$96, %rsp	 #,
	.seh_stackalloc	96
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __rtime, __rtime
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 21 70 14
	leaq	-17(%rbp), %rax	 #, tmp91
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt9__cmp_cat8__unspecC1EPS0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 21 70 29
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv	 #
	movq	%rax, -16(%rbp)	 # tmp93, D.220424
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 21 70 14
	leaq	-16(%rbp), %rdx	 #, tmp94
	movq	16(%rbp), %rax	 # __rtime, tmp95
	movq	%rax, %rcx	 # tmp95,
	call	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE	 #
	movl	%eax, %ecx	 #, D.238089
	movzbl	-17(%rbp), %eax	 # D.220426, tmp96
	movl	%eax, %edx	 # tmp96,
	call	_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 21 70 2
	testb	%al, %al	 # retval.157_20
	jne	.L462	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:72: 	auto __s = chrono::duration_cast<chrono::seconds>(__rtime);
	.loc 21 72 51
	movq	16(%rbp), %rax	 # __rtime, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -32(%rbp)	 # tmp99, __s
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:73: 	auto __ns = chrono::duration_cast<chrono::nanoseconds>(__rtime - __s);
	.loc 21 73 65
	leaq	-32(%rbp), %rdx	 #, tmp100
	movq	16(%rbp), %rax	 # __rtime, tmp101
	movq	%rax, %rcx	 # tmp101,
	call	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_	 #
	movq	%rax, -8(%rbp)	 # tmp103, D.220433
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:73: 	auto __ns = chrono::duration_cast<chrono::nanoseconds>(__rtime - __s);
	.loc 21 73 56
	leaq	-8(%rbp), %rax	 #, tmp104
	movq	%rax, %rcx	 # tmp104,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -40(%rbp)	 # tmp106, __ns
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:77: 	    static_cast<std::time_t>(__s.count()),
	.loc 21 77 40
	leaq	-32(%rbp), %rax	 #, tmp107
	movq	%rax, %rcx	 # tmp107,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:75: 	struct ::timespec __ts =
	.loc 21 75 20
	movq	%rax, -64(%rbp)	 # _1, __ts.tv_sec
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:78: 	    static_cast<long>(__ns.count())
	.loc 21 78 34
	leaq	-40(%rbp), %rax	 #, tmp108
	movq	%rax, %rcx	 # tmp108,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:75: 	struct ::timespec __ts =
	.loc 21 75 20
	movl	%eax, -56(%rbp)	 # _3, __ts.tv_nsec
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 2
	nop	
.L461:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 20 discriminator 9
	leaq	-64(%rbp), %rdx	 #, tmp109
	leaq	-64(%rbp), %rax	 #, tmp110
	movq	%rax, %rcx	 # tmp110,
	call	nanosleep	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 41 discriminator 9
	cmpl	$-1, %eax	 #, _4
	jne	.L459	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 44 discriminator 2
	movq	__imp__errno(%rip), %rax	 #, tmp111
	call	*%rax	 # tmp111
.LVL44:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 50 discriminator 2
	movl	(%rax), %eax	 # *_5, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 41 discriminator 2
	cmpl	$4, %eax	 #, _6
	jne	.L459	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 41 is_stmt 0 discriminator 5
	movl	$1, %eax	 #, iftmp.159_7
	jmp	.L460	 #
.L459:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 41 discriminator 6
	movl	$0, %eax	 #, iftmp.159_7
.L460:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 21 80 41 discriminator 8
	testb	%al, %al	 # iftmp.159_7
	jne	.L461	 #,
	jmp	.L456	 #
.L462:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:71: 	  return;
	.loc 21 71 4 is_stmt 1
	nop	
.L456:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:85:       }
	.loc 21 85 7
	addq	$96, %rsp	 #,
	popq	%rbp	 #
.LCFI508:
	ret	
.LFE11485:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE:
.LFB11489:
	.loc 14 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI509:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI510:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 14 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 14 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI511:
	ret	
.LFE11489:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_
	.def	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_
_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_:
.LFB11554:
	.loc 17 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI512:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI513:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.206483, D.206483
.LBB203:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 17 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.206483, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_	 #
.LBE203:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI514:
	ret	
.LFE11554:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_
	.def	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_
_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_:
.LFB11556:
	.loc 17 598 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI515:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI516:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
.LBB204:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:599: 	: _M_t(__p)
	.loc 17 599 4
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __p, tmp83
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_	 #
.LBE204:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:600:         { }
	.loc 17 600 11
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI517:
	ret	
.LFE11556:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev
	.def	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev
_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev:
.LFB11559:
	.loc 17 665 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI518:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI519:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB205:
.LBB206:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:667: 	auto& __ptr = _M_t._M_ptr();
	.loc 17 667 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
	movq	%rax, -8(%rbp)	 # tmp86, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 17 668 12
	movq	-8(%rbp), %rax	 # __ptr, tmp87
	movq	(%rax), %rax	 # *__ptr_9, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 17 668 2
	testq	%rax, %rax	 # _2
	je	.L468	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 17 669 15
	movq	16(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv	 #
	movq	%rax, %rcx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 17 669 17
	movq	-8(%rbp), %rax	 # __ptr, tmp89
	movq	(%rax), %rax	 # *__ptr_9, _4
	movq	%rax, %rdx	 # _4,
	call	_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_	 #
.L468:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:670: 	__ptr = pointer();
	.loc 17 670 8
	movq	-8(%rbp), %rax	 # __ptr, tmp90
	movq	$0, (%rax)	 #, *__ptr_9
.LBE206:
.LBE205:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:671:       }
	.loc 17 671 7
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI520:
	ret	
.LFE11559:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_:
.LFB11560:
	.loc 17 181 24
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI521:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI522:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __u, __u
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:183: 	reset(__u.release());
	.loc 17 183 7
	movq	24(%rbp), %rax	 # __u, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv	 #
	movq	%rax, %rdx	 #, _1
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 17 184 49
	movq	24(%rbp), %rax	 # __u, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 17 184 34
	movq	%rax, %rcx	 # _2,
	call	_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 17 184 12
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:185: 	return *this;
	.loc 17 185 10
	movq	16(%rbp), %rax	 # this, _11
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:186:       }
	.loc 17 186 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI523:
	ret	
.LFE11560:
	.seh_endproc
	.section	.text$_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy
	.def	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy
_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy:
.LFB11561:
	.loc 17 717 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI524:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI525:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _1
	je	.L472	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 is_stmt 0 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv	 #
	testq	%rax, %rax	 # _2
	jne	.L472	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 discriminator 3
	movl	$1, %eax	 #, iftmp.94_5
	jmp	.L473	 #
.L472:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 discriminator 4
	movl	$0, %eax	 #, iftmp.94_5
.L473:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 discriminator 6
	testb	%al, %al	 # iftmp.94_5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 17 720 12 is_stmt 1 discriminator 6
	movq	16(%rbp), %rax	 # this, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 17 720 14 discriminator 6
	movq	24(%rbp), %rdx	 # __i, tmp91
	salq	$6, %rdx	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 17 720 18 discriminator 6
	addq	%rdx, %rax	 # _4, _17
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:721:       }
	.loc 17 721 7 discriminator 6
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI526:
	ret	
.LFE11561:
	.seh_endproc
	.section	.text$_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_,"x"
	.linkonce discard
	.globl	_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_
	.def	_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_
_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_:
.LFB11562:
	.loc 20 196 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI527:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI528:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:204:       _Tp __tmp = _GLIBCXX_MOVE(__a);
	.loc 20 204 19
	movq	16(%rbp), %rax	 # __a, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:204:       _Tp __tmp = _GLIBCXX_MOVE(__a);
	.loc 20 204 11
	movq	(%rax), %rax	 # *_1, _2
	movq	%rax, -8(%rbp)	 # _2, __tmp
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:205:       __a = _GLIBCXX_MOVE(__b);
	.loc 20 205 13
	movq	24(%rbp), %rax	 # __b, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:205:       __a = _GLIBCXX_MOVE(__b);
	.loc 20 205 11
	movq	(%rax), %rdx	 # *_3, _4
	movq	16(%rbp), %rax	 # __a, tmp90
	movq	%rdx, (%rax)	 # _4, *__a_8(D)
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:206:       __b = _GLIBCXX_MOVE(__tmp);
	.loc 20 206 13
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:206:       __b = _GLIBCXX_MOVE(__tmp);
	.loc 20 206 11
	movq	(%rax), %rdx	 # *_5, _6
	movq	24(%rbp), %rax	 # __b, tmp92
	movq	%rdx, (%rax)	 # _6, *__b_11(D)
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:207:     }
	.loc 20 207 5
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI529:
	ret	
.LFE11562:
	.seh_endproc
	.section	.text$_Z10swprintf_sILy512EEiRAT__wPKwz,"x"
	.linkonce discard
	.globl	_Z10swprintf_sILy512EEiRAT__wPKwz
	.def	_Z10swprintf_sILy512EEiRAT__wPKwz;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z10swprintf_sILy512EEiRAT__wPKwz
_Z10swprintf_sILy512EEiRAT__wPKwz:
.LFB11563:
	.file 22 "C:/msys64/mingw64/include/sec_api/stdio_s.h"
	.loc 22 821 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI530:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI531:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # _Dst, _Dst
	movq	%rdx, 24(%rbp)	 # _Format, _Format
	movq	%r8, 32(%rbp)	 #,
	movq	%r9, 40(%rbp)	 #,
 # C:/msys64/mingw64/include/sec_api/stdio_s.h:821:   __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(int,swprintf_s,vswprintf_s,wchar_t,_Dst,const wchar_t*,_Format)
	.loc 22 821 3
	leaq	32(%rbp), %rax	 #, tmp86
	movq	%rax, -16(%rbp)	 # tmp86, MEM[(char * *)&__vaargs]
	movq	-16(%rbp), %rcx	 # __vaargs, __vaargs.43_1
	movq	24(%rbp), %rdx	 # _Format, tmp87
	movq	16(%rbp), %rax	 # _Dst, tmp88
	movq	%rcx, %r9	 # __vaargs.43_1,
	movq	%rdx, %r8	 # tmp87,
	movl	$512, %edx	 #,
	movq	%rax, %rcx	 # tmp88,
	call	vswprintf_s	 #
	movl	%eax, -4(%rbp)	 # _7, __retval
	movl	-4(%rbp), %eax	 # __retval, _10
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI532:
	ret	
.LFE11563:
	.seh_endproc
	.section	.text$_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_,"x"
	.linkonce discard
	.globl	_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_
	.def	_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_
_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_:
.LFB11564:
	.loc 15 2520 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI533:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI534:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # factoryType, factoryType
	movq	%rdx, 24(%rbp)	 # factory, factory
 # C:/msys64/mingw64/include/d2d1.h:2521:     return D2D1CreateFactory(factoryType, __uuidof(Factory), reinterpret_cast<void**>(factory));
	.loc 15 2521 43
	call	_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv	 #
	movq	%rax, %rdx	 #, _1
 # C:/msys64/mingw64/include/d2d1.h:2521:     return D2D1CreateFactory(factoryType, __uuidof(Factory), reinterpret_cast<void**>(factory));
	.loc 15 2521 29
	movq	24(%rbp), %rcx	 # factory, tmp85
	movl	16(%rbp), %eax	 # factoryType, tmp86
	movq	%rcx, %r8	 # tmp85,
	movl	%eax, %ecx	 # tmp86,
	call	_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv	 #
 # C:/msys64/mingw64/include/d2d1.h:2522: }
	.loc 15 2522 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI535:
	ret	
.LFE11564:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev:
.LFB11569:
	.loc 17 166 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI536:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI537:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB207:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:166:       __uniq_ptr_impl() = default;
	.loc 17 166 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv	 #
.LBE207:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI538:
	ret	
.LFE11569:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv
	.def	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv
_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv:
.LFB11572:
	.loc 17 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI539:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI540:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB208:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 17 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev	 #
.LBE208:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI541:
	ret	
.LFE11572:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv
	.def	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv
_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv:
.LFB11574:
	.loc 17 580 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI542:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI543:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB209:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:581: 	: _M_t()
	.loc 17 581 4
	movq	16(%rbp), %rax	 # this, tmp83
	movq	$0, (%rax)	 #, this_3(D)->_M_t
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv	 #
.LBE209:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:582: 	{ }
	.loc 17 582 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI544:
	ret	
.LFE11574:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_
	.def	_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_
_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_:
.LFB11578:
	.loc 17 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI545:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI546:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.210784, D.210784
.LBB210:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 17 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.210784, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_	 #
.LBE210:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI547:
	ret	
.LFE11578:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_
	.def	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_
_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_:
.LFB11580:
	.loc 17 598 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI548:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI549:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
.LBB211:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:599: 	: _M_t(__p)
	.loc 17 599 4
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __p, tmp83
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_	 #
.LBE211:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:600:         { }
	.loc 17 600 11
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI550:
	ret	
.LFE11580:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev
	.def	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev
_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev:
.LFB11583:
	.loc 17 665 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI551:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI552:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB212:
.LBB213:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:667: 	auto& __ptr = _M_t._M_ptr();
	.loc 17 667 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv	 #
	movq	%rax, -8(%rbp)	 # tmp86, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 17 668 12
	movq	-8(%rbp), %rax	 # __ptr, tmp87
	movq	(%rax), %rax	 # *__ptr_9, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 17 668 2
	testq	%rax, %rax	 # _2
	je	.L487	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 17 669 15
	movq	16(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv	 #
	movq	%rax, %rcx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 17 669 17
	movq	-8(%rbp), %rax	 # __ptr, tmp89
	movq	(%rax), %rax	 # *__ptr_9, _4
	movq	%rax, %rdx	 # _4,
	call	_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_	 #
.L487:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:670: 	__ptr = pointer();
	.loc 17 670 8
	movq	-8(%rbp), %rax	 # __ptr, tmp90
	movq	$0, (%rax)	 #, *__ptr_9
.LBE213:
.LBE212:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:671:       }
	.loc 17 671 7
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI553:
	ret	
.LFE11583:
	.seh_endproc
	.section	.text$_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_,"x"
	.linkonce discard
	.globl	_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
	.def	_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_:
.LFB11584:
	.loc 3 1280 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI554:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI555:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # __x, __x
 # C:/msys64/mingw64/include/c++/12.2.0/cmath:1281:     { return __builtin_cbrt(__x); }
	.loc 3 1281 28
	movl	16(%rbp), %eax	 # __x, tmp85
	testq	%rax, %rax	 # tmp85
	js	.L489	 #,
	pxor	%xmm1, %xmm1	 # _1
	cvtsi2sdq	%rax, %xmm1	 # tmp85, _1
	movq	%xmm1, %rax	 # _1, _1
	jmp	.L490	 #
.L489:
	movq	%rax, %rdx	 # tmp85, tmp87
	shrq	%rdx	 # tmp87
	andl	$1, %eax	 #, tmp88
	orq	%rax, %rdx	 # tmp88, tmp87
	pxor	%xmm0, %xmm0	 # tmp86
	cvtsi2sdq	%rdx, %xmm0	 # tmp87, tmp86
	addsd	%xmm0, %xmm0	 # tmp86, tmp86
	movq	%xmm0, %rax	 # tmp86, _1
.L490:
	movq	%rax, %xmm0	 # _1,
	call	cbrt	 #
	movq	%xmm0, %rax	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/cmath:1281:     { return __builtin_cbrt(__x); }
	.loc 3 1281 35
	movq	%rax, %xmm0	 # <retval>,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI556:
	ret	
.LFE11584:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt7barrierIZ7WinMainEUlvE_EC2ExS0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt7barrierIZ7WinMainEUlvE_EC2ExS0_
_ZNSt7barrierIZ7WinMainEUlvE_EC2ExS0_:
.LFB11586:
	.loc 19 231 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI557:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI558:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI559:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
.LCFI560:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI561:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __count, __count
	movq	%r8, %rsi	 #, tmp85
.LBB214:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:232:       : _M_b(__count, std::move(__completion))
	.loc 19 232 9
	movq	32(%rbp), %rbx	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:232:       : _M_b(__count, std::move(__completion))
	.loc 19 232 32
	movq	%rsi, %rcx	 # tmp85,
	call	_ZSt4moveIRZ7WinMainEUlvE_EONSt16remove_referenceIT_E4typeEOS3_	 #
	movq	%rax, %rcx	 #, _2
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:232:       : _M_b(__count, std::move(__completion))
	.loc 19 232 9
	movq	(%rcx), %rax	 # MEM[(struct ._anon_610 &)_2], tmp86
	movq	8(%rcx), %rdx	 # MEM[(struct ._anon_610 &)_2],
	movq	%rax, -32(%rbp)	 # tmp86,
	movq	%rdx, -24(%rbp)	 #,
	movq	16(%rcx), %rax	 # MEM[(struct ._anon_610 &)_2], tmp87
	movq	%rax, -16(%rbp)	 # tmp87,
	leaq	-32(%rbp), %rdx	 #, tmp88
	movq	40(%rbp), %rax	 # __count, tmp89
	movq	%rdx, %r8	 # tmp88,
	movq	%rax, %rdx	 # tmp89,
	movq	%rbx, %rcx	 # _1,
	call	_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC1ExS0_	 #
.LBE214:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:233:       { }
	.loc 19 233 9
	nop	
	addq	$64, %rsp	 #,
	popq	%rbx	 #
.LCFI562:
	popq	%rsi	 #
.LCFI563:
	popq	%rbp	 #
.LCFI564:
	ret	
.LFE11586:
	.seh_endproc
	.def	_ZNSt7barrierIZ7WinMainEUlvE_EC1ExS0_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt7barrierIZ7WinMainEUlvE_EC1ExS0_,_ZNSt7barrierIZ7WinMainEUlvE_EC2ExS0_
	.align 2
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED2Ev
_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED2Ev:
.LFB11589:
	.loc 17 665 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI565:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI566:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB215:
.LBB216:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:667: 	auto& __ptr = _M_t._M_ptr();
	.loc 17 667 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
	movq	%rax, -8(%rbp)	 # tmp86, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 17 668 12
	movq	-8(%rbp), %rax	 # __ptr, tmp87
	movq	(%rax), %rax	 # *__ptr_9, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 17 668 2
	testq	%rax, %rax	 # _2
	je	.L494	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 17 669 15
	movq	16(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE11get_deleterEv	 #
	movq	%rax, %rcx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 17 669 17
	movq	-8(%rbp), %rax	 # __ptr, tmp89
	movq	(%rax), %rax	 # *__ptr_9, _4
	movq	%rax, %rdx	 # _4,
	call	_ZNKSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEclIS3_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS4_E5valueEvE4typeEPS9_	 #
.L494:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:670: 	__ptr = pointer();
	.loc 17 670 8
	movq	-8(%rbp), %rax	 # __ptr, tmp90
	movq	$0, (%rax)	 #, *__ptr_9
.LBE216:
.LBE215:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:671:       }
	.loc 17 671 7
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI567:
	ret	
.LFE11589:
	.seh_endproc
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED1Ev;	.scl	3;	.type	32;	.endef
	.set	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED1Ev,_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED2Ev
	.section	.text$_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy
	.def	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy
_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy:
.LFB11591:
	.loc 17 717 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI568:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI569:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _1
	je	.L496	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 is_stmt 0 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv	 #
	testq	%rax, %rax	 # _2
	jne	.L496	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 discriminator 3
	movl	$1, %eax	 #, iftmp.198_5
	jmp	.L497	 #
.L496:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 discriminator 4
	movl	$0, %eax	 #, iftmp.198_5
.L497:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 discriminator 6
	testb	%al, %al	 # iftmp.198_5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 17 720 12 is_stmt 1 discriminator 6
	movq	16(%rbp), %rax	 # this, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 17 720 14 discriminator 6
	movq	24(%rbp), %rdx	 # __i, tmp91
	salq	$3, %rdx	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 17 720 18 discriminator 6
	addq	%rdx, %rax	 # _4, _17
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:721:       }
	.loc 17 721 7 discriminator 6
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI570:
	ret	
.LFE11591:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_:
.LFB11595:
	.loc 14 505 23
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI571:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI572:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __rep, __rep
.LBB217:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 10
	movq	24(%rbp), %rax	 # __rep, tmp84
	movl	(%rax), %eax	 # *__rep_6(D), _1
	movslq	%eax, %rdx	 # _1, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 6
	movq	16(%rbp), %rax	 # this, tmp85
	movq	%rdx, (%rax)	 # _2, this_4(D)->__r
.LBE217:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 37
	nop	
	popq	%rbp	 #
.LCFI573:
	ret	
.LFE11595:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC76:
	.ascii "Thread[%d] - Updated [(%d, %d, %d),(%d, %d, %d)]\12\0"
	.text
	.align 2
	.def	_ZN6MATRIX21UpdateSimulationStateIZ7WinMainEUlvE_EEvP6HWND__PSt6atomicIhERSt7barrierIT_ERS4_IbEjjjjjj;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX21UpdateSimulationStateIZ7WinMainEUlvE_EEvP6HWND__PSt6atomicIhERSt7barrierIT_ERS4_IbEjjjjjj
_ZN6MATRIX21UpdateSimulationStateIZ7WinMainEUlvE_EEvP6HWND__PSt6atomicIhERSt7barrierIT_ERS4_IbEjjjjjj:
.LFB11592:
	.loc 16 291 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI574:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI575:
	addq	$-128, %rsp	 #,
	.seh_stackalloc	128
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # hwnd, hwnd
	movq	%r8, 32(%rbp)	 # keyfield, keyfield
	movq	%r9, 40(%rbp)	 # SyncPoint, SyncPoint
 # src\main.cpp:293: 		const auto FrameDuration = std::chrono::milliseconds(1000 / TARGET_FPS);
	.loc 16 293 14
	movq	$16, -40(%rbp)	 #, FrameDuration.__r
 # src\main.cpp:295: 		while(running)
	.loc 16 295 3
	jmp	.L502	 #
.L513:
.LBB218:
 # src\main.cpp:298: 			auto frameStart = std::chrono::high_resolution_clock::now();
	.loc 16 298 61
	call	_ZNSt6chrono3_V212system_clock3nowEv	 #
	movq	%rax, -48(%rbp)	 # tmp95, frameStart
.LBB219:
 # src\main.cpp:300: 			for(uint32_t z=z1; z<=z2; ++z)
	.loc 16 300 17
	movl	88(%rbp), %eax	 # z1, tmp96
	movl	%eax, -4(%rbp)	 # tmp96, z
 # src\main.cpp:300: 			for(uint32_t z=z1; z<=z2; ++z)
	.loc 16 300 4
	jmp	.L503	 #
.L510:
.LBB220:
 # src\main.cpp:302: 				if(!running) break;
	.loc 16 302 8
	movq	48(%rbp), %rax	 # running, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZNKSt6atomicIbEcvbEv	 #
	xorl	$1, %eax	 #, retval.101_28
 # src\main.cpp:302: 				if(!running) break;
	.loc 16 302 5
	testb	%al, %al	 # retval.101_28
	jne	.L514	 #,
.LBB221:
 # src\main.cpp:304: 				for(uint32_t y=y1; y<=y2; ++y)
	.loc 16 304 18
	movl	72(%rbp), %eax	 # y1, tmp98
	movl	%eax, -8(%rbp)	 # tmp98, y
 # src\main.cpp:304: 				for(uint32_t y=y1; y<=y2; ++y)
	.loc 16 304 5
	jmp	.L506	 #
.L509:
.LBB222:
.LBB223:
 # src\main.cpp:306: 					for(uint32_t x=x1; x<=x2; ++x)
	.loc 16 306 19
	movl	56(%rbp), %eax	 # x1, tmp99
	movl	%eax, -12(%rbp)	 # tmp99, x
 # src\main.cpp:306: 					for(uint32_t x=x1; x<=x2; ++x)
	.loc 16 306 6
	jmp	.L507	 #
.L508:
 # src\main.cpp:306: 					for(uint32_t x=x1; x<=x2; ++x)
	.loc 16 306 6 is_stmt 0 discriminator 3
	addl	$1, -12(%rbp)	 #, x
.L507:
 # src\main.cpp:306: 					for(uint32_t x=x1; x<=x2; ++x)
	.loc 16 306 26 is_stmt 1 discriminator 1
	movl	-12(%rbp), %eax	 # x, tmp100
	cmpl	%eax, 64(%rbp)	 # tmp100, x2
	jnb	.L508	 #,
.LBE223:
.LBE222:
 # src\main.cpp:304: 				for(uint32_t y=y1; y<=y2; ++y)
	.loc 16 304 5 discriminator 2
	addl	$1, -8(%rbp)	 #, y
.L506:
 # src\main.cpp:304: 				for(uint32_t y=y1; y<=y2; ++y)
	.loc 16 304 25 discriminator 1
	movl	-8(%rbp), %eax	 # y, tmp101
	cmpl	%eax, 80(%rbp)	 # tmp101, y2
	jnb	.L509	 #,
.LBE221:
.LBE220:
 # src\main.cpp:300: 			for(uint32_t z=z1; z<=z2; ++z)
	.loc 16 300 4 discriminator 2
	addl	$1, -4(%rbp)	 #, z
.L503:
 # src\main.cpp:300: 			for(uint32_t z=z1; z<=z2; ++z)
	.loc 16 300 24 discriminator 1
	movl	-4(%rbp), %eax	 # z, tmp102
	cmpl	%eax, 96(%rbp)	 # tmp102, z2
	jnb	.L510	 #,
	jmp	.L505	 #
.L514:
.LBB224:
 # src\main.cpp:302: 				if(!running) break;
	.loc 16 302 18
	nop	
.L505:
.LBE224:
.LBE219:
 # src\main.cpp:313: 			if(keyfield[VK_TAB] & KEY_HELD)
	.loc 16 313 22
	movq	32(%rbp), %rax	 # keyfield, tmp103
	addq	$9, %rax	 #, _2
 # src\main.cpp:313: 			if(keyfield[VK_TAB] & KEY_HELD)
	.loc 16 313 24
	movq	%rax, %rcx	 # _3,
	call	_ZNKSt13__atomic_baseIhEcvhEv	 #
	movzbl	%al, %eax	 # _4, _5
	andl	$4, %eax	 #, _6
	testl	%eax, %eax	 # _6
	setne	%al	 #, retval.102_40
 # src\main.cpp:313: 			if(keyfield[VK_TAB] & KEY_HELD)
	.loc 16 313 4
	testb	%al, %al	 # retval.102_40
	je	.L511	 #,
 # src\main.cpp:315: 				printf("Thread[%d] - Updated [(%d, %d, %d),(%d, %d, %d)]\n", std::this_thread::get_id(), x1, y1, z1, x2, y2, z2);
	.loc 16 315 11
	call	_ZNSt11this_thread6get_idEv	 #
	movq	%rax, %rdx	 #, D.237758
	movl	72(%rbp), %r8d	 # y1, tmp104
	movl	56(%rbp), %ecx	 # x1, tmp105
	movl	96(%rbp), %eax	 # z2, tmp106
	movl	%eax, 56(%rsp)	 # tmp106,
	movl	80(%rbp), %eax	 # y2, tmp107
	movl	%eax, 48(%rsp)	 # tmp107,
	movl	64(%rbp), %eax	 # x2, tmp108
	movl	%eax, 40(%rsp)	 # tmp108,
	movl	88(%rbp), %eax	 # z1, tmp109
	movl	%eax, 32(%rsp)	 # tmp109,
	movl	%r8d, %r9d	 # tmp104,
	movl	%ecx, %r8d	 # tmp105,
	leaq	.LC76(%rip), %rax	 #, tmp110
	movq	%rax, %rcx	 # tmp110,
	call	_Z6printfPKcz	 #
.L511:
 # src\main.cpp:318: 			SyncPoint.arrive_and_wait();
	.loc 16 318 29
	movq	40(%rbp), %rax	 # SyncPoint, tmp111
	movq	%rax, %rcx	 # tmp111,
	call	_ZNSt7barrierIZ7WinMainEUlvE_E15arrive_and_waitEv	 #
 # src\main.cpp:320: 			auto frameEnd = std::chrono::high_resolution_clock::now();
	.loc 16 320 59
	call	_ZNSt6chrono3_V212system_clock3nowEv	 #
	movq	%rax, -56(%rbp)	 # tmp113, frameEnd
 # src\main.cpp:321:     		auto elapsed = frameEnd - frameStart;
	.loc 16 321 31
	leaq	-48(%rbp), %rdx	 #, tmp114
	leaq	-56(%rbp), %rax	 #, tmp115
	movq	%rax, %rcx	 # tmp115,
	call	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE	 #
	movq	%rax, -64(%rbp)	 # tmp117, elapsed
 # src\main.cpp:325: 			if (elapsed < FrameDuration)
	.loc 16 325 16
	leaq	-25(%rbp), %rax	 #, tmp118
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp118,
	call	_ZNSt9__cmp_cat8__unspecC1EPS0_	 #
	leaq	-40(%rbp), %rdx	 #, tmp119
	leaq	-64(%rbp), %rax	 #, tmp120
	movq	%rax, %rcx	 # tmp120,
	call	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE	 #
	movl	%eax, %ecx	 #, D.237761
	movzbl	-25(%rbp), %eax	 # D.221413, tmp121
	movl	%eax, %edx	 # tmp121,
	call	_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE	 #
 # src\main.cpp:325: 			if (elapsed < FrameDuration)
	.loc 16 325 4
	testb	%al, %al	 # retval.103_50
	je	.L502	 #,
 # src\main.cpp:327:         		std::this_thread::sleep_for(FrameDuration - elapsed);
	.loc 16 327 53
	leaq	-64(%rbp), %rdx	 #, tmp122
	leaq	-40(%rbp), %rax	 #, tmp123
	movq	%rax, %rcx	 # tmp123,
	call	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_	 #
	movq	%rax, -24(%rbp)	 # tmp125, D.221414
 # src\main.cpp:327:         		std::this_thread::sleep_for(FrameDuration - elapsed);
	.loc 16 327 38
	leaq	-24(%rbp), %rax	 #, tmp126
	movq	%rax, %rcx	 # tmp126,
	call	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE	 #
.L502:
.LBE218:
 # src\main.cpp:295: 		while(running)
	.loc 16 295 3
	movq	48(%rbp), %rax	 # running, tmp127
	movq	%rax, %rcx	 # tmp127,
	call	_ZNKSt6atomicIbEcvbEv	 #
	testb	%al, %al	 # retval.104_21
	jne	.L513	 #,
 # src\main.cpp:331: 	}
	.loc 16 331 2
	nop	
	nop	
	subq	$-128, %rsp	 #,
	popq	%rbp	 #
.LCFI576:
	ret	
.LFE11592:
	.seh_endproc
	.align 2
	.def	_ZNSt6threadC2IZ7WinMainEUlvE0_JEvEEOT_DpOT0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6threadC2IZ7WinMainEUlvE0_JEvEEOT_DpOT0_
_ZNSt6threadC2IZ7WinMainEUlvE0_JEvEEOT_DpOT0_:
.LFB11611:
	.loc 13 126 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI577:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI578:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI579:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI580:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI581:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI582:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # this, this
	movq	%rdx, 56(%rbp)	 # __f, __f
.LBB225:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:127:       {
	.loc 13 127 7
	movq	48(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6thread2idC1Ev	 #
.LBB226:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:137: 	auto __depend = nullptr;
	.loc 13 137 7
	movq	$0, -8(%rbp)	 #, __depend
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 29
	movl	$72, %ecx	 #,
.LEHB4:
	call	_Znwy	 #
.LEHE4:
	movq	%rax, %rbx	 # tmp87, _14
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 18
	movl	$1, %edi	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 29
	movq	56(%rbp), %rax	 # __f, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _3,
	movq	%rbx, %rcx	 # _14,
.LEHB5:
	call	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC1IJS3_EEEDpOT_	 #
.LEHE5:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 18 discriminator 4
	movl	$0, %edi	 #, _4
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rbx, %rdx	 # _14,
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 17 discriminator 4
	leaq	-16(%rbp), %rdx	 #, tmp90
	movq	48(%rbp), %rax	 # this, tmp91
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp91,
.LEHB6:
	call	_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE	 #
.LEHE6:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 18 discriminator 6
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev	 #
.LBE226:
.LBE225:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:145:       }
	.loc 13 145 7 discriminator 6
	jmp	.L521	 #
.L520:
.LBB228:
.LBB227:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 18
	movq	%rax, %rsi	 #, tmp95
	leaq	-16(%rbp), %rax	 #, tmp93
	movq	%rax, %rcx	 # tmp93,
	call	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev	 #
	jmp	.L517	 #
.L519:
	movq	%rax, %rsi	 #, tmp94
.L517:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 18 is_stmt 0 discriminator 3
	testb	%dil, %dil	 # _4
	je	.L518	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 29 is_stmt 1 discriminator 7
	movl	$72, %edx	 #,
	movq	%rbx, %rcx	 # _14,
	call	_ZdlPvy	 #
.L518:
	movq	%rsi, %rax	 # tmp94, D.239370
	movq	%rax, %rcx	 # D.239370,
.LEHB7:
	call	_Unwind_Resume	 #
	nop	
.LEHE7:
.L521:
.LBE227:
.LBE228:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:145:       }
	.loc 13 145 7
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI583:
	popq	%rsi	 #
.LCFI584:
	popq	%rdi	 #
.LCFI585:
	popq	%rbp	 #
.LCFI586:
	ret	
.LFE11611:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA11611:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE11611-.LLSDACSB11611
.LLSDACSB11611:
	.uleb128 .LEHB4-.LFB11611
	.uleb128 .LEHE4-.LEHB4
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB5-.LFB11611
	.uleb128 .LEHE5-.LEHB5
	.uleb128 .L519-.LFB11611
	.uleb128 0
	.uleb128 .LEHB6-.LFB11611
	.uleb128 .LEHE6-.LEHB6
	.uleb128 .L520-.LFB11611
	.uleb128 0
	.uleb128 .LEHB7-.LFB11611
	.uleb128 .LEHE7-.LEHB7
	.uleb128 0
	.uleb128 0
.LLSDACSE11611:
	.text
	.seh_endproc
	.def	_ZNSt6threadC1IZ7WinMainEUlvE0_JEvEEOT_DpOT0_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt6threadC1IZ7WinMainEUlvE0_JEvEEOT_DpOT0_,_ZNSt6threadC2IZ7WinMainEUlvE0_JEvEEOT_DpOT0_
	.align 2
	.def	_ZZN21WINDOWGraphicsOverlay11blitOverlayIZ7WinMainEUlvE_EEbP6HWND__RSt7barrierIT_ER6CameraRSt6atomicIbEjjENKUlffiE_clEffi;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZZN21WINDOWGraphicsOverlay11blitOverlayIZ7WinMainEUlvE_EEbP6HWND__RSt7barrierIT_ER6CameraRSt6atomicIbEjjENKUlffiE_clEffi
_ZZN21WINDOWGraphicsOverlay11blitOverlayIZ7WinMainEUlvE_EEbP6HWND__RSt7barrierIT_ER6CameraRSt6atomicIbEjjENKUlffiE_clEffi:
.LFB11614:
	.loc 16 542 20
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI587:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI588:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __closure, __closure
	movss	%xmm1, 24(%rbp)	 # posComponent, posComponent
	movss	%xmm2, 32(%rbp)	 # dirComponent, dirComponent
	movl	%r9d, 40(%rbp)	 # step, step
.LBB229:
 # src\main.cpp:544:         			    if (dirComponent == 0) return std::numeric_limits<float>::infinity();
	.loc 16 544 16
	pxor	%xmm0, %xmm0	 # tmp100
	ucomiss	32(%rbp), %xmm0	 # dirComponent, tmp100
	jp	.L523	 #,
	pxor	%xmm0, %xmm0	 # tmp101
	ucomiss	32(%rbp), %xmm0	 # dirComponent, tmp101
	jne	.L523	 #,
 # src\main.cpp:544:         			    if (dirComponent == 0) return std::numeric_limits<float>::infinity();
	.loc 16 544 82 discriminator 1
	call	_ZNSt14numeric_limitsIfE8infinityEv	 #
 # src\main.cpp:544:         			    if (dirComponent == 0) return std::numeric_limits<float>::infinity();
	.loc 16 544 83 discriminator 1
	jmp	.L525	 #
.L523:
 # src\main.cpp:546:         			        ? (std::floor(posComponent / cellSize) + 1.0f) * cellSize
	.loc 16 546 20
	cmpl	$0, 40(%rbp)	 #, step
	jle	.L526	 #,
 # src\main.cpp:542: 					auto firstT = [&](float posComponent, float dirComponent, int step) -> float
	.loc 16 542 20 discriminator 1
	movq	16(%rbp), %rax	 # __closure, tmp102
	movq	(%rax), %rax	 # __closure_23(D)->__cellSize, _1
 # src\main.cpp:546:         			        ? (std::floor(posComponent / cellSize) + 1.0f) * cellSize
	.loc 16 546 33 discriminator 1
	movss	(%rax), %xmm1	 # *_1, _2
	movss	24(%rbp), %xmm0	 # posComponent, tmp103
	divss	%xmm1, %xmm0	 # _2, tmp103
	movd	%xmm0, %eax	 # tmp103, _3
	movd	%eax, %xmm0	 # _3,
	call	_ZSt5floorf	 #
 # src\main.cpp:546:         			        ? (std::floor(posComponent / cellSize) + 1.0f) * cellSize
	.loc 16 546 59 discriminator 1
	movss	.LC2(%rip), %xmm1	 #, tmp104
	addss	%xmm0, %xmm1	 # _4, _5
 # src\main.cpp:542: 					auto firstT = [&](float posComponent, float dirComponent, int step) -> float
	.loc 16 542 20 discriminator 1
	movq	16(%rbp), %rax	 # __closure, tmp105
	movq	(%rax), %rax	 # __closure_23(D)->__cellSize, _6
 # src\main.cpp:546:         			        ? (std::floor(posComponent / cellSize) + 1.0f) * cellSize
	.loc 16 546 67 discriminator 1
	movss	(%rax), %xmm0	 # *_6, _7
 # src\main.cpp:546:         			        ? (std::floor(posComponent / cellSize) + 1.0f) * cellSize
	.loc 16 546 20 discriminator 1
	mulss	%xmm1, %xmm0	 # _5, iftmp.223_17
	jmp	.L527	 #
.L526:
 # src\main.cpp:542: 					auto firstT = [&](float posComponent, float dirComponent, int step) -> float
	.loc 16 542 20 discriminator 2
	movq	16(%rbp), %rax	 # __closure, tmp106
	movq	(%rax), %rax	 # __closure_23(D)->__cellSize, _8
 # src\main.cpp:547:         			        :  std::floor(posComponent / cellSize) * cellSize;
	.loc 16 547 33 discriminator 2
	movss	(%rax), %xmm1	 # *_8, _9
	movss	24(%rbp), %xmm0	 # posComponent, tmp107
	divss	%xmm1, %xmm0	 # _9, tmp107
	movd	%xmm0, %eax	 # tmp107, _10
	movd	%eax, %xmm0	 # _10,
	call	_ZSt5floorf	 #
 # src\main.cpp:542: 					auto firstT = [&](float posComponent, float dirComponent, int step) -> float
	.loc 16 542 20 discriminator 2
	movq	16(%rbp), %rax	 # __closure, tmp108
	movq	(%rax), %rax	 # __closure_23(D)->__cellSize, _12
 # src\main.cpp:547:         			        :  std::floor(posComponent / cellSize) * cellSize;
	.loc 16 547 59 discriminator 2
	movss	(%rax), %xmm1	 # *_12, _13
 # src\main.cpp:546:         			        ? (std::floor(posComponent / cellSize) + 1.0f) * cellSize
	.loc 16 546 20 discriminator 2
	mulss	%xmm1, %xmm0	 # _13, iftmp.223_17
.L527:
 # src\main.cpp:545:         			    float voxelBorder = (step > 0)
	.loc 16 545 22
	movss	%xmm0, -4(%rbp)	 # iftmp.223_17, voxelBorder
 # src\main.cpp:548:         			    return std::fabs((voxelBorder - posComponent) / dirComponent);
	.loc 16 548 46
	movss	-4(%rbp), %xmm0	 # voxelBorder, tmp109
	subss	24(%rbp), %xmm0	 # posComponent, _14
 # src\main.cpp:548:         			    return std::fabs((voxelBorder - posComponent) / dirComponent);
	.loc 16 548 32
	divss	32(%rbp), %xmm0	 # dirComponent, _14
	movd	%xmm0, %eax	 # _14, _15
	movd	%eax, %xmm0	 # _15,
	call	_ZSt4fabsf	 #
 # src\main.cpp:548:         			    return std::fabs((voxelBorder - posComponent) / dirComponent);
	.loc 16 548 76
	nop	
.L525:
.LBE229:
 # src\main.cpp:542: 					auto firstT = [&](float posComponent, float dirComponent, int step) -> float
	.loc 16 542 20
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI589:
	ret	
.LFE11614:
	.seh_endproc
	.def	_ZN21WINDOWGraphicsOverlay11blitOverlayIZ7WinMainEUlvE_EEbP6HWND__RSt7barrierIT_ER6CameraRSt6atomicIbEjj;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay11blitOverlayIZ7WinMainEUlvE_EEbP6HWND__RSt7barrierIT_ER6CameraRSt6atomicIbEjj
_ZN21WINDOWGraphicsOverlay11blitOverlayIZ7WinMainEUlvE_EEbP6HWND__RSt7barrierIT_ER6CameraRSt6atomicIbEjj:
.LFB11613:
	.loc 16 503 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI590:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI591:
	subq	$216, %rsp	 #,
	.seh_stackalloc	216
.LCFI592:
	leaq	208(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 208
.LCFI593:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # hwnd, hwnd
	movq	%rdx, 40(%rbp)	 # SyncPoint, SyncPoint
	movq	%r8, 48(%rbp)	 # cam, cam
	movq	%r9, 56(%rbp)	 # running, running
 # src\main.cpp:505: 		MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 16 505 62
	movq	32(%rbp), %rax	 # hwnd, tmp164
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp164,
	movq	__imp_GetWindowLongPtrW(%rip), %rax	 #, tmp165
	call	*%rax	 # tmp165
.LVL45:
 # src\main.cpp:505: 		MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 16 505 11
	movq	%rax, -48(%rbp)	 # _1, matrix
 # src\main.cpp:507: 		float cellSize = matrix->cellSize;
	.loc 16 507 28
	movq	-48(%rbp), %rax	 # matrix, tmp166
	movss	48(%rax), %xmm0	 # matrix_106->cellSize, _2
 # src\main.cpp:507: 		float cellSize = matrix->cellSize;
	.loc 16 507 9
	movss	%xmm0, -96(%rbp)	 # _2, cellSize
 # src\main.cpp:509: 		const auto FrameDuration = std::chrono::milliseconds(1000 / TARGET_FPS);
	.loc 16 509 14
	movq	$16, -104(%rbp)	 #, FrameDuration.__r
 # src\main.cpp:511: 		while(running)
	.loc 16 511 3
	jmp	.L530	 #
.L567:
.LBB230:
 # src\main.cpp:513: 			auto frameStart = std::chrono::high_resolution_clock::now();
	.loc 16 513 61
	call	_ZNSt6chrono3_V212system_clock3nowEv	 #
	movq	%rax, -112(%rbp)	 # tmp168, frameStart
.LBB231:
 # src\main.cpp:515: 			for (int j = 0; j < HEIGHT; ++j)
	.loc 16 515 13
	movl	$0, -4(%rbp)	 #, j
 # src\main.cpp:515: 			for (int j = 0; j < HEIGHT; ++j)
	.loc 16 515 4
	jmp	.L531	 #
.L565:
.LBB232:
.LBB233:
 # src\main.cpp:517:     			for (int i = StartX; i < EndX; ++i)
	.loc 16 517 17
	movl	64(%rbp), %eax	 # StartX, tmp169
	movl	%eax, -8(%rbp)	 # tmp169, i
 # src\main.cpp:517:     			for (int i = StartX; i < EndX; ++i)
	.loc 16 517 8
	jmp	.L532	 #
.L564:
.LBB234:
 # src\main.cpp:519: 					Vec3D dir = cam.GenerateRayDirection(i, j, WIDTH, HEIGHT);
	.loc 16 519 42
	leaq	-140(%rbp), %rax	 #, tmp170
	movl	-4(%rbp), %r8d	 # j, tmp171
	movl	-8(%rbp), %ecx	 # i, tmp172
	movq	48(%rbp), %rdx	 # cam, tmp173
	movl	$600, 40(%rsp)	 #,
	movl	$800, 32(%rsp)	 #,
	movl	%r8d, %r9d	 # tmp171,
	movl	%ecx, %r8d	 # tmp172,
	movq	%rax, %rcx	 # tmp170,
	call	_ZNK6Camera20GenerateRayDirectionEiiii	 #
 # src\main.cpp:520: 					Vec3D org = cam.GetPosition();
	.loc 16 520 33
	leaq	-152(%rbp), %rax	 #, tmp174
	movq	48(%rbp), %rdx	 # cam, tmp175
	movq	%rax, %rcx	 # tmp174,
	call	_ZNK6Camera11GetPositionEv	 #
 # src\main.cpp:522: 					int ix = static_cast<int>(std::floor(org.x / cellSize));
	.loc 16 522 47
	movss	-152(%rbp), %xmm0	 # org.x, _3
 # src\main.cpp:522: 					int ix = static_cast<int>(std::floor(org.x / cellSize));
	.loc 16 522 42
	movss	-96(%rbp), %xmm1	 # cellSize, cellSize.199_4
	divss	%xmm1, %xmm0	 # cellSize.199_4, _3
	movd	%xmm0, %eax	 # _3, _5
	movd	%eax, %xmm0	 # _5,
	call	_ZSt5floorf	 #
 # src\main.cpp:522: 					int ix = static_cast<int>(std::floor(org.x / cellSize));
	.loc 16 522 10
	cvttss2sil	%xmm0, %eax	 # _6, tmp176
	movl	%eax, -12(%rbp)	 # tmp176, ix
 # src\main.cpp:523: 					int iy = static_cast<int>(std::floor(org.y / cellSize));
	.loc 16 523 47
	movss	-148(%rbp), %xmm0	 # org.y, _7
 # src\main.cpp:523: 					int iy = static_cast<int>(std::floor(org.y / cellSize));
	.loc 16 523 42
	movss	-96(%rbp), %xmm1	 # cellSize, cellSize.200_8
	divss	%xmm1, %xmm0	 # cellSize.200_8, _7
	movd	%xmm0, %eax	 # _7, _9
	movd	%eax, %xmm0	 # _9,
	call	_ZSt5floorf	 #
 # src\main.cpp:523: 					int iy = static_cast<int>(std::floor(org.y / cellSize));
	.loc 16 523 10
	cvttss2sil	%xmm0, %eax	 # _10, tmp177
	movl	%eax, -16(%rbp)	 # tmp177, iy
 # src\main.cpp:524: 					int iz = static_cast<int>(std::floor(org.z / cellSize));
	.loc 16 524 47
	movss	-144(%rbp), %xmm0	 # org.z, _11
 # src\main.cpp:524: 					int iz = static_cast<int>(std::floor(org.z / cellSize));
	.loc 16 524 42
	movss	-96(%rbp), %xmm1	 # cellSize, cellSize.201_12
	divss	%xmm1, %xmm0	 # cellSize.201_12, _11
	movd	%xmm0, %eax	 # _11, _13
	movd	%eax, %xmm0	 # _13,
	call	_ZSt5floorf	 #
 # src\main.cpp:524: 					int iz = static_cast<int>(std::floor(org.z / cellSize));
	.loc 16 524 10
	cvttss2sil	%xmm0, %eax	 # _14, tmp178
	movl	%eax, -20(%rbp)	 # tmp178, iz
 # src\main.cpp:526: 					if (ix < 0 || iy < 0 || iz < 0 ||
	.loc 16 526 6
	cmpl	$0, -12(%rbp)	 #, ix
	js	.L563	 #,
 # src\main.cpp:526: 					if (ix < 0 || iy < 0 || iz < 0 ||
	.loc 16 526 17 discriminator 1
	cmpl	$0, -16(%rbp)	 #, iy
	js	.L563	 #,
 # src\main.cpp:526: 					if (ix < 0 || iy < 0 || iz < 0 ||
	.loc 16 526 27 discriminator 2
	cmpl	$0, -20(%rbp)	 #, iz
	js	.L563	 #,
 # src\main.cpp:527: 					    ix >= matrix->w || iy >= matrix->h || iz >= matrix->d)
	.loc 16 527 24 discriminator 3
	movq	-48(%rbp), %rax	 # matrix, tmp179
	movl	32(%rax), %eax	 # matrix_106->w, _15
 # src\main.cpp:527: 					    ix >= matrix->w || iy >= matrix->h || iz >= matrix->d)
	.loc 16 527 10 discriminator 3
	movl	-12(%rbp), %edx	 # ix, ix.202_16
 # src\main.cpp:526: 					if (ix < 0 || iy < 0 || iz < 0 ||
	.loc 16 526 37 discriminator 3
	cmpl	%eax, %edx	 # _15, ix.202_16
	jnb	.L563	 #,
 # src\main.cpp:527: 					    ix >= matrix->w || iy >= matrix->h || iz >= matrix->d)
	.loc 16 527 43
	movq	-48(%rbp), %rax	 # matrix, tmp180
	movl	36(%rax), %eax	 # matrix_106->h, _17
 # src\main.cpp:527: 					    ix >= matrix->w || iy >= matrix->h || iz >= matrix->d)
	.loc 16 527 29
	movl	-16(%rbp), %edx	 # iy, iy.203_18
 # src\main.cpp:527: 					    ix >= matrix->w || iy >= matrix->h || iz >= matrix->d)
	.loc 16 527 26
	cmpl	%eax, %edx	 # _17, iy.203_18
	jnb	.L563	 #,
 # src\main.cpp:527: 					    ix >= matrix->w || iy >= matrix->h || iz >= matrix->d)
	.loc 16 527 62 discriminator 1
	movq	-48(%rbp), %rax	 # matrix, tmp181
	movl	40(%rax), %eax	 # matrix_106->d, _19
 # src\main.cpp:527: 					    ix >= matrix->w || iy >= matrix->h || iz >= matrix->d)
	.loc 16 527 48 discriminator 1
	movl	-20(%rbp), %edx	 # iz, iz.204_20
 # src\main.cpp:527: 					    ix >= matrix->w || iy >= matrix->h || iz >= matrix->d)
	.loc 16 527 45 discriminator 1
	cmpl	%eax, %edx	 # _19, iz.204_20
	jnb	.L563	 #,
 # src\main.cpp:532: 					int stepX = (dir.x >= 0) ? 1 : -1;
	.loc 16 532 23
	movss	-140(%rbp), %xmm0	 # dir.x, _21
 # src\main.cpp:532: 					int stepX = (dir.x >= 0) ? 1 : -1;
	.loc 16 532 31
	pxor	%xmm1, %xmm1	 # tmp182
	comiss	%xmm1, %xmm0	 # tmp182, _21
	jb	.L578	 #,
 # src\main.cpp:532: 					int stepX = (dir.x >= 0) ? 1 : -1;
	.loc 16 532 31 is_stmt 0 discriminator 1
	movl	$1, %eax	 #, iftmp.205_81
	jmp	.L536	 #
.L578:
 # src\main.cpp:532: 					int stepX = (dir.x >= 0) ? 1 : -1;
	.loc 16 532 31 discriminator 2
	movl	$-1, %eax	 #, iftmp.205_81
.L536:
 # src\main.cpp:532: 					int stepX = (dir.x >= 0) ? 1 : -1;
	.loc 16 532 10 is_stmt 1 discriminator 4
	movl	%eax, -52(%rbp)	 # iftmp.205_81, stepX
 # src\main.cpp:533: 					int stepY = (dir.y >= 0) ? 1 : -1;
	.loc 16 533 23 discriminator 4
	movss	-136(%rbp), %xmm0	 # dir.y, _22
 # src\main.cpp:533: 					int stepY = (dir.y >= 0) ? 1 : -1;
	.loc 16 533 31 discriminator 4
	pxor	%xmm1, %xmm1	 # tmp183
	comiss	%xmm1, %xmm0	 # tmp183, _22
	jb	.L579	 #,
 # src\main.cpp:533: 					int stepY = (dir.y >= 0) ? 1 : -1;
	.loc 16 533 31 is_stmt 0 discriminator 1
	movl	$1, %eax	 #, iftmp.206_82
	jmp	.L539	 #
.L579:
 # src\main.cpp:533: 					int stepY = (dir.y >= 0) ? 1 : -1;
	.loc 16 533 31 discriminator 2
	movl	$-1, %eax	 #, iftmp.206_82
.L539:
 # src\main.cpp:533: 					int stepY = (dir.y >= 0) ? 1 : -1;
	.loc 16 533 10 is_stmt 1 discriminator 4
	movl	%eax, -56(%rbp)	 # iftmp.206_82, stepY
 # src\main.cpp:534: 					int stepZ = (dir.z >= 0) ? 1 : -1;
	.loc 16 534 23 discriminator 4
	movss	-132(%rbp), %xmm0	 # dir.z, _23
 # src\main.cpp:534: 					int stepZ = (dir.z >= 0) ? 1 : -1;
	.loc 16 534 31 discriminator 4
	pxor	%xmm1, %xmm1	 # tmp184
	comiss	%xmm1, %xmm0	 # tmp184, _23
	jb	.L580	 #,
 # src\main.cpp:534: 					int stepZ = (dir.z >= 0) ? 1 : -1;
	.loc 16 534 31 is_stmt 0 discriminator 1
	movl	$1, %eax	 #, iftmp.207_83
	jmp	.L542	 #
.L580:
 # src\main.cpp:534: 					int stepZ = (dir.z >= 0) ? 1 : -1;
	.loc 16 534 31 discriminator 2
	movl	$-1, %eax	 #, iftmp.207_83
.L542:
 # src\main.cpp:534: 					int stepZ = (dir.z >= 0) ? 1 : -1;
	.loc 16 534 10 is_stmt 1 discriminator 4
	movl	%eax, -60(%rbp)	 # iftmp.207_83, stepZ
 # src\main.cpp:538: 					float invDx = (dir.x != 0) ? std::fabs(cellSize / dir.x) : std::numeric_limits<float>::infinity();
	.loc 16 538 25 discriminator 4
	movss	-140(%rbp), %xmm0	 # dir.x, _24
 # src\main.cpp:538: 					float invDx = (dir.x != 0) ? std::fabs(cellSize / dir.x) : std::numeric_limits<float>::infinity();
	.loc 16 538 33 discriminator 4
	pxor	%xmm1, %xmm1	 # tmp185
	ucomiss	%xmm1, %xmm0	 # tmp185, _24
	jp	.L572	 #,
	pxor	%xmm1, %xmm1	 # tmp186
	ucomiss	%xmm1, %xmm0	 # tmp186, _24
	je	.L543	 #,
.L572:
 # src\main.cpp:538: 					float invDx = (dir.x != 0) ? std::fabs(cellSize / dir.x) : std::numeric_limits<float>::infinity();
	.loc 16 538 44 discriminator 1
	movss	-96(%rbp), %xmm0	 # cellSize, cellSize.209_25
 # src\main.cpp:538: 					float invDx = (dir.x != 0) ? std::fabs(cellSize / dir.x) : std::numeric_limits<float>::infinity();
	.loc 16 538 60 discriminator 1
	movss	-140(%rbp), %xmm1	 # dir.x, _26
 # src\main.cpp:538: 					float invDx = (dir.x != 0) ? std::fabs(cellSize / dir.x) : std::numeric_limits<float>::infinity();
	.loc 16 538 44 discriminator 1
	divss	%xmm1, %xmm0	 # _26, cellSize.209_25
	movd	%xmm0, %eax	 # cellSize.209_25, _27
	movd	%eax, %xmm0	 # _27,
	call	_ZSt4fabsf	 #
	movd	%xmm0, %eax	 #, iftmp.208_84
	jmp	.L545	 #
.L543:
 # src\main.cpp:538: 					float invDx = (dir.x != 0) ? std::fabs(cellSize / dir.x) : std::numeric_limits<float>::infinity();
	.loc 16 538 101 discriminator 2
	call	_ZNSt14numeric_limitsIfE8infinityEv	 #
	movd	%xmm0, %eax	 #, iftmp.208_84
.L545:
 # src\main.cpp:538: 					float invDx = (dir.x != 0) ? std::fabs(cellSize / dir.x) : std::numeric_limits<float>::infinity();
	.loc 16 538 12 discriminator 4
	movl	%eax, -64(%rbp)	 # iftmp.208_84, invDx
 # src\main.cpp:539:     			    float invDy = (dir.y != 0) ? std::fabs(cellSize / dir.y) : std::numeric_limits<float>::infinity();
	.loc 16 539 31 discriminator 4
	movss	-136(%rbp), %xmm0	 # dir.y, _28
 # src\main.cpp:539:     			    float invDy = (dir.y != 0) ? std::fabs(cellSize / dir.y) : std::numeric_limits<float>::infinity();
	.loc 16 539 39 discriminator 4
	pxor	%xmm1, %xmm1	 # tmp187
	ucomiss	%xmm1, %xmm0	 # tmp187, _28
	jp	.L573	 #,
	pxor	%xmm1, %xmm1	 # tmp188
	ucomiss	%xmm1, %xmm0	 # tmp188, _28
	je	.L546	 #,
.L573:
 # src\main.cpp:539:     			    float invDy = (dir.y != 0) ? std::fabs(cellSize / dir.y) : std::numeric_limits<float>::infinity();
	.loc 16 539 50 discriminator 1
	movss	-96(%rbp), %xmm0	 # cellSize, cellSize.211_29
 # src\main.cpp:539:     			    float invDy = (dir.y != 0) ? std::fabs(cellSize / dir.y) : std::numeric_limits<float>::infinity();
	.loc 16 539 66 discriminator 1
	movss	-136(%rbp), %xmm1	 # dir.y, _30
 # src\main.cpp:539:     			    float invDy = (dir.y != 0) ? std::fabs(cellSize / dir.y) : std::numeric_limits<float>::infinity();
	.loc 16 539 50 discriminator 1
	divss	%xmm1, %xmm0	 # _30, cellSize.211_29
	movd	%xmm0, %eax	 # cellSize.211_29, _31
	movd	%eax, %xmm0	 # _31,
	call	_ZSt4fabsf	 #
	movd	%xmm0, %eax	 #, iftmp.210_85
	jmp	.L548	 #
.L546:
 # src\main.cpp:539:     			    float invDy = (dir.y != 0) ? std::fabs(cellSize / dir.y) : std::numeric_limits<float>::infinity();
	.loc 16 539 107 discriminator 2
	call	_ZNSt14numeric_limitsIfE8infinityEv	 #
	movd	%xmm0, %eax	 #, iftmp.210_85
.L548:
 # src\main.cpp:539:     			    float invDy = (dir.y != 0) ? std::fabs(cellSize / dir.y) : std::numeric_limits<float>::infinity();
	.loc 16 539 18 discriminator 4
	movl	%eax, -68(%rbp)	 # iftmp.210_85, invDy
 # src\main.cpp:540: 	    	    	float invDz = (dir.z != 0) ? std::fabs(cellSize / dir.z) : std::numeric_limits<float>::infinity();
	.loc 16 540 31 discriminator 4
	movss	-132(%rbp), %xmm0	 # dir.z, _32
 # src\main.cpp:540: 	    	    	float invDz = (dir.z != 0) ? std::fabs(cellSize / dir.z) : std::numeric_limits<float>::infinity();
	.loc 16 540 39 discriminator 4
	pxor	%xmm1, %xmm1	 # tmp189
	ucomiss	%xmm1, %xmm0	 # tmp189, _32
	jp	.L574	 #,
	pxor	%xmm1, %xmm1	 # tmp190
	ucomiss	%xmm1, %xmm0	 # tmp190, _32
	je	.L549	 #,
.L574:
 # src\main.cpp:540: 	    	    	float invDz = (dir.z != 0) ? std::fabs(cellSize / dir.z) : std::numeric_limits<float>::infinity();
	.loc 16 540 50 discriminator 1
	movss	-96(%rbp), %xmm0	 # cellSize, cellSize.213_33
 # src\main.cpp:540: 	    	    	float invDz = (dir.z != 0) ? std::fabs(cellSize / dir.z) : std::numeric_limits<float>::infinity();
	.loc 16 540 66 discriminator 1
	movss	-132(%rbp), %xmm1	 # dir.z, _34
 # src\main.cpp:540: 	    	    	float invDz = (dir.z != 0) ? std::fabs(cellSize / dir.z) : std::numeric_limits<float>::infinity();
	.loc 16 540 50 discriminator 1
	divss	%xmm1, %xmm0	 # _34, cellSize.213_33
	movd	%xmm0, %eax	 # cellSize.213_33, _35
	movd	%eax, %xmm0	 # _35,
	call	_ZSt4fabsf	 #
	movd	%xmm0, %eax	 #, iftmp.212_86
	jmp	.L551	 #
.L549:
 # src\main.cpp:540: 	    	    	float invDz = (dir.z != 0) ? std::fabs(cellSize / dir.z) : std::numeric_limits<float>::infinity();
	.loc 16 540 107 discriminator 2
	call	_ZNSt14numeric_limitsIfE8infinityEv	 #
	movd	%xmm0, %eax	 #, iftmp.212_86
.L551:
 # src\main.cpp:540: 	    	    	float invDz = (dir.z != 0) ? std::fabs(cellSize / dir.z) : std::numeric_limits<float>::infinity();
	.loc 16 540 18 discriminator 4
	movl	%eax, -72(%rbp)	 # iftmp.212_86, invDz
 # src\main.cpp:542: 					auto firstT = [&](float posComponent, float dirComponent, int step) -> float
	.loc 16 542 11 discriminator 4
	leaq	-96(%rbp), %rax	 #, tmp191
	movq	%rax, -160(%rbp)	 # tmp191, firstT.__cellSize
 # src\main.cpp:551: 					float tMaxX = firstT(org.x, dir.x, stepX);
	.loc 16 551 26 discriminator 4
	movss	-140(%rbp), %xmm1	 # dir.x, _36
	movss	-152(%rbp), %xmm0	 # org.x, _37
	movl	-52(%rbp), %edx	 # stepX, tmp192
	leaq	-160(%rbp), %rax	 #, tmp193
	movl	%edx, %r9d	 # tmp192,
	movaps	%xmm1, %xmm2	 # _36,
	movaps	%xmm0, %xmm1	 # _37,
	movq	%rax, %rcx	 # tmp193,
	call	_ZZN21WINDOWGraphicsOverlay11blitOverlayIZ7WinMainEUlvE_EEbP6HWND__RSt7barrierIT_ER6CameraRSt6atomicIbEjjENKUlffiE_clEffi	 #
	movd	%xmm0, %eax	 #, tmp194
	movl	%eax, -24(%rbp)	 # tmp194, tMaxX
 # src\main.cpp:552: 			        float tMaxY = firstT(org.y, dir.y, stepY);
	.loc 16 552 32 discriminator 4
	movss	-136(%rbp), %xmm1	 # dir.y, _38
	movss	-148(%rbp), %xmm0	 # org.y, _39
	movl	-56(%rbp), %edx	 # stepY, tmp195
	leaq	-160(%rbp), %rax	 #, tmp196
	movl	%edx, %r9d	 # tmp195,
	movaps	%xmm1, %xmm2	 # _38,
	movaps	%xmm0, %xmm1	 # _39,
	movq	%rax, %rcx	 # tmp196,
	call	_ZZN21WINDOWGraphicsOverlay11blitOverlayIZ7WinMainEUlvE_EEbP6HWND__RSt7barrierIT_ER6CameraRSt6atomicIbEjjENKUlffiE_clEffi	 #
	movd	%xmm0, %eax	 #, tmp197
	movl	%eax, -28(%rbp)	 # tmp197, tMaxY
 # src\main.cpp:553:         			float tMaxZ = firstT(org.z, dir.z, stepZ);
	.loc 16 553 32 discriminator 4
	movss	-132(%rbp), %xmm1	 # dir.z, _40
	movss	-144(%rbp), %xmm0	 # org.z, _41
	movl	-60(%rbp), %edx	 # stepZ, tmp198
	leaq	-160(%rbp), %rax	 #, tmp199
	movl	%edx, %r9d	 # tmp198,
	movaps	%xmm1, %xmm2	 # _40,
	movaps	%xmm0, %xmm1	 # _41,
	movq	%rax, %rcx	 # tmp199,
	call	_ZZN21WINDOWGraphicsOverlay11blitOverlayIZ7WinMainEUlvE_EEbP6HWND__RSt7barrierIT_ER6CameraRSt6atomicIbEjjENKUlffiE_clEffi	 #
	movd	%xmm0, %eax	 #, tmp200
	movl	%eax, -32(%rbp)	 # tmp200, tMaxZ
 # src\main.cpp:555: 					const float maxDist = 50.0f;   // world units
	.loc 16 555 18 discriminator 4
	movss	.LC77(%rip), %xmm0	 #, tmp201
	movss	%xmm0, -76(%rbp)	 # tmp201, maxDist
 # src\main.cpp:556:         			float traveled = 0.0f;
	.loc 16 556 18 discriminator 4
	pxor	%xmm0, %xmm0	 # tmp202
	movss	%xmm0, -36(%rbp)	 # tmp202, traveled
 # src\main.cpp:557:         			bool  hit      = false;
	.loc 16 557 18 discriminator 4
	movb	$0, -37(%rbp)	 #, hit
 # src\main.cpp:558:         			s8flagcell mat = 0x0;
	.loc 16 558 23 discriminator 4
	movw	$0, -40(%rbp)	 #, mat
 # src\main.cpp:560: 					while (traveled < maxDist)
	.loc 16 560 6 discriminator 4
	jmp	.L552	 #
.L560:
.LBB235:
 # src\main.cpp:562:         			    int flat = matrix->FlattenedIndex(ix, iy, iz);
	.loc 16 562 49
	movl	-20(%rbp), %r8d	 # iz, iz.214_42
	movl	-16(%rbp), %ecx	 # iy, iy.215_43
	movl	-12(%rbp), %edx	 # ix, ix.216_44
	movq	-48(%rbp), %rax	 # matrix, tmp203
	movl	%r8d, %r9d	 # iz.214_42,
	movl	%ecx, %r8d	 # iy.215_43,
	movq	%rax, %rcx	 # tmp203,
	call	_ZN6MATRIX14FlattenedIndexEjjj	 #
 # src\main.cpp:562:         			    int flat = matrix->FlattenedIndex(ix, iy, iz);
	.loc 16 562 20
	movl	%eax, -80(%rbp)	 # _45, flat
 # src\main.cpp:564: 						if(matrix->CELL_FRONT_BUFFER[flat].MaterialType & ~(CELL_AIR | CELL_CUSTOM))
	.loc 16 564 18
	movq	-48(%rbp), %rax	 # matrix, tmp204
	movq	8(%rax), %rax	 # matrix_106->CELL_FRONT_BUFFER, _46
 # src\main.cpp:564: 						if(matrix->CELL_FRONT_BUFFER[flat].MaterialType & ~(CELL_AIR | CELL_CUSTOM))
	.loc 16 564 36
	movl	-80(%rbp), %edx	 # flat, tmp205
	movslq	%edx, %rdx	 # tmp205, _47
 # src\main.cpp:564: 						if(matrix->CELL_FRONT_BUFFER[flat].MaterialType & ~(CELL_AIR | CELL_CUSTOM))
	.loc 16 564 40
	addq	%rdx, %rdx	 # _48
	addq	%rdx, %rax	 # _48, _49
 # src\main.cpp:564: 						if(matrix->CELL_FRONT_BUFFER[flat].MaterialType & ~(CELL_AIR | CELL_CUSTOM))
	.loc 16 564 42
	movzwl	(%rax), %eax	 # _49->MaterialType, _50
	movzwl	%ax, %eax	 # _50, _51
 # src\main.cpp:564: 						if(matrix->CELL_FRONT_BUFFER[flat].MaterialType & ~(CELL_AIR | CELL_CUSTOM))
	.loc 16 564 55
	andl	$-34, %eax	 #, _52
 # src\main.cpp:564: 						if(matrix->CELL_FRONT_BUFFER[flat].MaterialType & ~(CELL_AIR | CELL_CUSTOM))
	.loc 16 564 7
	testl	%eax, %eax	 # _52
	je	.L553	 #,
 # src\main.cpp:566:         			        hit = true;
	.loc 16 566 24
	movb	$1, -37(%rbp)	 #, hit
 # src\main.cpp:567:         			        mat |= matrix->CELL_FRONT_BUFFER[flat].MaterialType;
	.loc 16 567 35
	movq	-48(%rbp), %rax	 # matrix, tmp206
	movq	8(%rax), %rax	 # matrix_106->CELL_FRONT_BUFFER, _53
 # src\main.cpp:567:         			        mat |= matrix->CELL_FRONT_BUFFER[flat].MaterialType;
	.loc 16 567 53
	movl	-80(%rbp), %edx	 # flat, tmp207
	movslq	%edx, %rdx	 # tmp207, _54
 # src\main.cpp:567:         			        mat |= matrix->CELL_FRONT_BUFFER[flat].MaterialType;
	.loc 16 567 57
	addq	%rdx, %rdx	 # _55
	addq	%rdx, %rax	 # _55, _56
 # src\main.cpp:567:         			        mat |= matrix->CELL_FRONT_BUFFER[flat].MaterialType;
	.loc 16 567 59
	movzwl	(%rax), %eax	 # _56->MaterialType, _57
 # src\main.cpp:567:         			        mat |= matrix->CELL_FRONT_BUFFER[flat].MaterialType;
	.loc 16 567 24
	orw	%ax, -40(%rbp)	 # _57, mat
 # src\main.cpp:568:         			        break;
	.loc 16 568 20
	jmp	.L554	 #
.L553:
 # src\main.cpp:572:         			    if (tMaxX < tMaxY && tMaxX < tMaxZ)
	.loc 16 572 16
	movss	-28(%rbp), %xmm0	 # tMaxY, tmp208
	comiss	-24(%rbp), %xmm0	 # tMaxX, tmp208
	jbe	.L555	 #,
 # src\main.cpp:572:         			    if (tMaxX < tMaxY && tMaxX < tMaxZ)
	.loc 16 572 34 discriminator 1
	movss	-32(%rbp), %xmm0	 # tMaxZ, tmp209
	comiss	-24(%rbp), %xmm0	 # tMaxX, tmp209
	jbe	.L555	 #,
 # src\main.cpp:574:         			        ix += stepX;
	.loc 16 574 23
	movl	-52(%rbp), %eax	 # stepX, tmp210
	addl	%eax, -12(%rbp)	 # tmp210, ix
 # src\main.cpp:575:         			        traveled = tMaxX;
	.loc 16 575 29
	movss	-24(%rbp), %xmm0	 # tMaxX, tmp211
	movss	%xmm0, -36(%rbp)	 # tmp211, traveled
 # src\main.cpp:576:         			        tMaxX += invDx;
	.loc 16 576 26
	movss	-24(%rbp), %xmm0	 # tMaxX, tmp213
	addss	-64(%rbp), %xmm0	 # invDx, tmp212
	movss	%xmm0, -24(%rbp)	 # tmp212, tMaxX
	jmp	.L552	 #
.L555:
 # src\main.cpp:578:         			    else if (tMaxY < tMaxZ)
	.loc 16 578 21
	movss	-32(%rbp), %xmm0	 # tMaxZ, tmp214
	comiss	-28(%rbp), %xmm0	 # tMaxY, tmp214
	jbe	.L581	 #,
 # src\main.cpp:580:         			        iy += stepY;
	.loc 16 580 23
	movl	-56(%rbp), %eax	 # stepY, tmp215
	addl	%eax, -16(%rbp)	 # tmp215, iy
 # src\main.cpp:581:         			        traveled = tMaxY;
	.loc 16 581 29
	movss	-28(%rbp), %xmm0	 # tMaxY, tmp216
	movss	%xmm0, -36(%rbp)	 # tmp216, traveled
 # src\main.cpp:582:         			        tMaxY += invDy;
	.loc 16 582 26
	movss	-28(%rbp), %xmm0	 # tMaxY, tmp218
	addss	-68(%rbp), %xmm0	 # invDy, tmp217
	movss	%xmm0, -28(%rbp)	 # tmp217, tMaxY
	jmp	.L552	 #
.L581:
 # src\main.cpp:585:         			        iz += stepZ;
	.loc 16 585 23
	movl	-60(%rbp), %eax	 # stepZ, tmp219
	addl	%eax, -20(%rbp)	 # tmp219, iz
 # src\main.cpp:586:         			        traveled = tMaxZ;
	.loc 16 586 29
	movss	-32(%rbp), %xmm0	 # tMaxZ, tmp220
	movss	%xmm0, -36(%rbp)	 # tmp220, traveled
 # src\main.cpp:587:         			        tMaxZ += invDz;
	.loc 16 587 26
	movss	-32(%rbp), %xmm0	 # tMaxZ, tmp222
	addss	-72(%rbp), %xmm0	 # invDz, tmp221
	movss	%xmm0, -32(%rbp)	 # tmp221, tMaxZ
.L552:
.LBE235:
 # src\main.cpp:560: 					while (traveled < maxDist)
	.loc 16 560 22
	movss	.LC77(%rip), %xmm0	 #, tmp223
	comiss	-36(%rbp), %xmm0	 # traveled, tmp223
	ja	.L560	 #,
.L554:
 # src\main.cpp:591: 					pixelBuffer[j * WIDTH + i] = hit ? elementColor[ElementIndex(mat)] : 0xFFFFFFFF;
	.loc 16 591 39
	cmpb	$0, -37(%rbp)	 #, hit
	je	.L561	 #,
 # src\main.cpp:591: 					pixelBuffer[j * WIDTH + i] = hit ? elementColor[ElementIndex(mat)] : 0xFFFFFFFF;
	.loc 16 591 41 discriminator 1
	movq	elementColor(%rip), %rbx	 # elementColor, elementColor.218_195
 # src\main.cpp:591: 					pixelBuffer[j * WIDTH + i] = hit ? elementColor[ElementIndex(mat)] : 0xFFFFFFFF;
	.loc 16 591 66 discriminator 1
	movzwl	-40(%rbp), %eax	 # mat, _58
	movl	%eax, %ecx	 # _58,
	call	_Z12ElementIndext	 #
	movl	%eax, %eax	 # _59, _60
 # src\main.cpp:591: 					pixelBuffer[j * WIDTH + i] = hit ? elementColor[ElementIndex(mat)] : 0xFFFFFFFF;
	.loc 16 591 71 discriminator 1
	salq	$2, %rax	 #, _61
	addq	%rbx, %rax	 # elementColor.218_195, _62
 # src\main.cpp:591: 					pixelBuffer[j * WIDTH + i] = hit ? elementColor[ElementIndex(mat)] : 0xFFFFFFFF;
	.loc 16 591 39 discriminator 1
	movl	(%rax), %eax	 # *_62, iftmp.217_87
	jmp	.L562	 #
.L561:
 # src\main.cpp:591: 					pixelBuffer[j * WIDTH + i] = hit ? elementColor[ElementIndex(mat)] : 0xFFFFFFFF;
	.loc 16 591 39 is_stmt 0 discriminator 2
	movl	$-1, %eax	 #, iftmp.217_87
.L562:
 # src\main.cpp:591: 					pixelBuffer[j * WIDTH + i] = hit ? elementColor[ElementIndex(mat)] : 0xFFFFFFFF;
	.loc 16 591 31 is_stmt 1 discriminator 4
	movq	pixelBuffer(%rip), %rdx	 # pixelBuffer, pixelBuffer.219_63
 # src\main.cpp:591: 					pixelBuffer[j * WIDTH + i] = hit ? elementColor[ElementIndex(mat)] : 0xFFFFFFFF;
	.loc 16 591 20 discriminator 4
	movl	-4(%rbp), %ecx	 # j, tmp224
	imull	$800, %ecx, %r8d	 #, tmp224, _64
 # src\main.cpp:591: 					pixelBuffer[j * WIDTH + i] = hit ? elementColor[ElementIndex(mat)] : 0xFFFFFFFF;
	.loc 16 591 28 discriminator 4
	movl	-8(%rbp), %ecx	 # i, tmp225
	addl	%r8d, %ecx	 # _64, _65
	movslq	%ecx, %rcx	 # _65, _66
 # src\main.cpp:591: 					pixelBuffer[j * WIDTH + i] = hit ? elementColor[ElementIndex(mat)] : 0xFFFFFFFF;
	.loc 16 591 31 discriminator 4
	salq	$2, %rcx	 #, _67
	addq	%rcx, %rdx	 # _67, _68
 # src\main.cpp:591: 					pixelBuffer[j * WIDTH + i] = hit ? elementColor[ElementIndex(mat)] : 0xFFFFFFFF;
	.loc 16 591 33 discriminator 4
	movl	%eax, (%rdx)	 # iftmp.217_87, *_68
.LBE234:
 # src\main.cpp:517:     			for (int i = StartX; i < EndX; ++i)
	.loc 16 517 8 discriminator 4
	addl	$1, -8(%rbp)	 #, i
.L532:
 # src\main.cpp:517:     			for (int i = StartX; i < EndX; ++i)
	.loc 16 517 29 discriminator 1
	movl	-8(%rbp), %eax	 # i, i.220_69
 # src\main.cpp:517:     			for (int i = StartX; i < EndX; ++i)
	.loc 16 517 31 discriminator 1
	cmpl	72(%rbp), %eax	 # EndX, i.220_69
	jb	.L564	 #,
.L563:
.LBE233:
.LBE232:
 # src\main.cpp:515: 			for (int j = 0; j < HEIGHT; ++j)
	.loc 16 515 4 discriminator 2
	addl	$1, -4(%rbp)	 #, j
.L531:
 # src\main.cpp:515: 			for (int j = 0; j < HEIGHT; ++j)
	.loc 16 515 22 discriminator 1
	cmpl	$599, -4(%rbp)	 #, j
	jle	.L565	 #,
.LBE231:
 # src\main.cpp:595: 			SyncPoint.arrive_and_wait();
	.loc 16 595 29
	movq	40(%rbp), %rax	 # SyncPoint, tmp226
	movq	%rax, %rcx	 # tmp226,
	call	_ZNSt7barrierIZ7WinMainEUlvE_E15arrive_and_waitEv	 #
 # src\main.cpp:597: 			auto frameEnd = std::chrono::high_resolution_clock::now();
	.loc 16 597 59
	call	_ZNSt6chrono3_V212system_clock3nowEv	 #
	movq	%rax, -120(%rbp)	 # tmp228, frameEnd
 # src\main.cpp:598:     		auto elapsed = frameEnd - frameStart;
	.loc 16 598 31
	leaq	-112(%rbp), %rdx	 #, tmp229
	leaq	-120(%rbp), %rax	 #, tmp230
	movq	%rax, %rcx	 # tmp230,
	call	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE	 #
	movq	%rax, -128(%rbp)	 # tmp232, elapsed
 # src\main.cpp:602: 			if (elapsed < FrameDuration)
	.loc 16 602 16
	leaq	-89(%rbp), %rax	 #, tmp233
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp233,
	call	_ZNSt9__cmp_cat8__unspecC1EPS0_	 #
	leaq	-104(%rbp), %rdx	 #, tmp234
	leaq	-128(%rbp), %rax	 #, tmp235
	movq	%rax, %rcx	 # tmp235,
	call	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE	 #
	movl	%eax, %ecx	 #, D.238558
	movzbl	-89(%rbp), %eax	 # D.226463, tmp236
	movl	%eax, %edx	 # tmp236,
	call	_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE	 #
 # src\main.cpp:602: 			if (elapsed < FrameDuration)
	.loc 16 602 4
	testb	%al, %al	 # retval.221_124
	je	.L530	 #,
 # src\main.cpp:604:         		std::this_thread::sleep_for(FrameDuration - elapsed);
	.loc 16 604 53
	leaq	-128(%rbp), %rdx	 #, tmp237
	leaq	-104(%rbp), %rax	 #, tmp238
	movq	%rax, %rcx	 # tmp238,
	call	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_	 #
	movq	%rax, -88(%rbp)	 # tmp240, D.226464
 # src\main.cpp:604:         		std::this_thread::sleep_for(FrameDuration - elapsed);
	.loc 16 604 38
	leaq	-88(%rbp), %rax	 #, tmp241
	movq	%rax, %rcx	 # tmp241,
	call	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE	 #
.L530:
.LBE230:
 # src\main.cpp:511: 		while(running)
	.loc 16 511 3
	movq	56(%rbp), %rax	 # running, tmp242
	movq	%rax, %rcx	 # tmp242,
	call	_ZNKSt6atomicIbEcvbEv	 #
	testb	%al, %al	 # retval.222_111
	jne	.L567	 #,
 # src\main.cpp:607: 		return true;
	.loc 16 607 10
	movl	$1, %eax	 #, _112
 # src\main.cpp:608: 	}
	.loc 16 608 2
	addq	$216, %rsp	 #,
	popq	%rbx	 #
.LCFI594:
	popq	%rbp	 #
.LCFI595:
	ret	
.LFE11613:
	.seh_endproc
	.align 2
	.def	_ZNSt6threadC2IZ7WinMainEUlvE1_JEvEEOT_DpOT0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6threadC2IZ7WinMainEUlvE1_JEvEEOT_DpOT0_
_ZNSt6threadC2IZ7WinMainEUlvE1_JEvEEOT_DpOT0_:
.LFB11622:
	.loc 13 126 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI596:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI597:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI598:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI599:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI600:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI601:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # this, this
	movq	%rdx, 56(%rbp)	 # __f, __f
.LBB236:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:127:       {
	.loc 13 127 7
	movq	48(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6thread2idC1Ev	 #
.LBB237:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:137: 	auto __depend = nullptr;
	.loc 13 137 7
	movq	$0, -8(%rbp)	 #, __depend
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 29
	movl	$48, %ecx	 #,
.LEHB8:
	call	_Znwy	 #
.LEHE8:
	movq	%rax, %rbx	 # tmp87, _14
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 18
	movl	$1, %edi	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 29
	movq	56(%rbp), %rax	 # __f, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt7forwardIZ7WinMainEUlvE1_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _3,
	movq	%rbx, %rcx	 # _14,
.LEHB9:
	call	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEC1IJS3_EEEDpOT_	 #
.LEHE9:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 18 discriminator 4
	movl	$0, %edi	 #, _4
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rbx, %rdx	 # _14,
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 17 discriminator 4
	leaq	-16(%rbp), %rdx	 #, tmp90
	movq	48(%rbp), %rax	 # this, tmp91
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp91,
.LEHB10:
	call	_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE	 #
.LEHE10:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 18 discriminator 6
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev	 #
.LBE237:
.LBE236:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:145:       }
	.loc 13 145 7 discriminator 6
	jmp	.L588	 #
.L587:
.LBB239:
.LBB238:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 18
	movq	%rax, %rsi	 #, tmp95
	leaq	-16(%rbp), %rax	 #, tmp93
	movq	%rax, %rcx	 # tmp93,
	call	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev	 #
	jmp	.L584	 #
.L586:
	movq	%rax, %rsi	 #, tmp94
.L584:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 18 is_stmt 0 discriminator 3
	testb	%dil, %dil	 # _4
	je	.L585	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 13 142 29 is_stmt 1 discriminator 7
	movl	$48, %edx	 #,
	movq	%rbx, %rcx	 # _14,
	call	_ZdlPvy	 #
.L585:
	movq	%rsi, %rax	 # tmp94, D.239373
	movq	%rax, %rcx	 # D.239373,
.LEHB11:
	call	_Unwind_Resume	 #
	nop	
.LEHE11:
.L588:
.LBE238:
.LBE239:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:145:       }
	.loc 13 145 7
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI602:
	popq	%rsi	 #
.LCFI603:
	popq	%rdi	 #
.LCFI604:
	popq	%rbp	 #
.LCFI605:
	ret	
.LFE11622:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA11622:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE11622-.LLSDACSB11622
.LLSDACSB11622:
	.uleb128 .LEHB8-.LFB11622
	.uleb128 .LEHE8-.LEHB8
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB9-.LFB11622
	.uleb128 .LEHE9-.LEHB9
	.uleb128 .L586-.LFB11622
	.uleb128 0
	.uleb128 .LEHB10-.LFB11622
	.uleb128 .LEHE10-.LEHB10
	.uleb128 .L587-.LFB11622
	.uleb128 0
	.uleb128 .LEHB11-.LFB11622
	.uleb128 .LEHE11-.LEHB11
	.uleb128 0
	.uleb128 0
.LLSDACSE11622:
	.text
	.seh_endproc
	.def	_ZNSt6threadC1IZ7WinMainEUlvE1_JEvEEOT_DpOT0_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt6threadC1IZ7WinMainEUlvE1_JEvEEOT_DpOT0_,_ZNSt6threadC2IZ7WinMainEUlvE1_JEvEEOT_DpOT0_
	.section	.text$_ZNKSt13__atomic_baseIhEcvhEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt13__atomic_baseIhEcvhEv
	.def	_ZNKSt13__atomic_baseIhEcvhEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt13__atomic_baseIhEcvhEv
_ZNKSt13__atomic_baseIhEcvhEv:
.LFB11624:
	.loc 11 347 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI606:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI607:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, -8(%rbp)	 # tmp89, this
	movl	$5, -12(%rbp)	 #, __m
.LBB240:
.LBB241:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:484: 	  = __m & __memory_order_mask;
	.loc 11 484 10
	movl	-12(%rbp), %eax	 # __m, tmp90
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp90,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, -16(%rbp)	 # tmp91, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:485: 	__glibcxx_assert(__b != memory_order_release);
	.loc 11 485 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _7
	je	.L590	 #,
	cmpl	$3, -16(%rbp)	 #, __b
	jne	.L590	 #,
	movl	$1, %eax	 #, iftmp.181_8
	jmp	.L591	 #
.L590:
	movl	$0, %eax	 #, iftmp.181_8
.L591:
	testb	%al, %al	 # iftmp.181_8
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:486: 	__glibcxx_assert(__b != memory_order_acq_rel);
	.loc 11 486 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _12
	je	.L593	 #,
	cmpl	$4, -16(%rbp)	 #, __b
	jne	.L593	 #,
	movl	$1, %eax	 #, iftmp.183_13
	jmp	.L594	 #
.L593:
	movl	$0, %eax	 #, iftmp.183_13
.L594:
	testb	%al, %al	 # iftmp.183_13
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 11 488 25
	movq	-8(%rbp), %rax	 # this, _17
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 11 488 24
	movzbl	(%rax), %eax	 #* _17, D.239087
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 11 488 40
	nop	
.LBE241:
.LBE240:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:348:       { return load(); }
	.loc 11 348 24
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI608:
	ret	
.LFE11624:
	.seh_endproc
	.section	.text$_ZNSt13__atomic_baseIhEaNEh,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13__atomic_baseIhEaNEh
	.def	_ZNSt13__atomic_baseIhEaNEh;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13__atomic_baseIhEaNEh
_ZNSt13__atomic_baseIhEaNEh:
.LFB11625:
	.loc 11 416 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI609:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI610:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __i, tmp86
	movb	%al, 24(%rbp)	 # tmp87, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:417:       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
	.loc 11 417 34
	movzbl	24(%rbp), %r8d	 # __i, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:417:       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
	.loc 11 417 35
	movq	16(%rbp), %rdx	 # this, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:417:       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
	.loc 11 417 34
	movzbl	(%rdx), %eax	 #* _2, tmp90
.L599:
	movl	%eax, %ecx	 # tmp88, tmp89
	andl	%r8d, %ecx	 # _1, tmp89
	movl	%ecx, %r9d	 # tmp89, _7
	lock cmpxchgb	%cl, (%rdx)	 #, tmp89,* _2
	sete	%cl	 #, tmp91
	testb	%cl, %cl	 # tmp91
	je	.L599	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:417:       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
	.loc 11 417 72
	movl	%r9d, %eax	 # _7, <retval>
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:417:       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
	.loc 11 417 75
	popq	%rbp	 #
.LCFI611:
	ret	
.LFE11625:
	.seh_endproc
	.section	.text$_ZNSt13__atomic_baseIhEaSEh,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13__atomic_baseIhEaSEh
	.def	_ZNSt13__atomic_baseIhEaSEh;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13__atomic_baseIhEaSEh
_ZNSt13__atomic_baseIhEaSEh:
.LFB11626:
	.loc 11 354 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI612:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI613:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __i, tmp93
	movb	%al, 24(%rbp)	 # tmp94, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:356: 	store(__i);
	.loc 11 356 7
	movzbl	24(%rbp), %eax	 # __i, _1
	movq	16(%rbp), %rdx	 # this, tmp95
	movq	%rdx, -8(%rbp)	 # tmp95, this
	movb	%al, -9(%rbp)	 # _1, __i
	movl	$5, -16(%rbp)	 #, __m
.LBB242:
.LBB243:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:459: 	  = __m & __memory_order_mask;
	.loc 11 459 10
	movl	-16(%rbp), %eax	 # __m, tmp96
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp96,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, -20(%rbp)	 # tmp97, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:460: 	__glibcxx_assert(__b != memory_order_acquire);
	.loc 11 460 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _10
	je	.L602	 #,
	cmpl	$2, -20(%rbp)	 #, __b
	jne	.L602	 #,
	movl	$1, %eax	 #, iftmp.175_11
	jmp	.L603	 #
.L602:
	movl	$0, %eax	 #, iftmp.175_11
.L603:
	testb	%al, %al	 # iftmp.175_11
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:461: 	__glibcxx_assert(__b != memory_order_acq_rel);
	.loc 11 461 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _15
	je	.L605	 #,
	cmpl	$4, -20(%rbp)	 #, __b
	jne	.L605	 #,
	movl	$1, %eax	 #, iftmp.177_16
	jmp	.L606	 #
.L605:
	movl	$0, %eax	 #, iftmp.177_16
.L606:
	testb	%al, %al	 # iftmp.177_16
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:462: 	__glibcxx_assert(__b != memory_order_consume);
	.loc 11 462 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _20
	je	.L608	 #,
	cmpl	$1, -20(%rbp)	 #, __b
	jne	.L608	 #,
	movl	$1, %eax	 #, iftmp.179_21
	jmp	.L609	 #
.L608:
	movl	$0, %eax	 #, iftmp.179_21
.L609:
	testb	%al, %al	 # iftmp.179_21
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 11 464 18
	movzbl	-9(%rbp), %edx	 # __i, _25
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 11 464 19
	movq	-8(%rbp), %rax	 # this, _26
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 11 464 18
	xchgb	(%rax), %dl	 #,* _26, tmp99
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:465:       }
	.loc 11 465 7
	nop	
.LBE243:
.LBE242:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:357: 	return __i;
	.loc 11 357 9
	movzbl	24(%rbp), %eax	 # __i, _5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:358:       }
	.loc 11 358 7
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI614:
	ret	
.LFE11626:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IxS1_ILx1ELx1000000000EEvEERKNS0_IT_T0_EE,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IxS1_ILx1ELx1000000000EEvEERKNS0_IT_T0_EE
	.def	_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IxS1_ILx1ELx1000000000EEvEERKNS0_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IxS1_ILx1ELx1000000000EEvEERKNS0_IT_T0_EE
_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IxS1_ILx1ELx1000000000EEvEERKNS0_IT_T0_EE:
.LFB11629:
	.loc 14 513 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI615:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI616:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __d, __d
.LBB244:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 33
	movq	24(%rbp), %rax	 # __d, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt6chrono13duration_castINS_8durationIfSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movd	%eax, %xmm0	 # tmp84, tmp85
	movss	%xmm0, -4(%rbp)	 # tmp85, D.228184
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 44
	leaq	-4(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIfSt5ratioILx1ELx1EEE5countEv	 #
	movd	%xmm0, %eax	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 6
	movq	16(%rbp), %rdx	 # this, tmp87
	movl	%eax, (%rdx)	 # _1, this_3(D)->__r
.LBE244:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 50
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI617:
	ret	
.LFE11629:
	.seh_endproc
	.section	.text$_ZNKSt6chrono8durationIfSt5ratioILx1ELx1EEE5countEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6chrono8durationIfSt5ratioILx1ELx1EEE5countEv
	.def	_ZNKSt6chrono8durationIfSt5ratioILx1ELx1EEE5countEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6chrono8durationIfSt5ratioILx1ELx1EEE5countEv
_ZNKSt6chrono8durationIfSt5ratioILx1ELx1EEE5countEv:
.LFB11630:
	.loc 14 521 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI618:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI619:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 14 522 11
	movq	16(%rbp), %rax	 # this, tmp84
	movss	(%rax), %xmm0	 # this_2(D)->__r, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 14 522 16
	popq	%rbp	 #
.LCFI620:
	ret	
.LFE11630:
	.seh_endproc
	.section	.text$_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_,"x"
	.linkonce discard
	.globl	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_
	.def	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_
_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_:
.LFB11631:
	.loc 14 644 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI621:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI622:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI623:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI624:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 14
	movq	32(%rbp), %rax	 # __lhs, tmp87
	movq	(%rax), %rax	 # *__lhs_5(D), tmp88
	movq	%rax, -16(%rbp)	 # tmp88, D.228194
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 31
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rbx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 36
	movq	40(%rbp), %rax	 # __rhs, tmp90
	movq	(%rax), %rax	 # *__rhs_8(D), tmp91
	movq	%rax, -8(%rbp)	 # tmp91, D.228195
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 53
	leaq	-8(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 34
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
	movq	%rdx, -24(%rbp)	 # _3, D.228196
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 9
	leaq	-24(%rbp), %rdx	 #, tmp93
	leaq	-32(%rbp), %rax	 #, tmp94
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 55
	movq	-32(%rbp), %rax	 # D.228197, D.238307
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:651:       }
	.loc 14 651 7
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI625:
	popq	%rbp	 #
.LCFI626:
	ret	
.LFE11631:
	.seh_endproc
	.section	.text$_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv
	.def	_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv
_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv:
.LFB11802:
	.loc 10 301 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI627:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI628:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:302: 	{ return _M_addr == &_M_w._M_ver; }
	.loc 10 302 11
	movq	16(%rbp), %rax	 # this, tmp87
	movq	8(%rax), %rdx	 # this_5(D)->_M_addr, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:302: 	{ return _M_addr == &_M_w._M_ver; }
	.loc 10 302 23
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rax	 # this_5(D)->_M_w, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:302: 	{ return _M_addr == &_M_w._M_ver; }
	.loc 10 302 22
	addq	$64, %rax	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:302: 	{ return _M_addr == &_M_w._M_ver; }
	.loc 10 302 28
	cmpq	%rax, %rdx	 # _3, _1
	sete	%al	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:302: 	{ return _M_addr == &_M_w._M_ver; }
	.loc 10 302 36
	popq	%rbp	 #
.LCFI629:
	ret	
.LFE11802:
	.seh_endproc
	.section	.text$_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev
	.def	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev
_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev:
.LFB11808:
	.loc 10 378 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI630:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI631:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB245:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:381: 	    _M_w._M_leave_wait();
	.loc 10 381 6
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_4(D)->D.157062._M_w, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:381: 	    _M_w._M_leave_wait();
	.loc 10 381 24
	movq	%rax, %rcx	 # _2,
	call	_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv	 #
.LBE245:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:382: 	}
	.loc 10 382 2
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI632:
	ret	
.LFE11808:
	.seh_endproc
	.section	.text$_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_,"x"
	.linkonce discard
	.globl	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_
	.def	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_
_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_:
.LFB11814:
	.loc 20 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI633:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI634:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 77
	popq	%rbp	 #
.LCFI635:
	ret	
.LFE11814:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE:
.LFB11815:
	.loc 14 208 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI636:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI637:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 14 212 34
	movq	16(%rbp), %rax	 # __d, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rcx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 14 212 38
	movabsq	$1237940039285380275, %rdx	 #, tmp88
	movq	%rcx, %rax	 # _1, tmp94
	imulq	%rdx	 # tmp88
	movq	%rdx, %rax	 # tmp87, tmp87
	sarq	$26, %rax	 #, tmp87
	sarq	$63, %rcx	 #, _1
	movq	%rcx, %rdx	 # _1, tmp90
	subq	%rdx, %rax	 # tmp90, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:211: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 211 20
	movq	%rax, -8(%rbp)	 # _2, D.231547
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:211: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 211 13
	leaq	-8(%rbp), %rdx	 #, tmp91
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 14 212 67
	movq	-16(%rbp), %rax	 # D.231548, D.238129
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:213: 	  }
	.loc 14 213 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI638:
	ret	
.LFE11815:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE:
.LFB11816:
	.loc 14 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI639:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI640:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 14 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 14 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI641:
	ret	
.LFE11816:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE:
.LFB11825:
	.loc 14 221 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI642:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI643:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 14 225 34
	movq	16(%rbp), %rax	 # __d, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 14 225 38
	imulq	$1000000, %rax, %rax	 #, _1, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 224 20
	movq	%rax, -8(%rbp)	 # _2, D.231786
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 224 13
	leaq	-8(%rbp), %rdx	 #, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 14 225 67
	movq	-16(%rbp), %rax	 # D.231787, D.238069
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:226: 	  }
	.loc 14 226 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI644:
	ret	
.LFE11825:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv,"x"
	.linkonce discard
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv:
.LFB11827:
	.loc 14 607 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI645:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI646:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 14 608 46
	call	_ZNSt6chrono15duration_valuesIxE4zeroEv	 #
	movq	%rax, -8(%rbp)	 # _1, D.231912
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 14 608 11
	leaq	-8(%rbp), %rdx	 #, tmp85
	leaq	-16(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 14 608 48
	movq	-16(%rbp), %rax	 # D.231913, D.238426
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 14 608 51
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI647:
	ret	
.LFE11827:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE:
.LFB11828:
	.loc 14 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI648:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI649:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 14 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 14 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI650:
	ret	
.LFE11828:
	.seh_endproc
	.section	.text$_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_,"x"
	.linkonce discard
	.globl	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
	.def	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_:
.LFB11829:
	.loc 14 644 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI651:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI652:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI653:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI654:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 14
	movq	32(%rbp), %rax	 # __lhs, tmp87
	movq	(%rax), %rax	 # *__lhs_5(D), tmp88
	movq	%rax, -16(%rbp)	 # tmp88, D.231975
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 31
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
	movq	%rax, %rbx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 36
	movq	40(%rbp), %rdx	 # __rhs, tmp90
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 53
	leaq	-8(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 34
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
	movq	%rdx, -24(%rbp)	 # _3, D.232001
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 9
	leaq	-24(%rbp), %rdx	 #, tmp93
	leaq	-32(%rbp), %rax	 #, tmp94
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 55
	movq	-32(%rbp), %rax	 # D.232002, D.238448
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:651:       }
	.loc 14 651 7
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI655:
	popq	%rbp	 #
.LCFI656:
	ret	
.LFE11829:
	.seh_endproc
	.section	.text$_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_,"x"
	.linkonce discard
	.globl	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
	.def	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_:
.LFB11833:
	.loc 14 644 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI657:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI658:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI659:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI660:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 14
	movq	32(%rbp), %rax	 # __lhs, tmp87
	movq	(%rax), %rax	 # *__lhs_5(D), tmp88
	movq	%rax, -16(%rbp)	 # tmp88, D.232046
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 31
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rbx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 36
	movq	40(%rbp), %rdx	 # __rhs, tmp90
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 53
	leaq	-8(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 34
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
	movq	%rdx, -24(%rbp)	 # _3, D.232061
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 9
	leaq	-24(%rbp), %rdx	 #, tmp93
	leaq	-32(%rbp), %rax	 #, tmp94
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 55
	movq	-32(%rbp), %rax	 # D.232062, D.238133
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:651:       }
	.loc 14 651 7
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI661:
	popq	%rbp	 #
.LCFI662:
	ret	
.LFE11833:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE:
.LFB11835:
	.loc 14 196 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI663:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI664:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:199: 	    return _ToDur(static_cast<__to_rep>(__d.count()));
	.loc 14 199 51
	movq	16(%rbp), %rax	 # __d, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:199: 	    return _ToDur(static_cast<__to_rep>(__d.count()));
	.loc 14 199 20
	movq	%rax, -8(%rbp)	 # _1, D.232099
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:199: 	    return _ToDur(static_cast<__to_rep>(__d.count()));
	.loc 14 199 13
	leaq	-8(%rbp), %rdx	 #, tmp86
	leaq	-16(%rbp), %rax	 #, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:199: 	    return _ToDur(static_cast<__to_rep>(__d.count()));
	.loc 14 199 54
	movq	-16(%rbp), %rax	 # D.232100, D.238152
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:200: 	  }
	.loc 14 200 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI665:
	ret	
.LFE11835:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_:
.LFB11854:
	.loc 17 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI666:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI667:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI668:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI669:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
.LBB246:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 38
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 56
	movq	40(%rbp), %rbx	 # __p, __p.91_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 53
	movq	32(%rbp), %rax	 # this, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 56
	movq	%rbx, (%rax)	 # __p.91_2, *_3
.LBE246:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 63
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI670:
	popq	%rbp	 #
.LCFI671:
	ret	
.LFE11854:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv:
.LFB11856:
	.loc 17 189 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI672:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI673:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 57
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 56
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 64
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI674:
	ret	
.LFE11856:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv
	.def	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv
_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv:
.LFB11857:
	.loc 17 732 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI675:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI676:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 17 733 31
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 17 733 35
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI677:
	ret	
.LFE11857:
	.seh_endproc
	.section	.text$_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_
	.def	_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_
_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_:
.LFB11858:
	.loc 17 128 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI678:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI679:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __ptr, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 17 132 4
	cmpq	$0, 24(%rbp)	 #, __ptr
	je	.L645	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 17 132 4 is_stmt 0 discriminator 1
	movq	24(%rbp), %rax	 # __ptr, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZdaPv	 #
.L645:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:133: 	}
	.loc 17 133 2 is_stmt 1
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI680:
	ret	
.LFE11858:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_:
.LFB11859:
	.loc 17 198 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI681:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI682:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI683:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI684:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:200: 	const pointer __old_p = _M_ptr();
	.loc 17 200 32
	movq	32(%rbp), %rax	 # this, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:200: 	const pointer __old_p = _M_ptr();
	.loc 17 200 16
	movq	(%rax), %rax	 # *_1, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __old_p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 17 201 11
	movq	40(%rbp), %rbx	 # __p, __p.92_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 17 201 8
	movq	32(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 17 201 11
	movq	%rbx, (%rax)	 # __p.92_2, *_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:202: 	if (__old_p)
	.loc 17 202 2
	cmpq	$0, -8(%rbp)	 #, __old_p
	je	.L648	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:203: 	  _M_deleter()(__old_p);
	.loc 17 203 14
	movq	32(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv	 #
	movq	%rax, %rcx	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:203: 	  _M_deleter()(__old_p);
	.loc 17 203 16
	movq	-8(%rbp), %rax	 # __old_p, tmp90
	movq	%rax, %rdx	 # tmp90,
	call	_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_	 #
.L648:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:204:       }
	.loc 17 204 7
	nop	
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI685:
	popq	%rbp	 #
.LCFI686:
	ret	
.LFE11859:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv:
.LFB11860:
	.loc 17 207 15
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI687:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI688:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:209: 	pointer __p = _M_ptr();
	.loc 17 209 22
	movq	16(%rbp), %rax	 # this, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:209: 	pointer __p = _M_ptr();
	.loc 17 209 10
	movq	(%rax), %rax	 # *_1, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:210: 	_M_ptr() = nullptr;
	.loc 17 210 8
	movq	16(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:210: 	_M_ptr() = nullptr;
	.loc 17 210 11
	movq	$0, (%rax)	 #, *_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:211: 	return __p;
	.loc 17 211 9
	movq	-8(%rbp), %rax	 # __p, _9
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:212:       }
	.loc 17 212 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI689:
	ret	
.LFE11860:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv:
.LFB11861:
	.loc 17 193 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI690:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI691:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 61
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 60
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 68
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI692:
	ret	
.LFE11861:
	.seh_endproc
	.section	.text$_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE,"x"
	.linkonce discard
	.globl	_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE
	.def	_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE
_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE:
.LFB11862:
	.loc 20 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI693:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI694:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 20 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 20 78 39
	popq	%rbp	 #
.LCFI695:
	ret	
.LFE11862:
	.seh_endproc
	.section	.text$_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv
	.def	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv
_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv:
.LFB11863:
	.loc 17 726 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI696:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI697:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 17 727 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 17 727 31
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI698:
	ret	
.LFE11863:
	.seh_endproc
	.section	.text$_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_,"x"
	.linkonce discard
	.globl	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_
	.def	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_
_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_:
.LFB11864:
	.loc 20 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI699:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI700:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 77
	popq	%rbp	 #
.LCFI701:
	ret	
.LFE11864:
	.seh_endproc
	.section	.text$_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv
	.def	_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv
_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv:
.LFB11867:
	.file 23 "C:/msys64/mingw64/include/c++/12.2.0/tuple"
	.loc 23 1049 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI702:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI703:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB247:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 23 1051 15
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev	 #
.LBE247:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 23 1051 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI704:
	ret	
.LFE11867:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA11867:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE11867-.LLSDACSB11867
.LLSDACSB11867:
.LLSDACSE11867:
	.section	.text$_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_
	.def	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_
_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_:
.LFB11870:
	.loc 17 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI705:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI706:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI707:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI708:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
.LBB248:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 38
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 56
	movq	40(%rbp), %rbx	 # __p, __p.95_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 53
	movq	32(%rbp), %rax	 # this, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 56
	movq	%rbx, (%rax)	 # __p.95_2, *_3
.LBE248:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 63
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI709:
	popq	%rbp	 #
.LCFI710:
	ret	
.LFE11870:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv
	.def	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv
_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv:
.LFB11872:
	.loc 17 189 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI711:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI712:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 57
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 56
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 64
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI713:
	ret	
.LFE11872:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv
	.def	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv
_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv:
.LFB11873:
	.loc 17 732 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI714:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI715:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 17 733 31
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 17 733 35
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI716:
	ret	
.LFE11873:
	.seh_endproc
	.section	.text$_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_
	.def	_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_
_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_:
.LFB11874:
	.loc 17 128 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI717:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI718:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI719:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI720:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __ptr, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 17 132 4
	cmpq	$0, 40(%rbp)	 #, __ptr
	je	.L669	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 17 132 4 is_stmt 0 discriminator 1
	movq	40(%rbp), %rax	 # __ptr, tmp91
	subq	$8, %rax	 #, _1
	movq	(%rax), %rax	 # *_1, _2
	leaq	0(,%rax,8), %rdx	 #, _3
	movq	40(%rbp), %rax	 # __ptr, tmp92
	leaq	(%rdx,%rax), %rbx	 #, _9
.L668:
	cmpq	40(%rbp), %rbx	 # __ptr, _9
	je	.L667	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 17 132 4
	subq	$8, %rbx	 #, _9
	movq	%rbx, %rcx	 # _9,
	call	_ZNSt6threadD1Ev	 #
	jmp	.L668	 #
.L667:
	movq	40(%rbp), %rax	 # __ptr, tmp93
	subq	$8, %rax	 #, _4
	movq	(%rax), %rax	 # *_4, _5
	addq	$1, %rax	 #, _6
	leaq	0(,%rax,8), %rdx	 #, _7
	movq	40(%rbp), %rax	 # __ptr, tmp94
	subq	$8, %rax	 #, _8
	movq	%rax, %rcx	 # _8,
	call	_ZdaPvy	 #
.L669:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:133: 	}
	.loc 17 133 2 is_stmt 1
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI721:
	popq	%rbp	 #
.LCFI722:
	ret	
.LFE11874:
	.seh_endproc
	.text
	.def	_ZSt4moveIRZ7WinMainEUlvE_EONSt16remove_referenceIT_E4typeEOS3_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRZ7WinMainEUlvE_EONSt16remove_referenceIT_E4typeEOS3_
_ZSt4moveIRZ7WinMainEUlvE_EONSt16remove_referenceIT_E4typeEOS3_:
.LFB11875:
	.loc 20 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI723:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI724:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 77
	popq	%rbp	 #
.LCFI725:
	ret	
.LFE11875:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EEaSEOS7_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EEaSEOS7_
_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EEaSEOS7_:
.LFB11878:
	.loc 17 235 24
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI726:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI727:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.214032, D.214032
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:235:       __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
	.loc 17 235 24
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.214032, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEaSEOS7_	 #
	movq	16(%rbp), %rax	 # this, _7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI728:
	ret	
.LFE11878:
	.seh_endproc
	.align 2
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEaSEOS7_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEaSEOS7_
_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEaSEOS7_:
.LFB11877:
	.loc 17 680 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI729:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI730:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.214253, D.214253
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:680:       operator=(unique_ptr&&) = default;
	.loc 17 680 7
	movq	24(%rbp), %rdx	 # D.214253, _1
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EEaSEOS7_	 #
	movq	16(%rbp), %rax	 # this, _7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI731:
	ret	
.LFE11877:
	.seh_endproc
	.align 2
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC2ExS0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC2ExS0_
_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC2ExS0_:
.LFB11879:
	.loc 19 151 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI732:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI733:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI734:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI735:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __expected, __expected
	movq	%r8, %rbx	 #, tmp91
.LBB249:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:152: 	  : _M_expected(__expected), _M_expected_adjustment(0),
	.loc 19 152 6
	movq	32(%rbp), %rax	 # this, tmp92
	movq	40(%rbp), %rdx	 # __expected, tmp93
	movq	%rdx, (%rax)	 # tmp93, this_10(D)->_M_expected
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:154: 	    _M_phase(static_cast<__barrier_phase_t>(0))
	.loc 19 154 48
	movq	32(%rbp), %rax	 # this, tmp94
	addq	$8, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IS6_vEEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:152: 	  : _M_expected(__expected), _M_expected_adjustment(0),
	.loc 19 152 31
	movq	32(%rbp), %rax	 # this, tmp95
	addq	$16, %rax	 #, _2
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _2,
	call	_ZNSt13__atomic_baseIxEC1Ex	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:153: 	    _M_completion(move(__completion)),
	.loc 19 153 24
	movq	%rbx, %rcx	 # tmp91,
	call	_ZSt4moveIRZ7WinMainEUlvE_EONSt16remove_referenceIT_E4typeEOS3_	 #
	movq	%rax, %rcx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:153: 	    _M_completion(move(__completion)),
	.loc 19 153 6
	movq	32(%rbp), %r8	 # this, tmp96
	movq	(%rcx), %rax	 # MEM[(struct ._anon_610 &)_3], tmp97
	movq	8(%rcx), %rdx	 # MEM[(struct ._anon_610 &)_3],
	movq	%rax, 24(%r8)	 # tmp97, this_10(D)->_M_completion
	movq	%rdx, 32(%r8)	 #, this_10(D)->_M_completion
	movq	16(%rcx), %rax	 # MEM[(struct ._anon_610 &)_3], tmp98
	movq	%rax, 40(%r8)	 # tmp98, this_10(D)->_M_completion
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:154: 	    _M_phase(static_cast<__barrier_phase_t>(0))
	.loc 19 154 6
	movq	32(%rbp), %rax	 # this, tmp99
	movb	$0, 48(%rax)	 #, this_10(D)->_M_phase
.LBB250:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:156: 	size_t const __count = (_M_expected + 1) >> 1;
	.loc 19 156 26
	movq	32(%rbp), %rax	 # this, tmp100
	movq	(%rax), %rax	 # this_10(D)->_M_expected, _4
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:156: 	size_t const __count = (_M_expected + 1) >> 1;
	.loc 19 156 38
	addq	$1, %rax	 #, _5
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:156: 	size_t const __count = (_M_expected + 1) >> 1;
	.loc 19 156 43
	sarq	%rax	 # _6
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:156: 	size_t const __count = (_M_expected + 1) >> 1;
	.loc 19 156 15
	movq	%rax, -8(%rbp)	 # _6, __count
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:158: 	_M_state = std::make_unique<__state_t[]>(__count);
	.loc 19 158 11
	leaq	-16(%rbp), %rax	 #, tmp101
	movq	-8(%rbp), %rdx	 # __count, tmp102
	movq	%rax, %rcx	 # tmp101,
.LEHB12:
	call	_ZSt11make_uniqueIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEENSt8__detail9_MakeUniqIT_E7__arrayEy	 #
.LEHE12:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:158: 	_M_state = std::make_unique<__state_t[]>(__count);
	.loc 19 158 11 is_stmt 0 discriminator 2
	movq	32(%rbp), %rax	 # this, tmp103
	leaq	8(%rax), %rcx	 #, _7
	leaq	-16(%rbp), %rax	 #, tmp104
	movq	%rax, %rdx	 # tmp104,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEaSEOS7_	 #
	leaq	-16(%rbp), %rax	 #, tmp105
	movq	%rax, %rcx	 # tmp105,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED1Ev	 #
.LBE250:
.LBE249:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:159:       }
	.loc 19 159 7 is_stmt 1 discriminator 2
	jmp	.L679	 #
.L678:
.LBB251:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:159:       }
	.loc 19 159 7 is_stmt 0
	movq	%rax, %rbx	 #, tmp107
	movq	32(%rbp), %rax	 # this, tmp106
	addq	$8, %rax	 #, _8
	movq	%rax, %rcx	 # _8,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED1Ev	 #
	movq	%rbx, %rax	 # tmp107, D.239374
	movq	%rax, %rcx	 # D.239374,
.LEHB13:
	call	_Unwind_Resume	 #
	nop	
.LEHE13:
.L679:
.LBE251:
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI736:
	popq	%rbp	 #
.LCFI737:
	ret	
.LFE11879:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA11879:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE11879-.LLSDACSB11879
.LLSDACSB11879:
	.uleb128 .LEHB12-.LFB11879
	.uleb128 .LEHE12-.LEHB12
	.uleb128 .L678-.LFB11879
	.uleb128 0
	.uleb128 .LEHB13-.LFB11879
	.uleb128 .LEHE13-.LEHB13
	.uleb128 0
	.uleb128 0
.LLSDACSE11879:
	.text
	.seh_endproc
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC1ExS0_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC1ExS0_,_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC2ExS0_
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv:
.LFB11881:
	.loc 17 189 18 is_stmt 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI738:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI739:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 57
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 56
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 64
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI740:
	ret	
.LFE11881:
	.seh_endproc
	.align 2
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE11get_deleterEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE11get_deleterEv
_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE11get_deleterEv:
.LFB11882:
	.loc 17 732 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI741:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI742:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 17 733 31
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 17 733 35
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI743:
	ret	
.LFE11882:
	.seh_endproc
	.align 2
	.def	_ZNKSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEclIS3_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS4_E5valueEvE4typeEPS9_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEclIS3_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS4_E5valueEvE4typeEPS9_
_ZNKSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEclIS3_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS4_E5valueEvE4typeEPS9_:
.LFB11883:
	.loc 17 128 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI744:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI745:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __ptr, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 17 132 4
	cmpq	$0, 24(%rbp)	 #, __ptr
	je	.L686	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 17 132 4 is_stmt 0 discriminator 1
	movq	24(%rbp), %rax	 # __ptr, tmp82
	movl	$64, %edx	 #,
	movq	%rax, %rcx	 # tmp82,
	call	_ZdaPvSt11align_val_t	 #
.L686:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:133: 	}
	.loc 17 133 2 is_stmt 1
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI746:
	ret	
.LFE11883:
	.seh_endproc
	.section	.text$_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv
	.def	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv
_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv:
.LFB11884:
	.loc 17 726 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI747:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI748:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 17 727 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 17 727 31
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI749:
	ret	
.LFE11884:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt7barrierIZ7WinMainEUlvE_E15arrive_and_waitEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt7barrierIZ7WinMainEUlvE_E15arrive_and_waitEv
_ZNSt7barrierIZ7WinMainEUlvE_E15arrive_and_waitEv:
.LFB11885:
	.loc 19 247 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI750:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI751:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:248:       { wait(arrive()); }
	.loc 19 248 20
	movq	16(%rbp), %rax	 # this, tmp82
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt7barrierIZ7WinMainEUlvE_E6arriveEx	 #
	movb	%al, -1(%rbp)	 # tmp84, D.232621
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:248:       { wait(arrive()); }
	.loc 19 248 13
	leaq	-1(%rbp), %rdx	 #, tmp85
	movq	16(%rbp), %rax	 # this, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt7barrierIZ7WinMainEUlvE_E4waitEONS1_13arrival_tokenE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:248:       { wait(arrive()); }
	.loc 19 248 25
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI752:
	ret	
.LFE11885:
	.seh_endproc
	.section	.text$_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_,"x"
	.linkonce discard
	.globl	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
	.def	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_:
.LFB11886:
	.loc 14 644 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI753:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI754:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI755:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI756:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 14
	movq	32(%rbp), %rdx	 # __lhs, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 31
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rbx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 36
	movq	40(%rbp), %rax	 # __rhs, tmp90
	movq	(%rax), %rax	 # *__rhs_8(D), tmp91
	movq	%rax, -8(%rbp)	 # tmp91, D.232633
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 53
	leaq	-8(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 34
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
	movq	%rdx, -24(%rbp)	 # _3, D.232634
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 9
	leaq	-24(%rbp), %rdx	 #, tmp93
	leaq	-32(%rbp), %rax	 #, tmp94
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 14 650 55
	movq	-32(%rbp), %rax	 # D.232635, D.238079
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:651:       }
	.loc 14 651 7
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI757:
	popq	%rbp	 #
.LCFI758:
	ret	
.LFE11886:
	.seh_endproc
	.text
	.def	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE
_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE:
.LFB11887:
	.loc 20 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI759:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI760:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 20 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 20 78 39
	popq	%rbp	 #
.LCFI761:
	ret	
.LFE11887:
	.seh_endproc
	.section	.text$_ZNSt6thread6_StateC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6thread6_StateC2Ev
	.def	_ZNSt6thread6_StateC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6thread6_StateC2Ev
_ZNSt6thread6_StateC2Ev:
.LFB11890:
	.loc 13 67 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI762:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI763:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB252:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:67:     struct _State
	.loc 13 67 12
	movq	.refptr._ZTVNSt6thread6_StateE(%rip), %rax	 #, tmp83
	leaq	16(%rax), %rdx	 #, _1
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->_vptr._State
.LBE252:
	nop	
	popq	%rbp	 #
.LCFI764:
	ret	
.LFE11890:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC2IJS3_EEEDpOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC2IJS3_EEEDpOT_
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC2IJS3_EEEDpOT_:
.LFB11898:
	.loc 13 205 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI765:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI766:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI767:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI768:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __args#0, __args#0
.LBB253:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:206: 	  : _M_func{{std::forward<_Args>(__args)...}}
	.loc 13 206 46
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6thread6_StateC2Ev	 #
	leaq	16+_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE(%rip), %rdx	 #, _2
	movq	32(%rbp), %rax	 # this, tmp87
	movq	%rdx, (%rax)	 # _2, this_7(D)->D.222981._vptr._State
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:206: 	  : _M_func{{std::forward<_Args>(__args)...}}
	.loc 13 206 6
	movq	32(%rbp), %rax	 # this, tmp88
	leaq	8(%rax), %rbx	 #, _3
	movq	40(%rbp), %rax	 # __args#0, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _4,
	movq	%rbx, %rcx	 # _3,
	call	_ZNSt5tupleIJZ7WinMainEUlvE0_EEC1IJS0_ELb1ELb1EEEDpOT_	 #
.LBE253:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:207: 	  { }
	.loc 13 207 6
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI769:
	popq	%rbp	 #
.LCFI770:
	ret	
.LFE11898:
	.seh_endproc
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC1IJS3_EEEDpOT_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC1IJS3_EEEDpOT_,_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC2IJS3_EEEDpOT_
	.section	.text$_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_
	.def	_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_
_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_:
.LFB11903:
	.loc 17 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI771:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI772:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.225990, D.225990
.LBB254:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 17 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.225990, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_	 #
.LBE254:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI773:
	ret	
.LFE11903:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_
	.def	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_
_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_:
.LFB11905:
	.loc 17 309 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI774:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI775:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
.LBB255:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:310: 	: _M_t(__p)
	.loc 17 310 4
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __p, tmp83
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_	 #
.LBE255:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:311:         { }
	.loc 17 311 11
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI776:
	ret	
.LFE11905:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev
	.def	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev
_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev:
.LFB11908:
	.loc 17 390 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI777:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI778:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI779:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI780:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
.LBB256:
.LBB257:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:394: 	auto& __ptr = _M_t._M_ptr();
	.loc 17 394 27
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv	 #
	movq	%rax, -8(%rbp)	 # tmp87, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:395: 	if (__ptr != nullptr)
	.loc 17 395 12
	movq	-8(%rbp), %rax	 # __ptr, tmp88
	movq	(%rax), %rax	 # *__ptr_10, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:395: 	if (__ptr != nullptr)
	.loc 17 395 2
	testq	%rax, %rax	 # _2
	je	.L699	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:396: 	  get_deleter()(std::move(__ptr));
	.loc 17 396 15
	movq	32(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv	 #
	movq	%rax, %rbx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:396: 	  get_deleter()(std::move(__ptr));
	.loc 17 396 27
	movq	-8(%rbp), %rax	 # __ptr, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:396: 	  get_deleter()(std::move(__ptr));
	.loc 17 396 17
	movq	(%rax), %rax	 # *_4, _5
	movq	%rax, %rdx	 # _5,
	movq	%rbx, %rcx	 # _3,
	call	_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_	 #
.L699:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:397: 	__ptr = pointer();
	.loc 17 397 8
	movq	-8(%rbp), %rax	 # __ptr, tmp91
	movq	$0, (%rax)	 #, *__ptr_10
.LBE257:
.LBE256:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:398:       }
	.loc 17 398 7
	nop	
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI781:
	popq	%rbp	 #
.LCFI782:
	ret	
.LFE11908:
	.seh_endproc
	.text
	.def	_ZSt7forwardIZ7WinMainEUlvE1_EOT_RNSt16remove_referenceIS1_E4typeE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt7forwardIZ7WinMainEUlvE1_EOT_RNSt16remove_referenceIS1_E4typeE
_ZSt7forwardIZ7WinMainEUlvE1_EOT_RNSt16remove_referenceIS1_E4typeE:
.LFB11909:
	.loc 20 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI783:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI784:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 20 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 20 78 39
	popq	%rbp	 #
.LCFI785:
	ret	
.LFE11909:
	.seh_endproc
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEC2IJS3_EEEDpOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEC2IJS3_EEEDpOT_
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEC2IJS3_EEEDpOT_:
.LFB11917:
	.loc 13 205 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI786:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI787:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI788:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI789:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __args#0, __args#0
.LBB258:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:206: 	  : _M_func{{std::forward<_Args>(__args)...}}
	.loc 13 206 46
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6thread6_StateC2Ev	 #
	leaq	16+_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEE(%rip), %rdx	 #, _2
	movq	32(%rbp), %rax	 # this, tmp87
	movq	%rdx, (%rax)	 # _2, this_7(D)->D.227944._vptr._State
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:206: 	  : _M_func{{std::forward<_Args>(__args)...}}
	.loc 13 206 6
	movq	32(%rbp), %rax	 # this, tmp88
	leaq	8(%rax), %rbx	 #, _3
	movq	40(%rbp), %rax	 # __args#0, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt7forwardIZ7WinMainEUlvE1_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _4,
	movq	%rbx, %rcx	 # _3,
	call	_ZNSt5tupleIJZ7WinMainEUlvE1_EEC1IJS0_ELb1ELb1EEEDpOT_	 #
.LBE258:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:207: 	  { }
	.loc 13 207 6
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI790:
	popq	%rbp	 #
.LCFI791:
	ret	
.LFE11917:
	.seh_endproc
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEC1IJS3_EEEDpOT_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEC1IJS3_EEEDpOT_,_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEC2IJS3_EEEDpOT_
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIfSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIfSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIfSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIfSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIfSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE:
.LFB11921:
	.loc 14 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI792:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI793:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 14 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIfSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EEfLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 14 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI794:
	ret	
.LFE11921:
	.seh_endproc
	.section	.text$_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv,"x"
	.linkonce discard
	.globl	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv:
.LFB12038:
	.loc 10 287 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI795:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI796:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __addr, __addr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:290: 	  auto& res = __waiter_pool_base::_S_for(__addr);
	.loc 10 290 42
	movq	16(%rbp), %rax	 # __addr, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt8__detail18__waiter_pool_base6_S_forEPKv	 #
	movq	%rax, -8(%rbp)	 # tmp85, res
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:291: 	  return reinterpret_cast<__waiter_type&>(res);
	.loc 10 291 47
	movq	-8(%rbp), %rax	 # res, _5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:292: 	}
	.loc 10 292 2
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI797:
	ret	
.LFE12038:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE:
.LFB12046:
	.loc 14 221 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI798:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI799:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 14 225 34
	movq	16(%rbp), %rax	 # __d, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 14 225 38
	imulq	$1000000000, %rax, %rax	 #, _1, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 224 20
	movq	%rax, -8(%rbp)	 # _2, D.234374
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 224 13
	leaq	-8(%rbp), %rdx	 #, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 14 225 67
	movq	-16(%rbp), %rax	 # D.234375, D.238146
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:226: 	  }
	.loc 14 226 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI800:
	ret	
.LFE12046:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_:
.LFB12050:
	.loc 14 505 23
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI801:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI802:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __rep, __rep
.LBB259:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 10
	movq	24(%rbp), %rax	 # __rep, tmp83
	movq	(%rax), %rdx	 # *__rep_5(D), _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 6
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->__r
.LBE259:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 14 506 37
	nop	
	popq	%rbp	 #
.LCFI803:
	ret	
.LFE12050:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE:
.LFB12051:
	.loc 14 208 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI804:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI805:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 14 212 34
	movq	16(%rbp), %rax	 # __d, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
	movq	%rax, %rcx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 14 212 38
	movabsq	$2361183241434822607, %rdx	 #, tmp88
	movq	%rcx, %rax	 # _1, tmp94
	imulq	%rdx	 # tmp88
	movq	%rdx, %rax	 # tmp87, tmp87
	sarq	$7, %rax	 #, tmp87
	sarq	$63, %rcx	 #, _1
	movq	%rcx, %rdx	 # _1, tmp90
	subq	%rdx, %rax	 # tmp90, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:211: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 211 20
	movq	%rax, -8(%rbp)	 # _2, D.234396
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:211: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 211 13
	leaq	-8(%rbp), %rdx	 #, tmp91
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 14 212 67
	movq	-16(%rbp), %rax	 # D.234397, D.238444
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:213: 	  }
	.loc 14 213 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI806:
	ret	
.LFE12051:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE:
.LFB12054:
	.loc 14 513 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI807:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI808:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __d, __d
.LBB260:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 33
	movq	24(%rbp), %rax	 # __d, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -8(%rbp)	 # tmp85, D.234427
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 44
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 6
	movq	16(%rbp), %rdx	 # this, tmp87
	movq	%rax, (%rdx)	 # _1, this_3(D)->__r
.LBE260:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 50
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI809:
	ret	
.LFE12054:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE:
.LFB12061:
	.loc 14 513 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI810:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI811:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __d, __d
.LBB261:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 33
	movq	24(%rbp), %rax	 # __d, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -8(%rbp)	 # tmp85, D.234449
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 44
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 6
	movq	16(%rbp), %rdx	 # this, tmp87
	movq	%rax, (%rdx)	 # _1, this_3(D)->__r
.LBE261:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 14 514 50
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI812:
	ret	
.LFE12061:
	.seh_endproc
	.section	.text$_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_,"x"
	.linkonce discard
	.globl	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_
	.def	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_
_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_:
.LFB12064:
	.loc 23 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI813:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI814:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI815:
	ret	
.LFE12064:
	.seh_endproc
	.section	.text$_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_,"x"
	.linkonce discard
	.globl	_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_
	.def	_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_
_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_:
.LFB12065:
	.loc 23 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI816:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI817:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 36
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI818:
	ret	
.LFE12065:
	.seh_endproc
	.section	.text$_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv
	.def	_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv
_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv:
.LFB12066:
	.loc 17 191 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI819:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI820:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 63
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 62
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 67
	movq	(%rax), %rax	 # *_2, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 70
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI821:
	ret	
.LFE12066:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev
	.def	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev
_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev:
.LFB12068:
	.loc 23 279 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI822:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI823:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB262:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 23 280 29
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev	 #
.LBE262:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 23 280 33
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI824:
	ret	
.LFE12068:
	.seh_endproc
	.section	.text$_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv
	.def	_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv
_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv:
.LFB12072:
	.loc 23 1049 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI825:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI826:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB263:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 23 1051 15
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev	 #
.LBE263:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 23 1051 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI827:
	ret	
.LFE12072:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA12072:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE12072-.LLSDACSB12072
.LLSDACSB12072:
.LLSDACSE12072:
	.section	.text$_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"x"
	.linkonce discard
	.globl	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.def	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_:
.LFB12073:
	.loc 23 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI828:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI829:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI830:
	ret	
.LFE12073:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv
	.def	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv
_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv:
.LFB12074:
	.loc 17 193 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI831:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI832:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 61
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 60
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 68
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI833:
	ret	
.LFE12074:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2Ev
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2Ev:
.LFB12079:
	.loc 17 166 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI834:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI835:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB264:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:166:       __uniq_ptr_impl() = default;
	.loc 17 166 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC1ILb1ELb1EEEv	 #
.LBE264:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI836:
	ret	
.LFE12079:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEv
_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEv:
.LFB12081:
	.loc 17 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI837:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI838:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB265:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 17 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2Ev	 #
.LBE265:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI839:
	ret	
.LFE12081:
	.seh_endproc
	.def	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEv;	.scl	3;	.type	32;	.endef
	.set	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEv,_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEv
	.align 2
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IS6_vEEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IS6_vEEv
_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IS6_vEEv:
.LFB12083:
	.loc 17 580 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI840:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI841:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB266:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:581: 	: _M_t()
	.loc 17 581 4
	movq	16(%rbp), %rax	 # this, tmp83
	movq	$0, (%rax)	 #, this_3(D)->_M_t
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEv	 #
.LBE266:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:582: 	{ }
	.loc 17 582 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI842:
	ret	
.LFE12083:
	.seh_endproc
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IS6_vEEv;	.scl	3;	.type	32;	.endef
	.set	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IS6_vEEv,_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IS6_vEEv
	.def	_ZSt11make_uniqueIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEENSt8__detail9_MakeUniqIT_E7__arrayEy;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt11make_uniqueIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEENSt8__detail9_MakeUniqIT_E7__arrayEy
_ZSt11make_uniqueIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEENSt8__detail9_MakeUniqIT_E7__arrayEy:
.LFB12085:
	.loc 17 1079 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI843:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI844:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI845:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI846:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 40(%rbp)	 # __num, __num
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 17 1080 55
	movq	40(%rbp), %rbx	 # __num, __num.97_6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 17 1080 63
	movabsq	$144115188075855871, %rax	 #, tmp91
	cmpq	%rbx, %rax	 # __num.97_6, tmp91
	jb	.L730	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 17 1080 63 is_stmt 0 discriminator 1
	movq	%rbx, %rax	 # __num.97_6, iftmp.96_9
	salq	$6, %rax	 #, iftmp.96_9
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 17 1080 30 is_stmt 1 discriminator 1
	movl	$64, %edx	 #,
	movq	%rax, %rcx	 # iftmp.96_9,
	call	_ZnaySt11align_val_t	 #
	movq	%rax, %rcx	 # tmp92, _12
	movq	%rcx, %rax	 # _12, _2
	leaq	-1(%rbx), %rdx	 #, _1
	jmp	.L732	 #
.L730:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 17 1080 30 is_stmt 0 discriminator 2
	call	__cxa_throw_bad_array_new_length	 #
.L733:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 17 1080 30 discriminator 6
	pxor	%xmm0, %xmm0	 # tmp93
	movups	%xmm0, (%rax)	 # tmp93, *_2
	movups	%xmm0, 16(%rax)	 # tmp93, *_2
	movups	%xmm0, 32(%rax)	 # tmp93, *_2
	movups	%xmm0, 48(%rax)	 # tmp93, *_2
	subq	$1, %rdx	 #, _3
	addq	$64, %rax	 #, _2
.L732:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 17 1080 30 discriminator 4
	testq	%rdx, %rdx	 # _3
	jns	.L733	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 17 1080 63 is_stmt 1 discriminator 7
	movq	32(%rbp), %rax	 # <retval>, tmp94
	movq	%rcx, %rdx	 # _12,
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IPS3_S6_vbEET_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 17 1080 66 discriminator 7
	movq	32(%rbp), %rax	 # <retval>,
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI847:
	popq	%rbp	 #
.LCFI848:
	ret	
.LFE12085:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEaSEOS7_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEaSEOS7_
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEaSEOS7_:
.LFB12086:
	.loc 17 181 24
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI849:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI850:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __u, __u
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:183: 	reset(__u.release());
	.loc 17 183 7
	movq	24(%rbp), %rax	 # __u, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE7releaseEv	 #
	movq	%rax, %rdx	 #, _1
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE5resetEPS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 17 184 49
	movq	24(%rbp), %rax	 # __u, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 17 184 34
	movq	%rax, %rcx	 # _2,
	call	_ZSt7forwardISt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEOT_RNSt16remove_referenceIS7_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 17 184 12
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:185: 	return *this;
	.loc 17 185 10
	movq	16(%rbp), %rax	 # this, _11
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:186:       }
	.loc 17 186 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI851:
	ret	
.LFE12086:
	.seh_endproc
	.def	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_
_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_:
.LFB12087:
	.loc 23 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI852:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI853:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI854:
	ret	
.LFE12087:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv:
.LFB12088:
	.loc 17 193 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI855:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI856:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 61
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 60
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy1EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 68
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI857:
	ret	
.LFE12088:
	.seh_endproc
	.section	.text$_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv
	.def	_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv
_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv:
.LFB12089:
	.loc 17 191 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI858:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI859:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 63
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 62
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 67
	movq	(%rax), %rax	 # *_2, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 70
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI860:
	ret	
.LFE12089:
	.seh_endproc
	.text
	.align 2
	.def	_ZNKSt7barrierIZ7WinMainEUlvE_E4waitEONS1_13arrival_tokenE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt7barrierIZ7WinMainEUlvE_E4waitEONS1_13arrival_tokenE
_ZNKSt7barrierIZ7WinMainEUlvE_E4waitEONS1_13arrival_tokenE:
.LFB12090:
	.loc 19 243 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI861:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI862:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI863:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI864:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __phase, __phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:244:       { _M_b.wait(std::move(__phase._M_tok)); }
	.loc 19 244 18
	movq	32(%rbp), %rbx	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:244:       { _M_b.wait(std::move(__phase._M_tok)); }
	.loc 19 244 37
	movq	40(%rbp), %rax	 # __phase, _2
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:244:       { _M_b.wait(std::move(__phase._M_tok)); }
	.loc 19 244 28
	movq	%rax, %rcx	 # _2,
	call	_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:244:       { _M_b.wait(std::move(__phase._M_tok)); }
	.loc 19 244 18
	movq	%rax, %rdx	 # _3,
	movq	%rbx, %rcx	 # _1,
	call	_ZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_t	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:244:       { _M_b.wait(std::move(__phase._M_tok)); }
	.loc 19 244 47
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI865:
	popq	%rbp	 #
.LCFI866:
	ret	
.LFE12090:
	.seh_endproc
	.align 2
	.def	_ZNSt7barrierIZ7WinMainEUlvE_E6arriveEx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt7barrierIZ7WinMainEUlvE_E6arriveEx
_ZNSt7barrierIZ7WinMainEUlvE_E6arriveEx:
.LFB12091:
	.loc 19 239 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI867:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI868:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __update, __update
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:240:       { return arrival_token{_M_b.arrive(__update)}; }
	.loc 19 240 51
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __update, tmp86
	movq	%rax, %rcx	 # _1,
	call	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E6arriveEx	 #
	movl	%eax, %edx	 #, _2
	leaq	-1(%rbp), %rax	 #, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC1ESt17__barrier_phase_t	 #
	movzbl	-1(%rbp), %eax	 # D.234796, D.237771
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:240:       { return arrival_token{_M_b.arrive(__update)}; }
	.loc 19 240 54
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI869:
	ret	
.LFE12091:
	.seh_endproc
	.align 2
	.def	_ZNSt5tupleIJZ7WinMainEUlvE0_EEC2IJS0_ELb1ELb1EEEDpOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt5tupleIJZ7WinMainEUlvE0_EEC2IJS0_ELb1ELb1EEEDpOT_
_ZNSt5tupleIJZ7WinMainEUlvE0_EEC2IJS0_ELb1ELb1EEEDpOT_:
.LFB12093:
	.loc 23 742 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI870:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI871:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI872:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI873:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __elements#0, __elements#0
.LBB267:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:744: 	: _Inherited(std::forward<_UElements>(__elements)...) { }
	.loc 23 744 54
	movq	32(%rbp), %rbx	 # this, _1
	movq	40(%rbp), %rax	 # __elements#0, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _2,
	movq	%rbx, %rcx	 # _1,
	call	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EEC2IS0_EEOT_	 #
.LBE267:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:744: 	: _Inherited(std::forward<_UElements>(__elements)...) { }
	.loc 23 744 58
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI874:
	popq	%rbp	 #
.LCFI875:
	ret	
.LFE12093:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA12093:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE12093-.LLSDACSB12093
.LLSDACSB12093:
.LLSDACSE12093:
	.text
	.seh_endproc
	.def	_ZNSt5tupleIJZ7WinMainEUlvE0_EEC1IJS0_ELb1ELb1EEEDpOT_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt5tupleIJZ7WinMainEUlvE0_EEC1IJS0_ELb1ELb1EEEDpOT_,_ZNSt5tupleIJZ7WinMainEUlvE0_EEC2IJS0_ELb1ELb1EEEDpOT_
	.section	.text$_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_
	.def	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_
_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_:
.LFB12097:
	.loc 17 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI876:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI877:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI878:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI879:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
.LBB268:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 38
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 56
	movq	40(%rbp), %rbx	 # __p, __p.160_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 53
	movq	32(%rbp), %rax	 # this, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 56
	movq	%rbx, (%rax)	 # __p.160_2, *_3
.LBE268:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 63
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI880:
	popq	%rbp	 #
.LCFI881:
	ret	
.LFE12097:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv
	.def	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv
_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv:
.LFB12099:
	.loc 17 189 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI882:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI883:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 57
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 56
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 17 189 64
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI884:
	ret	
.LFE12099:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv
	.def	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv
_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv:
.LFB12100:
	.loc 17 467 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI885:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI886:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:468:       { return _M_t._M_deleter(); }
	.loc 17 468 31
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:468:       { return _M_t._M_deleter(); }
	.loc 17 468 35
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI887:
	ret	
.LFE12100:
	.seh_endproc
	.section	.text$_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_,"x"
	.linkonce discard
	.globl	_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_
	.def	_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_
_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_:
.LFB12101:
	.loc 20 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI888:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI889:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 77
	popq	%rbp	 #
.LCFI890:
	ret	
.LFE12101:
	.seh_endproc
	.section	.text$_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_
	.def	_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_
_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_:
.LFB12102:
	.loc 17 89 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI891:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI892:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __ptr, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:95: 	delete __ptr;
	.loc 17 95 9
	movq	24(%rbp), %rax	 # __ptr, __ptr.161_6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:95: 	delete __ptr;
	.loc 17 95 2
	testq	%rax, %rax	 # __ptr.161_6
	je	.L756	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:95: 	delete __ptr;
	.loc 17 95 2 is_stmt 0 discriminator 1
	movq	(%rax), %rdx	 # __ptr.161_6->_vptr._State, _1
	addq	$8, %rdx	 #, _2
	movq	(%rdx), %rdx	 # *_2, _3
	movq	%rax, %rcx	 # __ptr.161_6,
	call	*%rdx	 # _3
.LVL46:
.L756:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:96:       }
	.loc 17 96 7 is_stmt 1
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI893:
	ret	
.LFE12102:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt5tupleIJZ7WinMainEUlvE1_EEC2IJS0_ELb1ELb1EEEDpOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt5tupleIJZ7WinMainEUlvE1_EEC2IJS0_ELb1ELb1EEEDpOT_
_ZNSt5tupleIJZ7WinMainEUlvE1_EEC2IJS0_ELb1ELb1EEEDpOT_:
.LFB12104:
	.loc 23 742 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI894:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI895:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI896:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI897:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __elements#0, __elements#0
.LBB269:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:744: 	: _Inherited(std::forward<_UElements>(__elements)...) { }
	.loc 23 744 54
	movq	32(%rbp), %rbx	 # this, _1
	movq	40(%rbp), %rax	 # __elements#0, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt7forwardIZ7WinMainEUlvE1_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _2,
	movq	%rbx, %rcx	 # _1,
	call	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE1_EEC2IS0_EEOT_	 #
.LBE269:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:744: 	: _Inherited(std::forward<_UElements>(__elements)...) { }
	.loc 23 744 58
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI898:
	popq	%rbp	 #
.LCFI899:
	ret	
.LFE12104:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA12104:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE12104-.LLSDACSB12104
.LLSDACSB12104:
.LLSDACSE12104:
	.text
	.seh_endproc
	.def	_ZNSt5tupleIJZ7WinMainEUlvE1_EEC1IJS0_ELb1ELb1EEEDpOT_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt5tupleIJZ7WinMainEUlvE1_EEC1IJS0_ELb1ELb1EEEDpOT_,_ZNSt5tupleIJZ7WinMainEUlvE1_EEC2IJS0_ELb1ELb1EEEDpOT_
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIfSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EEfLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIfSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EEfLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIfSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EEfLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIfSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EEfLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIfSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EEfLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE:
.LFB12106:
	.loc 14 208 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI900:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI901:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 14 212 34
	movq	16(%rbp), %rax	 # __d, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 14 212 8
	pxor	%xmm0, %xmm0	 # _2
	cvtsi2ssq	%rax, %xmm0	 # _1, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 14 212 38
	movss	.LC78(%rip), %xmm1	 #, tmp88
	divss	%xmm1, %xmm0	 # tmp88, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:211: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 211 20
	movss	%xmm0, -4(%rbp)	 # _3, D.234905
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:211: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 211 13
	leaq	-4(%rbp), %rdx	 #, tmp89
	leaq	-8(%rbp), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IfvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 14 212 67
	movss	-8(%rbp), %xmm0	 # D.234906, D.238316
	movd	%xmm0, %eax	 # D.238316, <retval>
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:213: 	  }
	.loc 14 213 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI902:
	ret	
.LFE12106:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE:
.LFB12193:
	.loc 14 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI903:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI904:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 14 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 14 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI905:
	ret	
.LFE12193:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE
	.def	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE
_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE:
.LFB12196:
	.loc 23 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI906:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI907:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI908:
	ret	
.LFE12196:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	.def	_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE:
.LFB12197:
	.loc 23 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI909:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI910:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI911:
	ret	
.LFE12197:
	.seh_endproc
	.section	.text$_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_,"x"
	.linkonce discard
	.globl	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_
	.def	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_
_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_:
.LFB12198:
	.loc 23 1386 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI912:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI913:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 23 1387 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 23 1387 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI914:
	ret	
.LFE12198:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev:
.LFB12200:
	.loc 23 430 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI915:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI916:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB270:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 23 431 15
	movq	16(%rbp), %rax	 # this, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev	 #
.LBE270:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 23 431 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI917:
	ret	
.LFE12200:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev
	.def	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev
_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev:
.LFB12203:
	.loc 23 189 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI918:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI919:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB271:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 23 190 9
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_head_impl
.LBE271:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 23 190 26
	nop	
	popq	%rbp	 #
.LCFI920:
	ret	
.LFE12203:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev
	.def	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev
_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev:
.LFB12206:
	.loc 23 279 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI921:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI922:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB272:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 23 280 29
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev	 #
.LBE272:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 23 280 33
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI923:
	ret	
.LFE12206:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	.def	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE:
.LFB12208:
	.loc 23 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI924:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI925:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI926:
	ret	
.LFE12208:
	.seh_endproc
	.section	.text$_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"x"
	.linkonce discard
	.globl	_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.def	_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_:
.LFB12209:
	.loc 23 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI927:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI928:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 36
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI929:
	ret	
.LFE12209:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2ILb1ELb1EEEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2ILb1ELb1EEEv
_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2ILb1ELb1EEEv:
.LFB12211:
	.loc 23 1049 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI930:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI931:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB273:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 23 1051 15
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2Ev	 #
.LBE273:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 23 1051 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI932:
	ret	
.LFE12211:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA12211:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE12211-.LLSDACSB12211
.LLSDACSB12211:
.LLSDACSE12211:
	.text
	.seh_endproc
	.def	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC1ILb1ELb1EEEv;	.scl	3;	.type	32;	.endef
	.set	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC1ILb1ELb1EEEv,_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2ILb1ELb1EEEv
	.align 2
	.def	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEPS3_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEPS3_
_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEPS3_:
.LFB12215:
	.loc 17 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI933:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI934:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.214076, D.214076
.LBB274:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 17 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.214076, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2EPS3_	 #
.LBE274:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI935:
	ret	
.LFE12215:
	.seh_endproc
	.def	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEPS3_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEPS3_,_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEPS3_
	.align 2
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IPS3_S6_vbEET_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IPS3_S6_vbEET_
_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IPS3_S6_vbEET_:
.LFB12217:
	.loc 17 598 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI936:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI937:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
.LBB275:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:599: 	: _M_t(__p)
	.loc 17 599 4
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __p, tmp83
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEPS3_	 #
.LBE275:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:600:         { }
	.loc 17 600 11
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI938:
	ret	
.LFE12217:
	.seh_endproc
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IPS3_S6_vbEET_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IPS3_S6_vbEET_,_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IPS3_S6_vbEET_
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE5resetEPS3_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE5resetEPS3_
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE5resetEPS3_:
.LFB12219:
	.loc 17 198 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI939:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI940:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI941:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI942:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:200: 	const pointer __old_p = _M_ptr();
	.loc 17 200 32
	movq	32(%rbp), %rax	 # this, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:200: 	const pointer __old_p = _M_ptr();
	.loc 17 200 16
	movq	(%rax), %rax	 # *_1, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __old_p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 17 201 11
	movq	40(%rbp), %rbx	 # __p, __p.100_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 17 201 8
	movq	32(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 17 201 11
	movq	%rbx, (%rax)	 # __p.100_2, *_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:202: 	if (__old_p)
	.loc 17 202 2
	cmpq	$0, -8(%rbp)	 #, __old_p
	je	.L780	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:203: 	  _M_deleter()(__old_p);
	.loc 17 203 14
	movq	32(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv	 #
	movq	%rax, %rcx	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:203: 	  _M_deleter()(__old_p);
	.loc 17 203 16
	movq	-8(%rbp), %rax	 # __old_p, tmp90
	movq	%rax, %rdx	 # tmp90,
	call	_ZNKSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEclIS3_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS4_E5valueEvE4typeEPS9_	 #
.L780:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:204:       }
	.loc 17 204 7
	nop	
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI943:
	popq	%rbp	 #
.LCFI944:
	ret	
.LFE12219:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE7releaseEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE7releaseEv
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE7releaseEv:
.LFB12220:
	.loc 17 207 15
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI945:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI946:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:209: 	pointer __p = _M_ptr();
	.loc 17 209 22
	movq	16(%rbp), %rax	 # this, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:209: 	pointer __p = _M_ptr();
	.loc 17 209 10
	movq	(%rax), %rax	 # *_1, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:210: 	_M_ptr() = nullptr;
	.loc 17 210 8
	movq	16(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:210: 	_M_ptr() = nullptr;
	.loc 17 210 11
	movq	$0, (%rax)	 #, *_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:211: 	return __p;
	.loc 17 211 9
	movq	-8(%rbp), %rax	 # __p, _9
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:212:       }
	.loc 17 212 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI947:
	ret	
.LFE12220:
	.seh_endproc
	.def	_ZSt7forwardISt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEOT_RNSt16remove_referenceIS7_E4typeE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt7forwardISt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEOT_RNSt16remove_referenceIS7_E4typeE
_ZSt7forwardISt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEOT_RNSt16remove_referenceIS7_E4typeE:
.LFB12221:
	.loc 20 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI948:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI949:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 20 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 20 78 39
	popq	%rbp	 #
.LCFI950:
	ret	
.LFE12221:
	.seh_endproc
	.def	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE
_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE:
.LFB12222:
	.loc 23 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI951:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI952:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERS8_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI953:
	ret	
.LFE12222:
	.seh_endproc
	.def	_ZSt3getILy1EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt3getILy1EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_
_ZSt3getILy1EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_:
.LFB12223:
	.loc 23 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI954:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI955:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 36
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt12__get_helperILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI956:
	ret	
.LFE12223:
	.seh_endproc
	.section	.text$_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,"x"
	.linkonce discard
	.globl	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
	.def	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_:
.LFB12224:
	.loc 23 1386 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI957:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI958:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 23 1387 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 23 1387 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI959:
	ret	
.LFE12224:
	.seh_endproc
	.section	.text$_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_,"x"
	.linkonce discard
	.globl	_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_
	.def	_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_
_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_:
.LFB12225:
	.loc 20 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI960:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI961:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 77
	popq	%rbp	 #
.LCFI962:
	ret	
.LFE12225:
	.seh_endproc
	.text
	.align 2
	.def	_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv
_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv:
.LFB12227:
	.loc 19 188 25
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI963:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI964:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __closure, __closure
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:190: 	    return __phase.load(memory_order_acquire) != __old_phase;
	.loc 19 190 25
	movq	16(%rbp), %rax	 # __closure, _1
	movl	$2, %edx	 #,
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:188: 	auto const __test_fn = [=]
	.loc 19 188 25
	movq	16(%rbp), %rdx	 # __closure, tmp87
	movzbl	8(%rdx), %edx	 # __closure_4(D)->____old_phase, _3
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:190: 	    return __phase.load(memory_order_acquire) != __old_phase;
	.loc 19 190 51
	cmpb	%dl, %al	 # _3, _2
	setne	%al	 #, _7
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:188: 	auto const __test_fn = [=]
	.loc 19 188 25
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI965:
	ret	
.LFE12227:
	.seh_endproc
	.align 2
	.def	_ZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_t;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_t
_ZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_t:
.LFB12226:
	.loc 19 185 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI966:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI967:
	subq	$80, %rsp	 #,
	.seh_stackalloc	80
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __old_phase, __old_phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:187: 	__atomic_phase_const_ref_t __phase(_M_phase);
	.loc 19 187 37
	movq	16(%rbp), %rax	 # this, tmp85
	leaq	48(%rax), %rdx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:187: 	__atomic_phase_const_ref_t __phase(_M_phase);
	.loc 19 187 29
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:188: 	auto const __test_fn = [=]
	.loc 19 188 13
	movq	-8(%rbp), %rax	 # __phase, tmp87
	movq	%rax, -32(%rbp)	 # tmp87, __test_fn.____phase
	movq	24(%rbp), %rax	 # __old_phase, tmp88
	movzbl	(%rax), %eax	 # *__old_phase_8(D), _2
	movb	%al, -24(%rbp)	 # _2, __test_fn.____old_phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:192: 	std::__atomic_wait_address(&_M_phase, __test_fn);
	.loc 19 192 28
	movq	16(%rbp), %rax	 # this, tmp89
	leaq	48(%rax), %rcx	 #, _3
	movq	-32(%rbp), %rax	 # __test_fn, tmp90
	movq	-24(%rbp), %rdx	 # __test_fn,
	movq	%rax, -48(%rbp)	 # tmp90,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %rax	 #, tmp91
	movq	%rax, %rdx	 # tmp91,
	call	_ZSt21__atomic_wait_addressISt17__barrier_phase_tZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOS0_EUlvE_EvPKT_T0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:193:       }
	.loc 19 193 7
	nop	
	addq	$80, %rsp	 #,
	popq	%rbp	 #
.LCFI968:
	ret	
.LFE12226:
	.seh_endproc
	.align 2
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E6arriveEx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E6arriveEx
_ZNSt14__tree_barrierIZ7WinMainEUlvE_E6arriveEx:
.LFB12228:
	.loc 19 162 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI969:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI970:
	addq	$-128, %rsp	 #,
	.seh_stackalloc	128
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __update, __update
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:165: 	size_t __current = __hasher(std::this_thread::get_id());
	.loc 19 165 54
	call	_ZNSt11this_thread6get_idEv	 #
	movq	%rax, -72(%rbp)	 # tmp108, D.235858
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:165: 	size_t __current = __hasher(std::this_thread::get_id());
	.loc 19 165 29
	leaq	-72(%rbp), %rdx	 #, tmp109
	leaq	-73(%rbp), %rax	 #, tmp110
	movq	%rax, %rcx	 # tmp110,
	call	_ZNKSt4hashINSt6thread2idEEclERKS1_	 #
	movq	%rax, -8(%rbp)	 # tmp111, __current
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:166: 	__atomic_phase_ref_t __phase(_M_phase);
	.loc 19 166 31
	movq	16(%rbp), %rax	 # this, tmp112
	leaq	48(%rax), %rdx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:166: 	__atomic_phase_ref_t __phase(_M_phase);
	.loc 19 166 23
	leaq	-88(%rbp), %rax	 #, tmp113
	movq	%rax, %rcx	 # tmp113,
	call	_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:167: 	const auto __old_phase = __phase.load(memory_order_relaxed);
	.loc 19 167 39
	leaq	-88(%rbp), %rax	 #, tmp114
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp114,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order	 #
	movb	%al, -9(%rbp)	 # tmp115, __old_phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:168: 	const auto __cur = static_cast<unsigned char>(__old_phase);
	.loc 19 168 13
	movzbl	-9(%rbp), %eax	 # __old_phase, tmp116
	movb	%al, -10(%rbp)	 # tmp116, __cur
.LBB276:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:169: 	for(; __update; --__update)
	.loc 19 169 2
	jmp	.L797	 #
.L815:
.LBB277:
.LBB278:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:171: 	    if(_M_arrive(__old_phase, __current))
	.loc 19 171 18
	movq	-8(%rbp), %rcx	 # __current, tmp117
	movzbl	-9(%rbp), %edx	 # __old_phase, tmp118
	movq	16(%rbp), %rax	 # this, tmp119
	movq	%rcx, %r8	 # tmp117,
	movq	%rax, %rcx	 # tmp119,
	call	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E9_M_arriveESt17__barrier_phase_ty	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:171: 	    if(_M_arrive(__old_phase, __current))
	.loc 19 171 6
	testb	%al, %al	 # _26
	je	.L798	 #,
.LBB279:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:173: 		_M_completion();
	.loc 19 173 16
	movq	16(%rbp), %rax	 # this, tmp120
	addq	$24, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
	call	_ZZ7WinMainENKUlvE_clEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:174: 		_M_expected += _M_expected_adjustment.load(memory_order_relaxed);
	.loc 19 174 45
	movq	16(%rbp), %rax	 # this, tmp121
	addq	$16, %rax	 #, _3
	movq	%rax, -56(%rbp)	 # _3, this
	movl	$0, -60(%rbp)	 #, __m
.LBB280:
.LBB281:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:484: 	  = __m & __memory_order_mask;
	.loc 11 484 10
	movl	-60(%rbp), %eax	 # __m, tmp122
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp122,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, -64(%rbp)	 # tmp123, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:485: 	__glibcxx_assert(__b != memory_order_release);
	.loc 11 485 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _62
	je	.L799	 #,
	cmpl	$3, -64(%rbp)	 #, __b
	jne	.L799	 #,
	movl	$1, %eax	 #, iftmp.130_63
	jmp	.L800	 #
.L799:
	movl	$0, %eax	 #, iftmp.130_63
.L800:
	testb	%al, %al	 # iftmp.130_63
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:486: 	__glibcxx_assert(__b != memory_order_acq_rel);
	.loc 11 486 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _67
	je	.L802	 #,
	cmpl	$4, -64(%rbp)	 #, __b
	jne	.L802	 #,
	movl	$1, %eax	 #, iftmp.132_68
	jmp	.L803	 #
.L802:
	movl	$0, %eax	 #, iftmp.132_68
.L803:
	testb	%al, %al	 # iftmp.132_68
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 11 488 25
	movq	-56(%rbp), %rax	 # this, _72
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 11 488 24
	movq	(%rax), %rax	 #* _72, _73
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 11 488 40
	movq	%rax, %rdx	 # _73, D.239209
.LBE281:
.LBE280:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:174: 		_M_expected += _M_expected_adjustment.load(memory_order_relaxed);
	.loc 19 174 3
	movq	16(%rbp), %rax	 # this, tmp124
	movq	(%rax), %rax	 # this_16(D)->_M_expected, _4
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:174: 		_M_expected += _M_expected_adjustment.load(memory_order_relaxed);
	.loc 19 174 15
	addq	%rax, %rdx	 # _4, _5
	movq	16(%rbp), %rax	 # this, tmp125
	movq	%rdx, (%rax)	 # _5, this_16(D)->_M_expected
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:175: 		_M_expected_adjustment.store(0, memory_order_relaxed);
	.loc 19 175 31
	movq	16(%rbp), %rax	 # this, tmp126
	addq	$16, %rax	 #, _6
	movq	%rax, -32(%rbp)	 # _6, this
	movq	$0, -40(%rbp)	 #, __i
	movl	$0, -44(%rbp)	 #, __m
.LBB282:
.LBB283:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:459: 	  = __m & __memory_order_mask;
	.loc 11 459 10
	movl	-44(%rbp), %eax	 # __m, tmp127
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp127,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, -48(%rbp)	 # tmp128, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:460: 	__glibcxx_assert(__b != memory_order_acquire);
	.loc 11 460 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _42
	je	.L806	 #,
	cmpl	$2, -48(%rbp)	 #, __b
	jne	.L806	 #,
	movl	$1, %eax	 #, iftmp.134_43
	jmp	.L807	 #
.L806:
	movl	$0, %eax	 #, iftmp.134_43
.L807:
	testb	%al, %al	 # iftmp.134_43
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:461: 	__glibcxx_assert(__b != memory_order_acq_rel);
	.loc 11 461 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _47
	je	.L809	 #,
	cmpl	$4, -48(%rbp)	 #, __b
	jne	.L809	 #,
	movl	$1, %eax	 #, iftmp.136_48
	jmp	.L810	 #
.L809:
	movl	$0, %eax	 #, iftmp.136_48
.L810:
	testb	%al, %al	 # iftmp.136_48
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:462: 	__glibcxx_assert(__b != memory_order_consume);
	.loc 11 462 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _52
	je	.L812	 #,
	cmpl	$1, -48(%rbp)	 #, __b
	jne	.L812	 #,
	movl	$1, %eax	 #, iftmp.138_53
	jmp	.L813	 #
.L812:
	movl	$0, %eax	 #, iftmp.138_53
.L813:
	testb	%al, %al	 # iftmp.138_53
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 11 464 18
	movq	-40(%rbp), %rdx	 # __i, __i.139_57
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 11 464 19
	movq	-32(%rbp), %rax	 # this, _58
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 11 464 18
	xchgq	(%rax), %rdx	 #,* _58, tmp129
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:465:       }
	.loc 11 465 7
	nop	
.LBE283:
.LBE282:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:176: 		auto __new_phase = static_cast<__barrier_phase_t>(__cur + 2);
	.loc 19 176 8
	movzbl	-10(%rbp), %eax	 # __cur, tmp133
	addl	$2, %eax	 #, tmp132
	movb	%al, -11(%rbp)	 # tmp132, __new_phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:177: 		__phase.store(__new_phase, memory_order_release);
	.loc 19 177 16
	movzbl	-11(%rbp), %edx	 # __new_phase, tmp134
	leaq	-88(%rbp), %rax	 #, tmp135
	movl	$3, %r8d	 #,
	movq	%rax, %rcx	 # tmp135,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order	 #
.LBB284:
.LBB285:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1462:       { __atomic_impl::notify_all(_M_ptr); }
	.loc 11 1462 35
	movq	-88(%rbp), %rax	 # __phase._M_ptr, _36
	movq	%rax, -24(%rbp)	 # _36, __ptr
.LBB286:
.LBB287:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1032:       { std::__atomic_notify_address(__ptr, true); }
	.loc 11 1032 37
	movq	-24(%rbp), %rax	 # __ptr, tmp136
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # tmp136,
	call	_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1032:       { std::__atomic_notify_address(__ptr, true); }
	.loc 11 1032 52
	nop	
.LBE287:
.LBE286:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1462:       { __atomic_impl::notify_all(_M_ptr); }
	.loc 11 1462 44
	nop	
.L798:
.LBE285:
.LBE284:
.LBE279:
.LBE278:
.LBE277:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:169: 	for(; __update; --__update)
	.loc 19 169 2
	subq	$1, 24(%rbp)	 #, __update
.L797:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:169: 	for(; __update; --__update)
	.loc 19 169 8 discriminator 1
	cmpq	$0, 24(%rbp)	 #, __update
	jne	.L815	 #,
.LBE276:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:181: 	return __old_phase;
	.loc 19 181 9
	movzbl	-9(%rbp), %eax	 # __old_phase, _22
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:182:       }
	.loc 19 182 7
	subq	$-128, %rsp	 #,
	popq	%rbp	 #
.LCFI971:
	ret	
.LFE12228:
	.seh_endproc
	.align 2
	.def	_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC2ESt17__barrier_phase_t;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC2ESt17__barrier_phase_t
_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC2ESt17__barrier_phase_t:
.LFB12230:
	.loc 19 222 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI972:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI973:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __tok, tmp82
	movb	%al, 24(%rbp)	 # tmp83, __tok
.LBB288:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:222: 	explicit arrival_token(__token __tok) noexcept : _M_tok(__tok) { }
	.loc 19 222 51
	movq	16(%rbp), %rax	 # this, tmp84
	movzbl	24(%rbp), %edx	 # __tok, tmp85
	movb	%dl, (%rax)	 # tmp85, this_2(D)->_M_tok
.LBE288:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:222: 	explicit arrival_token(__token __tok) noexcept : _M_tok(__tok) { }
	.loc 19 222 67
	nop	
	popq	%rbp	 #
.LCFI974:
	ret	
.LFE12230:
	.seh_endproc
	.def	_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC1ESt17__barrier_phase_t;	.scl	3;	.type	32;	.endef
	.set	_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC1ESt17__barrier_phase_t,_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC2ESt17__barrier_phase_t
	.align 2
	.def	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EEC2IS0_EEOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EEC2IS0_EEOT_
_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EEC2IS0_EEOT_:
.LFB12233:
	.loc 23 440 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI975:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI976:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI977:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI978:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __head, __head
.LBB289:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:441: 	: _Base(std::forward<_UHead>(__head))
	.loc 23 441 38
	movq	32(%rbp), %rbx	 # this, _1
	movq	40(%rbp), %rax	 # __head, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _2,
	movq	%rbx, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EEC2IS0_EEOT_	 #
.LBE289:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:442: 	{ }
	.loc 23 442 4
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI979:
	popq	%rbp	 #
.LCFI980:
	ret	
.LFE12233:
	.seh_endproc
	.section	.text$_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv
	.def	_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv
_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv:
.LFB12237:
	.loc 23 1049 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI981:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI982:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB290:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 23 1051 15
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev	 #
.LBE290:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 23 1051 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI983:
	ret	
.LFE12237:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA12237:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE12237-.LLSDACSB12237
.LLSDACSB12237:
.LLSDACSE12237:
	.section	.text$_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"x"
	.linkonce discard
	.globl	_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.def	_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_:
.LFB12238:
	.loc 23 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI984:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI985:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI986:
	ret	
.LFE12238:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv
	.def	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv
_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv:
.LFB12239:
	.loc 17 193 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI987:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI988:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 61
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 60
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 17 193 68
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI989:
	ret	
.LFE12239:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE1_EEC2IS0_EEOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE1_EEC2IS0_EEOT_
_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE1_EEC2IS0_EEOT_:
.LFB12241:
	.loc 23 440 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI990:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI991:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI992:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI993:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __head, __head
.LBB291:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:441: 	: _Base(std::forward<_UHead>(__head))
	.loc 23 441 38
	movq	32(%rbp), %rbx	 # this, _1
	movq	40(%rbp), %rax	 # __head, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt7forwardIZ7WinMainEUlvE1_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _2,
	movq	%rbx, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE1_Lb0EEC2IS0_EEOT_	 #
.LBE291:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:442: 	{ }
	.loc 23 442 4
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI994:
	popq	%rbp	 #
.LCFI995:
	ret	
.LFE12241:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE:
.LFB12279:
	.loc 14 221 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI996:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI997:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 14 225 34
	movq	16(%rbp), %rax	 # __d, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 14 225 38
	imulq	$1000, %rax, %rax	 #, _1, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 224 20
	movq	%rax, -8(%rbp)	 # _2, D.236271
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 14 224 13
	leaq	-8(%rbp), %rdx	 #, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 14 225 67
	movq	-16(%rbp), %rax	 # D.236272, D.238461
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:226: 	  }
	.loc 14 226 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI998:
	ret	
.LFE12279:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_
	.def	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_
_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_:
.LFB12281:
	.loc 23 268 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI999:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1000:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 268 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 268 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1001:
	ret	
.LFE12281:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_:
.LFB12282:
	.loc 23 424 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1002:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1003:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 65
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1004:
	ret	
.LFE12282:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE
	.def	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE
_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE:
.LFB12283:
	.loc 23 1369 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1005:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1006:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1370 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1370 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1007:
	ret	
.LFE12283:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev
_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev:
.LFB12285:
	.loc 23 80 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1008:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1009:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:81:       : _M_head_impl() { }
	.loc 23 81 26
	nop	
	popq	%rbp	 #
.LCFI1010:
	ret	
.LFE12285:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev:
.LFB12288:
	.loc 23 430 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1011:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1012:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB292:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 23 431 15
	movq	16(%rbp), %rax	 # this, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev	 #
.LBE292:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 23 431 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1013:
	ret	
.LFE12288:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev
	.def	_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev
_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev:
.LFB12291:
	.loc 23 189 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1014:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1015:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB293:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 23 190 9
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_head_impl
.LBE293:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 23 190 26
	nop	
	popq	%rbp	 #
.LCFI1016:
	ret	
.LFE12291:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_
	.def	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_
_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_:
.LFB12293:
	.loc 23 268 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1017:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1018:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 268 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 268 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1019:
	ret	
.LFE12293:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	.def	_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE:
.LFB12294:
	.loc 23 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1020:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1021:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1022:
	ret	
.LFE12294:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2Ev
_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2Ev:
.LFB12296:
	.loc 23 279 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1023:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1024:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB294:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 23 280 29
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EEC2Ev	 #
.LBE294:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 23 280 33
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1025:
	ret	
.LFE12296:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2EPS3_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2EPS3_
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2EPS3_:
.LFB12299:
	.loc 17 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1026:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1027:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1028:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1029:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
.LBB295:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 38
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC1ILb1ELb1EEEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 56
	movq	40(%rbp), %rbx	 # __p, __p.99_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 53
	movq	32(%rbp), %rax	 # this, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 56
	movq	%rbx, (%rax)	 # __p.99_2, *_3
.LBE295:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 17 168 63
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1030:
	popq	%rbp	 #
.LCFI1031:
	ret	
.LFE12299:
	.seh_endproc
	.def	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERS8_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERS8_
_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERS8_:
.LFB12301:
	.loc 23 268 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1032:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1033:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 268 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 268 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1034:
	ret	
.LFE12301:
	.seh_endproc
	.def	_ZSt12__get_helperILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE
_ZSt12__get_helperILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE:
.LFB12302:
	.loc 23 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1035:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1036:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEE7_M_headERS7_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1037:
	ret	
.LFE12302:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	.def	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE:
.LFB12303:
	.loc 23 1369 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1038:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1039:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1370 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1370 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1040:
	ret	
.LFE12303:
	.seh_endproc
	.section	.text$_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_
	.def	_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_
_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_:
.LFB12306:
	.loc 11 1378 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1041:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1042:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __t, __t
.LBB296:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1378:       __atomic_ref(_Tp& __t) : _M_ptr(std::__addressof(__t))
	.loc 11 1378 55
	movq	24(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1378:       __atomic_ref(_Tp& __t) : _M_ptr(std::__addressof(__t))
	.loc 11 1378 32
	movq	16(%rbp), %rdx	 # this, tmp85
	movq	%rax, (%rdx)	 # _1, this_3(D)->_M_ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1379:       { __glibcxx_assert(((uintptr_t)_M_ptr % required_alignment) == 0); }
	.loc 11 1379 9
	call	__is_constant_evaluated	 #
	movl	$0, %eax	 #, retval.156_9
	testb	%al, %al	 # retval.156_9
.LBE296:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1379:       { __glibcxx_assert(((uintptr_t)_M_ptr % required_alignment) == 0); }
	.loc 11 1379 74
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1043:
	ret	
.LFE12306:
	.seh_endproc
	.section	.text$_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order
	.def	_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order
_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order:
.LFB12307:
	.loc 11 1401 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1044:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1045:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, 24(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1402:       { return __atomic_impl::load(_M_ptr, __m); }
	.loc 11 1402 36
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rax	 # this_3(D)->_M_ptr, _1
	movq	%rax, -8(%rbp)	 # _1, __ptr
	movl	24(%rbp), %eax	 # __m, tmp87
	movl	%eax, -12(%rbp)	 # tmp87, __m
.LBB297:
.LBB298:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:969: 	auto* __dest = reinterpret_cast<_Val<_Tp>*>(__buf);
	.loc 11 969 8
	leaq	-25(%rbp), %rax	 #, tmp88
	movq	%rax, -24(%rbp)	 # tmp88, __dest
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:970: 	__atomic_load(__ptr, __dest, int(__m));
	.loc 11 970 15
	movq	-8(%rbp), %rax	 # __ptr, tmp89
	movzbl	(%rax), %edx	 #, _9
	movq	-24(%rbp), %rax	 # __dest, tmp90
	movb	%dl, (%rax)	 # _9, *__dest_8
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:971: 	return *__dest;
	.loc 11 971 10
	movq	-24(%rbp), %rax	 # __dest, tmp91
	movzbl	(%rax), %eax	 # *__dest_8, D.239177
.LBE298:
.LBE297:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1402:       { return __atomic_impl::load(_M_ptr, __m); }
	.loc 11 1402 50
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1046:
	ret	
.LFE12307:
	.seh_endproc
	.text
	.def	_ZSt21__atomic_wait_addressISt17__barrier_phase_tZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOS0_EUlvE_EvPKT_T0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt21__atomic_wait_addressISt17__barrier_phase_tZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOS0_EUlvE_EvPKT_T0_
_ZSt21__atomic_wait_addressISt17__barrier_phase_tZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOS0_EUlvE_EvPKT_T0_:
.LFB12308:
	.loc 10 428 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1047:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1048:
	subq	$88, %rsp	 #,
	.seh_stackalloc	88
.LCFI1049:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI1050:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __addr, __addr
	movq	%rdx, %rbx	 #, tmp82
	movq	(%rbx), %rax	 # __pred, tmp83
	movq	8(%rbx), %rdx	 # __pred,
	movq	%rax, -32(%rbp)	 # tmp83, __pred
	movq	%rdx, -24(%rbp)	 #, __pred
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:430:       __detail::__enters_wait __w(__addr);
	.loc 10 430 31
	movq	32(%rbp), %rdx	 # __addr, tmp84
	leaq	-16(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:431:       __w._M_do_wait(__pred);
	.loc 10 431 21
	movq	-32(%rbp), %rax	 # __pred, tmp86
	movq	-24(%rbp), %rdx	 # __pred,
	movq	%rax, -48(%rbp)	 # tmp86,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %rdx	 #, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEE10_M_do_waitIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_EEvT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:432:     }
	.loc 10 432 5
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev	 #
	nop	
	addq	$88, %rsp	 #,
	popq	%rbx	 #
.LCFI1051:
	popq	%rbp	 #
.LCFI1052:
	ret	
.LFE12308:
	.seh_endproc
	.section	.text$_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_
	.def	_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_
_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_:
.LFB12311:
	.loc 11 1378 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1053:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1054:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __t, __t
.LBB299:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1378:       __atomic_ref(_Tp& __t) : _M_ptr(std::__addressof(__t))
	.loc 11 1378 55
	movq	24(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1378:       __atomic_ref(_Tp& __t) : _M_ptr(std::__addressof(__t))
	.loc 11 1378 32
	movq	16(%rbp), %rdx	 # this, tmp85
	movq	%rax, (%rdx)	 # _1, this_3(D)->_M_ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1379:       { __glibcxx_assert(((uintptr_t)_M_ptr % required_alignment) == 0); }
	.loc 11 1379 9
	call	__is_constant_evaluated	 #
	movl	$0, %eax	 #, retval.106_9
	testb	%al, %al	 # retval.106_9
.LBE299:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1379:       { __glibcxx_assert(((uintptr_t)_M_ptr % required_alignment) == 0); }
	.loc 11 1379 74
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1055:
	ret	
.LFE12311:
	.seh_endproc
	.section	.text$_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order
	.def	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order
_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order:
.LFB12312:
	.loc 11 1401 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1056:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1057:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, 24(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1402:       { return __atomic_impl::load(_M_ptr, __m); }
	.loc 11 1402 36
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rax	 # this_3(D)->_M_ptr, _1
	movq	%rax, -8(%rbp)	 # _1, __ptr
	movl	24(%rbp), %eax	 # __m, tmp87
	movl	%eax, -12(%rbp)	 # tmp87, __m
.LBB300:
.LBB301:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:969: 	auto* __dest = reinterpret_cast<_Val<_Tp>*>(__buf);
	.loc 11 969 8
	leaq	-25(%rbp), %rax	 #, tmp88
	movq	%rax, -24(%rbp)	 # tmp88, __dest
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:970: 	__atomic_load(__ptr, __dest, int(__m));
	.loc 11 970 15
	movq	-8(%rbp), %rax	 # __ptr, tmp89
	movzbl	(%rax), %edx	 #, _9
	movq	-24(%rbp), %rax	 # __dest, tmp90
	movb	%dl, (%rax)	 # _9, *__dest_8
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:971: 	return *__dest;
	.loc 11 971 10
	movq	-24(%rbp), %rax	 # __dest, tmp91
	movzbl	(%rax), %eax	 # *__dest_8, D.239170
.LBE301:
.LBE300:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1402:       { return __atomic_impl::load(_M_ptr, __m); }
	.loc 11 1402 50
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1058:
	ret	
.LFE12312:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E9_M_arriveESt17__barrier_phase_ty;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E9_M_arriveESt17__barrier_phase_ty
_ZNSt14__tree_barrierIZ7WinMainEUlvE_E9_M_arriveESt17__barrier_phase_ty:
.LFB12313:
	.loc 19 97 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1059:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1060:
	subq	$80, %rsp	 #,
	.seh_stackalloc	80
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __old_phase, tmp100
	movq	%r8, 32(%rbp)	 # __current, __current
	movb	%al, 24(%rbp)	 # tmp101, __old_phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:99: 	const auto __old_phase_val = static_cast<unsigned char>(__old_phase);
	.loc 19 99 13
	movzbl	24(%rbp), %eax	 # __old_phase, tmp102
	movb	%al, -13(%rbp)	 # tmp102, __old_phase_val
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:100: 	const auto __half_step =
	.loc 19 100 13
	movzbl	-13(%rbp), %eax	 # __old_phase_val, tmp106
	addl	$1, %eax	 #, tmp105
	movb	%al, -14(%rbp)	 # tmp105, __half_step
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:102: 	const auto __full_step =
	.loc 19 102 13
	movzbl	-13(%rbp), %eax	 # __old_phase_val, tmp110
	addl	$2, %eax	 #, tmp109
	movb	%al, -15(%rbp)	 # tmp109, __full_step
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:105: 	size_t __current_expected = _M_expected;
	.loc 19 105 30
	movq	16(%rbp), %rax	 # this, tmp111
	movq	(%rax), %rax	 # this_30(D)->_M_expected, _1
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:105: 	size_t __current_expected = _M_expected;
	.loc 19 105 9
	movq	%rax, -8(%rbp)	 # _1, __current_expected
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:106: 	__current %= ((_M_expected + 1) >> 1);
	.loc 19 106 17
	movq	16(%rbp), %rax	 # this, tmp112
	movq	(%rax), %rax	 # this_30(D)->_M_expected, _2
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:106: 	__current %= ((_M_expected + 1) >> 1);
	.loc 19 106 29
	addq	$1, %rax	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:106: 	__current %= ((_M_expected + 1) >> 1);
	.loc 19 106 34
	sarq	%rax	 # _4
	movq	%rax, %rcx	 # _4, _5
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:106: 	__current %= ((_M_expected + 1) >> 1);
	.loc 19 106 12
	movq	32(%rbp), %rax	 # __current, tmp114
	movl	$0, %edx	 #, tmp115
	divq	%rcx	 # _5
	movq	%rdx, 32(%rbp)	 # tmp115, __current
.LBB302:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:108: 	for (int __round = 0; ; ++__round)
	.loc 19 108 11
	movl	$0, -12(%rbp)	 #, __round
.L869:
.LBB303:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:110: 	    if (__current_expected <= 1)
	.loc 19 110 6
	cmpq	$1, -8(%rbp)	 #, __current_expected
	ja	.L860	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:111: 		return true;
	.loc 19 111 10
	movl	$1, %eax	 #, _19
	jmp	.L861	 #
.L860:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:112: 	    size_t const __end_node = ((__current_expected + 1) >> 1),
	.loc 19 112 53
	movq	-8(%rbp), %rax	 # __current_expected, tmp117
	addq	$1, %rax	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:112: 	    size_t const __end_node = ((__current_expected + 1) >> 1),
	.loc 19 112 19
	shrq	%rax	 # tmp118
	movq	%rax, -24(%rbp)	 # tmp118, __end_node
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:113: 			 __last_node = __end_node - 1;
	.loc 19 113 5
	movq	-24(%rbp), %rax	 # __end_node, tmp122
	subq	$1, %rax	 #, tmp121
	movq	%rax, -32(%rbp)	 # tmp121, __last_node
.L868:
.LBB304:
.LBB305:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:116: 		if (__current == __end_node)
	.loc 19 116 3
	movq	32(%rbp), %rax	 # __current, tmp123
	cmpq	-24(%rbp), %rax	 # __end_node, tmp123
	jne	.L862	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:117: 		  __current = 0;
	.loc 19 117 15
	movq	$0, 32(%rbp)	 #, __current
.L862:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:118: 		auto __expect = __old_phase;
	.loc 19 118 8
	movzbl	24(%rbp), %eax	 # __old_phase, tmp124
	movb	%al, -33(%rbp)	 # tmp124, __expect
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:119: 		__atomic_phase_ref_t __phase(_M_state[__current]
	.loc 19 119 40
	movq	16(%rbp), %rax	 # this, tmp125
	leaq	8(%rax), %rcx	 #, _7
	movq	32(%rbp), %rax	 # __current, tmp126
	movq	%rax, %rdx	 # tmp126,
	call	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEixEy	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:120: 						.__tickets[__round]);
	.loc 19 120 17
	movq	%rax, %rcx	 # _8, _9
	movl	-12(%rbp), %eax	 # __round, tmp127
	cltq
	movq	%rax, %rdx	 # _10,
	call	_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy	 #
	movq	%rax, %rdx	 #, _11
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:119: 		__atomic_phase_ref_t __phase(_M_state[__current]
	.loc 19 119 24
	leaq	-48(%rbp), %rax	 #, tmp128
	movq	%rax, %rcx	 # tmp128,
	call	_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:121: 		if (__current == __last_node && (__current_expected & 1))
	.loc 19 121 3
	movq	32(%rbp), %rax	 # __current, tmp129
	cmpq	-32(%rbp), %rax	 # __last_node, tmp129
	jne	.L863	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:121: 		if (__current == __last_node && (__current_expected & 1))
	.loc 19 121 55 discriminator 1
	movq	-8(%rbp), %rax	 # __current_expected, tmp130
	andl	$1, %eax	 #, _12
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:121: 		if (__current == __last_node && (__current_expected & 1))
	.loc 19 121 32 discriminator 1
	testq	%rax, %rax	 # _12
	je	.L863	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:123: 		    if (__phase.compare_exchange_strong(__expect, __full_step,
	.loc 19 123 42
	movzbl	-15(%rbp), %ecx	 # __full_step, tmp131
	leaq	-33(%rbp), %rdx	 #, tmp132
	leaq	-48(%rbp), %rax	 #, tmp133
	movl	$4, %r9d	 #,
	movl	%ecx, %r8d	 # tmp131,
	movq	%rax, %rcx	 # tmp133,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:123: 		    if (__phase.compare_exchange_strong(__expect, __full_step,
	.loc 19 123 7
	testb	%al, %al	 # retval.107_43
	je	.L866	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:125: 		      break;     // I'm 1 in 1, go to next __round
	.loc 19 125 9
	jmp	.L865	 #
.L863:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:127: 		else if (__phase.compare_exchange_strong(__expect, __half_step,
	.loc 19 127 43
	movzbl	-14(%rbp), %ecx	 # __half_step, tmp134
	leaq	-33(%rbp), %rdx	 #, tmp135
	leaq	-48(%rbp), %rax	 #, tmp136
	movl	$4, %r9d	 #,
	movl	%ecx, %r8d	 # tmp134,
	movq	%rax, %rcx	 # tmp136,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:127: 		else if (__phase.compare_exchange_strong(__expect, __half_step,
	.loc 19 127 8
	testb	%al, %al	 # retval.108_45
	je	.L867	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:130: 		    return false; // I'm 1 in 2, done with arrival
	.loc 19 130 14
	movl	$0, %eax	 #, _19
	jmp	.L861	 #
.L867:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:132: 		else if (__expect == __half_step)
	.loc 19 132 21
	movzbl	-33(%rbp), %eax	 # __expect, __expect.109_13
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:132: 		else if (__expect == __half_step)
	.loc 19 132 8
	cmpb	%al, -14(%rbp)	 # __expect.109_13, __half_step
	jne	.L866	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:134: 		    if (__phase.compare_exchange_strong(__expect, __full_step,
	.loc 19 134 42
	movzbl	-15(%rbp), %ecx	 # __full_step, tmp137
	leaq	-33(%rbp), %rdx	 #, tmp138
	leaq	-48(%rbp), %rax	 #, tmp139
	movl	$4, %r9d	 #,
	movl	%ecx, %r8d	 # tmp137,
	movq	%rax, %rcx	 # tmp139,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:134: 		    if (__phase.compare_exchange_strong(__expect, __full_step,
	.loc 19 134 7
	testb	%al, %al	 # retval.110_47
	jne	.L870	 #,
.L866:
.LBE305:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:114: 	    for ( ; ; ++__current)
	.loc 19 114 6 discriminator 1
	addq	$1, 32(%rbp)	 #, __current
	jmp	.L868	 #
.L870:
.LBB306:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:136: 		      break;    // I'm 2 in 2, go to next __round
	.loc 19 136 9
	nop	
.L865:
.LBE306:
.LBE304:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:139: 	    __current_expected = __last_node + 1;
	.loc 19 139 25
	movq	-32(%rbp), %rax	 # __last_node, tmp143
	addq	$1, %rax	 #, tmp142
	movq	%rax, -8(%rbp)	 # tmp142, __current_expected
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:140: 	    __current >>= 1;
	.loc 19 140 16
	shrq	32(%rbp)	 # __current
.LBE303:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:108: 	for (int __round = 0; ; ++__round)
	.loc 19 108 2
	addl	$1, -12(%rbp)	 #, __round
	jmp	.L869	 #
.L861:
.LBE302:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:142:       }
	.loc 19 142 7
	addq	$80, %rsp	 #,
	popq	%rbp	 #
.LCFI1061:
	ret	
.LFE12313:
	.seh_endproc
	.section	.text$_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order
	.def	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order
_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order:
.LFB12316:
	.loc 11 1397 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1062:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1063:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __t, tmp86
	movl	%r8d, 32(%rbp)	 # __m, __m
	movb	%al, 24(%rbp)	 # tmp87, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1398:       { __atomic_impl::store(_M_ptr, __t, __m); }
	.loc 11 1398 30
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rax	 # this_3(D)->_M_ptr, _1
	movq	%rax, -8(%rbp)	 # _1, __ptr
	movzbl	24(%rbp), %eax	 # __t, tmp89
	movb	%al, -13(%rbp)	 # tmp89, __t
	movl	32(%rbp), %eax	 # __m, tmp90
	movl	%eax, -12(%rbp)	 # tmp90, __m
.LBB307:
.LBB308:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:962:       { __atomic_store(__ptr, std::__addressof(__t), int(__m)); }
	.loc 11 962 47
	leaq	-13(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:962:       { __atomic_store(__ptr, std::__addressof(__t), int(__m)); }
	.loc 11 962 23
	movzbl	(%rax), %eax	 # *_8, _9
	movzbl	%al, %edx	 # _9, _10
	movq	-8(%rbp), %rax	 # __ptr, tmp92
	xchgb	(%rax), %dl	 #,, tmp94
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:962:       { __atomic_store(__ptr, std::__addressof(__t), int(__m)); }
	.loc 11 962 65
	nop	
.LBE308:
.LBE307:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1398:       { __atomic_impl::store(_M_ptr, __t, __m); }
	.loc 11 1398 49
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1064:
	ret	
.LFE12316:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EEC2IS0_EEOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EEC2IS0_EEOT_
_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EEC2IS0_EEOT_:
.LFB12319:
	.loc 23 199 19
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1065:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1066:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1067:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1068:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __h, __h
.LBB309:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:200: 	: _M_head_impl(std::forward<_UHead>(__h)) { }
	.loc 23 200 37
	movq	40(%rbp), %rax	 # __h, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:200: 	: _M_head_impl(std::forward<_UHead>(__h)) { }
	.loc 23 200 4
	movq	32(%rbp), %rdx	 # this, tmp84
	movq	(%rax), %rcx	 # *_1, tmp85
	movq	8(%rax), %rbx	 # *_1,
	movq	%rcx, (%rdx)	 # tmp85, this_3(D)->_M_head_impl
	movq	%rbx, 8(%rdx)	 #, this_3(D)->_M_head_impl
	movq	16(%rax), %rcx	 # *_1, tmp86
	movq	24(%rax), %rbx	 # *_1,
	movq	%rcx, 16(%rdx)	 # tmp86, this_3(D)->_M_head_impl
	movq	%rbx, 24(%rdx)	 #, this_3(D)->_M_head_impl
	movq	32(%rax), %rcx	 # *_1, tmp87
	movq	40(%rax), %rbx	 # *_1,
	movq	%rcx, 32(%rdx)	 # tmp87, this_3(D)->_M_head_impl
	movq	%rbx, 40(%rdx)	 #, this_3(D)->_M_head_impl
	movq	48(%rax), %rcx	 # *_1, tmp88
	movq	56(%rax), %rbx	 # *_1,
	movq	%rcx, 48(%rdx)	 # tmp88, this_3(D)->_M_head_impl
	movq	%rbx, 56(%rdx)	 #, this_3(D)->_M_head_impl
.LBE309:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:200: 	: _M_head_impl(std::forward<_UHead>(__h)) { }
	.loc 23 200 46
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1069:
	popq	%rbp	 #
.LCFI1070:
	ret	
.LFE12319:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev
	.def	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev
_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev:
.LFB12322:
	.loc 23 279 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1071:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1072:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB310:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 23 280 29
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev	 #
.LBE310:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 23 280 33
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1073:
	ret	
.LFE12322:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	.def	_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE:
.LFB12324:
	.loc 23 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1074:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1075:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1076:
	ret	
.LFE12324:
	.seh_endproc
	.section	.text$_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"x"
	.linkonce discard
	.globl	_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.def	_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_:
.LFB12325:
	.loc 23 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1077:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1078:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 36
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 23 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1079:
	ret	
.LFE12325:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE1_Lb0EEC2IS0_EEOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE1_Lb0EEC2IS0_EEOT_
_ZNSt10_Head_baseILy0EZ7WinMainEUlvE1_Lb0EEC2IS0_EEOT_:
.LFB12327:
	.loc 23 199 19
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1080:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1081:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1082:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1083:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __h, __h
.LBB311:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:200: 	: _M_head_impl(std::forward<_UHead>(__h)) { }
	.loc 23 200 37
	movq	40(%rbp), %rax	 # __h, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZSt7forwardIZ7WinMainEUlvE1_EOT_RNSt16remove_referenceIS1_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:200: 	: _M_head_impl(std::forward<_UHead>(__h)) { }
	.loc 23 200 4
	movq	32(%rbp), %rdx	 # this, tmp84
	movq	(%rax), %rcx	 # *_1, tmp85
	movq	8(%rax), %rbx	 # *_1,
	movq	%rcx, (%rdx)	 # tmp85, this_3(D)->_M_head_impl
	movq	%rbx, 8(%rdx)	 #, this_3(D)->_M_head_impl
	movq	16(%rax), %rcx	 # *_1, tmp86
	movq	24(%rax), %rbx	 # *_1,
	movq	%rcx, 16(%rdx)	 # tmp86, this_3(D)->_M_head_impl
	movq	%rbx, 24(%rdx)	 #, this_3(D)->_M_head_impl
	movq	32(%rax), %rax	 # *_1, tmp87
	movq	%rax, 32(%rdx)	 # tmp87, this_3(D)->_M_head_impl
.LBE311:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:200: 	: _M_head_impl(std::forward<_UHead>(__h)) { }
	.loc 23 200 46
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1084:
	popq	%rbp	 #
.LCFI1085:
	ret	
.LFE12327:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_
	.def	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_
_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_:
.LFB12346:
	.loc 23 233 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1086:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1087:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 68
	popq	%rbp	 #
.LCFI1088:
	ret	
.LFE12346:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_
_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_:
.LFB12347:
	.loc 23 124 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1089:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1090:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 124 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 124 68
	popq	%rbp	 #
.LCFI1091:
	ret	
.LFE12347:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_
	.def	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_
_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_:
.LFB12348:
	.loc 23 271 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1092:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1093:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 271 71
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 271 78
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1094:
	ret	
.LFE12348:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev
_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev:
.LFB12350:
	.loc 23 80 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1095:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1096:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:81:       : _M_head_impl() { }
	.loc 23 81 26
	nop	
	popq	%rbp	 #
.LCFI1097:
	ret	
.LFE12350:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_
	.def	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_
_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_:
.LFB12352:
	.loc 23 233 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1098:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1099:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 68
	popq	%rbp	 #
.LCFI1100:
	ret	
.LFE12352:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_:
.LFB12353:
	.loc 23 424 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1101:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1102:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 65
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1103:
	ret	
.LFE12353:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEEC2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEEC2Ev
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEEC2Ev:
.LFB12355:
	.loc 23 430 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1104:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1105:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB312:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 23 431 15
	movq	16(%rbp), %rax	 # this, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EEC2Ev	 #
.LBE312:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 23 431 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1106:
	ret	
.LFE12355:
	.seh_endproc
	.align 2
	.def	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EEC2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EEC2Ev
_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EEC2Ev:
.LFB12358:
	.loc 23 189 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1107:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1108:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB313:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 23 190 9
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_head_impl
.LBE313:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 23 190 26
	nop	
	popq	%rbp	 #
.LCFI1109:
	ret	
.LFE12358:
	.seh_endproc
	.def	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERS5_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERS5_
_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERS5_:
.LFB12360:
	.loc 23 233 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1110:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1111:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 68
	popq	%rbp	 #
.LCFI1112:
	ret	
.LFE12360:
	.seh_endproc
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEE7_M_headERS7_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEE7_M_headERS7_
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEE7_M_headERS7_:
.LFB12361:
	.loc 23 424 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1113:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1114:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 65
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EE7_M_headERS7_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1115:
	ret	
.LFE12361:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_
	.def	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_
_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_:
.LFB12362:
	.loc 23 271 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1116:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1117:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 271 71
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 271 78
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1118:
	ret	
.LFE12362:
	.seh_endproc
	.section	.text$_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_,"x"
	.linkonce discard
	.globl	_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_
	.def	_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_
_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_:
.LFB12363:
	.loc 20 49 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1119:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1120:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __r, __r
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:50:     { return __builtin_addressof(__r); }
	.loc 20 50 37
	movq	16(%rbp), %rax	 # __r, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:50:     { return __builtin_addressof(__r); }
	.loc 20 50 40
	popq	%rbp	 #
.LCFI1121:
	ret	
.LFE12363:
	.seh_endproc
	.section	.text$_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_
	.def	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_
_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_:
.LFB12367:
	.loc 10 371 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1122:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1123:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __addr, __addr
.LBB314:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:372: 	    : __base_type(__addr)
	.loc 10 372 26
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __addr, tmp85
	movq	%rax, %rcx	 # _1,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:375: 	      _M_w._M_enter_wait();
	.loc 10 375 8
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rax	 # this_5(D)->D.157062._M_w, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:375: 	      _M_w._M_enter_wait();
	.loc 10 375 26
	movq	%rax, %rcx	 # _3,
	call	_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv	 #
.LBE314:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:376: 	  }
	.loc 10 376 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1124:
	ret	
.LFE12367:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEE10_M_do_waitIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_EEvT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEE10_M_do_waitIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_EEvT_
_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEE10_M_do_waitIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_EEvT_:
.LFB12368:
	.loc 10 400 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1125:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1126:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1127:
	subq	$80, %rsp	 #,
	.seh_stackalloc	80
.LCFI1128:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI1129:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, %rbx	 #, tmp90
	movq	(%rbx), %rax	 # __pred, tmp91
	movq	8(%rbx), %rdx	 # __pred,
	movq	%rax, -32(%rbp)	 # tmp91, __pred
	movq	%rdx, -24(%rbp)	 #, __pred
.L904:
.LBB315:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:405: 		if (__base_type::_M_do_spin(__pred, __val))
	.loc 10 405 30
	movq	32(%rbp), %rcx	 # this, _1
	movq	-32(%rbp), %rax	 # __pred, tmp92
	movq	-24(%rbp), %rdx	 # __pred,
	movq	%rax, -48(%rbp)	 # tmp92,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-8(%rbp), %rdx	 #, tmp93
	leaq	-48(%rbp), %rax	 #, tmp94
	movl	%esi, %r9d	 # D.238592,
	movq	%rdx, %r8	 # tmp93,
	movq	%rax, %rdx	 # tmp94,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_M_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbT_RyT0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:405: 		if (__base_type::_M_do_spin(__pred, __val))
	.loc 10 405 3
	testb	%al, %al	 # _11
	jne	.L905	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:407: 		__base_type::_M_w._M_do_wait(__base_type::_M_addr, __val);
	.loc 10 407 16
	movq	32(%rbp), %rax	 # this, tmp95
	movq	(%rax), %rax	 # this_9(D)->D.157062._M_w, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:407: 		__base_type::_M_w._M_do_wait(__base_type::_M_addr, __val);
	.loc 10 407 31
	movq	-8(%rbp), %rcx	 # __val, __val.225_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:407: 		__base_type::_M_w._M_do_wait(__base_type::_M_addr, __val);
	.loc 10 407 45
	movq	32(%rbp), %rdx	 # this, tmp96
	movq	8(%rdx), %rdx	 # this_9(D)->D.157062._M_addr, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:407: 		__base_type::_M_w._M_do_wait(__base_type::_M_addr, __val);
	.loc 10 407 31
	movq	%rcx, %r8	 # __val.225_3,
	movq	%rax, %rcx	 # _2,
	call	_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy	 #
.LBE315:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:409: 	    while (!__pred());
	.loc 10 409 20
	leaq	-32(%rbp), %rax	 #, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv	 #
	xorl	$1, %eax	 #, retval.226_16
	testb	%al, %al	 # retval.226_16
	jne	.L904	 #,
	jmp	.L901	 #
.L905:
.LBB316:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:406: 		  return;
	.loc 10 406 5
	nop	
.L901:
.LBE316:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:410: 	  }
	.loc 10 410 4
	addq	$80, %rsp	 #,
	popq	%rbx	 #
.LCFI1130:
	popq	%rsi	 #
.LCFI1131:
	popq	%rbp	 #
.LCFI1132:
	ret	
.LFE12368:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA12368:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE12368-.LLSDACSB12368
.LLSDACSB12368:
.LLSDACSE12368:
	.text
	.seh_endproc
	.section	.text$_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_,"x"
	.linkonce discard
	.globl	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_
	.def	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_
_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_:
.LFB12369:
	.loc 20 49 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1133:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1134:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __r, __r
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:50:     { return __builtin_addressof(__r); }
	.loc 20 50 37
	movq	16(%rbp), %rax	 # __r, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:50:     { return __builtin_addressof(__r); }
	.loc 20 50 40
	popq	%rbp	 #
.LCFI1135:
	ret	
.LFE12369:
	.seh_endproc
	.text
	.align 2
	.def	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEixEy;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEixEy
_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEixEy:
.LFB12370:
	.loc 17 717 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1136:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1137:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _1
	je	.L909	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 is_stmt 0 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE3getEv	 #
	testq	%rax, %rax	 # _2
	jne	.L909	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 discriminator 3
	movl	$1, %eax	 #, iftmp.112_5
	jmp	.L910	 #
.L909:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 discriminator 4
	movl	$0, %eax	 #, iftmp.112_5
.L910:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 17 719 2 discriminator 6
	testb	%al, %al	 # iftmp.112_5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 17 720 12 is_stmt 1 discriminator 6
	movq	16(%rbp), %rax	 # this, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE3getEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 17 720 14 discriminator 6
	movq	24(%rbp), %rdx	 # __i, tmp91
	salq	$6, %rdx	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 17 720 18 discriminator 6
	addq	%rdx, %rax	 # _4, _17
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:721:       }
	.loc 17 721 7 discriminator 6
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1138:
	ret	
.LFE12370:
	.seh_endproc
	.section	.text$_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy
	.def	_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy
_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy:
.LFB12371:
	.file 24 "C:/msys64/mingw64/include/c++/12.2.0/array"
	.loc 24 206 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1139:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1140:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # C:/msys64/mingw64/include/c++/12.2.0/array:209: 	return _AT_Type::_S_ref(_M_elems, __n);
	.loc 24 209 26
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/array:209: 	return _AT_Type::_S_ref(_M_elems, __n);
	.loc 24 209 25
	movq	24(%rbp), %rdx	 # __n, tmp85
	movq	%rax, %rcx	 # _1,
	call	_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y	 #
 # C:/msys64/mingw64/include/c++/12.2.0/array:210:       }
	.loc 24 210 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1141:
	ret	
.LFE12371:
	.seh_endproc
	.section	.text$_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order
	.def	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order
_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order:
.LFB12372:
	.loc 11 1439 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1142:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1143:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __expected, __expected
	movl	%r8d, %eax	 # __desired, tmp85
	movl	%r9d, 40(%rbp)	 # __order, __order
	movb	%al, 32(%rbp)	 # tmp86, __desired
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1443: 	return compare_exchange_strong(__expected, __desired, __order,
	.loc 11 1443 32
	movl	40(%rbp), %eax	 # __order, tmp87
	movl	%eax, %ecx	 # tmp87,
	call	_ZSt23__cmpexch_failure_orderSt12memory_order	 #
	movl	%eax, %ecx	 #, _1
	movl	40(%rbp), %r9d	 # __order, tmp88
	movzbl	32(%rbp), %r8d	 # __desired, tmp89
	movq	24(%rbp), %rdx	 # __expected, tmp90
	movq	16(%rbp), %rax	 # this, tmp91
	movl	%ecx, 32(%rsp)	 # _1,
	movq	%rax, %rcx	 # tmp91,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1445:       }
	.loc 11 1445 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1144:
	ret	
.LFE12372:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev
_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev:
.LFB12376:
	.loc 23 430 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1145:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1146:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB317:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 23 431 15
	movq	16(%rbp), %rax	 # this, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev	 #
.LBE317:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 23 431 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1147:
	ret	
.LFE12376:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev
	.def	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev
_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev:
.LFB12379:
	.loc 23 189 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1148:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1149:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB318:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 23 190 9
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_head_impl
.LBE318:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 23 190 26
	nop	
	popq	%rbp	 #
.LCFI1150:
	ret	
.LFE12379:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_
	.def	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_
_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_:
.LFB12381:
	.loc 23 268 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1151:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1152:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 268 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 268 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1153:
	ret	
.LFE12381:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	.def	_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE:
.LFB12382:
	.loc 23 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1154:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1155:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1156:
	ret	
.LFE12382:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_
	.def	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_
_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_:
.LFB12392:
	.loc 23 236 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1157:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1158:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 236 60
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 236 74
	popq	%rbp	 #
.LCFI1159:
	ret	
.LFE12392:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_
_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_:
.LFB12393:
	.loc 23 124 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1160:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1161:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 124 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 124 68
	popq	%rbp	 #
.LCFI1162:
	ret	
.LFE12393:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EEC2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EEC2Ev
_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EEC2Ev:
.LFB12395:
	.loc 23 80 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1163:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1164:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:81:       : _M_head_impl() { }
	.loc 23 81 26
	nop	
	popq	%rbp	 #
.LCFI1165:
	ret	
.LFE12395:
	.seh_endproc
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EE7_M_headERS7_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EE7_M_headERS7_
_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EE7_M_headERS7_:
.LFB12397:
	.loc 23 124 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1166:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1167:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 124 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 124 68
	popq	%rbp	 #
.LCFI1168:
	ret	
.LFE12397:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_
	.def	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_
_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_:
.LFB12398:
	.loc 23 236 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1169:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1170:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 236 60
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 236 74
	popq	%rbp	 #
.LCFI1171:
	ret	
.LFE12398:
	.seh_endproc
	.section	.text$_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_:
.LFB12400:
	.loc 10 295 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1172:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1173:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __addr, __addr
.LBB319:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:296: 	    : _M_w(_S_for(__addr))
	.loc 10 296 19
	movq	24(%rbp), %rax	 # __addr, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:296: 	    : _M_w(_S_for(__addr))
	.loc 10 296 8
	movq	16(%rbp), %rdx	 # this, tmp87
	movq	%rax, (%rdx)	 # _1, this_6(D)->_M_w
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:297: 	    , _M_addr(_S_wait_addr(__addr, &_M_w._M_ver))
	.loc 10 297 38
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rax	 # this_6(D)->_M_w, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:297: 	    , _M_addr(_S_wait_addr(__addr, &_M_w._M_ver))
	.loc 10 297 28
	leaq	64(%rax), %rdx	 #, _3
	movq	24(%rbp), %rax	 # __addr, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:297: 	    , _M_addr(_S_wait_addr(__addr, &_M_w._M_ver))
	.loc 10 297 8
	movq	16(%rbp), %rdx	 # this, tmp90
	movq	%rax, 8(%rdx)	 # _4, this_6(D)->_M_addr
.LBE319:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:298: 	  { }
	.loc 10 298 6
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1174:
	ret	
.LFE12400:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_M_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbT_RyT0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_M_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbT_RyT0_
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_M_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbT_RyT0_:
.LFB12402:
	.loc 10 360 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1175:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1176:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI1177:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI1178:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, %rbx	 #, tmp86
	movq	(%rbx), %rax	 # __pred, tmp87
	movq	8(%rbx), %rdx	 # __pred,
	movq	%rax, -16(%rbp)	 # tmp87, __pred
	movq	%rdx, -8(%rbp)	 #, __pred
	movq	%r8, 48(%rbp)	 # __val, __val
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:362: 	  { return _S_do_spin(_M_addr, __pred, __val, __spin); }
	.loc 10 362 24
	movq	32(%rbp), %rax	 # this, tmp88
	movq	8(%rax), %rcx	 # this_3(D)->_M_addr, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:362: 	  { return _S_do_spin(_M_addr, __pred, __val, __spin); }
	.loc 10 362 23
	movq	-16(%rbp), %rax	 # __pred, tmp89
	movq	-8(%rbp), %rdx	 # __pred,
	movq	%rax, -32(%rbp)	 # tmp89,
	movq	%rdx, -24(%rbp)	 #,
	movq	48(%rbp), %rdx	 # __val, tmp90
	leaq	-32(%rbp), %rax	 #, tmp91
	movq	%rdx, %r8	 # tmp90,
	movq	%rax, %rdx	 # tmp91,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_S_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbPKyT_RyT0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:362: 	  { return _S_do_spin(_M_addr, __pred, __val, __spin); }
	.loc 10 362 57
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI1179:
	popq	%rbp	 #
.LCFI1180:
	ret	
.LFE12402:
	.seh_endproc
	.align 2
	.def	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE3getEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE3getEv
_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE3getEv:
.LFB12403:
	.loc 17 726 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1181:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1182:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 17 727 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 17 727 31
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1183:
	ret	
.LFE12403:
	.seh_endproc
	.section	.text$_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y,"x"
	.linkonce discard
	.globl	_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y
	.def	_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y
_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y:
.LFB12404:
	.loc 24 60 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1184:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1185:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
	movq	%rdx, 24(%rbp)	 # __n, __n
 # C:/msys64/mingw64/include/c++/12.2.0/array:61:       { return const_cast<_Tp&>(__t[__n]); }
	.loc 24 61 41
	movq	16(%rbp), %rdx	 # __t, tmp84
	movq	24(%rbp), %rax	 # __n, tmp85
	addq	%rdx, %rax	 # tmp84, _3
 # C:/msys64/mingw64/include/c++/12.2.0/array:61:       { return const_cast<_Tp&>(__t[__n]); }
	.loc 24 61 44
	popq	%rbp	 #
.LCFI1186:
	ret	
.LFE12404:
	.seh_endproc
	.section	.text$_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_
	.def	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_
_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_:
.LFB12405:
	.loc 11 1420 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1187:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1188:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI1189:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI1190:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __expected, __expected
	movl	%r8d, %eax	 # __desired, tmp93
	movl	%r9d, 56(%rbp)	 # __success, __success
	movb	%al, 48(%rbp)	 # tmp94, __desired
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1424: 	return __atomic_impl::compare_exchange_strong(_M_ptr,
	.loc 11 1424 48
	movq	32(%rbp), %rax	 # this, tmp95
	movq	(%rax), %rax	 # this_3(D)->_M_ptr, _1
	movq	%rax, -8(%rbp)	 # _1, __ptr
	movq	40(%rbp), %rax	 # __expected, tmp96
	movq	%rax, -16(%rbp)	 # tmp96, __expected
	movzbl	48(%rbp), %eax	 # __desired, tmp97
	movb	%al, -25(%rbp)	 # tmp97, __desired
	movl	56(%rbp), %eax	 # __success, tmp98
	movl	%eax, -20(%rbp)	 # tmp98, __success
	movl	64(%rbp), %eax	 # __failure, tmp99
	movl	%eax, -24(%rbp)	 # tmp99, __failure
.LBB320:
.LBB321:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1003: 	__glibcxx_assert(__is_valid_cmpexch_failure_order(__failure));
	.loc 11 1003 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _13
	je	.L940	 #,
	movl	-24(%rbp), %eax	 # __failure, tmp100
	movl	%eax, %ecx	 # tmp100,
	call	_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order	 #
	xorl	$1, %eax	 #, _15
	testb	%al, %al	 # _15
	je	.L940	 #,
	movl	$1, %eax	 #, iftmp.121_16
	jmp	.L941	 #
.L940:
	movl	$0, %eax	 #, iftmp.121_16
.L941:
	testb	%al, %al	 # iftmp.121_16
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1006: 					 std::__addressof(__desired), false,
	.loc 11 1006 23
	leaq	-25(%rbp), %rax	 #, tmp101
	movq	%rax, %rcx	 # tmp101,
	call	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1005: 	return __atomic_compare_exchange(__ptr, std::__addressof(__expected),
	.loc 11 1005 34
	movzbl	(%rax), %eax	 # *_20, _21
	movzbl	%al, %ebx	 # _21, _22
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1005: 	return __atomic_compare_exchange(__ptr, std::__addressof(__expected),
	.loc 11 1005 58
	movq	-16(%rbp), %rax	 # __expected, tmp102
	movq	%rax, %rcx	 # tmp102,
	call	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_	 #
	movq	%rax, %rdx	 #, _23
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1005: 	return __atomic_compare_exchange(__ptr, std::__addressof(__expected),
	.loc 11 1005 34
	movq	-8(%rbp), %r8	 # __ptr, tmp103
	movzbl	(%rdx), %eax	 #* _23, tmp104
	lock cmpxchgb	%bl, (%r8)	 #, _22,
	movl	%eax, %ecx	 # tmp104, tmp105
	sete	%al	 #, D.239189
	testb	%al, %al	 # D.239189
	jne	.L947	 #,
	movb	%cl, (%rdx)	 # tmp105,* _23
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1007: 					 int(__success), int(__failure));
	.loc 11 1007 37
	nop	
.L947:
	nop	
.LBE321:
.LBE320:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1427:       }
	.loc 11 1427 7
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI1191:
	popq	%rbp	 #
.LCFI1192:
	ret	
.LFE12405:
	.seh_endproc
	.section	.text$_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b,"x"
	.linkonce discard
	.globl	_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b
	.def	_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b
_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b:
.LFB12406:
	.loc 10 457 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1193:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1194:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __addr, __addr
	movl	%edx, %eax	 # __all, tmp83
	movb	%al, 24(%rbp)	 # tmp84, __all
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:459:       __detail::__bare_wait __w(__addr);
	.loc 10 459 29
	movq	16(%rbp), %rdx	 # __addr, tmp85
	leaq	-16(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:460:       __w._M_notify(__all);
	.loc 10 460 20
	movzbl	24(%rbp), %edx	 # __all, _1
	leaq	-16(%rbp), %rax	 #, tmp87
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:461:     }
	.loc 10 461 5
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev	 #
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1195:
	ret	
.LFE12406:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev
_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev:
.LFB12408:
	.loc 23 80 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1196:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1197:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:81:       : _M_head_impl() { }
	.loc 23 81 26
	nop	
	popq	%rbp	 #
.LCFI1198:
	ret	
.LFE12408:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_
	.def	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_
_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_:
.LFB12410:
	.loc 23 233 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1199:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1200:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 68
	popq	%rbp	 #
.LCFI1201:
	ret	
.LFE12410:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_
_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_:
.LFB12411:
	.loc 23 424 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1202:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1203:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 65
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1204:
	ret	
.LFE12411:
	.seh_endproc
	.section	.text$_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_,"x"
	.linkonce discard
	.globl	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_:
.LFB12412:
	.loc 10 278 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1205:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1206:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:283: 	      return __b;
	.loc 10 283 15
	movq	24(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:284: 	  }
	.loc 10 284 4
	popq	%rbp	 #
.LCFI1207:
	ret	
.LFE12412:
	.seh_endproc
	.text
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_S_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbPKyT_RyT0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_S_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbPKyT_RyT0_
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_S_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbPKyT_RyT0_:
.LFB12413:
	.loc 10 348 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1208:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1209:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI1210:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1211:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __addr, __addr
	movq	%rdx, %rbx	 #, tmp86
	movq	(%rbx), %rax	 # __pred, tmp87
	movq	8(%rbx), %rdx	 # __pred,
	movq	%rax, -16(%rbp)	 # tmp87, __pred
	movq	%rdx, -8(%rbp)	 #, __pred
	movq	%r8, 48(%rbp)	 # __val, __val
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:353: 	    __atomic_load(__addr, &__val, __ATOMIC_ACQUIRE);
	.loc 10 353 19
	movq	32(%rbp), %rax	 # __addr, tmp88
	movq	(%rax), %rdx	 #, _1
	movq	48(%rbp), %rax	 # __val, tmp89
	movq	%rdx, (%rax)	 # _1, *__val_5(D)
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:354: 	    return __atomic_spin(__pred, __spin);
	.loc 10 354 26
	leaq	-16(%rbp), %rax	 #, tmp90
	movl	%r9d, %edx	 # D.238604,
	movq	%rax, %rcx	 # tmp90,
	call	_ZNSt8__detail13__atomic_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbRT_T0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:355: 	  }
	.loc 10 355 4
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI1212:
	popq	%rbp	 #
.LCFI1213:
	ret	
.LFE12413:
	.seh_endproc
	.align 2
	.def	_ZNKSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv
_ZNKSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv:
.LFB12414:
	.loc 17 191 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1214:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1215:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 63
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 62
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSC_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 67
	movq	(%rax), %rax	 # *_2, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 17 191 70
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1216:
	ret	
.LFE12414:
	.seh_endproc
	.section	.text$_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_
	.def	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_
_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_:
.LFB12418:
	.loc 10 371 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1217:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1218:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __addr, __addr
.LBB322:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:372: 	    : __base_type(__addr)
	.loc 10 372 26
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __addr, tmp83
	movq	%rax, %rcx	 # _1,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_	 #
.LBE322:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:376: 	  }
	.loc 10 376 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1219:
	ret	
.LFE12418:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_
_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_:
.LFB12419:
	.loc 23 124 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1220:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1221:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 124 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 124 68
	popq	%rbp	 #
.LCFI1222:
	ret	
.LFE12419:
	.seh_endproc
	.text
	.def	_ZNSt8__detail13__atomic_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbRT_T0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__atomic_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbRT_T0_
_ZNSt8__detail13__atomic_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbRT_T0_:
.LFB12420:
	.loc 10 158 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1223:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1224:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __pred, __pred
.LBB323:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:160: 	for (auto __i = 0; __i < __atomic_spin_count; ++__i)
	.loc 10 160 12
	movl	$0, -4(%rbp)	 #, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:160: 	for (auto __i = 0; __i < __atomic_spin_count; ++__i)
	.loc 10 160 2
	jmp	.L964	 #
.L969:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:162: 	    if (__pred())
	.loc 10 162 16
	movq	16(%rbp), %rax	 # __pred, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:162: 	    if (__pred())
	.loc 10 162 6
	testb	%al, %al	 # retval.232_17
	je	.L965	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:163: 	      return true;
	.loc 10 163 15
	movl	$1, %eax	 #, _2
	jmp	.L966	 #
.L965:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:165: 	    if (__i < __atomic_spin_count_relax)
	.loc 10 165 6
	cmpl	$11, -4(%rbp)	 #, __i
	jg	.L967	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:166: 	      __detail::__thread_relax();
	.loc 10 166 32
	call	_ZNSt8__detail14__thread_relaxEv	 #
	jmp	.L968	 #
.L967:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:168: 	      __detail::__thread_yield();
	.loc 10 168 32
	call	_ZNSt8__detail14__thread_yieldEv	 #
.L968:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:160: 	for (auto __i = 0; __i < __atomic_spin_count; ++__i)
	.loc 10 160 2 discriminator 2
	addl	$1, -4(%rbp)	 #, __i
.L964:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:160: 	for (auto __i = 0; __i < __atomic_spin_count; ++__i)
	.loc 10 160 25 discriminator 1
	cmpl	$15, -4(%rbp)	 #, __i
	jle	.L969	 #,
.LBE323:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:171: 	while (__spin())
	.loc 10 171 2
	jmp	.L970	 #
.L971:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:173: 	    if (__pred())
	.loc 10 173 16
	movq	16(%rbp), %rax	 # __pred, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:173: 	    if (__pred())
	.loc 10 173 6
	testb	%al, %al	 # retval.233_14
	je	.L970	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:174: 	      return true;
	.loc 10 174 15
	movl	$1, %eax	 #, _2
	jmp	.L966	 #
.L970:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:171: 	while (__spin())
	.loc 10 171 15
	leaq	24(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt8__detail21__default_spin_policyclEv	 #
	testb	%al, %al	 # retval.234_10
	jne	.L971	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:177: 	return false;
	.loc 10 177 9
	movl	$0, %eax	 #, _2
.L966:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:178:       }
	.loc 10 178 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1225:
	ret	
.LFE12420:
	.seh_endproc
	.def	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSC_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSC_
_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSC_:
.LFB12421:
	.loc 23 1386 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1226:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1227:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 23 1387 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERKT0_RKSt11_Tuple_implIXT_EJS8_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 23 1387 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1228:
	ret	
.LFE12421:
	.seh_endproc
	.def	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERKT0_RKSt11_Tuple_implIXT_EJS8_DpT1_EE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERKT0_RKSt11_Tuple_implIXT_EJS8_DpT1_EE
_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERKT0_RKSt11_Tuple_implIXT_EJS8_DpT1_EE:
.LFB12422:
	.loc 23 1369 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1229:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1230:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1370 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERKS8_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1370 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1231:
	ret	
.LFE12422:
	.seh_endproc
	.def	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERKS8_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERKS8_
_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERKS8_:
.LFB12423:
	.loc 23 271 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1232:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1233:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 271 71
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERKS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 271 78
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1234:
	ret	
.LFE12423:
	.seh_endproc
	.def	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERKS5_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERKS5_
_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERKS5_:
.LFB12424:
	.loc 23 236 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1235:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1236:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 236 60
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 236 74
	popq	%rbp	 #
.LCFI1237:
	ret	
.LFE12424:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEE:
	.quad	0
	.quad	_ZTINSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEE
	.quad	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED1Ev
	.quad	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED0Ev
	.quad	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEE6_M_runEv
	.text
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED2Ev
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED2Ev:
.LFB12426:
	.loc 13 200 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1238:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1239:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB324:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:200:       struct _State_impl : public _State
	.loc 13 200 14
	leaq	16+_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEE(%rip), %rdx	 #, _1
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_4(D)->D.227944._vptr._State
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6thread6_StateD2Ev	 #
.LBE324:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1240:
	ret	
.LFE12426:
	.seh_endproc
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED1Ev;	.scl	3;	.type	32;	.endef
	.set	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED1Ev,_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED2Ev
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED0Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED0Ev
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED0Ev:
.LFB12428:
	.loc 13 200 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1241:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1242:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:200:       struct _State_impl : public _State
	.loc 13 200 14
	movq	16(%rbp), %rax	 # this, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEED1Ev	 #
	movq	16(%rbp), %rax	 # this, tmp83
	movl	$48, %edx	 #,
	movq	%rax, %rcx	 # tmp83,
	call	_ZdlPvy	 #
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1243:
	ret	
.LFE12428:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE:
	.quad	0
	.quad	_ZTINSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE
	.quad	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED1Ev
	.quad	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED0Ev
	.quad	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEE6_M_runEv
	.text
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED2Ev
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED2Ev:
.LFB12430:
	.loc 13 200 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1244:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1245:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB325:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:200:       struct _State_impl : public _State
	.loc 13 200 14
	leaq	16+_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE(%rip), %rdx	 #, _1
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_4(D)->D.222981._vptr._State
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6thread6_StateD2Ev	 #
.LBE325:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1246:
	ret	
.LFE12430:
	.seh_endproc
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED1Ev;	.scl	3;	.type	32;	.endef
	.set	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED1Ev,_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED2Ev
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED0Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED0Ev
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED0Ev:
.LFB12432:
	.loc 13 200 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1247:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1248:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:200:       struct _State_impl : public _State
	.loc 13 200 14
	movq	16(%rbp), %rax	 # this, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED1Ev	 #
	movq	16(%rbp), %rax	 # this, tmp83
	movl	$72, %edx	 #,
	movq	%rax, %rcx	 # tmp83,
	call	_ZdlPvy	 #
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1249:
	ret	
.LFE12432:
	.seh_endproc
	.section .rdata,"dr"
	.align 32
_ZTSNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEE:
	.ascii "*NSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEE\0"
	.align 8
_ZTINSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEE:
 # <anonymous>:
 # <anonymous>:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 # <anonymous>:
	.quad	_ZTSNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEEE
 # <anonymous>:
	.quad	_ZTINSt6thread6_StateE
	.align 32
_ZTSNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE:
	.ascii "*NSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE\0"
	.align 8
_ZTINSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE:
 # <anonymous>:
 # <anonymous>:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 # <anonymous>:
	.quad	_ZTSNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE
 # <anonymous>:
	.quad	_ZTINSt6thread6_StateE
	.globl	_ZTINSt6thread6_StateE
	.section	.rdata$_ZTINSt6thread6_StateE,"dr"
	.linkonce same_size
	.align 8
_ZTINSt6thread6_StateE:
 # <anonymous>:
 # <anonymous>:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 # <anonymous>:
	.quad	_ZTSNSt6thread6_StateE
	.globl	_ZTSNSt6thread6_StateE
	.section	.rdata$_ZTSNSt6thread6_StateE,"dr"
	.linkonce same_size
	.align 16
_ZTSNSt6thread6_StateE:
	.ascii "NSt6thread6_StateE\0"
	.text
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEE6_M_runEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEE6_M_runEv
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEEE6_M_runEv:
.LFB12449:
	.loc 13 210 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1250:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1251:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:210: 	_M_run() { _M_func(); }
	.loc 13 210 20
	movq	16(%rbp), %rax	 # this, tmp83
	addq	$8, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEclEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:210: 	_M_run() { _M_func(); }
	.loc 13 210 24
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1252:
	ret	
.LFE12449:
	.seh_endproc
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEE6_M_runEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEE6_M_runEv
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEE6_M_runEv:
.LFB12450:
	.loc 13 210 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1253:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1254:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:210: 	_M_run() { _M_func(); }
	.loc 13 210 20
	movq	16(%rbp), %rax	 # this, tmp83
	addq	$8, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEclEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:210: 	_M_run() { _M_func(); }
	.loc 13 210 24
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1255:
	ret	
.LFE12450:
	.seh_endproc
	.align 2
	.def	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEclEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEclEv
_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEEclEv:
.LFB12451:
	.loc 13 255 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1256:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1257:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:259: 	  return _M_invoke(_Indices());
	.loc 13 259 20
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:259: 	  return _M_invoke(_Indices());
	.loc 13 259 31
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:260: 	}
	.loc 13 260 2
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1258:
	ret	
.LFE12451:
	.seh_endproc
	.align 2
	.def	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEclEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEclEv
_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEclEv:
.LFB12452:
	.loc 13 255 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1259:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1260:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:259: 	  return _M_invoke(_Indices());
	.loc 13 259 20
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:259: 	  return _M_invoke(_Indices());
	.loc 13 259 31
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:260: 	}
	.loc 13 260 2
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1261:
	ret	
.LFE12452:
	.seh_endproc
	.align 2
	.def	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE
_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE1_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE:
.LFB12453:
	.loc 13 251 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1262:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1263:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 52
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 51
	movq	%rax, %rcx	 # _1,
	call	_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE1_EEEONSt16remove_referenceIT_E4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 41
	movq	%rax, %rcx	 # _2,
	call	_ZSt3getILy0EJZ7WinMainEUlvE1_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 26
	movq	%rax, %rcx	 # _3,
	call	_ZSt8__invokeIZ7WinMainEUlvE1_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 61
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 64
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1264:
	ret	
.LFE12453:
	.seh_endproc
	.align 2
	.def	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE
_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE:
.LFB12455:
	.loc 13 251 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1265:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1266:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 52
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 51
	movq	%rax, %rcx	 # _1,
	call	_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE0_EEEONSt16remove_referenceIT_E4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 41
	movq	%rax, %rcx	 # _2,
	call	_ZSt3getILy0EJZ7WinMainEUlvE0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 26
	movq	%rax, %rcx	 # _3,
	call	_ZSt8__invokeIZ7WinMainEUlvE0_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 61
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 13 252 64
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1267:
	ret	
.LFE12455:
	.seh_endproc
	.def	_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE1_EEEONSt16remove_referenceIT_E4typeEOS5_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE1_EEEONSt16remove_referenceIT_E4typeEOS5_
_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE1_EEEONSt16remove_referenceIT_E4typeEOS5_:
.LFB12457:
	.loc 20 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1268:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1269:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 77
	popq	%rbp	 #
.LCFI1270:
	ret	
.LFE12457:
	.seh_endproc
	.def	_ZSt3getILy0EJZ7WinMainEUlvE1_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJZ7WinMainEUlvE1_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_
_ZSt3getILy0EJZ7WinMainEUlvE1_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_:
.LFB12458:
	.loc 23 1392 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1271:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1272:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1395:       return std::forward<__element_type>(std::__get_helper<__i>(__t));
	.loc 23 1395 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EZ7WinMainEUlvE1_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1395:       return std::forward<__element_type>(std::__get_helper<__i>(__t));
	.loc 23 1395 42
	movq	%rax, %rcx	 # _2,
	call	_ZSt7forwardIZ7WinMainEUlvE1_EOT_RNSt16remove_referenceIS1_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1396:     }
	.loc 23 1396 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1273:
	ret	
.LFE12458:
	.seh_endproc
	.def	_ZSt8__invokeIZ7WinMainEUlvE1_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt8__invokeIZ7WinMainEUlvE1_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_
_ZSt8__invokeIZ7WinMainEUlvE1_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_:
.LFB12459:
	.file 25 "C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h"
	.loc 25 90 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1274:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1275:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1276:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1277:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __fn, __fn
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:96:       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
	.loc 25 96 40
	movq	32(%rbp), %rax	 # __fn, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt7forwardIZ7WinMainEUlvE1_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _1,
	movl	%ebx, %ecx	 # D.238211,
	call	_ZSt13__invoke_implIvZ7WinMainEUlvE1_JEET_St14__invoke_otherOT0_DpOT1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:97: 					std::forward<_Args>(__args)...);
	.loc 25 97 36
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:98:     }
	.loc 25 98 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1278:
	popq	%rbp	 #
.LCFI1279:
	ret	
.LFE12459:
	.seh_endproc
	.def	_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE0_EEEONSt16remove_referenceIT_E4typeEOS5_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE0_EEEONSt16remove_referenceIT_E4typeEOS5_
_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE0_EEEONSt16remove_referenceIT_E4typeEOS5_:
.LFB12460:
	.loc 20 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1280:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1281:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 20 105 77
	popq	%rbp	 #
.LCFI1282:
	ret	
.LFE12460:
	.seh_endproc
	.def	_ZSt3getILy0EJZ7WinMainEUlvE0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJZ7WinMainEUlvE0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_
_ZSt3getILy0EJZ7WinMainEUlvE0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_:
.LFB12461:
	.loc 23 1392 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1283:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1284:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1395:       return std::forward<__element_type>(std::__get_helper<__i>(__t));
	.loc 23 1395 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EZ7WinMainEUlvE0_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1395:       return std::forward<__element_type>(std::__get_helper<__i>(__t));
	.loc 23 1395 42
	movq	%rax, %rcx	 # _2,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1396:     }
	.loc 23 1396 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1285:
	ret	
.LFE12461:
	.seh_endproc
	.def	_ZSt8__invokeIZ7WinMainEUlvE0_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt8__invokeIZ7WinMainEUlvE0_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_
_ZSt8__invokeIZ7WinMainEUlvE0_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_:
.LFB12462:
	.loc 25 90 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1286:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1287:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1288:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1289:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __fn, __fn
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:96:       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
	.loc 25 96 40
	movq	32(%rbp), %rax	 # __fn, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _1,
	movl	%ebx, %ecx	 # D.237749,
	call	_ZSt13__invoke_implIvZ7WinMainEUlvE0_JEET_St14__invoke_otherOT0_DpOT1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:97: 					std::forward<_Args>(__args)...);
	.loc 25 97 36
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:98:     }
	.loc 25 98 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1290:
	popq	%rbp	 #
.LCFI1291:
	ret	
.LFE12462:
	.seh_endproc
	.def	_ZSt12__get_helperILy0EZ7WinMainEUlvE1_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EZ7WinMainEUlvE1_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE
_ZSt12__get_helperILy0EZ7WinMainEUlvE1_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE:
.LFB12463:
	.loc 23 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1292:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1293:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE1_EE7_M_headERS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1294:
	ret	
.LFE12463:
	.seh_endproc
	.def	_ZSt13__invoke_implIvZ7WinMainEUlvE1_JEET_St14__invoke_otherOT0_DpOT1_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt13__invoke_implIvZ7WinMainEUlvE1_JEET_St14__invoke_otherOT0_DpOT1_
_ZSt13__invoke_implIvZ7WinMainEUlvE1_JEET_St14__invoke_otherOT0_DpOT1_:
.LFB12464:
	.loc 25 60 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1295:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1296:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)	 # __f, __f
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 25 61 31
	movq	16(%rbp), %rax	 # __f, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZSt7forwardIZ7WinMainEUlvE1_EOT_RNSt16remove_referenceIS1_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 25 61 36
	movq	%rax, %rcx	 # _1,
	call	_ZZ7WinMainENKUlvE1_clEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 25 61 67
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 25 61 70
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1297:
	ret	
.LFE12464:
	.seh_endproc
	.def	_ZSt12__get_helperILy0EZ7WinMainEUlvE0_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EZ7WinMainEUlvE0_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE
_ZSt12__get_helperILy0EZ7WinMainEUlvE0_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE:
.LFB12465:
	.loc 23 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1298:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1299:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EE7_M_headERS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 23 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1300:
	ret	
.LFE12465:
	.seh_endproc
	.def	_ZSt13__invoke_implIvZ7WinMainEUlvE0_JEET_St14__invoke_otherOT0_DpOT1_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt13__invoke_implIvZ7WinMainEUlvE0_JEET_St14__invoke_otherOT0_DpOT1_
_ZSt13__invoke_implIvZ7WinMainEUlvE0_JEET_St14__invoke_otherOT0_DpOT1_:
.LFB12466:
	.loc 25 60 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1301:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1302:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)	 # __f, __f
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 25 61 31
	movq	16(%rbp), %rax	 # __f, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 25 61 36
	movq	%rax, %rcx	 # _1,
	call	_ZZ7WinMainENKUlvE0_clEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 25 61 67
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 25 61 70
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1303:
	ret	
.LFE12466:
	.seh_endproc
	.def	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE1_EE7_M_headERS1_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE1_EE7_M_headERS1_
_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE1_EE7_M_headERS1_:
.LFB12467:
	.loc 23 424 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1304:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1305:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE1_Lb0EE7_M_headERS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1306:
	ret	
.LFE12467:
	.seh_endproc
	.def	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EE7_M_headERS1_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EE7_M_headERS1_
_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EE7_M_headERS1_:
.LFB12468:
	.loc 23 424 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1307:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1308:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EE7_M_headERS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 23 424 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1309:
	ret	
.LFE12468:
	.seh_endproc
	.def	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE1_Lb0EE7_M_headERS1_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE1_Lb0EE7_M_headERS1_
_ZNSt10_Head_baseILy0EZ7WinMainEUlvE1_Lb0EE7_M_headERS1_:
.LFB12469:
	.loc 23 233 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1310:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1311:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 68
	popq	%rbp	 #
.LCFI1312:
	ret	
.LFE12469:
	.seh_endproc
	.def	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EE7_M_headERS1_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EE7_M_headERS1_
_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EE7_M_headERS1_:
.LFB12470:
	.loc 23 233 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1313:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1314:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 23 233 68
	popq	%rbp	 #
.LCFI1315:
	ret	
.LFE12470:
	.seh_endproc
	.section .rdata,"dr"
	.align 16
.LC0:
	.long	2147483647
	.long	0
	.long	0
	.long	0
	.align 4
.LC1:
	.long	1258291200
	.align 4
.LC2:
	.long	1065353216
	.align 4
.LC3:
	.long	2139095040
	.align 4
.LC15:
	.long	1067240653
	.align 4
.LC16:
	.long	1148846080
	.align 4
.LC17:
	.long	1143930880
	.align 4
.LC18:
	.long	1173602304
	.align 4
.LC20:
	.long	1017370378
	.align 4
.LC21:
	.long	1036831949
	.align 4
.LC22:
	.long	1053609165
	.align 4
.LC23:
	.long	1058642330
	.align 4
.LC25:
	.long	1020054733
	.align 4
.LC26:
	.long	1039516303
	.align 4
.LC27:
	.long	1137180672
	.align 4
.LC29:
	.long	1148928000
	.align 4
.LC30:
	.long	1166200832
	.align 4
.LC31:
	.long	1159069696
	.align 4
.LC32:
	.long	1138819072
	.align 4
.LC34:
	.long	1050253722
	.align 4
.LC35:
	.long	1063675494
	.align 4
.LC37:
	.long	1176256512
	.align 4
.LC39:
	.long	1118961664
	.align 4
.LC40:
	.long	-1028521984
	.align 4
.LC41:
	.long	1016003118
	.align 4
.LC42:
	.long	1073741824
	.align 4
.LC43:
	.long	1056964608
	.align 4
.LC44:
	.long	1127481344
	.align 4
.LC47:
	.long	1119879168
	.align 4
.LC49:
	.long	1132396544
	.align 4
.LC50:
	.long	1145569280
	.align 4
.LC51:
	.long	1142292480
	.align 4
.LC57:
	.long	1119092736
	.align 4
.LC63:
	.long	1094713344
	.align 4
.LC64:
	.long	1077936128
	.align 4
.LC65:
	.long	1092616192
	.align 4
.LC66:
	.long	-1054867456
	.align 4
.LC69:
	.long	1015580809
	.align 16
.LC71:
	.long	-2147483648
	.long	0
	.long	0
	.long	0
	.align 4
.LC72:
	.long	1075838976
	.align 4
.LC77:
	.long	1112014848
	.align 4
.LC78:
	.long	1315859240
	.section	.debug_frame,"dr"
.Lframe0:
	.long	.LECIE0-.LSCIE0
.LSCIE0:
	.long	0xffffffff
	.byte	0x3
	.ascii "\0"
	.uleb128 0x1
	.sleb128 -8
	.uleb128 0x10
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x1
	.align 8
.LECIE0:
.LSFDE0:
	.long	.LEFDE0-.LASFDE0
.LASFDE0:
	.secrel32	.Lframe0
	.quad	.LFB404
	.quad	.LFE404-.LFB404
	.byte	0x4
	.long	.LCFI0-.LFB404
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1-.LCFI0
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI2-.LCFI1
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE0:
.LSFDE2:
	.long	.LEFDE2-.LASFDE2
.LASFDE2:
	.secrel32	.Lframe0
	.quad	.LFB5616
	.quad	.LFE5616-.LFB5616
	.byte	0x4
	.long	.LCFI3-.LFB5616
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI4-.LCFI3
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI5-.LCFI4
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI6-.LCFI5
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI7-.LCFI6
	.byte	0xc3
	.byte	0x4
	.long	.LCFI8-.LCFI7
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE2:
.LSFDE4:
	.long	.LEFDE4-.LASFDE4
.LASFDE4:
	.secrel32	.Lframe0
	.quad	.LFB5680
	.quad	.LFE5680-.LFB5680
	.byte	0x4
	.long	.LCFI9-.LFB5680
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI10-.LCFI9
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI11-.LCFI10
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE4:
.LSFDE6:
	.long	.LEFDE6-.LASFDE6
.LASFDE6:
	.secrel32	.Lframe0
	.quad	.LFB5683
	.quad	.LFE5683-.LFB5683
	.byte	0x4
	.long	.LCFI12-.LFB5683
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI13-.LCFI12
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI14-.LCFI13
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE6:
.LSFDE8:
	.long	.LEFDE8-.LASFDE8
.LASFDE8:
	.secrel32	.Lframe0
	.quad	.LFB5910
	.quad	.LFE5910-.LFB5910
	.byte	0x4
	.long	.LCFI15-.LFB5910
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI16-.LCFI15
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI17-.LCFI16
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE8:
.LSFDE10:
	.long	.LEFDE10-.LASFDE10
.LASFDE10:
	.secrel32	.Lframe0
	.quad	.LFB5949
	.quad	.LFE5949-.LFB5949
	.byte	0x4
	.long	.LCFI18-.LFB5949
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI19-.LCFI18
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI20-.LCFI19
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE10:
.LSFDE12:
	.long	.LEFDE12-.LASFDE12
.LASFDE12:
	.secrel32	.Lframe0
	.quad	.LFB5951
	.quad	.LFE5951-.LFB5951
	.byte	0x4
	.long	.LCFI21-.LFB5951
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI22-.LCFI21
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI23-.LCFI22
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE12:
.LSFDE14:
	.long	.LEFDE14-.LASFDE14
.LASFDE14:
	.secrel32	.Lframe0
	.quad	.LFB6076
	.quad	.LFE6076-.LFB6076
	.byte	0x4
	.long	.LCFI24-.LFB6076
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI25-.LCFI24
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI26-.LCFI25
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE14:
.LSFDE16:
	.long	.LEFDE16-.LASFDE16
.LASFDE16:
	.secrel32	.Lframe0
	.quad	.LFB6601
	.quad	.LFE6601-.LFB6601
	.byte	0x4
	.long	.LCFI27-.LFB6601
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI28-.LCFI27
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI29-.LCFI28
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE16:
.LSFDE18:
	.long	.LEFDE18-.LASFDE18
.LASFDE18:
	.secrel32	.Lframe0
	.quad	.LFB7262
	.quad	.LFE7262-.LFB7262
	.byte	0x4
	.long	.LCFI30-.LFB7262
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI31-.LCFI30
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI32-.LCFI31
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE18:
.LSFDE20:
	.long	.LEFDE20-.LASFDE20
.LASFDE20:
	.secrel32	.Lframe0
	.quad	.LFB7436
	.quad	.LFE7436-.LFB7436
	.byte	0x4
	.long	.LCFI33-.LFB7436
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI34-.LCFI33
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI35-.LCFI34
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE20:
.LSFDE22:
	.long	.LEFDE22-.LASFDE22
.LASFDE22:
	.secrel32	.Lframe0
	.quad	.LFB7441
	.quad	.LFE7441-.LFB7441
	.byte	0x4
	.long	.LCFI36-.LFB7441
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI37-.LCFI36
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI38-.LCFI37
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE22:
.LSFDE24:
	.long	.LEFDE24-.LASFDE24
.LASFDE24:
	.secrel32	.Lframe0
	.quad	.LFB7442
	.quad	.LFE7442-.LFB7442
	.byte	0x4
	.long	.LCFI39-.LFB7442
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI40-.LCFI39
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI41-.LCFI40
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE24:
.LSFDE26:
	.long	.LEFDE26-.LASFDE26
.LASFDE26:
	.secrel32	.Lframe0
	.quad	.LFB7448
	.quad	.LFE7448-.LFB7448
	.byte	0x4
	.long	.LCFI42-.LFB7448
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI43-.LCFI42
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI44-.LCFI43
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE26:
.LSFDE28:
	.long	.LEFDE28-.LASFDE28
.LASFDE28:
	.secrel32	.Lframe0
	.quad	.LFB7449
	.quad	.LFE7449-.LFB7449
	.byte	0x4
	.long	.LCFI45-.LFB7449
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI46-.LCFI45
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI47-.LCFI46
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE28:
.LSFDE30:
	.long	.LEFDE30-.LASFDE30
.LASFDE30:
	.secrel32	.Lframe0
	.quad	.LFB7450
	.quad	.LFE7450-.LFB7450
	.byte	0x4
	.long	.LCFI48-.LFB7450
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI49-.LCFI48
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI50-.LCFI49
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE30:
.LSFDE32:
	.long	.LEFDE32-.LASFDE32
.LASFDE32:
	.secrel32	.Lframe0
	.quad	.LFB7453
	.quad	.LFE7453-.LFB7453
	.byte	0x4
	.long	.LCFI51-.LFB7453
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI52-.LCFI51
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI53-.LCFI52
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE32:
.LSFDE34:
	.long	.LEFDE34-.LASFDE34
.LASFDE34:
	.secrel32	.Lframe0
	.quad	.LFB7460
	.quad	.LFE7460-.LFB7460
	.byte	0x4
	.long	.LCFI54-.LFB7460
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI55-.LCFI54
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI56-.LCFI55
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE34:
.LSFDE36:
	.long	.LEFDE36-.LASFDE36
.LASFDE36:
	.secrel32	.Lframe0
	.quad	.LFB7461
	.quad	.LFE7461-.LFB7461
	.byte	0x4
	.long	.LCFI57-.LFB7461
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI58-.LCFI57
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI59-.LCFI58
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE36:
.LSFDE38:
	.long	.LEFDE38-.LASFDE38
.LASFDE38:
	.secrel32	.Lframe0
	.quad	.LFB7462
	.quad	.LFE7462-.LFB7462
	.byte	0x4
	.long	.LCFI60-.LFB7462
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI61-.LCFI60
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI62-.LCFI61
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE38:
.LSFDE40:
	.long	.LEFDE40-.LASFDE40
.LASFDE40:
	.secrel32	.Lframe0
	.quad	.LFB7465
	.quad	.LFE7465-.LFB7465
	.byte	0x4
	.long	.LCFI63-.LFB7465
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI64-.LCFI63
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI65-.LCFI64
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE40:
.LSFDE42:
	.long	.LEFDE42-.LASFDE42
.LASFDE42:
	.secrel32	.Lframe0
	.quad	.LFB8921
	.quad	.LFE8921-.LFB8921
	.byte	0x4
	.long	.LCFI66-.LFB8921
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI67-.LCFI66
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI68-.LCFI67
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE42:
.LSFDE44:
	.long	.LEFDE44-.LASFDE44
.LASFDE44:
	.secrel32	.Lframe0
	.quad	.LFB8924
	.quad	.LFE8924-.LFB8924
	.byte	0x4
	.long	.LCFI69-.LFB8924
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI70-.LCFI69
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI71-.LCFI70
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE44:
.LSFDE46:
	.long	.LEFDE46-.LASFDE46
.LASFDE46:
	.secrel32	.Lframe0
	.quad	.LFB8926
	.quad	.LFE8926-.LFB8926
	.byte	0x4
	.long	.LCFI72-.LFB8926
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI73-.LCFI72
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI74-.LCFI73
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE46:
.LSFDE48:
	.long	.LEFDE48-.LASFDE48
.LASFDE48:
	.secrel32	.Lframe0
	.quad	.LFB8928
	.quad	.LFE8928-.LFB8928
	.byte	0x4
	.long	.LCFI75-.LFB8928
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI76-.LCFI75
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI77-.LCFI76
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE48:
.LSFDE50:
	.long	.LEFDE50-.LASFDE50
.LASFDE50:
	.secrel32	.Lframe0
	.quad	.LFB8929
	.quad	.LFE8929-.LFB8929
	.byte	0x4
	.long	.LCFI78-.LFB8929
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI79-.LCFI78
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI80-.LCFI79
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE50:
.LSFDE52:
	.long	.LEFDE52-.LASFDE52
.LASFDE52:
	.secrel32	.Lframe0
	.quad	.LFB8932
	.quad	.LFE8932-.LFB8932
	.byte	0x4
	.long	.LCFI81-.LFB8932
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI82-.LCFI81
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI83-.LCFI82
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE52:
.LSFDE54:
	.long	.LEFDE54-.LASFDE54
.LASFDE54:
	.secrel32	.Lframe0
	.quad	.LFB8935
	.quad	.LFE8935-.LFB8935
	.byte	0x4
	.long	.LCFI84-.LFB8935
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI85-.LCFI84
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI86-.LCFI85
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE54:
.LSFDE56:
	.long	.LEFDE56-.LASFDE56
.LASFDE56:
	.secrel32	.Lframe0
	.quad	.LFB8937
	.quad	.LFE8937-.LFB8937
	.byte	0x4
	.long	.LCFI87-.LFB8937
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI88-.LCFI87
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI89-.LCFI88
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE56:
.LSFDE58:
	.long	.LEFDE58-.LASFDE58
.LASFDE58:
	.secrel32	.Lframe0
	.quad	.LFB8939
	.quad	.LFE8939-.LFB8939
	.byte	0x4
	.long	.LCFI90-.LFB8939
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI91-.LCFI90
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI92-.LCFI91
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE58:
.LSFDE60:
	.long	.LEFDE60-.LASFDE60
.LASFDE60:
	.secrel32	.Lframe0
	.quad	.LFB8940
	.quad	.LFE8940-.LFB8940
	.byte	0x4
	.long	.LCFI93-.LFB8940
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI94-.LCFI93
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI95-.LCFI94
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE60:
.LSFDE62:
	.long	.LEFDE62-.LASFDE62
.LASFDE62:
	.secrel32	.Lframe0
	.quad	.LFB8944
	.quad	.LFE8944-.LFB8944
	.byte	0x4
	.long	.LCFI96-.LFB8944
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI97-.LCFI96
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI98-.LCFI97
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE62:
.LSFDE64:
	.long	.LEFDE64-.LASFDE64
.LASFDE64:
	.secrel32	.Lframe0
	.quad	.LFB8945
	.quad	.LFE8945-.LFB8945
	.byte	0x4
	.long	.LCFI99-.LFB8945
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI100-.LCFI99
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI101-.LCFI100
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE64:
.LSFDE66:
	.long	.LEFDE66-.LASFDE66
.LASFDE66:
	.secrel32	.Lframe0
	.quad	.LFB8946
	.quad	.LFE8946-.LFB8946
	.byte	0x4
	.long	.LCFI102-.LFB8946
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI103-.LCFI102
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI104-.LCFI103
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE66:
.LSFDE68:
	.long	.LEFDE68-.LASFDE68
.LASFDE68:
	.secrel32	.Lframe0
	.quad	.LFB8949
	.quad	.LFE8949-.LFB8949
	.byte	0x4
	.long	.LCFI105-.LFB8949
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI106-.LCFI105
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI107-.LCFI106
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE68:
.LSFDE70:
	.long	.LEFDE70-.LASFDE70
.LASFDE70:
	.secrel32	.Lframe0
	.quad	.LFB8950
	.quad	.LFE8950-.LFB8950
	.byte	0x4
	.long	.LCFI108-.LFB8950
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI109-.LCFI108
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI110-.LCFI109
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE70:
.LSFDE72:
	.long	.LEFDE72-.LASFDE72
.LASFDE72:
	.secrel32	.Lframe0
	.quad	.LFB8951
	.quad	.LFE8951-.LFB8951
	.byte	0x4
	.long	.LCFI111-.LFB8951
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI112-.LCFI111
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI113-.LCFI112
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE72:
.LSFDE74:
	.long	.LEFDE74-.LASFDE74
.LASFDE74:
	.secrel32	.Lframe0
	.quad	.LFB8952
	.quad	.LFE8952-.LFB8952
	.byte	0x4
	.long	.LCFI114-.LFB8952
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI115-.LCFI114
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI116-.LCFI115
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE74:
.LSFDE76:
	.long	.LEFDE76-.LASFDE76
.LASFDE76:
	.secrel32	.Lframe0
	.quad	.LFB8957
	.quad	.LFE8957-.LFB8957
	.byte	0x4
	.long	.LCFI117-.LFB8957
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI118-.LCFI117
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI119-.LCFI118
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE76:
.LSFDE78:
	.long	.LEFDE78-.LASFDE78
.LASFDE78:
	.secrel32	.Lframe0
	.quad	.LFB8959
	.quad	.LFE8959-.LFB8959
	.byte	0x4
	.long	.LCFI120-.LFB8959
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI121-.LCFI120
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI122-.LCFI121
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE78:
.LSFDE80:
	.long	.LEFDE80-.LASFDE80
.LASFDE80:
	.secrel32	.Lframe0
	.quad	.LFB8963
	.quad	.LFE8963-.LFB8963
	.byte	0x4
	.long	.LCFI123-.LFB8963
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI124-.LCFI123
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI125-.LCFI124
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE80:
.LSFDE82:
	.long	.LEFDE82-.LASFDE82
.LASFDE82:
	.secrel32	.Lframe0
	.quad	.LFB8965
	.quad	.LFE8965-.LFB8965
	.byte	0x4
	.long	.LCFI126-.LFB8965
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI127-.LCFI126
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI128-.LCFI127
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE82:
.LSFDE84:
	.long	.LEFDE84-.LASFDE84
.LASFDE84:
	.secrel32	.Lframe0
	.quad	.LFB8966
	.quad	.LFE8966-.LFB8966
	.byte	0x4
	.long	.LCFI129-.LFB8966
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI130-.LCFI129
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI131-.LCFI130
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI132-.LCFI131
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI133-.LCFI132
	.byte	0xc3
	.byte	0x4
	.long	.LCFI134-.LCFI133
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE84:
.LSFDE86:
	.long	.LEFDE86-.LASFDE86
.LASFDE86:
	.secrel32	.Lframe0
	.quad	.LFB8953
	.quad	.LFE8953-.LFB8953
	.byte	0x4
	.long	.LCFI135-.LFB8953
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI136-.LCFI135
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI137-.LCFI136
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI138-.LCFI137
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI139-.LCFI138
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI140-.LCFI139
	.byte	0xc3
	.byte	0x4
	.long	.LCFI141-.LCFI140
	.byte	0xc4
	.byte	0x4
	.long	.LCFI142-.LCFI141
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE86:
.LSFDE88:
	.long	.LEFDE88-.LASFDE88
.LASFDE88:
	.secrel32	.Lframe0
	.quad	.LFB8967
	.quad	.LFE8967-.LFB8967
	.byte	0x4
	.long	.LCFI143-.LFB8967
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI144-.LCFI143
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI145-.LCFI144
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE88:
.LSFDE90:
	.long	.LEFDE90-.LASFDE90
.LASFDE90:
	.secrel32	.Lframe0
	.quad	.LFB8987
	.quad	.LFE8987-.LFB8987
	.byte	0x4
	.long	.LCFI146-.LFB8987
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI147-.LCFI146
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI148-.LCFI147
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE90:
.LSFDE92:
	.long	.LEFDE92-.LASFDE92
.LASFDE92:
	.secrel32	.Lframe0
	.quad	.LFB8988
	.quad	.LFE8988-.LFB8988
	.byte	0x4
	.long	.LCFI149-.LFB8988
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI150-.LCFI149
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI151-.LCFI150
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE92:
.LSFDE94:
	.long	.LEFDE94-.LASFDE94
.LASFDE94:
	.secrel32	.Lframe0
	.quad	.LFB8989
	.quad	.LFE8989-.LFB8989
	.byte	0x4
	.long	.LCFI152-.LFB8989
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI153-.LCFI152
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI154-.LCFI153
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE94:
.LSFDE96:
	.long	.LEFDE96-.LASFDE96
.LASFDE96:
	.secrel32	.Lframe0
	.quad	.LFB8990
	.quad	.LFE8990-.LFB8990
	.byte	0x4
	.long	.LCFI155-.LFB8990
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI156-.LCFI155
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI157-.LCFI156
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI158-.LCFI157
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI159-.LCFI158
	.byte	0xc3
	.byte	0x4
	.long	.LCFI160-.LCFI159
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE96:
.LSFDE98:
	.long	.LEFDE98-.LASFDE98
.LASFDE98:
	.secrel32	.Lframe0
	.quad	.LFB8991
	.quad	.LFE8991-.LFB8991
	.byte	0x4
	.long	.LCFI161-.LFB8991
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI162-.LCFI161
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI163-.LCFI162
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE98:
.LSFDE100:
	.long	.LEFDE100-.LASFDE100
.LASFDE100:
	.secrel32	.Lframe0
	.quad	.LFB9402
	.quad	.LFE9402-.LFB9402
	.byte	0x4
	.long	.LCFI164-.LFB9402
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI165-.LCFI164
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI166-.LCFI165
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE100:
.LSFDE102:
	.long	.LEFDE102-.LASFDE102
.LASFDE102:
	.secrel32	.Lframe0
	.quad	.LFB9404
	.quad	.LFE9404-.LFB9404
	.byte	0x4
	.long	.LCFI167-.LFB9404
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI168-.LCFI167
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI169-.LCFI168
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE102:
.LSFDE104:
	.long	.LEFDE104-.LASFDE104
.LASFDE104:
	.secrel32	.Lframe0
	.quad	.LFB9603
	.quad	.LFE9603-.LFB9603
	.byte	0x4
	.long	.LCFI170-.LFB9603
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI171-.LCFI170
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI172-.LCFI171
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE104:
.LSFDE106:
	.long	.LEFDE106-.LASFDE106
.LASFDE106:
	.secrel32	.Lframe0
	.quad	.LFB9606
	.quad	.LFE9606-.LFB9606
	.byte	0x4
	.long	.LCFI173-.LFB9606
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI174-.LCFI173
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI175-.LCFI174
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE106:
.LSFDE108:
	.long	.LEFDE108-.LASFDE108
.LASFDE108:
	.secrel32	.Lframe0
	.quad	.LFB9610
	.quad	.LFE9610-.LFB9610
	.byte	0x4
	.long	.LCFI176-.LFB9610
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI177-.LCFI176
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI178-.LCFI177
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE108:
.LSFDE110:
	.long	.LEFDE110-.LASFDE110
.LASFDE110:
	.secrel32	.Lframe0
	.quad	.LFB9614
	.quad	.LFE9614-.LFB9614
	.byte	0x4
	.long	.LCFI179-.LFB9614
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI180-.LCFI179
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI181-.LCFI180
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE110:
.LSFDE112:
	.long	.LEFDE112-.LASFDE112
.LASFDE112:
	.secrel32	.Lframe0
	.quad	.LFB9615
	.quad	.LFE9615-.LFB9615
	.byte	0x4
	.long	.LCFI182-.LFB9615
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI183-.LCFI182
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI184-.LCFI183
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE112:
.LSFDE114:
	.long	.LEFDE114-.LASFDE114
.LASFDE114:
	.secrel32	.Lframe0
	.quad	.LFB9617
	.quad	.LFE9617-.LFB9617
	.byte	0x4
	.long	.LCFI185-.LFB9617
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI186-.LCFI185
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI187-.LCFI186
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE114:
.LSFDE116:
	.long	.LEFDE116-.LASFDE116
.LASFDE116:
	.secrel32	.Lframe0
	.quad	.LFB9618
	.quad	.LFE9618-.LFB9618
	.byte	0x4
	.long	.LCFI188-.LFB9618
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI189-.LCFI188
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI190-.LCFI189
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE116:
.LSFDE118:
	.long	.LEFDE118-.LASFDE118
.LASFDE118:
	.secrel32	.Lframe0
	.quad	.LFB9625
	.quad	.LFE9625-.LFB9625
	.byte	0x4
	.long	.LCFI191-.LFB9625
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI192-.LCFI191
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI193-.LCFI192
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE118:
.LSFDE120:
	.long	.LEFDE120-.LASFDE120
.LASFDE120:
	.secrel32	.Lframe0
	.quad	.LFB9626
	.quad	.LFE9626-.LFB9626
	.byte	0x4
	.long	.LCFI194-.LFB9626
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI195-.LCFI194
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI196-.LCFI195
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE120:
.LSFDE122:
	.long	.LEFDE122-.LASFDE122
.LASFDE122:
	.secrel32	.Lframe0
	.quad	.LFB9627
	.quad	.LFE9627-.LFB9627
	.byte	0x4
	.long	.LCFI197-.LFB9627
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI198-.LCFI197
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI199-.LCFI198
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE122:
.LSFDE124:
	.long	.LEFDE124-.LASFDE124
.LASFDE124:
	.secrel32	.Lframe0
	.quad	.LFB9701
	.quad	.LFE9701-.LFB9701
	.byte	0x4
	.long	.LCFI200-.LFB9701
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI201-.LCFI200
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI202-.LCFI201
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE124:
.LSFDE126:
	.long	.LEFDE126-.LASFDE126
.LASFDE126:
	.secrel32	.Lframe0
	.quad	.LFB9700
	.quad	.LFE9700-.LFB9700
	.byte	0x4
	.long	.LCFI203-.LFB9700
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI204-.LCFI203
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI205-.LCFI204
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI206-.LCFI205
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI207-.LCFI206
	.byte	0xc3
	.byte	0x4
	.long	.LCFI208-.LCFI207
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE126:
.LSFDE128:
	.long	.LEFDE128-.LASFDE128
.LASFDE128:
	.secrel32	.Lframe0
	.quad	.LFB9703
	.quad	.LFE9703-.LFB9703
	.byte	0x4
	.long	.LCFI209-.LFB9703
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI210-.LCFI209
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI211-.LCFI210
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE128:
.LSFDE130:
	.long	.LEFDE130-.LASFDE130
.LASFDE130:
	.secrel32	.Lframe0
	.quad	.LFB9707
	.quad	.LFE9707-.LFB9707
	.byte	0x4
	.long	.LCFI212-.LFB9707
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI213-.LCFI212
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI214-.LCFI213
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE130:
.LSFDE132:
	.long	.LEFDE132-.LASFDE132
.LASFDE132:
	.secrel32	.Lframe0
	.quad	.LFB9708
	.quad	.LFE9708-.LFB9708
	.byte	0x4
	.long	.LCFI215-.LFB9708
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI216-.LCFI215
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI217-.LCFI216
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE132:
.LSFDE134:
	.long	.LEFDE134-.LASFDE134
.LASFDE134:
	.secrel32	.Lframe0
	.quad	.LFB9727
	.quad	.LFE9727-.LFB9727
	.byte	0x4
	.long	.LCFI218-.LFB9727
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI219-.LCFI218
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI220-.LCFI219
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE134:
.LSFDE136:
	.long	.LEFDE136-.LASFDE136
.LASFDE136:
	.secrel32	.Lframe0
	.quad	.LFB9747
	.quad	.LFE9747-.LFB9747
	.byte	0x4
	.long	.LCFI221-.LFB9747
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI222-.LCFI221
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI223-.LCFI222
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE136:
.LSFDE138:
	.long	.LEFDE138-.LASFDE138
.LASFDE138:
	.secrel32	.Lframe0
	.quad	.LFB9743
	.quad	.LFE9743-.LFB9743
	.byte	0x4
	.long	.LCFI224-.LFB9743
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI225-.LCFI224
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI226-.LCFI225
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI227-.LCFI226
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI228-.LCFI227
	.byte	0xc3
	.byte	0x4
	.long	.LCFI229-.LCFI228
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE138:
.LSFDE140:
	.long	.LEFDE140-.LASFDE140
.LASFDE140:
	.secrel32	.Lframe0
	.quad	.LFB9886
	.quad	.LFE9886-.LFB9886
	.byte	0x4
	.long	.LCFI230-.LFB9886
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI231-.LCFI230
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI232-.LCFI231
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE140:
.LSFDE142:
	.long	.LEFDE142-.LASFDE142
.LASFDE142:
	.secrel32	.Lframe0
	.quad	.LFB10606
	.quad	.LFE10606-.LFB10606
	.byte	0x4
	.long	.LCFI233-.LFB10606
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI234-.LCFI233
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI235-.LCFI234
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE142:
.LSFDE144:
	.long	.LEFDE144-.LASFDE144
.LASFDE144:
	.secrel32	.Lframe0
	.quad	.LFB10637
	.quad	.LFE10637-.LFB10637
	.byte	0x4
	.long	.LCFI236-.LFB10637
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI237-.LCFI236
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI238-.LCFI237
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE144:
.LSFDE146:
	.long	.LEFDE146-.LASFDE146
.LASFDE146:
	.secrel32	.Lframe0
	.quad	.LFB10642
	.quad	.LFE10642-.LFB10642
	.byte	0x4
	.long	.LCFI239-.LFB10642
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI240-.LCFI239
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI241-.LCFI240
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE146:
.LSFDE148:
	.long	.LEFDE148-.LASFDE148
.LASFDE148:
	.secrel32	.Lframe0
	.quad	.LFB10691
	.quad	.LFE10691-.LFB10691
	.byte	0x4
	.long	.LCFI242-.LFB10691
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI243-.LCFI242
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI244-.LCFI243
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE148:
.LSFDE150:
	.long	.LEFDE150-.LASFDE150
.LASFDE150:
	.secrel32	.Lframe0
	.quad	.LFB10696
	.quad	.LFE10696-.LFB10696
	.byte	0x4
	.long	.LCFI245-.LFB10696
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI246-.LCFI245
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI247-.LCFI246
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE150:
.LSFDE152:
	.long	.LEFDE152-.LASFDE152
.LASFDE152:
	.secrel32	.Lframe0
	.quad	.LFB10722
	.quad	.LFE10722-.LFB10722
	.byte	0x4
	.long	.LCFI248-.LFB10722
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI249-.LCFI248
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI250-.LCFI249
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE152:
.LSFDE154:
	.long	.LEFDE154-.LASFDE154
.LASFDE154:
	.secrel32	.Lframe0
	.quad	.LFB10823
	.quad	.LFE10823-.LFB10823
	.byte	0x4
	.long	.LCFI251-.LFB10823
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI252-.LCFI251
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI253-.LCFI252
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE154:
.LSFDE156:
	.long	.LEFDE156-.LASFDE156
.LASFDE156:
	.secrel32	.Lframe0
	.quad	.LFB10884
	.quad	.LFE10884-.LFB10884
	.byte	0x4
	.long	.LCFI254-.LFB10884
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI255-.LCFI254
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI256-.LCFI255
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE156:
.LSFDE158:
	.long	.LEFDE158-.LASFDE158
.LASFDE158:
	.secrel32	.Lframe0
	.quad	.LFB10890
	.quad	.LFE10890-.LFB10890
	.byte	0x4
	.long	.LCFI257-.LFB10890
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI258-.LCFI257
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI259-.LCFI258
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE158:
.LSFDE160:
	.long	.LEFDE160-.LASFDE160
.LASFDE160:
	.secrel32	.Lframe0
	.quad	.LFB10891
	.quad	.LFE10891-.LFB10891
	.byte	0x4
	.long	.LCFI260-.LFB10891
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI261-.LCFI260
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI262-.LCFI261
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE160:
.LSFDE162:
	.long	.LEFDE162-.LASFDE162
.LASFDE162:
	.secrel32	.Lframe0
	.quad	.LFB10892
	.quad	.LFE10892-.LFB10892
	.byte	0x4
	.long	.LCFI263-.LFB10892
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI264-.LCFI263
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI265-.LCFI264
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE162:
.LSFDE164:
	.long	.LEFDE164-.LASFDE164
.LASFDE164:
	.secrel32	.Lframe0
	.quad	.LFB10893
	.quad	.LFE10893-.LFB10893
	.byte	0x4
	.long	.LCFI266-.LFB10893
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI267-.LCFI266
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI268-.LCFI267
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE164:
.LSFDE166:
	.long	.LEFDE166-.LASFDE166
.LASFDE166:
	.secrel32	.Lframe0
	.quad	.LFB10905
	.quad	.LFE10905-.LFB10905
	.byte	0x4
	.long	.LCFI269-.LFB10905
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI270-.LCFI269
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI271-.LCFI270
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE166:
.LSFDE168:
	.long	.LEFDE168-.LASFDE168
.LASFDE168:
	.secrel32	.Lframe0
	.quad	.LFB10908
	.quad	.LFE10908-.LFB10908
	.byte	0x4
	.long	.LCFI272-.LFB10908
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI273-.LCFI272
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI274-.LCFI273
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE168:
.LSFDE170:
	.long	.LEFDE170-.LASFDE170
.LASFDE170:
	.secrel32	.Lframe0
	.quad	.LFB10912
	.quad	.LFE10912-.LFB10912
	.byte	0x4
	.long	.LCFI275-.LFB10912
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI276-.LCFI275
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI277-.LCFI276
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE170:
.LSFDE172:
	.long	.LEFDE172-.LASFDE172
.LASFDE172:
	.secrel32	.Lframe0
	.quad	.LFB10914
	.quad	.LFE10914-.LFB10914
	.byte	0x4
	.long	.LCFI278-.LFB10914
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI279-.LCFI278
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI280-.LCFI279
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE172:
.LSFDE174:
	.long	.LEFDE174-.LASFDE174
.LASFDE174:
	.secrel32	.Lframe0
	.quad	.LFB10913
	.quad	.LFE10913-.LFB10913
	.byte	0x4
	.long	.LCFI281-.LFB10913
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI282-.LCFI281
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI283-.LCFI282
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE174:
.LSFDE176:
	.long	.LEFDE176-.LASFDE176
.LASFDE176:
	.secrel32	.Lframe0
	.quad	.LFB10909
	.quad	.LFE10909-.LFB10909
	.byte	0x4
	.long	.LCFI284-.LFB10909
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI285-.LCFI284
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI286-.LCFI285
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI287-.LCFI286
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI288-.LCFI287
	.byte	0xe
	.uleb128 0x90
	.byte	0x4
	.long	.LCFI289-.LCFI288
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI290-.LCFI289
	.byte	0xc3
	.byte	0x4
	.long	.LCFI291-.LCFI290
	.byte	0xc4
	.byte	0x4
	.long	.LCFI292-.LCFI291
	.byte	0xc5
	.byte	0x4
	.long	.LCFI293-.LCFI292
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 9
	.align 8
.LEFDE176:
.LSFDE178:
	.long	.LEFDE178-.LASFDE178
.LASFDE178:
	.secrel32	.Lframe0
	.quad	.LFB10916
	.quad	.LFE10916-.LFB10916
	.byte	0x4
	.long	.LCFI294-.LFB10916
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI295-.LCFI294
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI296-.LCFI295
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI297-.LCFI296
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI298-.LCFI297
	.byte	0xc3
	.byte	0x4
	.long	.LCFI299-.LCFI298
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE178:
.LSFDE180:
	.long	.LEFDE180-.LASFDE180
.LASFDE180:
	.secrel32	.Lframe0
	.quad	.LFB10917
	.quad	.LFE10917-.LFB10917
	.byte	0x4
	.long	.LCFI300-.LFB10917
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI301-.LCFI300
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI302-.LCFI301
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI303-.LCFI302
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI304-.LCFI303
	.byte	0xc3
	.byte	0x4
	.long	.LCFI305-.LCFI304
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE180:
.LSFDE182:
	.long	.LEFDE182-.LASFDE182
.LASFDE182:
	.secrel32	.Lframe0
	.quad	.LFB10918
	.quad	.LFE10918-.LFB10918
	.byte	0x4
	.long	.LCFI306-.LFB10918
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI307-.LCFI306
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI308-.LCFI307
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE182:
.LSFDE184:
	.long	.LEFDE184-.LASFDE184
.LASFDE184:
	.secrel32	.Lframe0
	.quad	.LFB10921
	.quad	.LFE10921-.LFB10921
	.byte	0x4
	.long	.LCFI309-.LFB10921
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI310-.LCFI309
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI311-.LCFI310
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE184:
.LSFDE186:
	.long	.LEFDE186-.LASFDE186
.LASFDE186:
	.secrel32	.Lframe0
	.quad	.LFB10922
	.quad	.LFE10922-.LFB10922
	.byte	0x4
	.long	.LCFI312-.LFB10922
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI313-.LCFI312
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI314-.LCFI313
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE186:
.LSFDE188:
	.long	.LEFDE188-.LASFDE188
.LASFDE188:
	.secrel32	.Lframe0
	.quad	.LFB10923
	.quad	.LFE10923-.LFB10923
	.byte	0x4
	.long	.LCFI315-.LFB10923
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI316-.LCFI315
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI317-.LCFI316
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE188:
.LSFDE190:
	.long	.LEFDE190-.LASFDE190
.LASFDE190:
	.secrel32	.Lframe0
	.quad	.LFB10924
	.quad	.LFE10924-.LFB10924
	.byte	0x4
	.long	.LCFI318-.LFB10924
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI319-.LCFI318
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI320-.LCFI319
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI321-.LCFI320
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI322-.LCFI321
	.byte	0xc3
	.byte	0x4
	.long	.LCFI323-.LCFI322
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE190:
.LSFDE192:
	.long	.LEFDE192-.LASFDE192
.LASFDE192:
	.secrel32	.Lframe0
	.quad	.LFB10925
	.quad	.LFE10925-.LFB10925
	.byte	0x4
	.long	.LCFI324-.LFB10925
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI325-.LCFI324
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI326-.LCFI325
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE192:
.LSFDE194:
	.long	.LEFDE194-.LASFDE194
.LASFDE194:
	.secrel32	.Lframe0
	.quad	.LFB10926
	.quad	.LFE10926-.LFB10926
	.byte	0x4
	.long	.LCFI327-.LFB10926
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI328-.LCFI327
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI329-.LCFI328
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI330-.LCFI329
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI331-.LCFI330
	.byte	0xc3
	.byte	0x4
	.long	.LCFI332-.LCFI331
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE194:
.LSFDE196:
	.long	.LEFDE196-.LASFDE196
.LASFDE196:
	.secrel32	.Lframe0
	.quad	.LFB10927
	.quad	.LFE10927-.LFB10927
	.byte	0x4
	.long	.LCFI333-.LFB10927
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI334-.LCFI333
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI335-.LCFI334
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI336-.LCFI335
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI337-.LCFI336
	.byte	0xc3
	.byte	0x4
	.long	.LCFI338-.LCFI337
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE196:
.LSFDE198:
	.long	.LEFDE198-.LASFDE198
.LASFDE198:
	.secrel32	.Lframe0
	.quad	.LFB10928
	.quad	.LFE10928-.LFB10928
	.byte	0x4
	.long	.LCFI339-.LFB10928
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI340-.LCFI339
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI341-.LCFI340
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI342-.LCFI341
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI343-.LCFI342
	.byte	0xc3
	.byte	0x4
	.long	.LCFI344-.LCFI343
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE198:
.LSFDE200:
	.long	.LEFDE200-.LASFDE200
.LASFDE200:
	.secrel32	.Lframe0
	.quad	.LFB10929
	.quad	.LFE10929-.LFB10929
	.byte	0x4
	.long	.LCFI345-.LFB10929
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI346-.LCFI345
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI347-.LCFI346
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI348-.LCFI347
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI349-.LCFI348
	.byte	0xc3
	.byte	0x4
	.long	.LCFI350-.LCFI349
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE200:
.LSFDE202:
	.long	.LEFDE202-.LASFDE202
.LASFDE202:
	.secrel32	.Lframe0
	.quad	.LFB10930
	.quad	.LFE10930-.LFB10930
	.byte	0x4
	.long	.LCFI351-.LFB10930
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI352-.LCFI351
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI353-.LCFI352
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI354-.LCFI353
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI355-.LCFI354
	.byte	0xc3
	.byte	0x4
	.long	.LCFI356-.LCFI355
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE202:
.LSFDE204:
	.long	.LEFDE204-.LASFDE204
.LASFDE204:
	.secrel32	.Lframe0
	.quad	.LFB10931
	.quad	.LFE10931-.LFB10931
	.byte	0x4
	.long	.LCFI357-.LFB10931
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI358-.LCFI357
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI359-.LCFI358
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI360-.LCFI359
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI361-.LCFI360
	.byte	0xc3
	.byte	0x4
	.long	.LCFI362-.LCFI361
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE204:
.LSFDE206:
	.long	.LEFDE206-.LASFDE206
.LASFDE206:
	.secrel32	.Lframe0
	.quad	.LFB10932
	.quad	.LFE10932-.LFB10932
	.byte	0x4
	.long	.LCFI363-.LFB10932
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI364-.LCFI363
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI365-.LCFI364
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE206:
.LSFDE208:
	.long	.LEFDE208-.LASFDE208
.LASFDE208:
	.secrel32	.Lframe0
	.quad	.LFB10933
	.quad	.LFE10933-.LFB10933
	.byte	0x4
	.long	.LCFI366-.LFB10933
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI367-.LCFI366
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI368-.LCFI367
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE208:
.LSFDE210:
	.long	.LEFDE210-.LASFDE210
.LASFDE210:
	.secrel32	.Lframe0
	.quad	.LFB10934
	.quad	.LFE10934-.LFB10934
	.byte	0x4
	.long	.LCFI369-.LFB10934
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI370-.LCFI369
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI371-.LCFI370
	.byte	0xe
	.uleb128 0xa0
	.byte	0x4
	.long	.LCFI372-.LCFI371
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI373-.LCFI372
	.byte	0x97
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI374-.LCFI373
	.byte	0xd7
	.byte	0x4
	.long	.LCFI375-.LCFI374
	.byte	0xc3
	.byte	0x4
	.long	.LCFI376-.LCFI375
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 15
	.align 8
.LEFDE210:
.LSFDE212:
	.long	.LEFDE212-.LASFDE212
.LASFDE212:
	.secrel32	.Lframe0
	.quad	.LFB10935
	.quad	.LFE10935-.LFB10935
	.byte	0x4
	.long	.LCFI377-.LFB10935
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI378-.LCFI377
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI379-.LCFI378
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI380-.LCFI379
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI381-.LCFI380
	.byte	0xc3
	.byte	0x4
	.long	.LCFI382-.LCFI381
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE212:
.LSFDE214:
	.long	.LEFDE214-.LASFDE214
.LASFDE214:
	.secrel32	.Lframe0
	.quad	.LFB10936
	.quad	.LFE10936-.LFB10936
	.byte	0x4
	.long	.LCFI383-.LFB10936
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI384-.LCFI383
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI385-.LCFI384
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI386-.LCFI385
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI387-.LCFI386
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI388-.LCFI387
	.byte	0xc3
	.byte	0x4
	.long	.LCFI389-.LCFI388
	.byte	0xc4
	.byte	0x4
	.long	.LCFI390-.LCFI389
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE214:
.LSFDE216:
	.long	.LEFDE216-.LASFDE216
.LASFDE216:
	.secrel32	.Lframe0
	.quad	.LFB10937
	.quad	.LFE10937-.LFB10937
	.byte	0x4
	.long	.LCFI391-.LFB10937
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI392-.LCFI391
	.byte	0xe
	.uleb128 0x430
	.byte	0x4
	.long	.LCFI393-.LCFI392
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x3b0
	.byte	0x4
	.long	.LCFI394-.LCFI393
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 131
	.align 8
.LEFDE216:
.LSFDE218:
	.long	.LEFDE218-.LASFDE218
.LASFDE218:
	.secrel32	.Lframe0
	.quad	.LFB10943
	.quad	.LFE10943-.LFB10943
	.byte	0x4
	.long	.LCFI395-.LFB10943
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI396-.LCFI395
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI397-.LCFI396
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE218:
.LSFDE220:
	.long	.LEFDE220-.LASFDE220
.LASFDE220:
	.secrel32	.Lframe0
	.quad	.LFB10940
	.quad	.LFE10940-.LFB10940
	.byte	0x4
	.long	.LCFI398-.LFB10940
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI399-.LCFI398
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI400-.LCFI399
	.byte	0xe
	.uleb128 0x5e0
	.byte	0x4
	.long	.LCFI401-.LCFI400
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x560
	.byte	0x4
	.long	.LCFI402-.LCFI401
	.byte	0xc3
	.byte	0x4
	.long	.LCFI403-.LCFI402
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 183
	.align 8
.LEFDE220:
.LSFDE222:
	.long	.LEFDE222-.LASFDE222
.LASFDE222:
	.secrel32	.Lframe0
	.quad	.LFB10944
	.quad	.LFE10944-.LFB10944
	.byte	0x4
	.long	.LCFI404-.LFB10944
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI405-.LCFI404
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI406-.LCFI405
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE222:
.LSFDE224:
	.long	.LEFDE224-.LASFDE224
.LASFDE224:
	.secrel32	.Lframe0
	.quad	.LFB10945
	.quad	.LFE10945-.LFB10945
	.byte	0x4
	.long	.LCFI407-.LFB10945
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI408-.LCFI407
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI409-.LCFI408
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE224:
.LSFDE226:
	.long	.LEFDE226-.LASFDE226
.LASFDE226:
	.secrel32	.Lframe0
	.quad	.LFB10949
	.quad	.LFE10949-.LFB10949
	.byte	0x4
	.long	.LCFI410-.LFB10949
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI411-.LCFI410
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI412-.LCFI411
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE226:
.LSFDE228:
	.long	.LEFDE228-.LASFDE228
.LASFDE228:
	.secrel32	.Lframe0
	.quad	.LFB10964
	.quad	.LFE10964-.LFB10964
	.byte	0x4
	.long	.LCFI413-.LFB10964
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI414-.LCFI413
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI415-.LCFI414
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE228:
.LSFDE230:
	.long	.LEFDE230-.LASFDE230
.LASFDE230:
	.secrel32	.Lframe0
	.quad	.LFB10973
	.quad	.LFE10973-.LFB10973
	.byte	0x4
	.long	.LCFI416-.LFB10973
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI417-.LCFI416
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI418-.LCFI417
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE230:
.LSFDE232:
	.long	.LEFDE232-.LASFDE232
.LASFDE232:
	.secrel32	.Lframe0
	.quad	.LFB10984
	.quad	.LFE10984-.LFB10984
	.byte	0x4
	.long	.LCFI419-.LFB10984
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI420-.LCFI419
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI421-.LCFI420
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE232:
.LSFDE234:
	.long	.LEFDE234-.LASFDE234
.LASFDE234:
	.secrel32	.Lframe0
	.quad	.LFB10986
	.quad	.LFE10986-.LFB10986
	.byte	0x4
	.long	.LCFI422-.LFB10986
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI423-.LCFI422
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI424-.LCFI423
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE234:
.LSFDE236:
	.long	.LEFDE236-.LASFDE236
.LASFDE236:
	.secrel32	.Lframe0
	.quad	.LFB10988
	.quad	.LFE10988-.LFB10988
	.byte	0x4
	.long	.LCFI425-.LFB10988
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI426-.LCFI425
	.byte	0xe
	.uleb128 0x18
	.byte	0x8c
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI427-.LCFI426
	.byte	0xe
	.uleb128 0x20
	.byte	0x85
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI428-.LCFI427
	.byte	0xe
	.uleb128 0x28
	.byte	0x84
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI429-.LCFI428
	.byte	0xe
	.uleb128 0x30
	.byte	0x83
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI430-.LCFI429
	.byte	0xe
	.uleb128 0x90
	.byte	0x4
	.long	.LCFI431-.LCFI430
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI432-.LCFI431
	.byte	0xc3
	.byte	0x4
	.long	.LCFI433-.LCFI432
	.byte	0xc4
	.byte	0x4
	.long	.LCFI434-.LCFI433
	.byte	0xc5
	.byte	0x4
	.long	.LCFI435-.LCFI434
	.byte	0xcc
	.byte	0x4
	.long	.LCFI436-.LCFI435
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE236:
.LSFDE238:
	.long	.LEFDE238-.LASFDE238
.LASFDE238:
	.secrel32	.Lframe0
	.quad	.LFB10989
	.quad	.LFE10989-.LFB10989
	.byte	0x4
	.long	.LCFI437-.LFB10989
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI438-.LCFI437
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI439-.LCFI438
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE238:
.LSFDE240:
	.long	.LEFDE240-.LASFDE240
.LASFDE240:
	.secrel32	.Lframe0
	.quad	.LFB10992
	.quad	.LFE10992-.LFB10992
	.byte	0x4
	.long	.LCFI440-.LFB10992
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI441-.LCFI440
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI442-.LCFI441
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE240:
.LSFDE242:
	.long	.LEFDE242-.LASFDE242
.LASFDE242:
	.secrel32	.Lframe0
	.quad	.LFB10994
	.quad	.LFE10994-.LFB10994
	.byte	0x4
	.long	.LCFI443-.LFB10994
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI444-.LCFI443
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI445-.LCFI444
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE242:
.LSFDE244:
	.long	.LEFDE244-.LASFDE244
.LASFDE244:
	.secrel32	.Lframe0
	.quad	.LFB10995
	.quad	.LFE10995-.LFB10995
	.byte	0x4
	.long	.LCFI446-.LFB10995
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI447-.LCFI446
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI448-.LCFI447
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE244:
.LSFDE246:
	.long	.LEFDE246-.LASFDE246
.LASFDE246:
	.secrel32	.Lframe0
	.quad	.LFB10946
	.quad	.LFE10946-.LFB10946
	.byte	0x4
	.long	.LCFI449-.LFB10946
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI450-.LCFI449
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI451-.LCFI450
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI452-.LCFI451
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI453-.LCFI452
	.byte	0xe
	.uleb128 0x4a0
	.byte	0x4
	.long	.LCFI454-.LCFI453
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x420
	.byte	0x4
	.long	.LCFI455-.LCFI454
	.byte	0x97
	.uleb128 0xa
	.byte	0x98
	.uleb128 0x8
	.byte	0x4
	.long	.LCFI456-.LCFI455
	.byte	0xd8
	.byte	0xd7
	.byte	0x4
	.long	.LCFI457-.LCFI456
	.byte	0xc3
	.byte	0x4
	.long	.LCFI458-.LCFI457
	.byte	0xc4
	.byte	0x4
	.long	.LCFI459-.LCFI458
	.byte	0xc5
	.byte	0x4
	.long	.LCFI460-.LCFI459
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 139
	.align 8
.LEFDE246:
.LSFDE248:
	.long	.LEFDE248-.LASFDE248
.LASFDE248:
	.secrel32	.Lframe0
	.quad	.LFB11361
	.quad	.LFE11361-.LFB11361
	.byte	0x4
	.long	.LCFI461-.LFB11361
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI462-.LCFI461
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI463-.LCFI462
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE248:
.LSFDE250:
	.long	.LEFDE250-.LASFDE250
.LASFDE250:
	.secrel32	.Lframe0
	.quad	.LFB11364
	.quad	.LFE11364-.LFB11364
	.byte	0x4
	.long	.LCFI464-.LFB11364
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI465-.LCFI464
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI466-.LCFI465
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE250:
.LSFDE252:
	.long	.LEFDE252-.LASFDE252
.LASFDE252:
	.secrel32	.Lframe0
	.quad	.LFB11370
	.quad	.LFE11370-.LFB11370
	.byte	0x4
	.long	.LCFI467-.LFB11370
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI468-.LCFI467
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI469-.LCFI468
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE252:
.LSFDE254:
	.long	.LEFDE254-.LASFDE254
.LASFDE254:
	.secrel32	.Lframe0
	.quad	.LFB11371
	.quad	.LFE11371-.LFB11371
	.byte	0x4
	.long	.LCFI470-.LFB11371
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI471-.LCFI470
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI472-.LCFI471
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE254:
.LSFDE256:
	.long	.LEFDE256-.LASFDE256
.LASFDE256:
	.secrel32	.Lframe0
	.quad	.LFB11374
	.quad	.LFE11374-.LFB11374
	.byte	0x4
	.long	.LCFI473-.LFB11374
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI474-.LCFI473
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI475-.LCFI474
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE256:
.LSFDE258:
	.long	.LEFDE258-.LASFDE258
.LASFDE258:
	.secrel32	.Lframe0
	.quad	.LFB11422
	.quad	.LFE11422-.LFB11422
	.byte	0x4
	.long	.LCFI476-.LFB11422
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI477-.LCFI476
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI478-.LCFI477
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE258:
.LSFDE260:
	.long	.LEFDE260-.LASFDE260
.LASFDE260:
	.secrel32	.Lframe0
	.quad	.LFB11447
	.quad	.LFE11447-.LFB11447
	.byte	0x4
	.long	.LCFI479-.LFB11447
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI480-.LCFI479
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI481-.LCFI480
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE260:
.LSFDE262:
	.long	.LEFDE262-.LASFDE262
.LASFDE262:
	.secrel32	.Lframe0
	.quad	.LFB11448
	.quad	.LFE11448-.LFB11448
	.byte	0x4
	.long	.LCFI482-.LFB11448
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI483-.LCFI482
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI484-.LCFI483
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE262:
.LSFDE264:
	.long	.LEFDE264-.LASFDE264
.LASFDE264:
	.secrel32	.Lframe0
	.quad	.LFB11449
	.quad	.LFE11449-.LFB11449
	.byte	0x4
	.long	.LCFI485-.LFB11449
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI486-.LCFI485
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI487-.LCFI486
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE264:
.LSFDE266:
	.long	.LEFDE266-.LASFDE266
.LASFDE266:
	.secrel32	.Lframe0
	.quad	.LFB11450
	.quad	.LFE11450-.LFB11450
	.byte	0x4
	.long	.LCFI488-.LFB11450
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI489-.LCFI488
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI490-.LCFI489
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE266:
.LSFDE268:
	.long	.LEFDE268-.LASFDE268
.LASFDE268:
	.secrel32	.Lframe0
	.quad	.LFB11477
	.quad	.LFE11477-.LFB11477
	.byte	0x4
	.long	.LCFI491-.LFB11477
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI492-.LCFI491
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI493-.LCFI492
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE268:
.LSFDE270:
	.long	.LEFDE270-.LASFDE270
.LASFDE270:
	.secrel32	.Lframe0
	.quad	.LFB11481
	.quad	.LFE11481-.LFB11481
	.byte	0x4
	.long	.LCFI494-.LFB11481
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI495-.LCFI494
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI496-.LCFI495
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE270:
.LSFDE272:
	.long	.LEFDE272-.LASFDE272
.LASFDE272:
	.secrel32	.Lframe0
	.quad	.LFB11480
	.quad	.LFE11480-.LFB11480
	.byte	0x4
	.long	.LCFI497-.LFB11480
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI498-.LCFI497
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI499-.LCFI498
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI500-.LCFI499
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI501-.LCFI500
	.byte	0xc3
	.byte	0x4
	.long	.LCFI502-.LCFI501
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE272:
.LSFDE274:
	.long	.LEFDE274-.LASFDE274
.LASFDE274:
	.secrel32	.Lframe0
	.quad	.LFB11479
	.quad	.LFE11479-.LFB11479
	.byte	0x4
	.long	.LCFI503-.LFB11479
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI504-.LCFI503
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI505-.LCFI504
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE274:
.LSFDE276:
	.long	.LEFDE276-.LASFDE276
.LASFDE276:
	.secrel32	.Lframe0
	.quad	.LFB11485
	.quad	.LFE11485-.LFB11485
	.byte	0x4
	.long	.LCFI506-.LFB11485
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI507-.LCFI506
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI508-.LCFI507
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE276:
.LSFDE278:
	.long	.LEFDE278-.LASFDE278
.LASFDE278:
	.secrel32	.Lframe0
	.quad	.LFB11489
	.quad	.LFE11489-.LFB11489
	.byte	0x4
	.long	.LCFI509-.LFB11489
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI510-.LCFI509
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI511-.LCFI510
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE278:
.LSFDE280:
	.long	.LEFDE280-.LASFDE280
.LASFDE280:
	.secrel32	.Lframe0
	.quad	.LFB11554
	.quad	.LFE11554-.LFB11554
	.byte	0x4
	.long	.LCFI512-.LFB11554
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI513-.LCFI512
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI514-.LCFI513
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE280:
.LSFDE282:
	.long	.LEFDE282-.LASFDE282
.LASFDE282:
	.secrel32	.Lframe0
	.quad	.LFB11556
	.quad	.LFE11556-.LFB11556
	.byte	0x4
	.long	.LCFI515-.LFB11556
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI516-.LCFI515
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI517-.LCFI516
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE282:
.LSFDE284:
	.long	.LEFDE284-.LASFDE284
.LASFDE284:
	.secrel32	.Lframe0
	.quad	.LFB11559
	.quad	.LFE11559-.LFB11559
	.byte	0x4
	.long	.LCFI518-.LFB11559
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI519-.LCFI518
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI520-.LCFI519
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE284:
.LSFDE286:
	.long	.LEFDE286-.LASFDE286
.LASFDE286:
	.secrel32	.Lframe0
	.quad	.LFB11560
	.quad	.LFE11560-.LFB11560
	.byte	0x4
	.long	.LCFI521-.LFB11560
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI522-.LCFI521
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI523-.LCFI522
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE286:
.LSFDE288:
	.long	.LEFDE288-.LASFDE288
.LASFDE288:
	.secrel32	.Lframe0
	.quad	.LFB11561
	.quad	.LFE11561-.LFB11561
	.byte	0x4
	.long	.LCFI524-.LFB11561
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI525-.LCFI524
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI526-.LCFI525
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE288:
.LSFDE290:
	.long	.LEFDE290-.LASFDE290
.LASFDE290:
	.secrel32	.Lframe0
	.quad	.LFB11562
	.quad	.LFE11562-.LFB11562
	.byte	0x4
	.long	.LCFI527-.LFB11562
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI528-.LCFI527
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI529-.LCFI528
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE290:
.LSFDE292:
	.long	.LEFDE292-.LASFDE292
.LASFDE292:
	.secrel32	.Lframe0
	.quad	.LFB11563
	.quad	.LFE11563-.LFB11563
	.byte	0x4
	.long	.LCFI530-.LFB11563
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI531-.LCFI530
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI532-.LCFI531
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE292:
.LSFDE294:
	.long	.LEFDE294-.LASFDE294
.LASFDE294:
	.secrel32	.Lframe0
	.quad	.LFB11564
	.quad	.LFE11564-.LFB11564
	.byte	0x4
	.long	.LCFI533-.LFB11564
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI534-.LCFI533
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI535-.LCFI534
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE294:
.LSFDE296:
	.long	.LEFDE296-.LASFDE296
.LASFDE296:
	.secrel32	.Lframe0
	.quad	.LFB11569
	.quad	.LFE11569-.LFB11569
	.byte	0x4
	.long	.LCFI536-.LFB11569
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI537-.LCFI536
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI538-.LCFI537
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE296:
.LSFDE298:
	.long	.LEFDE298-.LASFDE298
.LASFDE298:
	.secrel32	.Lframe0
	.quad	.LFB11572
	.quad	.LFE11572-.LFB11572
	.byte	0x4
	.long	.LCFI539-.LFB11572
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI540-.LCFI539
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI541-.LCFI540
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE298:
.LSFDE300:
	.long	.LEFDE300-.LASFDE300
.LASFDE300:
	.secrel32	.Lframe0
	.quad	.LFB11574
	.quad	.LFE11574-.LFB11574
	.byte	0x4
	.long	.LCFI542-.LFB11574
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI543-.LCFI542
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI544-.LCFI543
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE300:
.LSFDE302:
	.long	.LEFDE302-.LASFDE302
.LASFDE302:
	.secrel32	.Lframe0
	.quad	.LFB11578
	.quad	.LFE11578-.LFB11578
	.byte	0x4
	.long	.LCFI545-.LFB11578
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI546-.LCFI545
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI547-.LCFI546
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE302:
.LSFDE304:
	.long	.LEFDE304-.LASFDE304
.LASFDE304:
	.secrel32	.Lframe0
	.quad	.LFB11580
	.quad	.LFE11580-.LFB11580
	.byte	0x4
	.long	.LCFI548-.LFB11580
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI549-.LCFI548
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI550-.LCFI549
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE304:
.LSFDE306:
	.long	.LEFDE306-.LASFDE306
.LASFDE306:
	.secrel32	.Lframe0
	.quad	.LFB11583
	.quad	.LFE11583-.LFB11583
	.byte	0x4
	.long	.LCFI551-.LFB11583
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI552-.LCFI551
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI553-.LCFI552
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE306:
.LSFDE308:
	.long	.LEFDE308-.LASFDE308
.LASFDE308:
	.secrel32	.Lframe0
	.quad	.LFB11584
	.quad	.LFE11584-.LFB11584
	.byte	0x4
	.long	.LCFI554-.LFB11584
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI555-.LCFI554
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI556-.LCFI555
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE308:
.LSFDE310:
	.long	.LEFDE310-.LASFDE310
.LASFDE310:
	.secrel32	.Lframe0
	.quad	.LFB11586
	.quad	.LFE11586-.LFB11586
	.byte	0x4
	.long	.LCFI557-.LFB11586
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI558-.LCFI557
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI559-.LCFI558
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI560-.LCFI559
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI561-.LCFI560
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI562-.LCFI561
	.byte	0xc3
	.byte	0x4
	.long	.LCFI563-.LCFI562
	.byte	0xc4
	.byte	0x4
	.long	.LCFI564-.LCFI563
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE310:
.LSFDE312:
	.long	.LEFDE312-.LASFDE312
.LASFDE312:
	.secrel32	.Lframe0
	.quad	.LFB11589
	.quad	.LFE11589-.LFB11589
	.byte	0x4
	.long	.LCFI565-.LFB11589
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI566-.LCFI565
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI567-.LCFI566
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE312:
.LSFDE314:
	.long	.LEFDE314-.LASFDE314
.LASFDE314:
	.secrel32	.Lframe0
	.quad	.LFB11591
	.quad	.LFE11591-.LFB11591
	.byte	0x4
	.long	.LCFI568-.LFB11591
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI569-.LCFI568
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI570-.LCFI569
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE314:
.LSFDE316:
	.long	.LEFDE316-.LASFDE316
.LASFDE316:
	.secrel32	.Lframe0
	.quad	.LFB11595
	.quad	.LFE11595-.LFB11595
	.byte	0x4
	.long	.LCFI571-.LFB11595
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI572-.LCFI571
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI573-.LCFI572
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE316:
.LSFDE318:
	.long	.LEFDE318-.LASFDE318
.LASFDE318:
	.secrel32	.Lframe0
	.quad	.LFB11592
	.quad	.LFE11592-.LFB11592
	.byte	0x4
	.long	.LCFI574-.LFB11592
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI575-.LCFI574
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI576-.LCFI575
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE318:
.LSFDE320:
	.long	.LEFDE320-.LASFDE320
.LASFDE320:
	.secrel32	.Lframe0
	.quad	.LFB11611
	.quad	.LFE11611-.LFB11611
	.byte	0x4
	.long	.LCFI577-.LFB11611
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI578-.LCFI577
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI579-.LCFI578
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI580-.LCFI579
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI581-.LCFI580
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI582-.LCFI581
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI583-.LCFI582
	.byte	0xc3
	.byte	0x4
	.long	.LCFI584-.LCFI583
	.byte	0xc4
	.byte	0x4
	.long	.LCFI585-.LCFI584
	.byte	0xc5
	.byte	0x4
	.long	.LCFI586-.LCFI585
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE320:
.LSFDE322:
	.long	.LEFDE322-.LASFDE322
.LASFDE322:
	.secrel32	.Lframe0
	.quad	.LFB11614
	.quad	.LFE11614-.LFB11614
	.byte	0x4
	.long	.LCFI587-.LFB11614
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI588-.LCFI587
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI589-.LCFI588
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE322:
.LSFDE324:
	.long	.LEFDE324-.LASFDE324
.LASFDE324:
	.secrel32	.Lframe0
	.quad	.LFB11613
	.quad	.LFE11613-.LFB11613
	.byte	0x4
	.long	.LCFI590-.LFB11613
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI591-.LCFI590
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI592-.LCFI591
	.byte	0xe
	.uleb128 0xf0
	.byte	0x4
	.long	.LCFI593-.LCFI592
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI594-.LCFI593
	.byte	0xc3
	.byte	0x4
	.long	.LCFI595-.LCFI594
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 25
	.align 8
.LEFDE324:
.LSFDE326:
	.long	.LEFDE326-.LASFDE326
.LASFDE326:
	.secrel32	.Lframe0
	.quad	.LFB11622
	.quad	.LFE11622-.LFB11622
	.byte	0x4
	.long	.LCFI596-.LFB11622
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI597-.LCFI596
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI598-.LCFI597
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI599-.LCFI598
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI600-.LCFI599
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI601-.LCFI600
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI602-.LCFI601
	.byte	0xc3
	.byte	0x4
	.long	.LCFI603-.LCFI602
	.byte	0xc4
	.byte	0x4
	.long	.LCFI604-.LCFI603
	.byte	0xc5
	.byte	0x4
	.long	.LCFI605-.LCFI604
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE326:
.LSFDE328:
	.long	.LEFDE328-.LASFDE328
.LASFDE328:
	.secrel32	.Lframe0
	.quad	.LFB11624
	.quad	.LFE11624-.LFB11624
	.byte	0x4
	.long	.LCFI606-.LFB11624
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI607-.LCFI606
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI608-.LCFI607
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE328:
.LSFDE330:
	.long	.LEFDE330-.LASFDE330
.LASFDE330:
	.secrel32	.Lframe0
	.quad	.LFB11625
	.quad	.LFE11625-.LFB11625
	.byte	0x4
	.long	.LCFI609-.LFB11625
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI610-.LCFI609
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI611-.LCFI610
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE330:
.LSFDE332:
	.long	.LEFDE332-.LASFDE332
.LASFDE332:
	.secrel32	.Lframe0
	.quad	.LFB11626
	.quad	.LFE11626-.LFB11626
	.byte	0x4
	.long	.LCFI612-.LFB11626
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI613-.LCFI612
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI614-.LCFI613
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE332:
.LSFDE334:
	.long	.LEFDE334-.LASFDE334
.LASFDE334:
	.secrel32	.Lframe0
	.quad	.LFB11629
	.quad	.LFE11629-.LFB11629
	.byte	0x4
	.long	.LCFI615-.LFB11629
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI616-.LCFI615
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI617-.LCFI616
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE334:
.LSFDE336:
	.long	.LEFDE336-.LASFDE336
.LASFDE336:
	.secrel32	.Lframe0
	.quad	.LFB11630
	.quad	.LFE11630-.LFB11630
	.byte	0x4
	.long	.LCFI618-.LFB11630
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI619-.LCFI618
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI620-.LCFI619
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE336:
.LSFDE338:
	.long	.LEFDE338-.LASFDE338
.LASFDE338:
	.secrel32	.Lframe0
	.quad	.LFB11631
	.quad	.LFE11631-.LFB11631
	.byte	0x4
	.long	.LCFI621-.LFB11631
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI622-.LCFI621
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI623-.LCFI622
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI624-.LCFI623
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI625-.LCFI624
	.byte	0xc3
	.byte	0x4
	.long	.LCFI626-.LCFI625
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE338:
.LSFDE340:
	.long	.LEFDE340-.LASFDE340
.LASFDE340:
	.secrel32	.Lframe0
	.quad	.LFB11802
	.quad	.LFE11802-.LFB11802
	.byte	0x4
	.long	.LCFI627-.LFB11802
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI628-.LCFI627
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI629-.LCFI628
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE340:
.LSFDE342:
	.long	.LEFDE342-.LASFDE342
.LASFDE342:
	.secrel32	.Lframe0
	.quad	.LFB11808
	.quad	.LFE11808-.LFB11808
	.byte	0x4
	.long	.LCFI630-.LFB11808
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI631-.LCFI630
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI632-.LCFI631
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE342:
.LSFDE344:
	.long	.LEFDE344-.LASFDE344
.LASFDE344:
	.secrel32	.Lframe0
	.quad	.LFB11814
	.quad	.LFE11814-.LFB11814
	.byte	0x4
	.long	.LCFI633-.LFB11814
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI634-.LCFI633
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI635-.LCFI634
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE344:
.LSFDE346:
	.long	.LEFDE346-.LASFDE346
.LASFDE346:
	.secrel32	.Lframe0
	.quad	.LFB11815
	.quad	.LFE11815-.LFB11815
	.byte	0x4
	.long	.LCFI636-.LFB11815
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI637-.LCFI636
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI638-.LCFI637
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE346:
.LSFDE348:
	.long	.LEFDE348-.LASFDE348
.LASFDE348:
	.secrel32	.Lframe0
	.quad	.LFB11816
	.quad	.LFE11816-.LFB11816
	.byte	0x4
	.long	.LCFI639-.LFB11816
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI640-.LCFI639
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI641-.LCFI640
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE348:
.LSFDE350:
	.long	.LEFDE350-.LASFDE350
.LASFDE350:
	.secrel32	.Lframe0
	.quad	.LFB11825
	.quad	.LFE11825-.LFB11825
	.byte	0x4
	.long	.LCFI642-.LFB11825
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI643-.LCFI642
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI644-.LCFI643
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE350:
.LSFDE352:
	.long	.LEFDE352-.LASFDE352
.LASFDE352:
	.secrel32	.Lframe0
	.quad	.LFB11827
	.quad	.LFE11827-.LFB11827
	.byte	0x4
	.long	.LCFI645-.LFB11827
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI646-.LCFI645
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI647-.LCFI646
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE352:
.LSFDE354:
	.long	.LEFDE354-.LASFDE354
.LASFDE354:
	.secrel32	.Lframe0
	.quad	.LFB11828
	.quad	.LFE11828-.LFB11828
	.byte	0x4
	.long	.LCFI648-.LFB11828
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI649-.LCFI648
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI650-.LCFI649
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE354:
.LSFDE356:
	.long	.LEFDE356-.LASFDE356
.LASFDE356:
	.secrel32	.Lframe0
	.quad	.LFB11829
	.quad	.LFE11829-.LFB11829
	.byte	0x4
	.long	.LCFI651-.LFB11829
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI652-.LCFI651
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI653-.LCFI652
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI654-.LCFI653
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI655-.LCFI654
	.byte	0xc3
	.byte	0x4
	.long	.LCFI656-.LCFI655
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE356:
.LSFDE358:
	.long	.LEFDE358-.LASFDE358
.LASFDE358:
	.secrel32	.Lframe0
	.quad	.LFB11833
	.quad	.LFE11833-.LFB11833
	.byte	0x4
	.long	.LCFI657-.LFB11833
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI658-.LCFI657
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI659-.LCFI658
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI660-.LCFI659
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI661-.LCFI660
	.byte	0xc3
	.byte	0x4
	.long	.LCFI662-.LCFI661
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE358:
.LSFDE360:
	.long	.LEFDE360-.LASFDE360
.LASFDE360:
	.secrel32	.Lframe0
	.quad	.LFB11835
	.quad	.LFE11835-.LFB11835
	.byte	0x4
	.long	.LCFI663-.LFB11835
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI664-.LCFI663
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI665-.LCFI664
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE360:
.LSFDE362:
	.long	.LEFDE362-.LASFDE362
.LASFDE362:
	.secrel32	.Lframe0
	.quad	.LFB11854
	.quad	.LFE11854-.LFB11854
	.byte	0x4
	.long	.LCFI666-.LFB11854
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI667-.LCFI666
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI668-.LCFI667
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI669-.LCFI668
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI670-.LCFI669
	.byte	0xc3
	.byte	0x4
	.long	.LCFI671-.LCFI670
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE362:
.LSFDE364:
	.long	.LEFDE364-.LASFDE364
.LASFDE364:
	.secrel32	.Lframe0
	.quad	.LFB11856
	.quad	.LFE11856-.LFB11856
	.byte	0x4
	.long	.LCFI672-.LFB11856
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI673-.LCFI672
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI674-.LCFI673
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE364:
.LSFDE366:
	.long	.LEFDE366-.LASFDE366
.LASFDE366:
	.secrel32	.Lframe0
	.quad	.LFB11857
	.quad	.LFE11857-.LFB11857
	.byte	0x4
	.long	.LCFI675-.LFB11857
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI676-.LCFI675
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI677-.LCFI676
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE366:
.LSFDE368:
	.long	.LEFDE368-.LASFDE368
.LASFDE368:
	.secrel32	.Lframe0
	.quad	.LFB11858
	.quad	.LFE11858-.LFB11858
	.byte	0x4
	.long	.LCFI678-.LFB11858
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI679-.LCFI678
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI680-.LCFI679
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE368:
.LSFDE370:
	.long	.LEFDE370-.LASFDE370
.LASFDE370:
	.secrel32	.Lframe0
	.quad	.LFB11859
	.quad	.LFE11859-.LFB11859
	.byte	0x4
	.long	.LCFI681-.LFB11859
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI682-.LCFI681
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI683-.LCFI682
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI684-.LCFI683
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI685-.LCFI684
	.byte	0xc3
	.byte	0x4
	.long	.LCFI686-.LCFI685
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE370:
.LSFDE372:
	.long	.LEFDE372-.LASFDE372
.LASFDE372:
	.secrel32	.Lframe0
	.quad	.LFB11860
	.quad	.LFE11860-.LFB11860
	.byte	0x4
	.long	.LCFI687-.LFB11860
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI688-.LCFI687
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI689-.LCFI688
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE372:
.LSFDE374:
	.long	.LEFDE374-.LASFDE374
.LASFDE374:
	.secrel32	.Lframe0
	.quad	.LFB11861
	.quad	.LFE11861-.LFB11861
	.byte	0x4
	.long	.LCFI690-.LFB11861
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI691-.LCFI690
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI692-.LCFI691
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE374:
.LSFDE376:
	.long	.LEFDE376-.LASFDE376
.LASFDE376:
	.secrel32	.Lframe0
	.quad	.LFB11862
	.quad	.LFE11862-.LFB11862
	.byte	0x4
	.long	.LCFI693-.LFB11862
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI694-.LCFI693
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI695-.LCFI694
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE376:
.LSFDE378:
	.long	.LEFDE378-.LASFDE378
.LASFDE378:
	.secrel32	.Lframe0
	.quad	.LFB11863
	.quad	.LFE11863-.LFB11863
	.byte	0x4
	.long	.LCFI696-.LFB11863
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI697-.LCFI696
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI698-.LCFI697
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE378:
.LSFDE380:
	.long	.LEFDE380-.LASFDE380
.LASFDE380:
	.secrel32	.Lframe0
	.quad	.LFB11864
	.quad	.LFE11864-.LFB11864
	.byte	0x4
	.long	.LCFI699-.LFB11864
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI700-.LCFI699
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI701-.LCFI700
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE380:
.LSFDE382:
	.long	.LEFDE382-.LASFDE382
.LASFDE382:
	.secrel32	.Lframe0
	.quad	.LFB11867
	.quad	.LFE11867-.LFB11867
	.byte	0x4
	.long	.LCFI702-.LFB11867
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI703-.LCFI702
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI704-.LCFI703
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE382:
.LSFDE384:
	.long	.LEFDE384-.LASFDE384
.LASFDE384:
	.secrel32	.Lframe0
	.quad	.LFB11870
	.quad	.LFE11870-.LFB11870
	.byte	0x4
	.long	.LCFI705-.LFB11870
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI706-.LCFI705
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI707-.LCFI706
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI708-.LCFI707
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI709-.LCFI708
	.byte	0xc3
	.byte	0x4
	.long	.LCFI710-.LCFI709
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE384:
.LSFDE386:
	.long	.LEFDE386-.LASFDE386
.LASFDE386:
	.secrel32	.Lframe0
	.quad	.LFB11872
	.quad	.LFE11872-.LFB11872
	.byte	0x4
	.long	.LCFI711-.LFB11872
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI712-.LCFI711
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI713-.LCFI712
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE386:
.LSFDE388:
	.long	.LEFDE388-.LASFDE388
.LASFDE388:
	.secrel32	.Lframe0
	.quad	.LFB11873
	.quad	.LFE11873-.LFB11873
	.byte	0x4
	.long	.LCFI714-.LFB11873
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI715-.LCFI714
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI716-.LCFI715
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE388:
.LSFDE390:
	.long	.LEFDE390-.LASFDE390
.LASFDE390:
	.secrel32	.Lframe0
	.quad	.LFB11874
	.quad	.LFE11874-.LFB11874
	.byte	0x4
	.long	.LCFI717-.LFB11874
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI718-.LCFI717
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI719-.LCFI718
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI720-.LCFI719
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI721-.LCFI720
	.byte	0xc3
	.byte	0x4
	.long	.LCFI722-.LCFI721
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE390:
.LSFDE392:
	.long	.LEFDE392-.LASFDE392
.LASFDE392:
	.secrel32	.Lframe0
	.quad	.LFB11875
	.quad	.LFE11875-.LFB11875
	.byte	0x4
	.long	.LCFI723-.LFB11875
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI724-.LCFI723
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI725-.LCFI724
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE392:
.LSFDE394:
	.long	.LEFDE394-.LASFDE394
.LASFDE394:
	.secrel32	.Lframe0
	.quad	.LFB11878
	.quad	.LFE11878-.LFB11878
	.byte	0x4
	.long	.LCFI726-.LFB11878
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI727-.LCFI726
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI728-.LCFI727
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE394:
.LSFDE396:
	.long	.LEFDE396-.LASFDE396
.LASFDE396:
	.secrel32	.Lframe0
	.quad	.LFB11877
	.quad	.LFE11877-.LFB11877
	.byte	0x4
	.long	.LCFI729-.LFB11877
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI730-.LCFI729
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI731-.LCFI730
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE396:
.LSFDE398:
	.long	.LEFDE398-.LASFDE398
.LASFDE398:
	.secrel32	.Lframe0
	.quad	.LFB11879
	.quad	.LFE11879-.LFB11879
	.byte	0x4
	.long	.LCFI732-.LFB11879
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI733-.LCFI732
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI734-.LCFI733
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI735-.LCFI734
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI736-.LCFI735
	.byte	0xc3
	.byte	0x4
	.long	.LCFI737-.LCFI736
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE398:
.LSFDE400:
	.long	.LEFDE400-.LASFDE400
.LASFDE400:
	.secrel32	.Lframe0
	.quad	.LFB11881
	.quad	.LFE11881-.LFB11881
	.byte	0x4
	.long	.LCFI738-.LFB11881
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI739-.LCFI738
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI740-.LCFI739
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE400:
.LSFDE402:
	.long	.LEFDE402-.LASFDE402
.LASFDE402:
	.secrel32	.Lframe0
	.quad	.LFB11882
	.quad	.LFE11882-.LFB11882
	.byte	0x4
	.long	.LCFI741-.LFB11882
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI742-.LCFI741
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI743-.LCFI742
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE402:
.LSFDE404:
	.long	.LEFDE404-.LASFDE404
.LASFDE404:
	.secrel32	.Lframe0
	.quad	.LFB11883
	.quad	.LFE11883-.LFB11883
	.byte	0x4
	.long	.LCFI744-.LFB11883
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI745-.LCFI744
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI746-.LCFI745
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE404:
.LSFDE406:
	.long	.LEFDE406-.LASFDE406
.LASFDE406:
	.secrel32	.Lframe0
	.quad	.LFB11884
	.quad	.LFE11884-.LFB11884
	.byte	0x4
	.long	.LCFI747-.LFB11884
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI748-.LCFI747
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI749-.LCFI748
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE406:
.LSFDE408:
	.long	.LEFDE408-.LASFDE408
.LASFDE408:
	.secrel32	.Lframe0
	.quad	.LFB11885
	.quad	.LFE11885-.LFB11885
	.byte	0x4
	.long	.LCFI750-.LFB11885
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI751-.LCFI750
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI752-.LCFI751
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE408:
.LSFDE410:
	.long	.LEFDE410-.LASFDE410
.LASFDE410:
	.secrel32	.Lframe0
	.quad	.LFB11886
	.quad	.LFE11886-.LFB11886
	.byte	0x4
	.long	.LCFI753-.LFB11886
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI754-.LCFI753
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI755-.LCFI754
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI756-.LCFI755
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI757-.LCFI756
	.byte	0xc3
	.byte	0x4
	.long	.LCFI758-.LCFI757
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE410:
.LSFDE412:
	.long	.LEFDE412-.LASFDE412
.LASFDE412:
	.secrel32	.Lframe0
	.quad	.LFB11887
	.quad	.LFE11887-.LFB11887
	.byte	0x4
	.long	.LCFI759-.LFB11887
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI760-.LCFI759
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI761-.LCFI760
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE412:
.LSFDE414:
	.long	.LEFDE414-.LASFDE414
.LASFDE414:
	.secrel32	.Lframe0
	.quad	.LFB11890
	.quad	.LFE11890-.LFB11890
	.byte	0x4
	.long	.LCFI762-.LFB11890
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI763-.LCFI762
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI764-.LCFI763
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE414:
.LSFDE416:
	.long	.LEFDE416-.LASFDE416
.LASFDE416:
	.secrel32	.Lframe0
	.quad	.LFB11898
	.quad	.LFE11898-.LFB11898
	.byte	0x4
	.long	.LCFI765-.LFB11898
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI766-.LCFI765
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI767-.LCFI766
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI768-.LCFI767
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI769-.LCFI768
	.byte	0xc3
	.byte	0x4
	.long	.LCFI770-.LCFI769
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE416:
.LSFDE418:
	.long	.LEFDE418-.LASFDE418
.LASFDE418:
	.secrel32	.Lframe0
	.quad	.LFB11903
	.quad	.LFE11903-.LFB11903
	.byte	0x4
	.long	.LCFI771-.LFB11903
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI772-.LCFI771
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI773-.LCFI772
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE418:
.LSFDE420:
	.long	.LEFDE420-.LASFDE420
.LASFDE420:
	.secrel32	.Lframe0
	.quad	.LFB11905
	.quad	.LFE11905-.LFB11905
	.byte	0x4
	.long	.LCFI774-.LFB11905
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI775-.LCFI774
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI776-.LCFI775
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE420:
.LSFDE422:
	.long	.LEFDE422-.LASFDE422
.LASFDE422:
	.secrel32	.Lframe0
	.quad	.LFB11908
	.quad	.LFE11908-.LFB11908
	.byte	0x4
	.long	.LCFI777-.LFB11908
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI778-.LCFI777
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI779-.LCFI778
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI780-.LCFI779
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI781-.LCFI780
	.byte	0xc3
	.byte	0x4
	.long	.LCFI782-.LCFI781
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE422:
.LSFDE424:
	.long	.LEFDE424-.LASFDE424
.LASFDE424:
	.secrel32	.Lframe0
	.quad	.LFB11909
	.quad	.LFE11909-.LFB11909
	.byte	0x4
	.long	.LCFI783-.LFB11909
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI784-.LCFI783
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI785-.LCFI784
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE424:
.LSFDE426:
	.long	.LEFDE426-.LASFDE426
.LASFDE426:
	.secrel32	.Lframe0
	.quad	.LFB11917
	.quad	.LFE11917-.LFB11917
	.byte	0x4
	.long	.LCFI786-.LFB11917
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI787-.LCFI786
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI788-.LCFI787
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI789-.LCFI788
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI790-.LCFI789
	.byte	0xc3
	.byte	0x4
	.long	.LCFI791-.LCFI790
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE426:
.LSFDE428:
	.long	.LEFDE428-.LASFDE428
.LASFDE428:
	.secrel32	.Lframe0
	.quad	.LFB11921
	.quad	.LFE11921-.LFB11921
	.byte	0x4
	.long	.LCFI792-.LFB11921
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI793-.LCFI792
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI794-.LCFI793
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE428:
.LSFDE430:
	.long	.LEFDE430-.LASFDE430
.LASFDE430:
	.secrel32	.Lframe0
	.quad	.LFB12038
	.quad	.LFE12038-.LFB12038
	.byte	0x4
	.long	.LCFI795-.LFB12038
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI796-.LCFI795
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI797-.LCFI796
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE430:
.LSFDE432:
	.long	.LEFDE432-.LASFDE432
.LASFDE432:
	.secrel32	.Lframe0
	.quad	.LFB12046
	.quad	.LFE12046-.LFB12046
	.byte	0x4
	.long	.LCFI798-.LFB12046
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI799-.LCFI798
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI800-.LCFI799
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE432:
.LSFDE434:
	.long	.LEFDE434-.LASFDE434
.LASFDE434:
	.secrel32	.Lframe0
	.quad	.LFB12050
	.quad	.LFE12050-.LFB12050
	.byte	0x4
	.long	.LCFI801-.LFB12050
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI802-.LCFI801
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI803-.LCFI802
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE434:
.LSFDE436:
	.long	.LEFDE436-.LASFDE436
.LASFDE436:
	.secrel32	.Lframe0
	.quad	.LFB12051
	.quad	.LFE12051-.LFB12051
	.byte	0x4
	.long	.LCFI804-.LFB12051
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI805-.LCFI804
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI806-.LCFI805
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE436:
.LSFDE438:
	.long	.LEFDE438-.LASFDE438
.LASFDE438:
	.secrel32	.Lframe0
	.quad	.LFB12054
	.quad	.LFE12054-.LFB12054
	.byte	0x4
	.long	.LCFI807-.LFB12054
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI808-.LCFI807
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI809-.LCFI808
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE438:
.LSFDE440:
	.long	.LEFDE440-.LASFDE440
.LASFDE440:
	.secrel32	.Lframe0
	.quad	.LFB12061
	.quad	.LFE12061-.LFB12061
	.byte	0x4
	.long	.LCFI810-.LFB12061
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI811-.LCFI810
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI812-.LCFI811
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE440:
.LSFDE442:
	.long	.LEFDE442-.LASFDE442
.LASFDE442:
	.secrel32	.Lframe0
	.quad	.LFB12064
	.quad	.LFE12064-.LFB12064
	.byte	0x4
	.long	.LCFI813-.LFB12064
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI814-.LCFI813
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI815-.LCFI814
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE442:
.LSFDE444:
	.long	.LEFDE444-.LASFDE444
.LASFDE444:
	.secrel32	.Lframe0
	.quad	.LFB12065
	.quad	.LFE12065-.LFB12065
	.byte	0x4
	.long	.LCFI816-.LFB12065
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI817-.LCFI816
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI818-.LCFI817
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE444:
.LSFDE446:
	.long	.LEFDE446-.LASFDE446
.LASFDE446:
	.secrel32	.Lframe0
	.quad	.LFB12066
	.quad	.LFE12066-.LFB12066
	.byte	0x4
	.long	.LCFI819-.LFB12066
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI820-.LCFI819
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI821-.LCFI820
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE446:
.LSFDE448:
	.long	.LEFDE448-.LASFDE448
.LASFDE448:
	.secrel32	.Lframe0
	.quad	.LFB12068
	.quad	.LFE12068-.LFB12068
	.byte	0x4
	.long	.LCFI822-.LFB12068
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI823-.LCFI822
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI824-.LCFI823
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE448:
.LSFDE450:
	.long	.LEFDE450-.LASFDE450
.LASFDE450:
	.secrel32	.Lframe0
	.quad	.LFB12072
	.quad	.LFE12072-.LFB12072
	.byte	0x4
	.long	.LCFI825-.LFB12072
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI826-.LCFI825
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI827-.LCFI826
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE450:
.LSFDE452:
	.long	.LEFDE452-.LASFDE452
.LASFDE452:
	.secrel32	.Lframe0
	.quad	.LFB12073
	.quad	.LFE12073-.LFB12073
	.byte	0x4
	.long	.LCFI828-.LFB12073
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI829-.LCFI828
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI830-.LCFI829
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE452:
.LSFDE454:
	.long	.LEFDE454-.LASFDE454
.LASFDE454:
	.secrel32	.Lframe0
	.quad	.LFB12074
	.quad	.LFE12074-.LFB12074
	.byte	0x4
	.long	.LCFI831-.LFB12074
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI832-.LCFI831
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI833-.LCFI832
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE454:
.LSFDE456:
	.long	.LEFDE456-.LASFDE456
.LASFDE456:
	.secrel32	.Lframe0
	.quad	.LFB12079
	.quad	.LFE12079-.LFB12079
	.byte	0x4
	.long	.LCFI834-.LFB12079
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI835-.LCFI834
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI836-.LCFI835
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE456:
.LSFDE458:
	.long	.LEFDE458-.LASFDE458
.LASFDE458:
	.secrel32	.Lframe0
	.quad	.LFB12081
	.quad	.LFE12081-.LFB12081
	.byte	0x4
	.long	.LCFI837-.LFB12081
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI838-.LCFI837
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI839-.LCFI838
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE458:
.LSFDE460:
	.long	.LEFDE460-.LASFDE460
.LASFDE460:
	.secrel32	.Lframe0
	.quad	.LFB12083
	.quad	.LFE12083-.LFB12083
	.byte	0x4
	.long	.LCFI840-.LFB12083
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI841-.LCFI840
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI842-.LCFI841
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE460:
.LSFDE462:
	.long	.LEFDE462-.LASFDE462
.LASFDE462:
	.secrel32	.Lframe0
	.quad	.LFB12085
	.quad	.LFE12085-.LFB12085
	.byte	0x4
	.long	.LCFI843-.LFB12085
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI844-.LCFI843
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI845-.LCFI844
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI846-.LCFI845
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI847-.LCFI846
	.byte	0xc3
	.byte	0x4
	.long	.LCFI848-.LCFI847
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE462:
.LSFDE464:
	.long	.LEFDE464-.LASFDE464
.LASFDE464:
	.secrel32	.Lframe0
	.quad	.LFB12086
	.quad	.LFE12086-.LFB12086
	.byte	0x4
	.long	.LCFI849-.LFB12086
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI850-.LCFI849
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI851-.LCFI850
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE464:
.LSFDE466:
	.long	.LEFDE466-.LASFDE466
.LASFDE466:
	.secrel32	.Lframe0
	.quad	.LFB12087
	.quad	.LFE12087-.LFB12087
	.byte	0x4
	.long	.LCFI852-.LFB12087
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI853-.LCFI852
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI854-.LCFI853
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE466:
.LSFDE468:
	.long	.LEFDE468-.LASFDE468
.LASFDE468:
	.secrel32	.Lframe0
	.quad	.LFB12088
	.quad	.LFE12088-.LFB12088
	.byte	0x4
	.long	.LCFI855-.LFB12088
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI856-.LCFI855
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI857-.LCFI856
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE468:
.LSFDE470:
	.long	.LEFDE470-.LASFDE470
.LASFDE470:
	.secrel32	.Lframe0
	.quad	.LFB12089
	.quad	.LFE12089-.LFB12089
	.byte	0x4
	.long	.LCFI858-.LFB12089
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI859-.LCFI858
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI860-.LCFI859
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE470:
.LSFDE472:
	.long	.LEFDE472-.LASFDE472
.LASFDE472:
	.secrel32	.Lframe0
	.quad	.LFB12090
	.quad	.LFE12090-.LFB12090
	.byte	0x4
	.long	.LCFI861-.LFB12090
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI862-.LCFI861
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI863-.LCFI862
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI864-.LCFI863
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI865-.LCFI864
	.byte	0xc3
	.byte	0x4
	.long	.LCFI866-.LCFI865
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE472:
.LSFDE474:
	.long	.LEFDE474-.LASFDE474
.LASFDE474:
	.secrel32	.Lframe0
	.quad	.LFB12091
	.quad	.LFE12091-.LFB12091
	.byte	0x4
	.long	.LCFI867-.LFB12091
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI868-.LCFI867
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI869-.LCFI868
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE474:
.LSFDE476:
	.long	.LEFDE476-.LASFDE476
.LASFDE476:
	.secrel32	.Lframe0
	.quad	.LFB12093
	.quad	.LFE12093-.LFB12093
	.byte	0x4
	.long	.LCFI870-.LFB12093
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI871-.LCFI870
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI872-.LCFI871
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI873-.LCFI872
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI874-.LCFI873
	.byte	0xc3
	.byte	0x4
	.long	.LCFI875-.LCFI874
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE476:
.LSFDE478:
	.long	.LEFDE478-.LASFDE478
.LASFDE478:
	.secrel32	.Lframe0
	.quad	.LFB12097
	.quad	.LFE12097-.LFB12097
	.byte	0x4
	.long	.LCFI876-.LFB12097
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI877-.LCFI876
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI878-.LCFI877
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI879-.LCFI878
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI880-.LCFI879
	.byte	0xc3
	.byte	0x4
	.long	.LCFI881-.LCFI880
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE478:
.LSFDE480:
	.long	.LEFDE480-.LASFDE480
.LASFDE480:
	.secrel32	.Lframe0
	.quad	.LFB12099
	.quad	.LFE12099-.LFB12099
	.byte	0x4
	.long	.LCFI882-.LFB12099
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI883-.LCFI882
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI884-.LCFI883
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE480:
.LSFDE482:
	.long	.LEFDE482-.LASFDE482
.LASFDE482:
	.secrel32	.Lframe0
	.quad	.LFB12100
	.quad	.LFE12100-.LFB12100
	.byte	0x4
	.long	.LCFI885-.LFB12100
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI886-.LCFI885
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI887-.LCFI886
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE482:
.LSFDE484:
	.long	.LEFDE484-.LASFDE484
.LASFDE484:
	.secrel32	.Lframe0
	.quad	.LFB12101
	.quad	.LFE12101-.LFB12101
	.byte	0x4
	.long	.LCFI888-.LFB12101
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI889-.LCFI888
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI890-.LCFI889
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE484:
.LSFDE486:
	.long	.LEFDE486-.LASFDE486
.LASFDE486:
	.secrel32	.Lframe0
	.quad	.LFB12102
	.quad	.LFE12102-.LFB12102
	.byte	0x4
	.long	.LCFI891-.LFB12102
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI892-.LCFI891
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI893-.LCFI892
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE486:
.LSFDE488:
	.long	.LEFDE488-.LASFDE488
.LASFDE488:
	.secrel32	.Lframe0
	.quad	.LFB12104
	.quad	.LFE12104-.LFB12104
	.byte	0x4
	.long	.LCFI894-.LFB12104
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI895-.LCFI894
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI896-.LCFI895
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI897-.LCFI896
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI898-.LCFI897
	.byte	0xc3
	.byte	0x4
	.long	.LCFI899-.LCFI898
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE488:
.LSFDE490:
	.long	.LEFDE490-.LASFDE490
.LASFDE490:
	.secrel32	.Lframe0
	.quad	.LFB12106
	.quad	.LFE12106-.LFB12106
	.byte	0x4
	.long	.LCFI900-.LFB12106
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI901-.LCFI900
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI902-.LCFI901
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE490:
.LSFDE492:
	.long	.LEFDE492-.LASFDE492
.LASFDE492:
	.secrel32	.Lframe0
	.quad	.LFB12193
	.quad	.LFE12193-.LFB12193
	.byte	0x4
	.long	.LCFI903-.LFB12193
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI904-.LCFI903
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI905-.LCFI904
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE492:
.LSFDE494:
	.long	.LEFDE494-.LASFDE494
.LASFDE494:
	.secrel32	.Lframe0
	.quad	.LFB12196
	.quad	.LFE12196-.LFB12196
	.byte	0x4
	.long	.LCFI906-.LFB12196
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI907-.LCFI906
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI908-.LCFI907
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE494:
.LSFDE496:
	.long	.LEFDE496-.LASFDE496
.LASFDE496:
	.secrel32	.Lframe0
	.quad	.LFB12197
	.quad	.LFE12197-.LFB12197
	.byte	0x4
	.long	.LCFI909-.LFB12197
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI910-.LCFI909
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI911-.LCFI910
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE496:
.LSFDE498:
	.long	.LEFDE498-.LASFDE498
.LASFDE498:
	.secrel32	.Lframe0
	.quad	.LFB12198
	.quad	.LFE12198-.LFB12198
	.byte	0x4
	.long	.LCFI912-.LFB12198
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI913-.LCFI912
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI914-.LCFI913
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE498:
.LSFDE500:
	.long	.LEFDE500-.LASFDE500
.LASFDE500:
	.secrel32	.Lframe0
	.quad	.LFB12200
	.quad	.LFE12200-.LFB12200
	.byte	0x4
	.long	.LCFI915-.LFB12200
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI916-.LCFI915
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI917-.LCFI916
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE500:
.LSFDE502:
	.long	.LEFDE502-.LASFDE502
.LASFDE502:
	.secrel32	.Lframe0
	.quad	.LFB12203
	.quad	.LFE12203-.LFB12203
	.byte	0x4
	.long	.LCFI918-.LFB12203
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI919-.LCFI918
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI920-.LCFI919
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE502:
.LSFDE504:
	.long	.LEFDE504-.LASFDE504
.LASFDE504:
	.secrel32	.Lframe0
	.quad	.LFB12206
	.quad	.LFE12206-.LFB12206
	.byte	0x4
	.long	.LCFI921-.LFB12206
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI922-.LCFI921
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI923-.LCFI922
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE504:
.LSFDE506:
	.long	.LEFDE506-.LASFDE506
.LASFDE506:
	.secrel32	.Lframe0
	.quad	.LFB12208
	.quad	.LFE12208-.LFB12208
	.byte	0x4
	.long	.LCFI924-.LFB12208
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI925-.LCFI924
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI926-.LCFI925
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE506:
.LSFDE508:
	.long	.LEFDE508-.LASFDE508
.LASFDE508:
	.secrel32	.Lframe0
	.quad	.LFB12209
	.quad	.LFE12209-.LFB12209
	.byte	0x4
	.long	.LCFI927-.LFB12209
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI928-.LCFI927
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI929-.LCFI928
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE508:
.LSFDE510:
	.long	.LEFDE510-.LASFDE510
.LASFDE510:
	.secrel32	.Lframe0
	.quad	.LFB12211
	.quad	.LFE12211-.LFB12211
	.byte	0x4
	.long	.LCFI930-.LFB12211
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI931-.LCFI930
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI932-.LCFI931
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE510:
.LSFDE512:
	.long	.LEFDE512-.LASFDE512
.LASFDE512:
	.secrel32	.Lframe0
	.quad	.LFB12215
	.quad	.LFE12215-.LFB12215
	.byte	0x4
	.long	.LCFI933-.LFB12215
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI934-.LCFI933
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI935-.LCFI934
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE512:
.LSFDE514:
	.long	.LEFDE514-.LASFDE514
.LASFDE514:
	.secrel32	.Lframe0
	.quad	.LFB12217
	.quad	.LFE12217-.LFB12217
	.byte	0x4
	.long	.LCFI936-.LFB12217
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI937-.LCFI936
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI938-.LCFI937
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE514:
.LSFDE516:
	.long	.LEFDE516-.LASFDE516
.LASFDE516:
	.secrel32	.Lframe0
	.quad	.LFB12219
	.quad	.LFE12219-.LFB12219
	.byte	0x4
	.long	.LCFI939-.LFB12219
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI940-.LCFI939
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI941-.LCFI940
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI942-.LCFI941
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI943-.LCFI942
	.byte	0xc3
	.byte	0x4
	.long	.LCFI944-.LCFI943
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE516:
.LSFDE518:
	.long	.LEFDE518-.LASFDE518
.LASFDE518:
	.secrel32	.Lframe0
	.quad	.LFB12220
	.quad	.LFE12220-.LFB12220
	.byte	0x4
	.long	.LCFI945-.LFB12220
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI946-.LCFI945
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI947-.LCFI946
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE518:
.LSFDE520:
	.long	.LEFDE520-.LASFDE520
.LASFDE520:
	.secrel32	.Lframe0
	.quad	.LFB12221
	.quad	.LFE12221-.LFB12221
	.byte	0x4
	.long	.LCFI948-.LFB12221
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI949-.LCFI948
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI950-.LCFI949
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE520:
.LSFDE522:
	.long	.LEFDE522-.LASFDE522
.LASFDE522:
	.secrel32	.Lframe0
	.quad	.LFB12222
	.quad	.LFE12222-.LFB12222
	.byte	0x4
	.long	.LCFI951-.LFB12222
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI952-.LCFI951
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI953-.LCFI952
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE522:
.LSFDE524:
	.long	.LEFDE524-.LASFDE524
.LASFDE524:
	.secrel32	.Lframe0
	.quad	.LFB12223
	.quad	.LFE12223-.LFB12223
	.byte	0x4
	.long	.LCFI954-.LFB12223
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI955-.LCFI954
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI956-.LCFI955
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE524:
.LSFDE526:
	.long	.LEFDE526-.LASFDE526
.LASFDE526:
	.secrel32	.Lframe0
	.quad	.LFB12224
	.quad	.LFE12224-.LFB12224
	.byte	0x4
	.long	.LCFI957-.LFB12224
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI958-.LCFI957
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI959-.LCFI958
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE526:
.LSFDE528:
	.long	.LEFDE528-.LASFDE528
.LASFDE528:
	.secrel32	.Lframe0
	.quad	.LFB12225
	.quad	.LFE12225-.LFB12225
	.byte	0x4
	.long	.LCFI960-.LFB12225
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI961-.LCFI960
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI962-.LCFI961
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE528:
.LSFDE530:
	.long	.LEFDE530-.LASFDE530
.LASFDE530:
	.secrel32	.Lframe0
	.quad	.LFB12227
	.quad	.LFE12227-.LFB12227
	.byte	0x4
	.long	.LCFI963-.LFB12227
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI964-.LCFI963
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI965-.LCFI964
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE530:
.LSFDE532:
	.long	.LEFDE532-.LASFDE532
.LASFDE532:
	.secrel32	.Lframe0
	.quad	.LFB12226
	.quad	.LFE12226-.LFB12226
	.byte	0x4
	.long	.LCFI966-.LFB12226
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI967-.LCFI966
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI968-.LCFI967
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE532:
.LSFDE534:
	.long	.LEFDE534-.LASFDE534
.LASFDE534:
	.secrel32	.Lframe0
	.quad	.LFB12228
	.quad	.LFE12228-.LFB12228
	.byte	0x4
	.long	.LCFI969-.LFB12228
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI970-.LCFI969
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI971-.LCFI970
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE534:
.LSFDE536:
	.long	.LEFDE536-.LASFDE536
.LASFDE536:
	.secrel32	.Lframe0
	.quad	.LFB12230
	.quad	.LFE12230-.LFB12230
	.byte	0x4
	.long	.LCFI972-.LFB12230
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI973-.LCFI972
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI974-.LCFI973
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE536:
.LSFDE538:
	.long	.LEFDE538-.LASFDE538
.LASFDE538:
	.secrel32	.Lframe0
	.quad	.LFB12233
	.quad	.LFE12233-.LFB12233
	.byte	0x4
	.long	.LCFI975-.LFB12233
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI976-.LCFI975
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI977-.LCFI976
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI978-.LCFI977
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI979-.LCFI978
	.byte	0xc3
	.byte	0x4
	.long	.LCFI980-.LCFI979
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE538:
.LSFDE540:
	.long	.LEFDE540-.LASFDE540
.LASFDE540:
	.secrel32	.Lframe0
	.quad	.LFB12237
	.quad	.LFE12237-.LFB12237
	.byte	0x4
	.long	.LCFI981-.LFB12237
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI982-.LCFI981
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI983-.LCFI982
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE540:
.LSFDE542:
	.long	.LEFDE542-.LASFDE542
.LASFDE542:
	.secrel32	.Lframe0
	.quad	.LFB12238
	.quad	.LFE12238-.LFB12238
	.byte	0x4
	.long	.LCFI984-.LFB12238
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI985-.LCFI984
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI986-.LCFI985
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE542:
.LSFDE544:
	.long	.LEFDE544-.LASFDE544
.LASFDE544:
	.secrel32	.Lframe0
	.quad	.LFB12239
	.quad	.LFE12239-.LFB12239
	.byte	0x4
	.long	.LCFI987-.LFB12239
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI988-.LCFI987
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI989-.LCFI988
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE544:
.LSFDE546:
	.long	.LEFDE546-.LASFDE546
.LASFDE546:
	.secrel32	.Lframe0
	.quad	.LFB12241
	.quad	.LFE12241-.LFB12241
	.byte	0x4
	.long	.LCFI990-.LFB12241
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI991-.LCFI990
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI992-.LCFI991
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI993-.LCFI992
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI994-.LCFI993
	.byte	0xc3
	.byte	0x4
	.long	.LCFI995-.LCFI994
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE546:
.LSFDE548:
	.long	.LEFDE548-.LASFDE548
.LASFDE548:
	.secrel32	.Lframe0
	.quad	.LFB12279
	.quad	.LFE12279-.LFB12279
	.byte	0x4
	.long	.LCFI996-.LFB12279
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI997-.LCFI996
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI998-.LCFI997
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE548:
.LSFDE550:
	.long	.LEFDE550-.LASFDE550
.LASFDE550:
	.secrel32	.Lframe0
	.quad	.LFB12281
	.quad	.LFE12281-.LFB12281
	.byte	0x4
	.long	.LCFI999-.LFB12281
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1000-.LCFI999
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1001-.LCFI1000
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE550:
.LSFDE552:
	.long	.LEFDE552-.LASFDE552
.LASFDE552:
	.secrel32	.Lframe0
	.quad	.LFB12282
	.quad	.LFE12282-.LFB12282
	.byte	0x4
	.long	.LCFI1002-.LFB12282
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1003-.LCFI1002
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1004-.LCFI1003
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE552:
.LSFDE554:
	.long	.LEFDE554-.LASFDE554
.LASFDE554:
	.secrel32	.Lframe0
	.quad	.LFB12283
	.quad	.LFE12283-.LFB12283
	.byte	0x4
	.long	.LCFI1005-.LFB12283
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1006-.LCFI1005
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1007-.LCFI1006
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE554:
.LSFDE556:
	.long	.LEFDE556-.LASFDE556
.LASFDE556:
	.secrel32	.Lframe0
	.quad	.LFB12285
	.quad	.LFE12285-.LFB12285
	.byte	0x4
	.long	.LCFI1008-.LFB12285
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1009-.LCFI1008
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1010-.LCFI1009
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE556:
.LSFDE558:
	.long	.LEFDE558-.LASFDE558
.LASFDE558:
	.secrel32	.Lframe0
	.quad	.LFB12288
	.quad	.LFE12288-.LFB12288
	.byte	0x4
	.long	.LCFI1011-.LFB12288
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1012-.LCFI1011
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1013-.LCFI1012
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE558:
.LSFDE560:
	.long	.LEFDE560-.LASFDE560
.LASFDE560:
	.secrel32	.Lframe0
	.quad	.LFB12291
	.quad	.LFE12291-.LFB12291
	.byte	0x4
	.long	.LCFI1014-.LFB12291
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1015-.LCFI1014
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1016-.LCFI1015
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE560:
.LSFDE562:
	.long	.LEFDE562-.LASFDE562
.LASFDE562:
	.secrel32	.Lframe0
	.quad	.LFB12293
	.quad	.LFE12293-.LFB12293
	.byte	0x4
	.long	.LCFI1017-.LFB12293
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1018-.LCFI1017
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1019-.LCFI1018
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE562:
.LSFDE564:
	.long	.LEFDE564-.LASFDE564
.LASFDE564:
	.secrel32	.Lframe0
	.quad	.LFB12294
	.quad	.LFE12294-.LFB12294
	.byte	0x4
	.long	.LCFI1020-.LFB12294
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1021-.LCFI1020
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1022-.LCFI1021
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE564:
.LSFDE566:
	.long	.LEFDE566-.LASFDE566
.LASFDE566:
	.secrel32	.Lframe0
	.quad	.LFB12296
	.quad	.LFE12296-.LFB12296
	.byte	0x4
	.long	.LCFI1023-.LFB12296
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1024-.LCFI1023
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1025-.LCFI1024
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE566:
.LSFDE568:
	.long	.LEFDE568-.LASFDE568
.LASFDE568:
	.secrel32	.Lframe0
	.quad	.LFB12299
	.quad	.LFE12299-.LFB12299
	.byte	0x4
	.long	.LCFI1026-.LFB12299
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1027-.LCFI1026
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1028-.LCFI1027
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1029-.LCFI1028
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1030-.LCFI1029
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1031-.LCFI1030
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE568:
.LSFDE570:
	.long	.LEFDE570-.LASFDE570
.LASFDE570:
	.secrel32	.Lframe0
	.quad	.LFB12301
	.quad	.LFE12301-.LFB12301
	.byte	0x4
	.long	.LCFI1032-.LFB12301
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1033-.LCFI1032
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1034-.LCFI1033
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE570:
.LSFDE572:
	.long	.LEFDE572-.LASFDE572
.LASFDE572:
	.secrel32	.Lframe0
	.quad	.LFB12302
	.quad	.LFE12302-.LFB12302
	.byte	0x4
	.long	.LCFI1035-.LFB12302
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1036-.LCFI1035
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1037-.LCFI1036
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE572:
.LSFDE574:
	.long	.LEFDE574-.LASFDE574
.LASFDE574:
	.secrel32	.Lframe0
	.quad	.LFB12303
	.quad	.LFE12303-.LFB12303
	.byte	0x4
	.long	.LCFI1038-.LFB12303
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1039-.LCFI1038
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1040-.LCFI1039
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE574:
.LSFDE576:
	.long	.LEFDE576-.LASFDE576
.LASFDE576:
	.secrel32	.Lframe0
	.quad	.LFB12306
	.quad	.LFE12306-.LFB12306
	.byte	0x4
	.long	.LCFI1041-.LFB12306
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1042-.LCFI1041
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1043-.LCFI1042
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE576:
.LSFDE578:
	.long	.LEFDE578-.LASFDE578
.LASFDE578:
	.secrel32	.Lframe0
	.quad	.LFB12307
	.quad	.LFE12307-.LFB12307
	.byte	0x4
	.long	.LCFI1044-.LFB12307
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1045-.LCFI1044
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1046-.LCFI1045
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE578:
.LSFDE580:
	.long	.LEFDE580-.LASFDE580
.LASFDE580:
	.secrel32	.Lframe0
	.quad	.LFB12308
	.quad	.LFE12308-.LFB12308
	.byte	0x4
	.long	.LCFI1047-.LFB12308
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1048-.LCFI1047
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1049-.LCFI1048
	.byte	0xe
	.uleb128 0x70
	.byte	0x4
	.long	.LCFI1050-.LCFI1049
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1051-.LCFI1050
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1052-.LCFI1051
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 9
	.align 8
.LEFDE580:
.LSFDE582:
	.long	.LEFDE582-.LASFDE582
.LASFDE582:
	.secrel32	.Lframe0
	.quad	.LFB12311
	.quad	.LFE12311-.LFB12311
	.byte	0x4
	.long	.LCFI1053-.LFB12311
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1054-.LCFI1053
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1055-.LCFI1054
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE582:
.LSFDE584:
	.long	.LEFDE584-.LASFDE584
.LASFDE584:
	.secrel32	.Lframe0
	.quad	.LFB12312
	.quad	.LFE12312-.LFB12312
	.byte	0x4
	.long	.LCFI1056-.LFB12312
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1057-.LCFI1056
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1058-.LCFI1057
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE584:
.LSFDE586:
	.long	.LEFDE586-.LASFDE586
.LASFDE586:
	.secrel32	.Lframe0
	.quad	.LFB12313
	.quad	.LFE12313-.LFB12313
	.byte	0x4
	.long	.LCFI1059-.LFB12313
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1060-.LCFI1059
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1061-.LCFI1060
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE586:
.LSFDE588:
	.long	.LEFDE588-.LASFDE588
.LASFDE588:
	.secrel32	.Lframe0
	.quad	.LFB12316
	.quad	.LFE12316-.LFB12316
	.byte	0x4
	.long	.LCFI1062-.LFB12316
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1063-.LCFI1062
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1064-.LCFI1063
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE588:
.LSFDE590:
	.long	.LEFDE590-.LASFDE590
.LASFDE590:
	.secrel32	.Lframe0
	.quad	.LFB12319
	.quad	.LFE12319-.LFB12319
	.byte	0x4
	.long	.LCFI1065-.LFB12319
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1066-.LCFI1065
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1067-.LCFI1066
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1068-.LCFI1067
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1069-.LCFI1068
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1070-.LCFI1069
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE590:
.LSFDE592:
	.long	.LEFDE592-.LASFDE592
.LASFDE592:
	.secrel32	.Lframe0
	.quad	.LFB12322
	.quad	.LFE12322-.LFB12322
	.byte	0x4
	.long	.LCFI1071-.LFB12322
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1072-.LCFI1071
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1073-.LCFI1072
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE592:
.LSFDE594:
	.long	.LEFDE594-.LASFDE594
.LASFDE594:
	.secrel32	.Lframe0
	.quad	.LFB12324
	.quad	.LFE12324-.LFB12324
	.byte	0x4
	.long	.LCFI1074-.LFB12324
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1075-.LCFI1074
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1076-.LCFI1075
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE594:
.LSFDE596:
	.long	.LEFDE596-.LASFDE596
.LASFDE596:
	.secrel32	.Lframe0
	.quad	.LFB12325
	.quad	.LFE12325-.LFB12325
	.byte	0x4
	.long	.LCFI1077-.LFB12325
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1078-.LCFI1077
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1079-.LCFI1078
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE596:
.LSFDE598:
	.long	.LEFDE598-.LASFDE598
.LASFDE598:
	.secrel32	.Lframe0
	.quad	.LFB12327
	.quad	.LFE12327-.LFB12327
	.byte	0x4
	.long	.LCFI1080-.LFB12327
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1081-.LCFI1080
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1082-.LCFI1081
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1083-.LCFI1082
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1084-.LCFI1083
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1085-.LCFI1084
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE598:
.LSFDE600:
	.long	.LEFDE600-.LASFDE600
.LASFDE600:
	.secrel32	.Lframe0
	.quad	.LFB12346
	.quad	.LFE12346-.LFB12346
	.byte	0x4
	.long	.LCFI1086-.LFB12346
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1087-.LCFI1086
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1088-.LCFI1087
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE600:
.LSFDE602:
	.long	.LEFDE602-.LASFDE602
.LASFDE602:
	.secrel32	.Lframe0
	.quad	.LFB12347
	.quad	.LFE12347-.LFB12347
	.byte	0x4
	.long	.LCFI1089-.LFB12347
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1090-.LCFI1089
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1091-.LCFI1090
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE602:
.LSFDE604:
	.long	.LEFDE604-.LASFDE604
.LASFDE604:
	.secrel32	.Lframe0
	.quad	.LFB12348
	.quad	.LFE12348-.LFB12348
	.byte	0x4
	.long	.LCFI1092-.LFB12348
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1093-.LCFI1092
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1094-.LCFI1093
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE604:
.LSFDE606:
	.long	.LEFDE606-.LASFDE606
.LASFDE606:
	.secrel32	.Lframe0
	.quad	.LFB12350
	.quad	.LFE12350-.LFB12350
	.byte	0x4
	.long	.LCFI1095-.LFB12350
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1096-.LCFI1095
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1097-.LCFI1096
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE606:
.LSFDE608:
	.long	.LEFDE608-.LASFDE608
.LASFDE608:
	.secrel32	.Lframe0
	.quad	.LFB12352
	.quad	.LFE12352-.LFB12352
	.byte	0x4
	.long	.LCFI1098-.LFB12352
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1099-.LCFI1098
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1100-.LCFI1099
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE608:
.LSFDE610:
	.long	.LEFDE610-.LASFDE610
.LASFDE610:
	.secrel32	.Lframe0
	.quad	.LFB12353
	.quad	.LFE12353-.LFB12353
	.byte	0x4
	.long	.LCFI1101-.LFB12353
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1102-.LCFI1101
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1103-.LCFI1102
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE610:
.LSFDE612:
	.long	.LEFDE612-.LASFDE612
.LASFDE612:
	.secrel32	.Lframe0
	.quad	.LFB12355
	.quad	.LFE12355-.LFB12355
	.byte	0x4
	.long	.LCFI1104-.LFB12355
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1105-.LCFI1104
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1106-.LCFI1105
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE612:
.LSFDE614:
	.long	.LEFDE614-.LASFDE614
.LASFDE614:
	.secrel32	.Lframe0
	.quad	.LFB12358
	.quad	.LFE12358-.LFB12358
	.byte	0x4
	.long	.LCFI1107-.LFB12358
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1108-.LCFI1107
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1109-.LCFI1108
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE614:
.LSFDE616:
	.long	.LEFDE616-.LASFDE616
.LASFDE616:
	.secrel32	.Lframe0
	.quad	.LFB12360
	.quad	.LFE12360-.LFB12360
	.byte	0x4
	.long	.LCFI1110-.LFB12360
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1111-.LCFI1110
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1112-.LCFI1111
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE616:
.LSFDE618:
	.long	.LEFDE618-.LASFDE618
.LASFDE618:
	.secrel32	.Lframe0
	.quad	.LFB12361
	.quad	.LFE12361-.LFB12361
	.byte	0x4
	.long	.LCFI1113-.LFB12361
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1114-.LCFI1113
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1115-.LCFI1114
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE618:
.LSFDE620:
	.long	.LEFDE620-.LASFDE620
.LASFDE620:
	.secrel32	.Lframe0
	.quad	.LFB12362
	.quad	.LFE12362-.LFB12362
	.byte	0x4
	.long	.LCFI1116-.LFB12362
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1117-.LCFI1116
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1118-.LCFI1117
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE620:
.LSFDE622:
	.long	.LEFDE622-.LASFDE622
.LASFDE622:
	.secrel32	.Lframe0
	.quad	.LFB12363
	.quad	.LFE12363-.LFB12363
	.byte	0x4
	.long	.LCFI1119-.LFB12363
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1120-.LCFI1119
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1121-.LCFI1120
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE622:
.LSFDE624:
	.long	.LEFDE624-.LASFDE624
.LASFDE624:
	.secrel32	.Lframe0
	.quad	.LFB12367
	.quad	.LFE12367-.LFB12367
	.byte	0x4
	.long	.LCFI1122-.LFB12367
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1123-.LCFI1122
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1124-.LCFI1123
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE624:
.LSFDE626:
	.long	.LEFDE626-.LASFDE626
.LASFDE626:
	.secrel32	.Lframe0
	.quad	.LFB12368
	.quad	.LFE12368-.LFB12368
	.byte	0x4
	.long	.LCFI1125-.LFB12368
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1126-.LCFI1125
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1127-.LCFI1126
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1128-.LCFI1127
	.byte	0xe
	.uleb128 0x70
	.byte	0x4
	.long	.LCFI1129-.LCFI1128
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1130-.LCFI1129
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1131-.LCFI1130
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1132-.LCFI1131
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE626:
.LSFDE628:
	.long	.LEFDE628-.LASFDE628
.LASFDE628:
	.secrel32	.Lframe0
	.quad	.LFB12369
	.quad	.LFE12369-.LFB12369
	.byte	0x4
	.long	.LCFI1133-.LFB12369
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1134-.LCFI1133
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1135-.LCFI1134
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE628:
.LSFDE630:
	.long	.LEFDE630-.LASFDE630
.LASFDE630:
	.secrel32	.Lframe0
	.quad	.LFB12370
	.quad	.LFE12370-.LFB12370
	.byte	0x4
	.long	.LCFI1136-.LFB12370
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1137-.LCFI1136
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1138-.LCFI1137
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE630:
.LSFDE632:
	.long	.LEFDE632-.LASFDE632
.LASFDE632:
	.secrel32	.Lframe0
	.quad	.LFB12371
	.quad	.LFE12371-.LFB12371
	.byte	0x4
	.long	.LCFI1139-.LFB12371
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1140-.LCFI1139
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1141-.LCFI1140
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE632:
.LSFDE634:
	.long	.LEFDE634-.LASFDE634
.LASFDE634:
	.secrel32	.Lframe0
	.quad	.LFB12372
	.quad	.LFE12372-.LFB12372
	.byte	0x4
	.long	.LCFI1142-.LFB12372
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1143-.LCFI1142
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1144-.LCFI1143
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE634:
.LSFDE636:
	.long	.LEFDE636-.LASFDE636
.LASFDE636:
	.secrel32	.Lframe0
	.quad	.LFB12376
	.quad	.LFE12376-.LFB12376
	.byte	0x4
	.long	.LCFI1145-.LFB12376
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1146-.LCFI1145
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1147-.LCFI1146
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE636:
.LSFDE638:
	.long	.LEFDE638-.LASFDE638
.LASFDE638:
	.secrel32	.Lframe0
	.quad	.LFB12379
	.quad	.LFE12379-.LFB12379
	.byte	0x4
	.long	.LCFI1148-.LFB12379
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1149-.LCFI1148
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1150-.LCFI1149
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE638:
.LSFDE640:
	.long	.LEFDE640-.LASFDE640
.LASFDE640:
	.secrel32	.Lframe0
	.quad	.LFB12381
	.quad	.LFE12381-.LFB12381
	.byte	0x4
	.long	.LCFI1151-.LFB12381
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1152-.LCFI1151
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1153-.LCFI1152
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE640:
.LSFDE642:
	.long	.LEFDE642-.LASFDE642
.LASFDE642:
	.secrel32	.Lframe0
	.quad	.LFB12382
	.quad	.LFE12382-.LFB12382
	.byte	0x4
	.long	.LCFI1154-.LFB12382
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1155-.LCFI1154
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1156-.LCFI1155
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE642:
.LSFDE644:
	.long	.LEFDE644-.LASFDE644
.LASFDE644:
	.secrel32	.Lframe0
	.quad	.LFB12392
	.quad	.LFE12392-.LFB12392
	.byte	0x4
	.long	.LCFI1157-.LFB12392
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1158-.LCFI1157
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1159-.LCFI1158
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE644:
.LSFDE646:
	.long	.LEFDE646-.LASFDE646
.LASFDE646:
	.secrel32	.Lframe0
	.quad	.LFB12393
	.quad	.LFE12393-.LFB12393
	.byte	0x4
	.long	.LCFI1160-.LFB12393
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1161-.LCFI1160
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1162-.LCFI1161
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE646:
.LSFDE648:
	.long	.LEFDE648-.LASFDE648
.LASFDE648:
	.secrel32	.Lframe0
	.quad	.LFB12395
	.quad	.LFE12395-.LFB12395
	.byte	0x4
	.long	.LCFI1163-.LFB12395
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1164-.LCFI1163
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1165-.LCFI1164
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE648:
.LSFDE650:
	.long	.LEFDE650-.LASFDE650
.LASFDE650:
	.secrel32	.Lframe0
	.quad	.LFB12397
	.quad	.LFE12397-.LFB12397
	.byte	0x4
	.long	.LCFI1166-.LFB12397
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1167-.LCFI1166
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1168-.LCFI1167
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE650:
.LSFDE652:
	.long	.LEFDE652-.LASFDE652
.LASFDE652:
	.secrel32	.Lframe0
	.quad	.LFB12398
	.quad	.LFE12398-.LFB12398
	.byte	0x4
	.long	.LCFI1169-.LFB12398
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1170-.LCFI1169
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1171-.LCFI1170
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE652:
.LSFDE654:
	.long	.LEFDE654-.LASFDE654
.LASFDE654:
	.secrel32	.Lframe0
	.quad	.LFB12400
	.quad	.LFE12400-.LFB12400
	.byte	0x4
	.long	.LCFI1172-.LFB12400
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1173-.LCFI1172
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1174-.LCFI1173
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE654:
.LSFDE656:
	.long	.LEFDE656-.LASFDE656
.LASFDE656:
	.secrel32	.Lframe0
	.quad	.LFB12402
	.quad	.LFE12402-.LFB12402
	.byte	0x4
	.long	.LCFI1175-.LFB12402
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1176-.LCFI1175
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1177-.LCFI1176
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI1178-.LCFI1177
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1179-.LCFI1178
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1180-.LCFI1179
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE656:
.LSFDE658:
	.long	.LEFDE658-.LASFDE658
.LASFDE658:
	.secrel32	.Lframe0
	.quad	.LFB12403
	.quad	.LFE12403-.LFB12403
	.byte	0x4
	.long	.LCFI1181-.LFB12403
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1182-.LCFI1181
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1183-.LCFI1182
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE658:
.LSFDE660:
	.long	.LEFDE660-.LASFDE660
.LASFDE660:
	.secrel32	.Lframe0
	.quad	.LFB12404
	.quad	.LFE12404-.LFB12404
	.byte	0x4
	.long	.LCFI1184-.LFB12404
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1185-.LCFI1184
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1186-.LCFI1185
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE660:
.LSFDE662:
	.long	.LEFDE662-.LASFDE662
.LASFDE662:
	.secrel32	.Lframe0
	.quad	.LFB12405
	.quad	.LFE12405-.LFB12405
	.byte	0x4
	.long	.LCFI1187-.LFB12405
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1188-.LCFI1187
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1189-.LCFI1188
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI1190-.LCFI1189
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1191-.LCFI1190
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1192-.LCFI1191
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE662:
.LSFDE664:
	.long	.LEFDE664-.LASFDE664
.LASFDE664:
	.secrel32	.Lframe0
	.quad	.LFB12406
	.quad	.LFE12406-.LFB12406
	.byte	0x4
	.long	.LCFI1193-.LFB12406
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1194-.LCFI1193
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1195-.LCFI1194
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE664:
.LSFDE666:
	.long	.LEFDE666-.LASFDE666
.LASFDE666:
	.secrel32	.Lframe0
	.quad	.LFB12408
	.quad	.LFE12408-.LFB12408
	.byte	0x4
	.long	.LCFI1196-.LFB12408
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1197-.LCFI1196
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1198-.LCFI1197
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE666:
.LSFDE668:
	.long	.LEFDE668-.LASFDE668
.LASFDE668:
	.secrel32	.Lframe0
	.quad	.LFB12410
	.quad	.LFE12410-.LFB12410
	.byte	0x4
	.long	.LCFI1199-.LFB12410
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1200-.LCFI1199
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1201-.LCFI1200
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE668:
.LSFDE670:
	.long	.LEFDE670-.LASFDE670
.LASFDE670:
	.secrel32	.Lframe0
	.quad	.LFB12411
	.quad	.LFE12411-.LFB12411
	.byte	0x4
	.long	.LCFI1202-.LFB12411
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1203-.LCFI1202
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1204-.LCFI1203
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE670:
.LSFDE672:
	.long	.LEFDE672-.LASFDE672
.LASFDE672:
	.secrel32	.Lframe0
	.quad	.LFB12412
	.quad	.LFE12412-.LFB12412
	.byte	0x4
	.long	.LCFI1205-.LFB12412
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1206-.LCFI1205
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1207-.LCFI1206
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE672:
.LSFDE674:
	.long	.LEFDE674-.LASFDE674
.LASFDE674:
	.secrel32	.Lframe0
	.quad	.LFB12413
	.quad	.LFE12413-.LFB12413
	.byte	0x4
	.long	.LCFI1208-.LFB12413
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1209-.LCFI1208
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1210-.LCFI1209
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1211-.LCFI1210
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1212-.LCFI1211
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1213-.LCFI1212
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE674:
.LSFDE676:
	.long	.LEFDE676-.LASFDE676
.LASFDE676:
	.secrel32	.Lframe0
	.quad	.LFB12414
	.quad	.LFE12414-.LFB12414
	.byte	0x4
	.long	.LCFI1214-.LFB12414
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1215-.LCFI1214
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1216-.LCFI1215
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE676:
.LSFDE678:
	.long	.LEFDE678-.LASFDE678
.LASFDE678:
	.secrel32	.Lframe0
	.quad	.LFB12418
	.quad	.LFE12418-.LFB12418
	.byte	0x4
	.long	.LCFI1217-.LFB12418
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1218-.LCFI1217
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1219-.LCFI1218
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE678:
.LSFDE680:
	.long	.LEFDE680-.LASFDE680
.LASFDE680:
	.secrel32	.Lframe0
	.quad	.LFB12419
	.quad	.LFE12419-.LFB12419
	.byte	0x4
	.long	.LCFI1220-.LFB12419
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1221-.LCFI1220
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1222-.LCFI1221
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE680:
.LSFDE682:
	.long	.LEFDE682-.LASFDE682
.LASFDE682:
	.secrel32	.Lframe0
	.quad	.LFB12420
	.quad	.LFE12420-.LFB12420
	.byte	0x4
	.long	.LCFI1223-.LFB12420
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1224-.LCFI1223
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1225-.LCFI1224
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE682:
.LSFDE684:
	.long	.LEFDE684-.LASFDE684
.LASFDE684:
	.secrel32	.Lframe0
	.quad	.LFB12421
	.quad	.LFE12421-.LFB12421
	.byte	0x4
	.long	.LCFI1226-.LFB12421
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1227-.LCFI1226
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1228-.LCFI1227
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE684:
.LSFDE686:
	.long	.LEFDE686-.LASFDE686
.LASFDE686:
	.secrel32	.Lframe0
	.quad	.LFB12422
	.quad	.LFE12422-.LFB12422
	.byte	0x4
	.long	.LCFI1229-.LFB12422
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1230-.LCFI1229
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1231-.LCFI1230
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE686:
.LSFDE688:
	.long	.LEFDE688-.LASFDE688
.LASFDE688:
	.secrel32	.Lframe0
	.quad	.LFB12423
	.quad	.LFE12423-.LFB12423
	.byte	0x4
	.long	.LCFI1232-.LFB12423
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1233-.LCFI1232
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1234-.LCFI1233
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE688:
.LSFDE690:
	.long	.LEFDE690-.LASFDE690
.LASFDE690:
	.secrel32	.Lframe0
	.quad	.LFB12424
	.quad	.LFE12424-.LFB12424
	.byte	0x4
	.long	.LCFI1235-.LFB12424
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1236-.LCFI1235
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1237-.LCFI1236
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE690:
.LSFDE692:
	.long	.LEFDE692-.LASFDE692
.LASFDE692:
	.secrel32	.Lframe0
	.quad	.LFB12426
	.quad	.LFE12426-.LFB12426
	.byte	0x4
	.long	.LCFI1238-.LFB12426
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1239-.LCFI1238
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1240-.LCFI1239
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE692:
.LSFDE694:
	.long	.LEFDE694-.LASFDE694
.LASFDE694:
	.secrel32	.Lframe0
	.quad	.LFB12428
	.quad	.LFE12428-.LFB12428
	.byte	0x4
	.long	.LCFI1241-.LFB12428
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1242-.LCFI1241
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1243-.LCFI1242
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE694:
.LSFDE696:
	.long	.LEFDE696-.LASFDE696
.LASFDE696:
	.secrel32	.Lframe0
	.quad	.LFB12430
	.quad	.LFE12430-.LFB12430
	.byte	0x4
	.long	.LCFI1244-.LFB12430
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1245-.LCFI1244
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1246-.LCFI1245
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE696:
.LSFDE698:
	.long	.LEFDE698-.LASFDE698
.LASFDE698:
	.secrel32	.Lframe0
	.quad	.LFB12432
	.quad	.LFE12432-.LFB12432
	.byte	0x4
	.long	.LCFI1247-.LFB12432
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1248-.LCFI1247
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1249-.LCFI1248
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE698:
.LSFDE700:
	.long	.LEFDE700-.LASFDE700
.LASFDE700:
	.secrel32	.Lframe0
	.quad	.LFB12449
	.quad	.LFE12449-.LFB12449
	.byte	0x4
	.long	.LCFI1250-.LFB12449
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1251-.LCFI1250
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1252-.LCFI1251
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE700:
.LSFDE702:
	.long	.LEFDE702-.LASFDE702
.LASFDE702:
	.secrel32	.Lframe0
	.quad	.LFB12450
	.quad	.LFE12450-.LFB12450
	.byte	0x4
	.long	.LCFI1253-.LFB12450
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1254-.LCFI1253
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1255-.LCFI1254
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE702:
.LSFDE704:
	.long	.LEFDE704-.LASFDE704
.LASFDE704:
	.secrel32	.Lframe0
	.quad	.LFB12451
	.quad	.LFE12451-.LFB12451
	.byte	0x4
	.long	.LCFI1256-.LFB12451
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1257-.LCFI1256
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1258-.LCFI1257
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE704:
.LSFDE706:
	.long	.LEFDE706-.LASFDE706
.LASFDE706:
	.secrel32	.Lframe0
	.quad	.LFB12452
	.quad	.LFE12452-.LFB12452
	.byte	0x4
	.long	.LCFI1259-.LFB12452
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1260-.LCFI1259
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1261-.LCFI1260
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE706:
.LSFDE708:
	.long	.LEFDE708-.LASFDE708
.LASFDE708:
	.secrel32	.Lframe0
	.quad	.LFB12453
	.quad	.LFE12453-.LFB12453
	.byte	0x4
	.long	.LCFI1262-.LFB12453
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1263-.LCFI1262
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1264-.LCFI1263
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE708:
.LSFDE710:
	.long	.LEFDE710-.LASFDE710
.LASFDE710:
	.secrel32	.Lframe0
	.quad	.LFB12455
	.quad	.LFE12455-.LFB12455
	.byte	0x4
	.long	.LCFI1265-.LFB12455
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1266-.LCFI1265
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1267-.LCFI1266
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE710:
.LSFDE712:
	.long	.LEFDE712-.LASFDE712
.LASFDE712:
	.secrel32	.Lframe0
	.quad	.LFB12457
	.quad	.LFE12457-.LFB12457
	.byte	0x4
	.long	.LCFI1268-.LFB12457
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1269-.LCFI1268
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1270-.LCFI1269
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE712:
.LSFDE714:
	.long	.LEFDE714-.LASFDE714
.LASFDE714:
	.secrel32	.Lframe0
	.quad	.LFB12458
	.quad	.LFE12458-.LFB12458
	.byte	0x4
	.long	.LCFI1271-.LFB12458
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1272-.LCFI1271
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1273-.LCFI1272
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE714:
.LSFDE716:
	.long	.LEFDE716-.LASFDE716
.LASFDE716:
	.secrel32	.Lframe0
	.quad	.LFB12459
	.quad	.LFE12459-.LFB12459
	.byte	0x4
	.long	.LCFI1274-.LFB12459
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1275-.LCFI1274
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1276-.LCFI1275
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1277-.LCFI1276
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1278-.LCFI1277
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1279-.LCFI1278
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE716:
.LSFDE718:
	.long	.LEFDE718-.LASFDE718
.LASFDE718:
	.secrel32	.Lframe0
	.quad	.LFB12460
	.quad	.LFE12460-.LFB12460
	.byte	0x4
	.long	.LCFI1280-.LFB12460
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1281-.LCFI1280
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1282-.LCFI1281
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE718:
.LSFDE720:
	.long	.LEFDE720-.LASFDE720
.LASFDE720:
	.secrel32	.Lframe0
	.quad	.LFB12461
	.quad	.LFE12461-.LFB12461
	.byte	0x4
	.long	.LCFI1283-.LFB12461
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1284-.LCFI1283
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1285-.LCFI1284
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE720:
.LSFDE722:
	.long	.LEFDE722-.LASFDE722
.LASFDE722:
	.secrel32	.Lframe0
	.quad	.LFB12462
	.quad	.LFE12462-.LFB12462
	.byte	0x4
	.long	.LCFI1286-.LFB12462
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1287-.LCFI1286
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1288-.LCFI1287
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1289-.LCFI1288
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1290-.LCFI1289
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1291-.LCFI1290
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE722:
.LSFDE724:
	.long	.LEFDE724-.LASFDE724
.LASFDE724:
	.secrel32	.Lframe0
	.quad	.LFB12463
	.quad	.LFE12463-.LFB12463
	.byte	0x4
	.long	.LCFI1292-.LFB12463
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1293-.LCFI1292
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1294-.LCFI1293
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE724:
.LSFDE726:
	.long	.LEFDE726-.LASFDE726
.LASFDE726:
	.secrel32	.Lframe0
	.quad	.LFB12464
	.quad	.LFE12464-.LFB12464
	.byte	0x4
	.long	.LCFI1295-.LFB12464
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1296-.LCFI1295
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1297-.LCFI1296
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE726:
.LSFDE728:
	.long	.LEFDE728-.LASFDE728
.LASFDE728:
	.secrel32	.Lframe0
	.quad	.LFB12465
	.quad	.LFE12465-.LFB12465
	.byte	0x4
	.long	.LCFI1298-.LFB12465
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1299-.LCFI1298
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1300-.LCFI1299
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE728:
.LSFDE730:
	.long	.LEFDE730-.LASFDE730
.LASFDE730:
	.secrel32	.Lframe0
	.quad	.LFB12466
	.quad	.LFE12466-.LFB12466
	.byte	0x4
	.long	.LCFI1301-.LFB12466
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1302-.LCFI1301
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1303-.LCFI1302
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE730:
.LSFDE732:
	.long	.LEFDE732-.LASFDE732
.LASFDE732:
	.secrel32	.Lframe0
	.quad	.LFB12467
	.quad	.LFE12467-.LFB12467
	.byte	0x4
	.long	.LCFI1304-.LFB12467
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1305-.LCFI1304
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1306-.LCFI1305
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE732:
.LSFDE734:
	.long	.LEFDE734-.LASFDE734
.LASFDE734:
	.secrel32	.Lframe0
	.quad	.LFB12468
	.quad	.LFE12468-.LFB12468
	.byte	0x4
	.long	.LCFI1307-.LFB12468
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1308-.LCFI1307
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1309-.LCFI1308
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE734:
.LSFDE736:
	.long	.LEFDE736-.LASFDE736
.LASFDE736:
	.secrel32	.Lframe0
	.quad	.LFB12469
	.quad	.LFE12469-.LFB12469
	.byte	0x4
	.long	.LCFI1310-.LFB12469
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1311-.LCFI1310
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1312-.LCFI1311
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE736:
.LSFDE738:
	.long	.LEFDE738-.LASFDE738
.LASFDE738:
	.secrel32	.Lframe0
	.quad	.LFB12470
	.quad	.LFE12470-.LFB12470
	.byte	0x4
	.long	.LCFI1313-.LFB12470
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1314-.LCFI1313
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1315-.LCFI1314
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE738:
	.text
.Letext0:
	.file 26 "C:/msys64/mingw64/include/vadefs.h"
	.file 27 "C:/msys64/mingw64/include/corecrt.h"
	.file 28 "C:/msys64/mingw64/include/locale.h"
	.file 29 "C:/msys64/mingw64/include/minwindef.h"
	.file 30 "C:/msys64/mingw64/include/basetsd.h"
	.file 31 "C:/msys64/mingw64/include/winnt.h"
	.file 32 "C:/msys64/mingw64/include/guiddef.h"
	.file 33 "C:/msys64/mingw64/include/stdlib.h"
	.file 34 "C:/msys64/mingw64/include/c++/12.2.0/cstdlib"
	.file 35 "C:/msys64/mingw64/include/c++/12.2.0/bits/std_abs.h"
	.file 36 "C:/msys64/mingw64/include/c++/12.2.0/cstdio"
	.file 37 "C:/msys64/mingw64/include/c++/12.2.0/cstdint"
	.file 38 "C:/msys64/mingw64/include/c++/12.2.0/type_traits"
	.file 39 "C:/msys64/mingw64/include/c++/12.2.0/concepts"
	.file 40 "C:/msys64/mingw64/include/c++/12.2.0/bits/iterator_concepts.h"
	.file 41 "C:/msys64/mingw64/include/c++/12.2.0/debug/debug.h"
	.file 42 "C:/msys64/mingw64/include/c++/12.2.0/bits/uses_allocator.h"
	.file 43 "C:/msys64/mingw64/include/c++/12.2.0/cwchar"
	.file 44 "C:/msys64/mingw64/include/c++/12.2.0/bits/exception_ptr.h"
	.file 45 "C:/msys64/mingw64/include/c++/12.2.0/clocale"
	.file 46 "C:/msys64/mingw64/include/c++/12.2.0/numbers"
	.file 47 "C:/msys64/mingw64/include/c++/12.2.0/system_error"
	.file 48 "C:/msys64/mingw64/include/c++/12.2.0/cwctype"
	.file 49 "C:/msys64/mingw64/include/c++/12.2.0/bits/shared_ptr_base.h"
	.file 50 "C:/msys64/mingw64/include/c++/12.2.0/ctime"
	.file 51 "C:/msys64/mingw64/include/c++/12.2.0/ratio"
	.file 52 "C:/msys64/mingw64/include/c++/12.2.0/bits/ranges_cmp.h"
	.file 53 "C:/msys64/mingw64/include/c++/12.2.0/string_view"
	.file 54 "C:/msys64/mingw64/include/c++/12.2.0/bits/parse_numbers.h"
	.file 55 "C:/msys64/mingw64/include/c++/12.2.0/bits/utility.h"
	.file 56 "C:/msys64/mingw64/include/c++/12.2.0/bits/functexcept.h"
	.file 57 "C:/msys64/mingw64/include/c++/12.2.0/exception"
	.file 58 "C:/msys64/mingw64/include/c++/12.2.0/bits/hash_bytes.h"
	.file 59 "C:/msys64/mingw64/include/c++/12.2.0/bits/predefined_ops.h"
	.file 60 "C:/msys64/mingw64/include/c++/12.2.0/ext/concurrence.h"
	.file 61 "C:/msys64/mingw64/include/c++/12.2.0/ext/type_traits.h"
	.file 62 "C:/msys64/mingw64/include/c++/12.2.0/stdlib.h"
	.file 63 "C:/msys64/mingw64/include/windef.h"
	.file 64 "C:/msys64/mingw64/include/winuser.h"
	.file 65 "C:/msys64/mingw64/include/stdint.h"
	.file 66 "C:/msys64/mingw64/include/math.h"
	.file 67 "C:/msys64/mingw64/include/c++/12.2.0/bits/ptr_traits.h"
	.file 68 "C:/msys64/mingw64/include/wchar.h"
	.file 69 "C:/msys64/mingw64/include/swprintf.inl"
	.file 70 "C:/msys64/mingw64/include/string.h"
	.file 71 "C:/msys64/mingw64/include/sys/types.h"
	.file 72 "C:/msys64/mingw64/include/time.h"
	.file 73 "C:/msys64/mingw64/include/pthread.h"
	.file 74 "C:/msys64/mingw64/include/wctype.h"
	.file 75 "C:/msys64/mingw64/include/ctype.h"
	.file 76 "C:/msys64/mingw64/include/c++/12.2.0/pstl/execution_defs.h"
	.file 77 "C:/msys64/mingw64/include/dxgiformat.h"
	.file 78 "C:/msys64/mingw64/include/dcommon.h"
	.file 79 "C:/msys64/mingw64/include/dxgitype.h"
	.file 80 "C:/msys64/mingw64/include/d2dbasetypes.h"
	.file 81 "C:/msys64/mingw64/include/stddef.h"
	.file 82 "C:/msys64/mingw64/include/pthread_time.h"
	.file 83 "C:/msys64/mingw64/include/winbase.h"
	.file 84 "C:/msys64/mingw64/include/errhandlingapi.h"
	.file 85 "C:/msys64/mingw64/include/libloaderapi.h"
	.file 86 "C:/msys64/mingw64/include/stringapiset.h"
	.section	.debug_info,"dr"
.Ldebug_info0:
	.long	0x297e5
	.word	0x5
	.byte	0x1
	.byte	0x8
	.secrel32	.Ldebug_abbrev0
	.uleb128 0xf6
	.ascii "GNU C++20 12.2.0 -mtune=generic -march=x86-64 -g -std=c++20 -fstack-usage -fno-inline -fno-omit-frame-pointer\0"
	.byte	0x21
	.secrel32	.LASF0
	.secrel32	.LASF1
	.secrel32	.LLRL5
	.quad	0
	.secrel32	.Ldebug_line0
	.uleb128 0x13
	.ascii "__gnuc_va_list\0"
	.byte	0x1a
	.byte	0x18
	.byte	0x1d
	.long	0xac
	.uleb128 0xf7
	.byte	0x8
	.ascii "__builtin_va_list\0"
	.long	0xc5
	.uleb128 0x3e
	.byte	0x1
	.byte	0x6
	.ascii "char\0"
	.uleb128 0x4
	.long	0xc5
	.uleb128 0x13
	.ascii "va_list\0"
	.byte	0x1a
	.byte	0x1f
	.byte	0x1a
	.long	0x95
	.uleb128 0x13
	.ascii "size_t\0"
	.byte	0x1b
	.byte	0x23
	.byte	0x2c
	.long	0xf1
	.uleb128 0x3e
	.byte	0x8
	.byte	0x7
	.ascii "long long unsigned int\0"
	.uleb128 0x4
	.long	0xf1
	.uleb128 0x3e
	.byte	0x8
	.byte	0x5
	.ascii "long long int\0"
	.uleb128 0x4
	.long	0x110
	.uleb128 0x13
	.ascii "intptr_t\0"
	.byte	0x1b
	.byte	0x3e
	.byte	0x23
	.long	0x110
	.uleb128 0x13
	.ascii "uintptr_t\0"
	.byte	0x1b
	.byte	0x4b
	.byte	0x2c
	.long	0xf1
	.uleb128 0x4
	.long	0x137
	.uleb128 0x13
	.ascii "wint_t\0"
	.byte	0x1b
	.byte	0x6a
	.byte	0x18
	.long	0x15d
	.uleb128 0x3e
	.byte	0x2
	.byte	0x7
	.ascii "short unsigned int\0"
	.uleb128 0x13
	.ascii "wctype_t\0"
	.byte	0x1b
	.byte	0x6b
	.byte	0x18
	.long	0x15d
	.uleb128 0x3e
	.byte	0x4
	.byte	0x5
	.ascii "int\0"
	.uleb128 0x4
	.long	0x184
	.uleb128 0x3e
	.byte	0x4
	.byte	0x5
	.ascii "long int\0"
	.uleb128 0x13
	.ascii "__time64_t\0"
	.byte	0x1b
	.byte	0x7b
	.byte	0x23
	.long	0x110
	.uleb128 0x13
	.ascii "time_t\0"
	.byte	0x1b
	.byte	0x8a
	.byte	0x14
	.long	0x19c
	.uleb128 0x4
	.long	0x1af
	.uleb128 0x6
	.long	0xc5
	.uleb128 0x6
	.long	0x1cd
	.uleb128 0x3e
	.byte	0x2
	.byte	0x7
	.ascii "wchar_t\0"
	.uleb128 0x4
	.long	0x1cd
	.uleb128 0x6
	.long	0x184
	.uleb128 0x3e
	.byte	0x4
	.byte	0x7
	.ascii "unsigned int\0"
	.uleb128 0x3e
	.byte	0x4
	.byte	0x7
	.ascii "long unsigned int\0"
	.uleb128 0x1b
	.ascii "lconv\0"
	.byte	0x98
	.byte	0x1c
	.byte	0x2d
	.byte	0xa
	.long	0x495
	.uleb128 0x16
	.ascii "decimal_point\0"
	.byte	0x1c
	.byte	0x2e
	.byte	0xb
	.long	0x1c3
	.byte	0
	.uleb128 0x16
	.ascii "thousands_sep\0"
	.byte	0x1c
	.byte	0x2f
	.byte	0xb
	.long	0x1c3
	.byte	0x8
	.uleb128 0x16
	.ascii "grouping\0"
	.byte	0x1c
	.byte	0x30
	.byte	0xb
	.long	0x1c3
	.byte	0x10
	.uleb128 0x16
	.ascii "int_curr_symbol\0"
	.byte	0x1c
	.byte	0x31
	.byte	0xb
	.long	0x1c3
	.byte	0x18
	.uleb128 0x16
	.ascii "currency_symbol\0"
	.byte	0x1c
	.byte	0x32
	.byte	0xb
	.long	0x1c3
	.byte	0x20
	.uleb128 0x16
	.ascii "mon_decimal_point\0"
	.byte	0x1c
	.byte	0x33
	.byte	0xb
	.long	0x1c3
	.byte	0x28
	.uleb128 0x16
	.ascii "mon_thousands_sep\0"
	.byte	0x1c
	.byte	0x34
	.byte	0xb
	.long	0x1c3
	.byte	0x30
	.uleb128 0x16
	.ascii "mon_grouping\0"
	.byte	0x1c
	.byte	0x35
	.byte	0xb
	.long	0x1c3
	.byte	0x38
	.uleb128 0x16
	.ascii "positive_sign\0"
	.byte	0x1c
	.byte	0x36
	.byte	0xb
	.long	0x1c3
	.byte	0x40
	.uleb128 0x16
	.ascii "negative_sign\0"
	.byte	0x1c
	.byte	0x37
	.byte	0xb
	.long	0x1c3
	.byte	0x48
	.uleb128 0x16
	.ascii "int_frac_digits\0"
	.byte	0x1c
	.byte	0x38
	.byte	0xa
	.long	0xc5
	.byte	0x50
	.uleb128 0x16
	.ascii "frac_digits\0"
	.byte	0x1c
	.byte	0x39
	.byte	0xa
	.long	0xc5
	.byte	0x51
	.uleb128 0x16
	.ascii "p_cs_precedes\0"
	.byte	0x1c
	.byte	0x3a
	.byte	0xa
	.long	0xc5
	.byte	0x52
	.uleb128 0x16
	.ascii "p_sep_by_space\0"
	.byte	0x1c
	.byte	0x3b
	.byte	0xa
	.long	0xc5
	.byte	0x53
	.uleb128 0x16
	.ascii "n_cs_precedes\0"
	.byte	0x1c
	.byte	0x3c
	.byte	0xa
	.long	0xc5
	.byte	0x54
	.uleb128 0x16
	.ascii "n_sep_by_space\0"
	.byte	0x1c
	.byte	0x3d
	.byte	0xa
	.long	0xc5
	.byte	0x55
	.uleb128 0x16
	.ascii "p_sign_posn\0"
	.byte	0x1c
	.byte	0x3e
	.byte	0xa
	.long	0xc5
	.byte	0x56
	.uleb128 0x16
	.ascii "n_sign_posn\0"
	.byte	0x1c
	.byte	0x3f
	.byte	0xa
	.long	0xc5
	.byte	0x57
	.uleb128 0x16
	.ascii "_W_decimal_point\0"
	.byte	0x1c
	.byte	0x41
	.byte	0xe
	.long	0x1c8
	.byte	0x58
	.uleb128 0x16
	.ascii "_W_thousands_sep\0"
	.byte	0x1c
	.byte	0x42
	.byte	0xe
	.long	0x1c8
	.byte	0x60
	.uleb128 0x16
	.ascii "_W_int_curr_symbol\0"
	.byte	0x1c
	.byte	0x43
	.byte	0xe
	.long	0x1c8
	.byte	0x68
	.uleb128 0x16
	.ascii "_W_currency_symbol\0"
	.byte	0x1c
	.byte	0x44
	.byte	0xe
	.long	0x1c8
	.byte	0x70
	.uleb128 0x16
	.ascii "_W_mon_decimal_point\0"
	.byte	0x1c
	.byte	0x45
	.byte	0xe
	.long	0x1c8
	.byte	0x78
	.uleb128 0x16
	.ascii "_W_mon_thousands_sep\0"
	.byte	0x1c
	.byte	0x46
	.byte	0xe
	.long	0x1c8
	.byte	0x80
	.uleb128 0x16
	.ascii "_W_positive_sign\0"
	.byte	0x1c
	.byte	0x47
	.byte	0xe
	.long	0x1c8
	.byte	0x88
	.uleb128 0x16
	.ascii "_W_negative_sign\0"
	.byte	0x1c
	.byte	0x48
	.byte	0xe
	.long	0x1c8
	.byte	0x90
	.byte	0
	.uleb128 0x6
	.long	0x207
	.uleb128 0x3e
	.byte	0x1
	.byte	0x8
	.ascii "unsigned char\0"
	.uleb128 0x4
	.long	0x49a
	.uleb128 0xf8
	.byte	0x8
	.uleb128 0x13
	.ascii "WINBOOL\0"
	.byte	0x1d
	.byte	0x7f
	.byte	0xd
	.long	0x184
	.uleb128 0x13
	.ascii "WORD\0"
	.byte	0x1d
	.byte	0x8c
	.byte	0x1a
	.long	0x15d
	.uleb128 0x13
	.ascii "DWORD\0"
	.byte	0x1d
	.byte	0x8d
	.byte	0x1d
	.long	0x1f2
	.uleb128 0x13
	.ascii "FLOAT\0"
	.byte	0x1d
	.byte	0x8e
	.byte	0x11
	.long	0x4ec
	.uleb128 0x3e
	.byte	0x4
	.byte	0x4
	.ascii "float\0"
	.uleb128 0x4
	.long	0x4ec
	.uleb128 0x13
	.ascii "LPVOID\0"
	.byte	0x1d
	.byte	0x99
	.byte	0x11
	.long	0x4b0
	.uleb128 0x13
	.ascii "LPCVOID\0"
	.byte	0x1d
	.byte	0x9c
	.byte	0x17
	.long	0x519
	.uleb128 0x6
	.long	0x51e
	.uleb128 0xf9
	.uleb128 0x13
	.ascii "INT\0"
	.byte	0x1d
	.byte	0x9e
	.byte	0xf
	.long	0x184
	.uleb128 0x13
	.ascii "UINT\0"
	.byte	0x1d
	.byte	0x9f
	.byte	0x18
	.long	0x1e2
	.uleb128 0x3e
	.byte	0x1
	.byte	0x6
	.ascii "signed char\0"
	.uleb128 0x3e
	.byte	0x2
	.byte	0x5
	.ascii "short int\0"
	.uleb128 0x6
	.long	0x110
	.uleb128 0x13
	.ascii "UINT32\0"
	.byte	0x1e
	.byte	0x23
	.byte	0x18
	.long	0x1e2
	.uleb128 0x13
	.ascii "UINT_PTR\0"
	.byte	0x1e
	.byte	0x2f
	.byte	0x2e
	.long	0xf1
	.uleb128 0x13
	.ascii "LONG_PTR\0"
	.byte	0x1e
	.byte	0x30
	.byte	0x25
	.long	0x110
	.uleb128 0x13
	.ascii "ULONG_PTR\0"
	.byte	0x1e
	.byte	0x31
	.byte	0x2e
	.long	0xf1
	.uleb128 0x13
	.ascii "DWORD_PTR\0"
	.byte	0x1e
	.byte	0xbf
	.byte	0x27
	.long	0x58b
	.uleb128 0x22
	.ascii "CHAR\0"
	.byte	0x1f
	.word	0x127
	.byte	0x10
	.long	0xc5
	.uleb128 0x4
	.long	0x5af
	.uleb128 0x22
	.ascii "SHORT\0"
	.byte	0x1f
	.word	0x128
	.byte	0x11
	.long	0x548
	.uleb128 0x22
	.ascii "LONG\0"
	.byte	0x1f
	.word	0x129
	.byte	0x14
	.long	0x190
	.uleb128 0x22
	.ascii "WCHAR\0"
	.byte	0x1f
	.word	0x131
	.byte	0x13
	.long	0x1cd
	.uleb128 0x4
	.long	0x5df
	.uleb128 0x6
	.long	0x5df
	.uleb128 0x6
	.long	0x5ee
	.uleb128 0x22
	.ascii "LPWSTR\0"
	.byte	0x1f
	.word	0x135
	.byte	0x1a
	.long	0x5f3
	.uleb128 0x22
	.ascii "LPCWSTR\0"
	.byte	0x1f
	.word	0x139
	.byte	0x18
	.long	0x5f8
	.uleb128 0x6
	.long	0x5af
	.uleb128 0x22
	.ascii "LPCCH\0"
	.byte	0x1f
	.word	0x159
	.byte	0x17
	.long	0x632
	.uleb128 0x6
	.long	0x5bd
	.uleb128 0x22
	.ascii "LPSTR\0"
	.byte	0x1f
	.word	0x15a
	.byte	0x18
	.long	0x61e
	.uleb128 0x22
	.ascii "LPTSTR\0"
	.byte	0x1f
	.word	0x16c
	.byte	0x18
	.long	0x5fd
	.uleb128 0x22
	.ascii "HANDLE\0"
	.byte	0x1f
	.word	0x19f
	.byte	0x11
	.long	0x4b0
	.uleb128 0x22
	.ascii "HRESULT\0"
	.byte	0x1f
	.word	0x1ad
	.byte	0x10
	.long	0x5d1
	.uleb128 0x1b
	.ascii "_GUID\0"
	.byte	0x10
	.byte	0x20
	.byte	0x13
	.byte	0x10
	.long	0x6c3
	.uleb128 0x16
	.ascii "Data1\0"
	.byte	0x20
	.byte	0x14
	.byte	0x15
	.long	0x1f2
	.byte	0
	.uleb128 0x16
	.ascii "Data2\0"
	.byte	0x20
	.byte	0x15
	.byte	0x12
	.long	0x15d
	.byte	0x4
	.uleb128 0x16
	.ascii "Data3\0"
	.byte	0x20
	.byte	0x16
	.byte	0x12
	.long	0x15d
	.byte	0x6
	.uleb128 0x16
	.ascii "Data4\0"
	.byte	0x20
	.byte	0x17
	.byte	0x11
	.long	0x6c3
	.byte	0x8
	.byte	0
	.uleb128 0x77
	.long	0x49a
	.long	0x6d4
	.uleb128 0x8a
	.long	0xf1
	.byte	0x7
	.byte	0
	.uleb128 0x13
	.ascii "GUID\0"
	.byte	0x20
	.byte	0x18
	.byte	0x3
	.long	0x677
	.uleb128 0x4
	.long	0x6d4
	.uleb128 0x13
	.ascii "IID\0"
	.byte	0x20
	.byte	0x58
	.byte	0xe
	.long	0x6d4
	.uleb128 0x4
	.long	0x6e6
	.uleb128 0x3e
	.byte	0x10
	.byte	0x4
	.ascii "long double\0"
	.uleb128 0x1b
	.ascii "_div_t\0"
	.byte	0x8
	.byte	0x21
	.byte	0x3c
	.byte	0x12
	.long	0x732
	.uleb128 0x16
	.ascii "quot\0"
	.byte	0x21
	.byte	0x3d
	.byte	0x9
	.long	0x184
	.byte	0
	.uleb128 0x16
	.ascii "rem\0"
	.byte	0x21
	.byte	0x3e
	.byte	0x9
	.long	0x184
	.byte	0x4
	.byte	0
	.uleb128 0x13
	.ascii "div_t\0"
	.byte	0x21
	.byte	0x3f
	.byte	0x5
	.long	0x706
	.uleb128 0x1b
	.ascii "_ldiv_t\0"
	.byte	0x8
	.byte	0x21
	.byte	0x41
	.byte	0x12
	.long	0x76d
	.uleb128 0x16
	.ascii "quot\0"
	.byte	0x21
	.byte	0x42
	.byte	0xa
	.long	0x190
	.byte	0
	.uleb128 0x16
	.ascii "rem\0"
	.byte	0x21
	.byte	0x43
	.byte	0xa
	.long	0x190
	.byte	0x4
	.byte	0
	.uleb128 0x13
	.ascii "ldiv_t\0"
	.byte	0x21
	.byte	0x44
	.byte	0x5
	.long	0x740
	.uleb128 0x3e
	.byte	0x8
	.byte	0x4
	.ascii "double\0"
	.uleb128 0x6
	.long	0x78b
	.uleb128 0xfa
	.uleb128 0x6
	.long	0x1d8
	.uleb128 0x6
	.long	0x1c3
	.uleb128 0x6
	.long	0x1c8
	.uleb128 0xfb
	.byte	0x10
	.byte	0x21
	.word	0x2d8
	.byte	0x12
	.ascii "7lldiv_t\0"
	.long	0x7ce
	.uleb128 0x1d
	.ascii "quot\0"
	.byte	0x21
	.word	0x2d8
	.byte	0x30
	.long	0x110
	.byte	0
	.uleb128 0x1d
	.ascii "rem\0"
	.byte	0x21
	.word	0x2d8
	.byte	0x36
	.long	0x110
	.byte	0x8
	.byte	0
	.uleb128 0x22
	.ascii "lldiv_t\0"
	.byte	0x21
	.word	0x2d8
	.byte	0x3d
	.long	0x79c
	.uleb128 0x8b
	.ascii "std\0"
	.byte	0x1
	.word	0x128
	.byte	0xb
	.long	0x197d6
	.uleb128 0x5
	.byte	0x22
	.byte	0x7f
	.byte	0xb
	.long	0x732
	.uleb128 0x5
	.byte	0x22
	.byte	0x80
	.byte	0xb
	.long	0x76d
	.uleb128 0x5
	.byte	0x22
	.byte	0x86
	.byte	0xb
	.long	0x197d6
	.uleb128 0x5
	.byte	0x22
	.byte	0x8c
	.byte	0xb
	.long	0x197f0
	.uleb128 0x5
	.byte	0x22
	.byte	0x8d
	.byte	0xb
	.long	0x1980d
	.uleb128 0x5
	.byte	0x22
	.byte	0x8e
	.byte	0xb
	.long	0x19825
	.uleb128 0x5
	.byte	0x22
	.byte	0x8f
	.byte	0xb
	.long	0x1983d
	.uleb128 0x5
	.byte	0x22
	.byte	0x91
	.byte	0xb
	.long	0x19886
	.uleb128 0x5
	.byte	0x22
	.byte	0x94
	.byte	0xb
	.long	0x198a2
	.uleb128 0x5
	.byte	0x22
	.byte	0x96
	.byte	0xb
	.long	0x198bc
	.uleb128 0x5
	.byte	0x22
	.byte	0x99
	.byte	0xb
	.long	0x198d9
	.uleb128 0x5
	.byte	0x22
	.byte	0x9a
	.byte	0xb
	.long	0x198f7
	.uleb128 0x5
	.byte	0x22
	.byte	0x9b
	.byte	0xb
	.long	0x1991d
	.uleb128 0x5
	.byte	0x22
	.byte	0x9d
	.byte	0xb
	.long	0x19941
	.uleb128 0x5
	.byte	0x22
	.byte	0xa3
	.byte	0xb
	.long	0x19965
	.uleb128 0x5
	.byte	0x22
	.byte	0xa5
	.byte	0xb
	.long	0x19974
	.uleb128 0x5
	.byte	0x22
	.byte	0xa6
	.byte	0xb
	.long	0x19989
	.uleb128 0x5
	.byte	0x22
	.byte	0xa7
	.byte	0xb
	.long	0x199a8
	.uleb128 0x5
	.byte	0x22
	.byte	0xa8
	.byte	0xb
	.long	0x199cc
	.uleb128 0x5
	.byte	0x22
	.byte	0xa9
	.byte	0xb
	.long	0x199f1
	.uleb128 0x5
	.byte	0x22
	.byte	0xab
	.byte	0xb
	.long	0x19a0b
	.uleb128 0x5
	.byte	0x22
	.byte	0xac
	.byte	0xb
	.long	0x19a31
	.uleb128 0x5
	.byte	0x22
	.byte	0xf0
	.byte	0x16
	.long	0x7ce
	.uleb128 0x5
	.byte	0x22
	.byte	0xf5
	.byte	0x16
	.long	0x19a9c
	.uleb128 0x5
	.byte	0x22
	.byte	0xf6
	.byte	0x16
	.long	0x19bac
	.uleb128 0x5
	.byte	0x22
	.byte	0xf8
	.byte	0x16
	.long	0x19bca
	.uleb128 0x5
	.byte	0x22
	.byte	0xf9
	.byte	0x16
	.long	0x19c2e
	.uleb128 0x5
	.byte	0x22
	.byte	0xfa
	.byte	0x16
	.long	0x19be3
	.uleb128 0x5
	.byte	0x22
	.byte	0xfb
	.byte	0x16
	.long	0x19c08
	.uleb128 0x5
	.byte	0x22
	.byte	0xfc
	.byte	0x16
	.long	0x19c4d
	.uleb128 0x28
	.ascii "abs\0"
	.byte	0x23
	.byte	0x4f
	.byte	0x3
	.ascii "_ZSt3abse\0"
	.long	0x6f7
	.long	0x8fd
	.uleb128 0x1
	.long	0x6f7
	.byte	0
	.uleb128 0x28
	.ascii "abs\0"
	.byte	0x23
	.byte	0x4b
	.byte	0x3
	.ascii "_ZSt3absf\0"
	.long	0x4ec
	.long	0x91d
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x28
	.ascii "abs\0"
	.byte	0x23
	.byte	0x47
	.byte	0x3
	.ascii "_ZSt3absd\0"
	.long	0x77c
	.long	0x93d
	.uleb128 0x1
	.long	0x77c
	.byte	0
	.uleb128 0x28
	.ascii "abs\0"
	.byte	0x23
	.byte	0x3d
	.byte	0x3
	.ascii "_ZSt3absx\0"
	.long	0x110
	.long	0x95d
	.uleb128 0x1
	.long	0x110
	.byte	0
	.uleb128 0x28
	.ascii "abs\0"
	.byte	0x23
	.byte	0x38
	.byte	0x3
	.ascii "_ZSt3absl\0"
	.long	0x190
	.long	0x97d
	.uleb128 0x1
	.long	0x190
	.byte	0
	.uleb128 0x28
	.ascii "div\0"
	.byte	0x22
	.byte	0xb1
	.byte	0x3
	.ascii "_ZSt3divll\0"
	.long	0x76d
	.long	0x9a3
	.uleb128 0x1
	.long	0x190
	.uleb128 0x1
	.long	0x190
	.byte	0
	.uleb128 0x5
	.byte	0x24
	.byte	0x62
	.byte	0xb
	.long	0x1a323
	.uleb128 0x5
	.byte	0x24
	.byte	0x63
	.byte	0xb
	.long	0x1a330
	.uleb128 0x5
	.byte	0x24
	.byte	0x65
	.byte	0xb
	.long	0x1a344
	.uleb128 0x5
	.byte	0x24
	.byte	0x66
	.byte	0xb
	.long	0x1a361
	.uleb128 0x5
	.byte	0x24
	.byte	0x67
	.byte	0xb
	.long	0x1a37b
	.uleb128 0x5
	.byte	0x24
	.byte	0x68
	.byte	0xb
	.long	0x1a393
	.uleb128 0x5
	.byte	0x24
	.byte	0x69
	.byte	0xb
	.long	0x1a3ad
	.uleb128 0x5
	.byte	0x24
	.byte	0x6a
	.byte	0xb
	.long	0x1a3c7
	.uleb128 0x5
	.byte	0x24
	.byte	0x6b
	.byte	0xb
	.long	0x1a3e0
	.uleb128 0x5
	.byte	0x24
	.byte	0x6c
	.byte	0xb
	.long	0x1a405
	.uleb128 0x5
	.byte	0x24
	.byte	0x6d
	.byte	0xb
	.long	0x1a428
	.uleb128 0x5
	.byte	0x24
	.byte	0x6e
	.byte	0xb
	.long	0x1a446
	.uleb128 0x5
	.byte	0x24
	.byte	0x71
	.byte	0xb
	.long	0x1a47e
	.uleb128 0x5
	.byte	0x24
	.byte	0x72
	.byte	0xb
	.long	0x1a4a6
	.uleb128 0x5
	.byte	0x24
	.byte	0x73
	.byte	0xb
	.long	0x1a4cb
	.uleb128 0x5
	.byte	0x24
	.byte	0x74
	.byte	0xb
	.long	0x1a501
	.uleb128 0x5
	.byte	0x24
	.byte	0x75
	.byte	0xb
	.long	0x1a524
	.uleb128 0x5
	.byte	0x24
	.byte	0x76
	.byte	0xb
	.long	0x1a549
	.uleb128 0x5
	.byte	0x24
	.byte	0x78
	.byte	0xb
	.long	0x1a562
	.uleb128 0x5
	.byte	0x24
	.byte	0x79
	.byte	0xb
	.long	0x1a57a
	.uleb128 0x5
	.byte	0x24
	.byte	0x7e
	.byte	0xb
	.long	0x1a58c
	.uleb128 0x5
	.byte	0x24
	.byte	0x7f
	.byte	0xb
	.long	0x1a5a2
	.uleb128 0x5
	.byte	0x24
	.byte	0x83
	.byte	0xb
	.long	0x1a625
	.uleb128 0x5
	.byte	0x24
	.byte	0x84
	.byte	0xb
	.long	0x1a63f
	.uleb128 0x5
	.byte	0x24
	.byte	0x85
	.byte	0xb
	.long	0x1a65e
	.uleb128 0x5
	.byte	0x24
	.byte	0x86
	.byte	0xb
	.long	0x1a674
	.uleb128 0x5
	.byte	0x24
	.byte	0x87
	.byte	0xb
	.long	0x1a69b
	.uleb128 0x5
	.byte	0x24
	.byte	0x88
	.byte	0xb
	.long	0x1a6b6
	.uleb128 0x5
	.byte	0x24
	.byte	0x89
	.byte	0xb
	.long	0x1a6e0
	.uleb128 0x5
	.byte	0x24
	.byte	0x8a
	.byte	0xb
	.long	0x1a712
	.uleb128 0x5
	.byte	0x24
	.byte	0x8b
	.byte	0xb
	.long	0x1a743
	.uleb128 0x5
	.byte	0x24
	.byte	0x8d
	.byte	0xb
	.long	0x1a755
	.uleb128 0x5
	.byte	0x24
	.byte	0x8f
	.byte	0xb
	.long	0x1a76f
	.uleb128 0x5
	.byte	0x24
	.byte	0x90
	.byte	0xb
	.long	0x1a78e
	.uleb128 0x5
	.byte	0x24
	.byte	0x91
	.byte	0xb
	.long	0x1a7cd
	.uleb128 0x5
	.byte	0x24
	.byte	0x92
	.byte	0xb
	.long	0x1a7fd
	.uleb128 0x5
	.byte	0x24
	.byte	0xb9
	.byte	0x16
	.long	0x1a836
	.uleb128 0x5
	.byte	0x24
	.byte	0xba
	.byte	0x16
	.long	0x1a870
	.uleb128 0x5
	.byte	0x24
	.byte	0xbb
	.byte	0x16
	.long	0x1a8ad
	.uleb128 0x5
	.byte	0x24
	.byte	0xbc
	.byte	0x16
	.long	0x1a8db
	.uleb128 0x5
	.byte	0x24
	.byte	0xbd
	.byte	0x16
	.long	0x1a91c
	.uleb128 0x5
	.byte	0x25
	.byte	0x2f
	.byte	0xb
	.long	0x1a954
	.uleb128 0x5
	.byte	0x25
	.byte	0x30
	.byte	0xb
	.long	0x1a973
	.uleb128 0x5
	.byte	0x25
	.byte	0x31
	.byte	0xb
	.long	0x1a994
	.uleb128 0x5
	.byte	0x25
	.byte	0x32
	.byte	0xb
	.long	0x1a9bf
	.uleb128 0x5
	.byte	0x25
	.byte	0x34
	.byte	0xb
	.long	0x1aa92
	.uleb128 0x5
	.byte	0x25
	.byte	0x35
	.byte	0xb
	.long	0x1aabb
	.uleb128 0x5
	.byte	0x25
	.byte	0x36
	.byte	0xb
	.long	0x1aae6
	.uleb128 0x5
	.byte	0x25
	.byte	0x37
	.byte	0xb
	.long	0x1ab11
	.uleb128 0x5
	.byte	0x25
	.byte	0x39
	.byte	0xb
	.long	0x1a9e0
	.uleb128 0x5
	.byte	0x25
	.byte	0x3a
	.byte	0xb
	.long	0x1aa0b
	.uleb128 0x5
	.byte	0x25
	.byte	0x3b
	.byte	0xb
	.long	0x1aa38
	.uleb128 0x5
	.byte	0x25
	.byte	0x3c
	.byte	0xb
	.long	0x1aa65
	.uleb128 0x5
	.byte	0x25
	.byte	0x3e
	.byte	0xb
	.long	0x1ab3c
	.uleb128 0x5
	.byte	0x25
	.byte	0x3f
	.byte	0xb
	.long	0x126
	.uleb128 0x5
	.byte	0x25
	.byte	0x41
	.byte	0xb
	.long	0x1a963
	.uleb128 0x5
	.byte	0x25
	.byte	0x42
	.byte	0xb
	.long	0x1a983
	.uleb128 0x5
	.byte	0x25
	.byte	0x43
	.byte	0xb
	.long	0x1a9a9
	.uleb128 0x5
	.byte	0x25
	.byte	0x44
	.byte	0xb
	.long	0x1a9cf
	.uleb128 0x5
	.byte	0x25
	.byte	0x46
	.byte	0xb
	.long	0x1aaa6
	.uleb128 0x5
	.byte	0x25
	.byte	0x47
	.byte	0xb
	.long	0x1aad0
	.uleb128 0x5
	.byte	0x25
	.byte	0x48
	.byte	0xb
	.long	0x1aafb
	.uleb128 0x5
	.byte	0x25
	.byte	0x49
	.byte	0xb
	.long	0x1ab26
	.uleb128 0x5
	.byte	0x25
	.byte	0x4b
	.byte	0xb
	.long	0x1a9f5
	.uleb128 0x5
	.byte	0x25
	.byte	0x4c
	.byte	0xb
	.long	0x1aa21
	.uleb128 0x5
	.byte	0x25
	.byte	0x4d
	.byte	0xb
	.long	0x1aa4e
	.uleb128 0x5
	.byte	0x25
	.byte	0x4e
	.byte	0xb
	.long	0x1aa7b
	.uleb128 0x5
	.byte	0x25
	.byte	0x50
	.byte	0xb
	.long	0x1ab52
	.uleb128 0x5
	.byte	0x25
	.byte	0x51
	.byte	0xb
	.long	0x137
	.uleb128 0x43
	.byte	0x3
	.word	0x429
	.byte	0xb
	.long	0x1ab82
	.uleb128 0x43
	.byte	0x3
	.word	0x42a
	.byte	0xb
	.long	0x1ab71
	.uleb128 0x1b
	.ascii "__conditional<false>\0"
	.byte	0x1
	.byte	0x26
	.byte	0x6f
	.byte	0xc
	.long	0xc2c
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x72
	.byte	0x8
	.long	0x1abc6
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x72
	.byte	0x8
	.long	0x1f626
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x72
	.byte	0x8
	.long	0x1abc6
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x72
	.byte	0x8
	.long	0x1f626
	.byte	0
	.uleb128 0x1b
	.ascii "integral_constant<bool, false>\0"
	.byte	0x1
	.byte	0x26
	.byte	0x3e
	.byte	0xc
	.long	0xd28
	.uleb128 0x19
	.secrel32	.LASF3
	.byte	0x26
	.byte	0x41
	.byte	0x2d
	.long	0x1ab64
	.uleb128 0x35
	.ascii "operator std::integral_constant<bool, false>::value_type\0"
	.byte	0x26
	.byte	0x43
	.byte	0x11
	.ascii "_ZNKSt17integral_constantIbLb0EEcvbEv\0"
	.long	0xc54
	.long	0xccf
	.long	0xcd5
	.uleb128 0x2
	.long	0x1ab94
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF4
	.byte	0x26
	.byte	0x48
	.byte	0x1c
	.ascii "_ZNKSt17integral_constantIbLb0EEclEv\0"
	.long	0xc54
	.long	0xd0e
	.long	0xd14
	.uleb128 0x2
	.long	0x1ab94
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1ab64
	.uleb128 0x1a
	.ascii "__v\0"
	.long	0x1ab64
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0xc2c
	.uleb128 0x1b
	.ascii "integral_constant<bool, true>\0"
	.byte	0x1
	.byte	0x26
	.byte	0x3e
	.byte	0xc
	.long	0xe27
	.uleb128 0x19
	.secrel32	.LASF3
	.byte	0x26
	.byte	0x41
	.byte	0x2d
	.long	0x1ab64
	.uleb128 0x35
	.ascii "operator std::integral_constant<bool, true>::value_type\0"
	.byte	0x26
	.byte	0x43
	.byte	0x11
	.ascii "_ZNKSt17integral_constantIbLb1EEcvbEv\0"
	.long	0xd54
	.long	0xdce
	.long	0xdd4
	.uleb128 0x2
	.long	0x1ab99
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF4
	.byte	0x26
	.byte	0x48
	.byte	0x1c
	.ascii "_ZNKSt17integral_constantIbLb1EEclEv\0"
	.long	0xd54
	.long	0xe0d
	.long	0xe13
	.uleb128 0x2
	.long	0x1ab99
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1ab64
	.uleb128 0x1a
	.ascii "__v\0"
	.long	0x1ab64
	.byte	0x1
	.byte	0
	.uleb128 0x4
	.long	0xd2d
	.uleb128 0x13
	.ascii "false_type\0"
	.byte	0x26
	.byte	0x55
	.byte	0x9
	.long	0xc2c
	.uleb128 0x22
	.ascii "size_t\0"
	.byte	0x1
	.word	0x12a
	.byte	0x1a
	.long	0xf1
	.uleb128 0x4
	.long	0xe3f
	.uleb128 0xca
	.ascii "__invoke_other\0"
	.word	0x96d
	.uleb128 0x8c
	.ascii "__swappable_details\0"
	.byte	0x26
	.word	0xa9f
	.byte	0xd
	.uleb128 0x8c
	.ascii "__swappable_with_details\0"
	.byte	0x26
	.word	0xaf5
	.byte	0xd
	.uleb128 0xca
	.ascii "__nonesuchbase\0"
	.word	0xbc0
	.uleb128 0x54
	.secrel32	.LASF5
	.byte	0x1
	.byte	0x26
	.word	0xbc1
	.byte	0xa
	.long	0xf6b
	.uleb128 0x4b
	.long	0xea0
	.byte	0x3
	.uleb128 0xfc
	.ascii "~__nonesuch\0"
	.byte	0x26
	.word	0xbc2
	.byte	0x5
	.ascii "_ZNSt10__nonesuchD4Ev\0"
	.long	0xef7
	.long	0xf02
	.uleb128 0x2
	.long	0x1abc1
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x8d
	.secrel32	.LASF5
	.byte	0x26
	.word	0xbc3
	.byte	0x5
	.ascii "_ZNSt10__nonesuchC4ERKS_\0"
	.long	0xf2d
	.long	0xf38
	.uleb128 0x2
	.long	0x1abc1
	.uleb128 0x1
	.long	0x1abc6
	.byte	0
	.uleb128 0xfd
	.secrel32	.LASF6
	.byte	0x26
	.word	0xbc4
	.byte	0xa
	.ascii "_ZNSt10__nonesuchaSERKS_\0"
	.long	0xf5f
	.uleb128 0x2
	.long	0x1abc1
	.uleb128 0x1
	.long	0x1abc6
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0xeb3
	.uleb128 0x78
	.ascii "ranges\0"
	.byte	0x27
	.byte	0xa3
	.byte	0xd
	.long	0xfdd
	.uleb128 0x79
	.ascii "__cust_swap\0"
	.byte	0x27
	.byte	0xa5
	.byte	0xf
	.uleb128 0xcb
	.ascii "__cust\0"
	.byte	0x27
	.byte	0xe1
	.byte	0x16
	.uleb128 0x79
	.ascii "__cust_imove\0"
	.byte	0x28
	.byte	0x50
	.byte	0xf
	.uleb128 0x8c
	.ascii "__cust_iswap\0"
	.byte	0x28
	.word	0x320
	.byte	0xd
	.uleb128 0x8c
	.ascii "__cust_access\0"
	.byte	0x28
	.word	0x3a3
	.byte	0x15
	.uleb128 0xfe
	.secrel32	.LASF7
	.byte	0x34
	.byte	0x40
	.byte	0xd
	.byte	0
	.uleb128 0x78
	.ascii "__cmp_cat\0"
	.byte	0x4
	.byte	0x31
	.byte	0xd
	.long	0x1093
	.uleb128 0xa9
	.ascii "_Ord\0"
	.byte	0x1
	.long	0x1021
	.byte	0x4
	.byte	0x35
	.byte	0x10
	.long	0x1021
	.uleb128 0xb
	.ascii "equivalent\0"
	.byte	0
	.uleb128 0xaa
	.ascii "less\0"
	.uleb128 0xb
	.ascii "greater\0"
	.byte	0x1
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x4
	.byte	0x33
	.byte	0xb
	.long	0x539
	.uleb128 0xa9
	.ascii "_Ncmp\0"
	.byte	0x1
	.long	0x1021
	.byte	0x4
	.byte	0x37
	.byte	0x10
	.long	0x104f
	.uleb128 0xb
	.ascii "_Unordered\0"
	.byte	0x2
	.byte	0
	.uleb128 0xff
	.secrel32	.LASF15
	.byte	0x1
	.byte	0x4
	.byte	0x39
	.byte	0xc
	.uleb128 0xcc
	.secrel32	.LASF15
	.byte	0x4
	.byte	0x3b
	.byte	0x11
	.ascii "_ZNSt9__cmp_cat8__unspecC4EPS0_\0"
	.long	0x1086
	.uleb128 0x2
	.long	0x1abcb
	.uleb128 0x1
	.long	0x1abcb
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x7a
	.secrel32	.LASF9
	.byte	0x1
	.byte	0x4
	.byte	0x3f
	.byte	0x9
	.long	0x113f
	.uleb128 0x2b
	.secrel32	.LASF8
	.byte	0x4
	.byte	0x42
	.byte	0x15
	.long	0x1021
	.byte	0
	.uleb128 0xab
	.secrel32	.LASF9
	.byte	0x4
	.byte	0x45
	.byte	0x5
	.ascii "_ZNSt16partial_orderingC4ENSt9__cmp_cat4_OrdE\0"
	.long	0x10ec
	.long	0x10f7
	.uleb128 0x2
	.long	0x1abd5
	.uleb128 0x1
	.long	0xfef
	.byte	0
	.uleb128 0x100
	.secrel32	.LASF9
	.byte	0x4
	.byte	0x4a
	.byte	0x5
	.ascii "_ZNSt16partial_orderingC4ENSt9__cmp_cat5_NcmpE\0"
	.long	0x1133
	.uleb128 0x2
	.long	0x1abd5
	.uleb128 0x1
	.long	0x102d
	.byte	0
	.byte	0
	.uleb128 0x7a
	.secrel32	.LASF10
	.byte	0x1
	.byte	0x4
	.byte	0xa7
	.byte	0x9
	.long	0x11e6
	.uleb128 0x2b
	.secrel32	.LASF8
	.byte	0x4
	.byte	0xa9
	.byte	0x15
	.long	0x1021
	.byte	0
	.uleb128 0xab
	.secrel32	.LASF10
	.byte	0x4
	.byte	0xac
	.byte	0x5
	.ascii "_ZNSt13weak_orderingC4ENSt9__cmp_cat4_OrdE\0"
	.long	0x1195
	.long	0x11a0
	.uleb128 0x2
	.long	0x1abda
	.uleb128 0x1
	.long	0xfef
	.byte	0
	.uleb128 0xcd
	.secrel32	.LASF11
	.byte	0x4
	.byte	0xb8
	.byte	0xf
	.ascii "_ZNKSt13weak_orderingcvSt16partial_orderingEv\0"
	.long	0x1093
	.long	0x11df
	.uleb128 0x2
	.long	0x1abdf
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x113f
	.uleb128 0xac
	.secrel32	.LASF12
	.byte	0x1
	.byte	0x4
	.word	0x102
	.byte	0x9
	.long	0x12fb
	.uleb128 0x39
	.secrel32	.LASF8
	.byte	0x4
	.word	0x104
	.byte	0x15
	.long	0x1021
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF12
	.byte	0x4
	.word	0x107
	.byte	0x5
	.ascii "_ZNSt15strong_orderingC4ENSt9__cmp_cat4_OrdE\0"
	.long	0x1246
	.long	0x1251
	.uleb128 0x2
	.long	0x1abe4
	.uleb128 0x1
	.long	0xfef
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF11
	.byte	0x4
	.word	0x113
	.byte	0xf
	.ascii "_ZNKSt15strong_orderingcvSt16partial_orderingEv\0"
	.long	0x1093
	.long	0x1296
	.long	0x129c
	.uleb128 0x2
	.long	0x1abe9
	.byte	0
	.uleb128 0x101
	.ascii "operator std::weak_ordering\0"
	.byte	0x4
	.word	0x117
	.byte	0xf
	.ascii "_ZNKSt15strong_orderingcvSt13weak_orderingEv\0"
	.long	0x113f
	.byte	0x1
	.long	0x12f4
	.uleb128 0x2
	.long	0x1abe9
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x11eb
	.uleb128 0x102
	.secrel32	.LASF7
	.byte	0x27
	.byte	0x36
	.byte	0xd
	.long	0x2081
	.uleb128 0xad
	.ascii "__platform_wait_alignment\0"
	.byte	0x44
	.byte	0x1d
	.long	0xe4f
	.byte	0x8
	.uleb128 0xad
	.ascii "__atomic_spin_count_relax\0"
	.byte	0x91
	.byte	0x14
	.long	0x18b
	.byte	0xc
	.uleb128 0xad
	.ascii "__atomic_spin_count\0"
	.byte	0x92
	.byte	0x14
	.long	0x18b
	.byte	0x10
	.uleb128 0x1b
	.ascii "__default_spin_policy\0"
	.byte	0x1
	.byte	0xa
	.byte	0x94
	.byte	0xc
	.long	0x13d2
	.uleb128 0x103
	.secrel32	.LASF4
	.byte	0xa
	.byte	0x97
	.byte	0x7
	.ascii "_ZNKSt8__detail21__default_spin_policyclEv\0"
	.long	0x1ab64
	.long	0x13cb
	.uleb128 0x2
	.long	0x1b755
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x1370
	.uleb128 0x104
	.secrel32	.LASF13
	.byte	0x80
	.byte	0x40
	.byte	0xa
	.byte	0xbc
	.byte	0xc
	.long	0x168f
	.uleb128 0x105
	.ascii "_S_align\0"
	.byte	0xa
	.byte	0xc0
	.byte	0x1d
	.ascii "_ZNSt8__detail18__waiter_pool_base8_S_alignE\0"
	.long	0x18b
	.byte	0x40
	.byte	0x1
	.uleb128 0x80
	.ascii "_M_wait\0"
	.byte	0xa
	.byte	0xc2
	.byte	0x2b
	.long	0x1694
	.byte	0x40
	.byte	0
	.uleb128 0x16
	.ascii "_M_mtx\0"
	.byte	0xa
	.byte	0xc5
	.byte	0xd
	.long	0x3441
	.byte	0x8
	.uleb128 0x80
	.ascii "_M_ver\0"
	.byte	0xa
	.byte	0xc8
	.byte	0x2b
	.long	0x1694
	.byte	0x40
	.byte	0x40
	.uleb128 0x16
	.ascii "_M_cv\0"
	.byte	0xa
	.byte	0xcb
	.byte	0x11
	.long	0x35e4
	.byte	0x48
	.uleb128 0x44
	.secrel32	.LASF13
	.byte	0xa
	.byte	0xcd
	.byte	0x7
	.ascii "_ZNSt8__detail18__waiter_pool_baseC4Ev\0"
	.long	0x14a2
	.long	0x14a8
	.uleb128 0x2
	.long	0x1b75f
	.byte	0
	.uleb128 0x62
	.ascii "_M_enter_wait\0"
	.byte	0xa
	.byte	0xd0
	.byte	0x7
	.ascii "_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv\0"
	.long	0x14f6
	.long	0x14fc
	.uleb128 0x2
	.long	0x1b75f
	.byte	0
	.uleb128 0x62
	.ascii "_M_leave_wait\0"
	.byte	0xa
	.byte	0xd4
	.byte	0x7
	.ascii "_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv\0"
	.long	0x154a
	.long	0x1550
	.uleb128 0x2
	.long	0x1b75f
	.byte	0
	.uleb128 0x35
	.ascii "_M_waiting\0"
	.byte	0xa
	.byte	0xd8
	.byte	0x7
	.ascii "_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv\0"
	.long	0x1ab64
	.long	0x159d
	.long	0x15a3
	.uleb128 0x2
	.long	0x1b769
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF14
	.byte	0xa
	.byte	0xe0
	.byte	0x7
	.ascii "_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb\0"
	.long	0x15e6
	.long	0x15fb
	.uleb128 0x2
	.long	0x1b75f
	.uleb128 0x1
	.long	0x1b773
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x1ab64
	.byte	0
	.uleb128 0x28
	.ascii "_S_for\0"
	.byte	0xa
	.byte	0xf0
	.byte	0x7
	.ascii "_ZNSt8__detail18__waiter_pool_base6_S_forEPKv\0"
	.long	0x1b778
	.long	0x1642
	.uleb128 0x1
	.long	0x519
	.byte	0
	.uleb128 0xae
	.ascii "~__waiter_pool_base\0"
	.ascii "_ZNSt8__detail18__waiter_pool_baseD4Ev\0"
	.long	0x1683
	.uleb128 0x2
	.long	0x1b75f
	.uleb128 0x2
	.long	0x184
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x13d7
	.uleb128 0x13
	.ascii "__platform_wait_t\0"
	.byte	0xa
	.byte	0x43
	.byte	0xb
	.long	0x1a9cf
	.uleb128 0x4
	.long	0x1694
	.uleb128 0xaf
	.ascii "__waiter_pool\0"
	.byte	0x80
	.byte	0x40
	.byte	0xa
	.byte	0xf9
	.byte	0xc
	.long	0x1725
	.uleb128 0x4c
	.long	0x13d7
	.uleb128 0x106
	.ascii "_M_do_wait\0"
	.byte	0xa
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy\0"
	.long	0x1714
	.uleb128 0x2
	.long	0x1b77d
	.uleb128 0x1
	.long	0x1b773
	.uleb128 0x1
	.long	0x1694
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "__waiter_base<std::__detail::__waiter_pool>\0"
	.byte	0x10
	.byte	0xa
	.word	0x10d
	.byte	0xe
	.long	0x1b97
	.uleb128 0x107
	.ascii "__waiter_type\0"
	.byte	0xa
	.word	0x10f
	.byte	0x8
	.long	0x16b3
	.byte	0x40
	.uleb128 0x1d
	.ascii "_M_w\0"
	.byte	0xa
	.word	0x111
	.byte	0x11
	.long	0x1b7a0
	.byte	0
	.uleb128 0x1d
	.ascii "_M_addr\0"
	.byte	0xa
	.word	0x112
	.byte	0x15
	.long	0x1b7a5
	.byte	0x8
	.uleb128 0x26
	.ascii "_S_for\0"
	.byte	0xa
	.word	0x11f
	.byte	0x2
	.ascii "_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv\0"
	.long	0x1b7a0
	.long	0x17ed
	.uleb128 0x1
	.long	0x519
	.byte	0
	.uleb128 0x63
	.ascii "_M_laundered\0"
	.byte	0xa
	.word	0x12d
	.byte	0x2
	.ascii "_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv\0"
	.long	0x1ab64
	.long	0x184f
	.long	0x1855
	.uleb128 0x2
	.long	0x1b7aa
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF14
	.byte	0xa
	.word	0x131
	.byte	0x2
	.ascii "_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb\0"
	.long	0x18a6
	.long	0x18b6
	.uleb128 0x2
	.long	0x1b7b4
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x1ab64
	.byte	0
	.uleb128 0x64
	.ascii "_S_do_spin<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::wait(arrival_token&&) const::<lambda()>, std::__detail::__default_spin_policy>\0"
	.byte	0xa
	.word	0x15c
	.byte	0x4
	.long	0x1ab64
	.long	0x1991
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x2232b
	.uleb128 0x3
	.secrel32	.LASF17
	.long	0x1370
	.uleb128 0x1
	.long	0x1b773
	.uleb128 0x1
	.long	0x2232b
	.uleb128 0x1
	.long	0x2086e
	.uleb128 0x1
	.long	0x1370
	.byte	0
	.uleb128 0x26
	.ascii "_S_wait_addr<std::__barrier_phase_t>\0"
	.byte	0xa
	.word	0x116
	.byte	0x4
	.ascii "_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_\0"
	.long	0x1b7a5
	.long	0x1a39
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0xcf6e
	.uleb128 0x1
	.long	0x1e39a
	.uleb128 0x1
	.long	0x1b7a5
	.byte	0
	.uleb128 0x108
	.ascii "_M_do_spin<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::wait(arrival_token&&) const::<lambda()> >\0"
	.byte	0xa
	.word	0x168
	.byte	0x4
	.long	0x1ab64
	.long	0x1adf
	.long	0x1af4
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x2232b
	.uleb128 0x5e
	.secrel32	.LASF17
	.long	0x1370
	.uleb128 0x2
	.long	0x1b7b4
	.uleb128 0x1
	.long	0x2232b
	.uleb128 0x1
	.long	0x2086e
	.uleb128 0x1
	.long	0x1370
	.byte	0
	.uleb128 0xb0
	.ascii "__waiter_base<std::__barrier_phase_t>\0"
	.byte	0xa
	.word	0x127
	.byte	0xd
	.ascii "_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC4ISt17__barrier_phase_tEEPKT_\0"
	.long	0x1b82
	.long	0x1b8d
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0xcf6e
	.uleb128 0x2
	.long	0x1b7b4
	.uleb128 0x1
	.long	0x1e39a
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x16b3
	.byte	0
	.uleb128 0x4
	.long	0x1725
	.uleb128 0x1f
	.ascii "__waiter<std::integral_constant<bool, true> >\0"
	.byte	0x10
	.byte	0xa
	.word	0x16e
	.byte	0xe
	.long	0x1d56
	.uleb128 0x4c
	.long	0x1725
	.uleb128 0x24
	.secrel32	.LASF18
	.byte	0xa
	.word	0x17a
	.byte	0x2
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED4Ev\0"
	.long	0x1c24
	.long	0x1c2f
	.uleb128 0x2
	.long	0x1b7be
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0xce
	.ascii "_M_do_wait<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::wait(arrival_token&&) const::<lambda()> >\0"
	.byte	0xa
	.word	0x190
	.byte	0x4
	.long	0x1cc8
	.long	0x1cd3
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x2232b
	.uleb128 0x2
	.long	0x1b7be
	.uleb128 0x1
	.long	0x2232b
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF19
	.byte	0xa
	.word	0x173
	.byte	0xd
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC4ISt17__barrier_phase_tEEPKT_\0"
	.long	0x1d41
	.long	0x1d4c
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x2
	.long	0x1b7be
	.uleb128 0x1
	.long	0x1e39a
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF20
	.long	0xd2d
	.byte	0
	.uleb128 0x1f
	.ascii "__waiter<std::integral_constant<bool, false> >\0"
	.byte	0x10
	.byte	0xa
	.word	0x16e
	.byte	0xe
	.long	0x1e6d
	.uleb128 0x4c
	.long	0x1725
	.uleb128 0x24
	.secrel32	.LASF18
	.byte	0xa
	.word	0x17a
	.byte	0x2
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED4Ev\0"
	.long	0x1ddf
	.long	0x1dea
	.uleb128 0x2
	.long	0x1b7c8
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF19
	.byte	0xa
	.word	0x173
	.byte	0xd
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC4ISt17__barrier_phase_tEEPKT_\0"
	.long	0x1e58
	.long	0x1e63
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x2
	.long	0x1b7c8
	.uleb128 0x1
	.long	0x1e39a
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF20
	.long	0xc2c
	.byte	0
	.uleb128 0x1f
	.ascii "_MakeUniq<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>\0"
	.byte	0x1
	.byte	0x11
	.word	0x40e
	.byte	0xc
	.long	0x1ef7
	.uleb128 0x22
	.ascii "__array\0"
	.byte	0x11
	.word	0x40f
	.byte	0x21
	.long	0x13f93
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f5c5
	.byte	0
	.uleb128 0xb1
	.ascii "__atomic_spin<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::wait(arrival_token&&) const::<lambda()>, std::__detail::__default_spin_policy>\0"
	.byte	0xa
	.byte	0x9e
	.byte	0x7
	.long	0x1ab64
	.long	0x1fd0
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x2232b
	.uleb128 0x3
	.secrel32	.LASF17
	.long	0x1370
	.uleb128 0x1
	.long	0x1fc5
	.uleb128 0x7
	.long	0x2232b
	.uleb128 0x1
	.long	0x1370
	.byte	0
	.uleb128 0x22
	.ascii "__bare_wait\0"
	.byte	0xa
	.word	0x19e
	.byte	0xb
	.long	0x1d56
	.uleb128 0x22
	.ascii "__enters_wait\0"
	.byte	0xa
	.word	0x19d
	.byte	0xb
	.long	0x1b9c
	.uleb128 0x22
	.ascii "__unique_ptr_array_t\0"
	.byte	0x11
	.word	0x418
	.byte	0xb
	.long	0x1edc
	.uleb128 0xcf
	.ascii "__thread_relax\0"
	.byte	0x88
	.ascii "_ZNSt8__detail14__thread_relaxEv\0"
	.uleb128 0xcf
	.ascii "__thread_yield\0"
	.byte	0x80
	.ascii "_ZNSt8__detail14__thread_yieldEv\0"
	.byte	0
	.uleb128 0x8c
	.ascii "__cmp_cust\0"
	.byte	0x4
	.word	0x23b
	.byte	0xd
	.uleb128 0xb2
	.ascii "__cmp_alg\0"
	.byte	0x4
	.word	0x497
	.byte	0x14
	.uleb128 0xd0
	.ascii "align_val_t\0"
	.byte	0x8
	.long	0xf1
	.byte	0x5
	.byte	0x59
	.uleb128 0x79
	.ascii "__debug\0"
	.byte	0x29
	.byte	0x32
	.byte	0xd
	.uleb128 0x95
	.ascii "float_round_style\0"
	.byte	0x5
	.long	0x184
	.byte	0x6
	.byte	0xa7
	.long	0x2154
	.uleb128 0xaa
	.ascii "round_indeterminate\0"
	.uleb128 0xb
	.ascii "round_toward_zero\0"
	.byte	0
	.uleb128 0xb
	.ascii "round_to_nearest\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "round_toward_infinity\0"
	.byte	0x2
	.uleb128 0xb
	.ascii "round_toward_neg_infinity\0"
	.byte	0x3
	.byte	0
	.uleb128 0x4
	.long	0x20c3
	.uleb128 0x95
	.ascii "float_denorm_style\0"
	.byte	0x5
	.long	0x184
	.byte	0x6
	.byte	0xb6
	.long	0x21b2
	.uleb128 0xaa
	.ascii "denorm_indeterminate\0"
	.uleb128 0xb
	.ascii "denorm_absent\0"
	.byte	0
	.uleb128 0xb
	.ascii "denorm_present\0"
	.byte	0x1
	.byte	0
	.uleb128 0x4
	.long	0x2159
	.uleb128 0x1f
	.ascii "numeric_limits<float>\0"
	.byte	0x1
	.byte	0x6
	.word	0x686
	.byte	0xc
	.long	0x2932
	.uleb128 0x2e
	.ascii "is_specialized\0"
	.byte	0x6
	.word	0x688
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE14is_specializedE\0"
	.long	0x1ab6c
	.byte	0x1
	.uleb128 0x30
	.ascii "min\0"
	.byte	0x6
	.word	0x68b
	.byte	0x7
	.ascii "_ZNSt14numeric_limitsIfE3minEv\0"
	.long	0x4ec
	.uleb128 0x30
	.ascii "max\0"
	.byte	0x6
	.word	0x68e
	.byte	0x7
	.ascii "_ZNSt14numeric_limitsIfE3maxEv\0"
	.long	0x4ec
	.uleb128 0x30
	.ascii "lowest\0"
	.byte	0x6
	.word	0x692
	.byte	0x7
	.ascii "_ZNSt14numeric_limitsIfE6lowestEv\0"
	.long	0x4ec
	.uleb128 0x2e
	.ascii "digits\0"
	.byte	0x6
	.word	0x695
	.byte	0x29
	.ascii "_ZNSt14numeric_limitsIfE6digitsE\0"
	.long	0x18b
	.byte	0x18
	.uleb128 0x2e
	.ascii "digits10\0"
	.byte	0x6
	.word	0x696
	.byte	0x29
	.ascii "_ZNSt14numeric_limitsIfE8digits10E\0"
	.long	0x18b
	.byte	0x6
	.uleb128 0x2e
	.ascii "max_digits10\0"
	.byte	0x6
	.word	0x698
	.byte	0x1c
	.ascii "_ZNSt14numeric_limitsIfE12max_digits10E\0"
	.long	0x18b
	.byte	0x9
	.uleb128 0x2e
	.ascii "is_signed\0"
	.byte	0x6
	.word	0x69b
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE9is_signedE\0"
	.long	0x1ab6c
	.byte	0x1
	.uleb128 0x2e
	.ascii "is_integer\0"
	.byte	0x6
	.word	0x69c
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE10is_integerE\0"
	.long	0x1ab6c
	.byte	0
	.uleb128 0x2e
	.ascii "is_exact\0"
	.byte	0x6
	.word	0x69d
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE8is_exactE\0"
	.long	0x1ab6c
	.byte	0
	.uleb128 0x2e
	.ascii "radix\0"
	.byte	0x6
	.word	0x69e
	.byte	0x29
	.ascii "_ZNSt14numeric_limitsIfE5radixE\0"
	.long	0x18b
	.byte	0x2
	.uleb128 0x30
	.ascii "epsilon\0"
	.byte	0x6
	.word	0x6a1
	.byte	0x7
	.ascii "_ZNSt14numeric_limitsIfE7epsilonEv\0"
	.long	0x4ec
	.uleb128 0x30
	.ascii "round_error\0"
	.byte	0x6
	.word	0x6a4
	.byte	0x7
	.ascii "_ZNSt14numeric_limitsIfE11round_errorEv\0"
	.long	0x4ec
	.uleb128 0xd1
	.ascii "min_exponent\0"
	.word	0x6a6
	.ascii "_ZNSt14numeric_limitsIfE12min_exponentE\0"
	.long	0x18b
	.sleb128 -125
	.uleb128 0xd1
	.ascii "min_exponent10\0"
	.word	0x6a7
	.ascii "_ZNSt14numeric_limitsIfE14min_exponent10E\0"
	.long	0x18b
	.sleb128 -37
	.uleb128 0x2e
	.ascii "max_exponent\0"
	.byte	0x6
	.word	0x6a8
	.byte	0x29
	.ascii "_ZNSt14numeric_limitsIfE12max_exponentE\0"
	.long	0x18b
	.byte	0x80
	.uleb128 0x2e
	.ascii "max_exponent10\0"
	.byte	0x6
	.word	0x6a9
	.byte	0x29
	.ascii "_ZNSt14numeric_limitsIfE14max_exponent10E\0"
	.long	0x18b
	.byte	0x26
	.uleb128 0x2e
	.ascii "has_infinity\0"
	.byte	0x6
	.word	0x6ab
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE12has_infinityE\0"
	.long	0x1ab6c
	.byte	0x1
	.uleb128 0x2e
	.ascii "has_quiet_NaN\0"
	.byte	0x6
	.word	0x6ac
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE13has_quiet_NaNE\0"
	.long	0x1ab6c
	.byte	0x1
	.uleb128 0x2e
	.ascii "has_signaling_NaN\0"
	.byte	0x6
	.word	0x6ad
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE17has_signaling_NaNE\0"
	.long	0x1ab6c
	.byte	0x1
	.uleb128 0x2e
	.ascii "has_denorm\0"
	.byte	0x6
	.word	0x6ae
	.byte	0x38
	.ascii "_ZNSt14numeric_limitsIfE10has_denormE\0"
	.long	0x21b2
	.byte	0x1
	.uleb128 0x2e
	.ascii "has_denorm_loss\0"
	.byte	0x6
	.word	0x6b0
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE15has_denorm_lossE\0"
	.long	0x1ab6c
	.byte	0
	.uleb128 0x30
	.ascii "infinity\0"
	.byte	0x6
	.word	0x6b4
	.byte	0x7
	.ascii "_ZNSt14numeric_limitsIfE8infinityEv\0"
	.long	0x4ec
	.uleb128 0x30
	.ascii "quiet_NaN\0"
	.byte	0x6
	.word	0x6b7
	.byte	0x7
	.ascii "_ZNSt14numeric_limitsIfE9quiet_NaNEv\0"
	.long	0x4ec
	.uleb128 0x30
	.ascii "signaling_NaN\0"
	.byte	0x6
	.word	0x6ba
	.byte	0x7
	.ascii "_ZNSt14numeric_limitsIfE13signaling_NaNEv\0"
	.long	0x4ec
	.uleb128 0x30
	.ascii "denorm_min\0"
	.byte	0x6
	.word	0x6bd
	.byte	0x7
	.ascii "_ZNSt14numeric_limitsIfE10denorm_minEv\0"
	.long	0x4ec
	.uleb128 0x2e
	.ascii "is_iec559\0"
	.byte	0x6
	.word	0x6bf
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE9is_iec559E\0"
	.long	0x1ab6c
	.byte	0x1
	.uleb128 0x2e
	.ascii "is_bounded\0"
	.byte	0x6
	.word	0x6c1
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE10is_boundedE\0"
	.long	0x1ab6c
	.byte	0x1
	.uleb128 0x2e
	.ascii "is_modulo\0"
	.byte	0x6
	.word	0x6c2
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE9is_moduloE\0"
	.long	0x1ab6c
	.byte	0
	.uleb128 0x2e
	.ascii "traps\0"
	.byte	0x6
	.word	0x6c4
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE5trapsE\0"
	.long	0x1ab6c
	.byte	0
	.uleb128 0x2e
	.ascii "tinyness_before\0"
	.byte	0x6
	.word	0x6c5
	.byte	0x2a
	.ascii "_ZNSt14numeric_limitsIfE15tinyness_beforeE\0"
	.long	0x1ab6c
	.byte	0
	.uleb128 0x2e
	.ascii "round_style\0"
	.byte	0x6
	.word	0x6c7
	.byte	0x37
	.ascii "_ZNSt14numeric_limitsIfE11round_styleE\0"
	.long	0x2154
	.byte	0x1
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x4ec
	.byte	0
	.uleb128 0x22
	.ascii "ptrdiff_t\0"
	.byte	0x1
	.word	0x12b
	.byte	0x1c
	.long	0x110
	.uleb128 0x13
	.ascii "true_type\0"
	.byte	0x26
	.byte	0x52
	.byte	0x9
	.long	0xd2d
	.uleb128 0x5f
	.secrel32	.LASF21
	.byte	0x1
	.byte	0x2a
	.byte	0x33
	.byte	0xa
	.long	0x2993
	.uleb128 0xd2
	.secrel32	.LASF21
	.byte	0x2a
	.byte	0x33
	.byte	0x25
	.ascii "_ZNSt15allocator_arg_tC4Ev\0"
	.long	0x298c
	.uleb128 0x2
	.long	0x1ac2d
	.byte	0
	.byte	0
	.uleb128 0x109
	.ascii "__uses_alloc_base\0"
	.byte	0x1
	.byte	0x2a
	.byte	0x48
	.byte	0xa
	.uleb128 0x1b
	.ascii "__uses_alloc0\0"
	.byte	0x1
	.byte	0x2a
	.byte	0x4a
	.byte	0xa
	.long	0x2a1f
	.uleb128 0x1b
	.ascii "_Sink\0"
	.byte	0x1
	.byte	0x2a
	.byte	0x4c
	.byte	0xc
	.long	0x2a0b
	.uleb128 0xcc
	.secrel32	.LASF6
	.byte	0x2a
	.byte	0x4c
	.byte	0x2e
	.ascii "_ZNSt13__uses_alloc05_SinkaSEPKv\0"
	.long	0x29ff
	.uleb128 0x2
	.long	0x1ac32
	.uleb128 0x1
	.long	0x519
	.byte	0
	.byte	0
	.uleb128 0x4c
	.long	0x2993
	.uleb128 0x16
	.ascii "_M_a\0"
	.byte	0x2a
	.byte	0x4c
	.byte	0x4b
	.long	0x29c2
	.byte	0
	.byte	0
	.uleb128 0x1b
	.ascii "_Hash_impl\0"
	.byte	0x1
	.byte	0x7
	.byte	0xc9
	.byte	0xa
	.long	0x2ac7
	.uleb128 0x28
	.ascii "hash\0"
	.byte	0x7
	.byte	0xcc
	.byte	0x5
	.ascii "_ZNSt10_Hash_impl4hashEPKvyy\0"
	.long	0xe3f
	.long	0x2a71
	.uleb128 0x1
	.long	0x519
	.uleb128 0x1
	.long	0xe3f
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0xd3
	.ascii "hash<long long unsigned int>\0"
	.byte	0x7
	.byte	0xd2
	.byte	0x7
	.ascii "_ZNSt10_Hash_impl4hashIyEEyRKT_\0"
	.long	0xe3f
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xf1
	.uleb128 0x1
	.long	0x25d8f
	.byte	0
	.byte	0
	.uleb128 0x22
	.ascii "nullptr_t\0"
	.byte	0x1
	.word	0x12e
	.byte	0x1d
	.long	0x1ac37
	.uleb128 0x5
	.byte	0x2b
	.byte	0x40
	.byte	0xb
	.long	0x1acfe
	.uleb128 0x5
	.byte	0x2b
	.byte	0x8d
	.byte	0xb
	.long	0x14e
	.uleb128 0x5
	.byte	0x2b
	.byte	0x8f
	.byte	0xb
	.long	0x1ad16
	.uleb128 0x5
	.byte	0x2b
	.byte	0x90
	.byte	0xb
	.long	0x1ad2f
	.uleb128 0x5
	.byte	0x2b
	.byte	0x91
	.byte	0xb
	.long	0x1ad49
	.uleb128 0x5
	.byte	0x2b
	.byte	0x92
	.byte	0xb
	.long	0x1ad6d
	.uleb128 0x5
	.byte	0x2b
	.byte	0x93
	.byte	0xb
	.long	0x1ad8c
	.uleb128 0x5
	.byte	0x2b
	.byte	0x94
	.byte	0xb
	.long	0x1adab
	.uleb128 0x5
	.byte	0x2b
	.byte	0x95
	.byte	0xb
	.long	0x1adc9
	.uleb128 0x5
	.byte	0x2b
	.byte	0x96
	.byte	0xb
	.long	0x1adeb
	.uleb128 0x5
	.byte	0x2b
	.byte	0x97
	.byte	0xb
	.long	0x1ae0c
	.uleb128 0x5
	.byte	0x2b
	.byte	0x98
	.byte	0xb
	.long	0x1ae25
	.uleb128 0x5
	.byte	0x2b
	.byte	0x99
	.byte	0xb
	.long	0x1ae38
	.uleb128 0x5
	.byte	0x2b
	.byte	0x9a
	.byte	0xb
	.long	0x1ae61
	.uleb128 0x5
	.byte	0x2b
	.byte	0x9b
	.byte	0xb
	.long	0x1ae8b
	.uleb128 0x5
	.byte	0x2b
	.byte	0x9c
	.byte	0xb
	.long	0x1aeab
	.uleb128 0x5
	.byte	0x2b
	.byte	0x9d
	.byte	0xb
	.long	0x1aedc
	.uleb128 0x5
	.byte	0x2b
	.byte	0x9e
	.byte	0xb
	.long	0x1aefa
	.uleb128 0x5
	.byte	0x2b
	.byte	0xa0
	.byte	0xb
	.long	0x1af16
	.uleb128 0x5
	.byte	0x2b
	.byte	0xa0
	.byte	0xb
	.long	0x1af32
	.uleb128 0x5
	.byte	0x2b
	.byte	0xa2
	.byte	0xb
	.long	0x1af53
	.uleb128 0x5
	.byte	0x2b
	.byte	0xa3
	.byte	0xb
	.long	0x1af74
	.uleb128 0x5
	.byte	0x2b
	.byte	0xa4
	.byte	0xb
	.long	0x1af94
	.uleb128 0x5
	.byte	0x2b
	.byte	0xa6
	.byte	0xb
	.long	0x1afbb
	.uleb128 0x5
	.byte	0x2b
	.byte	0xa9
	.byte	0xb
	.long	0x1afe1
	.uleb128 0x5
	.byte	0x2b
	.byte	0xa9
	.byte	0xb
	.long	0x1b001
	.uleb128 0x5
	.byte	0x2b
	.byte	0xac
	.byte	0xb
	.long	0x1b026
	.uleb128 0x5
	.byte	0x2b
	.byte	0xae
	.byte	0xb
	.long	0x1b04c
	.uleb128 0x5
	.byte	0x2b
	.byte	0xb0
	.byte	0xb
	.long	0x1b06d
	.uleb128 0x5
	.byte	0x2b
	.byte	0xb2
	.byte	0xb
	.long	0x1b08d
	.uleb128 0x5
	.byte	0x2b
	.byte	0xb3
	.byte	0xb
	.long	0x1b0b2
	.uleb128 0x5
	.byte	0x2b
	.byte	0xb4
	.byte	0xb
	.long	0x1b0d0
	.uleb128 0x5
	.byte	0x2b
	.byte	0xb5
	.byte	0xb
	.long	0x1b0ee
	.uleb128 0x5
	.byte	0x2b
	.byte	0xb6
	.byte	0xb
	.long	0x1b10d
	.uleb128 0x5
	.byte	0x2b
	.byte	0xb7
	.byte	0xb
	.long	0x1b12b
	.uleb128 0x5
	.byte	0x2b
	.byte	0xb8
	.byte	0xb
	.long	0x1b14a
	.uleb128 0x5
	.byte	0x2b
	.byte	0xb9
	.byte	0xb
	.long	0x1b17a
	.uleb128 0x5
	.byte	0x2b
	.byte	0xba
	.byte	0xb
	.long	0x1b193
	.uleb128 0x5
	.byte	0x2b
	.byte	0xbb
	.byte	0xb
	.long	0x1b1b7
	.uleb128 0x5
	.byte	0x2b
	.byte	0xbc
	.byte	0xb
	.long	0x1b1db
	.uleb128 0x5
	.byte	0x2b
	.byte	0xbd
	.byte	0xb
	.long	0x1b1ff
	.uleb128 0x5
	.byte	0x2b
	.byte	0xbe
	.byte	0xb
	.long	0x1b230
	.uleb128 0x5
	.byte	0x2b
	.byte	0xbf
	.byte	0xb
	.long	0x1b24e
	.uleb128 0x5
	.byte	0x2b
	.byte	0xc1
	.byte	0xb
	.long	0x1b26d
	.uleb128 0x5
	.byte	0x2b
	.byte	0xc3
	.byte	0xb
	.long	0x1b28c
	.uleb128 0x5
	.byte	0x2b
	.byte	0xc4
	.byte	0xb
	.long	0x1b2aa
	.uleb128 0x5
	.byte	0x2b
	.byte	0xc5
	.byte	0xb
	.long	0x1b2ce
	.uleb128 0x5
	.byte	0x2b
	.byte	0xc6
	.byte	0xb
	.long	0x1b2f3
	.uleb128 0x5
	.byte	0x2b
	.byte	0xc7
	.byte	0xb
	.long	0x1b317
	.uleb128 0x5
	.byte	0x2b
	.byte	0xc8
	.byte	0xb
	.long	0x1b330
	.uleb128 0x5
	.byte	0x2b
	.byte	0xc9
	.byte	0xb
	.long	0x1b355
	.uleb128 0x5
	.byte	0x2b
	.byte	0xca
	.byte	0xb
	.long	0x1b37a
	.uleb128 0x5
	.byte	0x2b
	.byte	0xcb
	.byte	0xb
	.long	0x1b3a0
	.uleb128 0x5
	.byte	0x2b
	.byte	0xcc
	.byte	0xb
	.long	0x1b3c5
	.uleb128 0x5
	.byte	0x2b
	.byte	0xcd
	.byte	0xb
	.long	0x1b3e1
	.uleb128 0x5
	.byte	0x2b
	.byte	0xce
	.byte	0xb
	.long	0x1b3fc
	.uleb128 0x5
	.byte	0x2b
	.byte	0xcf
	.byte	0xb
	.long	0x1b41a
	.uleb128 0x5
	.byte	0x2b
	.byte	0xd0
	.byte	0xb
	.long	0x1b439
	.uleb128 0x5
	.byte	0x2b
	.byte	0xd1
	.byte	0xb
	.long	0x1b458
	.uleb128 0x5
	.byte	0x2b
	.byte	0xd2
	.byte	0xb
	.long	0x1b476
	.uleb128 0x43
	.byte	0x2b
	.word	0x10b
	.byte	0x16
	.long	0x1b49b
	.uleb128 0x43
	.byte	0x2b
	.word	0x10c
	.byte	0x16
	.long	0x1b4bb
	.uleb128 0x43
	.byte	0x2b
	.word	0x10d
	.byte	0x16
	.long	0x1b4e0
	.uleb128 0x43
	.byte	0x2b
	.word	0x11b
	.byte	0xe
	.long	0x1b26d
	.uleb128 0x43
	.byte	0x2b
	.word	0x11e
	.byte	0xe
	.long	0x1afbb
	.uleb128 0x43
	.byte	0x2b
	.word	0x121
	.byte	0xe
	.long	0x1b026
	.uleb128 0x43
	.byte	0x2b
	.word	0x124
	.byte	0xe
	.long	0x1b06d
	.uleb128 0x43
	.byte	0x2b
	.word	0x128
	.byte	0xe
	.long	0x1b49b
	.uleb128 0x43
	.byte	0x2b
	.word	0x129
	.byte	0xe
	.long	0x1b4bb
	.uleb128 0x43
	.byte	0x2b
	.word	0x12a
	.byte	0xe
	.long	0x1b4e0
	.uleb128 0x78
	.ascii "__exception_ptr\0"
	.byte	0x2c
	.byte	0x3f
	.byte	0xd
	.long	0x3199
	.uleb128 0x7a
	.secrel32	.LASF22
	.byte	0x8
	.byte	0x2c
	.byte	0x5a
	.byte	0xb
	.long	0x318b
	.uleb128 0x16
	.ascii "_M_exception_object\0"
	.byte	0x2c
	.byte	0x5c
	.byte	0xd
	.long	0x4b0
	.byte	0
	.uleb128 0xab
	.secrel32	.LASF22
	.byte	0x2c
	.byte	0x5e
	.byte	0x10
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EPv\0"
	.long	0x2d92
	.long	0x2d9d
	.uleb128 0x2
	.long	0x1b506
	.uleb128 0x1
	.long	0x4b0
	.byte	0
	.uleb128 0x62
	.ascii "_M_addref\0"
	.byte	0x2c
	.byte	0x60
	.byte	0xc
	.ascii "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv\0"
	.long	0x2de5
	.long	0x2deb
	.uleb128 0x2
	.long	0x1b506
	.byte	0
	.uleb128 0x62
	.ascii "_M_release\0"
	.byte	0x2c
	.byte	0x61
	.byte	0xc
	.ascii "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv\0"
	.long	0x2e36
	.long	0x2e3c
	.uleb128 0x2
	.long	0x1b506
	.byte	0
	.uleb128 0x35
	.ascii "_M_get\0"
	.byte	0x2c
	.byte	0x63
	.byte	0xd
	.ascii "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv\0"
	.long	0x4b0
	.long	0x2e83
	.long	0x2e89
	.uleb128 0x2
	.long	0x1b50b
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF22
	.byte	0x2c
	.byte	0x6b
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4Ev\0"
	.byte	0x1
	.long	0x2ec4
	.long	0x2eca
	.uleb128 0x2
	.long	0x1b506
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF22
	.byte	0x2c
	.byte	0x6d
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4ERKS0_\0"
	.byte	0x1
	.long	0x2f09
	.long	0x2f14
	.uleb128 0x2
	.long	0x1b506
	.uleb128 0x1
	.long	0x1b510
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF22
	.byte	0x2c
	.byte	0x70
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EDn\0"
	.byte	0x1
	.long	0x2f50
	.long	0x2f5b
	.uleb128 0x2
	.long	0x1b506
	.uleb128 0x1
	.long	0x2ac7
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF22
	.byte	0x2c
	.byte	0x74
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EOS0_\0"
	.byte	0x1
	.long	0x2f99
	.long	0x2fa4
	.uleb128 0x2
	.long	0x1b506
	.uleb128 0x1
	.long	0x1b515
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF6
	.byte	0x2c
	.byte	0x81
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptraSERKS0_\0"
	.long	0x1b51a
	.long	0x2fe6
	.long	0x2ff1
	.uleb128 0x2
	.long	0x1b506
	.uleb128 0x1
	.long	0x1b510
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF6
	.byte	0x2c
	.byte	0x85
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptraSEOS0_\0"
	.long	0x1b51a
	.long	0x3032
	.long	0x303d
	.uleb128 0x2
	.long	0x1b506
	.uleb128 0x1
	.long	0x1b515
	.byte	0
	.uleb128 0x65
	.ascii "~exception_ptr\0"
	.byte	0x2c
	.byte	0x8c
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrD4Ev\0"
	.byte	0x1
	.long	0x3083
	.long	0x308e
	.uleb128 0x2
	.long	0x1b506
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF23
	.byte	0x2c
	.byte	0x8f
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptr4swapERS0_\0"
	.byte	0x1
	.long	0x30cf
	.long	0x30da
	.uleb128 0x2
	.long	0x1b506
	.uleb128 0x1
	.long	0x1b51a
	.byte	0
	.uleb128 0x10a
	.secrel32	.LASF25
	.byte	0x2c
	.byte	0x9b
	.byte	0x10
	.ascii "_ZNKSt15__exception_ptr13exception_ptrcvbEv\0"
	.long	0x1ab64
	.byte	0x1
	.long	0x311c
	.long	0x3122
	.uleb128 0x2
	.long	0x1b50b
	.byte	0
	.uleb128 0x10b
	.ascii "__cxa_exception_type\0"
	.byte	0x2c
	.byte	0xb0
	.byte	0x7
	.ascii "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv\0"
	.long	0x1b51f
	.byte	0x1
	.long	0x3184
	.uleb128 0x2
	.long	0x1b50b
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x2d2c
	.uleb128 0x5
	.byte	0x2c
	.byte	0x54
	.byte	0x10
	.long	0x31a1
	.byte	0
	.uleb128 0x5
	.byte	0x2c
	.byte	0x44
	.byte	0x1a
	.long	0x2d2c
	.uleb128 0xd4
	.ascii "rethrow_exception\0"
	.byte	0x2c
	.byte	0x50
	.byte	0x8
	.ascii "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE\0"
	.long	0x31fe
	.uleb128 0x1
	.long	0x2d2c
	.byte	0
	.uleb128 0xb3
	.ascii "type_info\0"
	.uleb128 0x4
	.long	0x31fe
	.uleb128 0x5
	.byte	0x2d
	.byte	0x35
	.byte	0xb
	.long	0x207
	.uleb128 0x5
	.byte	0x2d
	.byte	0x36
	.byte	0xb
	.long	0x1b524
	.uleb128 0x5
	.byte	0x2d
	.byte	0x37
	.byte	0xb
	.long	0x1b545
	.uleb128 0x79
	.ascii "numbers\0"
	.byte	0x2e
	.byte	0x30
	.byte	0xb
	.uleb128 0xb2
	.ascii "__cxx11\0"
	.byte	0x1
	.word	0x14b
	.byte	0x41
	.uleb128 0xcb
	.ascii "_V2\0"
	.byte	0x2f
	.byte	0x50
	.byte	0x14
	.uleb128 0x1b
	.ascii "__conditional<true>\0"
	.byte	0x1
	.byte	0x26
	.byte	0x68
	.byte	0xc
	.long	0x32c8
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x6b
	.byte	0x8
	.long	0x1ee25
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x6b
	.byte	0x8
	.long	0x1ee2a
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x6b
	.byte	0x8
	.long	0x1f379
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x6b
	.byte	0x8
	.long	0x1f37e
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x6b
	.byte	0x8
	.long	0x1f487
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x6b
	.byte	0x8
	.long	0x1f48c
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x6b
	.byte	0x8
	.long	0x1f6da
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x26
	.byte	0x6b
	.byte	0x8
	.long	0x1f6df
	.byte	0
	.uleb128 0x5
	.byte	0x30
	.byte	0x52
	.byte	0xb
	.long	0x1b661
	.uleb128 0x5
	.byte	0x30
	.byte	0x53
	.byte	0xb
	.long	0x173
	.uleb128 0x5
	.byte	0x30
	.byte	0x54
	.byte	0xb
	.long	0x14e
	.uleb128 0x5
	.byte	0x30
	.byte	0x5c
	.byte	0xb
	.long	0x1b673
	.uleb128 0x5
	.byte	0x30
	.byte	0x65
	.byte	0xb
	.long	0x1b693
	.uleb128 0x5
	.byte	0x30
	.byte	0x68
	.byte	0xb
	.long	0x1b6b4
	.uleb128 0x5
	.byte	0x30
	.byte	0x69
	.byte	0xb
	.long	0x1b6ce
	.uleb128 0x5
	.byte	0x31
	.byte	0x62
	.byte	0x14
	.long	0x19b18
	.uleb128 0x5
	.byte	0x31
	.byte	0x63
	.byte	0x14
	.long	0x1b6ec
	.uleb128 0x5
	.byte	0x31
	.byte	0x64
	.byte	0x14
	.long	0x19b32
	.uleb128 0x5
	.byte	0x31
	.byte	0x65
	.byte	0x14
	.long	0x19b3e
	.uleb128 0x5
	.byte	0x31
	.byte	0x66
	.byte	0x14
	.long	0x19b49
	.uleb128 0x7a
	.secrel32	.LASF24
	.byte	0x8
	.byte	0x9
	.byte	0x39
	.byte	0x9
	.long	0x343c
	.uleb128 0xb4
	.ascii "__native_type\0"
	.byte	0x9
	.byte	0x3c
	.byte	0x21
	.long	0x1b615
	.byte	0x2
	.uleb128 0xd5
	.ascii "_M_mutex\0"
	.byte	0x43
	.byte	0x14
	.long	0x3335
	.uleb128 0x3a
	.secrel32	.LASF24
	.byte	0x9
	.byte	0x45
	.byte	0x5
	.ascii "_ZNSt12__mutex_baseC4Ev\0"
	.byte	0x2
	.long	0x3387
	.long	0x338d
	.uleb128 0x2
	.long	0x1b6f6
	.byte	0
	.uleb128 0x65
	.ascii "~__mutex_base\0"
	.byte	0x9
	.byte	0x4b
	.byte	0x5
	.ascii "_ZNSt12__mutex_baseD4Ev\0"
	.byte	0x2
	.long	0x33c0
	.long	0x33cb
	.uleb128 0x2
	.long	0x1b6f6
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x96
	.secrel32	.LASF24
	.byte	0x9
	.byte	0x4e
	.byte	0x5
	.ascii "_ZNSt12__mutex_baseC4ERKS_\0"
	.byte	0x2
	.long	0x33f8
	.long	0x3403
	.uleb128 0x2
	.long	0x1b6f6
	.uleb128 0x1
	.long	0x1b700
	.byte	0
	.uleb128 0x10c
	.secrel32	.LASF6
	.byte	0x9
	.byte	0x4f
	.byte	0x13
	.ascii "_ZNSt12__mutex_baseaSERKS_\0"
	.long	0x1b705
	.byte	0x2
	.long	0x3430
	.uleb128 0x2
	.long	0x1b6f6
	.uleb128 0x1
	.long	0x1b700
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x3328
	.uleb128 0x69
	.ascii "mutex\0"
	.byte	0x8
	.byte	0x9
	.byte	0x53
	.byte	0x9
	.long	0x35df
	.uleb128 0x4c
	.long	0x3328
	.uleb128 0xd6
	.ascii "mutex\0"
	.byte	0x5b
	.ascii "_ZNSt5mutexC4Ev\0"
	.long	0x3476
	.long	0x347c
	.uleb128 0x2
	.long	0x1b70a
	.byte	0
	.uleb128 0xd6
	.ascii "~mutex\0"
	.byte	0x5c
	.ascii "_ZNSt5mutexD4Ev\0"
	.long	0x349e
	.long	0x34a9
	.uleb128 0x2
	.long	0x1b70a
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x10d
	.ascii "mutex\0"
	.byte	0x9
	.byte	0x5e
	.byte	0x5
	.ascii "_ZNSt5mutexC4ERKS_\0"
	.byte	0x1
	.long	0x34d0
	.long	0x34db
	.uleb128 0x2
	.long	0x1b70a
	.uleb128 0x1
	.long	0x1b714
	.byte	0
	.uleb128 0x97
	.secrel32	.LASF6
	.byte	0x9
	.byte	0x5f
	.byte	0xc
	.ascii "_ZNSt5mutexaSERKS_\0"
	.long	0x1b719
	.long	0x3503
	.long	0x350e
	.uleb128 0x2
	.long	0x1b70a
	.uleb128 0x1
	.long	0x1b714
	.byte	0
	.uleb128 0x65
	.ascii "lock\0"
	.byte	0x9
	.byte	0x62
	.byte	0x5
	.ascii "_ZNSt5mutex4lockEv\0"
	.byte	0x1
	.long	0x3533
	.long	0x3539
	.uleb128 0x2
	.long	0x1b70a
	.byte	0
	.uleb128 0xb5
	.ascii "try_lock\0"
	.byte	0x9
	.byte	0x6c
	.ascii "_ZNSt5mutex8try_lockEv\0"
	.long	0x1ab64
	.long	0x3569
	.long	0x356f
	.uleb128 0x2
	.long	0x1b70a
	.byte	0
	.uleb128 0x65
	.ascii "unlock\0"
	.byte	0x9
	.byte	0x73
	.byte	0x5
	.ascii "_ZNSt5mutex6unlockEv\0"
	.byte	0x1
	.long	0x3598
	.long	0x359e
	.uleb128 0x2
	.long	0x1b70a
	.byte	0
	.uleb128 0x7b
	.secrel32	.LASF26
	.byte	0x9
	.byte	0x56
	.byte	0x1f
	.long	0x1b71e
	.uleb128 0xcd
	.secrel32	.LASF27
	.byte	0x9
	.byte	0x7a
	.byte	0x5
	.ascii "_ZNSt5mutex13native_handleEv\0"
	.long	0x359e
	.long	0x35d8
	.uleb128 0x2
	.long	0x1b70a
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x3441
	.uleb128 0x7a
	.secrel32	.LASF28
	.byte	0x8
	.byte	0x9
	.byte	0x7f
	.byte	0x9
	.long	0x3813
	.uleb128 0x3a
	.secrel32	.LASF28
	.byte	0x9
	.byte	0x84
	.byte	0x5
	.ascii "_ZNSt9__condvarC4Ev\0"
	.byte	0x1
	.long	0x3616
	.long	0x361c
	.uleb128 0x2
	.long	0x1b723
	.byte	0
	.uleb128 0x65
	.ascii "~__condvar\0"
	.byte	0x9
	.byte	0x8b
	.byte	0x5
	.ascii "_ZNSt9__condvarD4Ev\0"
	.byte	0x1
	.long	0x3648
	.long	0x3653
	.uleb128 0x2
	.long	0x1b723
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x96
	.secrel32	.LASF28
	.byte	0x9
	.byte	0x91
	.byte	0x5
	.ascii "_ZNSt9__condvarC4ERKS_\0"
	.byte	0x1
	.long	0x367c
	.long	0x3687
	.uleb128 0x2
	.long	0x1b723
	.uleb128 0x1
	.long	0x1b72d
	.byte	0
	.uleb128 0x97
	.secrel32	.LASF6
	.byte	0x9
	.byte	0x92
	.byte	0x10
	.ascii "_ZNSt9__condvaraSERKS_\0"
	.long	0x1b732
	.long	0x36b3
	.long	0x36be
	.uleb128 0x2
	.long	0x1b723
	.uleb128 0x1
	.long	0x1b72d
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF27
	.byte	0x9
	.byte	0x94
	.byte	0x17
	.ascii "_ZNSt9__condvar13native_handleEv\0"
	.long	0x1b737
	.long	0x36f3
	.long	0x36f9
	.uleb128 0x2
	.long	0x1b723
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF29
	.byte	0x9
	.byte	0x98
	.byte	0x5
	.ascii "_ZNSt9__condvar4waitERSt5mutex\0"
	.byte	0x1
	.long	0x3729
	.long	0x3734
	.uleb128 0x2
	.long	0x1b723
	.uleb128 0x1
	.long	0x1b719
	.byte	0
	.uleb128 0x65
	.ascii "wait_until\0"
	.byte	0x9
	.byte	0xa0
	.byte	0x5
	.ascii "_ZNSt9__condvar10wait_untilERSt5mutexR8timespec\0"
	.byte	0x1
	.long	0x377c
	.long	0x378c
	.uleb128 0x2
	.long	0x1b723
	.uleb128 0x1
	.long	0x1b719
	.uleb128 0x1
	.long	0x1b73c
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF30
	.byte	0x9
	.byte	0x81
	.byte	0xb
	.long	0x1b648
	.uleb128 0x3a
	.secrel32	.LASF31
	.byte	0x9
	.byte	0xaf
	.byte	0x5
	.ascii "_ZNSt9__condvar10notify_oneEv\0"
	.byte	0x1
	.long	0x37c7
	.long	0x37cd
	.uleb128 0x2
	.long	0x1b723
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF32
	.byte	0x9
	.byte	0xb6
	.byte	0x5
	.ascii "_ZNSt9__condvar10notify_allEv\0"
	.byte	0x1
	.long	0x37fc
	.long	0x3802
	.uleb128 0x2
	.long	0x1b723
	.byte	0
	.uleb128 0xd5
	.ascii "_M_cond\0"
	.byte	0xbe
	.byte	0x16
	.long	0x1b62f
	.byte	0
	.uleb128 0x4
	.long	0x35e4
	.uleb128 0x5f
	.secrel32	.LASF33
	.byte	0x1
	.byte	0x9
	.byte	0xce
	.byte	0xa
	.long	0x3851
	.uleb128 0xd2
	.secrel32	.LASF33
	.byte	0x9
	.byte	0xce
	.byte	0x22
	.ascii "_ZNSt12adopt_lock_tC4Ev\0"
	.long	0x384a
	.uleb128 0x2
	.long	0x1b741
	.byte	0
	.byte	0
	.uleb128 0x69
	.ascii "lock_guard<std::mutex>\0"
	.byte	0x8
	.byte	0x9
	.byte	0xdf
	.byte	0xb
	.long	0x3a03
	.uleb128 0x10e
	.secrel32	.LASF34
	.byte	0x9
	.byte	0xe4
	.byte	0x10
	.ascii "_ZNSt10lock_guardISt5mutexEC4ERS0_\0"
	.byte	0x1
	.long	0x38a6
	.long	0x38b1
	.uleb128 0x2
	.long	0x1b787
	.uleb128 0x1
	.long	0x1b791
	.byte	0
	.uleb128 0xb4
	.ascii "mutex_type\0"
	.byte	0x9
	.byte	0xe2
	.byte	0x16
	.long	0x3441
	.byte	0x1
	.uleb128 0x3a
	.secrel32	.LASF34
	.byte	0x9
	.byte	0xe7
	.byte	0x7
	.ascii "_ZNSt10lock_guardISt5mutexEC4ERS0_St12adopt_lock_t\0"
	.byte	0x1
	.long	0x390a
	.long	0x391a
	.uleb128 0x2
	.long	0x1b787
	.uleb128 0x1
	.long	0x1b791
	.uleb128 0x1
	.long	0x3818
	.byte	0
	.uleb128 0x65
	.ascii "~lock_guard\0"
	.byte	0x9
	.byte	0xea
	.byte	0x7
	.ascii "_ZNSt10lock_guardISt5mutexED4Ev\0"
	.byte	0x1
	.long	0x3953
	.long	0x395e
	.uleb128 0x2
	.long	0x1b787
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x96
	.secrel32	.LASF34
	.byte	0x9
	.byte	0xed
	.byte	0x7
	.ascii "_ZNSt10lock_guardISt5mutexEC4ERKS1_\0"
	.byte	0x1
	.long	0x3994
	.long	0x399f
	.uleb128 0x2
	.long	0x1b787
	.uleb128 0x1
	.long	0x1b796
	.byte	0
	.uleb128 0x97
	.secrel32	.LASF6
	.byte	0x9
	.byte	0xee
	.byte	0x13
	.ascii "_ZNSt10lock_guardISt5mutexEaSERKS1_\0"
	.long	0x1b79b
	.long	0x39d8
	.long	0x39e3
	.uleb128 0x2
	.long	0x1b787
	.uleb128 0x1
	.long	0x1b796
	.byte	0
	.uleb128 0x16
	.ascii "_M_device\0"
	.byte	0x9
	.byte	0xf1
	.byte	0x14
	.long	0x1b791
	.byte	0
	.uleb128 0xa
	.ascii "_Mutex\0"
	.long	0x3441
	.byte	0
	.uleb128 0x4
	.long	0x3851
	.uleb128 0xa9
	.ascii "memory_order\0"
	.byte	0x4
	.long	0x184
	.byte	0xb
	.byte	0x3d
	.byte	0xe
	.long	0x3a5d
	.uleb128 0xb
	.ascii "relaxed\0"
	.byte	0
	.uleb128 0xb
	.ascii "consume\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "acquire\0"
	.byte	0x2
	.uleb128 0x10f
	.secrel32	.LASF35
	.byte	0x3
	.uleb128 0xb
	.ascii "acq_rel\0"
	.byte	0x4
	.uleb128 0xb
	.ascii "seq_cst\0"
	.byte	0x5
	.byte	0
	.uleb128 0x95
	.ascii "__memory_order_modifier\0"
	.byte	0x7
	.long	0x1e2
	.byte	0xb
	.byte	0x59
	.long	0x3afc
	.uleb128 0x5b
	.ascii "__memory_order_mask\0"
	.word	0xffff
	.uleb128 0xc
	.ascii "__memory_order_modifier_mask\0"
	.long	0xffff0000
	.uleb128 0xc
	.ascii "__memory_order_hle_acquire\0"
	.long	0x10000
	.uleb128 0xc
	.ascii "__memory_order_hle_release\0"
	.long	0x20000
	.byte	0
	.uleb128 0x98
	.ascii "__atomic_base<bool>\0"
	.byte	0x1
	.byte	0x1
	.byte	0xb
	.word	0x144
	.long	0x4c43
	.uleb128 0xb6
	.secrel32	.LASF61
	.ascii "_ZNSt13__atomic_baseIbE12_S_alignmentE\0"
	.long	0x18b
	.byte	0x1
	.uleb128 0x66
	.secrel32	.LASF36
	.byte	0xb
	.word	0x14a
	.byte	0x15
	.long	0x1ab64
	.byte	0x3
	.uleb128 0xb7
	.ascii "_M_i\0"
	.long	0x3b4d
	.byte	0x1
	.uleb128 0x2d
	.secrel32	.LASF37
	.byte	0xb
	.word	0x152
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEC4Ev\0"
	.long	0x3b94
	.long	0x3b9a
	.uleb128 0x2
	.long	0x1bc63
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF38
	.byte	0xb
	.word	0x153
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbED4Ev\0"
	.long	0x3bc7
	.long	0x3bd2
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x8d
	.secrel32	.LASF37
	.byte	0xb
	.word	0x154
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEC4ERKS0_\0"
	.long	0x3c04
	.long	0x3c0f
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x1bc6d
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0xb
	.word	0x155
	.byte	0x16
	.ascii "_ZNSt13__atomic_baseIbEaSERKS0_\0"
	.long	0x1bc72
	.long	0x3c44
	.long	0x3c4f
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x1bc6d
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0xb
	.word	0x156
	.byte	0x16
	.ascii "_ZNVSt13__atomic_baseIbEaSERKS0_\0"
	.long	0x1bc72
	.long	0x3c85
	.long	0x3c90
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x1bc6d
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF37
	.byte	0xb
	.word	0x159
	.byte	0x11
	.ascii "_ZNSt13__atomic_baseIbEC4Eb\0"
	.long	0x3cbd
	.long	0x3cc8
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF39
	.byte	0xb
	.word	0x15b
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIbEcvbEv\0"
	.long	0x3b4d
	.long	0x3cfb
	.long	0x3d01
	.uleb128 0x2
	.long	0x1bc7c
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF39
	.byte	0xb
	.word	0x15e
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIbEcvbEv\0"
	.long	0x3b4d
	.long	0x3d35
	.long	0x3d3b
	.uleb128 0x2
	.long	0x1bc86
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF6
	.byte	0xb
	.word	0x162
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEaSEb\0"
	.long	0x3b4d
	.long	0x3d6c
	.long	0x3d77
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF6
	.byte	0xb
	.word	0x169
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEaSEb\0"
	.long	0x3b4d
	.long	0x3da9
	.long	0x3db4
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x170
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEppEi\0"
	.long	0x3b4d
	.long	0x3de5
	.long	0x3df0
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x174
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEppEi\0"
	.long	0x3b4d
	.long	0x3e22
	.long	0x3e2d
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x178
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEmmEi\0"
	.long	0x3b4d
	.long	0x3e5e
	.long	0x3e69
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x17c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEmmEi\0"
	.long	0x3b4d
	.long	0x3e9b
	.long	0x3ea6
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x180
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEppEv\0"
	.long	0x3b4d
	.long	0x3ed7
	.long	0x3edd
	.uleb128 0x2
	.long	0x1bc63
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x184
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEppEv\0"
	.long	0x3b4d
	.long	0x3f0f
	.long	0x3f15
	.uleb128 0x2
	.long	0x1bc77
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x188
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEmmEv\0"
	.long	0x3b4d
	.long	0x3f46
	.long	0x3f4c
	.uleb128 0x2
	.long	0x1bc63
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x18c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEmmEv\0"
	.long	0x3b4d
	.long	0x3f7e
	.long	0x3f84
	.uleb128 0x2
	.long	0x1bc77
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF42
	.byte	0xb
	.word	0x190
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEpLEb\0"
	.long	0x3b4d
	.long	0x3fb5
	.long	0x3fc0
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF42
	.byte	0xb
	.word	0x194
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEpLEb\0"
	.long	0x3b4d
	.long	0x3ff2
	.long	0x3ffd
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF43
	.byte	0xb
	.word	0x198
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEmIEb\0"
	.long	0x3b4d
	.long	0x402e
	.long	0x4039
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF43
	.byte	0xb
	.word	0x19c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEmIEb\0"
	.long	0x3b4d
	.long	0x406b
	.long	0x4076
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF44
	.byte	0xb
	.word	0x1a0
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEaNEb\0"
	.long	0x3b4d
	.long	0x40a7
	.long	0x40b2
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF44
	.byte	0xb
	.word	0x1a4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEaNEb\0"
	.long	0x3b4d
	.long	0x40e4
	.long	0x40ef
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF45
	.byte	0xb
	.word	0x1a8
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEoREb\0"
	.long	0x3b4d
	.long	0x4120
	.long	0x412b
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF45
	.byte	0xb
	.word	0x1ac
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEoREb\0"
	.long	0x3b4d
	.long	0x415d
	.long	0x4168
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF46
	.byte	0xb
	.word	0x1b0
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEeOEb\0"
	.long	0x3b4d
	.long	0x4199
	.long	0x41a4
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF46
	.byte	0xb
	.word	0x1b4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEeOEb\0"
	.long	0x3b4d
	.long	0x41d6
	.long	0x41e1
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF47
	.byte	0xb
	.word	0x1b8
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIbE12is_lock_freeEv\0"
	.long	0x1ab64
	.long	0x421f
	.long	0x4225
	.uleb128 0x2
	.long	0x1bc7c
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF47
	.byte	0xb
	.word	0x1c0
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIbE12is_lock_freeEv\0"
	.long	0x1ab64
	.long	0x4264
	.long	0x426a
	.uleb128 0x2
	.long	0x1bc86
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF48
	.byte	0xb
	.word	0x1c8
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE5storeEbSt12memory_order\0"
	.long	0x42ab
	.long	0x42bb
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF48
	.byte	0xb
	.word	0x1d4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE5storeEbSt12memory_order\0"
	.long	0x42fd
	.long	0x430d
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF49
	.byte	0xb
	.word	0x1e1
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIbE4loadESt12memory_order\0"
	.long	0x3b4d
	.long	0x4351
	.long	0x435c
	.uleb128 0x2
	.long	0x1bc7c
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF49
	.byte	0xb
	.word	0x1ec
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIbE4loadESt12memory_order\0"
	.long	0x3b4d
	.long	0x43a1
	.long	0x43ac
	.uleb128 0x2
	.long	0x1bc86
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF50
	.byte	0xb
	.word	0x1f7
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE8exchangeEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x43f4
	.long	0x4404
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF50
	.byte	0xb
	.word	0x1ff
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE8exchangeEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x444d
	.long	0x445d
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x206
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x44b8
	.long	0x44d2
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x1bc8b
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x210
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x452e
	.long	0x4548
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x1bc8b
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x21b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_order\0"
	.long	0x1ab64
	.long	0x45a0
	.long	0x45b5
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x1bc8b
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x223
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_order\0"
	.long	0x1ab64
	.long	0x460e
	.long	0x4623
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x1bc8b
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x22b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x4680
	.long	0x469a
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x1bc8b
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x235
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x46f8
	.long	0x4712
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x1bc8b
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x240
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_order\0"
	.long	0x1ab64
	.long	0x476c
	.long	0x4781
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x1bc8b
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x248
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_order\0"
	.long	0x1ab64
	.long	0x47dc
	.long	0x47f1
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x1bc8b
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF29
	.byte	0xb
	.word	0x251
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIbE4waitEbSt12memory_order\0"
	.long	0x4832
	.long	0x4842
	.uleb128 0x2
	.long	0x1bc7c
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF31
	.byte	0xb
	.word	0x25b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE10notify_oneEv\0"
	.long	0x4879
	.long	0x487f
	.uleb128 0x2
	.long	0x1bc63
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF32
	.byte	0xb
	.word	0x261
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE10notify_allEv\0"
	.long	0x48b6
	.long	0x48bc
	.uleb128 0x2
	.long	0x1bc63
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF53
	.byte	0xb
	.word	0x268
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE9fetch_addEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x4905
	.long	0x4915
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF53
	.byte	0xb
	.word	0x26d
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE9fetch_addEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x495f
	.long	0x496f
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF54
	.byte	0xb
	.word	0x272
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE9fetch_subEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x49b8
	.long	0x49c8
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF54
	.byte	0xb
	.word	0x277
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE9fetch_subEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x4a12
	.long	0x4a22
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF55
	.byte	0xb
	.word	0x27c
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE9fetch_andEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x4a6b
	.long	0x4a7b
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF55
	.byte	0xb
	.word	0x281
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE9fetch_andEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x4ac5
	.long	0x4ad5
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF56
	.byte	0xb
	.word	0x286
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE8fetch_orEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x4b1d
	.long	0x4b2d
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF56
	.byte	0xb
	.word	0x28b
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE8fetch_orEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x4b76
	.long	0x4b86
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF57
	.byte	0xb
	.word	0x290
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE9fetch_xorEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x4bcf
	.long	0x4bdf
	.uleb128 0x2
	.long	0x1bc63
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF57
	.byte	0xb
	.word	0x295
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE9fetch_xorEbSt12memory_order\0"
	.long	0x3b4d
	.long	0x4c29
	.long	0x4c39
	.uleb128 0x2
	.long	0x1bc77
	.uleb128 0x1
	.long	0x3b4d
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF58
	.long	0x1ab64
	.byte	0
	.uleb128 0x4
	.long	0x3afc
	.uleb128 0x81
	.long	0x3afc
	.uleb128 0x4
	.long	0x4c48
	.uleb128 0xaf
	.ascii "atomic<bool>\0"
	.byte	0x1
	.byte	0x1
	.byte	0xc
	.byte	0x3e
	.byte	0xa
	.long	0x54e4
	.uleb128 0x110
	.ascii "_M_base\0"
	.byte	0xc
	.byte	0x43
	.byte	0x19
	.long	0x3afc
	.byte	0x1
	.byte	0
	.byte	0x3
	.uleb128 0x44
	.secrel32	.LASF59
	.byte	0xc
	.byte	0x46
	.byte	0x5
	.ascii "_ZNSt6atomicIbEC4Ev\0"
	.long	0x4ca3
	.long	0x4ca9
	.uleb128 0x2
	.long	0x1bc90
	.byte	0
	.uleb128 0xd7
	.ascii "~atomic\0"
	.byte	0xc
	.byte	0x47
	.byte	0x5
	.ascii "_ZNSt6atomicIbED4Ev\0"
	.long	0x4cd2
	.long	0x4cdd
	.uleb128 0x2
	.long	0x1bc90
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x111
	.secrel32	.LASF59
	.byte	0xc
	.byte	0x48
	.byte	0x5
	.ascii "_ZNSt6atomicIbEC4ERKS0_\0"
	.long	0x4d06
	.long	0x4d11
	.uleb128 0x2
	.long	0x1bc90
	.uleb128 0x1
	.long	0x1bc9a
	.byte	0
	.uleb128 0xd8
	.secrel32	.LASF6
	.byte	0x49
	.ascii "_ZNSt6atomicIbEaSERKS0_\0"
	.long	0x1bc9f
	.long	0x4d3c
	.long	0x4d47
	.uleb128 0x2
	.long	0x1bc90
	.uleb128 0x1
	.long	0x1bc9a
	.byte	0
	.uleb128 0xd8
	.secrel32	.LASF6
	.byte	0x4a
	.ascii "_ZNVSt6atomicIbEaSERKS0_\0"
	.long	0x1bc9f
	.long	0x4d73
	.long	0x4d7e
	.uleb128 0x2
	.long	0x1bca4
	.uleb128 0x1
	.long	0x1bc9a
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF59
	.byte	0xc
	.byte	0x4c
	.byte	0xf
	.ascii "_ZNSt6atomicIbEC4Eb\0"
	.long	0x4da2
	.long	0x4dad
	.uleb128 0x2
	.long	0x1bc90
	.uleb128 0x1
	.long	0x1ab64
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF6
	.byte	0xc
	.byte	0x4f
	.byte	0x5
	.ascii "_ZNSt6atomicIbEaSEb\0"
	.long	0x1ab64
	.long	0x4dd5
	.long	0x4de0
	.uleb128 0x2
	.long	0x1bc90
	.uleb128 0x1
	.long	0x1ab64
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF6
	.byte	0xc
	.byte	0x53
	.byte	0x5
	.ascii "_ZNVSt6atomicIbEaSEb\0"
	.long	0x1ab64
	.long	0x4e09
	.long	0x4e14
	.uleb128 0x2
	.long	0x1bca4
	.uleb128 0x1
	.long	0x1ab64
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF25
	.byte	0xc
	.byte	0x56
	.byte	0x5
	.ascii "_ZNKSt6atomicIbEcvbEv\0"
	.long	0x1ab64
	.long	0x4e3e
	.long	0x4e44
	.uleb128 0x2
	.long	0x1bca9
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF25
	.byte	0xc
	.byte	0x59
	.byte	0x5
	.ascii "_ZNVKSt6atomicIbEcvbEv\0"
	.long	0x1ab64
	.long	0x4e6f
	.long	0x4e75
	.uleb128 0x2
	.long	0x1bcb3
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF47
	.byte	0xc
	.byte	0x5d
	.byte	0x5
	.ascii "_ZNKSt6atomicIbE12is_lock_freeEv\0"
	.long	0x1ab64
	.long	0x4eaa
	.long	0x4eb0
	.uleb128 0x2
	.long	0x1bca9
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF47
	.byte	0xc
	.byte	0x60
	.byte	0x5
	.ascii "_ZNVKSt6atomicIbE12is_lock_freeEv\0"
	.long	0x1ab64
	.long	0x4ee6
	.long	0x4eec
	.uleb128 0x2
	.long	0x1bcb3
	.byte	0
	.uleb128 0x112
	.secrel32	.LASF60
	.byte	0xc
	.byte	0x63
	.byte	0x1b
	.ascii "_ZNSt6atomicIbE19is_always_lock_freeE\0"
	.long	0x1ab6c
	.byte	0x1
	.byte	0x1
	.uleb128 0x33
	.secrel32	.LASF48
	.byte	0xc
	.byte	0x67
	.byte	0x5
	.ascii "_ZNSt6atomicIbE5storeEbSt12memory_order\0"
	.long	0x4f59
	.long	0x4f69
	.uleb128 0x2
	.long	0x1bc90
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF48
	.byte	0xc
	.byte	0x6b
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE5storeEbSt12memory_order\0"
	.long	0x4fa2
	.long	0x4fb2
	.uleb128 0x2
	.long	0x1bca4
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF49
	.byte	0xc
	.byte	0x6f
	.byte	0x5
	.ascii "_ZNKSt6atomicIbE4loadESt12memory_order\0"
	.long	0x1ab64
	.long	0x4fed
	.long	0x4ff8
	.uleb128 0x2
	.long	0x1bca9
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF49
	.byte	0xc
	.byte	0x73
	.byte	0x5
	.ascii "_ZNVKSt6atomicIbE4loadESt12memory_order\0"
	.long	0x1ab64
	.long	0x5034
	.long	0x503f
	.uleb128 0x2
	.long	0x1bcb3
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF50
	.byte	0xc
	.byte	0x77
	.byte	0x5
	.ascii "_ZNSt6atomicIbE8exchangeEbSt12memory_order\0"
	.long	0x1ab64
	.long	0x507e
	.long	0x508e
	.uleb128 0x2
	.long	0x1bc90
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF50
	.byte	0xc
	.byte	0x7b
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE8exchangeEbSt12memory_order\0"
	.long	0x1ab64
	.long	0x50ce
	.long	0x50de
	.uleb128 0x2
	.long	0x1bca4
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF51
	.byte	0xc
	.byte	0x80
	.byte	0x5
	.ascii "_ZNSt6atomicIbE21compare_exchange_weakERbbSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x5130
	.long	0x514a
	.uleb128 0x2
	.long	0x1bc90
	.uleb128 0x1
	.long	0x1bcb8
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF51
	.byte	0xc
	.byte	0x85
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE21compare_exchange_weakERbbSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x519d
	.long	0x51b7
	.uleb128 0x2
	.long	0x1bca4
	.uleb128 0x1
	.long	0x1bcb8
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF51
	.byte	0xc
	.byte	0x8a
	.byte	0x5
	.ascii "_ZNSt6atomicIbE21compare_exchange_weakERbbSt12memory_order\0"
	.long	0x1ab64
	.long	0x5206
	.long	0x521b
	.uleb128 0x2
	.long	0x1bc90
	.uleb128 0x1
	.long	0x1bcb8
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF51
	.byte	0xc
	.byte	0x8f
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE21compare_exchange_weakERbbSt12memory_order\0"
	.long	0x1ab64
	.long	0x526b
	.long	0x5280
	.uleb128 0x2
	.long	0x1bca4
	.uleb128 0x1
	.long	0x1bcb8
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF52
	.byte	0xc
	.byte	0x94
	.byte	0x5
	.ascii "_ZNSt6atomicIbE23compare_exchange_strongERbbSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x52d4
	.long	0x52ee
	.uleb128 0x2
	.long	0x1bc90
	.uleb128 0x1
	.long	0x1bcb8
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF52
	.byte	0xc
	.byte	0x99
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE23compare_exchange_strongERbbSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x5343
	.long	0x535d
	.uleb128 0x2
	.long	0x1bca4
	.uleb128 0x1
	.long	0x1bcb8
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF52
	.byte	0xc
	.byte	0x9e
	.byte	0x5
	.ascii "_ZNSt6atomicIbE23compare_exchange_strongERbbSt12memory_order\0"
	.long	0x1ab64
	.long	0x53ae
	.long	0x53c3
	.uleb128 0x2
	.long	0x1bc90
	.uleb128 0x1
	.long	0x1bcb8
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF52
	.byte	0xc
	.byte	0xa3
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE23compare_exchange_strongERbbSt12memory_order\0"
	.long	0x1ab64
	.long	0x5415
	.long	0x542a
	.uleb128 0x2
	.long	0x1bca4
	.uleb128 0x1
	.long	0x1bcb8
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF29
	.byte	0xc
	.byte	0xa9
	.byte	0x5
	.ascii "_ZNKSt6atomicIbE4waitEbSt12memory_order\0"
	.long	0x5462
	.long	0x5472
	.uleb128 0x2
	.long	0x1bca9
	.uleb128 0x1
	.long	0x1ab64
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF31
	.byte	0xc
	.byte	0xaf
	.byte	0x5
	.ascii "_ZNSt6atomicIbE10notify_oneEv\0"
	.long	0x54a0
	.long	0x54a6
	.uleb128 0x2
	.long	0x1bc90
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF32
	.byte	0xc
	.byte	0xb3
	.byte	0x5
	.ascii "_ZNSt6atomicIbE10notify_allEv\0"
	.long	0x54d4
	.long	0x54da
	.uleb128 0x2
	.long	0x1bc90
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1ab64
	.byte	0
	.uleb128 0x4
	.long	0x4c53
	.uleb128 0x81
	.long	0x4c53
	.uleb128 0x81
	.long	0x54e4
	.uleb128 0x98
	.ascii "__atomic_base<unsigned char>\0"
	.byte	0x1
	.byte	0x1
	.byte	0xb
	.word	0x144
	.long	0x6645
	.uleb128 0xb6
	.secrel32	.LASF61
	.ascii "_ZNSt13__atomic_baseIhE12_S_alignmentE\0"
	.long	0x18b
	.byte	0x1
	.uleb128 0x66
	.secrel32	.LASF36
	.byte	0xb
	.word	0x14a
	.byte	0x15
	.long	0x49a
	.byte	0x3
	.uleb128 0xb7
	.ascii "_M_i\0"
	.long	0x554f
	.byte	0x1
	.uleb128 0x2d
	.secrel32	.LASF37
	.byte	0xb
	.word	0x152
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEC4Ev\0"
	.long	0x5596
	.long	0x559c
	.uleb128 0x2
	.long	0x1bcbd
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF38
	.byte	0xb
	.word	0x153
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhED4Ev\0"
	.long	0x55c9
	.long	0x55d4
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x8d
	.secrel32	.LASF37
	.byte	0xb
	.word	0x154
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEC4ERKS0_\0"
	.long	0x5606
	.long	0x5611
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x1bcc7
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0xb
	.word	0x155
	.byte	0x16
	.ascii "_ZNSt13__atomic_baseIhEaSERKS0_\0"
	.long	0x1bccc
	.long	0x5646
	.long	0x5651
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x1bcc7
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0xb
	.word	0x156
	.byte	0x16
	.ascii "_ZNVSt13__atomic_baseIhEaSERKS0_\0"
	.long	0x1bccc
	.long	0x5687
	.long	0x5692
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x1bcc7
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF37
	.byte	0xb
	.word	0x159
	.byte	0x11
	.ascii "_ZNSt13__atomic_baseIhEC4Eh\0"
	.long	0x56bf
	.long	0x56ca
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF62
	.byte	0xb
	.word	0x15b
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIhEcvhEv\0"
	.long	0x554f
	.long	0x56fd
	.long	0x5703
	.uleb128 0x2
	.long	0x1bcd6
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF62
	.byte	0xb
	.word	0x15e
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIhEcvhEv\0"
	.long	0x554f
	.long	0x5737
	.long	0x573d
	.uleb128 0x2
	.long	0x1bce0
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF6
	.byte	0xb
	.word	0x162
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEaSEh\0"
	.long	0x554f
	.long	0x576e
	.long	0x5779
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF6
	.byte	0xb
	.word	0x169
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhEaSEh\0"
	.long	0x554f
	.long	0x57ab
	.long	0x57b6
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x170
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEppEi\0"
	.long	0x554f
	.long	0x57e7
	.long	0x57f2
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x174
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhEppEi\0"
	.long	0x554f
	.long	0x5824
	.long	0x582f
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x178
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEmmEi\0"
	.long	0x554f
	.long	0x5860
	.long	0x586b
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x17c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhEmmEi\0"
	.long	0x554f
	.long	0x589d
	.long	0x58a8
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x180
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEppEv\0"
	.long	0x554f
	.long	0x58d9
	.long	0x58df
	.uleb128 0x2
	.long	0x1bcbd
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x184
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhEppEv\0"
	.long	0x554f
	.long	0x5911
	.long	0x5917
	.uleb128 0x2
	.long	0x1bcd1
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x188
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEmmEv\0"
	.long	0x554f
	.long	0x5948
	.long	0x594e
	.uleb128 0x2
	.long	0x1bcbd
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x18c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhEmmEv\0"
	.long	0x554f
	.long	0x5980
	.long	0x5986
	.uleb128 0x2
	.long	0x1bcd1
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF42
	.byte	0xb
	.word	0x190
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEpLEh\0"
	.long	0x554f
	.long	0x59b7
	.long	0x59c2
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF42
	.byte	0xb
	.word	0x194
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhEpLEh\0"
	.long	0x554f
	.long	0x59f4
	.long	0x59ff
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF43
	.byte	0xb
	.word	0x198
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEmIEh\0"
	.long	0x554f
	.long	0x5a30
	.long	0x5a3b
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF43
	.byte	0xb
	.word	0x19c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhEmIEh\0"
	.long	0x554f
	.long	0x5a6d
	.long	0x5a78
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF44
	.byte	0xb
	.word	0x1a0
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEaNEh\0"
	.long	0x554f
	.long	0x5aa9
	.long	0x5ab4
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF44
	.byte	0xb
	.word	0x1a4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhEaNEh\0"
	.long	0x554f
	.long	0x5ae6
	.long	0x5af1
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF45
	.byte	0xb
	.word	0x1a8
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEoREh\0"
	.long	0x554f
	.long	0x5b22
	.long	0x5b2d
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF45
	.byte	0xb
	.word	0x1ac
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhEoREh\0"
	.long	0x554f
	.long	0x5b5f
	.long	0x5b6a
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF46
	.byte	0xb
	.word	0x1b0
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhEeOEh\0"
	.long	0x554f
	.long	0x5b9b
	.long	0x5ba6
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF46
	.byte	0xb
	.word	0x1b4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhEeOEh\0"
	.long	0x554f
	.long	0x5bd8
	.long	0x5be3
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF47
	.byte	0xb
	.word	0x1b8
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIhE12is_lock_freeEv\0"
	.long	0x1ab64
	.long	0x5c21
	.long	0x5c27
	.uleb128 0x2
	.long	0x1bcd6
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF47
	.byte	0xb
	.word	0x1c0
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIhE12is_lock_freeEv\0"
	.long	0x1ab64
	.long	0x5c66
	.long	0x5c6c
	.uleb128 0x2
	.long	0x1bce0
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF48
	.byte	0xb
	.word	0x1c8
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE5storeEhSt12memory_order\0"
	.long	0x5cad
	.long	0x5cbd
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF48
	.byte	0xb
	.word	0x1d4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhE5storeEhSt12memory_order\0"
	.long	0x5cff
	.long	0x5d0f
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF49
	.byte	0xb
	.word	0x1e1
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIhE4loadESt12memory_order\0"
	.long	0x554f
	.long	0x5d53
	.long	0x5d5e
	.uleb128 0x2
	.long	0x1bcd6
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF49
	.byte	0xb
	.word	0x1ec
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIhE4loadESt12memory_order\0"
	.long	0x554f
	.long	0x5da3
	.long	0x5dae
	.uleb128 0x2
	.long	0x1bce0
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF50
	.byte	0xb
	.word	0x1f7
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE8exchangeEhSt12memory_order\0"
	.long	0x554f
	.long	0x5df6
	.long	0x5e06
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF50
	.byte	0xb
	.word	0x1ff
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhE8exchangeEhSt12memory_order\0"
	.long	0x554f
	.long	0x5e4f
	.long	0x5e5f
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x206
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE21compare_exchange_weakERhhSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x5eba
	.long	0x5ed4
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x1bce5
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x210
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhE21compare_exchange_weakERhhSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x5f30
	.long	0x5f4a
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x1bce5
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x21b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE21compare_exchange_weakERhhSt12memory_order\0"
	.long	0x1ab64
	.long	0x5fa2
	.long	0x5fb7
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x1bce5
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x223
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhE21compare_exchange_weakERhhSt12memory_order\0"
	.long	0x1ab64
	.long	0x6010
	.long	0x6025
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x1bce5
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x22b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE23compare_exchange_strongERhhSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x6082
	.long	0x609c
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x1bce5
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x235
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhE23compare_exchange_strongERhhSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x60fa
	.long	0x6114
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x1bce5
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x240
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE23compare_exchange_strongERhhSt12memory_order\0"
	.long	0x1ab64
	.long	0x616e
	.long	0x6183
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x1bce5
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x248
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhE23compare_exchange_strongERhhSt12memory_order\0"
	.long	0x1ab64
	.long	0x61de
	.long	0x61f3
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x1bce5
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF29
	.byte	0xb
	.word	0x251
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIhE4waitEhSt12memory_order\0"
	.long	0x6234
	.long	0x6244
	.uleb128 0x2
	.long	0x1bcd6
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF31
	.byte	0xb
	.word	0x25b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE10notify_oneEv\0"
	.long	0x627b
	.long	0x6281
	.uleb128 0x2
	.long	0x1bcbd
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF32
	.byte	0xb
	.word	0x261
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE10notify_allEv\0"
	.long	0x62b8
	.long	0x62be
	.uleb128 0x2
	.long	0x1bcbd
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF53
	.byte	0xb
	.word	0x268
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE9fetch_addEhSt12memory_order\0"
	.long	0x554f
	.long	0x6307
	.long	0x6317
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF53
	.byte	0xb
	.word	0x26d
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhE9fetch_addEhSt12memory_order\0"
	.long	0x554f
	.long	0x6361
	.long	0x6371
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF54
	.byte	0xb
	.word	0x272
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE9fetch_subEhSt12memory_order\0"
	.long	0x554f
	.long	0x63ba
	.long	0x63ca
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF54
	.byte	0xb
	.word	0x277
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhE9fetch_subEhSt12memory_order\0"
	.long	0x554f
	.long	0x6414
	.long	0x6424
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF55
	.byte	0xb
	.word	0x27c
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE9fetch_andEhSt12memory_order\0"
	.long	0x554f
	.long	0x646d
	.long	0x647d
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF55
	.byte	0xb
	.word	0x281
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhE9fetch_andEhSt12memory_order\0"
	.long	0x554f
	.long	0x64c7
	.long	0x64d7
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF56
	.byte	0xb
	.word	0x286
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE8fetch_orEhSt12memory_order\0"
	.long	0x554f
	.long	0x651f
	.long	0x652f
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF56
	.byte	0xb
	.word	0x28b
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhE8fetch_orEhSt12memory_order\0"
	.long	0x554f
	.long	0x6578
	.long	0x6588
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF57
	.byte	0xb
	.word	0x290
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIhE9fetch_xorEhSt12memory_order\0"
	.long	0x554f
	.long	0x65d1
	.long	0x65e1
	.uleb128 0x2
	.long	0x1bcbd
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF57
	.byte	0xb
	.word	0x295
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIhE9fetch_xorEhSt12memory_order\0"
	.long	0x554f
	.long	0x662b
	.long	0x663b
	.uleb128 0x2
	.long	0x1bcd1
	.uleb128 0x1
	.long	0x554f
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF58
	.long	0x49a
	.byte	0
	.uleb128 0x4
	.long	0x54f5
	.uleb128 0x81
	.long	0x54f5
	.uleb128 0x4
	.long	0x664a
	.uleb128 0x98
	.ascii "atomic<unsigned char>\0"
	.byte	0x1
	.byte	0x1
	.byte	0xc
	.word	0x2f3
	.long	0x6840
	.uleb128 0x43
	.byte	0xc
	.word	0x2f3
	.byte	0xc
	.long	0x56ca
	.uleb128 0x43
	.byte	0xc
	.word	0x2f3
	.byte	0xc
	.long	0x5703
	.uleb128 0x43
	.byte	0xc
	.word	0x2f3
	.byte	0xc
	.long	0x5779
	.uleb128 0x43
	.byte	0xc
	.word	0x2f3
	.byte	0xc
	.long	0x573d
	.uleb128 0x43
	.byte	0xc
	.word	0x2f3
	.byte	0xc
	.long	0x5651
	.uleb128 0x43
	.byte	0xc
	.word	0x2f3
	.byte	0xc
	.long	0x5611
	.uleb128 0x4c
	.long	0x54f5
	.uleb128 0x2d
	.secrel32	.LASF59
	.byte	0xc
	.word	0x2f8
	.byte	0x7
	.ascii "_ZNSt6atomicIhEC4Ev\0"
	.long	0x66d6
	.long	0x66dc
	.uleb128 0x2
	.long	0x1bcea
	.byte	0
	.uleb128 0xd9
	.ascii "~atomic\0"
	.byte	0xc
	.word	0x2f9
	.byte	0x7
	.ascii "_ZNSt6atomicIhED4Ev\0"
	.long	0x6706
	.long	0x6711
	.uleb128 0x2
	.long	0x1bcea
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x8d
	.secrel32	.LASF59
	.byte	0xc
	.word	0x2fa
	.byte	0x7
	.ascii "_ZNSt6atomicIhEC4ERKS0_\0"
	.long	0x673b
	.long	0x6746
	.uleb128 0x2
	.long	0x1bcea
	.uleb128 0x1
	.long	0x1bcef
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0xc
	.word	0x2fb
	.byte	0xf
	.ascii "_ZNSt6atomicIhEaSERKS0_\0"
	.long	0x1bcf4
	.long	0x6773
	.long	0x677e
	.uleb128 0x2
	.long	0x1bcea
	.uleb128 0x1
	.long	0x1bcef
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0xc
	.word	0x2fc
	.byte	0xf
	.ascii "_ZNVSt6atomicIhEaSERKS0_\0"
	.long	0x1bcf4
	.long	0x67ac
	.long	0x67b7
	.uleb128 0x2
	.long	0x1bcf9
	.uleb128 0x1
	.long	0x1bcef
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF59
	.byte	0xc
	.word	0x2fe
	.byte	0x11
	.ascii "_ZNSt6atomicIhEC4Eh\0"
	.long	0x67dc
	.long	0x67e7
	.uleb128 0x2
	.long	0x1bcea
	.uleb128 0x1
	.long	0x67e7
	.byte	0
	.uleb128 0x22
	.ascii "__integral_type\0"
	.byte	0xc
	.word	0x2f5
	.byte	0x1f
	.long	0x49a
	.uleb128 0x113
	.secrel32	.LASF60
	.byte	0xc
	.word	0x304
	.byte	0x1d
	.ascii "_ZNSt6atomicIhE19is_always_lock_freeE\0"
	.long	0x1ab6c
	.byte	0x1
	.byte	0x1
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x49a
	.byte	0
	.uleb128 0x4
	.long	0x6655
	.uleb128 0x81
	.long	0x6655
	.uleb128 0x98
	.ascii "__atomic_base<long long int>\0"
	.byte	0x8
	.byte	0x8
	.byte	0xb
	.word	0x144
	.long	0x799b
	.uleb128 0xb6
	.secrel32	.LASF61
	.ascii "_ZNSt13__atomic_baseIxE12_S_alignmentE\0"
	.long	0x18b
	.byte	0x8
	.uleb128 0x66
	.secrel32	.LASF36
	.byte	0xb
	.word	0x14a
	.byte	0x15
	.long	0x110
	.byte	0x3
	.uleb128 0xb7
	.ascii "_M_i\0"
	.long	0x68a5
	.byte	0x8
	.uleb128 0x2d
	.secrel32	.LASF37
	.byte	0xb
	.word	0x152
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEC4Ev\0"
	.long	0x68ec
	.long	0x68f2
	.uleb128 0x2
	.long	0x1bcfe
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF38
	.byte	0xb
	.word	0x153
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxED4Ev\0"
	.long	0x691f
	.long	0x692a
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x8d
	.secrel32	.LASF37
	.byte	0xb
	.word	0x154
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEC4ERKS0_\0"
	.long	0x695c
	.long	0x6967
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x1bd08
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0xb
	.word	0x155
	.byte	0x16
	.ascii "_ZNSt13__atomic_baseIxEaSERKS0_\0"
	.long	0x1bd0d
	.long	0x699c
	.long	0x69a7
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x1bd08
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0xb
	.word	0x156
	.byte	0x16
	.ascii "_ZNVSt13__atomic_baseIxEaSERKS0_\0"
	.long	0x1bd0d
	.long	0x69dd
	.long	0x69e8
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x1bd08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF37
	.byte	0xb
	.word	0x159
	.byte	0x11
	.ascii "_ZNSt13__atomic_baseIxEC4Ex\0"
	.long	0x6a15
	.long	0x6a20
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF63
	.byte	0xb
	.word	0x15b
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIxEcvxEv\0"
	.long	0x68a5
	.long	0x6a53
	.long	0x6a59
	.uleb128 0x2
	.long	0x1bd17
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF63
	.byte	0xb
	.word	0x15e
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIxEcvxEv\0"
	.long	0x68a5
	.long	0x6a8d
	.long	0x6a93
	.uleb128 0x2
	.long	0x1bd21
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF6
	.byte	0xb
	.word	0x162
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEaSEx\0"
	.long	0x68a5
	.long	0x6ac4
	.long	0x6acf
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF6
	.byte	0xb
	.word	0x169
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEaSEx\0"
	.long	0x68a5
	.long	0x6b01
	.long	0x6b0c
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x170
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEppEi\0"
	.long	0x68a5
	.long	0x6b3d
	.long	0x6b48
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x174
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEppEi\0"
	.long	0x68a5
	.long	0x6b7a
	.long	0x6b85
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x178
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEmmEi\0"
	.long	0x68a5
	.long	0x6bb6
	.long	0x6bc1
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x17c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEmmEi\0"
	.long	0x68a5
	.long	0x6bf3
	.long	0x6bfe
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x180
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEppEv\0"
	.long	0x68a5
	.long	0x6c2f
	.long	0x6c35
	.uleb128 0x2
	.long	0x1bcfe
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xb
	.word	0x184
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEppEv\0"
	.long	0x68a5
	.long	0x6c67
	.long	0x6c6d
	.uleb128 0x2
	.long	0x1bd12
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x188
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEmmEv\0"
	.long	0x68a5
	.long	0x6c9e
	.long	0x6ca4
	.uleb128 0x2
	.long	0x1bcfe
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xb
	.word	0x18c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEmmEv\0"
	.long	0x68a5
	.long	0x6cd6
	.long	0x6cdc
	.uleb128 0x2
	.long	0x1bd12
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF42
	.byte	0xb
	.word	0x190
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEpLEx\0"
	.long	0x68a5
	.long	0x6d0d
	.long	0x6d18
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF42
	.byte	0xb
	.word	0x194
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEpLEx\0"
	.long	0x68a5
	.long	0x6d4a
	.long	0x6d55
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF43
	.byte	0xb
	.word	0x198
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEmIEx\0"
	.long	0x68a5
	.long	0x6d86
	.long	0x6d91
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF43
	.byte	0xb
	.word	0x19c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEmIEx\0"
	.long	0x68a5
	.long	0x6dc3
	.long	0x6dce
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF44
	.byte	0xb
	.word	0x1a0
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEaNEx\0"
	.long	0x68a5
	.long	0x6dff
	.long	0x6e0a
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF44
	.byte	0xb
	.word	0x1a4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEaNEx\0"
	.long	0x68a5
	.long	0x6e3c
	.long	0x6e47
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF45
	.byte	0xb
	.word	0x1a8
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEoREx\0"
	.long	0x68a5
	.long	0x6e78
	.long	0x6e83
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF45
	.byte	0xb
	.word	0x1ac
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEoREx\0"
	.long	0x68a5
	.long	0x6eb5
	.long	0x6ec0
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF46
	.byte	0xb
	.word	0x1b0
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEeOEx\0"
	.long	0x68a5
	.long	0x6ef1
	.long	0x6efc
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF46
	.byte	0xb
	.word	0x1b4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEeOEx\0"
	.long	0x68a5
	.long	0x6f2e
	.long	0x6f39
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF47
	.byte	0xb
	.word	0x1b8
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIxE12is_lock_freeEv\0"
	.long	0x1ab64
	.long	0x6f77
	.long	0x6f7d
	.uleb128 0x2
	.long	0x1bd17
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF47
	.byte	0xb
	.word	0x1c0
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIxE12is_lock_freeEv\0"
	.long	0x1ab64
	.long	0x6fbc
	.long	0x6fc2
	.uleb128 0x2
	.long	0x1bd21
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF48
	.byte	0xb
	.word	0x1c8
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE5storeExSt12memory_order\0"
	.long	0x7003
	.long	0x7013
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF48
	.byte	0xb
	.word	0x1d4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE5storeExSt12memory_order\0"
	.long	0x7055
	.long	0x7065
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF49
	.byte	0xb
	.word	0x1e1
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIxE4loadESt12memory_order\0"
	.long	0x68a5
	.long	0x70a9
	.long	0x70b4
	.uleb128 0x2
	.long	0x1bd17
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF49
	.byte	0xb
	.word	0x1ec
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIxE4loadESt12memory_order\0"
	.long	0x68a5
	.long	0x70f9
	.long	0x7104
	.uleb128 0x2
	.long	0x1bd21
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF50
	.byte	0xb
	.word	0x1f7
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE8exchangeExSt12memory_order\0"
	.long	0x68a5
	.long	0x714c
	.long	0x715c
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF50
	.byte	0xb
	.word	0x1ff
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE8exchangeExSt12memory_order\0"
	.long	0x68a5
	.long	0x71a5
	.long	0x71b5
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x206
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x7210
	.long	0x722a
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x1bd26
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x210
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x7286
	.long	0x72a0
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x1bd26
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x21b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_order\0"
	.long	0x1ab64
	.long	0x72f8
	.long	0x730d
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x1bd26
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x223
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_order\0"
	.long	0x1ab64
	.long	0x7366
	.long	0x737b
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x1bd26
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x22b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x73d8
	.long	0x73f2
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x1bd26
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x235
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_orderS2_\0"
	.long	0x1ab64
	.long	0x7450
	.long	0x746a
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x1bd26
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x240
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_order\0"
	.long	0x1ab64
	.long	0x74c4
	.long	0x74d9
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x1bd26
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x248
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_order\0"
	.long	0x1ab64
	.long	0x7534
	.long	0x7549
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x1bd26
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF29
	.byte	0xb
	.word	0x251
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIxE4waitExSt12memory_order\0"
	.long	0x758a
	.long	0x759a
	.uleb128 0x2
	.long	0x1bd17
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF31
	.byte	0xb
	.word	0x25b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE10notify_oneEv\0"
	.long	0x75d1
	.long	0x75d7
	.uleb128 0x2
	.long	0x1bcfe
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF32
	.byte	0xb
	.word	0x261
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE10notify_allEv\0"
	.long	0x760e
	.long	0x7614
	.uleb128 0x2
	.long	0x1bcfe
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF53
	.byte	0xb
	.word	0x268
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE9fetch_addExSt12memory_order\0"
	.long	0x68a5
	.long	0x765d
	.long	0x766d
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF53
	.byte	0xb
	.word	0x26d
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE9fetch_addExSt12memory_order\0"
	.long	0x68a5
	.long	0x76b7
	.long	0x76c7
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF54
	.byte	0xb
	.word	0x272
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE9fetch_subExSt12memory_order\0"
	.long	0x68a5
	.long	0x7710
	.long	0x7720
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF54
	.byte	0xb
	.word	0x277
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE9fetch_subExSt12memory_order\0"
	.long	0x68a5
	.long	0x776a
	.long	0x777a
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF55
	.byte	0xb
	.word	0x27c
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE9fetch_andExSt12memory_order\0"
	.long	0x68a5
	.long	0x77c3
	.long	0x77d3
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF55
	.byte	0xb
	.word	0x281
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE9fetch_andExSt12memory_order\0"
	.long	0x68a5
	.long	0x781d
	.long	0x782d
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF56
	.byte	0xb
	.word	0x286
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE8fetch_orExSt12memory_order\0"
	.long	0x68a5
	.long	0x7875
	.long	0x7885
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF56
	.byte	0xb
	.word	0x28b
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE8fetch_orExSt12memory_order\0"
	.long	0x68a5
	.long	0x78ce
	.long	0x78de
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF57
	.byte	0xb
	.word	0x290
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE9fetch_xorExSt12memory_order\0"
	.long	0x68a5
	.long	0x7927
	.long	0x7937
	.uleb128 0x2
	.long	0x1bcfe
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF57
	.byte	0xb
	.word	0x295
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE9fetch_xorExSt12memory_order\0"
	.long	0x68a5
	.long	0x7981
	.long	0x7991
	.uleb128 0x2
	.long	0x1bd12
	.uleb128 0x1
	.long	0x68a5
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF58
	.long	0x110
	.byte	0
	.uleb128 0x4
	.long	0x684b
	.uleb128 0x81
	.long	0x684b
	.uleb128 0x4
	.long	0x79a0
	.uleb128 0x7a
	.secrel32	.LASF64
	.byte	0x8
	.byte	0xd
	.byte	0x3d
	.byte	0x9
	.long	0x80b0
	.uleb128 0x114
	.ascii "id\0"
	.byte	0x8
	.byte	0xd
	.byte	0x50
	.byte	0xb
	.byte	0x1
	.long	0x7a30
	.uleb128 0x16
	.ascii "_M_thread\0"
	.byte	0xd
	.byte	0x52
	.byte	0x1a
	.long	0x7a35
	.byte	0
	.uleb128 0x65
	.ascii "id\0"
	.byte	0xd
	.byte	0x55
	.byte	0x7
	.ascii "_ZNSt6thread2idC4Ev\0"
	.byte	0x1
	.long	0x79fd
	.long	0x7a03
	.uleb128 0x2
	.long	0x1bd30
	.byte	0
	.uleb128 0x115
	.ascii "id\0"
	.byte	0xd
	.byte	0x58
	.byte	0x7
	.ascii "_ZNSt6thread2idC4Ey\0"
	.byte	0x1
	.long	0x7a24
	.uleb128 0x2
	.long	0x1bd30
	.uleb128 0x1
	.long	0x7a35
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x79b8
	.uleb128 0x7b
	.secrel32	.LASF26
	.byte	0xd
	.byte	0x4a
	.byte	0xb
	.long	0x1b601
	.uleb128 0x16
	.ascii "_M_id\0"
	.byte	0xd
	.byte	0x6f
	.byte	0xb
	.long	0x79b8
	.byte	0
	.uleb128 0x99
	.secrel32	.LASF64
	.byte	0xd
	.byte	0x78
	.byte	0x5
	.ascii "_ZNSt6threadC4Ev\0"
	.long	0x7a72
	.long	0x7a78
	.uleb128 0x2
	.long	0x1bd3a
	.byte	0
	.uleb128 0x65
	.ascii "~thread\0"
	.byte	0xd
	.byte	0x94
	.byte	0x5
	.ascii "_ZNSt6threadD4Ev\0"
	.byte	0x1
	.long	0x7a9e
	.long	0x7aa9
	.uleb128 0x2
	.long	0x1bd3a
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x96
	.secrel32	.LASF64
	.byte	0xd
	.byte	0x9a
	.byte	0x5
	.ascii "_ZNSt6threadC4ERKS_\0"
	.byte	0x1
	.long	0x7acf
	.long	0x7ada
	.uleb128 0x2
	.long	0x1bd3a
	.uleb128 0x1
	.long	0x1bd44
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF64
	.byte	0xd
	.byte	0x9c
	.byte	0x5
	.ascii "_ZNSt6threadC4EOS_\0"
	.byte	0x1
	.long	0x7afe
	.long	0x7b09
	.uleb128 0x2
	.long	0x1bd3a
	.uleb128 0x1
	.long	0x1bd49
	.byte	0
	.uleb128 0x97
	.secrel32	.LASF6
	.byte	0xd
	.byte	0x9f
	.byte	0xd
	.ascii "_ZNSt6threadaSERKS_\0"
	.long	0x1bd4e
	.long	0x7b32
	.long	0x7b3d
	.uleb128 0x2
	.long	0x1bd3a
	.uleb128 0x1
	.long	0x1bd44
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF6
	.byte	0xd
	.byte	0xa1
	.byte	0xd
	.ascii "_ZNSt6threadaSEOS_\0"
	.long	0x1bd4e
	.long	0x7b64
	.long	0x7b6f
	.uleb128 0x2
	.long	0x1bd3a
	.uleb128 0x1
	.long	0x1bd49
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF23
	.byte	0xd
	.byte	0xaa
	.byte	0x5
	.ascii "_ZNSt6thread4swapERS_\0"
	.byte	0x1
	.long	0x7b96
	.long	0x7ba1
	.uleb128 0x2
	.long	0x1bd3a
	.uleb128 0x1
	.long	0x1bd4e
	.byte	0
	.uleb128 0xb5
	.ascii "joinable\0"
	.byte	0xd
	.byte	0xae
	.ascii "_ZNKSt6thread8joinableEv\0"
	.long	0x1ab64
	.long	0x7bd3
	.long	0x7bd9
	.uleb128 0x2
	.long	0x1bd53
	.byte	0
	.uleb128 0x65
	.ascii "join\0"
	.byte	0xd
	.byte	0xb2
	.byte	0x5
	.ascii "_ZNSt6thread4joinEv\0"
	.byte	0x1
	.long	0x7bff
	.long	0x7c05
	.uleb128 0x2
	.long	0x1bd3a
	.byte	0
	.uleb128 0x65
	.ascii "detach\0"
	.byte	0xd
	.byte	0xb5
	.byte	0x5
	.ascii "_ZNSt6thread6detachEv\0"
	.byte	0x1
	.long	0x7c2f
	.long	0x7c35
	.uleb128 0x2
	.long	0x1bd3a
	.byte	0
	.uleb128 0xb5
	.ascii "get_id\0"
	.byte	0xd
	.byte	0xb8
	.ascii "_ZNKSt6thread6get_idEv\0"
	.long	0x79b8
	.long	0x7c63
	.long	0x7c69
	.uleb128 0x2
	.long	0x1bd53
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF27
	.byte	0xd
	.byte	0xbe
	.byte	0x5
	.ascii "_ZNSt6thread13native_handleEv\0"
	.long	0x7a35
	.long	0x7c9b
	.long	0x7ca1
	.uleb128 0x2
	.long	0x1bd3a
	.byte	0
	.uleb128 0x116
	.ascii "hardware_concurrency\0"
	.byte	0xd
	.byte	0xc3
	.byte	0x5
	.ascii "_ZNSt6thread20hardware_concurrencyEv\0"
	.long	0x1e2
	.byte	0x1
	.uleb128 0x62
	.ascii "_M_start_thread\0"
	.byte	0xd
	.byte	0xd6
	.byte	0x5
	.ascii "_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE\0"
	.long	0x7d57
	.long	0x7d67
	.uleb128 0x2
	.long	0x1bd3a
	.uleb128 0x1
	.long	0x7d67
	.uleb128 0x1
	.long	0x786
	.byte	0
	.uleb128 0xb4
	.ascii "_State_ptr\0"
	.byte	0xd
	.byte	0x48
	.byte	0xb
	.long	0x80b5
	.byte	0x1
	.uleb128 0xda
	.ascii "_State\0"
	.long	0x7df3
	.uleb128 0x117
	.ascii "~_State\0"
	.byte	0xd
	.byte	0x45
	.byte	0xf
	.ascii "_ZNSt6thread6_StateD4Ev\0"
	.byte	0x1
	.long	0x7d7c
	.long	0x7dbc
	.byte	0
	.long	0x7dc7
	.uleb128 0x2
	.long	0x1f644
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0xae
	.ascii "_State\0"
	.ascii "_ZNSt6thread6_StateC4Ev\0"
	.long	0x7dec
	.uleb128 0x2
	.long	0x1f644
	.byte	0
	.byte	0
	.uleb128 0x5f
	.secrel32	.LASF65
	.byte	0x40
	.byte	0xd
	.byte	0xee
	.byte	0xe
	.long	0x7e5d
	.uleb128 0x2b
	.secrel32	.LASF66
	.byte	0xd
	.byte	0xf0
	.byte	0x9
	.long	0x14a93
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF4
	.byte	0xd
	.byte	0xff
	.byte	0x2
	.long	0x7e1d
	.long	0x7e23
	.uleb128 0x2
	.long	0x1f62b
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF67
	.byte	0xd
	.byte	0xfb
	.byte	0x4
	.long	0x7e45
	.long	0x7e50
	.uleb128 0x9a
	.ascii "_Ind\0"
	.long	0x7e45
	.uleb128 0x8e
	.long	0xf1
	.byte	0
	.uleb128 0x2
	.long	0x1f62b
	.uleb128 0x1
	.long	0x174aa
	.byte	0
	.uleb128 0xa
	.ascii "_Tuple\0"
	.long	0x14a93
	.byte	0
	.uleb128 0x5f
	.secrel32	.LASF65
	.byte	0x28
	.byte	0xd
	.byte	0xee
	.byte	0xe
	.long	0x7ec7
	.uleb128 0x2b
	.secrel32	.LASF66
	.byte	0xd
	.byte	0xf0
	.byte	0x9
	.long	0x1678b
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF4
	.byte	0xd
	.byte	0xff
	.byte	0x2
	.long	0x7e87
	.long	0x7e8d
	.uleb128 0x2
	.long	0x1f79d
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF67
	.byte	0xd
	.byte	0xfb
	.byte	0x4
	.long	0x7eaf
	.long	0x7eba
	.uleb128 0x9a
	.ascii "_Ind\0"
	.long	0x7eaf
	.uleb128 0x8e
	.long	0xf1
	.byte	0
	.uleb128 0x2
	.long	0x1f79d
	.uleb128 0x1
	.long	0x174aa
	.byte	0
	.uleb128 0xa
	.ascii "_Tuple\0"
	.long	0x1678b
	.byte	0
	.uleb128 0xdb
	.secrel32	.LASF68
	.byte	0x30
	.byte	0xc8
	.long	0x7d7c
	.long	0x7f8d
	.uleb128 0x4c
	.long	0x7d7c
	.uleb128 0x4f
	.secrel32	.LASF69
	.long	0x7ee9
	.long	0x7ef4
	.uleb128 0x2
	.long	0x1f7b6
	.uleb128 0x1
	.long	0x1f7c0
	.byte	0
	.uleb128 0x4f
	.secrel32	.LASF69
	.long	0x7f01
	.long	0x7f0c
	.uleb128 0x2
	.long	0x1f7b6
	.uleb128 0x1
	.long	0x1f7c5
	.byte	0
	.uleb128 0x16
	.ascii "_M_func\0"
	.byte	0xd
	.byte	0xca
	.byte	0xd
	.long	0x7e5d
	.byte	0x8
	.uleb128 0xdc
	.ascii "_M_run\0"
	.byte	0xd2
	.uleb128 0x2
	.byte	0x10
	.uleb128 0x2
	.long	0x7ec7
	.long	0x7f36
	.long	0x7f3c
	.uleb128 0x2
	.long	0x1f7b6
	.byte	0
	.uleb128 0xdd
	.secrel32	.LASF70
	.long	0x7ec7
	.long	0x7f4e
	.long	0x7f59
	.uleb128 0x2
	.long	0x1f7b6
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF71
	.byte	0xd
	.byte	0xcd
	.byte	0x4
	.long	0x7f78
	.long	0x7f83
	.uleb128 0x20
	.secrel32	.LASF73
	.long	0x7f78
	.uleb128 0x10
	.long	0x2674c
	.byte	0
	.uleb128 0x2
	.long	0x1f7b6
	.uleb128 0x1
	.long	0x176f3
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x7e5d
	.byte	0
	.uleb128 0x4
	.long	0x7ec7
	.uleb128 0xdb
	.secrel32	.LASF68
	.byte	0x48
	.byte	0xc8
	.long	0x7d7c
	.long	0x8058
	.uleb128 0x4c
	.long	0x7d7c
	.uleb128 0x4f
	.secrel32	.LASF69
	.long	0x7fb4
	.long	0x7fbf
	.uleb128 0x2
	.long	0x1f7ca
	.uleb128 0x1
	.long	0x1f7d4
	.byte	0
	.uleb128 0x4f
	.secrel32	.LASF69
	.long	0x7fcc
	.long	0x7fd7
	.uleb128 0x2
	.long	0x1f7ca
	.uleb128 0x1
	.long	0x1f7d9
	.byte	0
	.uleb128 0x16
	.ascii "_M_func\0"
	.byte	0xd
	.byte	0xca
	.byte	0xd
	.long	0x7df3
	.byte	0x8
	.uleb128 0xdc
	.ascii "_M_run\0"
	.byte	0xd2
	.uleb128 0x2
	.byte	0x10
	.uleb128 0x2
	.long	0x7f92
	.long	0x8001
	.long	0x8007
	.uleb128 0x2
	.long	0x1f7ca
	.byte	0
	.uleb128 0xdd
	.secrel32	.LASF70
	.long	0x7f92
	.long	0x8019
	.long	0x8024
	.uleb128 0x2
	.long	0x1f7ca
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF71
	.byte	0xd
	.byte	0xcd
	.byte	0x4
	.long	0x8043
	.long	0x804e
	.uleb128 0x20
	.secrel32	.LASF73
	.long	0x8043
	.uleb128 0x10
	.long	0x26556
	.byte	0
	.uleb128 0x2
	.long	0x1f7ca
	.uleb128 0x1
	.long	0x17695
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x7df3
	.byte	0
	.uleb128 0x4
	.long	0x7f92
	.uleb128 0x118
	.secrel32	.LASF74
	.byte	0xd
	.byte	0x7e
	.byte	0x7
	.byte	0x1
	.long	0x807d
	.long	0x8088
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x2674c
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x2
	.long	0x1bd3a
	.uleb128 0x1
	.long	0x176f3
	.byte	0
	.uleb128 0x119
	.secrel32	.LASF74
	.byte	0xd
	.byte	0x7e
	.byte	0x7
	.byte	0x1
	.long	0x80a4
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x26556
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x2
	.long	0x1bd3a
	.uleb128 0x1
	.long	0x17695
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x79ab
	.uleb128 0x6f
	.ascii "unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >\0"
	.byte	0x11
	.word	0x10d
	.long	0x8778
	.uleb128 0x39
	.secrel32	.LASF66
	.byte	0x11
	.word	0x113
	.byte	0x21
	.long	0x16326
	.byte	0
	.uleb128 0x6e
	.secrel32	.LASF75
	.byte	0x11
	.word	0x166
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC4EOS4_\0"
	.long	0x816b
	.long	0x8176
	.uleb128 0x2
	.long	0x1f720
	.uleb128 0x1
	.long	0x1f72a
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF76
	.byte	0x11
	.word	0x186
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED4Ev\0"
	.byte	0x1
	.long	0x81c9
	.long	0x81d4
	.uleb128 0x2
	.long	0x1f720
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0xb8
	.secrel32	.LASF6
	.word	0x196
	.byte	0x13
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEaSEOS4_\0"
	.long	0x1f72f
	.long	0x822d
	.long	0x8238
	.uleb128 0x2
	.long	0x1f720
	.uleb128 0x1
	.long	0x1f72a
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF6
	.byte	0x11
	.word	0x1b0
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEaSEDn\0"
	.long	0x1f72f
	.long	0x828f
	.long	0x829a
	.uleb128 0x2
	.long	0x1f720
	.uleb128 0x1
	.long	0x2ac7
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF77
	.byte	0x11
	.word	0x1bb
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEdeEv\0"
	.long	0x16545
	.long	0x82f1
	.long	0x82f7
	.uleb128 0x2
	.long	0x1f734
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF78
	.byte	0x11
	.word	0x116
	.byte	0xd
	.long	0x14dea
	.byte	0x1
	.uleb128 0x9b
	.ascii "operator->\0"
	.word	0x1c4
	.ascii "_ZNKSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEptEv\0"
	.long	0x82f7
	.long	0x8362
	.long	0x8368
	.uleb128 0x2
	.long	0x1f734
	.byte	0
	.uleb128 0x9b
	.ascii "get\0"
	.word	0x1cd
	.ascii "_ZNKSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE3getEv\0"
	.long	0x82f7
	.long	0x83c0
	.long	0x83c6
	.uleb128 0x2
	.long	0x1f734
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF79
	.byte	0x11
	.word	0x118
	.byte	0xd
	.long	0x14b90
	.byte	0x1
	.uleb128 0x4
	.long	0x83c6
	.uleb128 0x3f
	.secrel32	.LASF80
	.byte	0x11
	.word	0x1d3
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv\0"
	.long	0x1f739
	.long	0x843a
	.long	0x8440
	.uleb128 0x2
	.long	0x1f720
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF80
	.byte	0x11
	.word	0x1d9
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv\0"
	.long	0x1f73e
	.long	0x84a2
	.long	0x84a8
	.uleb128 0x2
	.long	0x1f734
	.byte	0
	.uleb128 0xb9
	.secrel32	.LASF25
	.word	0x1de
	.ascii "_ZNKSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEcvbEv\0"
	.long	0x1ab64
	.long	0x84ff
	.long	0x8505
	.uleb128 0x2
	.long	0x1f734
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF35
	.byte	0x11
	.word	0x1e6
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE7releaseEv\0"
	.long	0x82f7
	.long	0x8561
	.long	0x8567
	.uleb128 0x2
	.long	0x1f720
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF81
	.byte	0x11
	.word	0x1f1
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE5resetEPS1_\0"
	.byte	0x1
	.long	0x85c1
	.long	0x85cc
	.uleb128 0x2
	.long	0x1f720
	.uleb128 0x1
	.long	0x82f7
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF23
	.byte	0x11
	.word	0x1fb
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE4swapERS4_\0"
	.byte	0x1
	.long	0x8625
	.long	0x8630
	.uleb128 0x2
	.long	0x1f720
	.uleb128 0x1
	.long	0x1f72f
	.byte	0
	.uleb128 0xba
	.secrel32	.LASF75
	.word	0x202
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC4ERKS4_\0"
	.long	0x8685
	.long	0x8690
	.uleb128 0x2
	.long	0x1f720
	.uleb128 0x1
	.long	0x1f743
	.byte	0
	.uleb128 0xbb
	.secrel32	.LASF6
	.word	0x203
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEaSERKS4_\0"
	.long	0x1f72f
	.long	0x86e9
	.long	0x86f4
	.uleb128 0x2
	.long	0x1f720
	.uleb128 0x1
	.long	0x1f743
	.byte	0
	.uleb128 0x11a
	.secrel32	.LASF82
	.byte	0x11
	.word	0x135
	.byte	0x2
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC4IS3_vEEPS1_\0"
	.byte	0x1
	.long	0x875a
	.long	0x8765
	.uleb128 0x5e
	.secrel32	.LASF83
	.long	0x14b90
	.uleb128 0x2
	.long	0x1f720
	.uleb128 0x1
	.long	0x82f7
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x7d7c
	.uleb128 0x60
	.ascii "_Dp\0"
	.long	0x14b90
	.byte	0
	.uleb128 0x4
	.long	0x80b5
	.uleb128 0x1b
	.ascii "__hash_base<long long unsigned int, std::thread::id>\0"
	.byte	0x1
	.byte	0x7
	.byte	0x33
	.byte	0xc
	.long	0x87d3
	.uleb128 0xa
	.ascii "_Result\0"
	.long	0xf1
	.uleb128 0xa
	.ascii "_Arg\0"
	.long	0x79b8
	.byte	0
	.uleb128 0x1f
	.ascii "hash<std::thread::id>\0"
	.byte	0x1
	.byte	0xd
	.word	0x126
	.byte	0xc
	.long	0x8846
	.uleb128 0x4c
	.long	0x877d
	.uleb128 0x9
	.secrel32	.LASF4
	.byte	0xd
	.word	0x12a
	.byte	0x7
	.ascii "_ZNKSt4hashINSt6thread2idEEclERKS1_\0"
	.long	0xe3f
	.long	0x8831
	.long	0x883c
	.uleb128 0x2
	.long	0x1bd5d
	.uleb128 0x1
	.long	0x1bd67
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x79b8
	.byte	0
	.uleb128 0x4
	.long	0x87d3
	.uleb128 0x5
	.byte	0x32
	.byte	0x3c
	.byte	0xb
	.long	0x1b58d
	.uleb128 0x5
	.byte	0x32
	.byte	0x3d
	.byte	0xb
	.long	0x1af
	.uleb128 0x5
	.byte	0x32
	.byte	0x3e
	.byte	0xb
	.long	0x1ac4b
	.uleb128 0x5
	.byte	0x32
	.byte	0x40
	.byte	0xb
	.long	0x1bd6c
	.uleb128 0x5
	.byte	0x32
	.byte	0x41
	.byte	0xb
	.long	0x1bd7b
	.uleb128 0x5
	.byte	0x32
	.byte	0x42
	.byte	0xb
	.long	0x1bd9c
	.uleb128 0x5
	.byte	0x32
	.byte	0x43
	.byte	0xb
	.long	0x1bdbb
	.uleb128 0x5
	.byte	0x32
	.byte	0x44
	.byte	0xb
	.long	0x1bdd8
	.uleb128 0x5
	.byte	0x32
	.byte	0x45
	.byte	0xb
	.long	0x1bdf2
	.uleb128 0x5
	.byte	0x32
	.byte	0x46
	.byte	0xb
	.long	0x1be10
	.uleb128 0x5
	.byte	0x32
	.byte	0x47
	.byte	0xb
	.long	0x1be2a
	.uleb128 0x1f
	.ascii "ratio<1, 1000000000>\0"
	.byte	0x1
	.byte	0x33
	.word	0x10a
	.byte	0xc
	.long	0x8941
	.uleb128 0x2e
	.ascii "num\0"
	.byte	0x33
	.word	0x111
	.byte	0x21
	.ascii "_ZNSt5ratioILx1ELx1000000000EE3numE\0"
	.long	0x1ab4d
	.byte	0x1
	.uleb128 0xbc
	.ascii "den\0"
	.word	0x114
	.ascii "_ZNSt5ratioILx1ELx1000000000EE3denE\0"
	.long	0x1ab4d
	.long	0x3b9aca00
	.uleb128 0x25
	.secrel32	.LASF84
	.long	0x110
	.byte	0x1
	.uleb128 0xbd
	.secrel32	.LASF85
	.long	0x110
	.long	0x3b9aca00
	.byte	0
	.uleb128 0x78
	.ascii "chrono\0"
	.byte	0xe
	.byte	0x37
	.byte	0xd
	.long	0xc99f
	.uleb128 0x54
	.secrel32	.LASF86
	.byte	0x8
	.byte	0xe
	.word	0x1bb
	.byte	0xe
	.long	0x9145
	.uleb128 0x9c
	.secrel32	.LASF87
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE6_S_gcdExx\0"
	.long	0x1ab3c
	.long	0x89b5
	.uleb128 0x1
	.long	0x1ab3c
	.uleb128 0x1
	.long	0x1ab3c
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF88
	.byte	0xe
	.word	0x1f0
	.byte	0xc
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC4Ev\0"
	.long	0x89fe
	.long	0x8a04
	.uleb128 0x2
	.long	0x1be47
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF88
	.byte	0xe
	.word	0x1f2
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC4ERKS3_\0"
	.long	0x8a51
	.long	0x8a5c
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF89
	.byte	0xe
	.word	0x204
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEED4Ev\0"
	.long	0x8aa5
	.long	0x8ab0
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x9d
	.secrel32	.LASF6
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEaSERKS3_\0"
	.long	0x1be56
	.long	0x8afe
	.long	0x8b09
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x22
	.ascii "rep\0"
	.byte	0xe
	.word	0x1e7
	.byte	0x8
	.long	0x110
	.uleb128 0x4
	.long	0x8b09
	.uleb128 0x9
	.secrel32	.LASF90
	.byte	0xe
	.word	0x209
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv\0"
	.long	0x8b09
	.long	0x8b6d
	.long	0x8b73
	.uleb128 0x2
	.long	0x1be5b
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF91
	.byte	0xe
	.word	0x20f
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEpsEv\0"
	.long	0x8950
	.long	0x8bc1
	.long	0x8bc7
	.uleb128 0x2
	.long	0x1be5b
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF92
	.byte	0xe
	.word	0x213
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEngEv\0"
	.long	0x8950
	.long	0x8c15
	.long	0x8c1b
	.uleb128 0x2
	.long	0x1be5b
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xe
	.word	0x217
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEppEv\0"
	.long	0x1be56
	.long	0x8c68
	.long	0x8c6e
	.uleb128 0x2
	.long	0x1be47
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xe
	.word	0x21e
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEppEi\0"
	.long	0x8950
	.long	0x8cbb
	.long	0x8cc6
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xe
	.word	0x222
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEmmEv\0"
	.long	0x1be56
	.long	0x8d13
	.long	0x8d19
	.uleb128 0x2
	.long	0x1be47
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xe
	.word	0x229
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEmmEi\0"
	.long	0x8950
	.long	0x8d66
	.long	0x8d71
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF42
	.byte	0xe
	.word	0x22d
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEpLERKS3_\0"
	.long	0x1be56
	.long	0x8dc2
	.long	0x8dcd
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF43
	.byte	0xe
	.word	0x234
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEmIERKS3_\0"
	.long	0x1be56
	.long	0x8e1e
	.long	0x8e29
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF93
	.byte	0xe
	.word	0x23b
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEmLERKx\0"
	.long	0x1be56
	.long	0x8e78
	.long	0x8e83
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x1
	.long	0x1be65
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF94
	.byte	0xe
	.word	0x242
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEdVERKx\0"
	.long	0x1be56
	.long	0x8ed2
	.long	0x8edd
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x1
	.long	0x1be65
	.byte	0
	.uleb128 0x30
	.ascii "zero\0"
	.byte	0xe
	.word	0x25f
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv\0"
	.long	0x8950
	.uleb128 0x30
	.ascii "min\0"
	.byte	0xe
	.word	0x263
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE3minEv\0"
	.long	0x8950
	.uleb128 0x30
	.ascii "max\0"
	.byte	0xe
	.word	0x267
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE3maxEv\0"
	.long	0x8950
	.uleb128 0x56
	.ascii "__r\0"
	.byte	0xe
	.word	0x26b
	.byte	0x6
	.long	0x8b09
	.byte	0
	.byte	0x3
	.uleb128 0x24
	.secrel32	.LASF95
	.byte	0xe
	.word	0x201
	.byte	0xe
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC4IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE\0"
	.long	0x903c
	.long	0x9047
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF98
	.byte	0xe
	.word	0x201
	.byte	0xe
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC4IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE\0"
	.long	0x90c3
	.long	0x90ce
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcbbb
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF99
	.byte	0xe
	.word	0x1f9
	.byte	0x17
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC4IxvEERKT_\0"
	.long	0x9127
	.long	0x9132
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x2
	.long	0x1be47
	.uleb128 0x1
	.long	0x1be6a
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.byte	0
	.uleb128 0x4
	.long	0x8950
	.uleb128 0x1f
	.ascii "duration_values<long long int>\0"
	.byte	0x1
	.byte	0xe
	.word	0x19d
	.byte	0xe
	.long	0x921b
	.uleb128 0x30
	.ascii "zero\0"
	.byte	0xe
	.word	0x1a0
	.byte	0x2
	.ascii "_ZNSt6chrono15duration_valuesIxE4zeroEv\0"
	.long	0x110
	.uleb128 0x30
	.ascii "max\0"
	.byte	0xe
	.word	0x1a4
	.byte	0x2
	.ascii "_ZNSt6chrono15duration_valuesIxE3maxEv\0"
	.long	0x110
	.uleb128 0x30
	.ascii "min\0"
	.byte	0xe
	.word	0x1a8
	.byte	0x2
	.ascii "_ZNSt6chrono15duration_valuesIxE3minEv\0"
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.byte	0
	.uleb128 0xde
	.ascii "_V2\0"
	.byte	0xe
	.word	0x44e
	.byte	0x16
	.long	0x9393
	.uleb128 0x11b
	.ascii "system_clock\0"
	.byte	0x1
	.byte	0xe
	.word	0x456
	.byte	0xc
	.uleb128 0x2e
	.ascii "is_steady\0"
	.byte	0xe
	.word	0x461
	.byte	0x1d
	.ascii "_ZNSt6chrono3_V212system_clock9is_steadyE\0"
	.long	0x1ab6c
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF102
	.byte	0xe
	.word	0x45b
	.byte	0x3b
	.long	0x9393
	.uleb128 0x4
	.long	0x927b
	.uleb128 0x30
	.ascii "now\0"
	.byte	0xe
	.word	0x464
	.byte	0x7
	.ascii "_ZNSt6chrono3_V212system_clock3nowEv\0"
	.long	0x927b
	.uleb128 0x26
	.ascii "to_time_t\0"
	.byte	0xe
	.word	0x468
	.byte	0x7
	.ascii "_ZNSt6chrono3_V212system_clock9to_time_tERKNS_10time_pointIS1_NS_8durationIxSt5ratioILx1ELx1000000000EEEEEE\0"
	.long	0x1af
	.long	0x9348
	.uleb128 0x1
	.long	0x1be6f
	.byte	0
	.uleb128 0xbe
	.ascii "from_time_t\0"
	.byte	0xe
	.word	0x46f
	.ascii "_ZNSt6chrono3_V212system_clock11from_time_tEx\0"
	.long	0x927b
	.uleb128 0x1
	.long	0x1af
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "time_point<std::chrono::_V2::system_clock, std::chrono::duration<long long int, std::ratio<1, 1000000000> > >\0"
	.byte	0x8
	.byte	0xe
	.word	0x358
	.byte	0xe
	.long	0x99ac
	.uleb128 0x24
	.secrel32	.LASF102
	.byte	0xe
	.word	0x362
	.byte	0xc
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEC4Ev\0"
	.long	0x947c
	.long	0x9482
	.uleb128 0x2
	.long	0x1be74
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF102
	.byte	0xe
	.word	0x365
	.byte	0x15
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEC4ERKS6_\0"
	.long	0x94f7
	.long	0x9502
	.uleb128 0x2
	.long	0x1be74
	.uleb128 0x1
	.long	0x1be79
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF88
	.byte	0xe
	.word	0x35e
	.byte	0x14
	.long	0x8950
	.uleb128 0x4
	.long	0x9502
	.uleb128 0x63
	.ascii "time_since_epoch\0"
	.byte	0xe
	.word	0x372
	.byte	0x2
	.ascii "_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv\0"
	.long	0x9502
	.long	0x95a7
	.long	0x95ad
	.uleb128 0x2
	.long	0x1be7e
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xe
	.word	0x377
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEppEv\0"
	.long	0x1be88
	.long	0x9622
	.long	0x9628
	.uleb128 0x2
	.long	0x1be74
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xe
	.word	0x37e
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEppEi\0"
	.long	0x9393
	.long	0x969d
	.long	0x96a8
	.uleb128 0x2
	.long	0x1be74
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xe
	.word	0x382
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEmmEv\0"
	.long	0x1be88
	.long	0x971d
	.long	0x9723
	.uleb128 0x2
	.long	0x1be74
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xe
	.word	0x389
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEmmEi\0"
	.long	0x9393
	.long	0x9798
	.long	0x97a3
	.uleb128 0x2
	.long	0x1be74
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF42
	.byte	0xe
	.word	0x38f
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEpLERKS6_\0"
	.long	0x1be88
	.long	0x981c
	.long	0x9827
	.uleb128 0x2
	.long	0x1be74
	.uleb128 0x1
	.long	0x1be79
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF43
	.byte	0xe
	.word	0x396
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEmIERKS6_\0"
	.long	0x1be88
	.long	0x98a0
	.long	0x98ab
	.uleb128 0x2
	.long	0x1be74
	.uleb128 0x1
	.long	0x1be79
	.byte	0
	.uleb128 0x30
	.ascii "min\0"
	.byte	0xe
	.word	0x39e
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE3minEv\0"
	.long	0x9393
	.uleb128 0x30
	.ascii "max\0"
	.byte	0xe
	.word	0x3a2
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE3maxEv\0"
	.long	0x9393
	.uleb128 0x56
	.ascii "__d\0"
	.byte	0xe
	.word	0x3a6
	.byte	0xb
	.long	0x9502
	.byte	0
	.byte	0x3
	.uleb128 0x3
	.secrel32	.LASF103
	.long	0x9229
	.uleb128 0xa
	.ascii "_Dur\0"
	.long	0x8950
	.byte	0
	.uleb128 0x4
	.long	0x9393
	.uleb128 0x1f
	.ascii "duration<long long int, std::ratio<1, 1> >\0"
	.byte	0x8
	.byte	0xe
	.word	0x1bb
	.byte	0xe
	.long	0xa00e
	.uleb128 0x9c
	.secrel32	.LASF87
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEE6_S_gcdExx\0"
	.long	0x1ab3c
	.long	0x9a34
	.uleb128 0x1
	.long	0x1ab3c
	.uleb128 0x1
	.long	0x1ab3c
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF88
	.byte	0xe
	.word	0x1f0
	.byte	0xc
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC4Ev\0"
	.long	0x9a74
	.long	0x9a7a
	.uleb128 0x2
	.long	0x1be8d
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF88
	.byte	0xe
	.word	0x1f2
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC4ERKS3_\0"
	.long	0x9abe
	.long	0x9ac9
	.uleb128 0x2
	.long	0x1be8d
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF89
	.byte	0xe
	.word	0x204
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEED4Ev\0"
	.long	0x9b09
	.long	0x9b14
	.uleb128 0x2
	.long	0x1be8d
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x9d
	.secrel32	.LASF6
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEaSERKS3_\0"
	.long	0x1be9c
	.long	0x9b59
	.long	0x9b64
	.uleb128 0x2
	.long	0x1be8d
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x22
	.ascii "rep\0"
	.byte	0xe
	.word	0x1e7
	.byte	0x8
	.long	0x110
	.uleb128 0x4
	.long	0x9b64
	.uleb128 0x9
	.secrel32	.LASF90
	.byte	0xe
	.word	0x209
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv\0"
	.long	0x9b64
	.long	0x9bbf
	.long	0x9bc5
	.uleb128 0x2
	.long	0x1bea1
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF91
	.byte	0xe
	.word	0x20f
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEEpsEv\0"
	.long	0x99b1
	.long	0x9c0a
	.long	0x9c10
	.uleb128 0x2
	.long	0x1bea1
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF92
	.byte	0xe
	.word	0x213
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEEngEv\0"
	.long	0x99b1
	.long	0x9c55
	.long	0x9c5b
	.uleb128 0x2
	.long	0x1bea1
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xe
	.word	0x217
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEppEv\0"
	.long	0x1be9c
	.long	0x9c9f
	.long	0x9ca5
	.uleb128 0x2
	.long	0x1be8d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xe
	.word	0x21e
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEppEi\0"
	.long	0x99b1
	.long	0x9ce9
	.long	0x9cf4
	.uleb128 0x2
	.long	0x1be8d
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xe
	.word	0x222
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEmmEv\0"
	.long	0x1be9c
	.long	0x9d38
	.long	0x9d3e
	.uleb128 0x2
	.long	0x1be8d
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xe
	.word	0x229
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEmmEi\0"
	.long	0x99b1
	.long	0x9d82
	.long	0x9d8d
	.uleb128 0x2
	.long	0x1be8d
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF42
	.byte	0xe
	.word	0x22d
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEpLERKS3_\0"
	.long	0x1be9c
	.long	0x9dd5
	.long	0x9de0
	.uleb128 0x2
	.long	0x1be8d
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF43
	.byte	0xe
	.word	0x234
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEmIERKS3_\0"
	.long	0x1be9c
	.long	0x9e28
	.long	0x9e33
	.uleb128 0x2
	.long	0x1be8d
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF93
	.byte	0xe
	.word	0x23b
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEmLERKx\0"
	.long	0x1be9c
	.long	0x9e79
	.long	0x9e84
	.uleb128 0x2
	.long	0x1be8d
	.uleb128 0x1
	.long	0x1beab
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF94
	.byte	0xe
	.word	0x242
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEdVERKx\0"
	.long	0x1be9c
	.long	0x9eca
	.long	0x9ed5
	.uleb128 0x2
	.long	0x1be8d
	.uleb128 0x1
	.long	0x1beab
	.byte	0
	.uleb128 0x30
	.ascii "zero\0"
	.byte	0xe
	.word	0x25f
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEE4zeroEv\0"
	.long	0x99b1
	.uleb128 0x30
	.ascii "min\0"
	.byte	0xe
	.word	0x263
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEE3minEv\0"
	.long	0x99b1
	.uleb128 0x30
	.ascii "max\0"
	.byte	0xe
	.word	0x267
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEE3maxEv\0"
	.long	0x99b1
	.uleb128 0x56
	.ascii "__r\0"
	.byte	0xe
	.word	0x26b
	.byte	0x6
	.long	0x9b64
	.byte	0
	.byte	0x3
	.uleb128 0x55
	.secrel32	.LASF99
	.byte	0xe
	.word	0x1f9
	.byte	0x17
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC4IxvEERKT_\0"
	.long	0x9ff0
	.long	0x9ffb
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x2
	.long	0x1be8d
	.uleb128 0x1
	.long	0x1be6a
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x5e
	.secrel32	.LASF101
	.long	0xcb3f
	.byte	0
	.uleb128 0x4
	.long	0x99b1
	.uleb128 0x54
	.secrel32	.LASF98
	.byte	0x8
	.byte	0xe
	.word	0x1bb
	.byte	0xe
	.long	0xa76c
	.uleb128 0x9c
	.secrel32	.LASF87
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE6_S_gcdExx\0"
	.long	0x1ab3c
	.long	0xa072
	.uleb128 0x1
	.long	0x1ab3c
	.uleb128 0x1
	.long	0x1ab3c
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF88
	.byte	0xe
	.word	0x1f0
	.byte	0xc
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC4Ev\0"
	.long	0xa0b5
	.long	0xa0bb
	.uleb128 0x2
	.long	0x1beb0
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF88
	.byte	0xe
	.word	0x1f2
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC4ERKS3_\0"
	.long	0xa102
	.long	0xa10d
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF89
	.byte	0xe
	.word	0x204
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEED4Ev\0"
	.long	0xa150
	.long	0xa15b
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x9d
	.secrel32	.LASF6
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEaSERKS3_\0"
	.long	0x1bebf
	.long	0xa1a3
	.long	0xa1ae
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0x22
	.ascii "rep\0"
	.byte	0xe
	.word	0x1e7
	.byte	0x8
	.long	0x110
	.uleb128 0x4
	.long	0xa1ae
	.uleb128 0x9
	.secrel32	.LASF90
	.byte	0xe
	.word	0x209
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv\0"
	.long	0xa1ae
	.long	0xa20c
	.long	0xa212
	.uleb128 0x2
	.long	0x1bec4
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF91
	.byte	0xe
	.word	0x20f
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEEpsEv\0"
	.long	0xa013
	.long	0xa25a
	.long	0xa260
	.uleb128 0x2
	.long	0x1bec4
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF92
	.byte	0xe
	.word	0x213
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEEngEv\0"
	.long	0xa013
	.long	0xa2a8
	.long	0xa2ae
	.uleb128 0x2
	.long	0x1bec4
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xe
	.word	0x217
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEppEv\0"
	.long	0x1bebf
	.long	0xa2f5
	.long	0xa2fb
	.uleb128 0x2
	.long	0x1beb0
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xe
	.word	0x21e
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEppEi\0"
	.long	0xa013
	.long	0xa342
	.long	0xa34d
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xe
	.word	0x222
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEmmEv\0"
	.long	0x1bebf
	.long	0xa394
	.long	0xa39a
	.uleb128 0x2
	.long	0x1beb0
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xe
	.word	0x229
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEmmEi\0"
	.long	0xa013
	.long	0xa3e1
	.long	0xa3ec
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF42
	.byte	0xe
	.word	0x22d
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEpLERKS3_\0"
	.long	0x1bebf
	.long	0xa437
	.long	0xa442
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF43
	.byte	0xe
	.word	0x234
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEmIERKS3_\0"
	.long	0x1bebf
	.long	0xa48d
	.long	0xa498
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF93
	.byte	0xe
	.word	0x23b
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEmLERKx\0"
	.long	0x1bebf
	.long	0xa4e1
	.long	0xa4ec
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x1
	.long	0x1bece
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF94
	.byte	0xe
	.word	0x242
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEdVERKx\0"
	.long	0x1bebf
	.long	0xa535
	.long	0xa540
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x1
	.long	0x1bece
	.byte	0
	.uleb128 0x30
	.ascii "zero\0"
	.byte	0xe
	.word	0x25f
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv\0"
	.long	0xa013
	.uleb128 0x30
	.ascii "min\0"
	.byte	0xe
	.word	0x263
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE3minEv\0"
	.long	0xa013
	.uleb128 0x30
	.ascii "max\0"
	.byte	0xe
	.word	0x267
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE3maxEv\0"
	.long	0xa013
	.uleb128 0x56
	.ascii "__r\0"
	.byte	0xe
	.word	0x26b
	.byte	0x6
	.long	0xa1ae
	.byte	0
	.byte	0x3
	.uleb128 0x24
	.secrel32	.LASF95
	.byte	0xe
	.word	0x201
	.byte	0xe
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC4IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE\0"
	.long	0xa687
	.long	0xa692
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF99
	.byte	0xe
	.word	0x1f9
	.byte	0x17
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC4IxvEERKT_\0"
	.long	0xa6e5
	.long	0xa6f0
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x1
	.long	0x1be6a
	.byte	0
	.uleb128 0xb0
	.ascii "duration<int>\0"
	.byte	0xe
	.word	0x1f9
	.byte	0x17
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC4IivEERKT_\0"
	.long	0xa74e
	.long	0xa759
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x184
	.uleb128 0x2
	.long	0x1beb0
	.uleb128 0x1
	.long	0x1b6e7
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcbbb
	.byte	0
	.uleb128 0x4
	.long	0xa013
	.uleb128 0x11c
	.byte	0xe
	.word	0x529
	.byte	0x1f
	.long	0xcc52
	.uleb128 0x11d
	.secrel32	.LASF7
	.byte	0xe
	.word	0x181
	.byte	0xf
	.uleb128 0x1f
	.ascii "duration<float, std::ratio<1, 1> >\0"
	.byte	0x4
	.byte	0xe
	.word	0x1bb
	.byte	0xe
	.long	0xae6b
	.uleb128 0x9c
	.secrel32	.LASF87
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEE6_S_gcdExx\0"
	.long	0x1ab3c
	.long	0xa800
	.uleb128 0x1
	.long	0x1ab3c
	.uleb128 0x1
	.long	0x1ab3c
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF88
	.byte	0xe
	.word	0x1f0
	.byte	0xc
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC4Ev\0"
	.long	0xa840
	.long	0xa846
	.uleb128 0x2
	.long	0x1f585
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF88
	.byte	0xe
	.word	0x1f2
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC4ERKS3_\0"
	.long	0xa88a
	.long	0xa895
	.uleb128 0x2
	.long	0x1f585
	.uleb128 0x1
	.long	0x1f58f
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF89
	.byte	0xe
	.word	0x204
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEED4Ev\0"
	.long	0xa8d5
	.long	0xa8e0
	.uleb128 0x2
	.long	0x1f585
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x9d
	.secrel32	.LASF6
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEaSERKS3_\0"
	.long	0x1f594
	.long	0xa925
	.long	0xa930
	.uleb128 0x2
	.long	0x1f585
	.uleb128 0x1
	.long	0x1f58f
	.byte	0
	.uleb128 0x22
	.ascii "rep\0"
	.byte	0xe
	.word	0x1e7
	.byte	0x8
	.long	0x4ec
	.uleb128 0x4
	.long	0xa930
	.uleb128 0x9
	.secrel32	.LASF90
	.byte	0xe
	.word	0x209
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIfSt5ratioILx1ELx1EEE5countEv\0"
	.long	0xa930
	.long	0xa98b
	.long	0xa991
	.uleb128 0x2
	.long	0x1f599
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF91
	.byte	0xe
	.word	0x20f
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIfSt5ratioILx1ELx1EEEpsEv\0"
	.long	0xa785
	.long	0xa9d6
	.long	0xa9dc
	.uleb128 0x2
	.long	0x1f599
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF92
	.byte	0xe
	.word	0x213
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIfSt5ratioILx1ELx1EEEngEv\0"
	.long	0xa785
	.long	0xaa21
	.long	0xaa27
	.uleb128 0x2
	.long	0x1f599
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xe
	.word	0x217
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEppEv\0"
	.long	0x1f594
	.long	0xaa6b
	.long	0xaa71
	.uleb128 0x2
	.long	0x1f585
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF40
	.byte	0xe
	.word	0x21e
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEppEi\0"
	.long	0xa785
	.long	0xaab5
	.long	0xaac0
	.uleb128 0x2
	.long	0x1f585
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xe
	.word	0x222
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEmmEv\0"
	.long	0x1f594
	.long	0xab04
	.long	0xab0a
	.uleb128 0x2
	.long	0x1f585
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF41
	.byte	0xe
	.word	0x229
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEmmEi\0"
	.long	0xa785
	.long	0xab4e
	.long	0xab59
	.uleb128 0x2
	.long	0x1f585
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF42
	.byte	0xe
	.word	0x22d
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEpLERKS3_\0"
	.long	0x1f594
	.long	0xaba1
	.long	0xabac
	.uleb128 0x2
	.long	0x1f585
	.uleb128 0x1
	.long	0x1f58f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF43
	.byte	0xe
	.word	0x234
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEmIERKS3_\0"
	.long	0x1f594
	.long	0xabf4
	.long	0xabff
	.uleb128 0x2
	.long	0x1f585
	.uleb128 0x1
	.long	0x1f58f
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF93
	.byte	0xe
	.word	0x23b
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEmLERKf\0"
	.long	0x1f594
	.long	0xac45
	.long	0xac50
	.uleb128 0x2
	.long	0x1f585
	.uleb128 0x1
	.long	0x1f5a3
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF94
	.byte	0xe
	.word	0x242
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEdVERKf\0"
	.long	0x1f594
	.long	0xac96
	.long	0xaca1
	.uleb128 0x2
	.long	0x1f585
	.uleb128 0x1
	.long	0x1f5a3
	.byte	0
	.uleb128 0x30
	.ascii "zero\0"
	.byte	0xe
	.word	0x25f
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEE4zeroEv\0"
	.long	0xa785
	.uleb128 0x30
	.ascii "min\0"
	.byte	0xe
	.word	0x263
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEE3minEv\0"
	.long	0xa785
	.uleb128 0x30
	.ascii "max\0"
	.byte	0xe
	.word	0x267
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEE3maxEv\0"
	.long	0xa785
	.uleb128 0x56
	.ascii "__r\0"
	.byte	0xe
	.word	0x26b
	.byte	0x6
	.long	0xa930
	.byte	0
	.byte	0x3
	.uleb128 0x24
	.secrel32	.LASF86
	.byte	0xe
	.word	0x201
	.byte	0xe
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC4IxS1_ILx1ELx1000000000EEvEERKNS0_IT_T0_EE\0"
	.long	0xade5
	.long	0xadf0
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0x88a3
	.uleb128 0x2
	.long	0x1f585
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0xb0
	.ascii "duration<float>\0"
	.byte	0xe
	.word	0x1f9
	.byte	0x17
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC4IfvEERKT_\0"
	.long	0xae4d
	.long	0xae58
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x4ec
	.uleb128 0x2
	.long	0x1f585
	.uleb128 0x1
	.long	0x1f5a8
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x4ec
	.uleb128 0x5e
	.secrel32	.LASF101
	.long	0xcb3f
	.byte	0
	.uleb128 0x4
	.long	0xa785
	.uleb128 0x1b
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1> >, std::ratio<1, 1000000000>, long long int, true, false>\0"
	.byte	0x1
	.byte	0xe
	.byte	0xcc
	.byte	0xe
	.long	0xafdb
	.uleb128 0x40
	.secrel32	.LASF104
	.byte	0xe
	.byte	0xd0
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE\0"
	.long	0x99b1
	.long	0xafab
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x99b1
	.uleb128 0xa
	.ascii "_CF\0"
	.long	0x88a3
	.uleb128 0xa
	.ascii "_CR\0"
	.long	0x110
	.uleb128 0x25
	.secrel32	.LASF106
	.long	0x1ab64
	.byte	0x1
	.uleb128 0x25
	.secrel32	.LASF107
	.long	0x1ab64
	.byte	0
	.byte	0
	.uleb128 0x1b
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, std::ratio<1000000, 1>, long long int, false, true>\0"
	.byte	0x1
	.byte	0xe
	.byte	0xd9
	.byte	0xe
	.long	0xb15f
	.uleb128 0x40
	.secrel32	.LASF108
	.byte	0xe
	.byte	0xdd
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE\0"
	.long	0x8950
	.long	0xb12f
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcbbb
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x8950
	.uleb128 0xa
	.ascii "_CF\0"
	.long	0xcd26
	.uleb128 0xa
	.ascii "_CR\0"
	.long	0x110
	.uleb128 0x25
	.secrel32	.LASF106
	.long	0x1ab64
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF107
	.long	0x1ab64
	.byte	0x1
	.byte	0
	.uleb128 0x1b
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, std::ratio<1, 1>, long long int, true, true>\0"
	.byte	0x1
	.byte	0xe
	.byte	0xc0
	.byte	0xe
	.long	0xb2c9
	.uleb128 0x40
	.secrel32	.LASF104
	.byte	0xe
	.byte	0xc4
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE\0"
	.long	0x8950
	.long	0xb299
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x8950
	.uleb128 0xa
	.ascii "_CF\0"
	.long	0xcb3f
	.uleb128 0xa
	.ascii "_CR\0"
	.long	0x110
	.uleb128 0x25
	.secrel32	.LASF106
	.long	0x1ab64
	.byte	0x1
	.uleb128 0x25
	.secrel32	.LASF107
	.long	0x1ab64
	.byte	0x1
	.byte	0
	.uleb128 0x1b
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, std::ratio<1000000000, 1>, long long int, false, true>\0"
	.byte	0x1
	.byte	0xe
	.byte	0xd9
	.byte	0xe
	.long	0xb450
	.uleb128 0x40
	.secrel32	.LASF109
	.byte	0xe
	.byte	0xdd
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE\0"
	.long	0x8950
	.long	0xb420
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcb3f
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x8950
	.uleb128 0xa
	.ascii "_CF\0"
	.long	0x145c9
	.uleb128 0xa
	.ascii "_CR\0"
	.long	0x110
	.uleb128 0x25
	.secrel32	.LASF106
	.long	0x1ab64
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF107
	.long	0x1ab64
	.byte	0x1
	.byte	0
	.uleb128 0x1b
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1> >, std::ratio<1, 1000>, long long int, true, false>\0"
	.byte	0x1
	.byte	0xe
	.byte	0xcc
	.byte	0xe
	.long	0xb5af
	.uleb128 0x40
	.secrel32	.LASF108
	.byte	0xe
	.byte	0xd0
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE\0"
	.long	0x99b1
	.long	0xb57f
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcbbb
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x99b1
	.uleb128 0xa
	.ascii "_CF\0"
	.long	0xcbbb
	.uleb128 0xa
	.ascii "_CR\0"
	.long	0x110
	.uleb128 0x25
	.secrel32	.LASF106
	.long	0x1ab64
	.byte	0x1
	.uleb128 0x25
	.secrel32	.LASF107
	.long	0x1ab64
	.byte	0
	.byte	0
	.uleb128 0x1b
	.ascii "__duration_cast_impl<std::chrono::duration<float, std::ratio<1, 1> >, std::ratio<1, 1000000000>, float, true, false>\0"
	.byte	0x1
	.byte	0xe
	.byte	0xcc
	.byte	0xe
	.long	0xb70a
	.uleb128 0x40
	.secrel32	.LASF104
	.byte	0xe
	.byte	0xd0
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIfSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EEfLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE\0"
	.long	0xa785
	.long	0xb6da
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0xa785
	.uleb128 0xa
	.ascii "_CF\0"
	.long	0x88a3
	.uleb128 0xa
	.ascii "_CR\0"
	.long	0x4ec
	.uleb128 0x25
	.secrel32	.LASF106
	.long	0x1ab64
	.byte	0x1
	.uleb128 0x25
	.secrel32	.LASF107
	.long	0x1ab64
	.byte	0
	.byte	0
	.uleb128 0x1b
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1000> >, std::ratio<1000, 1>, long long int, false, true>\0"
	.byte	0x1
	.byte	0xe
	.byte	0xd9
	.byte	0xe
	.long	0xb879
	.uleb128 0x40
	.secrel32	.LASF109
	.byte	0xe
	.byte	0xdd
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE\0"
	.long	0xa013
	.long	0xb849
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcb3f
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0xa013
	.uleb128 0xa
	.ascii "_CF\0"
	.long	0xce2f
	.uleb128 0xa
	.ascii "_CR\0"
	.long	0x110
	.uleb128 0x25
	.secrel32	.LASF106
	.long	0x1ab64
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF107
	.long	0x1ab64
	.byte	0x1
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF110
	.byte	0xe
	.byte	0xf0
	.byte	0xd
	.long	0x16ee7
	.uleb128 0x28
	.ascii "duration_cast<std::chrono::duration<long long int, std::ratio<1, 1000> >, long long int, std::ratio<1> >\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE\0"
	.long	0xb879
	.long	0xb9b5
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0xa013
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcb3f
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF110
	.byte	0xe
	.byte	0xf0
	.byte	0xd
	.long	0x168d4
	.uleb128 0x28
	.ascii "duration_cast<std::chrono::duration<float>, long long int, std::ratio<1, 1000000000> >\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIfSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE\0"
	.long	0xb9b5
	.long	0xbae5
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0xa785
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x26
	.ascii "operator-<long long int, std::ratio<1, 1000>, long long int, std::ratio<1, 1000000000> >\0"
	.byte	0xe
	.word	0x284
	.byte	0x7
	.ascii "_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_\0"
	.long	0x10fb1
	.long	0xbbfe
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0xcbbb
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0x88a3
	.uleb128 0x1
	.long	0x1beba
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x26
	.ascii "operator-<long long int, std::ratio<1, 1000000000>, long long int, std::ratio<1> >\0"
	.byte	0xe
	.word	0x284
	.byte	0x7
	.ascii "_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_\0"
	.long	0xcf36
	.long	0xbd0e
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0x88a3
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.uleb128 0x1
	.long	0x1be51
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x26
	.ascii "operator-<long long int, std::ratio<1, 1000>, long long int, std::ratio<1> >\0"
	.byte	0xe
	.word	0x284
	.byte	0x7
	.ascii "_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_\0"
	.long	0x14790
	.long	0xbe12
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0xcbbb
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.uleb128 0x1
	.long	0x1beba
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF110
	.byte	0xe
	.byte	0xf0
	.byte	0xd
	.long	0xcb28
	.uleb128 0x28
	.ascii "duration_cast<std::chrono::duration<long long int>, long long int, std::ratio<1, 1000> >\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE\0"
	.long	0xbe12
	.long	0xbf3e
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x99b1
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcbbb
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF110
	.byte	0xe
	.byte	0xf0
	.byte	0xd
	.long	0xce18
	.uleb128 0x28
	.ascii "duration_cast<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, long long int, std::ratio<1> >\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE\0"
	.long	0xbf3e
	.long	0xc086
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x8950
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcb3f
	.uleb128 0x1
	.long	0x1be97
	.byte	0
	.uleb128 0x26
	.ascii "operator-<long long int, std::ratio<1, 1000000000>, long long int, std::ratio<1, 1000000000> >\0"
	.byte	0xe
	.word	0x284
	.byte	0x7
	.ascii "_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_\0"
	.long	0xcab6
	.long	0xc198
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0x88a3
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0x88a3
	.uleb128 0x1
	.long	0x1be51
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x28
	.ascii "duration_cast<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, long long int, std::ratio<1, 1000000000> >\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE\0"
	.long	0xbf3e
	.long	0xc2d6
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x8950
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x26
	.ascii "operator<=><long long int, std::ratio<1, 1000>, long long int, std::ratio<1, 1000> >\0"
	.byte	0xe
	.word	0x302
	.byte	0x7
	.ascii "_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE\0"
	.long	0x11eb
	.long	0xc3ba
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0xcbbb
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcbbb
	.uleb128 0x1
	.long	0x1beba
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0x28
	.ascii "duration_cast<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, long long int, std::ratio<1, 1000> >\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE\0"
	.long	0xbf3e
	.long	0xc4ff
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x8950
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcbbb
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0x28
	.ascii "duration_cast<std::chrono::duration<long long int>, long long int, std::ratio<1, 1000000000> >\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE\0"
	.long	0xbe12
	.long	0xc62b
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x99b1
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x26
	.ascii "operator-<std::chrono::_V2::system_clock, std::chrono::duration<long long int, std::ratio<1, 1000000000> >, std::chrono::duration<long long int, std::ratio<1, 1000000000> > >\0"
	.byte	0xe
	.word	0x402
	.byte	0x7
	.ascii "_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE\0"
	.long	0xcab6
	.long	0xc7af
	.uleb128 0x3
	.secrel32	.LASF103
	.long	0x9229
	.uleb128 0xa
	.ascii "_Dur1\0"
	.long	0x8950
	.uleb128 0xa
	.ascii "_Dur2\0"
	.long	0x8950
	.uleb128 0x1
	.long	0x1bed3
	.uleb128 0x1
	.long	0x1bed3
	.byte	0
	.uleb128 0x26
	.ascii "operator<=><long long int, std::ratio<1, 1000000000>, long long int, std::ratio<1, 1000> >\0"
	.byte	0xe
	.word	0x302
	.byte	0x7
	.ascii "_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE\0"
	.long	0x11eb
	.long	0xc8ac
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0x88a3
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcbbb
	.uleb128 0x1
	.long	0x1be51
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0xbe
	.ascii "operator<=><long long int, std::ratio<1, 1000000000>, long long int, std::ratio<1, 1000000000> >\0"
	.byte	0xe
	.word	0x302
	.ascii "_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE\0"
	.long	0x11eb
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0x88a3
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0x88a3
	.uleb128 0x1
	.long	0x1be51
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "__success_type<long long int>\0"
	.byte	0x1
	.byte	0x26
	.word	0x106
	.byte	0xc
	.long	0xc9d1
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x110
	.byte	0
	.uleb128 0x1f
	.ascii "common_type<long long int, long long int>\0"
	.byte	0x1
	.byte	0x26
	.word	0x91b
	.byte	0xc
	.long	0xca1c
	.uleb128 0x4c
	.long	0xc99f
	.uleb128 0xbf
	.ascii "_Tp\0"
	.uleb128 0x10
	.long	0x110
	.uleb128 0x10
	.long	0x110
	.byte	0
	.byte	0
	.uleb128 0x1b
	.ascii "common_type<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, std::chrono::duration<long long int, std::ratio<1, 1000000000> > >\0"
	.byte	0x1
	.byte	0xe
	.byte	0x70
	.byte	0xc
	.long	0xcad4
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0xe
	.byte	0x73
	.byte	0xd
	.long	0x8950
	.uleb128 0xbf
	.ascii "_Tp\0"
	.uleb128 0x10
	.long	0x8950
	.uleb128 0x10
	.long	0x8950
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "enable_if<true, std::chrono::duration<long long int, std::ratio<1, 1> > >\0"
	.byte	0x1
	.byte	0x26
	.word	0x8b9
	.byte	0xc
	.long	0xcb3f
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x8ba
	.byte	0x13
	.long	0x99b1
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x99b1
	.byte	0
	.uleb128 0x1f
	.ascii "ratio<1, 1>\0"
	.byte	0x1
	.byte	0x33
	.word	0x10a
	.byte	0xc
	.long	0xcbbb
	.uleb128 0x2e
	.ascii "num\0"
	.byte	0x33
	.word	0x111
	.byte	0x21
	.ascii "_ZNSt5ratioILx1ELx1EE3numE\0"
	.long	0x1ab4d
	.byte	0x1
	.uleb128 0x2e
	.ascii "den\0"
	.byte	0x33
	.word	0x114
	.byte	0x21
	.ascii "_ZNSt5ratioILx1ELx1EE3denE\0"
	.long	0x1ab4d
	.byte	0x1
	.uleb128 0x25
	.secrel32	.LASF84
	.long	0x110
	.byte	0x1
	.uleb128 0x49
	.secrel32	.LASF85
	.long	0x110
	.byte	0
	.uleb128 0x1f
	.ascii "ratio<1, 1000>\0"
	.byte	0x1
	.byte	0x33
	.word	0x10a
	.byte	0xc
	.long	0xcc3f
	.uleb128 0x2e
	.ascii "num\0"
	.byte	0x33
	.word	0x111
	.byte	0x21
	.ascii "_ZNSt5ratioILx1ELx1000EE3numE\0"
	.long	0x1ab4d
	.byte	0x1
	.uleb128 0xdf
	.ascii "den\0"
	.word	0x114
	.ascii "_ZNSt5ratioILx1ELx1000EE3denE\0"
	.long	0x1ab4d
	.uleb128 0x25
	.secrel32	.LASF84
	.long	0x110
	.byte	0x1
	.uleb128 0xe0
	.secrel32	.LASF85
	.long	0x110
	.byte	0
	.uleb128 0xde
	.ascii "literals\0"
	.byte	0x35
	.word	0x2fa
	.byte	0x14
	.long	0xcc69
	.uleb128 0xb2
	.ascii "chrono_literals\0"
	.byte	0xe
	.word	0x4cd
	.byte	0x14
	.byte	0
	.uleb128 0x79
	.ascii "filesystem\0"
	.byte	0xe
	.byte	0x34
	.byte	0xd
	.uleb128 0x1b
	.ascii "__duration_common_type<std::common_type<long long int, long long int>, std::ratio<1, 1000000000>, std::ratio<1, 1000>, void>\0"
	.byte	0x1
	.byte	0xe
	.byte	0x52
	.byte	0xc
	.long	0xcd26
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0xe
	.byte	0x5d
	.byte	0xd
	.long	0x8950
	.uleb128 0xa
	.ascii "_CT\0"
	.long	0xc9d1
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0x88a3
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcbbb
	.byte	0
	.uleb128 0x1f
	.ascii "ratio<1000000, 1>\0"
	.byte	0x1
	.byte	0x33
	.word	0x10a
	.byte	0xc
	.long	0xcdbb
	.uleb128 0xbc
	.ascii "num\0"
	.word	0x111
	.ascii "_ZNSt5ratioILx1000000ELx1EE3numE\0"
	.long	0x1ab4d
	.long	0xf4240
	.uleb128 0x2e
	.ascii "den\0"
	.byte	0x33
	.word	0x114
	.byte	0x21
	.ascii "_ZNSt5ratioILx1000000ELx1EE3denE\0"
	.long	0x1ab4d
	.byte	0x1
	.uleb128 0xbd
	.secrel32	.LASF84
	.long	0x110
	.long	0xf4240
	.uleb128 0x25
	.secrel32	.LASF85
	.long	0x110
	.byte	0x1
	.byte	0
	.uleb128 0x1f
	.ascii "enable_if<true, std::chrono::duration<long long int, std::ratio<1, 1000000000> > >\0"
	.byte	0x1
	.byte	0x26
	.word	0x8b9
	.byte	0xc
	.long	0xce2f
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x8ba
	.byte	0x13
	.long	0x8950
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x8950
	.byte	0
	.uleb128 0x1f
	.ascii "ratio<1000, 1>\0"
	.byte	0x1
	.byte	0x33
	.word	0x10a
	.byte	0xc
	.long	0xceb3
	.uleb128 0xdf
	.ascii "num\0"
	.word	0x111
	.ascii "_ZNSt5ratioILx1000ELx1EE3numE\0"
	.long	0x1ab4d
	.uleb128 0x2e
	.ascii "den\0"
	.byte	0x33
	.word	0x114
	.byte	0x21
	.ascii "_ZNSt5ratioILx1000ELx1EE3denE\0"
	.long	0x1ab4d
	.byte	0x1
	.uleb128 0xe0
	.secrel32	.LASF84
	.long	0x110
	.uleb128 0x25
	.secrel32	.LASF85
	.long	0x110
	.byte	0x1
	.byte	0
	.uleb128 0x1b
	.ascii "__duration_common_type<std::common_type<long long int, long long int>, std::ratio<1, 1000000000>, std::ratio<1, 1>, void>\0"
	.byte	0x1
	.byte	0xe
	.byte	0x52
	.byte	0xc
	.long	0xcf5e
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0xe
	.byte	0x5d
	.byte	0xd
	.long	0x8950
	.uleb128 0xa
	.ascii "_CT\0"
	.long	0xc9d1
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0x88a3
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.byte	0
	.uleb128 0x79
	.ascii "__parse_int\0"
	.byte	0x36
	.byte	0x2e
	.byte	0xb
	.uleb128 0xd0
	.ascii "__barrier_phase_t\0"
	.byte	0x1
	.long	0x49a
	.byte	0x13
	.byte	0x49
	.uleb128 0x4
	.long	0xcf6e
	.uleb128 0x1f
	.ascii "__atomic_ref<std::__barrier_phase_t, false, false>\0"
	.byte	0x8
	.byte	0xb
	.word	0x54d
	.byte	0xc
	.long	0xd6cf
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0xb
	.word	0x55f
	.byte	0x15
	.ascii "_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEaSERKS1_\0"
	.long	0x1e311
	.long	0xd01b
	.long	0xd026
	.uleb128 0x2
	.long	0x1e316
	.uleb128 0x1
	.long	0x1e320
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF113
	.byte	0xb
	.word	0x562
	.byte	0x7
	.ascii "_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC4ERS0_\0"
	.long	0xd071
	.long	0xd07c
	.uleb128 0x2
	.long	0x1e316
	.uleb128 0x1
	.long	0x1e325
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF113
	.byte	0xb
	.word	0x565
	.byte	0x7
	.ascii "_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC4ERKS1_\0"
	.long	0xd0c8
	.long	0xd0d3
	.uleb128 0x2
	.long	0x1e316
	.uleb128 0x1
	.long	0x1e320
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF6
	.byte	0xb
	.word	0x568
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEaSES0_\0"
	.long	0xcf6e
	.long	0xd122
	.long	0xd12d
	.uleb128 0x2
	.long	0x1e32a
	.uleb128 0x1
	.long	0xcf6e
	.byte	0
	.uleb128 0x63
	.ascii "operator std::__barrier_phase_t\0"
	.byte	0xb
	.word	0x56e
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEcvS0_Ev\0"
	.long	0xcf6e
	.long	0xd199
	.long	0xd19f
	.uleb128 0x2
	.long	0x1e32a
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF47
	.byte	0xb
	.word	0x571
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE12is_lock_freeEv\0"
	.long	0x1ab64
	.long	0xd1f8
	.long	0xd1fe
	.uleb128 0x2
	.long	0x1e32a
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF48
	.byte	0xb
	.word	0x575
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order\0"
	.long	0xd25d
	.long	0xd26d
	.uleb128 0x2
	.long	0x1e32a
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF49
	.byte	0xb
	.word	0x579
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order\0"
	.long	0xcf6e
	.long	0xd2cc
	.long	0xd2d7
	.uleb128 0x2
	.long	0x1e32a
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF50
	.byte	0xb
	.word	0x57d
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE8exchangeES0_St12memory_order\0"
	.long	0xcf6e
	.long	0xd33d
	.long	0xd34d
	.uleb128 0x2
	.long	0x1e32a
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x582
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE21compare_exchange_weakERS0_S0_St12memory_orderS3_\0"
	.long	0x1ab64
	.long	0xd3c8
	.long	0xd3e2
	.uleb128 0x2
	.long	0x1e32a
	.uleb128 0x1
	.long	0x1e325
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x58c
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_\0"
	.long	0x1ab64
	.long	0xd45f
	.long	0xd479
	.uleb128 0x2
	.long	0x1e32a
	.uleb128 0x1
	.long	0x1e325
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x596
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE21compare_exchange_weakERS0_S0_St12memory_order\0"
	.long	0x1ab64
	.long	0xd4f1
	.long	0xd506
	.uleb128 0x2
	.long	0x1e32a
	.uleb128 0x1
	.long	0x1e325
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x59f
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order\0"
	.long	0x1ab64
	.long	0xd580
	.long	0xd595
	.uleb128 0x2
	.long	0x1e32a
	.uleb128 0x1
	.long	0x1e325
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF29
	.byte	0xb
	.word	0x5a9
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4waitES0_St12memory_order\0"
	.long	0xd5f3
	.long	0xd603
	.uleb128 0x2
	.long	0x1e32a
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF31
	.byte	0xb
	.word	0x5af
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE10notify_oneEv\0"
	.long	0xd656
	.long	0xd65c
	.uleb128 0x2
	.long	0x1e32a
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF32
	.byte	0xb
	.word	0x5b5
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE10notify_allEv\0"
	.long	0xd6af
	.long	0xd6b5
	.uleb128 0x2
	.long	0x1e32a
	.byte	0
	.uleb128 0xc0
	.secrel32	.LASF114
	.byte	0xb
	.word	0x5bc
	.byte	0xc
	.long	0x1e334
	.byte	0
	.byte	0x3
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.byte	0
	.uleb128 0x4
	.long	0xcf8e
	.uleb128 0x1b
	.ascii "__array_traits<std::__barrier_phase_t, 64>\0"
	.byte	0x1
	.byte	0x18
	.byte	0x35
	.byte	0xc
	.long	0xd7e8
	.uleb128 0x28
	.ascii "_S_ref\0"
	.byte	0x18
	.byte	0x3c
	.byte	0x7
	.ascii "_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y\0"
	.long	0x1e325
	.long	0xd76a
	.uleb128 0x1
	.long	0x1e339
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0x13
	.ascii "_Type\0"
	.byte	0x18
	.byte	0x37
	.byte	0x13
	.long	0x1e33e
	.uleb128 0x28
	.ascii "_S_ptr\0"
	.byte	0x18
	.byte	0x40
	.byte	0x7
	.ascii "_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_ptrERA64_KS0_\0"
	.long	0x1e334
	.long	0xd7d4
	.uleb128 0x1
	.long	0x1e339
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x1a
	.ascii "_Nm\0"
	.long	0xf1
	.byte	0x40
	.byte	0
	.uleb128 0x1b
	.ascii "array<std::__barrier_phase_t, 64>\0"
	.byte	0x40
	.byte	0x18
	.byte	0x63
	.byte	0xc
	.long	0xe118
	.uleb128 0x16
	.ascii "_M_elems\0"
	.byte	0x18
	.byte	0x73
	.byte	0x38
	.long	0xd76a
	.byte	0
	.uleb128 0x62
	.ascii "fill\0"
	.byte	0x18
	.byte	0x79
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE4fillERKS0_\0"
	.long	0xd869
	.long	0xd874
	.uleb128 0x2
	.long	0x1e34f
	.uleb128 0x1
	.long	0x1e359
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF3
	.byte	0x18
	.byte	0x65
	.byte	0x21
	.long	0xcf6e
	.uleb128 0x4
	.long	0xd874
	.uleb128 0x33
	.secrel32	.LASF23
	.byte	0x18
	.byte	0x7d
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE4swapERS1_\0"
	.long	0xd8c7
	.long	0xd8d2
	.uleb128 0x2
	.long	0x1e34f
	.uleb128 0x1
	.long	0x1e35e
	.byte	0
	.uleb128 0x13
	.ascii "iterator\0"
	.byte	0x18
	.byte	0x6a
	.byte	0x2c
	.long	0x1e363
	.uleb128 0x35
	.ascii "begin\0"
	.byte	0x18
	.byte	0x84
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE5beginEv\0"
	.long	0xd8d2
	.long	0xd929
	.long	0xd92f
	.uleb128 0x2
	.long	0x1e34f
	.byte	0
	.uleb128 0x13
	.ascii "const_iterator\0"
	.byte	0x18
	.byte	0x6b
	.byte	0x29
	.long	0x1e368
	.uleb128 0x35
	.ascii "begin\0"
	.byte	0x18
	.byte	0x89
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE5beginEv\0"
	.long	0xd92f
	.long	0xd98d
	.long	0xd993
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x35
	.ascii "end\0"
	.byte	0x18
	.byte	0x8e
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE3endEv\0"
	.long	0xd8d2
	.long	0xd9d5
	.long	0xd9db
	.uleb128 0x2
	.long	0x1e34f
	.byte	0
	.uleb128 0x35
	.ascii "end\0"
	.byte	0x18
	.byte	0x93
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE3endEv\0"
	.long	0xd92f
	.long	0xda1e
	.long	0xda24
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x13
	.ascii "reverse_iterator\0"
	.byte	0x18
	.byte	0x6e
	.byte	0x35
	.long	0xe11d
	.uleb128 0x35
	.ascii "rbegin\0"
	.byte	0x18
	.byte	0x98
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE6rbeginEv\0"
	.long	0xda24
	.long	0xda85
	.long	0xda8b
	.uleb128 0x2
	.long	0x1e34f
	.byte	0
	.uleb128 0x13
	.ascii "const_reverse_iterator\0"
	.byte	0x18
	.byte	0x6f
	.byte	0x37
	.long	0xe149
	.uleb128 0x35
	.ascii "rbegin\0"
	.byte	0x18
	.byte	0x9d
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE6rbeginEv\0"
	.long	0xda8b
	.long	0xdaf3
	.long	0xdaf9
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x35
	.ascii "rend\0"
	.byte	0x18
	.byte	0xa2
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE4rendEv\0"
	.long	0xda24
	.long	0xdb3d
	.long	0xdb43
	.uleb128 0x2
	.long	0x1e34f
	.byte	0
	.uleb128 0x35
	.ascii "rend\0"
	.byte	0x18
	.byte	0xa7
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE4rendEv\0"
	.long	0xda8b
	.long	0xdb88
	.long	0xdb8e
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x35
	.ascii "cbegin\0"
	.byte	0x18
	.byte	0xac
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE6cbeginEv\0"
	.long	0xd92f
	.long	0xdbd7
	.long	0xdbdd
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x35
	.ascii "cend\0"
	.byte	0x18
	.byte	0xb1
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE4cendEv\0"
	.long	0xd92f
	.long	0xdc22
	.long	0xdc28
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x35
	.ascii "crbegin\0"
	.byte	0x18
	.byte	0xb6
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE7crbeginEv\0"
	.long	0xda8b
	.long	0xdc73
	.long	0xdc79
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x35
	.ascii "crend\0"
	.byte	0x18
	.byte	0xbb
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE5crendEv\0"
	.long	0xda8b
	.long	0xdcc0
	.long	0xdcc6
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x13
	.ascii "size_type\0"
	.byte	0x18
	.byte	0x6c
	.byte	0x35
	.long	0xe3f
	.uleb128 0x35
	.ascii "size\0"
	.byte	0x18
	.byte	0xc1
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE4sizeEv\0"
	.long	0xdcc6
	.long	0xdd1d
	.long	0xdd23
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x35
	.ascii "max_size\0"
	.byte	0x18
	.byte	0xc5
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE8max_sizeEv\0"
	.long	0xdcc6
	.long	0xdd70
	.long	0xdd76
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x35
	.ascii "empty\0"
	.byte	0x18
	.byte	0xc9
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE5emptyEv\0"
	.long	0x1ab64
	.long	0xddbd
	.long	0xddc3
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x13
	.ascii "reference\0"
	.byte	0x18
	.byte	0x68
	.byte	0x34
	.long	0x1e372
	.uleb128 0x38
	.secrel32	.LASF115
	.byte	0x18
	.byte	0xce
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy\0"
	.long	0xddc3
	.long	0xde15
	.long	0xde20
	.uleb128 0x2
	.long	0x1e34f
	.uleb128 0x1
	.long	0xdcc6
	.byte	0
	.uleb128 0x13
	.ascii "const_reference\0"
	.byte	0x18
	.byte	0x69
	.byte	0x34
	.long	0x1e359
	.uleb128 0x38
	.secrel32	.LASF115
	.byte	0x18
	.byte	0xd6
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EEixEy\0"
	.long	0xde20
	.long	0xde79
	.long	0xde84
	.uleb128 0x2
	.long	0x1e36d
	.uleb128 0x1
	.long	0xdcc6
	.byte	0
	.uleb128 0x35
	.ascii "at\0"
	.byte	0x18
	.byte	0xdf
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE2atEy\0"
	.long	0xddc3
	.long	0xdec4
	.long	0xdecf
	.uleb128 0x2
	.long	0x1e34f
	.uleb128 0x1
	.long	0xdcc6
	.byte	0
	.uleb128 0x35
	.ascii "at\0"
	.byte	0x18
	.byte	0xe9
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE2atEy\0"
	.long	0xde20
	.long	0xdf10
	.long	0xdf1b
	.uleb128 0x2
	.long	0x1e36d
	.uleb128 0x1
	.long	0xdcc6
	.byte	0
	.uleb128 0x35
	.ascii "front\0"
	.byte	0x18
	.byte	0xf6
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE5frontEv\0"
	.long	0xddc3
	.long	0xdf61
	.long	0xdf67
	.uleb128 0x2
	.long	0x1e34f
	.byte	0
	.uleb128 0x35
	.ascii "front\0"
	.byte	0x18
	.byte	0xfe
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE5frontEv\0"
	.long	0xde20
	.long	0xdfae
	.long	0xdfb4
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x63
	.ascii "back\0"
	.byte	0x18
	.word	0x108
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE4backEv\0"
	.long	0xddc3
	.long	0xdff9
	.long	0xdfff
	.uleb128 0x2
	.long	0x1e34f
	.byte	0
	.uleb128 0x63
	.ascii "back\0"
	.byte	0x18
	.word	0x110
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE4backEv\0"
	.long	0xde20
	.long	0xe045
	.long	0xe04b
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF78
	.byte	0x18
	.byte	0x66
	.byte	0x23
	.long	0x1e363
	.uleb128 0x63
	.ascii "data\0"
	.byte	0x18
	.word	0x11b
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE4dataEv\0"
	.long	0xe04b
	.long	0xe09c
	.long	0xe0a2
	.uleb128 0x2
	.long	0x1e34f
	.byte	0
	.uleb128 0x13
	.ascii "const_pointer\0"
	.byte	0x18
	.byte	0x67
	.byte	0x37
	.long	0x1e368
	.uleb128 0x63
	.ascii "data\0"
	.byte	0x18
	.word	0x120
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE4dataEv\0"
	.long	0xe0a2
	.long	0xe0fe
	.long	0xe104
	.uleb128 0x2
	.long	0x1e36d
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x1a
	.ascii "_Nm\0"
	.long	0xf1
	.byte	0x40
	.byte	0
	.uleb128 0x4
	.long	0xd7e8
	.uleb128 0xb3
	.ascii "reverse_iterator<std::__barrier_phase_t*>\0"
	.uleb128 0xb3
	.ascii "reverse_iterator<const std::__barrier_phase_t*>\0"
	.uleb128 0x1f
	.ascii "__atomic_ref<const std::__barrier_phase_t, false, false>\0"
	.byte	0x8
	.byte	0xb
	.word	0x54d
	.byte	0xc
	.long	0xe8d8
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0xb
	.word	0x55f
	.byte	0x15
	.ascii "_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEaSERKS2_\0"
	.long	0x1e377
	.long	0xe20f
	.long	0xe21a
	.uleb128 0x2
	.long	0x1e37c
	.uleb128 0x1
	.long	0x1e386
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF113
	.byte	0xb
	.word	0x562
	.byte	0x7
	.ascii "_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC4ERS1_\0"
	.long	0xe266
	.long	0xe271
	.uleb128 0x2
	.long	0x1e37c
	.uleb128 0x1
	.long	0x1e38b
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF113
	.byte	0xb
	.word	0x565
	.byte	0x7
	.ascii "_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC4ERKS2_\0"
	.long	0xe2be
	.long	0xe2c9
	.uleb128 0x2
	.long	0x1e37c
	.uleb128 0x1
	.long	0x1e386
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF6
	.byte	0xb
	.word	0x568
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEaSES0_\0"
	.long	0xcf89
	.long	0xe319
	.long	0xe324
	.uleb128 0x2
	.long	0x1e390
	.uleb128 0x1
	.long	0xcf6e
	.byte	0
	.uleb128 0x63
	.ascii "operator const std::__barrier_phase_t\0"
	.byte	0xb
	.word	0x56e
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEcvS1_Ev\0"
	.long	0xcf89
	.long	0xe397
	.long	0xe39d
	.uleb128 0x2
	.long	0x1e390
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF47
	.byte	0xb
	.word	0x571
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE12is_lock_freeEv\0"
	.long	0x1ab64
	.long	0xe3f7
	.long	0xe3fd
	.uleb128 0x2
	.long	0x1e390
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF48
	.byte	0xb
	.word	0x575
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order\0"
	.long	0xe45d
	.long	0xe46d
	.uleb128 0x2
	.long	0x1e390
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF49
	.byte	0xb
	.word	0x579
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order\0"
	.long	0xcf89
	.long	0xe4cd
	.long	0xe4d8
	.uleb128 0x2
	.long	0x1e390
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF50
	.byte	0xb
	.word	0x57d
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE8exchangeES0_St12memory_order\0"
	.long	0xcf89
	.long	0xe53f
	.long	0xe54f
	.uleb128 0x2
	.long	0x1e390
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x582
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE21compare_exchange_weakERS1_S0_St12memory_orderS4_\0"
	.long	0x1ab64
	.long	0xe5cb
	.long	0xe5e5
	.uleb128 0x2
	.long	0x1e390
	.uleb128 0x1
	.long	0x1e38b
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x58c
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS1_S0_St12memory_orderS4_\0"
	.long	0x1ab64
	.long	0xe663
	.long	0xe67d
	.uleb128 0x2
	.long	0x1e390
	.uleb128 0x1
	.long	0x1e38b
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF51
	.byte	0xb
	.word	0x596
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE21compare_exchange_weakERS1_S0_St12memory_order\0"
	.long	0x1ab64
	.long	0xe6f6
	.long	0xe70b
	.uleb128 0x2
	.long	0x1e390
	.uleb128 0x1
	.long	0x1e38b
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x9
	.secrel32	.LASF52
	.byte	0xb
	.word	0x59f
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS1_S0_St12memory_order\0"
	.long	0x1ab64
	.long	0xe786
	.long	0xe79b
	.uleb128 0x2
	.long	0x1e390
	.uleb128 0x1
	.long	0x1e38b
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF29
	.byte	0xb
	.word	0x5a9
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4waitES0_St12memory_order\0"
	.long	0xe7fa
	.long	0xe80a
	.uleb128 0x2
	.long	0x1e390
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF31
	.byte	0xb
	.word	0x5af
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE10notify_oneEv\0"
	.long	0xe85e
	.long	0xe864
	.uleb128 0x2
	.long	0x1e390
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF32
	.byte	0xb
	.word	0x5b5
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE10notify_allEv\0"
	.long	0xe8b8
	.long	0xe8be
	.uleb128 0x2
	.long	0x1e390
	.byte	0
	.uleb128 0xc0
	.secrel32	.LASF114
	.byte	0xb
	.word	0x5bc
	.byte	0xc
	.long	0x1e39a
	.byte	0
	.byte	0x3
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf89
	.byte	0
	.uleb128 0x4
	.long	0xe17b
	.uleb128 0x1b
	.ascii "default_delete<MATRIX::MaterialAttributes []>\0"
	.byte	0x1
	.byte	0x11
	.byte	0x68
	.byte	0xc
	.long	0xea37
	.uleb128 0x44
	.secrel32	.LASF116
	.byte	0x11
	.byte	0x6c
	.byte	0x11
	.ascii "_ZNSt14default_deleteIA_N6MATRIX18MaterialAttributesEEC4Ev\0"
	.long	0xe95f
	.long	0xe965
	.uleb128 0x2
	.long	0x1ed8a
	.byte	0
	.uleb128 0x62
	.ascii "operator()<MATRIX::MaterialAttributes>\0"
	.byte	0x11
	.byte	0x80
	.byte	0x2
	.ascii "_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_\0"
	.long	0xea22
	.long	0xea2d
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1e7e6
	.uleb128 0x2
	.long	0x23f97
	.uleb128 0x1
	.long	0x1ed8f
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f5ad
	.byte	0
	.uleb128 0x4
	.long	0xe8dd
	.uleb128 0x1f
	.ascii "remove_reference<std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x1
	.byte	0x26
	.word	0x65c
	.byte	0xc
	.long	0xeaa3
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x65d
	.byte	0x15
	.long	0xe8dd
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xe8dd
	.byte	0
	.uleb128 0x69
	.ascii "__uniq_ptr_impl<MATRIX::MaterialAttributes, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x8
	.byte	0x11
	.byte	0x8c
	.byte	0xb
	.long	0xf0b6
	.uleb128 0x1b
	.ascii "_Ptr<MATRIX::MaterialAttributes, std::default_delete<MATRIX::MaterialAttributes []>, void>\0"
	.byte	0x1
	.byte	0x11
	.byte	0x8f
	.byte	0x9
	.long	0xeb90
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x11
	.byte	0x91
	.byte	0xa
	.long	0x1ed8f
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1e7e6
	.uleb128 0xa
	.ascii "_Ep\0"
	.long	0xe8dd
	.byte	0
	.uleb128 0x99
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xa6
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC4Ev\0"
	.long	0xebf4
	.long	0xebfa
	.uleb128 0x2
	.long	0x1ee34
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xa8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC4EPS1_\0"
	.byte	0x1
	.long	0xec61
	.long	0xec6c
	.uleb128 0x2
	.long	0x1ee34
	.uleb128 0x1
	.long	0xec6c
	.byte	0
	.uleb128 0x7b
	.secrel32	.LASF78
	.byte	0x11
	.byte	0xa0
	.byte	0xd
	.long	0xeb71
	.uleb128 0x4
	.long	0xec6c
	.uleb128 0x3a
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xb0
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC4EOS5_\0"
	.byte	0x1
	.long	0xece4
	.long	0xecef
	.uleb128 0x2
	.long	0x1ee34
	.uleb128 0x1
	.long	0x1ee3e
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF6
	.byte	0x11
	.byte	0xb5
	.byte	0x18
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_\0"
	.long	0x1ee43
	.long	0xed59
	.long	0xed64
	.uleb128 0x2
	.long	0x1ee34
	.uleb128 0x1
	.long	0x1ee3e
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF114
	.byte	0x11
	.byte	0xbd
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv\0"
	.long	0x1ee48
	.long	0xedd0
	.long	0xedd6
	.uleb128 0x2
	.long	0x1ee34
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF114
	.byte	0x11
	.byte	0xbf
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv\0"
	.long	0xec6c
	.long	0xee43
	.long	0xee49
	.uleb128 0x2
	.long	0x1ee4d
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF118
	.byte	0x11
	.byte	0xc1
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv\0"
	.long	0x1edb2
	.long	0xeeba
	.long	0xeec0
	.uleb128 0x2
	.long	0x1ee34
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF118
	.byte	0x11
	.byte	0xc3
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv\0"
	.long	0x1eda3
	.long	0xef32
	.long	0xef38
	.uleb128 0x2
	.long	0x1ee4d
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF81
	.byte	0x11
	.byte	0xc6
	.byte	0xc
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_\0"
	.byte	0x1
	.long	0xefa3
	.long	0xefae
	.uleb128 0x2
	.long	0x1ee34
	.uleb128 0x1
	.long	0xec6c
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF35
	.byte	0x11
	.byte	0xcf
	.byte	0xf
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv\0"
	.long	0xec6c
	.long	0xf01b
	.long	0xf021
	.uleb128 0x2
	.long	0x1ee34
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF23
	.byte	0x11
	.byte	0xd8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE4swapERS5_\0"
	.byte	0x1
	.long	0xf08b
	.long	0xf096
	.uleb128 0x2
	.long	0x1ee34
	.uleb128 0x1
	.long	0x1ee43
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF66
	.byte	0x11
	.byte	0xe0
	.byte	0x1b
	.long	0x100bc
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1e7e6
	.uleb128 0xa
	.ascii "_Dp\0"
	.long	0xe8dd
	.byte	0
	.uleb128 0x4
	.long	0xeaa3
	.uleb128 0x1b
	.ascii "_Head_base<1, std::default_delete<MATRIX::MaterialAttributes []>, true>\0"
	.byte	0x1
	.byte	0x17
	.byte	0x4e
	.byte	0xc
	.long	0xf466
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x50
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC4Ev\0"
	.long	0xf16f
	.long	0xf175
	.uleb128 0x2
	.long	0x1ed99
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x53
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC4ERKS4_\0"
	.long	0xf1dc
	.long	0xf1e7
	.uleb128 0x2
	.long	0x1ed99
	.uleb128 0x1
	.long	0x1eda3
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x56
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC4ERKS5_\0"
	.long	0xf24e
	.long	0xf259
	.uleb128 0x2
	.long	0x1ed99
	.uleb128 0x1
	.long	0x1eda8
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x57
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC4EOS5_\0"
	.long	0xf2bf
	.long	0xf2ca
	.uleb128 0x2
	.long	0x1ed99
	.uleb128 0x1
	.long	0x1edad
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x5e
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0xf350
	.long	0xf360
	.uleb128 0x2
	.long	0x1ed99
	.uleb128 0x1
	.long	0x2957
	.uleb128 0x1
	.long	0x29ab
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0x7c
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_\0"
	.long	0x1edb2
	.long	0xf3d2
	.uleb128 0x1
	.long	0x1edb7
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0x7f
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERKS5_\0"
	.long	0x1eda3
	.long	0xf445
	.uleb128 0x1
	.long	0x1eda8
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF121
	.byte	0x17
	.byte	0x81
	.byte	0x27
	.long	0xe8dd
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0xe8dd
	.byte	0
	.uleb128 0x4
	.long	0xf0bb
	.uleb128 0x1f
	.ascii "_Tuple_impl<1, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x1
	.byte	0x17
	.word	0x1a0
	.byte	0xc
	.long	0xf864
	.uleb128 0x4b
	.long	0xf0bb
	.byte	0x3
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x1a8
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_\0"
	.long	0x1edb2
	.long	0xf530
	.uleb128 0x1
	.long	0x1edbc
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x1ab
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERKS5_\0"
	.long	0x1eda3
	.long	0xf5a2
	.uleb128 0x1
	.long	0x1edc1
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1ae
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC4Ev\0"
	.long	0xf605
	.long	0xf60b
	.uleb128 0x2
	.long	0x1edc6
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1b2
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC4ERKS4_\0"
	.long	0xf672
	.long	0xf67d
	.uleb128 0x2
	.long	0x1edc6
	.uleb128 0x1
	.long	0x1eda3
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1bc
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC4ERKS5_\0"
	.long	0xf6e4
	.long	0xf6ef
	.uleb128 0x2
	.long	0x1edc6
	.uleb128 0x1
	.long	0x1edc1
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0x17
	.word	0x1c0
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEaSERKS5_\0"
	.long	0x1edbc
	.long	0xf75a
	.long	0xf765
	.uleb128 0x2
	.long	0x1edc6
	.uleb128 0x1
	.long	0x1edc1
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1c6
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC4EOS5_\0"
	.long	0xf7cb
	.long	0xf7d6
	.uleb128 0x2
	.long	0x1edc6
	.uleb128 0x1
	.long	0x1edd0
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF125
	.byte	0x17
	.word	0x220
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_swapERS5_\0"
	.byte	0x2
	.long	0xf843
	.long	0xf84e
	.uleb128 0x2
	.long	0x1edc6
	.uleb128 0x1
	.long	0x1edbc
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0x1
	.uleb128 0x46
	.secrel32	.LASF126
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0xf46b
	.uleb128 0x1b
	.ascii "_Head_base<0, MATRIX::MaterialAttributes*, false>\0"
	.byte	0x8
	.byte	0x17
	.byte	0xbb
	.byte	0xc
	.long	0xfb6b
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xbd
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC4Ev\0"
	.long	0xf8f2
	.long	0xf8f8
	.uleb128 0x2
	.long	0x1edd5
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc0
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC4ERKS2_\0"
	.long	0xf94a
	.long	0xf955
	.uleb128 0x2
	.long	0x1edd5
	.uleb128 0x1
	.long	0x1eddf
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc3
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC4ERKS3_\0"
	.long	0xf9a7
	.long	0xf9b2
	.uleb128 0x2
	.long	0x1edd5
	.uleb128 0x1
	.long	0x1ede4
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc4
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC4EOS3_\0"
	.long	0xfa03
	.long	0xfa0e
	.uleb128 0x2
	.long	0x1edd5
	.uleb128 0x1
	.long	0x1ede9
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xcb
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0xfa7f
	.long	0xfa8f
	.uleb128 0x2
	.long	0x1edd5
	.uleb128 0x1
	.long	0x2957
	.uleb128 0x1
	.long	0x29ab
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xe9
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_\0"
	.long	0x1edee
	.long	0xfaec
	.uleb128 0x1
	.long	0x1edf3
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xec
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_\0"
	.long	0x1eddf
	.long	0xfb4a
	.uleb128 0x1
	.long	0x1ede4
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF121
	.byte	0x17
	.byte	0xee
	.byte	0xd
	.long	0x1ed8f
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1ed8f
	.byte	0
	.uleb128 0x4
	.long	0xf869
	.uleb128 0x1f
	.ascii "_Tuple_impl<0, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x8
	.byte	0x17
	.word	0x102
	.byte	0xc
	.long	0x100b7
	.uleb128 0x4c
	.long	0xf46b
	.uleb128 0x4b
	.long	0xf869
	.byte	0x3
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x10c
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_\0"
	.long	0x1edee
	.long	0xfc5b
	.uleb128 0x1
	.long	0x1edf8
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x10f
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_\0"
	.long	0x1eddf
	.long	0xfcd1
	.uleb128 0x1
	.long	0x1edfd
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF127
	.byte	0x17
	.word	0x108
	.byte	0x2f
	.long	0xf46b
	.uleb128 0x4
	.long	0xfcd1
	.uleb128 0x37
	.secrel32	.LASF128
	.word	0x112
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_tailERS6_\0"
	.long	0x1ee02
	.long	0xfd58
	.uleb128 0x1
	.long	0x1edf8
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF128
	.word	0x115
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_tailERKS6_\0"
	.long	0x1ee07
	.long	0xfdce
	.uleb128 0x1
	.long	0x1edfd
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF124
	.byte	0x17
	.word	0x117
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4Ev\0"
	.long	0xfe35
	.long	0xfe3b
	.uleb128 0x2
	.long	0x1ee0c
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF124
	.byte	0x17
	.word	0x11b
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4ERKS2_RKS5_\0"
	.long	0xfeab
	.long	0xfebb
	.uleb128 0x2
	.long	0x1ee0c
	.uleb128 0x1
	.long	0x1eddf
	.uleb128 0x1
	.long	0x1eda3
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF124
	.byte	0x17
	.word	0x127
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4ERKS6_\0"
	.long	0xff26
	.long	0xff31
	.uleb128 0x2
	.long	0x1ee0c
	.uleb128 0x1
	.long	0x1edfd
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0x17
	.word	0x12b
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEaSERKS6_\0"
	.long	0x1edf8
	.long	0xffa0
	.long	0xffab
	.uleb128 0x2
	.long	0x1ee0c
	.uleb128 0x1
	.long	0x1edfd
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF124
	.byte	0x17
	.word	0x12d
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4EOS6_\0"
	.long	0x10015
	.long	0x10020
	.uleb128 0x2
	.long	0x1ee0c
	.uleb128 0x1
	.long	0x1ee16
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF125
	.byte	0x17
	.word	0x196
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_swapERS6_\0"
	.byte	0x2
	.long	0x10091
	.long	0x1009c
	.uleb128 0x2
	.long	0x1ee0c
	.uleb128 0x1
	.long	0x1edf8
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF126
	.uleb128 0x10
	.long	0x1ed8f
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0xfb70
	.uleb128 0x6f
	.ascii "tuple<MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x17
	.word	0x3d5
	.long	0x1042f
	.uleb128 0x4b
	.long	0xfb70
	.byte	0x1
	.uleb128 0xc1
	.secrel32	.LASF129
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE31__nothrow_default_constructibleEv\0"
	.long	0x1ab64
	.uleb128 0x6e
	.secrel32	.LASF130
	.byte	0x17
	.word	0x440
	.byte	0x11
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4ERKS6_\0"
	.long	0x101f6
	.long	0x10201
	.uleb128 0x2
	.long	0x1ee1b
	.uleb128 0x1
	.long	0x1ee25
	.byte	0
	.uleb128 0x6e
	.secrel32	.LASF130
	.byte	0x17
	.word	0x442
	.byte	0x11
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4EOS6_\0"
	.long	0x10260
	.long	0x1026b
	.uleb128 0x2
	.long	0x1ee1b
	.uleb128 0x1
	.long	0x1ee2a
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF6
	.byte	0x17
	.word	0x4f3
	.byte	0x7
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEaSERKS6_\0"
	.long	0x1ee2f
	.long	0x102cf
	.long	0x102da
	.uleb128 0x2
	.long	0x1ee1b
	.uleb128 0x1
	.long	0x10434
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF6
	.byte	0x17
	.word	0x4fe
	.byte	0x7
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEaSEOS6_\0"
	.long	0x1ee2f
	.long	0x1033d
	.long	0x10348
	.uleb128 0x2
	.long	0x1ee1b
	.uleb128 0x1
	.long	0x10440
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF23
	.byte	0x17
	.word	0x533
	.byte	0x7
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE4swapERS6_\0"
	.byte	0x1
	.long	0x103ab
	.long	0x103b6
	.uleb128 0x2
	.long	0x1ee1b
	.uleb128 0x1
	.long	0x1ee2f
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF131
	.byte	0x17
	.word	0x419
	.byte	0x2
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4ILb1ELb1EEEv\0"
	.byte	0x1
	.long	0x10426
	.long	0x1042c
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0x2
	.long	0x1ee1b
	.byte	0
	.uleb128 0x82
	.byte	0
	.uleb128 0x4
	.long	0x100bc
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0x3267
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0x3273
	.uleb128 0x1b
	.ascii "__uniq_ptr_data<MATRIX::MaterialAttributes, std::default_delete<MATRIX::MaterialAttributes []>, true, true>\0"
	.byte	0x8
	.byte	0x11
	.byte	0xe7
	.byte	0xc
	.long	0x106eb
	.uleb128 0x4c
	.long	0xeaa3
	.uleb128 0x44
	.secrel32	.LASF134
	.byte	0x11
	.byte	0xea
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEC4EOS5_\0"
	.long	0x10534
	.long	0x1053f
	.uleb128 0x2
	.long	0x1ee57
	.uleb128 0x1
	.long	0x1ee61
	.byte	0
	.uleb128 0xc2
	.secrel32	.LASF6
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_\0"
	.long	0x1ee66
	.long	0x105af
	.long	0x105ba
	.uleb128 0x2
	.long	0x1ee57
	.uleb128 0x1
	.long	0x1ee61
	.byte	0
	.uleb128 0x9e
	.secrel32	.LASF134
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI4St15__uniq_ptr_implIS1_S4_EEv\0"
	.long	0x1063f
	.long	0x10645
	.uleb128 0x2
	.long	0x1ee57
	.byte	0
	.uleb128 0x9e
	.secrel32	.LASF134
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI4St15__uniq_ptr_implIS1_S4_EEPS1_\0"
	.long	0x106cd
	.long	0x106d8
	.uleb128 0x2
	.long	0x1ee57
	.uleb128 0x1
	.long	0xec6c
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1e7e6
	.uleb128 0xa
	.ascii "_Dp\0"
	.long	0xe8dd
	.byte	0
	.uleb128 0x1f
	.ascii "__add_lvalue_reference_helper<MATRIX::MaterialAttributes, true>\0"
	.byte	0x1
	.byte	0x26
	.word	0x66c
	.byte	0xc
	.long	0x1074c
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x66d
	.byte	0x16
	.long	0x1ee6b
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1e7e6
	.byte	0
	.uleb128 0x6f
	.ascii "unique_ptr<MATRIX::MaterialAttributes [], std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x11
	.word	0x20f
	.long	0x10f26
	.uleb128 0x39
	.secrel32	.LASF66
	.byte	0x11
	.word	0x215
	.byte	0x21
	.long	0x1044c
	.byte	0
	.uleb128 0x6e
	.secrel32	.LASF75
	.byte	0x11
	.word	0x283
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC4EOS5_\0"
	.long	0x10823
	.long	0x1082e
	.uleb128 0x2
	.long	0x1ee70
	.uleb128 0x1
	.long	0x1ee7a
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF76
	.byte	0x11
	.word	0x299
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED4Ev\0"
	.byte	0x1
	.long	0x1088e
	.long	0x10899
	.uleb128 0x2
	.long	0x1ee70
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0xb8
	.secrel32	.LASF6
	.word	0x2a8
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_\0"
	.long	0x1ee7f
	.long	0x108ff
	.long	0x1090a
	.uleb128 0x2
	.long	0x1ee70
	.uleb128 0x1
	.long	0x1ee7a
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF6
	.byte	0x11
	.word	0x2c2
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEDn\0"
	.long	0x1ee7f
	.long	0x1096e
	.long	0x10979
	.uleb128 0x2
	.long	0x1ee70
	.uleb128 0x1
	.long	0x2ac7
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF115
	.byte	0x11
	.word	0x2cd
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy\0"
	.long	0x10735
	.long	0x109dd
	.long	0x109e8
	.uleb128 0x2
	.long	0x1ee84
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF78
	.byte	0x11
	.word	0x221
	.byte	0xd
	.long	0xec6c
	.byte	0x1
	.uleb128 0x9b
	.ascii "get\0"
	.word	0x2d6
	.ascii "_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv\0"
	.long	0x109e8
	.long	0x10a5b
	.long	0x10a61
	.uleb128 0x2
	.long	0x1ee84
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF79
	.byte	0x11
	.word	0x223
	.byte	0xd
	.long	0xe8dd
	.byte	0x1
	.uleb128 0x4
	.long	0x10a61
	.uleb128 0x3f
	.secrel32	.LASF80
	.byte	0x11
	.word	0x2dc
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv\0"
	.long	0x1ee8e
	.long	0x10ae2
	.long	0x10ae8
	.uleb128 0x2
	.long	0x1ee70
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF80
	.byte	0x11
	.word	0x2e2
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv\0"
	.long	0x1ee93
	.long	0x10b57
	.long	0x10b5d
	.uleb128 0x2
	.long	0x1ee84
	.byte	0
	.uleb128 0xb9
	.secrel32	.LASF25
	.word	0x2e7
	.ascii "_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEcvbEv\0"
	.long	0x1ab64
	.long	0x10bc1
	.long	0x10bc7
	.uleb128 0x2
	.long	0x1ee84
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF35
	.byte	0x11
	.word	0x2ef
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE7releaseEv\0"
	.long	0x109e8
	.long	0x10c30
	.long	0x10c36
	.uleb128 0x2
	.long	0x1ee70
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF81
	.byte	0x11
	.word	0x30a
	.byte	0xc
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE5resetEDn\0"
	.byte	0x1
	.long	0x10c9b
	.long	0x10ca6
	.uleb128 0x2
	.long	0x1ee70
	.uleb128 0x1
	.long	0x2ac7
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF23
	.byte	0x11
	.word	0x310
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE4swapERS5_\0"
	.byte	0x1
	.long	0x10d0c
	.long	0x10d17
	.uleb128 0x2
	.long	0x1ee70
	.uleb128 0x1
	.long	0x1ee7f
	.byte	0
	.uleb128 0xba
	.secrel32	.LASF75
	.word	0x317
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC4ERKS5_\0"
	.long	0x10d79
	.long	0x10d84
	.uleb128 0x2
	.long	0x1ee70
	.uleb128 0x1
	.long	0x1ee98
	.byte	0
	.uleb128 0xbb
	.secrel32	.LASF6
	.word	0x318
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSERKS5_\0"
	.long	0x1ee7f
	.long	0x10dea
	.long	0x10df5
	.uleb128 0x2
	.long	0x1ee70
	.uleb128 0x1
	.long	0x1ee98
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF82
	.byte	0x11
	.word	0x244
	.byte	0xc
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC4IS4_vEEv\0"
	.byte	0x1
	.long	0x10e64
	.long	0x10e6a
	.uleb128 0x5e
	.secrel32	.LASF83
	.long	0xe8dd
	.uleb128 0x2
	.long	0x1ee70
	.byte	0
	.uleb128 0xe1
	.ascii "unique_ptr<MATRIX::MaterialAttributes*>\0"
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC4IPS1_S4_vbEET_\0"
	.long	0x10f08
	.long	0x10f13
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1ed8f
	.uleb128 0x60
	.ascii "_Vp\0"
	.long	0xe8dd
	.uleb128 0x2
	.long	0x1ee70
	.uleb128 0x1
	.long	0x1ed8f
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f5ad
	.uleb128 0x60
	.ascii "_Dp\0"
	.long	0xe8dd
	.byte	0
	.uleb128 0x4
	.long	0x1074c
	.uleb128 0x1b
	.ascii "__duration_common_type<std::common_type<long long int, long long int>, std::ratio<1, 1000>, std::ratio<1, 1000000000>, void>\0"
	.byte	0x1
	.byte	0xe
	.byte	0x52
	.byte	0xc
	.long	0x10fd9
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0xe
	.byte	0x5d
	.byte	0xd
	.long	0x8950
	.uleb128 0xa
	.ascii "_CT\0"
	.long	0xc9d1
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0xcbbb
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0x88a3
	.byte	0
	.uleb128 0x1b
	.ascii "default_delete<std::thread []>\0"
	.byte	0x1
	.byte	0x11
	.byte	0x68
	.byte	0xc
	.long	0x110ed
	.uleb128 0x44
	.secrel32	.LASF116
	.byte	0x11
	.byte	0x6c
	.byte	0x11
	.ascii "_ZNSt14default_deleteIA_St6threadEC4Ev\0"
	.long	0x11038
	.long	0x1103e
	.uleb128 0x2
	.long	0x1f2e8
	.byte	0
	.uleb128 0x62
	.ascii "operator()<std::thread>\0"
	.byte	0x11
	.byte	0x80
	.byte	0x2
	.ascii "_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_\0"
	.long	0x110d8
	.long	0x110e3
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x79ab
	.uleb128 0x2
	.long	0x23c57
	.uleb128 0x1
	.long	0x1bd3a
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f5b9
	.byte	0
	.uleb128 0x4
	.long	0x10fd9
	.uleb128 0x69
	.ascii "__uniq_ptr_impl<std::thread, std::default_delete<std::thread []> >\0"
	.byte	0x8
	.byte	0x11
	.byte	0x8c
	.byte	0xb
	.long	0x115e8
	.uleb128 0x1b
	.ascii "_Ptr<std::thread, std::default_delete<std::thread []>, void>\0"
	.byte	0x1
	.byte	0x11
	.byte	0x8f
	.byte	0x9
	.long	0x111a3
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x11
	.byte	0x91
	.byte	0xa
	.long	0x1bd3a
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x79ab
	.uleb128 0xa
	.ascii "_Ep\0"
	.long	0x10fd9
	.byte	0
	.uleb128 0x99
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xa6
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC4Ev\0"
	.long	0x111f3
	.long	0x111f9
	.uleb128 0x2
	.long	0x1f388
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xa8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC4EPS0_\0"
	.byte	0x1
	.long	0x1124c
	.long	0x11257
	.uleb128 0x2
	.long	0x1f388
	.uleb128 0x1
	.long	0x11257
	.byte	0
	.uleb128 0x7b
	.secrel32	.LASF78
	.byte	0x11
	.byte	0xa0
	.byte	0xd
	.long	0x11184
	.uleb128 0x3a
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xb0
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC4EOS4_\0"
	.byte	0x1
	.long	0x112b6
	.long	0x112c1
	.uleb128 0x2
	.long	0x1f388
	.uleb128 0x1
	.long	0x1f392
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF6
	.byte	0x11
	.byte	0xb5
	.byte	0x18
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEaSEOS4_\0"
	.long	0x1f397
	.long	0x11317
	.long	0x11322
	.uleb128 0x2
	.long	0x1f388
	.uleb128 0x1
	.long	0x1f392
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF114
	.byte	0x11
	.byte	0xbd
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv\0"
	.long	0x1f39c
	.long	0x1137a
	.long	0x11380
	.uleb128 0x2
	.long	0x1f388
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF114
	.byte	0x11
	.byte	0xbf
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv\0"
	.long	0x11257
	.long	0x113d9
	.long	0x113df
	.uleb128 0x2
	.long	0x1f3a1
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF118
	.byte	0x11
	.byte	0xc1
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv\0"
	.long	0x1f306
	.long	0x1143c
	.long	0x11442
	.uleb128 0x2
	.long	0x1f388
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF118
	.byte	0x11
	.byte	0xc3
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv\0"
	.long	0x1f2f7
	.long	0x114a0
	.long	0x114a6
	.uleb128 0x2
	.long	0x1f3a1
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF81
	.byte	0x11
	.byte	0xc6
	.byte	0xc
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE5resetEPS0_\0"
	.byte	0x1
	.long	0x114fd
	.long	0x11508
	.uleb128 0x2
	.long	0x1f388
	.uleb128 0x1
	.long	0x11257
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF35
	.byte	0x11
	.byte	0xcf
	.byte	0xf
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE7releaseEv\0"
	.long	0x11257
	.long	0x11561
	.long	0x11567
	.uleb128 0x2
	.long	0x1f388
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF23
	.byte	0x11
	.byte	0xd8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE4swapERS4_\0"
	.byte	0x1
	.long	0x115bd
	.long	0x115c8
	.uleb128 0x2
	.long	0x1f388
	.uleb128 0x1
	.long	0x1f397
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF66
	.byte	0x11
	.byte	0xe0
	.byte	0x1b
	.long	0x12323
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x79ab
	.uleb128 0xa
	.ascii "_Dp\0"
	.long	0x10fd9
	.byte	0
	.uleb128 0x4
	.long	0x110f2
	.uleb128 0x1b
	.ascii "_Head_base<1, std::default_delete<std::thread []>, true>\0"
	.byte	0x1
	.byte	0x17
	.byte	0x4e
	.byte	0xc
	.long	0x118fd
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x50
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC4Ev\0"
	.long	0x1167e
	.long	0x11684
	.uleb128 0x2
	.long	0x1f2ed
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x53
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC4ERKS3_\0"
	.long	0x116d7
	.long	0x116e2
	.uleb128 0x2
	.long	0x1f2ed
	.uleb128 0x1
	.long	0x1f2f7
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x56
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC4ERKS4_\0"
	.long	0x11735
	.long	0x11740
	.uleb128 0x2
	.long	0x1f2ed
	.uleb128 0x1
	.long	0x1f2fc
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x57
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC4EOS4_\0"
	.long	0x11792
	.long	0x1179d
	.uleb128 0x2
	.long	0x1f2ed
	.uleb128 0x1
	.long	0x1f301
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x5e
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0x1180f
	.long	0x1181f
	.uleb128 0x2
	.long	0x1f2ed
	.uleb128 0x1
	.long	0x2957
	.uleb128 0x1
	.long	0x29ab
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0x7c
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_\0"
	.long	0x1f306
	.long	0x1187d
	.uleb128 0x1
	.long	0x1f30b
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0x7f
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERKS4_\0"
	.long	0x1f2f7
	.long	0x118dc
	.uleb128 0x1
	.long	0x1f2fc
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF121
	.byte	0x17
	.byte	0x81
	.byte	0x27
	.long	0x10fd9
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x10fd9
	.byte	0
	.uleb128 0x4
	.long	0x115ed
	.uleb128 0x1f
	.ascii "_Tuple_impl<1, std::default_delete<std::thread []> >\0"
	.byte	0x1
	.byte	0x17
	.word	0x1a0
	.byte	0xc
	.long	0x11c4c
	.uleb128 0x4b
	.long	0x115ed
	.byte	0x3
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x1a8
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_\0"
	.long	0x1f306
	.long	0x119a4
	.uleb128 0x1
	.long	0x1f310
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x1ab
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERKS4_\0"
	.long	0x1f2f7
	.long	0x11a02
	.uleb128 0x1
	.long	0x1f315
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1ae
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC4Ev\0"
	.long	0x11a51
	.long	0x11a57
	.uleb128 0x2
	.long	0x1f31a
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1b2
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC4ERKS3_\0"
	.long	0x11aaa
	.long	0x11ab5
	.uleb128 0x2
	.long	0x1f31a
	.uleb128 0x1
	.long	0x1f2f7
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1bc
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC4ERKS4_\0"
	.long	0x11b08
	.long	0x11b13
	.uleb128 0x2
	.long	0x1f31a
	.uleb128 0x1
	.long	0x1f315
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0x17
	.word	0x1c0
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEaSERKS4_\0"
	.long	0x1f310
	.long	0x11b6a
	.long	0x11b75
	.uleb128 0x2
	.long	0x1f31a
	.uleb128 0x1
	.long	0x1f315
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1c6
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC4EOS4_\0"
	.long	0x11bc7
	.long	0x11bd2
	.uleb128 0x2
	.long	0x1f31a
	.uleb128 0x1
	.long	0x1f324
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF125
	.byte	0x17
	.word	0x220
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_swapERS4_\0"
	.byte	0x2
	.long	0x11c2b
	.long	0x11c36
	.uleb128 0x2
	.long	0x1f31a
	.uleb128 0x1
	.long	0x1f310
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0x1
	.uleb128 0x46
	.secrel32	.LASF126
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x11902
	.uleb128 0x1b
	.ascii "_Head_base<0, std::thread*, false>\0"
	.byte	0x8
	.byte	0x17
	.byte	0xbb
	.byte	0xc
	.long	0x11eb8
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xbd
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC4Ev\0"
	.long	0x11cb7
	.long	0x11cbd
	.uleb128 0x2
	.long	0x1f329
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc0
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC4ERKS1_\0"
	.long	0x11cfb
	.long	0x11d06
	.uleb128 0x2
	.long	0x1f329
	.uleb128 0x1
	.long	0x1f333
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc3
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC4ERKS2_\0"
	.long	0x11d44
	.long	0x11d4f
	.uleb128 0x2
	.long	0x1f329
	.uleb128 0x1
	.long	0x1f338
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc4
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC4EOS2_\0"
	.long	0x11d8c
	.long	0x11d97
	.uleb128 0x2
	.long	0x1f329
	.uleb128 0x1
	.long	0x1f33d
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xcb
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0x11df4
	.long	0x11e04
	.uleb128 0x2
	.long	0x1f329
	.uleb128 0x1
	.long	0x2957
	.uleb128 0x1
	.long	0x29ab
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xe9
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_\0"
	.long	0x1f342
	.long	0x11e4d
	.uleb128 0x1
	.long	0x1f347
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xec
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_\0"
	.long	0x1f333
	.long	0x11e97
	.uleb128 0x1
	.long	0x1f338
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF121
	.byte	0x17
	.byte	0xee
	.byte	0xd
	.long	0x1bd3a
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1bd3a
	.byte	0
	.uleb128 0x4
	.long	0x11c51
	.uleb128 0x1f
	.ascii "_Tuple_impl<0, std::thread*, std::default_delete<std::thread []> >\0"
	.byte	0x8
	.byte	0x17
	.word	0x102
	.byte	0xc
	.long	0x1231e
	.uleb128 0x4c
	.long	0x11902
	.uleb128 0x4b
	.long	0x11c51
	.byte	0x3
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x10c
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_\0"
	.long	0x1f342
	.long	0x11f76
	.uleb128 0x1
	.long	0x1f34c
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x10f
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_\0"
	.long	0x1f333
	.long	0x11fd8
	.uleb128 0x1
	.long	0x1f351
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF127
	.byte	0x17
	.word	0x108
	.byte	0x2f
	.long	0x11902
	.uleb128 0x4
	.long	0x11fd8
	.uleb128 0x37
	.secrel32	.LASF128
	.word	0x112
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_tailERS5_\0"
	.long	0x1f356
	.long	0x1204b
	.uleb128 0x1
	.long	0x1f34c
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF128
	.word	0x115
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_tailERKS5_\0"
	.long	0x1f35b
	.long	0x120ad
	.uleb128 0x1
	.long	0x1f351
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF124
	.byte	0x17
	.word	0x117
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC4Ev\0"
	.long	0x12100
	.long	0x12106
	.uleb128 0x2
	.long	0x1f360
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF124
	.byte	0x17
	.word	0x11b
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC4ERKS1_RKS4_\0"
	.long	0x12162
	.long	0x12172
	.uleb128 0x2
	.long	0x1f360
	.uleb128 0x1
	.long	0x1f333
	.uleb128 0x1
	.long	0x1f2f7
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF124
	.byte	0x17
	.word	0x127
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC4ERKS5_\0"
	.long	0x121c9
	.long	0x121d4
	.uleb128 0x2
	.long	0x1f360
	.uleb128 0x1
	.long	0x1f351
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0x17
	.word	0x12b
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEaSERKS5_\0"
	.long	0x1f34c
	.long	0x1222f
	.long	0x1223a
	.uleb128 0x2
	.long	0x1f360
	.uleb128 0x1
	.long	0x1f351
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF124
	.byte	0x17
	.word	0x12d
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC4EOS5_\0"
	.long	0x12290
	.long	0x1229b
	.uleb128 0x2
	.long	0x1f360
	.uleb128 0x1
	.long	0x1f36a
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF125
	.byte	0x17
	.word	0x196
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_swapERS5_\0"
	.byte	0x2
	.long	0x122f8
	.long	0x12303
	.uleb128 0x2
	.long	0x1f360
	.uleb128 0x1
	.long	0x1f34c
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF126
	.uleb128 0x10
	.long	0x1bd3a
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x11ebd
	.uleb128 0x6f
	.ascii "tuple<std::thread*, std::default_delete<std::thread []> >\0"
	.byte	0x17
	.word	0x3d5
	.long	0x125ec
	.uleb128 0x4b
	.long	0x11ebd
	.byte	0x1
	.uleb128 0xc1
	.secrel32	.LASF129
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEE31__nothrow_default_constructibleEv\0"
	.long	0x1ab64
	.uleb128 0x6e
	.secrel32	.LASF130
	.byte	0x17
	.word	0x440
	.byte	0x11
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC4ERKS5_\0"
	.long	0x12417
	.long	0x12422
	.uleb128 0x2
	.long	0x1f36f
	.uleb128 0x1
	.long	0x1f379
	.byte	0
	.uleb128 0x6e
	.secrel32	.LASF130
	.byte	0x17
	.word	0x442
	.byte	0x11
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC4EOS5_\0"
	.long	0x1246d
	.long	0x12478
	.uleb128 0x2
	.long	0x1f36f
	.uleb128 0x1
	.long	0x1f37e
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF6
	.byte	0x17
	.word	0x4f3
	.byte	0x7
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEaSERKS5_\0"
	.long	0x1f383
	.long	0x124c8
	.long	0x124d3
	.uleb128 0x2
	.long	0x1f36f
	.uleb128 0x1
	.long	0x125f1
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF6
	.byte	0x17
	.word	0x4fe
	.byte	0x7
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEaSEOS5_\0"
	.long	0x1f383
	.long	0x12522
	.long	0x1252d
	.uleb128 0x2
	.long	0x1f36f
	.uleb128 0x1
	.long	0x125fd
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF23
	.byte	0x17
	.word	0x533
	.byte	0x7
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEE4swapERS5_\0"
	.byte	0x1
	.long	0x1257c
	.long	0x12587
	.uleb128 0x2
	.long	0x1f36f
	.uleb128 0x1
	.long	0x1f383
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF131
	.byte	0x17
	.word	0x419
	.byte	0x2
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC4ILb1ELb1EEEv\0"
	.byte	0x1
	.long	0x125e3
	.long	0x125e9
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0x2
	.long	0x1f36f
	.byte	0
	.uleb128 0x82
	.byte	0
	.uleb128 0x4
	.long	0x12323
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0x327f
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0x328b
	.uleb128 0x1b
	.ascii "__uniq_ptr_data<std::thread, std::default_delete<std::thread []>, true, true>\0"
	.byte	0x8
	.byte	0x11
	.byte	0xe7
	.byte	0xc
	.long	0x127c3
	.uleb128 0x4c
	.long	0x110f2
	.uleb128 0x44
	.secrel32	.LASF134
	.byte	0x11
	.byte	0xea
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EEC4EOS4_\0"
	.long	0x126bf
	.long	0x126ca
	.uleb128 0x2
	.long	0x1f3ab
	.uleb128 0x1
	.long	0x1f3b5
	.byte	0
	.uleb128 0xc2
	.secrel32	.LASF6
	.ascii "_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EEaSEOS4_\0"
	.long	0x1f3ba
	.long	0x12726
	.long	0x12731
	.uleb128 0x2
	.long	0x1f3ab
	.uleb128 0x1
	.long	0x1f3b5
	.byte	0
	.uleb128 0x9e
	.secrel32	.LASF134
	.ascii "_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI4St15__uniq_ptr_implIS0_S3_EEPS0_\0"
	.long	0x127a5
	.long	0x127b0
	.uleb128 0x2
	.long	0x1f3ab
	.uleb128 0x1
	.long	0x11257
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x79ab
	.uleb128 0xa
	.ascii "_Dp\0"
	.long	0x10fd9
	.byte	0
	.uleb128 0x1f
	.ascii "__add_lvalue_reference_helper<std::thread, true>\0"
	.byte	0x1
	.byte	0x26
	.word	0x66c
	.byte	0xc
	.long	0x12815
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x66d
	.byte	0x16
	.long	0x1bd4e
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x79ab
	.byte	0
	.uleb128 0x6f
	.ascii "unique_ptr<std::thread [], std::default_delete<std::thread []> >\0"
	.byte	0x11
	.word	0x20f
	.long	0x12e21
	.uleb128 0x39
	.secrel32	.LASF66
	.byte	0x11
	.word	0x215
	.byte	0x21
	.long	0x12609
	.byte	0
	.uleb128 0x6e
	.secrel32	.LASF75
	.byte	0x11
	.word	0x283
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC4EOS4_\0"
	.long	0x128ba
	.long	0x128c5
	.uleb128 0x2
	.long	0x1f3bf
	.uleb128 0x1
	.long	0x1f3c9
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF76
	.byte	0x11
	.word	0x299
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED4Ev\0"
	.byte	0x1
	.long	0x12911
	.long	0x1291c
	.uleb128 0x2
	.long	0x1f3bf
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0xb8
	.secrel32	.LASF6
	.word	0x2a8
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEaSEOS4_\0"
	.long	0x1f3ce
	.long	0x1296e
	.long	0x12979
	.uleb128 0x2
	.long	0x1f3bf
	.uleb128 0x1
	.long	0x1f3c9
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF6
	.byte	0x11
	.word	0x2c2
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEaSEDn\0"
	.long	0x1f3ce
	.long	0x129c9
	.long	0x129d4
	.uleb128 0x2
	.long	0x1f3bf
	.uleb128 0x1
	.long	0x2ac7
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF115
	.byte	0x11
	.word	0x2cd
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy\0"
	.long	0x127fe
	.long	0x12a24
	.long	0x12a2f
	.uleb128 0x2
	.long	0x1f3d3
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF78
	.byte	0x11
	.word	0x221
	.byte	0xd
	.long	0x11257
	.byte	0x1
	.uleb128 0x9b
	.ascii "get\0"
	.word	0x2d6
	.ascii "_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv\0"
	.long	0x12a2f
	.long	0x12a8e
	.long	0x12a94
	.uleb128 0x2
	.long	0x1f3d3
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF79
	.byte	0x11
	.word	0x223
	.byte	0xd
	.long	0x10fd9
	.byte	0x1
	.uleb128 0x4
	.long	0x12a94
	.uleb128 0x3f
	.secrel32	.LASF80
	.byte	0x11
	.word	0x2dc
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv\0"
	.long	0x1f3dd
	.long	0x12b01
	.long	0x12b07
	.uleb128 0x2
	.long	0x1f3bf
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF80
	.byte	0x11
	.word	0x2e2
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv\0"
	.long	0x1f3e2
	.long	0x12b62
	.long	0x12b68
	.uleb128 0x2
	.long	0x1f3d3
	.byte	0
	.uleb128 0xb9
	.secrel32	.LASF25
	.word	0x2e7
	.ascii "_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEcvbEv\0"
	.long	0x1ab64
	.long	0x12bb8
	.long	0x12bbe
	.uleb128 0x2
	.long	0x1f3d3
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF35
	.byte	0x11
	.word	0x2ef
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE7releaseEv\0"
	.long	0x12a2f
	.long	0x12c13
	.long	0x12c19
	.uleb128 0x2
	.long	0x1f3bf
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF81
	.byte	0x11
	.word	0x30a
	.byte	0xc
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE5resetEDn\0"
	.byte	0x1
	.long	0x12c6a
	.long	0x12c75
	.uleb128 0x2
	.long	0x1f3bf
	.uleb128 0x1
	.long	0x2ac7
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF23
	.byte	0x11
	.word	0x310
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE4swapERS4_\0"
	.byte	0x1
	.long	0x12cc7
	.long	0x12cd2
	.uleb128 0x2
	.long	0x1f3bf
	.uleb128 0x1
	.long	0x1f3ce
	.byte	0
	.uleb128 0xba
	.secrel32	.LASF75
	.word	0x317
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC4ERKS4_\0"
	.long	0x12d20
	.long	0x12d2b
	.uleb128 0x2
	.long	0x1f3bf
	.uleb128 0x1
	.long	0x1f3e7
	.byte	0
	.uleb128 0xbb
	.secrel32	.LASF6
	.word	0x318
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEaSERKS4_\0"
	.long	0x1f3ce
	.long	0x12d7d
	.long	0x12d88
	.uleb128 0x2
	.long	0x1f3bf
	.uleb128 0x1
	.long	0x1f3e7
	.byte	0
	.uleb128 0xe1
	.ascii "unique_ptr<std::thread*>\0"
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC4IPS0_S3_vbEET_\0"
	.long	0x12e03
	.long	0x12e0e
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1bd3a
	.uleb128 0x60
	.ascii "_Vp\0"
	.long	0x10fd9
	.uleb128 0x2
	.long	0x1f3bf
	.uleb128 0x1
	.long	0x1bd3a
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f5b9
	.uleb128 0x60
	.ascii "_Dp\0"
	.long	0x10fd9
	.byte	0
	.uleb128 0x4
	.long	0x12815
	.uleb128 0x1b
	.ascii "default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>\0"
	.byte	0x1
	.byte	0x11
	.byte	0x68
	.byte	0xc
	.long	0x12f3d
	.uleb128 0x6a
	.secrel32	.LASF116
	.byte	0x11
	.byte	0x6c
	.byte	0x11
	.long	0x12ea9
	.long	0x12eaf
	.uleb128 0x2
	.long	0x1f3ec
	.byte	0
	.uleb128 0x11e
	.ascii "operator()<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t>\0"
	.byte	0x11
	.byte	0x80
	.byte	0x2
	.long	0x12f28
	.long	0x12f33
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1336a
	.uleb128 0x2
	.long	0x23a67
	.uleb128 0x1
	.long	0x1f3f1
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f5c5
	.byte	0
	.uleb128 0x4
	.long	0x12e26
	.uleb128 0x1f
	.ascii "remove_reference<std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x1
	.byte	0x26
	.word	0x65c
	.byte	0xc
	.long	0x12fe5
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x65d
	.byte	0x15
	.long	0x12e26
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x12e26
	.byte	0
	.uleb128 0x69
	.ascii "__uniq_ptr_impl<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x8
	.byte	0x11
	.byte	0x8c
	.byte	0xb
	.long	0x13317
	.uleb128 0x1b
	.ascii "_Ptr<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>, void>\0"
	.byte	0x1
	.byte	0x11
	.byte	0x8f
	.byte	0x9
	.long	0x131c2
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x11
	.byte	0x91
	.byte	0xa
	.long	0x1f3f1
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1336a
	.uleb128 0xa
	.ascii "_Ep\0"
	.long	0x12e26
	.byte	0
	.uleb128 0xe2
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xa6
	.byte	0x7
	.long	0x131d3
	.long	0x131d9
	.uleb128 0x2
	.long	0x1f496
	.byte	0
	.uleb128 0x70
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xa8
	.byte	0x7
	.long	0x131e9
	.long	0x131f4
	.uleb128 0x2
	.long	0x1f496
	.uleb128 0x1
	.long	0x131f4
	.byte	0
	.uleb128 0x7b
	.secrel32	.LASF78
	.byte	0x11
	.byte	0xa0
	.byte	0xd
	.long	0x131a3
	.uleb128 0x4
	.long	0x131f4
	.uleb128 0x70
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xb0
	.byte	0x7
	.long	0x13215
	.long	0x13220
	.uleb128 0x2
	.long	0x1f496
	.uleb128 0x1
	.long	0x1f4a0
	.byte	0
	.uleb128 0x83
	.secrel32	.LASF6
	.byte	0xb5
	.byte	0x18
	.long	0x1f4a5
	.long	0x13234
	.long	0x1323f
	.uleb128 0x2
	.long	0x1f496
	.uleb128 0x1
	.long	0x1f4a0
	.byte	0
	.uleb128 0x83
	.secrel32	.LASF114
	.byte	0xbd
	.byte	0x12
	.long	0x1f4aa
	.long	0x13253
	.long	0x13259
	.uleb128 0x2
	.long	0x1f496
	.byte	0
	.uleb128 0x83
	.secrel32	.LASF114
	.byte	0xbf
	.byte	0x12
	.long	0x131f4
	.long	0x1326d
	.long	0x13273
	.uleb128 0x2
	.long	0x1f4af
	.byte	0
	.uleb128 0x83
	.secrel32	.LASF118
	.byte	0xc1
	.byte	0x12
	.long	0x1f414
	.long	0x13287
	.long	0x1328d
	.uleb128 0x2
	.long	0x1f496
	.byte	0
	.uleb128 0x83
	.secrel32	.LASF118
	.byte	0xc3
	.byte	0x12
	.long	0x1f405
	.long	0x132a1
	.long	0x132a7
	.uleb128 0x2
	.long	0x1f4af
	.byte	0
	.uleb128 0x70
	.secrel32	.LASF81
	.byte	0x11
	.byte	0xc6
	.byte	0xc
	.long	0x132b7
	.long	0x132c2
	.uleb128 0x2
	.long	0x1f496
	.uleb128 0x1
	.long	0x131f4
	.byte	0
	.uleb128 0x83
	.secrel32	.LASF35
	.byte	0xcf
	.byte	0xf
	.long	0x131f4
	.long	0x132d6
	.long	0x132dc
	.uleb128 0x2
	.long	0x1f496
	.byte	0
	.uleb128 0x70
	.secrel32	.LASF23
	.byte	0x11
	.byte	0xd8
	.byte	0x7
	.long	0x132ec
	.long	0x132f7
	.uleb128 0x2
	.long	0x1f496
	.uleb128 0x1
	.long	0x1f4a5
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF66
	.byte	0x11
	.byte	0xe0
	.byte	0x1b
	.long	0x13bca
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1336a
	.uleb128 0xa
	.ascii "_Dp\0"
	.long	0x12e26
	.byte	0
	.uleb128 0x4
	.long	0x12fe5
	.uleb128 0xe3
	.ascii "__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x4c
	.long	0x13570
	.uleb128 0xaf
	.ascii "__state_t\0"
	.byte	0x40
	.byte	0x40
	.byte	0x13
	.byte	0x54
	.byte	0x3f
	.long	0x13395
	.uleb128 0x80
	.ascii "__tickets\0"
	.byte	0x13
	.byte	0x56
	.byte	0x29
	.long	0x1352d
	.byte	0x1
	.byte	0
	.byte	0
	.uleb128 0x11f
	.ascii "__phase_alignment\0"
	.byte	0x13
	.byte	0x50
	.byte	0x1d
	.long	0x10b
	.byte	0x1
	.uleb128 0x16
	.ascii "_M_expected\0"
	.byte	0x13
	.byte	0x59
	.byte	0x11
	.long	0x2932
	.byte	0
	.uleb128 0x16
	.ascii "_M_state\0"
	.byte	0x13
	.byte	0x5a
	.byte	0x1f
	.long	0x13f93
	.byte	0x8
	.uleb128 0x80
	.ascii "_M_expected_adjustment\0"
	.byte	0x13
	.byte	0x5b
	.byte	0x20
	.long	0x684b
	.byte	0x8
	.byte	0x10
	.uleb128 0x16
	.ascii "_M_completion\0"
	.byte	0x13
	.byte	0x5c
	.byte	0x14
	.long	0x262f0
	.byte	0x18
	.uleb128 0x80
	.ascii "_M_phase\0"
	.byte	0x13
	.byte	0x5e
	.byte	0x35
	.long	0xcf6e
	.byte	0x1
	.byte	0x30
	.uleb128 0x120
	.ascii "_M_arrive\0"
	.byte	0x13
	.byte	0x61
	.byte	0x7
	.long	0x1ab64
	.long	0x13440
	.long	0x13450
	.uleb128 0x2
	.long	0x1f518
	.uleb128 0x1
	.long	0xcf6e
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0xe4
	.ascii "max\0"
	.byte	0x94
	.long	0x2932
	.uleb128 0xe5
	.ascii "__tree_barrier\0"
	.byte	0x97
	.long	0x13475
	.long	0x13485
	.uleb128 0x2
	.long	0x1f518
	.uleb128 0x1
	.long	0x2932
	.uleb128 0x1
	.long	0x262f0
	.byte	0
	.uleb128 0x7b
	.secrel32	.LASF135
	.byte	0x13
	.byte	0x91
	.byte	0xd
	.long	0xcf6e
	.uleb128 0x4
	.long	0x13485
	.uleb128 0xe6
	.ascii "arrive\0"
	.byte	0xa2
	.long	0x13485
	.long	0x134ac
	.long	0x134b7
	.uleb128 0x2
	.long	0x1f518
	.uleb128 0x1
	.long	0x2932
	.byte	0
	.uleb128 0x70
	.secrel32	.LASF29
	.byte	0x13
	.byte	0xb9
	.byte	0x7
	.long	0x134c7
	.long	0x134d2
	.uleb128 0x2
	.long	0x1f522
	.uleb128 0x1
	.long	0x1f52c
	.byte	0
	.uleb128 0x70
	.secrel32	.LASF136
	.byte	0x13
	.byte	0xc4
	.byte	0x7
	.long	0x134e2
	.long	0x134e8
	.uleb128 0x2
	.long	0x1f518
	.byte	0
	.uleb128 0x13
	.ascii "__atomic_phase_ref_t\0"
	.byte	0x13
	.byte	0x4e
	.byte	0xd
	.long	0xcf8e
	.uleb128 0x13
	.ascii "__atomic_phase_const_ref_t\0"
	.byte	0x13
	.byte	0x4f
	.byte	0xd
	.long	0xe17b
	.uleb128 0x4
	.long	0x13505
	.uleb128 0x13
	.ascii "__tickets_t\0"
	.byte	0x13
	.byte	0x53
	.byte	0xd
	.long	0xd7e8
	.uleb128 0xe7
	.ascii "~__tree_barrier\0"
	.long	0x1355b
	.long	0x13566
	.uleb128 0x2
	.long	0x1f518
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF137
	.long	0x262f0
	.byte	0
	.uleb128 0x4
	.long	0x1331c
	.uleb128 0x1b
	.ascii "_Head_base<1, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>, true>\0"
	.byte	0x1
	.byte	0x17
	.byte	0x4e
	.byte	0xc
	.long	0x136d6
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x50
	.byte	0x11
	.long	0x13612
	.long	0x13618
	.uleb128 0x2
	.long	0x1f3fb
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x53
	.byte	0x11
	.long	0x13628
	.long	0x13633
	.uleb128 0x2
	.long	0x1f3fb
	.uleb128 0x1
	.long	0x1f405
	.byte	0
	.uleb128 0x6a
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x56
	.byte	0x11
	.long	0x13643
	.long	0x1364e
	.uleb128 0x2
	.long	0x1f3fb
	.uleb128 0x1
	.long	0x1f40a
	.byte	0
	.uleb128 0x6a
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x57
	.byte	0x11
	.long	0x1365e
	.long	0x13669
	.uleb128 0x2
	.long	0x1f3fb
	.uleb128 0x1
	.long	0x1f40f
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x5e
	.byte	0x7
	.long	0x13679
	.long	0x13689
	.uleb128 0x2
	.long	0x1f3fb
	.uleb128 0x1
	.long	0x2957
	.uleb128 0x1
	.long	0x29ab
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF120
	.byte	0x17
	.byte	0x7c
	.byte	0x7
	.long	0x1f414
	.long	0x1369f
	.uleb128 0x1
	.long	0x1f419
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF120
	.byte	0x17
	.byte	0x7f
	.byte	0x7
	.long	0x1f405
	.long	0x136b5
	.uleb128 0x1
	.long	0x1f40a
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF121
	.byte	0x17
	.byte	0x81
	.byte	0x27
	.long	0x12e26
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x12e26
	.byte	0
	.uleb128 0x4
	.long	0x13575
	.uleb128 0x1f
	.ascii "_Tuple_impl<1, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x1
	.byte	0x17
	.word	0x1a0
	.byte	0xc
	.long	0x13852
	.uleb128 0x4b
	.long	0x13575
	.byte	0x3
	.uleb128 0x4d
	.secrel32	.LASF120
	.word	0x1a8
	.byte	0x7
	.long	0x1f414
	.long	0x13781
	.uleb128 0x1
	.long	0x1f41e
	.byte	0
	.uleb128 0x4d
	.secrel32	.LASF120
	.word	0x1ab
	.byte	0x7
	.long	0x1f405
	.long	0x13797
	.uleb128 0x1
	.long	0x1f423
	.byte	0
	.uleb128 0x7c
	.secrel32	.LASF124
	.word	0x1ae
	.byte	0x7
	.long	0x137a7
	.long	0x137ad
	.uleb128 0x2
	.long	0x1f428
	.byte	0
	.uleb128 0x84
	.secrel32	.LASF124
	.word	0x1b2
	.byte	0x7
	.long	0x137be
	.long	0x137c9
	.uleb128 0x2
	.long	0x1f428
	.uleb128 0x1
	.long	0x1f405
	.byte	0
	.uleb128 0x8f
	.secrel32	.LASF124
	.word	0x1bc
	.byte	0x11
	.long	0x137da
	.long	0x137e5
	.uleb128 0x2
	.long	0x1f428
	.uleb128 0x1
	.long	0x1f423
	.byte	0
	.uleb128 0x9f
	.secrel32	.LASF6
	.word	0x1c0
	.long	0x1f41e
	.long	0x137f9
	.long	0x13804
	.uleb128 0x2
	.long	0x1f428
	.uleb128 0x1
	.long	0x1f423
	.byte	0
	.uleb128 0x7c
	.secrel32	.LASF124
	.word	0x1c6
	.byte	0x7
	.long	0x13814
	.long	0x1381f
	.uleb128 0x2
	.long	0x1f428
	.uleb128 0x1
	.long	0x1f432
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF125
	.byte	0x17
	.word	0x220
	.byte	0x7
	.byte	0x2
	.long	0x13831
	.long	0x1383c
	.uleb128 0x2
	.long	0x1f428
	.uleb128 0x1
	.long	0x1f41e
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0x1
	.uleb128 0x46
	.secrel32	.LASF126
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x136db
	.uleb128 0x1b
	.ascii "_Head_base<0, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, false>\0"
	.byte	0x8
	.byte	0x17
	.byte	0xbb
	.byte	0xc
	.long	0x139a2
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xbd
	.byte	0x11
	.long	0x138de
	.long	0x138e4
	.uleb128 0x2
	.long	0x1f437
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc0
	.byte	0x11
	.long	0x138f4
	.long	0x138ff
	.uleb128 0x2
	.long	0x1f437
	.uleb128 0x1
	.long	0x1f441
	.byte	0
	.uleb128 0x6a
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc3
	.byte	0x11
	.long	0x1390f
	.long	0x1391a
	.uleb128 0x2
	.long	0x1f437
	.uleb128 0x1
	.long	0x1f446
	.byte	0
	.uleb128 0x6a
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc4
	.byte	0x11
	.long	0x1392a
	.long	0x13935
	.uleb128 0x2
	.long	0x1f437
	.uleb128 0x1
	.long	0x1f44b
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xcb
	.byte	0x7
	.long	0x13945
	.long	0x13955
	.uleb128 0x2
	.long	0x1f437
	.uleb128 0x1
	.long	0x2957
	.uleb128 0x1
	.long	0x29ab
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xe9
	.byte	0x7
	.long	0x1f450
	.long	0x1396b
	.uleb128 0x1
	.long	0x1f455
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xec
	.byte	0x7
	.long	0x1f441
	.long	0x13981
	.uleb128 0x1
	.long	0x1f446
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF121
	.byte	0x17
	.byte	0xee
	.byte	0xd
	.long	0x1f3f1
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1f3f1
	.byte	0
	.uleb128 0x4
	.long	0x13857
	.uleb128 0x1f
	.ascii "_Tuple_impl<0, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x8
	.byte	0x17
	.word	0x102
	.byte	0xc
	.long	0x13bc5
	.uleb128 0x4c
	.long	0x136db
	.uleb128 0x4b
	.long	0x13857
	.byte	0x3
	.uleb128 0x4d
	.secrel32	.LASF120
	.word	0x10c
	.byte	0x7
	.long	0x1f450
	.long	0x13aab
	.uleb128 0x1
	.long	0x1f45a
	.byte	0
	.uleb128 0x4d
	.secrel32	.LASF120
	.word	0x10f
	.byte	0x7
	.long	0x1f441
	.long	0x13ac1
	.uleb128 0x1
	.long	0x1f45f
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF127
	.byte	0x17
	.word	0x108
	.byte	0x2f
	.long	0x136db
	.uleb128 0x4
	.long	0x13ac1
	.uleb128 0x4d
	.secrel32	.LASF128
	.word	0x112
	.byte	0x7
	.long	0x1f464
	.long	0x13ae9
	.uleb128 0x1
	.long	0x1f45a
	.byte	0
	.uleb128 0x4d
	.secrel32	.LASF128
	.word	0x115
	.byte	0x7
	.long	0x1f469
	.long	0x13aff
	.uleb128 0x1
	.long	0x1f45f
	.byte	0
	.uleb128 0x7c
	.secrel32	.LASF124
	.word	0x117
	.byte	0x11
	.long	0x13b0f
	.long	0x13b15
	.uleb128 0x2
	.long	0x1f46e
	.byte	0
	.uleb128 0x84
	.secrel32	.LASF124
	.word	0x11b
	.byte	0x7
	.long	0x13b26
	.long	0x13b36
	.uleb128 0x2
	.long	0x1f46e
	.uleb128 0x1
	.long	0x1f441
	.uleb128 0x1
	.long	0x1f405
	.byte	0
	.uleb128 0x8f
	.secrel32	.LASF124
	.word	0x127
	.byte	0x11
	.long	0x13b47
	.long	0x13b52
	.uleb128 0x2
	.long	0x1f46e
	.uleb128 0x1
	.long	0x1f45f
	.byte	0
	.uleb128 0x9f
	.secrel32	.LASF6
	.word	0x12b
	.long	0x1f45a
	.long	0x13b66
	.long	0x13b71
	.uleb128 0x2
	.long	0x1f46e
	.uleb128 0x1
	.long	0x1f45f
	.byte	0
	.uleb128 0x8f
	.secrel32	.LASF124
	.word	0x12d
	.byte	0x7
	.long	0x13b82
	.long	0x13b8d
	.uleb128 0x2
	.long	0x1f46e
	.uleb128 0x1
	.long	0x1f478
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF125
	.byte	0x17
	.word	0x196
	.byte	0x7
	.byte	0x2
	.long	0x13b9f
	.long	0x13baa
	.uleb128 0x2
	.long	0x1f46e
	.uleb128 0x1
	.long	0x1f45a
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF126
	.uleb128 0x10
	.long	0x1f3f1
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x139a7
	.uleb128 0x6f
	.ascii "tuple<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x17
	.word	0x3d5
	.long	0x13d6d
	.uleb128 0x4b
	.long	0x139a7
	.byte	0x1
	.uleb128 0x121
	.secrel32	.LASF129
	.byte	0x17
	.word	0x40b
	.byte	0x1d
	.long	0x1ab64
	.uleb128 0x7d
	.secrel32	.LASF130
	.byte	0x17
	.word	0x440
	.byte	0x11
	.long	0x13cc7
	.long	0x13cd2
	.uleb128 0x2
	.long	0x1f47d
	.uleb128 0x1
	.long	0x1f487
	.byte	0
	.uleb128 0x7d
	.secrel32	.LASF130
	.byte	0x17
	.word	0x442
	.byte	0x11
	.long	0x13ce3
	.long	0x13cee
	.uleb128 0x2
	.long	0x1f47d
	.uleb128 0x1
	.long	0x1f48c
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF6
	.byte	0x17
	.word	0x4f3
	.long	0x1f491
	.long	0x13d02
	.long	0x13d0d
	.uleb128 0x2
	.long	0x1f47d
	.uleb128 0x1
	.long	0x13d72
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF6
	.byte	0x17
	.word	0x4fe
	.long	0x1f491
	.long	0x13d21
	.long	0x13d2c
	.uleb128 0x2
	.long	0x1f47d
	.uleb128 0x1
	.long	0x13d7e
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF23
	.byte	0x17
	.word	0x533
	.byte	0x7
	.byte	0x1
	.long	0x13d3e
	.long	0x13d49
	.uleb128 0x2
	.long	0x1f47d
	.uleb128 0x1
	.long	0x1f491
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF131
	.byte	0x17
	.word	0x419
	.byte	0x2
	.byte	0x1
	.long	0x13d64
	.long	0x13d6a
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0x2
	.long	0x1f47d
	.byte	0
	.uleb128 0x82
	.byte	0
	.uleb128 0x4
	.long	0x13bca
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0x3297
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0x32a3
	.uleb128 0x1b
	.ascii "__uniq_ptr_data<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>, true, true>\0"
	.byte	0x8
	.byte	0x11
	.byte	0xe7
	.byte	0xc
	.long	0x13ef6
	.uleb128 0x4c
	.long	0x12fe5
	.uleb128 0x6a
	.secrel32	.LASF134
	.byte	0x11
	.byte	0xea
	.byte	0x7
	.long	0x13e8c
	.long	0x13e97
	.uleb128 0x2
	.long	0x1f4b9
	.uleb128 0x1
	.long	0x1f4c3
	.byte	0
	.uleb128 0x122
	.secrel32	.LASF6
	.byte	0x11
	.byte	0xeb
	.byte	0x18
	.long	0x1f4c8
	.byte	0x1
	.long	0x13ead
	.long	0x13eb8
	.uleb128 0x2
	.long	0x1f4b9
	.uleb128 0x1
	.long	0x1f4c3
	.byte	0
	.uleb128 0x4f
	.secrel32	.LASF134
	.long	0x13ec5
	.long	0x13ed0
	.uleb128 0x2
	.long	0x1f4b9
	.uleb128 0x1
	.long	0x131f4
	.byte	0
	.uleb128 0x4f
	.secrel32	.LASF134
	.long	0x13edd
	.long	0x13ee3
	.uleb128 0x2
	.long	0x1f4b9
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1336a
	.uleb128 0xa
	.ascii "_Dp\0"
	.long	0x12e26
	.byte	0
	.uleb128 0x1f
	.ascii "__add_lvalue_reference_helper<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t, true>\0"
	.byte	0x1
	.byte	0x26
	.word	0x66c
	.byte	0xc
	.long	0x13f93
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x66d
	.byte	0x16
	.long	0x1f4cd
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1336a
	.byte	0
	.uleb128 0x6f
	.ascii "unique_ptr<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t [], std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x11
	.word	0x20f
	.long	0x14301
	.uleb128 0x39
	.secrel32	.LASF66
	.byte	0x11
	.word	0x215
	.byte	0x21
	.long	0x13d8a
	.byte	0
	.uleb128 0x7d
	.secrel32	.LASF75
	.byte	0x11
	.word	0x283
	.byte	0x7
	.long	0x14091
	.long	0x1409c
	.uleb128 0x2
	.long	0x1f4d2
	.uleb128 0x1
	.long	0x1f4dc
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF76
	.byte	0x11
	.word	0x299
	.byte	0x7
	.byte	0x1
	.long	0x140ae
	.long	0x140b9
	.uleb128 0x2
	.long	0x1f4d2
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x123
	.secrel32	.LASF6
	.byte	0x11
	.word	0x2a8
	.byte	0x7
	.long	0x1f4e1
	.byte	0x1
	.byte	0x1
	.long	0x140d1
	.long	0x140dc
	.uleb128 0x2
	.long	0x1f4d2
	.uleb128 0x1
	.long	0x1f4dc
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF6
	.byte	0x11
	.word	0x2c2
	.long	0x1f4e1
	.long	0x140f0
	.long	0x140fb
	.uleb128 0x2
	.long	0x1f4d2
	.uleb128 0x1
	.long	0x2ac7
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF115
	.byte	0x11
	.word	0x2cd
	.long	0x13f7c
	.long	0x1410f
	.long	0x1411a
	.uleb128 0x2
	.long	0x1f4e6
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF78
	.byte	0x11
	.word	0x221
	.byte	0xd
	.long	0x131f4
	.byte	0x1
	.uleb128 0x124
	.ascii "get\0"
	.byte	0x11
	.word	0x2d6
	.byte	0x7
	.long	0x1411a
	.byte	0x1
	.long	0x1413f
	.long	0x14145
	.uleb128 0x2
	.long	0x1f4e6
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF79
	.byte	0x11
	.word	0x223
	.byte	0xd
	.long	0x12e26
	.byte	0x1
	.uleb128 0x4
	.long	0x14145
	.uleb128 0x67
	.secrel32	.LASF80
	.byte	0x11
	.word	0x2dc
	.long	0x1f4f0
	.long	0x1416c
	.long	0x14172
	.uleb128 0x2
	.long	0x1f4d2
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF80
	.byte	0x11
	.word	0x2e2
	.long	0x1f4f5
	.long	0x14186
	.long	0x1418c
	.uleb128 0x2
	.long	0x1f4e6
	.byte	0
	.uleb128 0x125
	.secrel32	.LASF25
	.byte	0x11
	.word	0x2e7
	.byte	0x10
	.long	0x1ab64
	.byte	0x1
	.long	0x141a3
	.long	0x141a9
	.uleb128 0x2
	.long	0x1f4e6
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF35
	.byte	0x11
	.word	0x2ef
	.long	0x1411a
	.long	0x141bd
	.long	0x141c3
	.uleb128 0x2
	.long	0x1f4d2
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF81
	.byte	0x11
	.word	0x30a
	.byte	0xc
	.byte	0x1
	.long	0x141d5
	.long	0x141e0
	.uleb128 0x2
	.long	0x1f4d2
	.uleb128 0x1
	.long	0x2ac7
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF23
	.byte	0x11
	.word	0x310
	.byte	0x7
	.byte	0x1
	.long	0x141f2
	.long	0x141fd
	.uleb128 0x2
	.long	0x1f4d2
	.uleb128 0x1
	.long	0x1f4e1
	.byte	0
	.uleb128 0x126
	.secrel32	.LASF75
	.byte	0x11
	.word	0x317
	.byte	0x7
	.byte	0x1
	.long	0x14210
	.long	0x1421b
	.uleb128 0x2
	.long	0x1f4d2
	.uleb128 0x1
	.long	0x1f4fa
	.byte	0
	.uleb128 0x127
	.secrel32	.LASF6
	.byte	0x11
	.word	0x318
	.byte	0x13
	.long	0x1f4e1
	.byte	0x1
	.long	0x14232
	.long	0x1423d
	.uleb128 0x2
	.long	0x1f4d2
	.uleb128 0x1
	.long	0x1f4fa
	.byte	0
	.uleb128 0x128
	.ascii "unique_ptr<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*>\0"
	.byte	0x11
	.word	0x256
	.byte	0x2
	.byte	0x1
	.long	0x142c2
	.long	0x142cd
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1f3f1
	.uleb128 0x60
	.ascii "_Vp\0"
	.long	0x12e26
	.uleb128 0x2
	.long	0x1f4d2
	.uleb128 0x1
	.long	0x1f3f1
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF82
	.byte	0x11
	.word	0x244
	.byte	0xc
	.byte	0x1
	.long	0x142e8
	.long	0x142ee
	.uleb128 0x5e
	.secrel32	.LASF83
	.long	0x12e26
	.uleb128 0x2
	.long	0x1f4d2
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f5c5
	.uleb128 0xa
	.ascii "_Dp\0"
	.long	0x12e26
	.byte	0
	.uleb128 0x4
	.long	0x13f93
	.uleb128 0xe3
	.ascii "barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0xcc
	.long	0x14536
	.uleb128 0x129
	.ascii "__algorithm_t\0"
	.byte	0x13
	.byte	0xd0
	.byte	0xd
	.long	0x1331c
	.byte	0x8
	.uleb128 0x80
	.ascii "_M_b\0"
	.byte	0x13
	.byte	0xd1
	.byte	0x15
	.long	0x1434d
	.byte	0x8
	.byte	0
	.uleb128 0xe4
	.ascii "max\0"
	.byte	0xe3
	.long	0x2932
	.uleb128 0x12a
	.ascii "barrier\0"
	.byte	0x13
	.byte	0xe7
	.byte	0x7
	.byte	0x1
	.long	0x14396
	.long	0x143a6
	.uleb128 0x2
	.long	0x1f531
	.uleb128 0x1
	.long	0x2932
	.uleb128 0x1
	.long	0x262f0
	.byte	0
	.uleb128 0x12b
	.ascii "barrier\0"
	.byte	0x13
	.byte	0xeb
	.byte	0x7
	.byte	0x1
	.long	0x143bc
	.long	0x143c7
	.uleb128 0x2
	.long	0x1f531
	.uleb128 0x1
	.long	0x1f53b
	.byte	0
	.uleb128 0x12c
	.secrel32	.LASF6
	.byte	0x13
	.byte	0xec
	.byte	0x10
	.long	0x1f540
	.byte	0x1
	.long	0x143dd
	.long	0x143e8
	.uleb128 0x2
	.long	0x1f531
	.uleb128 0x1
	.long	0x1f53b
	.byte	0
	.uleb128 0x12d
	.secrel32	.LASF135
	.byte	0x1
	.byte	0x13
	.byte	0xd4
	.byte	0xd
	.byte	0x1
	.long	0x1449b
	.uleb128 0xe2
	.secrel32	.LASF135
	.byte	0x13
	.byte	0xd7
	.byte	0x2
	.long	0x14408
	.long	0x14413
	.uleb128 0x2
	.long	0x1f7a7
	.uleb128 0x1
	.long	0x1f54f
	.byte	0
	.uleb128 0x12e
	.secrel32	.LASF6
	.byte	0x13
	.byte	0xd8
	.byte	0x11
	.long	0x1f7b1
	.byte	0x1
	.byte	0x1
	.long	0x1442a
	.long	0x14435
	.uleb128 0x2
	.long	0x1f7a7
	.uleb128 0x1
	.long	0x1f54f
	.byte	0
	.uleb128 0x12f
	.ascii "~arrival_token\0"
	.byte	0x13
	.byte	0xd9
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.long	0x14453
	.long	0x1445e
	.uleb128 0x2
	.long	0x1f7a7
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x130
	.secrel32	.LASF135
	.byte	0x13
	.byte	0xde
	.byte	0xb
	.long	0x1446f
	.long	0x1447a
	.uleb128 0x2
	.long	0x1f7a7
	.uleb128 0x1
	.long	0x1447a
	.byte	0
	.uleb128 0x13
	.ascii "__token\0"
	.byte	0x13
	.byte	0xdd
	.byte	0x8
	.long	0x13485
	.uleb128 0x16
	.ascii "_M_tok\0"
	.byte	0x13
	.byte	0xdf
	.byte	0xa
	.long	0x1447a
	.byte	0
	.byte	0
	.uleb128 0xe6
	.ascii "arrive\0"
	.byte	0xef
	.long	0x143e8
	.long	0x144b1
	.long	0x144bc
	.uleb128 0x2
	.long	0x1f531
	.uleb128 0x1
	.long	0x2932
	.byte	0
	.uleb128 0x70
	.secrel32	.LASF29
	.byte	0x13
	.byte	0xf3
	.byte	0x7
	.long	0x144cc
	.long	0x144d7
	.uleb128 0x2
	.long	0x1f545
	.uleb128 0x1
	.long	0x1f54f
	.byte	0
	.uleb128 0xe5
	.ascii "arrive_and_wait\0"
	.byte	0xf7
	.long	0x144f2
	.long	0x144f8
	.uleb128 0x2
	.long	0x1f531
	.byte	0
	.uleb128 0x70
	.secrel32	.LASF136
	.byte	0x13
	.byte	0xfb
	.byte	0x7
	.long	0x14508
	.long	0x1450e
	.uleb128 0x2
	.long	0x1f531
	.byte	0
	.uleb128 0xe7
	.ascii "~barrier\0"
	.long	0x14521
	.long	0x1452c
	.uleb128 0x2
	.long	0x1f531
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF137
	.long	0x262f0
	.byte	0
	.uleb128 0x4
	.long	0x14306
	.uleb128 0x54
	.secrel32	.LASF138
	.byte	0x1
	.byte	0x26
	.word	0x65c
	.byte	0xc
	.long	0x14560
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x65d
	.byte	0x15
	.long	0x26556
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x26556
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF138
	.byte	0x1
	.byte	0x26
	.word	0x65c
	.byte	0xc
	.long	0x14585
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x65d
	.byte	0x15
	.long	0x2674c
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x2674c
	.byte	0
	.uleb128 0x1f
	.ascii "remove_reference<std::thread::id&>\0"
	.byte	0x1
	.byte	0x26
	.word	0x660
	.byte	0xc
	.long	0x145c9
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x661
	.byte	0x15
	.long	0x79b8
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x24347
	.byte	0
	.uleb128 0x1f
	.ascii "ratio<1000000000, 1>\0"
	.byte	0x1
	.byte	0x33
	.word	0x10a
	.byte	0xc
	.long	0x14667
	.uleb128 0xbc
	.ascii "num\0"
	.word	0x111
	.ascii "_ZNSt5ratioILx1000000000ELx1EE3numE\0"
	.long	0x1ab4d
	.long	0x3b9aca00
	.uleb128 0x2e
	.ascii "den\0"
	.byte	0x33
	.word	0x114
	.byte	0x21
	.ascii "_ZNSt5ratioILx1000000000ELx1EE3denE\0"
	.long	0x1ab4d
	.byte	0x1
	.uleb128 0xbd
	.secrel32	.LASF84
	.long	0x110
	.long	0x3b9aca00
	.uleb128 0x25
	.secrel32	.LASF85
	.long	0x110
	.byte	0x1
	.byte	0
	.uleb128 0x1b
	.ascii "common_type<std::chrono::duration<long long int, std::ratio<1, 1000> >, std::chrono::duration<long long int, std::ratio<1, 1000> > >\0"
	.byte	0x1
	.byte	0xe
	.byte	0x70
	.byte	0xc
	.long	0x14713
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0xe
	.byte	0x73
	.byte	0xd
	.long	0xa013
	.uleb128 0xbf
	.ascii "_Tp\0"
	.uleb128 0x10
	.long	0xa013
	.uleb128 0x10
	.long	0xa013
	.byte	0
	.byte	0
	.uleb128 0x1b
	.ascii "__duration_common_type<std::common_type<long long int, long long int>, std::ratio<1, 1000>, std::ratio<1, 1>, void>\0"
	.byte	0x1
	.byte	0xe
	.byte	0x52
	.byte	0xc
	.long	0x147b8
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0xe
	.byte	0x5d
	.byte	0xd
	.long	0xa013
	.uleb128 0xa
	.ascii "_CT\0"
	.long	0xc9d1
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0xcbbb
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.byte	0
	.uleb128 0x1f
	.ascii "remove_reference<MATRIX::cell*&>\0"
	.byte	0x1
	.byte	0x26
	.word	0x660
	.byte	0xc
	.long	0x147fa
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x661
	.byte	0x15
	.long	0x1ed80
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x23e3f
	.byte	0
	.uleb128 0x1f
	.ascii "remove_reference<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()>&>\0"
	.byte	0x1
	.byte	0x26
	.word	0x660
	.byte	0xc
	.long	0x14864
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x661
	.byte	0x15
	.long	0x262f0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x18f02
	.byte	0
	.uleb128 0x5f
	.secrel32	.LASF139
	.byte	0x40
	.byte	0x17
	.byte	0xbb
	.byte	0xc
	.long	0x14969
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xbd
	.byte	0x11
	.long	0x14881
	.long	0x14887
	.uleb128 0x2
	.long	0x1f5d1
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc0
	.byte	0x11
	.long	0x14897
	.long	0x148a2
	.uleb128 0x2
	.long	0x1f5d1
	.uleb128 0x1
	.long	0x1f5db
	.byte	0
	.uleb128 0x6a
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc3
	.byte	0x11
	.long	0x148b2
	.long	0x148bd
	.uleb128 0x2
	.long	0x1f5d1
	.uleb128 0x1
	.long	0x1f5e0
	.byte	0
	.uleb128 0x6a
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc4
	.byte	0x11
	.long	0x148cd
	.long	0x148d8
	.uleb128 0x2
	.long	0x1f5d1
	.uleb128 0x1
	.long	0x1f5e5
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xcb
	.byte	0x7
	.long	0x148e8
	.long	0x148f8
	.uleb128 0x2
	.long	0x1f5d1
	.uleb128 0x1
	.long	0x2957
	.uleb128 0x1
	.long	0x29ab
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xe9
	.byte	0x7
	.long	0x1f5ea
	.long	0x1490e
	.uleb128 0x1
	.long	0x1f5ef
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xec
	.byte	0x7
	.long	0x1f5db
	.long	0x14924
	.uleb128 0x1
	.long	0x1f5e0
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF121
	.byte	0x17
	.byte	0xee
	.byte	0xd
	.long	0x26556
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF140
	.byte	0x17
	.byte	0xc7
	.byte	0x13
	.long	0x1494a
	.long	0x14955
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x26556
	.uleb128 0x2
	.long	0x1f5d1
	.uleb128 0x1
	.long	0x17695
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x26556
	.byte	0
	.uleb128 0x4
	.long	0x14864
	.uleb128 0x54
	.secrel32	.LASF142
	.byte	0x40
	.byte	0x17
	.word	0x1a0
	.byte	0xc
	.long	0x14a8e
	.uleb128 0x4b
	.long	0x14864
	.byte	0x3
	.uleb128 0x4d
	.secrel32	.LASF120
	.word	0x1a8
	.byte	0x7
	.long	0x1f5ea
	.long	0x14998
	.uleb128 0x1
	.long	0x1f5f4
	.byte	0
	.uleb128 0x4d
	.secrel32	.LASF120
	.word	0x1ab
	.byte	0x7
	.long	0x1f5db
	.long	0x149ae
	.uleb128 0x1
	.long	0x1f5f9
	.byte	0
	.uleb128 0x7c
	.secrel32	.LASF124
	.word	0x1ae
	.byte	0x7
	.long	0x149be
	.long	0x149c4
	.uleb128 0x2
	.long	0x1f5fe
	.byte	0
	.uleb128 0x84
	.secrel32	.LASF124
	.word	0x1b2
	.byte	0x7
	.long	0x149d5
	.long	0x149e0
	.uleb128 0x2
	.long	0x1f5fe
	.uleb128 0x1
	.long	0x1f5db
	.byte	0
	.uleb128 0x8f
	.secrel32	.LASF124
	.word	0x1bc
	.byte	0x11
	.long	0x149f1
	.long	0x149fc
	.uleb128 0x2
	.long	0x1f5fe
	.uleb128 0x1
	.long	0x1f5f9
	.byte	0
	.uleb128 0x9f
	.secrel32	.LASF6
	.word	0x1c0
	.long	0x1f5f4
	.long	0x14a10
	.long	0x14a1b
	.uleb128 0x2
	.long	0x1f5fe
	.uleb128 0x1
	.long	0x1f5f9
	.byte	0
	.uleb128 0x7c
	.secrel32	.LASF124
	.word	0x1c6
	.byte	0x7
	.long	0x14a2b
	.long	0x14a36
	.uleb128 0x2
	.long	0x1f5fe
	.uleb128 0x1
	.long	0x1f608
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF125
	.byte	0x17
	.word	0x220
	.byte	0x7
	.byte	0x2
	.long	0x14a48
	.long	0x14a53
	.uleb128 0x2
	.long	0x1f5fe
	.uleb128 0x1
	.long	0x1f5f4
	.byte	0
	.uleb128 0x84
	.secrel32	.LASF143
	.word	0x1b8
	.byte	0x2
	.long	0x14a6d
	.long	0x14a78
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x26556
	.uleb128 0x2
	.long	0x1f5fe
	.uleb128 0x1
	.long	0x17695
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF126
	.uleb128 0x10
	.long	0x26556
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x1496e
	.uleb128 0xac
	.secrel32	.LASF144
	.byte	0x40
	.byte	0x17
	.word	0x261
	.byte	0xb
	.long	0x14b73
	.uleb128 0x4b
	.long	0x1496e
	.byte	0x1
	.uleb128 0x7d
	.secrel32	.LASF130
	.byte	0x17
	.word	0x2f2
	.byte	0x11
	.long	0x14ab9
	.long	0x14ac4
	.uleb128 0x2
	.long	0x1f60d
	.uleb128 0x1
	.long	0x1f617
	.byte	0
	.uleb128 0x7d
	.secrel32	.LASF130
	.byte	0x17
	.word	0x2f4
	.byte	0x11
	.long	0x14ad5
	.long	0x14ae0
	.uleb128 0x2
	.long	0x1f60d
	.uleb128 0x1
	.long	0x1f61c
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF6
	.byte	0x17
	.word	0x382
	.long	0x1f621
	.long	0x14af4
	.long	0x14aff
	.uleb128 0x2
	.long	0x1f60d
	.uleb128 0x1
	.long	0x14b78
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF6
	.byte	0x17
	.word	0x38d
	.long	0x1f621
	.long	0x14b13
	.long	0x14b1e
	.uleb128 0x2
	.long	0x1f60d
	.uleb128 0x1
	.long	0x14b84
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF23
	.byte	0x17
	.word	0x3ad
	.byte	0x7
	.byte	0x1
	.long	0x14b30
	.long	0x14b3b
	.uleb128 0x2
	.long	0x1f60d
	.uleb128 0x1
	.long	0x1f621
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF144
	.byte	0x17
	.word	0x2e6
	.byte	0x2
	.byte	0x1
	.long	0x14b65
	.long	0x14b70
	.uleb128 0x20
	.secrel32	.LASF145
	.long	0x14b5c
	.uleb128 0x10
	.long	0x26556
	.byte	0
	.uleb128 0x49
	.secrel32	.LASF146
	.long	0x1ab64
	.uleb128 0x2
	.long	0x1f60d
	.uleb128 0x1
	.long	0x17695
	.byte	0
	.uleb128 0x82
	.byte	0
	.uleb128 0x4
	.long	0x14a93
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0xbfb
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0xc07
	.uleb128 0x1b
	.ascii "default_delete<std::thread::_State>\0"
	.byte	0x1
	.byte	0x11
	.byte	0x47
	.byte	0xc
	.long	0x14c58
	.uleb128 0x44
	.secrel32	.LASF116
	.byte	0x11
	.byte	0x4a
	.byte	0x11
	.ascii "_ZNSt14default_deleteINSt6thread6_StateEEC4Ev\0"
	.long	0x14bfb
	.long	0x14c01
	.uleb128 0x2
	.long	0x1f635
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF4
	.byte	0x11
	.byte	0x59
	.byte	0x7
	.ascii "_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_\0"
	.long	0x14c43
	.long	0x14c4e
	.uleb128 0x2
	.long	0x1f63a
	.uleb128 0x1
	.long	0x1f644
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x7d7c
	.byte	0
	.uleb128 0x4
	.long	0x14b90
	.uleb128 0x69
	.ascii "__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >\0"
	.byte	0x8
	.byte	0x11
	.byte	0x8c
	.byte	0xb
	.long	0x151ba
	.uleb128 0x1b
	.ascii "_Ptr<std::thread::_State, std::default_delete<std::thread::_State>, void>\0"
	.byte	0x1
	.byte	0x11
	.byte	0x8f
	.byte	0x9
	.long	0x14d28
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x11
	.byte	0x91
	.byte	0xa
	.long	0x1f644
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x7d7c
	.uleb128 0xa
	.ascii "_Ep\0"
	.long	0x14b90
	.byte	0
	.uleb128 0x99
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xa6
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC4Ev\0"
	.long	0x14d7f
	.long	0x14d85
	.uleb128 0x2
	.long	0x1f6e9
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xa8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC4EPS1_\0"
	.byte	0x1
	.long	0x14ddf
	.long	0x14dea
	.uleb128 0x2
	.long	0x1f6e9
	.uleb128 0x1
	.long	0x14dea
	.byte	0
	.uleb128 0x7b
	.secrel32	.LASF78
	.byte	0x11
	.byte	0xa0
	.byte	0xd
	.long	0x14d09
	.uleb128 0x3a
	.secrel32	.LASF117
	.byte	0x11
	.byte	0xb0
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC4EOS4_\0"
	.byte	0x1
	.long	0x14e50
	.long	0x14e5b
	.uleb128 0x2
	.long	0x1f6e9
	.uleb128 0x1
	.long	0x1f6f3
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF6
	.byte	0x11
	.byte	0xb5
	.byte	0x18
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEaSEOS4_\0"
	.long	0x1f6f8
	.long	0x14eb8
	.long	0x14ec3
	.uleb128 0x2
	.long	0x1f6e9
	.uleb128 0x1
	.long	0x1f6f3
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF114
	.byte	0x11
	.byte	0xbd
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv\0"
	.long	0x1f6fd
	.long	0x14f22
	.long	0x14f28
	.uleb128 0x2
	.long	0x1f6e9
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF114
	.byte	0x11
	.byte	0xbf
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv\0"
	.long	0x14dea
	.long	0x14f88
	.long	0x14f8e
	.uleb128 0x2
	.long	0x1f702
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF118
	.byte	0x11
	.byte	0xc1
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv\0"
	.long	0x1f667
	.long	0x14ff2
	.long	0x14ff8
	.uleb128 0x2
	.long	0x1f6e9
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF118
	.byte	0x11
	.byte	0xc3
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv\0"
	.long	0x1f658
	.long	0x1505d
	.long	0x15063
	.uleb128 0x2
	.long	0x1f702
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF81
	.byte	0x11
	.byte	0xc6
	.byte	0xc
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE5resetEPS1_\0"
	.byte	0x1
	.long	0x150c1
	.long	0x150cc
	.uleb128 0x2
	.long	0x1f6e9
	.uleb128 0x1
	.long	0x14dea
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF35
	.byte	0x11
	.byte	0xcf
	.byte	0xf
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE7releaseEv\0"
	.long	0x14dea
	.long	0x1512c
	.long	0x15132
	.uleb128 0x2
	.long	0x1f6e9
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF23
	.byte	0x11
	.byte	0xd8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE4swapERS4_\0"
	.byte	0x1
	.long	0x1518f
	.long	0x1519a
	.uleb128 0x2
	.long	0x1f6e9
	.uleb128 0x1
	.long	0x1f6f8
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF66
	.byte	0x11
	.byte	0xe0
	.byte	0x1b
	.long	0x16002
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x7d7c
	.uleb128 0xa
	.ascii "_Dp\0"
	.long	0x14b90
	.byte	0
	.uleb128 0x4
	.long	0x14c5d
	.uleb128 0x1b
	.ascii "_Head_base<1, std::default_delete<std::thread::_State>, true>\0"
	.byte	0x1
	.byte	0x17
	.byte	0x4e
	.byte	0xc
	.long	0x15505
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x50
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC4Ev\0"
	.long	0x1525c
	.long	0x15262
	.uleb128 0x2
	.long	0x1f64e
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x53
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC4ERKS3_\0"
	.long	0x152bc
	.long	0x152c7
	.uleb128 0x2
	.long	0x1f64e
	.uleb128 0x1
	.long	0x1f658
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x56
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC4ERKS4_\0"
	.long	0x15321
	.long	0x1532c
	.uleb128 0x2
	.long	0x1f64e
	.uleb128 0x1
	.long	0x1f65d
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x57
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC4EOS4_\0"
	.long	0x15385
	.long	0x15390
	.uleb128 0x2
	.long	0x1f64e
	.uleb128 0x1
	.long	0x1f662
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0x5e
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0x15409
	.long	0x15419
	.uleb128 0x2
	.long	0x1f64e
	.uleb128 0x1
	.long	0x2957
	.uleb128 0x1
	.long	0x29ab
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0x7c
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_\0"
	.long	0x1f667
	.long	0x1547e
	.uleb128 0x1
	.long	0x1f66c
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0x7f
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERKS4_\0"
	.long	0x1f658
	.long	0x154e4
	.uleb128 0x1
	.long	0x1f65d
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF121
	.byte	0x17
	.byte	0x81
	.byte	0x27
	.long	0x14b90
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x14b90
	.byte	0
	.uleb128 0x4
	.long	0x151bf
	.uleb128 0x1f
	.ascii "_Tuple_impl<1, std::default_delete<std::thread::_State> >\0"
	.byte	0x1
	.byte	0x17
	.word	0x1a0
	.byte	0xc
	.long	0x15891
	.uleb128 0x4b
	.long	0x151bf
	.byte	0x3
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x1a8
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_\0"
	.long	0x1f667
	.long	0x155b8
	.uleb128 0x1
	.long	0x1f671
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x1ab
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERKS4_\0"
	.long	0x1f658
	.long	0x1561d
	.uleb128 0x1
	.long	0x1f676
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1ae
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC4Ev\0"
	.long	0x15673
	.long	0x15679
	.uleb128 0x2
	.long	0x1f67b
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1b2
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC4ERKS3_\0"
	.long	0x156d3
	.long	0x156de
	.uleb128 0x2
	.long	0x1f67b
	.uleb128 0x1
	.long	0x1f658
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1bc
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC4ERKS4_\0"
	.long	0x15738
	.long	0x15743
	.uleb128 0x2
	.long	0x1f67b
	.uleb128 0x1
	.long	0x1f676
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0x17
	.word	0x1c0
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEaSERKS4_\0"
	.long	0x1f671
	.long	0x157a1
	.long	0x157ac
	.uleb128 0x2
	.long	0x1f67b
	.uleb128 0x1
	.long	0x1f676
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF124
	.byte	0x17
	.word	0x1c6
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC4EOS4_\0"
	.long	0x15805
	.long	0x15810
	.uleb128 0x2
	.long	0x1f67b
	.uleb128 0x1
	.long	0x1f685
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF125
	.byte	0x17
	.word	0x220
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_swapERS4_\0"
	.byte	0x2
	.long	0x15870
	.long	0x1587b
	.uleb128 0x2
	.long	0x1f67b
	.uleb128 0x1
	.long	0x1f671
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0x1
	.uleb128 0x46
	.secrel32	.LASF126
	.uleb128 0x10
	.long	0x14b90
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x1550a
	.uleb128 0x1b
	.ascii "_Head_base<0, std::thread::_State*, false>\0"
	.byte	0x8
	.byte	0x17
	.byte	0xbb
	.byte	0xc
	.long	0x15b44
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xbd
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC4Ev\0"
	.long	0x1590d
	.long	0x15913
	.uleb128 0x2
	.long	0x1f68a
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc0
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC4ERKS2_\0"
	.long	0x1595a
	.long	0x15965
	.uleb128 0x2
	.long	0x1f68a
	.uleb128 0x1
	.long	0x1f694
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc3
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC4ERKS3_\0"
	.long	0x159ac
	.long	0x159b7
	.uleb128 0x2
	.long	0x1f68a
	.uleb128 0x1
	.long	0x1f699
	.byte	0
	.uleb128 0x44
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc4
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC4EOS3_\0"
	.long	0x159fd
	.long	0x15a08
	.uleb128 0x2
	.long	0x1f68a
	.uleb128 0x1
	.long	0x1f69e
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xcb
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0x15a6e
	.long	0x15a7e
	.uleb128 0x2
	.long	0x1f68a
	.uleb128 0x1
	.long	0x2957
	.uleb128 0x1
	.long	0x29ab
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xe9
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_\0"
	.long	0x1f6a3
	.long	0x15ad0
	.uleb128 0x1
	.long	0x1f6a8
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xec
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERKS3_\0"
	.long	0x1f694
	.long	0x15b23
	.uleb128 0x1
	.long	0x1f699
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF121
	.byte	0x17
	.byte	0xee
	.byte	0xd
	.long	0x1f644
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1f644
	.byte	0
	.uleb128 0x4
	.long	0x15896
	.uleb128 0x1f
	.ascii "_Tuple_impl<0, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x8
	.byte	0x17
	.word	0x102
	.byte	0xc
	.long	0x15ffd
	.uleb128 0x4c
	.long	0x1550a
	.uleb128 0x4b
	.long	0x15896
	.byte	0x3
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x10c
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_\0"
	.long	0x1f6a3
	.long	0x15c16
	.uleb128 0x1
	.long	0x1f6ad
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF120
	.word	0x10f
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERKS5_\0"
	.long	0x1f694
	.long	0x15c7f
	.uleb128 0x1
	.long	0x1f6b2
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF127
	.byte	0x17
	.word	0x108
	.byte	0x2f
	.long	0x1550a
	.uleb128 0x4
	.long	0x15c7f
	.uleb128 0x37
	.secrel32	.LASF128
	.word	0x112
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_tailERS5_\0"
	.long	0x1f6b7
	.long	0x15cf9
	.uleb128 0x1
	.long	0x1f6ad
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF128
	.word	0x115
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_tailERKS5_\0"
	.long	0x1f6bc
	.long	0x15d62
	.uleb128 0x1
	.long	0x1f6b2
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF124
	.byte	0x17
	.word	0x117
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC4Ev\0"
	.long	0x15dbc
	.long	0x15dc2
	.uleb128 0x2
	.long	0x1f6c1
	.byte	0
	.uleb128 0x55
	.secrel32	.LASF124
	.byte	0x17
	.word	0x11b
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC4ERKS2_RKS4_\0"
	.long	0x15e25
	.long	0x15e35
	.uleb128 0x2
	.long	0x1f6c1
	.uleb128 0x1
	.long	0x1f694
	.uleb128 0x1
	.long	0x1f658
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF124
	.byte	0x17
	.word	0x127
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC4ERKS5_\0"
	.long	0x15e93
	.long	0x15e9e
	.uleb128 0x2
	.long	0x1f6c1
	.uleb128 0x1
	.long	0x1f6b2
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF6
	.byte	0x17
	.word	0x12b
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEaSERKS5_\0"
	.long	0x1f6ad
	.long	0x15f00
	.long	0x15f0b
	.uleb128 0x2
	.long	0x1f6c1
	.uleb128 0x1
	.long	0x1f6b2
	.byte	0
	.uleb128 0x2d
	.secrel32	.LASF124
	.byte	0x17
	.word	0x12d
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC4EOS5_\0"
	.long	0x15f68
	.long	0x15f73
	.uleb128 0x2
	.long	0x1f6c1
	.uleb128 0x1
	.long	0x1f6cb
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF125
	.byte	0x17
	.word	0x196
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_swapERS5_\0"
	.byte	0x2
	.long	0x15fd7
	.long	0x15fe2
	.uleb128 0x2
	.long	0x1f6c1
	.uleb128 0x1
	.long	0x1f6ad
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF126
	.uleb128 0x10
	.long	0x1f644
	.uleb128 0x10
	.long	0x14b90
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x15b49
	.uleb128 0x6f
	.ascii "tuple<std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x17
	.word	0x3d5
	.long	0x16309
	.uleb128 0x4b
	.long	0x15b49
	.byte	0x1
	.uleb128 0xc1
	.secrel32	.LASF129
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEE31__nothrow_default_constructibleEv\0"
	.long	0x1ab64
	.uleb128 0x6e
	.secrel32	.LASF130
	.byte	0x17
	.word	0x440
	.byte	0x11
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC4ERKS5_\0"
	.long	0x16111
	.long	0x1611c
	.uleb128 0x2
	.long	0x1f6d0
	.uleb128 0x1
	.long	0x1f6da
	.byte	0
	.uleb128 0x6e
	.secrel32	.LASF130
	.byte	0x17
	.word	0x442
	.byte	0x11
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC4EOS5_\0"
	.long	0x1616e
	.long	0x16179
	.uleb128 0x2
	.long	0x1f6d0
	.uleb128 0x1
	.long	0x1f6df
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF6
	.byte	0x17
	.word	0x4f3
	.byte	0x7
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEaSERKS5_\0"
	.long	0x1f6e4
	.long	0x161d0
	.long	0x161db
	.uleb128 0x2
	.long	0x1f6d0
	.uleb128 0x1
	.long	0x1630e
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF6
	.byte	0x17
	.word	0x4fe
	.byte	0x7
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEaSEOS5_\0"
	.long	0x1f6e4
	.long	0x16231
	.long	0x1623c
	.uleb128 0x2
	.long	0x1f6d0
	.uleb128 0x1
	.long	0x1631a
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF23
	.byte	0x17
	.word	0x533
	.byte	0x7
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEE4swapERS5_\0"
	.byte	0x1
	.long	0x16292
	.long	0x1629d
	.uleb128 0x2
	.long	0x1f6d0
	.uleb128 0x1
	.long	0x1f6e4
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF131
	.byte	0x17
	.word	0x419
	.byte	0x2
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC4ILb1ELb1EEEv\0"
	.byte	0x1
	.long	0x16300
	.long	0x16306
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0x2
	.long	0x1f6d0
	.byte	0
	.uleb128 0x82
	.byte	0
	.uleb128 0x4
	.long	0x16002
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0x32af
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0x32bb
	.uleb128 0x1b
	.ascii "__uniq_ptr_data<std::thread::_State, std::default_delete<std::thread::_State>, true, true>\0"
	.byte	0x8
	.byte	0x11
	.byte	0xe7
	.byte	0xc
	.long	0x16502
	.uleb128 0x4c
	.long	0x14c5d
	.uleb128 0x44
	.secrel32	.LASF134
	.byte	0x11
	.byte	0xea
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EEC4EOS4_\0"
	.long	0x163f0
	.long	0x163fb
	.uleb128 0x2
	.long	0x1f707
	.uleb128 0x1
	.long	0x1f711
	.byte	0
	.uleb128 0xc2
	.secrel32	.LASF6
	.ascii "_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EEaSEOS4_\0"
	.long	0x1f716
	.long	0x1645e
	.long	0x16469
	.uleb128 0x2
	.long	0x1f707
	.uleb128 0x1
	.long	0x1f711
	.byte	0
	.uleb128 0x9e
	.secrel32	.LASF134
	.ascii "_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI4St15__uniq_ptr_implIS1_S3_EEPS1_\0"
	.long	0x164e4
	.long	0x164ef
	.uleb128 0x2
	.long	0x1f707
	.uleb128 0x1
	.long	0x14dea
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x7d7c
	.uleb128 0xa
	.ascii "_Dp\0"
	.long	0x14b90
	.byte	0
	.uleb128 0x1f
	.ascii "__add_lvalue_reference_helper<std::thread::_State, true>\0"
	.byte	0x1
	.byte	0x26
	.word	0x66c
	.byte	0xc
	.long	0x1655c
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x66d
	.byte	0x16
	.long	0x1f71b
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x7d7c
	.byte	0
	.uleb128 0x5f
	.secrel32	.LASF139
	.byte	0x28
	.byte	0x17
	.byte	0xbb
	.byte	0xc
	.long	0x16661
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xbd
	.byte	0x11
	.long	0x16579
	.long	0x1657f
	.uleb128 0x2
	.long	0x1f748
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc0
	.byte	0x11
	.long	0x1658f
	.long	0x1659a
	.uleb128 0x2
	.long	0x1f748
	.uleb128 0x1
	.long	0x1f752
	.byte	0
	.uleb128 0x6a
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc3
	.byte	0x11
	.long	0x165aa
	.long	0x165b5
	.uleb128 0x2
	.long	0x1f748
	.uleb128 0x1
	.long	0x1f757
	.byte	0
	.uleb128 0x6a
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xc4
	.byte	0x11
	.long	0x165c5
	.long	0x165d0
	.uleb128 0x2
	.long	0x1f748
	.uleb128 0x1
	.long	0x1f75c
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF119
	.byte	0x17
	.byte	0xcb
	.byte	0x7
	.long	0x165e0
	.long	0x165f0
	.uleb128 0x2
	.long	0x1f748
	.uleb128 0x1
	.long	0x2957
	.uleb128 0x1
	.long	0x29ab
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xe9
	.byte	0x7
	.long	0x1f761
	.long	0x16606
	.uleb128 0x1
	.long	0x1f766
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF120
	.byte	0x17
	.byte	0xec
	.byte	0x7
	.long	0x1f752
	.long	0x1661c
	.uleb128 0x1
	.long	0x1f757
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF121
	.byte	0x17
	.byte	0xee
	.byte	0xd
	.long	0x2674c
	.byte	0
	.uleb128 0x45
	.secrel32	.LASF140
	.byte	0x17
	.byte	0xc7
	.byte	0x13
	.long	0x16642
	.long	0x1664d
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x2674c
	.uleb128 0x2
	.long	0x1f748
	.uleb128 0x1
	.long	0x176f3
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x2674c
	.byte	0
	.uleb128 0x4
	.long	0x1655c
	.uleb128 0x54
	.secrel32	.LASF142
	.byte	0x28
	.byte	0x17
	.word	0x1a0
	.byte	0xc
	.long	0x16786
	.uleb128 0x4b
	.long	0x1655c
	.byte	0x3
	.uleb128 0x4d
	.secrel32	.LASF120
	.word	0x1a8
	.byte	0x7
	.long	0x1f761
	.long	0x16690
	.uleb128 0x1
	.long	0x1f76b
	.byte	0
	.uleb128 0x4d
	.secrel32	.LASF120
	.word	0x1ab
	.byte	0x7
	.long	0x1f752
	.long	0x166a6
	.uleb128 0x1
	.long	0x1f770
	.byte	0
	.uleb128 0x7c
	.secrel32	.LASF124
	.word	0x1ae
	.byte	0x7
	.long	0x166b6
	.long	0x166bc
	.uleb128 0x2
	.long	0x1f775
	.byte	0
	.uleb128 0x84
	.secrel32	.LASF124
	.word	0x1b2
	.byte	0x7
	.long	0x166cd
	.long	0x166d8
	.uleb128 0x2
	.long	0x1f775
	.uleb128 0x1
	.long	0x1f752
	.byte	0
	.uleb128 0x8f
	.secrel32	.LASF124
	.word	0x1bc
	.byte	0x11
	.long	0x166e9
	.long	0x166f4
	.uleb128 0x2
	.long	0x1f775
	.uleb128 0x1
	.long	0x1f770
	.byte	0
	.uleb128 0x9f
	.secrel32	.LASF6
	.word	0x1c0
	.long	0x1f76b
	.long	0x16708
	.long	0x16713
	.uleb128 0x2
	.long	0x1f775
	.uleb128 0x1
	.long	0x1f770
	.byte	0
	.uleb128 0x7c
	.secrel32	.LASF124
	.word	0x1c6
	.byte	0x7
	.long	0x16723
	.long	0x1672e
	.uleb128 0x2
	.long	0x1f775
	.uleb128 0x1
	.long	0x1f77f
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF125
	.byte	0x17
	.word	0x220
	.byte	0x7
	.byte	0x2
	.long	0x16740
	.long	0x1674b
	.uleb128 0x2
	.long	0x1f775
	.uleb128 0x1
	.long	0x1f76b
	.byte	0
	.uleb128 0x84
	.secrel32	.LASF143
	.word	0x1b8
	.byte	0x2
	.long	0x16765
	.long	0x16770
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x2674c
	.uleb128 0x2
	.long	0x1f775
	.uleb128 0x1
	.long	0x176f3
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF122
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF126
	.uleb128 0x10
	.long	0x2674c
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x16666
	.uleb128 0xac
	.secrel32	.LASF144
	.byte	0x28
	.byte	0x17
	.word	0x261
	.byte	0xb
	.long	0x1686b
	.uleb128 0x4b
	.long	0x16666
	.byte	0x1
	.uleb128 0x7d
	.secrel32	.LASF130
	.byte	0x17
	.word	0x2f2
	.byte	0x11
	.long	0x167b1
	.long	0x167bc
	.uleb128 0x2
	.long	0x1f784
	.uleb128 0x1
	.long	0x1f78e
	.byte	0
	.uleb128 0x7d
	.secrel32	.LASF130
	.byte	0x17
	.word	0x2f4
	.byte	0x11
	.long	0x167cd
	.long	0x167d8
	.uleb128 0x2
	.long	0x1f784
	.uleb128 0x1
	.long	0x1f793
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF6
	.byte	0x17
	.word	0x382
	.long	0x1f798
	.long	0x167ec
	.long	0x167f7
	.uleb128 0x2
	.long	0x1f784
	.uleb128 0x1
	.long	0x16870
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF6
	.byte	0x17
	.word	0x38d
	.long	0x1f798
	.long	0x1680b
	.long	0x16816
	.uleb128 0x2
	.long	0x1f784
	.uleb128 0x1
	.long	0x1687c
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF23
	.byte	0x17
	.word	0x3ad
	.byte	0x7
	.byte	0x1
	.long	0x16828
	.long	0x16833
	.uleb128 0x2
	.long	0x1f784
	.uleb128 0x1
	.long	0x1f798
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF144
	.byte	0x17
	.word	0x2e6
	.byte	0x2
	.byte	0x1
	.long	0x1685d
	.long	0x16868
	.uleb128 0x20
	.secrel32	.LASF145
	.long	0x16854
	.uleb128 0x10
	.long	0x2674c
	.byte	0
	.uleb128 0x49
	.secrel32	.LASF146
	.long	0x1ab64
	.uleb128 0x2
	.long	0x1f784
	.uleb128 0x1
	.long	0x176f3
	.byte	0
	.uleb128 0x82
	.byte	0
	.uleb128 0x4
	.long	0x1678b
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0xc13
	.uleb128 0x19
	.secrel32	.LASF133
	.byte	0x26
	.byte	0x77
	.byte	0xb
	.long	0xc1f
	.uleb128 0x1f
	.ascii "enable_if<true, std::chrono::duration<float, std::ratio<1, 1> > >\0"
	.byte	0x1
	.byte	0x26
	.word	0x8b9
	.byte	0xc
	.long	0x168eb
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x8ba
	.byte	0x13
	.long	0xa785
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xa785
	.byte	0
	.uleb128 0x1b
	.ascii "_Nth_type<0, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x1
	.byte	0x37
	.byte	0xe8
	.byte	0xc
	.long	0x1697a
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x37
	.byte	0xe9
	.byte	0xd
	.long	0x1ed8f
	.uleb128 0x1a
	.ascii "_Np\0"
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF147
	.uleb128 0x10
	.long	0x1ed8f
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "tuple_element<0, std::tuple<MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> > >\0"
	.byte	0x1
	.byte	0x17
	.word	0x54b
	.byte	0xc
	.long	0x16a15
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x17
	.word	0x54f
	.byte	0xd
	.long	0x16953
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x100bc
	.byte	0
	.uleb128 0x1b
	.ascii "_Nth_type<1, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x1
	.byte	0x37
	.byte	0xec
	.byte	0xc
	.long	0x16aa4
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x37
	.byte	0xed
	.byte	0xd
	.long	0xe8dd
	.uleb128 0x1a
	.ascii "_Np\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x46
	.secrel32	.LASF147
	.uleb128 0x10
	.long	0x1ed8f
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "tuple_element<1, std::tuple<MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> > >\0"
	.byte	0x1
	.byte	0x17
	.word	0x54b
	.byte	0xc
	.long	0x16b3f
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x17
	.word	0x54f
	.byte	0xd
	.long	0x16a7d
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x100bc
	.byte	0
	.uleb128 0x1b
	.ascii "_Nth_type<0, std::thread*, std::default_delete<std::thread []> >\0"
	.byte	0x1
	.byte	0x37
	.byte	0xe8
	.byte	0xc
	.long	0x16bb0
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x37
	.byte	0xe9
	.byte	0xd
	.long	0x1bd3a
	.uleb128 0x1a
	.ascii "_Np\0"
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF147
	.uleb128 0x10
	.long	0x1bd3a
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "tuple_element<0, std::tuple<std::thread*, std::default_delete<std::thread []> > >\0"
	.byte	0x1
	.byte	0x17
	.word	0x54b
	.byte	0xc
	.long	0x16c2d
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x17
	.word	0x54f
	.byte	0xd
	.long	0x16b89
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x12323
	.byte	0
	.uleb128 0x1b
	.ascii "_Nth_type<0, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x1
	.byte	0x37
	.byte	0xe8
	.byte	0xc
	.long	0x16d34
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x37
	.byte	0xe9
	.byte	0xd
	.long	0x1f3f1
	.uleb128 0x1a
	.ascii "_Np\0"
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF147
	.uleb128 0x10
	.long	0x1f3f1
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "tuple_element<0, std::tuple<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> > >\0"
	.byte	0x1
	.byte	0x17
	.word	0x54b
	.byte	0xc
	.long	0x16e47
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x17
	.word	0x54f
	.byte	0xd
	.long	0x16d0d
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x13bca
	.byte	0
	.uleb128 0x1f
	.ascii "remove_reference<std::thread::_State*&>\0"
	.byte	0x1
	.byte	0x26
	.word	0x660
	.byte	0xc
	.long	0x16e90
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x661
	.byte	0x15
	.long	0x1f644
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f6a3
	.byte	0
	.uleb128 0x1f
	.ascii "enable_if<true, std::chrono::duration<long long int, std::ratio<1, 1000> > >\0"
	.byte	0x1
	.byte	0x26
	.word	0x8b9
	.byte	0xc
	.long	0x16efe
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x8ba
	.byte	0x13
	.long	0xa013
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xa013
	.byte	0
	.uleb128 0x1b
	.ascii "_Nth_type<1, std::thread*, std::default_delete<std::thread []> >\0"
	.byte	0x1
	.byte	0x37
	.byte	0xec
	.byte	0xc
	.long	0x16f6f
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x37
	.byte	0xed
	.byte	0xd
	.long	0x10fd9
	.uleb128 0x1a
	.ascii "_Np\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x46
	.secrel32	.LASF147
	.uleb128 0x10
	.long	0x1bd3a
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "tuple_element<1, std::tuple<std::thread*, std::default_delete<std::thread []> > >\0"
	.byte	0x1
	.byte	0x17
	.word	0x54b
	.byte	0xc
	.long	0x16fec
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x17
	.word	0x54f
	.byte	0xd
	.long	0x16f48
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x12323
	.byte	0
	.uleb128 0x1b
	.ascii "_Nth_type<1, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x1
	.byte	0x37
	.byte	0xec
	.byte	0xc
	.long	0x170f3
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x37
	.byte	0xed
	.byte	0xd
	.long	0x12e26
	.uleb128 0x1a
	.ascii "_Np\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x46
	.secrel32	.LASF147
	.uleb128 0x10
	.long	0x1f3f1
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "tuple_element<1, std::tuple<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> > >\0"
	.byte	0x1
	.byte	0x17
	.word	0x54b
	.byte	0xc
	.long	0x17206
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x17
	.word	0x54f
	.byte	0xd
	.long	0x170cc
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x13bca
	.byte	0
	.uleb128 0x1f
	.ascii "remove_reference<std::__barrier_phase_t&>\0"
	.byte	0x1
	.byte	0x26
	.word	0x660
	.byte	0xc
	.long	0x17251
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x661
	.byte	0x15
	.long	0xcf6e
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1e325
	.byte	0
	.uleb128 0x1b
	.ascii "_Nth_type<0, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x1
	.byte	0x37
	.byte	0xe8
	.byte	0xc
	.long	0x172cf
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x37
	.byte	0xe9
	.byte	0xd
	.long	0x1f644
	.uleb128 0x1a
	.ascii "_Np\0"
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF147
	.uleb128 0x10
	.long	0x1f644
	.uleb128 0x10
	.long	0x14b90
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "tuple_element<0, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >\0"
	.byte	0x1
	.byte	0x17
	.word	0x54b
	.byte	0xc
	.long	0x17359
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x17
	.word	0x54f
	.byte	0xd
	.long	0x172a8
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x16002
	.byte	0
	.uleb128 0x1b
	.ascii "_Nth_type<1, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x1
	.byte	0x37
	.byte	0xec
	.byte	0xc
	.long	0x173d7
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x37
	.byte	0xed
	.byte	0xd
	.long	0x14b90
	.uleb128 0x1a
	.ascii "_Np\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x46
	.secrel32	.LASF147
	.uleb128 0x10
	.long	0x1f644
	.uleb128 0x10
	.long	0x14b90
	.byte	0
	.byte	0
	.uleb128 0x1f
	.ascii "tuple_element<1, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >\0"
	.byte	0x1
	.byte	0x17
	.word	0x54b
	.byte	0xc
	.long	0x17461
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x17
	.word	0x54f
	.byte	0xd
	.long	0x173b0
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x16002
	.byte	0
	.uleb128 0x1f
	.ascii "remove_volatile<std::__barrier_phase_t>\0"
	.byte	0x1
	.byte	0x26
	.word	0x611
	.byte	0xc
	.long	0x174aa
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x612
	.byte	0x17
	.long	0xcf6e
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.byte	0
	.uleb128 0x1b
	.ascii "_Index_tuple<0>\0"
	.byte	0x1
	.byte	0x37
	.byte	0x8c
	.byte	0x27
	.long	0x174d9
	.uleb128 0x131
	.ascii "_Indexes\0"
	.byte	0x37
	.byte	0x8c
	.byte	0x16
	.uleb128 0x8e
	.long	0xf1
	.byte	0
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF148
	.byte	0x1
	.byte	0x26
	.word	0x660
	.byte	0xc
	.long	0x174fe
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x661
	.byte	0x15
	.long	0x1678b
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f798
	.byte	0
	.uleb128 0x5f
	.secrel32	.LASF149
	.byte	0x1
	.byte	0x37
	.byte	0xe8
	.byte	0xc
	.long	0x1752d
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x37
	.byte	0xe9
	.byte	0xd
	.long	0x2674c
	.uleb128 0x1a
	.ascii "_Np\0"
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF147
	.uleb128 0x10
	.long	0x2674c
	.byte	0
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF150
	.byte	0x1
	.byte	0x17
	.word	0x54b
	.byte	0xc
	.long	0x1755c
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x17
	.word	0x54f
	.byte	0xd
	.long	0x1750b
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1678b
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF148
	.byte	0x1
	.byte	0x26
	.word	0x660
	.byte	0xc
	.long	0x17581
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x26
	.word	0x661
	.byte	0x15
	.long	0x14a93
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f621
	.byte	0
	.uleb128 0x5f
	.secrel32	.LASF149
	.byte	0x1
	.byte	0x37
	.byte	0xe8
	.byte	0xc
	.long	0x175b0
	.uleb128 0x19
	.secrel32	.LASF2
	.byte	0x37
	.byte	0xe9
	.byte	0xd
	.long	0x26556
	.uleb128 0x1a
	.ascii "_Np\0"
	.long	0xf1
	.byte	0
	.uleb128 0x46
	.secrel32	.LASF147
	.uleb128 0x10
	.long	0x26556
	.byte	0
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF150
	.byte	0x1
	.byte	0x17
	.word	0x54b
	.byte	0xc
	.long	0x175df
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x17
	.word	0x54f
	.byte	0xd
	.long	0x1758e
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x14a93
	.byte	0
	.uleb128 0xd4
	.ascii "__throw_system_error\0"
	.byte	0x38
	.byte	0x69
	.byte	0x3
	.ascii "_ZSt20__throw_system_errori\0"
	.long	0x1761f
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x132
	.secrel32	.LASF151
	.byte	0x39
	.byte	0x50
	.byte	0x8
	.secrel32	.LASF253
	.uleb128 0x28
	.ascii "_Hash_bytes\0"
	.byte	0x3a
	.byte	0x2f
	.byte	0x3
	.ascii "_ZSt11_Hash_bytesPKvyy\0"
	.long	0xe3f
	.long	0x1766b
	.uleb128 0x1
	.long	0x519
	.uleb128 0x1
	.long	0xe3f
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0xa0
	.secrel32	.LASF152
	.byte	0x3c
	.long	0x1769b
	.uleb128 0xa1
	.ascii "_Res\0"
	.uleb128 0xa
	.ascii "_Fn\0"
	.long	0x26556
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x1
	.long	0xe54
	.uleb128 0x1
	.long	0x17695
	.uleb128 0x1e
	.long	0x26556
	.byte	0
	.uleb128 0x4d
	.secrel32	.LASF153
	.word	0x554
	.byte	0x5
	.long	0x1f5ea
	.long	0x176c9
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x26556
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x1
	.long	0x1f5f4
	.byte	0
	.uleb128 0xa0
	.secrel32	.LASF152
	.byte	0x3c
	.long	0x176f9
	.uleb128 0xa1
	.ascii "_Res\0"
	.uleb128 0xa
	.ascii "_Fn\0"
	.long	0x2674c
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x1
	.long	0xe54
	.uleb128 0x1
	.long	0x176f3
	.uleb128 0x1e
	.long	0x2674c
	.byte	0
	.uleb128 0x4d
	.secrel32	.LASF153
	.word	0x554
	.byte	0x5
	.long	0x1f761
	.long	0x17727
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x2674c
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x1
	.long	0x1f76b
	.byte	0
	.uleb128 0xa0
	.secrel32	.LASF155
	.byte	0x5a
	.long	0x17746
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x26556
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x1
	.long	0x17695
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF156
	.byte	0x37
	.byte	0x54
	.byte	0xb
	.long	0x175be
	.uleb128 0x4d
	.secrel32	.LASF157
	.word	0x570
	.byte	0x5
	.long	0x2023c
	.long	0x17781
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x1777b
	.uleb128 0x10
	.long	0x26556
	.byte	0
	.uleb128 0x1
	.long	0x1f61c
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF158
	.byte	0x14
	.byte	0x68
	.byte	0x5
	.long	0x20286
	.long	0x177a0
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f621
	.uleb128 0x1
	.long	0x1f621
	.byte	0
	.uleb128 0xa0
	.secrel32	.LASF155
	.byte	0x5a
	.long	0x177bf
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x2674c
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x1
	.long	0x176f3
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF156
	.byte	0x37
	.byte	0x54
	.byte	0xb
	.long	0x1753b
	.uleb128 0x4d
	.secrel32	.LASF157
	.word	0x570
	.byte	0x5
	.long	0x202fd
	.long	0x177fa
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x177f4
	.uleb128 0x10
	.long	0x2674c
	.byte	0
	.uleb128 0x1
	.long	0x1f793
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF158
	.byte	0x14
	.byte	0x68
	.byte	0x5
	.long	0x20347
	.long	0x17819
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f798
	.uleb128 0x1
	.long	0x1f798
	.byte	0
	.uleb128 0x4d
	.secrel32	.LASF159
	.word	0x559
	.byte	0x5
	.long	0x1f441
	.long	0x17851
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1f3f1
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x1784b
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.uleb128 0x1
	.long	0x1f45f
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF156
	.byte	0x37
	.byte	0x54
	.byte	0xb
	.long	0x16e26
	.uleb128 0x4
	.long	0x17851
	.uleb128 0x4d
	.secrel32	.LASF160
	.word	0x56a
	.byte	0x5
	.long	0x20647
	.long	0x17896
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x17890
	.uleb128 0x10
	.long	0x1f3f1
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.uleb128 0x1
	.long	0x1f487
	.byte	0
	.uleb128 0x8b
	.ascii "__atomic_impl\0"
	.byte	0xb
	.word	0x3ad
	.byte	0xd
	.long	0x17b5d
	.uleb128 0x26
	.ascii "compare_exchange_strong<std::__barrier_phase_t>\0"
	.byte	0xb
	.word	0x3e7
	.byte	0x7
	.ascii "_ZNSt13__atomic_impl23compare_exchange_strongISt17__barrier_phase_tEEbPT_RNSt15remove_volatileIS2_E4typeES6_St12memory_orderS8_\0"
	.long	0x1ab64
	.long	0x1798e
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x1
	.long	0x1e334
	.uleb128 0x1
	.long	0x207e9
	.uleb128 0x1
	.long	0x1798e
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x22
	.ascii "_Val\0"
	.byte	0xb
	.word	0x3b1
	.byte	0xd
	.long	0x17b5d
	.uleb128 0xa2
	.ascii "notify_all<std::__barrier_phase_t>\0"
	.byte	0xb
	.word	0x407
	.byte	0x7
	.ascii "_ZNSt13__atomic_impl10notify_allISt17__barrier_phase_tEEvPKT_\0"
	.long	0x17a16
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x1
	.long	0x1e39a
	.byte	0
	.uleb128 0xa2
	.ascii "store<std::__barrier_phase_t>\0"
	.byte	0xb
	.word	0x3c1
	.byte	0x7
	.ascii "_ZNSt13__atomic_impl5storeISt17__barrier_phase_tEEvPT_NSt15remove_volatileIS2_E4typeESt12memory_order\0"
	.long	0x17abd
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x1
	.long	0x1e334
	.uleb128 0x1
	.long	0x1798e
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0xbe
	.ascii "load<std::__barrier_phase_t>\0"
	.byte	0xb
	.word	0x3c6
	.ascii "_ZNSt13__atomic_impl4loadISt17__barrier_phase_tEENSt15remove_volatileIT_E4typeEPKS3_St12memory_order\0"
	.long	0x1798e
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x1
	.long	0x1e39a
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.byte	0
	.uleb128 0x22
	.ascii "remove_volatile_t\0"
	.byte	0x26
	.word	0x645
	.byte	0xb
	.long	0x17493
	.uleb128 0xa2
	.ascii "__atomic_notify_address<std::__barrier_phase_t>\0"
	.byte	0xa
	.word	0x1c9
	.byte	0x5
	.ascii "_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b\0"
	.long	0x17c01
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x1
	.long	0x1e39a
	.uleb128 0x1
	.long	0x1ab64
	.byte	0
	.uleb128 0x26
	.ascii "__get_helper<1, std::default_delete<std::thread::_State> >\0"
	.byte	0x17
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE\0"
	.long	0x1f667
	.long	0x17ccc
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x14b90
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x1
	.long	0x1f671
	.byte	0
	.uleb128 0x28
	.ascii "__addressof<std::__barrier_phase_t>\0"
	.byte	0x14
	.byte	0x31
	.byte	0x5
	.ascii "_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_\0"
	.long	0x1e334
	.long	0x17d3b
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x1
	.long	0x1e325
	.byte	0
	.uleb128 0x28
	.ascii "__addressof<const std::__barrier_phase_t>\0"
	.byte	0x14
	.byte	0x31
	.byte	0x5
	.ascii "_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_\0"
	.long	0x1e39a
	.long	0x17db1
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf89
	.uleb128 0x1
	.long	0x1e38b
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF156
	.byte	0x37
	.byte	0x54
	.byte	0xb
	.long	0x17440
	.uleb128 0x26
	.ascii "get<1, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x17
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_\0"
	.long	0x214b9
	.long	0x17ea5
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x17e9f
	.uleb128 0x10
	.long	0x1f644
	.uleb128 0x10
	.long	0x14b90
	.byte	0
	.uleb128 0x1
	.long	0x1f6e4
	.byte	0
	.uleb128 0x26
	.ascii "__get_helper<0, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x17
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE\0"
	.long	0x1f6a3
	.long	0x17f94
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1f644
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x17f8e
	.uleb128 0x10
	.long	0x14b90
	.byte	0
	.uleb128 0x1
	.long	0x1f6ad
	.byte	0
	.uleb128 0x133
	.ascii "__atomic_wait_address<std::__barrier_phase_t, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::wait(arrival_token&&) const::<lambda()> >\0"
	.byte	0xa
	.word	0x1ac
	.byte	0x5
	.long	0x18060
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x2232b
	.uleb128 0x1
	.long	0x1e39a
	.uleb128 0x1
	.long	0x2232b
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF161
	.word	0x559
	.byte	0x5
	.ascii "_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE\0"
	.long	0x1f333
	.long	0x180fc
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1bd3a
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x180f6
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.uleb128 0x1
	.long	0x1f351
	.byte	0
	.uleb128 0x64
	.ascii "__get_helper<1, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x17
	.word	0x554
	.byte	0x5
	.long	0x1f414
	.long	0x181a8
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x12e26
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x1
	.long	0x1f41e
	.byte	0
	.uleb128 0x26
	.ascii "__get_helper<1, std::default_delete<std::thread []> >\0"
	.byte	0x17
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE\0"
	.long	0x1f306
	.long	0x18267
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x10fd9
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x1
	.long	0x1f310
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF162
	.word	0x559
	.byte	0x5
	.ascii "_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE\0"
	.long	0x1eddf
	.long	0x18317
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1ed8f
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x18311
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.uleb128 0x1
	.long	0x1edfd
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF156
	.byte	0x37
	.byte	0x54
	.byte	0xb
	.long	0x17338
	.uleb128 0x26
	.ascii "get<0, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x17
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_\0"
	.long	0x21fb4
	.long	0x1840b
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x18405
	.uleb128 0x10
	.long	0x1f644
	.uleb128 0x10
	.long	0x14b90
	.byte	0
	.uleb128 0x1
	.long	0x1f6e4
	.byte	0
	.uleb128 0x28
	.ascii "move<std::__barrier_phase_t&>\0"
	.byte	0x14
	.byte	0x68
	.byte	0x5
	.ascii "_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_\0"
	.long	0x22420
	.long	0x1848a
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1e325
	.uleb128 0x1
	.long	0x1e325
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF156
	.byte	0x37
	.byte	0x54
	.byte	0xb
	.long	0x16c0c
	.uleb128 0x4
	.long	0x1848a
	.uleb128 0x37
	.secrel32	.LASF163
	.word	0x56a
	.byte	0x5
	.ascii "_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_\0"
	.long	0x22459
	.long	0x18539
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x18533
	.uleb128 0x10
	.long	0x1bd3a
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.uleb128 0x1
	.long	0x1f379
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF156
	.byte	0x37
	.byte	0x54
	.byte	0xb
	.long	0x171e5
	.uleb128 0x64
	.ascii "get<1, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x17
	.word	0x564
	.byte	0x5
	.long	0x224a8
	.long	0x18647
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x18641
	.uleb128 0x10
	.long	0x1f3f1
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.uleb128 0x1
	.long	0x1f491
	.byte	0
	.uleb128 0x4d
	.secrel32	.LASF159
	.word	0x554
	.byte	0x5
	.long	0x1f450
	.long	0x1867f
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1f3f1
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x18679
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.uleb128 0x1
	.long	0x1f45a
	.byte	0
	.uleb128 0xb1
	.ascii "forward<std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x14
	.byte	0x4d
	.byte	0x5
	.long	0x22545
	.long	0x18714
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x12e26
	.uleb128 0x1
	.long	0x2254a
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF156
	.byte	0x37
	.byte	0x54
	.byte	0xb
	.long	0x16fcb
	.uleb128 0x26
	.ascii "get<1, std::thread*, std::default_delete<std::thread []> >\0"
	.byte	0x17
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_\0"
	.long	0x22726
	.long	0x187f4
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x187ee
	.uleb128 0x10
	.long	0x1bd3a
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.uleb128 0x1
	.long	0x1f383
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF161
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE\0"
	.long	0x1f342
	.long	0x1888e
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1bd3a
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x18888
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.uleb128 0x1
	.long	0x1f34c
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF156
	.byte	0x37
	.byte	0x54
	.byte	0xb
	.long	0x169f4
	.uleb128 0x4
	.long	0x1888e
	.uleb128 0x37
	.secrel32	.LASF164
	.word	0x56a
	.byte	0x5
	.ascii "_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_\0"
	.long	0x22955
	.long	0x18951
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x1894b
	.uleb128 0x10
	.long	0x1ed8f
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.uleb128 0x1
	.long	0x1ee25
	.byte	0
	.uleb128 0x26
	.ascii "__get_helper<1, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x17
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE\0"
	.long	0x1edb2
	.long	0x18a33
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0xe8dd
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x1
	.long	0x1edbc
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF162
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE\0"
	.long	0x1edee
	.long	0x18ae1
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1ed8f
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x18adb
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.uleb128 0x1
	.long	0x1edf8
	.byte	0
	.uleb128 0x28
	.ascii "move<std::thread::_State*&>\0"
	.byte	0x14
	.byte	0x68
	.byte	0x5
	.ascii "_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_\0"
	.long	0x22b83
	.long	0x18b5c
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f6a3
	.uleb128 0x1
	.long	0x1f6a3
	.byte	0
	.uleb128 0x4d
	.secrel32	.LASF160
	.word	0x564
	.byte	0x5
	.long	0x22e02
	.long	0x18b90
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x18b8a
	.uleb128 0x10
	.long	0x1f3f1
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.uleb128 0x1
	.long	0x1f491
	.byte	0
	.uleb128 0x64
	.ascii "make_unique<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>\0"
	.byte	0x11
	.word	0x437
	.byte	0x5
	.long	0x1ffc
	.long	0x18c13
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f5c5
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF163
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_\0"
	.long	0x22fc3
	.long	0x18caf
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x18ca9
	.uleb128 0x10
	.long	0x1bd3a
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.uleb128 0x1
	.long	0x1f383
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF156
	.byte	0x37
	.byte	0x54
	.byte	0xb
	.long	0x16b1e
	.uleb128 0x26
	.ascii "get<1, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x17
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_\0"
	.long	0x23167
	.long	0x18dc1
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x18dbb
	.uleb128 0x10
	.long	0x1ed8f
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.uleb128 0x1
	.long	0x1ee2f
	.byte	0
	.uleb128 0x37
	.secrel32	.LASF164
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_\0"
	.long	0x231b6
	.long	0x18e71
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x18e6b
	.uleb128 0x10
	.long	0x1ed8f
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.uleb128 0x1
	.long	0x1ee2f
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF165
	.byte	0x14
	.byte	0x4d
	.byte	0x5
	.long	0x176f3
	.long	0x18e90
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x2674c
	.uleb128 0x1
	.long	0x23631
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF165
	.byte	0x14
	.byte	0x4d
	.byte	0x5
	.long	0x17695
	.long	0x18eaf
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x26556
	.uleb128 0x1
	.long	0x23968
	.byte	0
	.uleb128 0xb1
	.ascii "move<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()>&>\0"
	.byte	0x14
	.byte	0x68
	.byte	0x5
	.long	0x23c1e
	.long	0x18f0d
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x18f02
	.uleb128 0x7
	.long	0x262f0
	.uleb128 0x1
	.long	0x18f02
	.byte	0
	.uleb128 0x28
	.ascii "move<MATRIX::cell*&>\0"
	.byte	0x14
	.byte	0x68
	.byte	0x5
	.ascii "_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_\0"
	.long	0x23e3a
	.long	0x18f7d
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x23e3f
	.uleb128 0x1
	.long	0x23e3f
	.byte	0
	.uleb128 0x28
	.ascii "forward<std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x14
	.byte	0x4d
	.byte	0x5
	.ascii "_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE\0"
	.long	0x23ea4
	.long	0x1903b
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xe8dd
	.uleb128 0x1
	.long	0x23ea9
	.byte	0
	.uleb128 0x28
	.ascii "move<std::thread::id&>\0"
	.byte	0x14
	.byte	0x68
	.byte	0x5
	.ascii "_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_\0"
	.long	0x24342
	.long	0x190ac
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x24347
	.uleb128 0x1
	.long	0x24347
	.byte	0
	.uleb128 0x26
	.ascii "cbrt<unsigned int>\0"
	.byte	0x3
	.word	0x500
	.byte	0x5
	.ascii "_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_\0"
	.long	0x19b9b
	.long	0x1912e
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1e2
	.uleb128 0x1
	.long	0x1e2
	.byte	0
	.uleb128 0x90
	.ascii "swap<MATRIX::cell*>\0"
	.byte	0x14
	.byte	0xc4
	.byte	0x5
	.ascii "_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_\0"
	.long	0x19209
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1ed80
	.uleb128 0x1
	.long	0x23e3f
	.uleb128 0x1
	.long	0x23e3f
	.byte	0
	.uleb128 0x8b
	.ascii "this_thread\0"
	.byte	0xd
	.word	0x12e
	.byte	0xd
	.long	0x193a0
	.uleb128 0x90
	.ascii "sleep_for<long long int, std::ratio<1, 1000000000> >\0"
	.byte	0x15
	.byte	0x44
	.byte	0x7
	.ascii "_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE\0"
	.long	0x192cf
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x1
	.long	0x1be51
	.byte	0
	.uleb128 0x90
	.ascii "sleep_for<long long int, std::ratio<1, 1000> >\0"
	.byte	0x15
	.byte	0x44
	.byte	0x7
	.ascii "_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE\0"
	.long	0x19373
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcbbb
	.uleb128 0x1
	.long	0x1beba
	.byte	0
	.uleb128 0x30
	.ascii "get_id\0"
	.byte	0xd
	.word	0x132
	.byte	0x5
	.ascii "_ZNSt11this_thread6get_idEv\0"
	.long	0x79b8
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF166
	.byte	0x26
	.word	0xa3e
	.byte	0xb
	.long	0x146f5
	.uleb128 0x90
	.ascii "swap<std::thread::id>\0"
	.byte	0x14
	.byte	0xc4
	.byte	0x5
	.ascii "_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_\0"
	.long	0x19489
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x79b8
	.uleb128 0x1
	.long	0x24347
	.uleb128 0x1
	.long	0x24347
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF166
	.byte	0x26
	.word	0xa3e
	.byte	0xb
	.long	0xccfe
	.uleb128 0x23
	.secrel32	.LASF166
	.byte	0x26
	.word	0xa3e
	.byte	0xb
	.long	0xcab6
	.uleb128 0x26
	.ascii "operator==\0"
	.byte	0xd
	.word	0x118
	.byte	0x3
	.ascii "_ZSteqNSt6thread2idES0_\0"
	.long	0x1ab64
	.long	0x194de
	.uleb128 0x1
	.long	0x79b8
	.uleb128 0x1
	.long	0x79b8
	.byte	0
	.uleb128 0x28
	.ascii "__is_valid_cmpexch_failure_order\0"
	.byte	0xb
	.byte	0x7d
	.byte	0x3
	.ascii "_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order\0"
	.long	0x1ab64
	.long	0x19548
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x28
	.ascii "__cmpexch_failure_order\0"
	.byte	0xb
	.byte	0x76
	.byte	0x3
	.ascii "_ZSt23__cmpexch_failure_orderSt12memory_order\0"
	.long	0x3a08
	.long	0x195a0
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x28
	.ascii "__cmpexch_failure_order2\0"
	.byte	0xb
	.byte	0x6f
	.byte	0x3
	.ascii "_ZSt24__cmpexch_failure_order2St12memory_order\0"
	.long	0x3a08
	.long	0x195fa
	.uleb128 0x1
	.long	0x3a08
	.byte	0
	.uleb128 0x28
	.ascii "operator&\0"
	.byte	0xb
	.byte	0x68
	.byte	0x3
	.ascii "_ZStanSt12memory_orderSt23__memory_order_modifier\0"
	.long	0x3a08
	.long	0x1964d
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a5d
	.byte	0
	.uleb128 0x28
	.ascii "operator|\0"
	.byte	0xb
	.byte	0x62
	.byte	0x3
	.ascii "_ZStorSt12memory_orderSt23__memory_order_modifier\0"
	.long	0x3a08
	.long	0x196a0
	.uleb128 0x1
	.long	0x3a08
	.uleb128 0x1
	.long	0x3a5d
	.byte	0
	.uleb128 0x26
	.ascii "operator<=\0"
	.byte	0x4
	.word	0x130
	.byte	0x5
	.ascii "_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE\0"
	.long	0x1ab64
	.long	0x196f4
	.uleb128 0x1
	.long	0x11eb
	.uleb128 0x1
	.long	0x104f
	.byte	0
	.uleb128 0x26
	.ascii "operator<\0"
	.byte	0x4
	.word	0x126
	.byte	0x5
	.ascii "_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE\0"
	.long	0x1ab64
	.long	0x19747
	.uleb128 0x1
	.long	0x11eb
	.uleb128 0x1
	.long	0x104f
	.byte	0
	.uleb128 0x26
	.ascii "floor\0"
	.byte	0x3
	.word	0x104
	.byte	0x3
	.ascii "_ZSt5floorf\0"
	.long	0x4ec
	.long	0x1976c
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x28
	.ascii "fabs\0"
	.byte	0x3
	.byte	0xf1
	.byte	0x3
	.ascii "_ZSt4fabsf\0"
	.long	0x4ec
	.long	0x1978e
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x85
	.ascii "__is_constant_evaluated\0"
	.byte	0x1
	.word	0x204
	.byte	0x3
	.long	0x1ab64
	.uleb128 0x134
	.ascii "__terminate\0"
	.byte	0x1
	.word	0x135
	.byte	0xf
	.ascii "_ZSt11__terminatev\0"
	.byte	0
	.uleb128 0xf
	.ascii "atexit\0"
	.byte	0x21
	.word	0x1a9
	.byte	0xf
	.long	0x184
	.long	0x197f0
	.uleb128 0x1
	.long	0x786
	.byte	0
	.uleb128 0xf
	.ascii "atof\0"
	.byte	0x21
	.word	0x1af
	.byte	0x12
	.long	0x77c
	.long	0x19808
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0x6
	.long	0xcd
	.uleb128 0xf
	.ascii "atoi\0"
	.byte	0x21
	.word	0x1b2
	.byte	0xf
	.long	0x184
	.long	0x19825
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0xf
	.ascii "atol\0"
	.byte	0x21
	.word	0x1b4
	.byte	0x10
	.long	0x190
	.long	0x1983d
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0xf
	.ascii "bsearch\0"
	.byte	0x21
	.word	0x1b8
	.byte	0x11
	.long	0x4b0
	.long	0x1986c
	.uleb128 0x1
	.long	0x519
	.uleb128 0x1
	.long	0x519
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x1986c
	.byte	0
	.uleb128 0x6
	.long	0x19871
	.uleb128 0xe8
	.long	0x184
	.long	0x19886
	.uleb128 0x1
	.long	0x519
	.uleb128 0x1
	.long	0x519
	.byte	0
	.uleb128 0xf
	.ascii "div\0"
	.byte	0x21
	.word	0x1be
	.byte	0x11
	.long	0x732
	.long	0x198a2
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "getenv\0"
	.byte	0x21
	.word	0x1bf
	.byte	0x11
	.long	0x1c3
	.long	0x198bc
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0xf
	.ascii "ldiv\0"
	.byte	0x21
	.word	0x1c9
	.byte	0x12
	.long	0x76d
	.long	0x198d9
	.uleb128 0x1
	.long	0x190
	.uleb128 0x1
	.long	0x190
	.byte	0
	.uleb128 0xf
	.ascii "mblen\0"
	.byte	0x21
	.word	0x1cb
	.byte	0xf
	.long	0x184
	.long	0x198f7
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0xf
	.ascii "mbstowcs\0"
	.byte	0x21
	.word	0x1d3
	.byte	0x12
	.long	0xe2
	.long	0x1991d
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0xf
	.ascii "mbtowc\0"
	.byte	0x21
	.word	0x1d1
	.byte	0xf
	.long	0x184
	.long	0x19941
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0x71
	.ascii "qsort\0"
	.byte	0x21
	.word	0x1b9
	.byte	0x10
	.long	0x19965
	.uleb128 0x1
	.long	0x4b0
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x1986c
	.byte	0
	.uleb128 0x85
	.ascii "rand\0"
	.byte	0x21
	.word	0x1d6
	.byte	0xf
	.long	0x184
	.uleb128 0x71
	.ascii "srand\0"
	.byte	0x21
	.word	0x1d8
	.byte	0x10
	.long	0x19989
	.uleb128 0x1
	.long	0x1e2
	.byte	0
	.uleb128 0xf
	.ascii "strtod\0"
	.byte	0x21
	.word	0x1e4
	.byte	0x20
	.long	0x77c
	.long	0x199a8
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x792
	.byte	0
	.uleb128 0xf
	.ascii "strtol\0"
	.byte	0x21
	.word	0x208
	.byte	0x10
	.long	0x190
	.long	0x199cc
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x792
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "strtoul\0"
	.byte	0x21
	.word	0x20a
	.byte	0x19
	.long	0x1f2
	.long	0x199f1
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x792
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "system\0"
	.byte	0x21
	.word	0x20e
	.byte	0xf
	.long	0x184
	.long	0x19a0b
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0xf
	.ascii "wcstombs\0"
	.byte	0x21
	.word	0x213
	.byte	0x12
	.long	0xe2
	.long	0x19a31
	.uleb128 0x1
	.long	0x1c3
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0xf
	.ascii "wctomb\0"
	.byte	0x21
	.word	0x211
	.byte	0xf
	.long	0x184
	.long	0x19a50
	.uleb128 0x1
	.long	0x1c3
	.uleb128 0x1
	.long	0x1cd
	.byte	0
	.uleb128 0x8b
	.ascii "__gnu_cxx\0"
	.byte	0x1
	.word	0x14d
	.byte	0xb
	.long	0x19bac
	.uleb128 0x5
	.byte	0x22
	.byte	0xc8
	.byte	0xb
	.long	0x7ce
	.uleb128 0x5
	.byte	0x22
	.byte	0xd8
	.byte	0xb
	.long	0x19bac
	.uleb128 0x5
	.byte	0x22
	.byte	0xe3
	.byte	0xb
	.long	0x19bca
	.uleb128 0x5
	.byte	0x22
	.byte	0xe4
	.byte	0xb
	.long	0x19be3
	.uleb128 0x5
	.byte	0x22
	.byte	0xe5
	.byte	0xb
	.long	0x19c08
	.uleb128 0x5
	.byte	0x22
	.byte	0xe7
	.byte	0xb
	.long	0x19c2e
	.uleb128 0x5
	.byte	0x22
	.byte	0xe8
	.byte	0xb
	.long	0x19c4d
	.uleb128 0x28
	.ascii "div\0"
	.byte	0x22
	.byte	0xd5
	.byte	0x3
	.ascii "_ZN9__gnu_cxx3divExx\0"
	.long	0x7ce
	.long	0x19acc
	.uleb128 0x1
	.long	0x110
	.uleb128 0x1
	.long	0x110
	.byte	0
	.uleb128 0x5
	.byte	0x24
	.byte	0xaf
	.byte	0xb
	.long	0x1a836
	.uleb128 0x5
	.byte	0x24
	.byte	0xb0
	.byte	0xb
	.long	0x1a870
	.uleb128 0x5
	.byte	0x24
	.byte	0xb1
	.byte	0xb
	.long	0x1a8ad
	.uleb128 0x5
	.byte	0x24
	.byte	0xb2
	.byte	0xb
	.long	0x1a8db
	.uleb128 0x5
	.byte	0x24
	.byte	0xb3
	.byte	0xb
	.long	0x1a91c
	.uleb128 0x79
	.ascii "__ops\0"
	.byte	0x3b
	.byte	0x25
	.byte	0xb
	.uleb128 0x5
	.byte	0x2b
	.byte	0xfb
	.byte	0xb
	.long	0x1b49b
	.uleb128 0x43
	.byte	0x2b
	.word	0x104
	.byte	0xb
	.long	0x1b4bb
	.uleb128 0x43
	.byte	0x2b
	.word	0x105
	.byte	0xb
	.long	0x1b4e0
	.uleb128 0x95
	.ascii "_Lock_policy\0"
	.byte	0x7
	.long	0x1e2
	.byte	0x3c
	.byte	0x31
	.long	0x19b56
	.uleb128 0xb
	.ascii "_S_single\0"
	.byte	0
	.uleb128 0xb
	.ascii "_S_mutex\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "_S_atomic\0"
	.byte	0x2
	.byte	0
	.uleb128 0x4
	.long	0x19b18
	.uleb128 0x135
	.ascii "__default_lock_policy\0"
	.byte	0x3c
	.byte	0x35
	.byte	0x1d
	.long	0x19b56
	.byte	0x2
	.uleb128 0x136
	.ascii "__enable_if<true, double>\0"
	.byte	0x1
	.byte	0x3d
	.byte	0x31
	.byte	0xc
	.uleb128 0x13
	.ascii "__type\0"
	.byte	0x3d
	.byte	0x32
	.byte	0x13
	.long	0x77c
	.byte	0
	.byte	0
	.uleb128 0xf
	.ascii "lldiv\0"
	.byte	0x21
	.word	0x2da
	.byte	0x25
	.long	0x7ce
	.long	0x19bca
	.uleb128 0x1
	.long	0x110
	.uleb128 0x1
	.long	0x110
	.byte	0
	.uleb128 0xf
	.ascii "atoll\0"
	.byte	0x21
	.word	0x2e5
	.byte	0x28
	.long	0x110
	.long	0x19be3
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0xf
	.ascii "strtoll\0"
	.byte	0x21
	.word	0x2e1
	.byte	0x28
	.long	0x110
	.long	0x19c08
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x792
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "strtoull\0"
	.byte	0x21
	.word	0x2e2
	.byte	0x31
	.long	0xf1
	.long	0x19c2e
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x792
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "strtof\0"
	.byte	0x21
	.word	0x1eb
	.byte	0x1f
	.long	0x4ec
	.long	0x19c4d
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x792
	.byte	0
	.uleb128 0xf
	.ascii "strtold\0"
	.byte	0x21
	.word	0x1f6
	.byte	0x27
	.long	0x6f7
	.long	0x19c6d
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x792
	.byte	0
	.uleb128 0x5
	.byte	0x3e
	.byte	0x27
	.byte	0xc
	.long	0x197d6
	.uleb128 0x5
	.byte	0x3e
	.byte	0x33
	.byte	0xc
	.long	0x732
	.uleb128 0x5
	.byte	0x3e
	.byte	0x34
	.byte	0xc
	.long	0x76d
	.uleb128 0x5
	.byte	0x3e
	.byte	0x36
	.byte	0xc
	.long	0x8dd
	.uleb128 0x5
	.byte	0x3e
	.byte	0x36
	.byte	0xc
	.long	0x8fd
	.uleb128 0x5
	.byte	0x3e
	.byte	0x36
	.byte	0xc
	.long	0x91d
	.uleb128 0x5
	.byte	0x3e
	.byte	0x36
	.byte	0xc
	.long	0x93d
	.uleb128 0x5
	.byte	0x3e
	.byte	0x36
	.byte	0xc
	.long	0x95d
	.uleb128 0x5
	.byte	0x3e
	.byte	0x37
	.byte	0xc
	.long	0x197f0
	.uleb128 0x5
	.byte	0x3e
	.byte	0x38
	.byte	0xc
	.long	0x1980d
	.uleb128 0x5
	.byte	0x3e
	.byte	0x39
	.byte	0xc
	.long	0x19825
	.uleb128 0x5
	.byte	0x3e
	.byte	0x3a
	.byte	0xc
	.long	0x1983d
	.uleb128 0x5
	.byte	0x3e
	.byte	0x3c
	.byte	0xc
	.long	0x19a9c
	.uleb128 0x5
	.byte	0x3e
	.byte	0x3c
	.byte	0xc
	.long	0x97d
	.uleb128 0x5
	.byte	0x3e
	.byte	0x3c
	.byte	0xc
	.long	0x19886
	.uleb128 0x5
	.byte	0x3e
	.byte	0x3e
	.byte	0xc
	.long	0x198a2
	.uleb128 0x5
	.byte	0x3e
	.byte	0x40
	.byte	0xc
	.long	0x198bc
	.uleb128 0x5
	.byte	0x3e
	.byte	0x43
	.byte	0xc
	.long	0x198d9
	.uleb128 0x5
	.byte	0x3e
	.byte	0x44
	.byte	0xc
	.long	0x198f7
	.uleb128 0x5
	.byte	0x3e
	.byte	0x45
	.byte	0xc
	.long	0x1991d
	.uleb128 0x5
	.byte	0x3e
	.byte	0x47
	.byte	0xc
	.long	0x19941
	.uleb128 0x5
	.byte	0x3e
	.byte	0x48
	.byte	0xc
	.long	0x19965
	.uleb128 0x5
	.byte	0x3e
	.byte	0x4a
	.byte	0xc
	.long	0x19974
	.uleb128 0x5
	.byte	0x3e
	.byte	0x4b
	.byte	0xc
	.long	0x19989
	.uleb128 0x5
	.byte	0x3e
	.byte	0x4c
	.byte	0xc
	.long	0x199a8
	.uleb128 0x5
	.byte	0x3e
	.byte	0x4d
	.byte	0xc
	.long	0x199cc
	.uleb128 0x5
	.byte	0x3e
	.byte	0x4e
	.byte	0xc
	.long	0x199f1
	.uleb128 0x5
	.byte	0x3e
	.byte	0x50
	.byte	0xc
	.long	0x19a0b
	.uleb128 0x5
	.byte	0x3e
	.byte	0x51
	.byte	0xc
	.long	0x19a31
	.uleb128 0x3e
	.byte	0x2
	.byte	0x4
	.ascii "_Float16\0"
	.uleb128 0x13
	.ascii "WPARAM\0"
	.byte	0x1d
	.byte	0xa6
	.byte	0x14
	.long	0x569
	.uleb128 0x13
	.ascii "LPARAM\0"
	.byte	0x1d
	.byte	0xa7
	.byte	0x14
	.long	0x57a
	.uleb128 0x13
	.ascii "LRESULT\0"
	.byte	0x1d
	.byte	0xa8
	.byte	0x14
	.long	0x57a
	.uleb128 0x13
	.ascii "HLOCAL\0"
	.byte	0x1d
	.byte	0xc0
	.byte	0x12
	.long	0x656
	.uleb128 0x13
	.ascii "ATOM\0"
	.byte	0x1d
	.byte	0xcd
	.byte	0x10
	.long	0x4c3
	.uleb128 0x1b
	.ascii "HINSTANCE__\0"
	.byte	0x4
	.byte	0x1d
	.byte	0xd0
	.byte	0x3
	.long	0x19dce
	.uleb128 0x2b
	.secrel32	.LASF167
	.byte	0x1d
	.byte	0xd0
	.byte	0x3
	.long	0x184
	.byte	0
	.byte	0
	.uleb128 0x13
	.ascii "HINSTANCE\0"
	.byte	0x1d
	.byte	0xd0
	.byte	0x3
	.long	0x19de0
	.uleb128 0x6
	.long	0x19dab
	.uleb128 0x13
	.ascii "HMODULE\0"
	.byte	0x1d
	.byte	0xd6
	.byte	0x15
	.long	0x19dce
	.uleb128 0x1b
	.ascii "HWND__\0"
	.byte	0x4
	.byte	0x3f
	.byte	0x1a
	.byte	0x1
	.long	0x19e13
	.uleb128 0x2b
	.secrel32	.LASF167
	.byte	0x3f
	.byte	0x1a
	.byte	0x1
	.long	0x184
	.byte	0
	.byte	0
	.uleb128 0x13
	.ascii "HWND\0"
	.byte	0x3f
	.byte	0x1a
	.byte	0x1
	.long	0x19e25
	.uleb128 0x4
	.long	0x19e13
	.uleb128 0x6
	.long	0x19df5
	.uleb128 0x1b
	.ascii "HBRUSH__\0"
	.byte	0x4
	.byte	0x3f
	.byte	0x2d
	.byte	0x1
	.long	0x19e4a
	.uleb128 0x2b
	.secrel32	.LASF167
	.byte	0x3f
	.byte	0x2d
	.byte	0x1
	.long	0x184
	.byte	0
	.byte	0
	.uleb128 0x13
	.ascii "HBRUSH\0"
	.byte	0x3f
	.byte	0x2d
	.byte	0x1
	.long	0x19e59
	.uleb128 0x6
	.long	0x19e2a
	.uleb128 0x1b
	.ascii "HICON__\0"
	.byte	0x4
	.byte	0x3f
	.byte	0x34
	.byte	0x1
	.long	0x19e7d
	.uleb128 0x2b
	.secrel32	.LASF167
	.byte	0x3f
	.byte	0x34
	.byte	0x1
	.long	0x184
	.byte	0
	.byte	0
	.uleb128 0x13
	.ascii "HICON\0"
	.byte	0x3f
	.byte	0x34
	.byte	0x1
	.long	0x19e8b
	.uleb128 0x6
	.long	0x19e5e
	.uleb128 0x1b
	.ascii "HMENU__\0"
	.byte	0x4
	.byte	0x3f
	.byte	0x35
	.byte	0x1
	.long	0x19eaf
	.uleb128 0x2b
	.secrel32	.LASF167
	.byte	0x3f
	.byte	0x35
	.byte	0x1
	.long	0x184
	.byte	0
	.byte	0
	.uleb128 0x13
	.ascii "HMENU\0"
	.byte	0x3f
	.byte	0x35
	.byte	0x1
	.long	0x19ebd
	.uleb128 0x6
	.long	0x19e90
	.uleb128 0x13
	.ascii "HCURSOR\0"
	.byte	0x3f
	.byte	0x3c
	.byte	0xf
	.long	0x19e7d
	.uleb128 0x1b
	.ascii "tagRECT\0"
	.byte	0x10
	.byte	0x3f
	.byte	0x49
	.byte	0x10
	.long	0x19f19
	.uleb128 0x16
	.ascii "left\0"
	.byte	0x3f
	.byte	0x4a
	.byte	0x8
	.long	0x5d1
	.byte	0
	.uleb128 0x16
	.ascii "top\0"
	.byte	0x3f
	.byte	0x4b
	.byte	0x8
	.long	0x5d1
	.byte	0x4
	.uleb128 0x2b
	.secrel32	.LASF168
	.byte	0x3f
	.byte	0x4c
	.byte	0x8
	.long	0x5d1
	.byte	0x8
	.uleb128 0x2b
	.secrel32	.LASF169
	.byte	0x3f
	.byte	0x4d
	.byte	0x8
	.long	0x5d1
	.byte	0xc
	.byte	0
	.uleb128 0x13
	.ascii "RECT\0"
	.byte	0x3f
	.byte	0x4e
	.byte	0x3
	.long	0x19ed2
	.uleb128 0x4
	.long	0x19f19
	.uleb128 0x6
	.long	0x19ed2
	.uleb128 0x13
	.ascii "LPRECT\0"
	.byte	0x3f
	.byte	0x4e
	.byte	0x18
	.long	0x19f2b
	.uleb128 0x6
	.long	0x19f26
	.uleb128 0x1b
	.ascii "tagPOINT\0"
	.byte	0x8
	.byte	0x3f
	.byte	0x5b
	.byte	0x10
	.long	0x19f6d
	.uleb128 0x16
	.ascii "x\0"
	.byte	0x3f
	.byte	0x5c
	.byte	0x8
	.long	0x5d1
	.byte	0
	.uleb128 0x16
	.ascii "y\0"
	.byte	0x3f
	.byte	0x5d
	.byte	0x8
	.long	0x5d1
	.byte	0x4
	.byte	0
	.uleb128 0x13
	.ascii "POINT\0"
	.byte	0x3f
	.byte	0x5e
	.byte	0x3
	.long	0x19f44
	.uleb128 0x13
	.ascii "WNDPROC\0"
	.byte	0x40
	.byte	0x29
	.byte	0x1e
	.long	0x19f8b
	.uleb128 0x6
	.long	0x19f90
	.uleb128 0xe8
	.long	0x19d7f
	.long	0x19faf
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x52c
	.uleb128 0x1
	.long	0x19d61
	.uleb128 0x1
	.long	0x19d70
	.byte	0
	.uleb128 0x1f
	.ascii "tagCREATESTRUCTW\0"
	.byte	0x50
	.byte	0x40
	.word	0x737
	.byte	0x12
	.long	0x1a094
	.uleb128 0x1d
	.ascii "lpCreateParams\0"
	.byte	0x40
	.word	0x738
	.byte	0xc
	.long	0x4fa
	.byte	0
	.uleb128 0x39
	.secrel32	.LASF170
	.byte	0x40
	.word	0x739
	.byte	0xf
	.long	0x19dce
	.byte	0x8
	.uleb128 0x1d
	.ascii "hMenu\0"
	.byte	0x40
	.word	0x73a
	.byte	0xb
	.long	0x19eaf
	.byte	0x10
	.uleb128 0x1d
	.ascii "hwndParent\0"
	.byte	0x40
	.word	0x73b
	.byte	0xa
	.long	0x19e13
	.byte	0x18
	.uleb128 0x1d
	.ascii "cy\0"
	.byte	0x40
	.word	0x73c
	.byte	0x9
	.long	0x184
	.byte	0x20
	.uleb128 0x1d
	.ascii "cx\0"
	.byte	0x40
	.word	0x73d
	.byte	0x9
	.long	0x184
	.byte	0x24
	.uleb128 0x1d
	.ascii "y\0"
	.byte	0x40
	.word	0x73e
	.byte	0x9
	.long	0x184
	.byte	0x28
	.uleb128 0x1d
	.ascii "x\0"
	.byte	0x40
	.word	0x73f
	.byte	0x9
	.long	0x184
	.byte	0x2c
	.uleb128 0x1d
	.ascii "style\0"
	.byte	0x40
	.word	0x740
	.byte	0xa
	.long	0x5d1
	.byte	0x30
	.uleb128 0x1d
	.ascii "lpszName\0"
	.byte	0x40
	.word	0x741
	.byte	0xd
	.long	0x60d
	.byte	0x38
	.uleb128 0x1d
	.ascii "lpszClass\0"
	.byte	0x40
	.word	0x742
	.byte	0xd
	.long	0x60d
	.byte	0x40
	.uleb128 0x1d
	.ascii "dwExStyle\0"
	.byte	0x40
	.word	0x743
	.byte	0xb
	.long	0x4d0
	.byte	0x48
	.byte	0
	.uleb128 0x1f
	.ascii "tagWNDCLASSEXW\0"
	.byte	0x50
	.byte	0x40
	.word	0x382
	.byte	0x12
	.long	0x1a198
	.uleb128 0x1d
	.ascii "cbSize\0"
	.byte	0x40
	.word	0x383
	.byte	0xa
	.long	0x52c
	.byte	0
	.uleb128 0x1d
	.ascii "style\0"
	.byte	0x40
	.word	0x384
	.byte	0xa
	.long	0x52c
	.byte	0x4
	.uleb128 0x1d
	.ascii "lpfnWndProc\0"
	.byte	0x40
	.word	0x385
	.byte	0xd
	.long	0x19f7b
	.byte	0x8
	.uleb128 0x1d
	.ascii "cbClsExtra\0"
	.byte	0x40
	.word	0x386
	.byte	0x9
	.long	0x184
	.byte	0x10
	.uleb128 0x1d
	.ascii "cbWndExtra\0"
	.byte	0x40
	.word	0x387
	.byte	0x9
	.long	0x184
	.byte	0x14
	.uleb128 0x39
	.secrel32	.LASF170
	.byte	0x40
	.word	0x388
	.byte	0xf
	.long	0x19dce
	.byte	0x18
	.uleb128 0x1d
	.ascii "hIcon\0"
	.byte	0x40
	.word	0x389
	.byte	0xb
	.long	0x19e7d
	.byte	0x20
	.uleb128 0x1d
	.ascii "hCursor\0"
	.byte	0x40
	.word	0x38a
	.byte	0xd
	.long	0x19ec2
	.byte	0x28
	.uleb128 0x1d
	.ascii "hbrBackground\0"
	.byte	0x40
	.word	0x38b
	.byte	0xc
	.long	0x19e4a
	.byte	0x30
	.uleb128 0x1d
	.ascii "lpszMenuName\0"
	.byte	0x40
	.word	0x38c
	.byte	0xd
	.long	0x60d
	.byte	0x38
	.uleb128 0x1d
	.ascii "lpszClassName\0"
	.byte	0x40
	.word	0x38d
	.byte	0xd
	.long	0x60d
	.byte	0x40
	.uleb128 0x1d
	.ascii "hIconSm\0"
	.byte	0x40
	.word	0x38e
	.byte	0xb
	.long	0x19e7d
	.byte	0x48
	.byte	0
	.uleb128 0x22
	.ascii "WNDCLASSEXW\0"
	.byte	0x40
	.word	0x38f
	.byte	0x5
	.long	0x1a094
	.uleb128 0x4
	.long	0x1a198
	.uleb128 0x22
	.ascii "WNDCLASSEX\0"
	.byte	0x40
	.word	0x391
	.byte	0x3
	.long	0x1a198
	.uleb128 0x1f
	.ascii "tagMSG\0"
	.byte	0x30
	.byte	0x40
	.word	0x3bb
	.byte	0x12
	.long	0x1a236
	.uleb128 0x39
	.secrel32	.LASF171
	.byte	0x40
	.word	0x3bc
	.byte	0xa
	.long	0x19e13
	.byte	0
	.uleb128 0x1d
	.ascii "message\0"
	.byte	0x40
	.word	0x3bd
	.byte	0xa
	.long	0x52c
	.byte	0x8
	.uleb128 0x1d
	.ascii "wParam\0"
	.byte	0x40
	.word	0x3be
	.byte	0xc
	.long	0x19d61
	.byte	0x10
	.uleb128 0x1d
	.ascii "lParam\0"
	.byte	0x40
	.word	0x3bf
	.byte	0xc
	.long	0x19d70
	.byte	0x18
	.uleb128 0x1d
	.ascii "time\0"
	.byte	0x40
	.word	0x3c0
	.byte	0xb
	.long	0x4d0
	.byte	0x20
	.uleb128 0x1d
	.ascii "pt\0"
	.byte	0x40
	.word	0x3c1
	.byte	0xb
	.long	0x19f6d
	.byte	0x24
	.byte	0
	.uleb128 0x22
	.ascii "MSG\0"
	.byte	0x40
	.word	0x3c2
	.byte	0x5
	.long	0x1a1c6
	.uleb128 0x4
	.long	0x1a236
	.uleb128 0x6
	.long	0x1a1c6
	.uleb128 0x22
	.ascii "LPMSG\0"
	.byte	0x40
	.word	0x3c2
	.byte	0x17
	.long	0x1a248
	.uleb128 0x22
	.ascii "CREATESTRUCTW\0"
	.byte	0x40
	.word	0x744
	.byte	0x5
	.long	0x19faf
	.uleb128 0x22
	.ascii "CREATESTRUCT\0"
	.byte	0x40
	.word	0x746
	.byte	0x3
	.long	0x1a25c
	.uleb128 0x6
	.long	0x4b0
	.uleb128 0x7
	.long	0x6f2
	.uleb128 0x1b
	.ascii "_iobuf\0"
	.byte	0x30
	.byte	0x2
	.byte	0x21
	.byte	0xa
	.long	0x1a323
	.uleb128 0x16
	.ascii "_ptr\0"
	.byte	0x2
	.byte	0x25
	.byte	0xb
	.long	0x1c3
	.byte	0
	.uleb128 0x16
	.ascii "_cnt\0"
	.byte	0x2
	.byte	0x26
	.byte	0x9
	.long	0x184
	.byte	0x8
	.uleb128 0x16
	.ascii "_base\0"
	.byte	0x2
	.byte	0x27
	.byte	0xb
	.long	0x1c3
	.byte	0x10
	.uleb128 0x16
	.ascii "_flag\0"
	.byte	0x2
	.byte	0x28
	.byte	0x9
	.long	0x184
	.byte	0x18
	.uleb128 0x16
	.ascii "_file\0"
	.byte	0x2
	.byte	0x29
	.byte	0x9
	.long	0x184
	.byte	0x1c
	.uleb128 0x16
	.ascii "_charbuf\0"
	.byte	0x2
	.byte	0x2a
	.byte	0x9
	.long	0x184
	.byte	0x20
	.uleb128 0x16
	.ascii "_bufsiz\0"
	.byte	0x2
	.byte	0x2b
	.byte	0x9
	.long	0x184
	.byte	0x24
	.uleb128 0x16
	.ascii "_tmpfname\0"
	.byte	0x2
	.byte	0x2c
	.byte	0xb
	.long	0x1c3
	.byte	0x28
	.byte	0
	.uleb128 0x13
	.ascii "FILE\0"
	.byte	0x2
	.byte	0x2f
	.byte	0x19
	.long	0x1a293
	.uleb128 0x13
	.ascii "fpos_t\0"
	.byte	0x2
	.byte	0x73
	.byte	0x25
	.long	0x110
	.uleb128 0x4
	.long	0x1a330
	.uleb128 0x71
	.ascii "clearerr\0"
	.byte	0x2
	.word	0x266
	.byte	0x10
	.long	0x1a35c
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0x6
	.long	0x1a323
	.uleb128 0xf
	.ascii "fclose\0"
	.byte	0x2
	.word	0x267
	.byte	0xf
	.long	0x184
	.long	0x1a37b
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "feof\0"
	.byte	0x2
	.word	0x26e
	.byte	0xf
	.long	0x184
	.long	0x1a393
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "ferror\0"
	.byte	0x2
	.word	0x26f
	.byte	0xf
	.long	0x184
	.long	0x1a3ad
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "fflush\0"
	.byte	0x2
	.word	0x270
	.byte	0xf
	.long	0x184
	.long	0x1a3c7
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "fgetc\0"
	.byte	0x2
	.word	0x271
	.byte	0xf
	.long	0x184
	.long	0x1a3e0
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "fgetpos\0"
	.byte	0x2
	.word	0x273
	.byte	0xf
	.long	0x184
	.long	0x1a400
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x1a400
	.byte	0
	.uleb128 0x6
	.long	0x1a330
	.uleb128 0xf
	.ascii "fgets\0"
	.byte	0x2
	.word	0x275
	.byte	0x11
	.long	0x1c3
	.long	0x1a428
	.uleb128 0x1
	.long	0x1c3
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "fopen\0"
	.byte	0x2
	.word	0x27c
	.byte	0x11
	.long	0x1a35c
	.long	0x1a446
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0x26
	.ascii "fprintf\0"
	.byte	0x2
	.word	0x165
	.byte	0x5
	.ascii "_Z7fprintfP6_iobufPKcz\0"
	.long	0x184
	.long	0x1a47e
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x52
	.byte	0
	.uleb128 0xf
	.ascii "fread\0"
	.byte	0x2
	.word	0x281
	.byte	0x12
	.long	0xe2
	.long	0x1a4a6
	.uleb128 0x1
	.long	0x4b0
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "freopen\0"
	.byte	0x2
	.word	0x282
	.byte	0x11
	.long	0x1a35c
	.long	0x1a4cb
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0x26
	.ascii "fscanf\0"
	.byte	0x2
	.word	0x138
	.byte	0x5
	.ascii "_Z6fscanfP6_iobufPKcz\0"
	.long	0x184
	.long	0x1a501
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x52
	.byte	0
	.uleb128 0xf
	.ascii "fseek\0"
	.byte	0x2
	.word	0x285
	.byte	0xf
	.long	0x184
	.long	0x1a524
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x190
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "fsetpos\0"
	.byte	0x2
	.word	0x283
	.byte	0xf
	.long	0x184
	.long	0x1a544
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x1a544
	.byte	0
	.uleb128 0x6
	.long	0x1a33f
	.uleb128 0xf
	.ascii "ftell\0"
	.byte	0x2
	.word	0x286
	.byte	0x10
	.long	0x190
	.long	0x1a562
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "getc\0"
	.byte	0x2
	.word	0x2b0
	.byte	0xf
	.long	0x184
	.long	0x1a57a
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0x85
	.ascii "getchar\0"
	.byte	0x2
	.word	0x2b1
	.byte	0xf
	.long	0x184
	.uleb128 0x71
	.ascii "perror\0"
	.byte	0x21
	.word	0x28a
	.byte	0x10
	.long	0x1a5a2
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0xc3
	.ascii "printf\0"
	.byte	0x2
	.word	0x170
	.byte	0x5
	.ascii "_Z6printfPKcz\0"
	.long	0x184
	.quad	.LFB5616
	.quad	.LFE5616-.LFB5616
	.uleb128 0x1
	.byte	0x9c
	.long	0x1a625
	.uleb128 0x52
	.uleb128 0x11
	.ascii "__format\0"
	.byte	0x2
	.word	0x170
	.byte	0x19
	.long	0x19808
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x52
	.uleb128 0x2c
	.secrel32	.LASF172
	.byte	0x2
	.word	0x172
	.byte	0x7
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x12
	.ascii "__local_argv\0"
	.byte	0x2
	.word	0x173
	.byte	0x15
	.long	0xac
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.quad	.LVL0
	.long	0x1fe34
	.byte	0
	.uleb128 0xf
	.ascii "remove\0"
	.byte	0x2
	.word	0x2c7
	.byte	0xf
	.long	0x184
	.long	0x1a63f
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0xf
	.ascii "rename\0"
	.byte	0x2
	.word	0x2c8
	.byte	0xf
	.long	0x184
	.long	0x1a65e
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0x71
	.ascii "rewind\0"
	.byte	0x2
	.word	0x2ce
	.byte	0x10
	.long	0x1a674
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0x26
	.ascii "scanf\0"
	.byte	0x2
	.word	0x12d
	.byte	0x5
	.ascii "_Z5scanfPKcz\0"
	.long	0x184
	.long	0x1a69b
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x52
	.byte	0
	.uleb128 0x71
	.ascii "setbuf\0"
	.byte	0x2
	.word	0x2d0
	.byte	0x10
	.long	0x1a6b6
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x1c3
	.byte	0
	.uleb128 0xf
	.ascii "setvbuf\0"
	.byte	0x2
	.word	0x2d4
	.byte	0xf
	.long	0x184
	.long	0x1a6e0
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x1c3
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0x26
	.ascii "sprintf\0"
	.byte	0x2
	.word	0x18e
	.byte	0x5
	.ascii "_Z7sprintfPcPKcz\0"
	.long	0x184
	.long	0x1a712
	.uleb128 0x1
	.long	0x1c3
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x52
	.byte	0
	.uleb128 0x26
	.ascii "sscanf\0"
	.byte	0x2
	.word	0x122
	.byte	0x5
	.ascii "_Z6sscanfPKcS0_z\0"
	.long	0x184
	.long	0x1a743
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x52
	.byte	0
	.uleb128 0x85
	.ascii "tmpfile\0"
	.byte	0x2
	.word	0x2f7
	.byte	0x11
	.long	0x1a35c
	.uleb128 0xf
	.ascii "tmpnam\0"
	.byte	0x2
	.word	0x2f8
	.byte	0x11
	.long	0x1c3
	.long	0x1a76f
	.uleb128 0x1
	.long	0x1c3
	.byte	0
	.uleb128 0xf
	.ascii "ungetc\0"
	.byte	0x2
	.word	0x2f9
	.byte	0xf
	.long	0x184
	.long	0x1a78e
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0x26
	.ascii "vfprintf\0"
	.byte	0x2
	.word	0x19b
	.byte	0x5
	.ascii "_Z8vfprintfP6_iobufPKcPc\0"
	.long	0x184
	.long	0x1a7cd
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0x26
	.ascii "vprintf\0"
	.byte	0x2
	.word	0x1a2
	.byte	0x5
	.ascii "_Z7vprintfPKcPc\0"
	.long	0x184
	.long	0x1a7fd
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0x26
	.ascii "vsprintf\0"
	.byte	0x2
	.word	0x1a9
	.byte	0x5
	.ascii "_Z8vsprintfPcPKcS_\0"
	.long	0x184
	.long	0x1a836
	.uleb128 0x1
	.long	0x1c3
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0x26
	.ascii "snprintf\0"
	.byte	0x2
	.word	0x1c7
	.byte	0x5
	.ascii "_Z8snprintfPcyPKcz\0"
	.long	0x184
	.long	0x1a870
	.uleb128 0x1
	.long	0x1c3
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x52
	.byte	0
	.uleb128 0x26
	.ascii "vfscanf\0"
	.byte	0x2
	.word	0x157
	.byte	0x5
	.ascii "_Z7vfscanfP6_iobufPKcPc\0"
	.long	0x184
	.long	0x1a8ad
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0x26
	.ascii "vscanf\0"
	.byte	0x2
	.word	0x150
	.byte	0x5
	.ascii "_Z6vscanfPKcPc\0"
	.long	0x184
	.long	0x1a8db
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0x26
	.ascii "vsnprintf\0"
	.byte	0x2
	.word	0x1d4
	.byte	0x5
	.ascii "_Z9vsnprintfPcyPKcS_\0"
	.long	0x184
	.long	0x1a91c
	.uleb128 0x1
	.long	0x1c3
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0x26
	.ascii "vsscanf\0"
	.byte	0x2
	.word	0x149
	.byte	0x5
	.ascii "_Z7vsscanfPKcS0_Pc\0"
	.long	0x184
	.long	0x1a954
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0x13
	.ascii "int8_t\0"
	.byte	0x41
	.byte	0x23
	.byte	0x15
	.long	0x539
	.uleb128 0x13
	.ascii "uint8_t\0"
	.byte	0x41
	.byte	0x24
	.byte	0x19
	.long	0x49a
	.uleb128 0x13
	.ascii "int16_t\0"
	.byte	0x41
	.byte	0x25
	.byte	0x10
	.long	0x548
	.uleb128 0x13
	.ascii "uint16_t\0"
	.byte	0x41
	.byte	0x26
	.byte	0x19
	.long	0x15d
	.uleb128 0x13
	.ascii "int32_t\0"
	.byte	0x41
	.byte	0x27
	.byte	0xe
	.long	0x184
	.uleb128 0x4
	.long	0x1a994
	.uleb128 0x13
	.ascii "uint32_t\0"
	.byte	0x41
	.byte	0x28
	.byte	0x14
	.long	0x1e2
	.uleb128 0x4
	.long	0x1a9a9
	.uleb128 0x13
	.ascii "int64_t\0"
	.byte	0x41
	.byte	0x29
	.byte	0x26
	.long	0x110
	.uleb128 0x13
	.ascii "uint64_t\0"
	.byte	0x41
	.byte	0x2a
	.byte	0x30
	.long	0xf1
	.uleb128 0x13
	.ascii "int_least8_t\0"
	.byte	0x41
	.byte	0x2d
	.byte	0x15
	.long	0x539
	.uleb128 0x13
	.ascii "uint_least8_t\0"
	.byte	0x41
	.byte	0x2e
	.byte	0x19
	.long	0x49a
	.uleb128 0x13
	.ascii "int_least16_t\0"
	.byte	0x41
	.byte	0x2f
	.byte	0x10
	.long	0x548
	.uleb128 0x13
	.ascii "uint_least16_t\0"
	.byte	0x41
	.byte	0x30
	.byte	0x19
	.long	0x15d
	.uleb128 0x13
	.ascii "int_least32_t\0"
	.byte	0x41
	.byte	0x31
	.byte	0xe
	.long	0x184
	.uleb128 0x13
	.ascii "uint_least32_t\0"
	.byte	0x41
	.byte	0x32
	.byte	0x14
	.long	0x1e2
	.uleb128 0x13
	.ascii "int_least64_t\0"
	.byte	0x41
	.byte	0x33
	.byte	0x26
	.long	0x110
	.uleb128 0x13
	.ascii "uint_least64_t\0"
	.byte	0x41
	.byte	0x34
	.byte	0x30
	.long	0xf1
	.uleb128 0x13
	.ascii "int_fast8_t\0"
	.byte	0x41
	.byte	0x3a
	.byte	0x15
	.long	0x539
	.uleb128 0x13
	.ascii "uint_fast8_t\0"
	.byte	0x41
	.byte	0x3b
	.byte	0x17
	.long	0x49a
	.uleb128 0x13
	.ascii "int_fast16_t\0"
	.byte	0x41
	.byte	0x3c
	.byte	0x10
	.long	0x548
	.uleb128 0x13
	.ascii "uint_fast16_t\0"
	.byte	0x41
	.byte	0x3d
	.byte	0x19
	.long	0x15d
	.uleb128 0x13
	.ascii "int_fast32_t\0"
	.byte	0x41
	.byte	0x3e
	.byte	0xe
	.long	0x184
	.uleb128 0x13
	.ascii "uint_fast32_t\0"
	.byte	0x41
	.byte	0x3f
	.byte	0x18
	.long	0x1e2
	.uleb128 0x13
	.ascii "int_fast64_t\0"
	.byte	0x41
	.byte	0x40
	.byte	0x26
	.long	0x110
	.uleb128 0x13
	.ascii "uint_fast64_t\0"
	.byte	0x41
	.byte	0x41
	.byte	0x30
	.long	0xf1
	.uleb128 0x13
	.ascii "intmax_t\0"
	.byte	0x41
	.byte	0x44
	.byte	0x26
	.long	0x110
	.uleb128 0x4
	.long	0x1ab3c
	.uleb128 0x13
	.ascii "uintmax_t\0"
	.byte	0x41
	.byte	0x45
	.byte	0x30
	.long	0xf1
	.uleb128 0x3e
	.byte	0x1
	.byte	0x2
	.ascii "bool\0"
	.uleb128 0x4
	.long	0x1ab64
	.uleb128 0x22
	.ascii "float_t\0"
	.byte	0x42
	.word	0x16f
	.byte	0xf
	.long	0x4ec
	.uleb128 0x22
	.ascii "double_t\0"
	.byte	0x42
	.word	0x170
	.byte	0x10
	.long	0x77c
	.uleb128 0x6
	.long	0xd28
	.uleb128 0x6
	.long	0xe27
	.uleb128 0x3e
	.byte	0x1
	.byte	0x7
	.ascii "char8_t\0"
	.uleb128 0x3e
	.byte	0x2
	.byte	0x10
	.ascii "char16_t\0"
	.uleb128 0x3e
	.byte	0x4
	.byte	0x10
	.ascii "char32_t\0"
	.uleb128 0x6
	.long	0xeb3
	.uleb128 0x7
	.long	0xf6b
	.uleb128 0x6
	.long	0x104f
	.uleb128 0x4
	.long	0x1abcb
	.uleb128 0x6
	.long	0x1093
	.uleb128 0x6
	.long	0x113f
	.uleb128 0x6
	.long	0x11e6
	.uleb128 0x6
	.long	0x11eb
	.uleb128 0x6
	.long	0x12fb
	.uleb128 0x3e
	.byte	0x10
	.byte	0x5
	.ascii "__int128\0"
	.uleb128 0x78
	.ascii "__gnu_debug\0"
	.byte	0x43
	.byte	0x2b
	.byte	0xb
	.long	0x1ac18
	.uleb128 0x137
	.byte	0x29
	.byte	0x3a
	.byte	0x18
	.long	0x20b7
	.byte	0
	.uleb128 0x3e
	.byte	0x10
	.byte	0x7
	.ascii "__int128 unsigned\0"
	.uleb128 0x6
	.long	0x2957
	.uleb128 0x6
	.long	0x29c2
	.uleb128 0x138
	.ascii "decltype(nullptr)\0"
	.uleb128 0x1f
	.ascii "tm\0"
	.byte	0x24
	.byte	0x44
	.word	0x567
	.byte	0xa
	.long	0x1acf9
	.uleb128 0x1d
	.ascii "tm_sec\0"
	.byte	0x44
	.word	0x568
	.byte	0x9
	.long	0x184
	.byte	0
	.uleb128 0x1d
	.ascii "tm_min\0"
	.byte	0x44
	.word	0x569
	.byte	0x9
	.long	0x184
	.byte	0x4
	.uleb128 0x1d
	.ascii "tm_hour\0"
	.byte	0x44
	.word	0x56a
	.byte	0x9
	.long	0x184
	.byte	0x8
	.uleb128 0x1d
	.ascii "tm_mday\0"
	.byte	0x44
	.word	0x56b
	.byte	0x9
	.long	0x184
	.byte	0xc
	.uleb128 0x1d
	.ascii "tm_mon\0"
	.byte	0x44
	.word	0x56c
	.byte	0x9
	.long	0x184
	.byte	0x10
	.uleb128 0x1d
	.ascii "tm_year\0"
	.byte	0x44
	.word	0x56d
	.byte	0x9
	.long	0x184
	.byte	0x14
	.uleb128 0x1d
	.ascii "tm_wday\0"
	.byte	0x44
	.word	0x56e
	.byte	0x9
	.long	0x184
	.byte	0x18
	.uleb128 0x1d
	.ascii "tm_yday\0"
	.byte	0x44
	.word	0x56f
	.byte	0x9
	.long	0x184
	.byte	0x1c
	.uleb128 0x1d
	.ascii "tm_isdst\0"
	.byte	0x44
	.word	0x570
	.byte	0x9
	.long	0x184
	.byte	0x20
	.byte	0
	.uleb128 0x4
	.long	0x1ac4b
	.uleb128 0x22
	.ascii "mbstate_t\0"
	.byte	0x44
	.word	0x5a5
	.byte	0xf
	.long	0x184
	.uleb128 0x4
	.long	0x1acfe
	.uleb128 0xf
	.ascii "btowc\0"
	.byte	0x44
	.word	0x5a9
	.byte	0x12
	.long	0x14e
	.long	0x1ad2f
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "fgetwc\0"
	.byte	0x2
	.word	0x500
	.byte	0x12
	.long	0x14e
	.long	0x1ad49
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "fgetws\0"
	.byte	0x2
	.word	0x509
	.byte	0x14
	.long	0x1c8
	.long	0x1ad6d
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "fputwc\0"
	.byte	0x2
	.word	0x502
	.byte	0x12
	.long	0x14e
	.long	0x1ad8c
	.uleb128 0x1
	.long	0x1cd
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "fputws\0"
	.byte	0x2
	.word	0x50a
	.byte	0xf
	.long	0x184
	.long	0x1adab
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "fwide\0"
	.byte	0x44
	.word	0x5b8
	.byte	0xf
	.long	0x184
	.long	0x1adc9
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "fwprintf\0"
	.byte	0x2
	.word	0x432
	.byte	0x5
	.long	0x184
	.long	0x1adeb
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x52
	.byte	0
	.uleb128 0xf
	.ascii "fwscanf\0"
	.byte	0x2
	.word	0x40e
	.byte	0x5
	.long	0x184
	.long	0x1ae0c
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x52
	.byte	0
	.uleb128 0xf
	.ascii "getwc\0"
	.byte	0x2
	.word	0x504
	.byte	0x12
	.long	0x14e
	.long	0x1ae25
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0x85
	.ascii "getwchar\0"
	.byte	0x2
	.word	0x505
	.byte	0x12
	.long	0x14e
	.uleb128 0xf
	.ascii "mbrlen\0"
	.byte	0x44
	.word	0x5aa
	.byte	0x12
	.long	0xe2
	.long	0x1ae5c
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x1ae5c
	.byte	0
	.uleb128 0x6
	.long	0x1acfe
	.uleb128 0xf
	.ascii "mbrtowc\0"
	.byte	0x44
	.word	0x5ab
	.byte	0x12
	.long	0xe2
	.long	0x1ae8b
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x1ae5c
	.byte	0
	.uleb128 0xf
	.ascii "mbsinit\0"
	.byte	0x44
	.word	0x5bd
	.byte	0xf
	.long	0x184
	.long	0x1aea6
	.uleb128 0x1
	.long	0x1aea6
	.byte	0
	.uleb128 0x6
	.long	0x1ad11
	.uleb128 0xf
	.ascii "mbsrtowcs\0"
	.byte	0x44
	.word	0x5ac
	.byte	0x12
	.long	0xe2
	.long	0x1aed7
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x1aed7
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x1ae5c
	.byte	0
	.uleb128 0x6
	.long	0x19808
	.uleb128 0xf
	.ascii "putwc\0"
	.byte	0x2
	.word	0x506
	.byte	0x12
	.long	0x14e
	.long	0x1aefa
	.uleb128 0x1
	.long	0x1cd
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "putwchar\0"
	.byte	0x2
	.word	0x507
	.byte	0x12
	.long	0x14e
	.long	0x1af16
	.uleb128 0x1
	.long	0x1cd
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF173
	.byte	0x45
	.byte	0x3e
	.byte	0x5
	.long	0x184
	.long	0x1af32
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x52
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF173
	.byte	0x45
	.byte	0x22
	.byte	0x5
	.long	0x184
	.long	0x1af53
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x52
	.byte	0
	.uleb128 0xf
	.ascii "swscanf\0"
	.byte	0x2
	.word	0x3f8
	.byte	0x5
	.long	0x184
	.long	0x1af74
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x52
	.byte	0
	.uleb128 0xf
	.ascii "ungetwc\0"
	.byte	0x2
	.word	0x508
	.byte	0x12
	.long	0x14e
	.long	0x1af94
	.uleb128 0x1
	.long	0x14e
	.uleb128 0x1
	.long	0x1a35c
	.byte	0
	.uleb128 0xf
	.ascii "vfwprintf\0"
	.byte	0x2
	.word	0x448
	.byte	0x5
	.long	0x184
	.long	0x1afbb
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0xf
	.ascii "vfwscanf\0"
	.byte	0x2
	.word	0x428
	.byte	0x5
	.long	0x184
	.long	0x1afe1
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF174
	.byte	0x45
	.byte	0x33
	.byte	0x5
	.long	0x184
	.long	0x1b001
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF174
	.byte	0x45
	.byte	0x1b
	.byte	0x5
	.long	0x184
	.long	0x1b026
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0xf
	.ascii "vswscanf\0"
	.byte	0x2
	.word	0x41a
	.byte	0x5
	.long	0x184
	.long	0x1b04c
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0xf
	.ascii "vwprintf\0"
	.byte	0x2
	.word	0x44f
	.byte	0x5
	.long	0x184
	.long	0x1b06d
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0xf
	.ascii "vwscanf\0"
	.byte	0x2
	.word	0x421
	.byte	0x5
	.long	0x184
	.long	0x1b08d
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xac
	.byte	0
	.uleb128 0xf
	.ascii "wcrtomb\0"
	.byte	0x44
	.word	0x5ad
	.byte	0x12
	.long	0xe2
	.long	0x1b0b2
	.uleb128 0x1
	.long	0x1c3
	.uleb128 0x1
	.long	0x1cd
	.uleb128 0x1
	.long	0x1ae5c
	.byte	0
	.uleb128 0x31
	.ascii "wcscat\0"
	.byte	0x46
	.byte	0x84
	.byte	0x14
	.long	0x1c8
	.long	0x1b0d0
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x78d
	.byte	0
	.uleb128 0x31
	.ascii "wcscmp\0"
	.byte	0x46
	.byte	0x86
	.byte	0xf
	.long	0x184
	.long	0x1b0ee
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x78d
	.byte	0
	.uleb128 0x31
	.ascii "wcscoll\0"
	.byte	0x46
	.byte	0xa3
	.byte	0xf
	.long	0x184
	.long	0x1b10d
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x78d
	.byte	0
	.uleb128 0x31
	.ascii "wcscpy\0"
	.byte	0x46
	.byte	0x87
	.byte	0x14
	.long	0x1c8
	.long	0x1b12b
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x78d
	.byte	0
	.uleb128 0x31
	.ascii "wcscspn\0"
	.byte	0x46
	.byte	0x88
	.byte	0x12
	.long	0xe2
	.long	0x1b14a
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x78d
	.byte	0
	.uleb128 0xf
	.ascii "wcsftime\0"
	.byte	0x44
	.word	0x57b
	.byte	0x12
	.long	0xe2
	.long	0x1b175
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x1b175
	.byte	0
	.uleb128 0x6
	.long	0x1acf9
	.uleb128 0x31
	.ascii "wcslen\0"
	.byte	0x46
	.byte	0x89
	.byte	0x12
	.long	0xe2
	.long	0x1b193
	.uleb128 0x1
	.long	0x78d
	.byte	0
	.uleb128 0x31
	.ascii "wcsncat\0"
	.byte	0x46
	.byte	0x8b
	.byte	0xc
	.long	0x1c8
	.long	0x1b1b7
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0x31
	.ascii "wcsncmp\0"
	.byte	0x46
	.byte	0x8c
	.byte	0xf
	.long	0x184
	.long	0x1b1db
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0x31
	.ascii "wcsncpy\0"
	.byte	0x46
	.byte	0x8d
	.byte	0xc
	.long	0x1c8
	.long	0x1b1ff
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0xf
	.ascii "wcsrtombs\0"
	.byte	0x44
	.word	0x5ae
	.byte	0x12
	.long	0xe2
	.long	0x1b22b
	.uleb128 0x1
	.long	0x1c3
	.uleb128 0x1
	.long	0x1b22b
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x1ae5c
	.byte	0
	.uleb128 0x6
	.long	0x78d
	.uleb128 0x31
	.ascii "wcsspn\0"
	.byte	0x46
	.byte	0x91
	.byte	0x12
	.long	0xe2
	.long	0x1b24e
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x78d
	.byte	0
	.uleb128 0xf
	.ascii "wcstod\0"
	.byte	0x21
	.word	0x235
	.byte	0x12
	.long	0x77c
	.long	0x1b26d
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x797
	.byte	0
	.uleb128 0xf
	.ascii "wcstof\0"
	.byte	0x21
	.word	0x239
	.byte	0x11
	.long	0x4ec
	.long	0x1b28c
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x797
	.byte	0
	.uleb128 0x31
	.ascii "wcstok\0"
	.byte	0x46
	.byte	0x93
	.byte	0x14
	.long	0x1c8
	.long	0x1b2aa
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x78d
	.byte	0
	.uleb128 0xf
	.ascii "wcstol\0"
	.byte	0x21
	.word	0x246
	.byte	0x10
	.long	0x190
	.long	0x1b2ce
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x797
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "wcstoul\0"
	.byte	0x21
	.word	0x248
	.byte	0x19
	.long	0x1f2
	.long	0x1b2f3
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x797
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x31
	.ascii "wcsxfrm\0"
	.byte	0x46
	.byte	0xa1
	.byte	0x12
	.long	0xe2
	.long	0x1b317
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0xf
	.ascii "wctob\0"
	.byte	0x44
	.word	0x5af
	.byte	0xf
	.long	0x184
	.long	0x1b330
	.uleb128 0x1
	.long	0x14e
	.byte	0
	.uleb128 0xf
	.ascii "wmemcmp\0"
	.byte	0x44
	.word	0x5b4
	.byte	0xf
	.long	0x184
	.long	0x1b355
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0xf
	.ascii "wmemcpy\0"
	.byte	0x44
	.word	0x5b5
	.byte	0x14
	.long	0x1c8
	.long	0x1b37a
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0xf
	.ascii "wmemmove\0"
	.byte	0x44
	.word	0x5b7
	.byte	0x14
	.long	0x1c8
	.long	0x1b3a0
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0xf
	.ascii "wmemset\0"
	.byte	0x44
	.word	0x5b2
	.byte	0x14
	.long	0x1c8
	.long	0x1b3c5
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0x1cd
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0xf
	.ascii "wprintf\0"
	.byte	0x2
	.word	0x43d
	.byte	0x5
	.long	0x184
	.long	0x1b3e1
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x52
	.byte	0
	.uleb128 0xf
	.ascii "wscanf\0"
	.byte	0x2
	.word	0x403
	.byte	0x5
	.long	0x184
	.long	0x1b3fc
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x52
	.byte	0
	.uleb128 0x31
	.ascii "wcschr\0"
	.byte	0x46
	.byte	0x85
	.byte	0x22
	.long	0x1c8
	.long	0x1b41a
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x1cd
	.byte	0
	.uleb128 0x31
	.ascii "wcspbrk\0"
	.byte	0x46
	.byte	0x8f
	.byte	0x22
	.long	0x1c8
	.long	0x1b439
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x78d
	.byte	0
	.uleb128 0x31
	.ascii "wcsrchr\0"
	.byte	0x46
	.byte	0x90
	.byte	0x22
	.long	0x1c8
	.long	0x1b458
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x1cd
	.byte	0
	.uleb128 0x31
	.ascii "wcsstr\0"
	.byte	0x46
	.byte	0x92
	.byte	0x22
	.long	0x1c8
	.long	0x1b476
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x78d
	.byte	0
	.uleb128 0xf
	.ascii "wmemchr\0"
	.byte	0x44
	.word	0x5b3
	.byte	0x22
	.long	0x1c8
	.long	0x1b49b
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x1cd
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0xf
	.ascii "wcstold\0"
	.byte	0x21
	.word	0x242
	.byte	0x17
	.long	0x6f7
	.long	0x1b4bb
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x797
	.byte	0
	.uleb128 0xf
	.ascii "wcstoll\0"
	.byte	0x44
	.word	0x5bf
	.byte	0x27
	.long	0x110
	.long	0x1b4e0
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x797
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "wcstoull\0"
	.byte	0x44
	.word	0x5c0
	.byte	0x30
	.long	0xf1
	.long	0x1b506
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0x797
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x6
	.long	0x2d2c
	.uleb128 0x6
	.long	0x318b
	.uleb128 0x7
	.long	0x318b
	.uleb128 0x1e
	.long	0x2d2c
	.uleb128 0x7
	.long	0x2d2c
	.uleb128 0x6
	.long	0x320a
	.uleb128 0x31
	.ascii "setlocale\0"
	.byte	0x1c
	.byte	0x5a
	.byte	0x11
	.long	0x1c3
	.long	0x1b545
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0x91
	.ascii "localeconv\0"
	.byte	0x1c
	.byte	0x5b
	.byte	0x21
	.long	0x495
	.uleb128 0x5f
	.secrel32	.LASF30
	.byte	0x10
	.byte	0x47
	.byte	0x59
	.byte	0x8
	.long	0x1b588
	.uleb128 0x16
	.ascii "tv_sec\0"
	.byte	0x47
	.byte	0x5a
	.byte	0xb
	.long	0x1af
	.byte	0
	.uleb128 0x16
	.ascii "tv_nsec\0"
	.byte	0x47
	.byte	0x5b
	.byte	0xb
	.long	0x190
	.byte	0x8
	.byte	0
	.uleb128 0x4
	.long	0x1b559
	.uleb128 0x13
	.ascii "clock_t\0"
	.byte	0x48
	.byte	0x3f
	.byte	0x10
	.long	0x190
	.uleb128 0x13
	.ascii "pthread_mutexattr_t\0"
	.byte	0x49
	.byte	0xba
	.byte	0x12
	.long	0x1e2
	.uleb128 0x4
	.long	0x1b59d
	.uleb128 0x13
	.ascii "pthread_t\0"
	.byte	0x49
	.byte	0xc9
	.byte	0x13
	.long	0x137
	.uleb128 0x22
	.ascii "pthread_mutex_t\0"
	.byte	0x49
	.word	0x104
	.byte	0x12
	.long	0x126
	.uleb128 0x22
	.ascii "pthread_cond_t\0"
	.byte	0x49
	.word	0x105
	.byte	0x12
	.long	0x126
	.uleb128 0x13
	.ascii "__gthread_t\0"
	.byte	0x8
	.byte	0x2f
	.byte	0x13
	.long	0x1b5be
	.uleb128 0x13
	.ascii "__gthread_mutex_t\0"
	.byte	0x8
	.byte	0x32
	.byte	0x19
	.long	0x1b5d0
	.uleb128 0x13
	.ascii "__gthread_cond_t\0"
	.byte	0x8
	.byte	0x34
	.byte	0x18
	.long	0x1b5e9
	.uleb128 0x13
	.ascii "__gthread_time_t\0"
	.byte	0x8
	.byte	0x35
	.byte	0x19
	.long	0x1b559
	.uleb128 0x13
	.ascii "wctrans_t\0"
	.byte	0x4a
	.byte	0xb0
	.byte	0x13
	.long	0x1cd
	.uleb128 0x31
	.ascii "iswctype\0"
	.byte	0x4b
	.byte	0xb6
	.byte	0xf
	.long	0x184
	.long	0x1b693
	.uleb128 0x1
	.long	0x14e
	.uleb128 0x1
	.long	0x173
	.byte	0
	.uleb128 0x31
	.ascii "towctrans\0"
	.byte	0x4a
	.byte	0xb1
	.byte	0x12
	.long	0x14e
	.long	0x1b6b4
	.uleb128 0x1
	.long	0x14e
	.uleb128 0x1
	.long	0x1b661
	.byte	0
	.uleb128 0x31
	.ascii "wctrans\0"
	.byte	0x4a
	.byte	0xb2
	.byte	0x15
	.long	0x1b661
	.long	0x1b6ce
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0x31
	.ascii "wctype\0"
	.byte	0x4a
	.byte	0xb3
	.byte	0x14
	.long	0x173
	.long	0x1b6e7
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0x7
	.long	0x18b
	.uleb128 0x6b
	.long	0x19b5b
	.uleb128 0x6
	.long	0x1b615
	.uleb128 0x6
	.long	0x3328
	.uleb128 0x4
	.long	0x1b6f6
	.uleb128 0x7
	.long	0x343c
	.uleb128 0x7
	.long	0x3328
	.uleb128 0x6
	.long	0x3441
	.uleb128 0x4
	.long	0x1b70a
	.uleb128 0x7
	.long	0x35df
	.uleb128 0x7
	.long	0x3441
	.uleb128 0x6
	.long	0x3335
	.uleb128 0x6
	.long	0x35e4
	.uleb128 0x4
	.long	0x1b723
	.uleb128 0x7
	.long	0x3813
	.uleb128 0x7
	.long	0x35e4
	.uleb128 0x6
	.long	0x1b62f
	.uleb128 0x7
	.long	0x378c
	.uleb128 0x6
	.long	0x3818
	.uleb128 0x6b
	.long	0x130d
	.uleb128 0x6b
	.long	0x1330
	.uleb128 0x6b
	.long	0x1353
	.uleb128 0x6
	.long	0x13d2
	.uleb128 0x4
	.long	0x1b755
	.uleb128 0x6
	.long	0x13d7
	.uleb128 0x4
	.long	0x1b75f
	.uleb128 0x6
	.long	0x168f
	.uleb128 0x4
	.long	0x1b769
	.uleb128 0x6
	.long	0x16ae
	.uleb128 0x7
	.long	0x13d7
	.uleb128 0x6
	.long	0x16b3
	.uleb128 0x4
	.long	0x1b77d
	.uleb128 0x6
	.long	0x3851
	.uleb128 0x4
	.long	0x1b787
	.uleb128 0x7
	.long	0x38b1
	.uleb128 0x7
	.long	0x3a03
	.uleb128 0x7
	.long	0x3851
	.uleb128 0x7
	.long	0x175b
	.uleb128 0x6
	.long	0x1694
	.uleb128 0x6
	.long	0x1b97
	.uleb128 0x4
	.long	0x1b7aa
	.uleb128 0x6
	.long	0x1725
	.uleb128 0x4
	.long	0x1b7b4
	.uleb128 0x6
	.long	0x1b9c
	.uleb128 0x4
	.long	0x1b7be
	.uleb128 0x6
	.long	0x1d56
	.uleb128 0x4
	.long	0x1b7c8
	.uleb128 0x78
	.ascii "__pstl\0"
	.byte	0x4c
	.byte	0xf
	.byte	0xb
	.long	0x1bc4f
	.uleb128 0x139
	.ascii "execution\0"
	.byte	0x4c
	.byte	0x11
	.byte	0xb
	.uleb128 0x13a
	.ascii "v1\0"
	.byte	0x4c
	.byte	0x13
	.byte	0x12
	.uleb128 0x69
	.ascii "sequenced_policy\0"
	.byte	0x1
	.byte	0x4c
	.byte	0x17
	.byte	0x7
	.long	0x1b8ec
	.uleb128 0x61
	.secrel32	.LASF175
	.byte	0x1c
	.ascii "_ZN6__pstl9execution2v116sequenced_policy19__allow_unsequencedEv\0"
	.long	0xe2c
	.uleb128 0x61
	.secrel32	.LASF176
	.byte	0x21
	.ascii "_ZN6__pstl9execution2v116sequenced_policy14__allow_vectorEv\0"
	.long	0xe2c
	.uleb128 0x61
	.secrel32	.LASF177
	.byte	0x26
	.ascii "_ZN6__pstl9execution2v116sequenced_policy16__allow_parallelEv\0"
	.long	0xe2c
	.byte	0
	.uleb128 0x4
	.long	0x1b7f8
	.uleb128 0x69
	.ascii "parallel_policy\0"
	.byte	0x1
	.byte	0x4c
	.byte	0x2d
	.byte	0x7
	.long	0x1b9e1
	.uleb128 0x61
	.secrel32	.LASF175
	.byte	0x32
	.ascii "_ZN6__pstl9execution2v115parallel_policy19__allow_unsequencedEv\0"
	.long	0xe2c
	.uleb128 0x61
	.secrel32	.LASF176
	.byte	0x37
	.ascii "_ZN6__pstl9execution2v115parallel_policy14__allow_vectorEv\0"
	.long	0xe2c
	.uleb128 0x61
	.secrel32	.LASF177
	.byte	0x3c
	.ascii "_ZN6__pstl9execution2v115parallel_policy16__allow_parallelEv\0"
	.long	0x2945
	.byte	0
	.uleb128 0x4
	.long	0x1b8f1
	.uleb128 0x69
	.ascii "parallel_unsequenced_policy\0"
	.byte	0x1
	.byte	0x4c
	.byte	0x43
	.byte	0x7
	.long	0x1bb06
	.uleb128 0x61
	.secrel32	.LASF175
	.byte	0x48
	.ascii "_ZN6__pstl9execution2v127parallel_unsequenced_policy19__allow_unsequencedEv\0"
	.long	0x2945
	.uleb128 0x61
	.secrel32	.LASF176
	.byte	0x4d
	.ascii "_ZN6__pstl9execution2v127parallel_unsequenced_policy14__allow_vectorEv\0"
	.long	0x2945
	.uleb128 0x61
	.secrel32	.LASF177
	.byte	0x52
	.ascii "_ZN6__pstl9execution2v127parallel_unsequenced_policy16__allow_parallelEv\0"
	.long	0x2945
	.byte	0
	.uleb128 0x4
	.long	0x1b9e6
	.uleb128 0x69
	.ascii "unsequenced_policy\0"
	.byte	0x1
	.byte	0x4c
	.byte	0x58
	.byte	0x7
	.long	0x1bc07
	.uleb128 0x61
	.secrel32	.LASF175
	.byte	0x5d
	.ascii "_ZN6__pstl9execution2v118unsequenced_policy19__allow_unsequencedEv\0"
	.long	0x2945
	.uleb128 0x61
	.secrel32	.LASF176
	.byte	0x62
	.ascii "_ZN6__pstl9execution2v118unsequenced_policy14__allow_vectorEv\0"
	.long	0x2945
	.uleb128 0x61
	.secrel32	.LASF177
	.byte	0x67
	.ascii "_ZN6__pstl9execution2v118unsequenced_policy16__allow_parallelEv\0"
	.long	0xe2c
	.byte	0
	.uleb128 0x4
	.long	0x1bb0b
	.uleb128 0xa3
	.ascii "seq\0"
	.byte	0x6e
	.byte	0x1c
	.long	0x1b8ec
	.byte	0x1
	.byte	0
	.uleb128 0xa3
	.ascii "par\0"
	.byte	0x6f
	.byte	0x1b
	.long	0x1b9e1
	.byte	0x1
	.byte	0
	.uleb128 0xa3
	.ascii "par_unseq\0"
	.byte	0x70
	.byte	0x27
	.long	0x1bb06
	.byte	0x1
	.byte	0
	.uleb128 0xa3
	.ascii "unseq\0"
	.byte	0x71
	.byte	0x1e
	.long	0x1bc07
	.byte	0x1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6b
	.long	0x1bc0c
	.uleb128 0x6b
	.long	0x1bc1a
	.uleb128 0x6b
	.long	0x1bc28
	.uleb128 0x6b
	.long	0x1bc3c
	.uleb128 0x6
	.long	0x3afc
	.uleb128 0x4
	.long	0x1bc63
	.uleb128 0x7
	.long	0x4c43
	.uleb128 0x7
	.long	0x3afc
	.uleb128 0x6
	.long	0x4c48
	.uleb128 0x6
	.long	0x4c43
	.uleb128 0x4
	.long	0x1bc7c
	.uleb128 0x6
	.long	0x4c4e
	.uleb128 0x7
	.long	0x3b4d
	.uleb128 0x6
	.long	0x4c53
	.uleb128 0x4
	.long	0x1bc90
	.uleb128 0x7
	.long	0x54e4
	.uleb128 0x7
	.long	0x4c53
	.uleb128 0x6
	.long	0x54e9
	.uleb128 0x6
	.long	0x54e4
	.uleb128 0x4
	.long	0x1bca9
	.uleb128 0x6
	.long	0x54ef
	.uleb128 0x7
	.long	0x1ab64
	.uleb128 0x6
	.long	0x54f5
	.uleb128 0x4
	.long	0x1bcbd
	.uleb128 0x7
	.long	0x6645
	.uleb128 0x7
	.long	0x54f5
	.uleb128 0x6
	.long	0x664a
	.uleb128 0x6
	.long	0x6645
	.uleb128 0x4
	.long	0x1bcd6
	.uleb128 0x6
	.long	0x6650
	.uleb128 0x7
	.long	0x554f
	.uleb128 0x6
	.long	0x6655
	.uleb128 0x7
	.long	0x6840
	.uleb128 0x7
	.long	0x6655
	.uleb128 0x6
	.long	0x6845
	.uleb128 0x6
	.long	0x684b
	.uleb128 0x4
	.long	0x1bcfe
	.uleb128 0x7
	.long	0x799b
	.uleb128 0x7
	.long	0x684b
	.uleb128 0x6
	.long	0x79a0
	.uleb128 0x6
	.long	0x799b
	.uleb128 0x4
	.long	0x1bd17
	.uleb128 0x6
	.long	0x79a6
	.uleb128 0x7
	.long	0x68a5
	.uleb128 0x7
	.long	0x4ec
	.uleb128 0x6
	.long	0x79b8
	.uleb128 0x4
	.long	0x1bd30
	.uleb128 0x6
	.long	0x79ab
	.uleb128 0x4
	.long	0x1bd3a
	.uleb128 0x7
	.long	0x80b0
	.uleb128 0x1e
	.long	0x79ab
	.uleb128 0x7
	.long	0x79ab
	.uleb128 0x6
	.long	0x80b0
	.uleb128 0x4
	.long	0x1bd53
	.uleb128 0x6
	.long	0x8846
	.uleb128 0x4
	.long	0x1bd5d
	.uleb128 0x7
	.long	0x7a30
	.uleb128 0x91
	.ascii "clock\0"
	.byte	0x48
	.byte	0x99
	.byte	0x13
	.long	0x1b58d
	.uleb128 0x64
	.ascii "difftime\0"
	.byte	0x48
	.word	0x104
	.byte	0x22
	.long	0x77c
	.long	0x1bd9c
	.uleb128 0x1
	.long	0x1af
	.uleb128 0x1
	.long	0x1af
	.byte	0
	.uleb128 0x64
	.ascii "mktime\0"
	.byte	0x48
	.word	0x10b
	.byte	0x22
	.long	0x1af
	.long	0x1bdb6
	.uleb128 0x1
	.long	0x1bdb6
	.byte	0
	.uleb128 0x6
	.long	0x1ac4b
	.uleb128 0x64
	.ascii "time\0"
	.byte	0x48
	.word	0x100
	.byte	0x22
	.long	0x1af
	.long	0x1bdd3
	.uleb128 0x1
	.long	0x1bdd3
	.byte	0
	.uleb128 0x6
	.long	0x1af
	.uleb128 0x31
	.ascii "asctime\0"
	.byte	0x48
	.byte	0x95
	.byte	0x11
	.long	0x1c3
	.long	0x1bdf2
	.uleb128 0x1
	.long	0x1b175
	.byte	0
	.uleb128 0x64
	.ascii "ctime\0"
	.byte	0x48
	.word	0x109
	.byte	0x21
	.long	0x1c3
	.long	0x1be0b
	.uleb128 0x1
	.long	0x1be0b
	.byte	0
	.uleb128 0x6
	.long	0x1be
	.uleb128 0x64
	.ascii "gmtime\0"
	.byte	0x48
	.word	0x107
	.byte	0x26
	.long	0x1bdb6
	.long	0x1be2a
	.uleb128 0x1
	.long	0x1be0b
	.byte	0
	.uleb128 0x64
	.ascii "localtime\0"
	.byte	0x48
	.word	0x105
	.byte	0x26
	.long	0x1bdb6
	.long	0x1be47
	.uleb128 0x1
	.long	0x1be0b
	.byte	0
	.uleb128 0x6
	.long	0x8950
	.uleb128 0x4
	.long	0x1be47
	.uleb128 0x7
	.long	0x9145
	.uleb128 0x7
	.long	0x8950
	.uleb128 0x6
	.long	0x9145
	.uleb128 0x4
	.long	0x1be5b
	.uleb128 0x7
	.long	0x8b16
	.uleb128 0x7
	.long	0x121
	.uleb128 0x7
	.long	0x9288
	.uleb128 0x6
	.long	0x9393
	.uleb128 0x7
	.long	0x950f
	.uleb128 0x6
	.long	0x99ac
	.uleb128 0x4
	.long	0x1be7e
	.uleb128 0x7
	.long	0x9393
	.uleb128 0x6
	.long	0x99b1
	.uleb128 0x4
	.long	0x1be8d
	.uleb128 0x7
	.long	0xa00e
	.uleb128 0x7
	.long	0x99b1
	.uleb128 0x6
	.long	0xa00e
	.uleb128 0x4
	.long	0x1bea1
	.uleb128 0x7
	.long	0x9b71
	.uleb128 0x6
	.long	0xa013
	.uleb128 0x4
	.long	0x1beb0
	.uleb128 0x7
	.long	0xa76c
	.uleb128 0x7
	.long	0xa013
	.uleb128 0x6
	.long	0xa76c
	.uleb128 0x4
	.long	0x1bec4
	.uleb128 0x7
	.long	0xa1bb
	.uleb128 0x7
	.long	0x99ac
	.uleb128 0x72
	.secrel32	.LASF178
	.long	0x1e2
	.byte	0x4d
	.byte	0x1e
	.long	0x1cb8e
	.uleb128 0xb
	.ascii "DXGI_FORMAT_UNKNOWN\0"
	.byte	0
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32B32A32_TYPELESS\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32B32A32_FLOAT\0"
	.byte	0x2
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32B32A32_UINT\0"
	.byte	0x3
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32B32A32_SINT\0"
	.byte	0x4
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32B32_TYPELESS\0"
	.byte	0x5
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32B32_FLOAT\0"
	.byte	0x6
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32B32_UINT\0"
	.byte	0x7
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32B32_SINT\0"
	.byte	0x8
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16B16A16_TYPELESS\0"
	.byte	0x9
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16B16A16_FLOAT\0"
	.byte	0xa
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16B16A16_UNORM\0"
	.byte	0xb
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16B16A16_UINT\0"
	.byte	0xc
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16B16A16_SNORM\0"
	.byte	0xd
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16B16A16_SINT\0"
	.byte	0xe
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32_TYPELESS\0"
	.byte	0xf
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32_FLOAT\0"
	.byte	0x10
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32_UINT\0"
	.byte	0x11
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G32_SINT\0"
	.byte	0x12
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32G8X24_TYPELESS\0"
	.byte	0x13
	.uleb128 0xb
	.ascii "DXGI_FORMAT_D32_FLOAT_S8X24_UINT\0"
	.byte	0x14
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS\0"
	.byte	0x15
	.uleb128 0xb
	.ascii "DXGI_FORMAT_X32_TYPELESS_G8X24_UINT\0"
	.byte	0x16
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R10G10B10A2_TYPELESS\0"
	.byte	0x17
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R10G10B10A2_UNORM\0"
	.byte	0x18
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R10G10B10A2_UINT\0"
	.byte	0x19
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R11G11B10_FLOAT\0"
	.byte	0x1a
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8B8A8_TYPELESS\0"
	.byte	0x1b
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8B8A8_UNORM\0"
	.byte	0x1c
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8B8A8_UNORM_SRGB\0"
	.byte	0x1d
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8B8A8_UINT\0"
	.byte	0x1e
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8B8A8_SNORM\0"
	.byte	0x1f
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8B8A8_SINT\0"
	.byte	0x20
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16_TYPELESS\0"
	.byte	0x21
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16_FLOAT\0"
	.byte	0x22
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16_UNORM\0"
	.byte	0x23
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16_UINT\0"
	.byte	0x24
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16_SNORM\0"
	.byte	0x25
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16G16_SINT\0"
	.byte	0x26
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32_TYPELESS\0"
	.byte	0x27
	.uleb128 0xb
	.ascii "DXGI_FORMAT_D32_FLOAT\0"
	.byte	0x28
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32_FLOAT\0"
	.byte	0x29
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32_UINT\0"
	.byte	0x2a
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R32_SINT\0"
	.byte	0x2b
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R24G8_TYPELESS\0"
	.byte	0x2c
	.uleb128 0xb
	.ascii "DXGI_FORMAT_D24_UNORM_S8_UINT\0"
	.byte	0x2d
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R24_UNORM_X8_TYPELESS\0"
	.byte	0x2e
	.uleb128 0xb
	.ascii "DXGI_FORMAT_X24_TYPELESS_G8_UINT\0"
	.byte	0x2f
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8_TYPELESS\0"
	.byte	0x30
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8_UNORM\0"
	.byte	0x31
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8_UINT\0"
	.byte	0x32
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8_SNORM\0"
	.byte	0x33
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8_SINT\0"
	.byte	0x34
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16_TYPELESS\0"
	.byte	0x35
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16_FLOAT\0"
	.byte	0x36
	.uleb128 0xb
	.ascii "DXGI_FORMAT_D16_UNORM\0"
	.byte	0x37
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16_UNORM\0"
	.byte	0x38
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16_UINT\0"
	.byte	0x39
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16_SNORM\0"
	.byte	0x3a
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R16_SINT\0"
	.byte	0x3b
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8_TYPELESS\0"
	.byte	0x3c
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8_UNORM\0"
	.byte	0x3d
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8_UINT\0"
	.byte	0x3e
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8_SNORM\0"
	.byte	0x3f
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8_SINT\0"
	.byte	0x40
	.uleb128 0xb
	.ascii "DXGI_FORMAT_A8_UNORM\0"
	.byte	0x41
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R1_UNORM\0"
	.byte	0x42
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R9G9B9E5_SHAREDEXP\0"
	.byte	0x43
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R8G8_B8G8_UNORM\0"
	.byte	0x44
	.uleb128 0xb
	.ascii "DXGI_FORMAT_G8R8_G8B8_UNORM\0"
	.byte	0x45
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC1_TYPELESS\0"
	.byte	0x46
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC1_UNORM\0"
	.byte	0x47
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC1_UNORM_SRGB\0"
	.byte	0x48
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC2_TYPELESS\0"
	.byte	0x49
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC2_UNORM\0"
	.byte	0x4a
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC2_UNORM_SRGB\0"
	.byte	0x4b
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC3_TYPELESS\0"
	.byte	0x4c
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC3_UNORM\0"
	.byte	0x4d
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC3_UNORM_SRGB\0"
	.byte	0x4e
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC4_TYPELESS\0"
	.byte	0x4f
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC4_UNORM\0"
	.byte	0x50
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC4_SNORM\0"
	.byte	0x51
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC5_TYPELESS\0"
	.byte	0x52
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC5_UNORM\0"
	.byte	0x53
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC5_SNORM\0"
	.byte	0x54
	.uleb128 0xb
	.ascii "DXGI_FORMAT_B5G6R5_UNORM\0"
	.byte	0x55
	.uleb128 0xb
	.ascii "DXGI_FORMAT_B5G5R5A1_UNORM\0"
	.byte	0x56
	.uleb128 0xb
	.ascii "DXGI_FORMAT_B8G8R8A8_UNORM\0"
	.byte	0x57
	.uleb128 0xb
	.ascii "DXGI_FORMAT_B8G8R8X8_UNORM\0"
	.byte	0x58
	.uleb128 0xb
	.ascii "DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM\0"
	.byte	0x59
	.uleb128 0xb
	.ascii "DXGI_FORMAT_B8G8R8A8_TYPELESS\0"
	.byte	0x5a
	.uleb128 0xb
	.ascii "DXGI_FORMAT_B8G8R8A8_UNORM_SRGB\0"
	.byte	0x5b
	.uleb128 0xb
	.ascii "DXGI_FORMAT_B8G8R8X8_TYPELESS\0"
	.byte	0x5c
	.uleb128 0xb
	.ascii "DXGI_FORMAT_B8G8R8X8_UNORM_SRGB\0"
	.byte	0x5d
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC6H_TYPELESS\0"
	.byte	0x5e
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC6H_UF16\0"
	.byte	0x5f
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC6H_SF16\0"
	.byte	0x60
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC7_TYPELESS\0"
	.byte	0x61
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC7_UNORM\0"
	.byte	0x62
	.uleb128 0xb
	.ascii "DXGI_FORMAT_BC7_UNORM_SRGB\0"
	.byte	0x63
	.uleb128 0xb
	.ascii "DXGI_FORMAT_AYUV\0"
	.byte	0x64
	.uleb128 0xb
	.ascii "DXGI_FORMAT_Y410\0"
	.byte	0x65
	.uleb128 0xb
	.ascii "DXGI_FORMAT_Y416\0"
	.byte	0x66
	.uleb128 0xb
	.ascii "DXGI_FORMAT_NV12\0"
	.byte	0x67
	.uleb128 0xb
	.ascii "DXGI_FORMAT_P010\0"
	.byte	0x68
	.uleb128 0xb
	.ascii "DXGI_FORMAT_P016\0"
	.byte	0x69
	.uleb128 0xb
	.ascii "DXGI_FORMAT_420_OPAQUE\0"
	.byte	0x6a
	.uleb128 0xb
	.ascii "DXGI_FORMAT_YUY2\0"
	.byte	0x6b
	.uleb128 0xb
	.ascii "DXGI_FORMAT_Y210\0"
	.byte	0x6c
	.uleb128 0xb
	.ascii "DXGI_FORMAT_Y216\0"
	.byte	0x6d
	.uleb128 0xb
	.ascii "DXGI_FORMAT_NV11\0"
	.byte	0x6e
	.uleb128 0xb
	.ascii "DXGI_FORMAT_AI44\0"
	.byte	0x6f
	.uleb128 0xb
	.ascii "DXGI_FORMAT_IA44\0"
	.byte	0x70
	.uleb128 0xb
	.ascii "DXGI_FORMAT_P8\0"
	.byte	0x71
	.uleb128 0xb
	.ascii "DXGI_FORMAT_A8P8\0"
	.byte	0x72
	.uleb128 0xb
	.ascii "DXGI_FORMAT_B4G4R4A4_UNORM\0"
	.byte	0x73
	.uleb128 0xb
	.ascii "DXGI_FORMAT_P208\0"
	.byte	0x82
	.uleb128 0xb
	.ascii "DXGI_FORMAT_V208\0"
	.byte	0x83
	.uleb128 0xb
	.ascii "DXGI_FORMAT_V408\0"
	.byte	0x84
	.uleb128 0xc
	.ascii "DXGI_FORMAT_FORCE_UINT\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF178
	.byte	0x4d
	.byte	0x97
	.byte	0x3
	.long	0x1bed8
	.uleb128 0x72
	.secrel32	.LASF179
	.long	0x1e2
	.byte	0x4e
	.byte	0x3a
	.long	0x1cc39
	.uleb128 0xb
	.ascii "D2D1_ALPHA_MODE_UNKNOWN\0"
	.byte	0
	.uleb128 0xb
	.ascii "D2D1_ALPHA_MODE_PREMULTIPLIED\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "D2D1_ALPHA_MODE_STRAIGHT\0"
	.byte	0x2
	.uleb128 0xb
	.ascii "D2D1_ALPHA_MODE_IGNORE\0"
	.byte	0x3
	.uleb128 0xc
	.ascii "D2D1_ALPHA_MODE_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF179
	.byte	0x4e
	.byte	0x40
	.byte	0x3
	.long	0x1cb9a
	.uleb128 0x5f
	.secrel32	.LASF180
	.byte	0x8
	.byte	0x4e
	.byte	0x41
	.byte	0x10
	.long	0x1cc70
	.uleb128 0x16
	.ascii "format\0"
	.byte	0x4e
	.byte	0x42
	.byte	0x11
	.long	0x1cb8e
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF181
	.byte	0x4e
	.byte	0x43
	.byte	0x15
	.long	0x1cc39
	.byte	0x4
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF180
	.byte	0x4e
	.byte	0x44
	.byte	0x3
	.long	0x1cc45
	.uleb128 0x4
	.long	0x1cc70
	.uleb128 0x1b
	.ascii "D2D_SIZE_U\0"
	.byte	0x8
	.byte	0x4e
	.byte	0x5d
	.byte	0x10
	.long	0x1ccb0
	.uleb128 0x2b
	.secrel32	.LASF182
	.byte	0x4e
	.byte	0x5e
	.byte	0xc
	.long	0x55a
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF183
	.byte	0x4e
	.byte	0x5f
	.byte	0xc
	.long	0x55a
	.byte	0x4
	.byte	0
	.uleb128 0x13
	.ascii "D2D1_SIZE_U\0"
	.byte	0x4e
	.byte	0x61
	.byte	0x1b
	.long	0x1cc81
	.uleb128 0x4
	.long	0x1ccb0
	.uleb128 0x1b
	.ascii "_D3DCOLORVALUE\0"
	.byte	0x10
	.byte	0x4f
	.byte	0x36
	.byte	0x10
	.long	0x1cd0e
	.uleb128 0x16
	.ascii "r\0"
	.byte	0x4f
	.byte	0x37
	.byte	0xb
	.long	0x4ec
	.byte	0
	.uleb128 0x16
	.ascii "g\0"
	.byte	0x4f
	.byte	0x38
	.byte	0xb
	.long	0x4ec
	.byte	0x4
	.uleb128 0x16
	.ascii "b\0"
	.byte	0x4f
	.byte	0x39
	.byte	0xb
	.long	0x4ec
	.byte	0x8
	.uleb128 0x16
	.ascii "a\0"
	.byte	0x4f
	.byte	0x3a
	.byte	0xb
	.long	0x4ec
	.byte	0xc
	.byte	0
	.uleb128 0x13
	.ascii "D3DCOLORVALUE\0"
	.byte	0x4f
	.byte	0x3b
	.byte	0x3
	.long	0x1ccc9
	.uleb128 0x13
	.ascii "D2D_COLOR_F\0"
	.byte	0x50
	.byte	0x21
	.byte	0x17
	.long	0x1cd0e
	.uleb128 0x5f
	.secrel32	.LASF184
	.byte	0x10
	.byte	0x50
	.byte	0x23
	.byte	0x10
	.long	0x1cd7b
	.uleb128 0x16
	.ascii "left\0"
	.byte	0x50
	.byte	0x25
	.byte	0xb
	.long	0x4ec
	.byte	0
	.uleb128 0x16
	.ascii "top\0"
	.byte	0x50
	.byte	0x26
	.byte	0xb
	.long	0x4ec
	.byte	0x4
	.uleb128 0x2b
	.secrel32	.LASF168
	.byte	0x50
	.byte	0x27
	.byte	0xb
	.long	0x4ec
	.byte	0x8
	.uleb128 0x2b
	.secrel32	.LASF169
	.byte	0x50
	.byte	0x28
	.byte	0xb
	.long	0x4ec
	.byte	0xc
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF184
	.byte	0x50
	.byte	0x29
	.byte	0x3
	.long	0x1cd38
	.uleb128 0x5f
	.secrel32	.LASF185
	.byte	0x10
	.byte	0x50
	.byte	0x37
	.byte	0x10
	.long	0x1cdca
	.uleb128 0x16
	.ascii "left\0"
	.byte	0x50
	.byte	0x39
	.byte	0xc
	.long	0x55a
	.byte	0
	.uleb128 0x16
	.ascii "top\0"
	.byte	0x50
	.byte	0x3a
	.byte	0xc
	.long	0x55a
	.byte	0x4
	.uleb128 0x2b
	.secrel32	.LASF168
	.byte	0x50
	.byte	0x3b
	.byte	0xc
	.long	0x55a
	.byte	0x8
	.uleb128 0x2b
	.secrel32	.LASF169
	.byte	0x50
	.byte	0x3c
	.byte	0xc
	.long	0x55a
	.byte	0xc
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF185
	.byte	0x50
	.byte	0x3d
	.byte	0x3
	.long	0x1cd87
	.uleb128 0x72
	.secrel32	.LASF186
	.long	0x1e2
	.byte	0xf
	.byte	0x5f
	.long	0x1ce70
	.uleb128 0xb
	.ascii "D2D1_BITMAP_INTERPOLATION_MODE_NEAREST_NEIGHBOR\0"
	.byte	0
	.uleb128 0xb
	.ascii "D2D1_BITMAP_INTERPOLATION_MODE_LINEAR\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "D2D1_BITMAP_INTERPOLATION_MODE_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF186
	.byte	0xf
	.byte	0x63
	.byte	0x3
	.long	0x1cdd6
	.uleb128 0x72
	.secrel32	.LASF187
	.long	0x1e2
	.byte	0xf
	.byte	0x8b
	.long	0x1cf19
	.uleb128 0xb
	.ascii "D2D1_DEBUG_LEVEL_NONE\0"
	.byte	0
	.uleb128 0xb
	.ascii "D2D1_DEBUG_LEVEL_ERROR\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "D2D1_DEBUG_LEVEL_WARNING\0"
	.byte	0x2
	.uleb128 0xb
	.ascii "D2D1_DEBUG_LEVEL_INFORMATION\0"
	.byte	0x3
	.uleb128 0xc
	.ascii "D2D1_DEBUG_LEVEL_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF187
	.byte	0xf
	.byte	0x91
	.byte	0x3
	.long	0x1ce7c
	.uleb128 0x72
	.secrel32	.LASF188
	.long	0x1e2
	.byte	0xf
	.byte	0xa3
	.long	0x1cf9f
	.uleb128 0xb
	.ascii "D2D1_FACTORY_TYPE_SINGLE_THREADED\0"
	.byte	0
	.uleb128 0xb
	.ascii "D2D1_FACTORY_TYPE_MULTI_THREADED\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "D2D1_FACTORY_TYPE_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF188
	.byte	0xf
	.byte	0xa7
	.byte	0x3
	.long	0x1cf25
	.uleb128 0x72
	.secrel32	.LASF189
	.long	0x1e2
	.byte	0xf
	.byte	0xa9
	.long	0x1d02d
	.uleb128 0xb
	.ascii "D2D1_FEATURE_LEVEL_DEFAULT\0"
	.byte	0
	.uleb128 0x5b
	.ascii "D2D1_FEATURE_LEVEL_9\0"
	.word	0x9100
	.uleb128 0x5b
	.ascii "D2D1_FEATURE_LEVEL_10\0"
	.word	0xa000
	.uleb128 0xc
	.ascii "D2D1_FEATURE_LEVEL_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF189
	.byte	0xf
	.byte	0xae
	.byte	0x3
	.long	0x1cfab
	.uleb128 0x72
	.secrel32	.LASF190
	.long	0x1e2
	.byte	0xf
	.byte	0xf3
	.long	0x1d0d5
	.uleb128 0xb
	.ascii "D2D1_PRESENT_OPTIONS_NONE\0"
	.byte	0
	.uleb128 0xb
	.ascii "D2D1_PRESENT_OPTIONS_RETAIN_CONTENTS\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "D2D1_PRESENT_OPTIONS_IMMEDIATELY\0"
	.byte	0x2
	.uleb128 0xc
	.ascii "D2D1_PRESENT_OPTIONS_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF190
	.byte	0xf
	.byte	0xf8
	.byte	0x3
	.long	0x1d039
	.uleb128 0x72
	.secrel32	.LASF191
	.long	0x1e2
	.byte	0xf
	.byte	0xfa
	.long	0x1d182
	.uleb128 0xb
	.ascii "D2D1_RENDER_TARGET_TYPE_DEFAULT\0"
	.byte	0
	.uleb128 0xb
	.ascii "D2D1_RENDER_TARGET_TYPE_SOFTWARE\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "D2D1_RENDER_TARGET_TYPE_HARDWARE\0"
	.byte	0x2
	.uleb128 0xc
	.ascii "D2D1_RENDER_TARGET_TYPE_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x19
	.secrel32	.LASF191
	.byte	0xf
	.byte	0xff
	.byte	0x3
	.long	0x1d0e1
	.uleb128 0x13b
	.secrel32	.LASF192
	.byte	0x7
	.byte	0x4
	.long	0x1e2
	.byte	0xf
	.word	0x101
	.byte	0xe
	.long	0x1d248
	.uleb128 0xb
	.ascii "D2D1_RENDER_TARGET_USAGE_NONE\0"
	.byte	0
	.uleb128 0xb
	.ascii "D2D1_RENDER_TARGET_USAGE_FORCE_BITMAP_REMOTING\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "D2D1_RENDER_TARGET_USAGE_GDI_COMPATIBLE\0"
	.byte	0x2
	.uleb128 0xc
	.ascii "D2D1_RENDER_TARGET_USAGE_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF192
	.byte	0xf
	.word	0x106
	.byte	0x3
	.long	0x1d18e
	.uleb128 0x23
	.secrel32	.LASF193
	.byte	0xf
	.word	0x124
	.byte	0x24
	.long	0x1d262
	.uleb128 0x13c
	.secrel32	.LASF193
	.uleb128 0x23
	.secrel32	.LASF194
	.byte	0xf
	.word	0x12b
	.byte	0x25
	.long	0x1d275
	.uleb128 0xe9
	.secrel32	.LASF194
	.long	0x1d344
	.uleb128 0xc4
	.ascii "CreateHwndRenderTarget\0"
	.word	0x64a
	.byte	0xd
	.ascii "_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget\0"
	.long	0x666
	.long	0x1d32e
	.uleb128 0x2
	.long	0x25672
	.uleb128 0x1
	.long	0x2824e
	.uleb128 0x1
	.long	0x28253
	.uleb128 0x1
	.long	0x28258
	.byte	0
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF195
	.byte	0xf
	.word	0x131
	.byte	0x2e
	.long	0x1d351
	.uleb128 0xe9
	.secrel32	.LASF195
	.long	0x1d3ac
	.uleb128 0xc4
	.ascii "Resize\0"
	.word	0x733
	.byte	0xd
	.ascii "_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U\0"
	.long	0x666
	.long	0x1d3a0
	.uleb128 0x2
	.long	0x28203
	.uleb128 0x1
	.long	0x2820d
	.byte	0
	.byte	0
	.uleb128 0xda
	.ascii "ID2D1RenderTarget\0"
	.long	0x1d4fb
	.uleb128 0x5d
	.ascii "Clear\0"
	.byte	0xf
	.word	0x397
	.byte	0xa
	.ascii "_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE\0"
	.long	0x1d407
	.long	0x1d412
	.uleb128 0x2
	.long	0x282f0
	.uleb128 0x1
	.long	0x282fa
	.byte	0
	.uleb128 0x5d
	.ascii "DrawBitmap\0"
	.byte	0xf
	.word	0x383
	.byte	0xa
	.ascii "_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_\0"
	.long	0x1d48f
	.long	0x1d4ae
	.uleb128 0x2
	.long	0x282f0
	.uleb128 0x1
	.long	0x1e3fb
	.uleb128 0x1
	.long	0x28342
	.uleb128 0x1
	.long	0x4de
	.uleb128 0x1
	.long	0x1ce70
	.uleb128 0x1
	.long	0x28347
	.byte	0
	.uleb128 0xc4
	.ascii "GetPixelFormat\0"
	.word	0x2f0
	.byte	0x29
	.ascii "_ZNK17ID2D1RenderTarget14GetPixelFormatEv\0"
	.long	0x1cc70
	.long	0x1d4f4
	.uleb128 0x2
	.long	0x283fa
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x1d3ac
	.uleb128 0x23
	.secrel32	.LASF196
	.byte	0xf
	.word	0x148
	.byte	0x27
	.long	0x1d50d
	.uleb128 0x54
	.secrel32	.LASF196
	.byte	0x10
	.byte	0xf
	.word	0x174
	.byte	0x8
	.long	0x1d548
	.uleb128 0x39
	.secrel32	.LASF197
	.byte	0xf
	.word	0x175
	.byte	0x15
	.long	0x1cc70
	.byte	0
	.uleb128 0x1d
	.ascii "dpiX\0"
	.byte	0xf
	.word	0x176
	.byte	0x15
	.long	0x4de
	.byte	0x8
	.uleb128 0x1d
	.ascii "dpiY\0"
	.byte	0xf
	.word	0x177
	.byte	0x15
	.long	0x4de
	.byte	0xc
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF198
	.byte	0xf
	.word	0x14c
	.byte	0x25
	.long	0x1d55a
	.uleb128 0x4
	.long	0x1d548
	.uleb128 0x54
	.secrel32	.LASF198
	.byte	0x4
	.byte	0xf
	.word	0x18d
	.byte	0x8
	.long	0x1d57e
	.uleb128 0x1d
	.ascii "debugLevel\0"
	.byte	0xf
	.word	0x18e
	.byte	0x14
	.long	0x1cf19
	.byte	0
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF199
	.byte	0xf
	.word	0x14e
	.byte	0x33
	.long	0x1d590
	.uleb128 0x4
	.long	0x1d57e
	.uleb128 0x54
	.secrel32	.LASF199
	.byte	0x18
	.byte	0xf
	.word	0x196
	.byte	0x8
	.long	0x1d5d4
	.uleb128 0x39
	.secrel32	.LASF171
	.byte	0xf
	.word	0x197
	.byte	0x18
	.long	0x19e13
	.byte	0
	.uleb128 0x39
	.secrel32	.LASF200
	.byte	0xf
	.word	0x198
	.byte	0x18
	.long	0x1ccb0
	.byte	0x8
	.uleb128 0x1d
	.ascii "presentOptions\0"
	.byte	0xf
	.word	0x199
	.byte	0x18
	.long	0x1d0d5
	.byte	0x10
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF201
	.byte	0xf
	.word	0x153
	.byte	0x2e
	.long	0x1d5e6
	.uleb128 0x4
	.long	0x1d5d4
	.uleb128 0x54
	.secrel32	.LASF201
	.byte	0x1c
	.byte	0xf
	.word	0x1b7
	.byte	0x8
	.long	0x1d64d
	.uleb128 0x39
	.secrel32	.LASF2
	.byte	0xf
	.word	0x1b8
	.byte	0x1c
	.long	0x1d182
	.byte	0
	.uleb128 0x39
	.secrel32	.LASF197
	.byte	0xf
	.word	0x1b9
	.byte	0x1c
	.long	0x1cc70
	.byte	0x4
	.uleb128 0x1d
	.ascii "dpiX\0"
	.byte	0xf
	.word	0x1ba
	.byte	0x1c
	.long	0x4de
	.byte	0xc
	.uleb128 0x1d
	.ascii "dpiY\0"
	.byte	0xf
	.word	0x1bb
	.byte	0x1c
	.long	0x4de
	.byte	0x10
	.uleb128 0x1d
	.ascii "usage\0"
	.byte	0xf
	.word	0x1bc
	.byte	0x1c
	.long	0x1d248
	.byte	0x14
	.uleb128 0x39
	.secrel32	.LASF202
	.byte	0xf
	.word	0x1bd
	.byte	0x1c
	.long	0x1d02d
	.byte	0x18
	.byte	0
	.uleb128 0x22
	.ascii "D2D1_RECT_F\0"
	.byte	0xf
	.word	0x159
	.byte	0x14
	.long	0x1cd7b
	.uleb128 0x4
	.long	0x1d64d
	.uleb128 0x22
	.ascii "D2D1_RECT_U\0"
	.byte	0xf
	.word	0x15d
	.byte	0x14
	.long	0x1cdca
	.uleb128 0x22
	.ascii "D2D1_COLOR_F\0"
	.byte	0xf
	.word	0x15e
	.byte	0x15
	.long	0x1cd24
	.uleb128 0x4
	.long	0x1d67c
	.uleb128 0x1f
	.ascii "__mingw_uuidof_s<ID2D1Factory>\0"
	.byte	0x1
	.byte	0xf
	.word	0x994
	.byte	0x1
	.long	0x1d724
	.uleb128 0x13d
	.ascii "__uuid_inst\0"
	.byte	0xf
	.word	0x994
	.byte	0x1
	.ascii "_ZN16__mingw_uuidof_sI12ID2D1FactoryE11__uuid_instE\0"
	.long	0x6f2
	.byte	0x10
	.byte	0x47
	.byte	0x22
	.byte	0x15
	.byte	0x6
	.byte	0x50
	.byte	0x6f
	.byte	0x5a
	.byte	0x46
	.byte	0x92
	.byte	0x45
	.byte	0x11
	.byte	0x8b
	.byte	0xfd
	.byte	0x3b
	.byte	0x60
	.byte	0x7
	.byte	0x1
	.uleb128 0xa
	.ascii "T\0"
	.long	0x1d275
	.byte	0
	.uleb128 0x6b
	.long	0x1d6c0
	.uleb128 0x78
	.ascii "D2D1\0"
	.byte	0x12
	.byte	0xb
	.byte	0xb
	.long	0x1e307
	.uleb128 0x1b
	.ascii "TypeTraits<unsigned int>\0"
	.byte	0x1
	.byte	0x12
	.byte	0x15
	.byte	0x13
	.long	0x1d76d
	.uleb128 0x13
	.ascii "Size\0"
	.byte	0x12
	.byte	0x17
	.byte	0x1c
	.long	0x1ccb0
	.uleb128 0xa
	.ascii "T\0"
	.long	0x1e2
	.byte	0
	.uleb128 0x1b
	.ascii "TypeTraits<float>\0"
	.byte	0x1
	.byte	0x12
	.byte	0xf
	.byte	0x1d
	.long	0x1d79d
	.uleb128 0x13
	.ascii "Rect\0"
	.byte	0x12
	.byte	0x12
	.byte	0x1c
	.long	0x1d64d
	.uleb128 0xa
	.ascii "T\0"
	.long	0x4ec
	.byte	0
	.uleb128 0x7a
	.secrel32	.LASF203
	.byte	0x10
	.byte	0x12
	.byte	0xc7
	.byte	0x7
	.long	0x1e0b8
	.uleb128 0x13e
	.ascii "Enum\0"
	.byte	0x7
	.byte	0x4
	.long	0x1e2
	.byte	0x12
	.byte	0xc9
	.byte	0xa
	.byte	0x1
	.long	0x1dfc0
	.uleb128 0xc
	.ascii "AliceBlue\0"
	.long	0xf0f8ff
	.uleb128 0xc
	.ascii "AntiqueWhite\0"
	.long	0xfaebd7
	.uleb128 0x5b
	.ascii "Aqua\0"
	.word	0xffff
	.uleb128 0xc
	.ascii "Aquamarine\0"
	.long	0x7fffd4
	.uleb128 0xc
	.ascii "Azure\0"
	.long	0xf0ffff
	.uleb128 0xc
	.ascii "Beige\0"
	.long	0xf5f5dc
	.uleb128 0xc
	.ascii "Bisque\0"
	.long	0xffe4c4
	.uleb128 0xb
	.ascii "Black\0"
	.byte	0
	.uleb128 0xc
	.ascii "BlanchedAlmond\0"
	.long	0xffebcd
	.uleb128 0xb
	.ascii "Blue\0"
	.byte	0xff
	.uleb128 0xc
	.ascii "BlueViolet\0"
	.long	0x8a2be2
	.uleb128 0xc
	.ascii "Brown\0"
	.long	0xa52a2a
	.uleb128 0xc
	.ascii "BurlyWood\0"
	.long	0xdeb887
	.uleb128 0xc
	.ascii "CadetBlue\0"
	.long	0x5f9ea0
	.uleb128 0xc
	.ascii "Chartreuse\0"
	.long	0x7fff00
	.uleb128 0xc
	.ascii "Chocolate\0"
	.long	0xd2691e
	.uleb128 0xc
	.ascii "Coral\0"
	.long	0xff7f50
	.uleb128 0xc
	.ascii "CornflowerBlue\0"
	.long	0x6495ed
	.uleb128 0xc
	.ascii "Cornsilk\0"
	.long	0xfff8dc
	.uleb128 0xc
	.ascii "Crimson\0"
	.long	0xdc143c
	.uleb128 0x5b
	.ascii "Cyan\0"
	.word	0xffff
	.uleb128 0xb
	.ascii "DarkBlue\0"
	.byte	0x8b
	.uleb128 0x5b
	.ascii "DarkCyan\0"
	.word	0x8b8b
	.uleb128 0xc
	.ascii "DarkGoldenrod\0"
	.long	0xb8860b
	.uleb128 0xc
	.ascii "DarkGray\0"
	.long	0xa9a9a9
	.uleb128 0x5b
	.ascii "DarkGreen\0"
	.word	0x6400
	.uleb128 0xc
	.ascii "DarkKhaki\0"
	.long	0xbdb76b
	.uleb128 0xc
	.ascii "DarkMagenta\0"
	.long	0x8b008b
	.uleb128 0xc
	.ascii "DarkOliveGreen\0"
	.long	0x556b2f
	.uleb128 0xc
	.ascii "DarkOrange\0"
	.long	0xff8c00
	.uleb128 0xc
	.ascii "DarkOrchid\0"
	.long	0x9932cc
	.uleb128 0xc
	.ascii "DarkRed\0"
	.long	0x8b0000
	.uleb128 0xc
	.ascii "DarkSalmon\0"
	.long	0xe9967a
	.uleb128 0xc
	.ascii "DarkSeaGreen\0"
	.long	0x8fbc8f
	.uleb128 0xc
	.ascii "DarkSlateBlue\0"
	.long	0x483d8b
	.uleb128 0xc
	.ascii "DarkSlateGray\0"
	.long	0x2f4f4f
	.uleb128 0x5b
	.ascii "DarkTurquoise\0"
	.word	0xced1
	.uleb128 0xc
	.ascii "DarkViolet\0"
	.long	0x9400d3
	.uleb128 0xc
	.ascii "DeepPink\0"
	.long	0xff1493
	.uleb128 0x5b
	.ascii "DeepSkyBlue\0"
	.word	0xbfff
	.uleb128 0xc
	.ascii "DimGray\0"
	.long	0x696969
	.uleb128 0xc
	.ascii "DodgerBlue\0"
	.long	0x1e90ff
	.uleb128 0xc
	.ascii "Firebrick\0"
	.long	0xb22222
	.uleb128 0xc
	.ascii "FloralWhite\0"
	.long	0xfffaf0
	.uleb128 0xc
	.ascii "ForestGreen\0"
	.long	0x228b22
	.uleb128 0xc
	.ascii "Fuchsia\0"
	.long	0xff00ff
	.uleb128 0xc
	.ascii "Gainsboro\0"
	.long	0xdcdcdc
	.uleb128 0xc
	.ascii "GhostWhite\0"
	.long	0xf8f8ff
	.uleb128 0xc
	.ascii "Gold\0"
	.long	0xffd700
	.uleb128 0xc
	.ascii "Goldenrod\0"
	.long	0xdaa520
	.uleb128 0xc
	.ascii "Gray\0"
	.long	0x808080
	.uleb128 0x5b
	.ascii "Green\0"
	.word	0x8000
	.uleb128 0xc
	.ascii "GreenYellow\0"
	.long	0xadff2f
	.uleb128 0xc
	.ascii "Honeydew\0"
	.long	0xf0fff0
	.uleb128 0xc
	.ascii "HotPink\0"
	.long	0xff69b4
	.uleb128 0xc
	.ascii "IndianRed\0"
	.long	0xcd5c5c
	.uleb128 0xc
	.ascii "Indigo\0"
	.long	0x4b0082
	.uleb128 0xc
	.ascii "Ivory\0"
	.long	0xfffff0
	.uleb128 0xc
	.ascii "Khaki\0"
	.long	0xf0e68c
	.uleb128 0xc
	.ascii "Lavender\0"
	.long	0xe6e6fa
	.uleb128 0xc
	.ascii "LavenderBlush\0"
	.long	0xfff0f5
	.uleb128 0xc
	.ascii "LawnGreen\0"
	.long	0x7cfc00
	.uleb128 0xc
	.ascii "LemonChiffon\0"
	.long	0xfffacd
	.uleb128 0xc
	.ascii "LightBlue\0"
	.long	0xadd8e6
	.uleb128 0xc
	.ascii "LightCoral\0"
	.long	0xf08080
	.uleb128 0xc
	.ascii "LightCyan\0"
	.long	0xe0ffff
	.uleb128 0xc
	.ascii "LightGoldenrodYellow\0"
	.long	0xfafad2
	.uleb128 0xc
	.ascii "LightGreen\0"
	.long	0x90ee90
	.uleb128 0xc
	.ascii "LightGray\0"
	.long	0xd3d3d3
	.uleb128 0xc
	.ascii "LightPink\0"
	.long	0xffb6c1
	.uleb128 0xc
	.ascii "LightSalmon\0"
	.long	0xffa07a
	.uleb128 0xc
	.ascii "LightSeaGreen\0"
	.long	0x20b2aa
	.uleb128 0xc
	.ascii "LightSkyBlue\0"
	.long	0x87cefa
	.uleb128 0xc
	.ascii "LightSlateGray\0"
	.long	0x778899
	.uleb128 0xc
	.ascii "LightSteelBlue\0"
	.long	0xb0c4de
	.uleb128 0xc
	.ascii "LightYellow\0"
	.long	0xffffe0
	.uleb128 0x5b
	.ascii "Lime\0"
	.word	0xff00
	.uleb128 0xc
	.ascii "LimeGreen\0"
	.long	0x32cd32
	.uleb128 0xc
	.ascii "Linen\0"
	.long	0xfaf0e6
	.uleb128 0xc
	.ascii "Magenta\0"
	.long	0xff00ff
	.uleb128 0xc
	.ascii "Maroon\0"
	.long	0x800000
	.uleb128 0xc
	.ascii "MediumAquamarine\0"
	.long	0x66cdaa
	.uleb128 0xb
	.ascii "MediumBlue\0"
	.byte	0xcd
	.uleb128 0xc
	.ascii "MediumOrchid\0"
	.long	0xba55d3
	.uleb128 0xc
	.ascii "MediumPurple\0"
	.long	0x9370db
	.uleb128 0xc
	.ascii "MediumSeaGreen\0"
	.long	0x3cb371
	.uleb128 0xc
	.ascii "MediumSlateBlue\0"
	.long	0x7b68ee
	.uleb128 0x5b
	.ascii "MediumSpringGreen\0"
	.word	0xfa9a
	.uleb128 0xc
	.ascii "MediumTurquoise\0"
	.long	0x48d1cc
	.uleb128 0xc
	.ascii "MediumVioletRed\0"
	.long	0xc71585
	.uleb128 0xc
	.ascii "MidnightBlue\0"
	.long	0x191970
	.uleb128 0xc
	.ascii "MintCream\0"
	.long	0xf5fffa
	.uleb128 0xc
	.ascii "MistyRose\0"
	.long	0xffe4e1
	.uleb128 0xc
	.ascii "Moccasin\0"
	.long	0xffe4b5
	.uleb128 0xc
	.ascii "NavajoWhite\0"
	.long	0xffdead
	.uleb128 0xb
	.ascii "Navy\0"
	.byte	0x80
	.uleb128 0xc
	.ascii "OldLace\0"
	.long	0xfdf5e6
	.uleb128 0xc
	.ascii "Olive\0"
	.long	0x808000
	.uleb128 0xc
	.ascii "OliveDrab\0"
	.long	0x6b8e23
	.uleb128 0xc
	.ascii "Orange\0"
	.long	0xffa500
	.uleb128 0xc
	.ascii "OrangeRed\0"
	.long	0xff4500
	.uleb128 0xc
	.ascii "Orchid\0"
	.long	0xda70d6
	.uleb128 0xc
	.ascii "PaleGoldenrod\0"
	.long	0xeee8aa
	.uleb128 0xc
	.ascii "PaleGreen\0"
	.long	0x98fb98
	.uleb128 0xc
	.ascii "PaleTurquoise\0"
	.long	0xafeeee
	.uleb128 0xc
	.ascii "PaleVioletRed\0"
	.long	0xdb7093
	.uleb128 0xc
	.ascii "PapayaWhip\0"
	.long	0xffefd5
	.uleb128 0xc
	.ascii "PeachPuff\0"
	.long	0xffdab9
	.uleb128 0xc
	.ascii "Peru\0"
	.long	0xcd853f
	.uleb128 0xc
	.ascii "Pink\0"
	.long	0xffc0cb
	.uleb128 0xc
	.ascii "Plum\0"
	.long	0xdda0dd
	.uleb128 0xc
	.ascii "PowderBlue\0"
	.long	0xb0e0e6
	.uleb128 0xc
	.ascii "Purple\0"
	.long	0x800080
	.uleb128 0xc
	.ascii "Red\0"
	.long	0xff0000
	.uleb128 0xc
	.ascii "RosyBrown\0"
	.long	0xbc8f8f
	.uleb128 0xc
	.ascii "RoyalBlue\0"
	.long	0x4169e1
	.uleb128 0xc
	.ascii "SaddleBrown\0"
	.long	0x8b4513
	.uleb128 0xc
	.ascii "Salmon\0"
	.long	0xfa8072
	.uleb128 0xc
	.ascii "SandyBrown\0"
	.long	0xf4a460
	.uleb128 0xc
	.ascii "SeaGreen\0"
	.long	0x2e8b57
	.uleb128 0xc
	.ascii "SeaShell\0"
	.long	0xfff5ee
	.uleb128 0xc
	.ascii "Sienna\0"
	.long	0xa0522d
	.uleb128 0xc
	.ascii "Silver\0"
	.long	0xc0c0c0
	.uleb128 0xc
	.ascii "SkyBlue\0"
	.long	0x87ceeb
	.uleb128 0xc
	.ascii "SlateBlue\0"
	.long	0x6a5acd
	.uleb128 0xc
	.ascii "SlateGray\0"
	.long	0x708090
	.uleb128 0xc
	.ascii "Snow\0"
	.long	0xfffafa
	.uleb128 0x5b
	.ascii "SpringGreen\0"
	.word	0xff7f
	.uleb128 0xc
	.ascii "SteelBlue\0"
	.long	0x4682b4
	.uleb128 0xc
	.ascii "Tan\0"
	.long	0xd2b48c
	.uleb128 0x5b
	.ascii "Teal\0"
	.word	0x8080
	.uleb128 0xc
	.ascii "Thistle\0"
	.long	0xd8bfd8
	.uleb128 0xc
	.ascii "Tomato\0"
	.long	0xff6347
	.uleb128 0xc
	.ascii "Turquoise\0"
	.long	0x40e0d0
	.uleb128 0xc
	.ascii "Violet\0"
	.long	0xee82ee
	.uleb128 0xc
	.ascii "Wheat\0"
	.long	0xf5deb3
	.uleb128 0xc
	.ascii "White\0"
	.long	0xffffff
	.uleb128 0xc
	.ascii "WhiteSmoke\0"
	.long	0xf5f5f5
	.uleb128 0xc
	.ascii "Yellow\0"
	.long	0xffff00
	.uleb128 0xc
	.ascii "YellowGreen\0"
	.long	0x9acd32
	.byte	0
	.uleb128 0x4b
	.long	0x1ccc9
	.byte	0x1
	.uleb128 0x3b
	.secrel32	.LASF203
	.byte	0x12
	.word	0x158
	.byte	0x11
	.ascii "_ZN4D2D16ColorFC4Ejf\0"
	.byte	0x1
	.long	0x1dfed
	.long	0x1dffd
	.uleb128 0x2
	.long	0x1e307
	.uleb128 0x1
	.long	0x55a
	.uleb128 0x1
	.long	0x4de
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF203
	.byte	0x12
	.word	0x15c
	.byte	0x15
	.ascii "_ZN4D2D16ColorFC4ENS0_4EnumEf\0"
	.byte	0x1
	.long	0x1e02d
	.long	0x1e03d
	.uleb128 0x2
	.long	0x1e307
	.uleb128 0x1
	.long	0x1d7aa
	.uleb128 0x1
	.long	0x4de
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF203
	.byte	0x12
	.word	0x160
	.byte	0x15
	.ascii "_ZN4D2D16ColorFC4Effff\0"
	.byte	0x1
	.long	0x1e066
	.long	0x1e080
	.uleb128 0x2
	.long	0x1e307
	.uleb128 0x1
	.long	0x4de
	.uleb128 0x1
	.long	0x4de
	.uleb128 0x1
	.long	0x4de
	.uleb128 0x1
	.long	0x4de
	.byte	0
	.uleb128 0x13f
	.ascii "init\0"
	.byte	0x12
	.word	0x167
	.byte	0x1a
	.ascii "_ZN4D2D16ColorF4initEjf\0"
	.long	0x1e0a7
	.uleb128 0x2
	.long	0x1e307
	.uleb128 0x1
	.long	0x55a
	.uleb128 0x1
	.long	0x4de
	.byte	0
	.byte	0
	.uleb128 0x28
	.ascii "Rect<float>\0"
	.byte	0x12
	.byte	0x39
	.byte	0x43
	.ascii "_ZN4D2D14RectIfEENS_10TypeTraitsIT_E4RectES2_S2_S2_S2_\0"
	.long	0x1d788
	.long	0x1e123
	.uleb128 0xa
	.ascii "T\0"
	.long	0x4ec
	.uleb128 0x1
	.long	0x4ec
	.uleb128 0x1
	.long	0x4ec
	.uleb128 0x1
	.long	0x4ec
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x28
	.ascii "Size<unsigned int>\0"
	.byte	0x12
	.byte	0x2c
	.byte	0x43
	.ascii "_ZN4D2D14SizeIjEENS_10TypeTraitsIT_E4SizeES2_S2_\0"
	.long	0x1d758
	.long	0x1e185
	.uleb128 0xa
	.ascii "T\0"
	.long	0x1e2
	.uleb128 0x1
	.long	0x1e2
	.uleb128 0x1
	.long	0x1e2
	.byte	0
	.uleb128 0x28
	.ascii "RenderTargetProperties\0"
	.byte	0x12
	.byte	0x9c
	.byte	0x2f
	.ascii "_ZN4D2D122RenderTargetPropertiesE23D2D1_RENDER_TARGET_TYPERK17D2D1_PIXEL_FORMATff24D2D1_RENDER_TARGET_USAGE18D2D1_FEATURE_LEVEL\0"
	.long	0x1d5d4
	.long	0x1e247
	.uleb128 0x1
	.long	0x1d182
	.uleb128 0x1
	.long	0x28096
	.uleb128 0x1
	.long	0x4de
	.uleb128 0x1
	.long	0x4de
	.uleb128 0x1
	.long	0x1d248
	.uleb128 0x1
	.long	0x1d02d
	.byte	0
	.uleb128 0x28
	.ascii "PixelFormat\0"
	.byte	0x12
	.byte	0x8e
	.byte	0x23
	.ascii "_ZN4D2D111PixelFormatE11DXGI_FORMAT15D2D1_ALPHA_MODE\0"
	.long	0x1cc70
	.long	0x1e29f
	.uleb128 0x1
	.long	0x1cb8e
	.uleb128 0x1
	.long	0x1cc39
	.byte	0
	.uleb128 0x28
	.ascii "RectF\0"
	.byte	0x12
	.byte	0x3e
	.byte	0x1d
	.ascii "_ZN4D2D15RectFEffff\0"
	.long	0x1d64d
	.long	0x1e2da
	.uleb128 0x1
	.long	0x4de
	.uleb128 0x1
	.long	0x4de
	.uleb128 0x1
	.long	0x4de
	.uleb128 0x1
	.long	0x4de
	.byte	0
	.uleb128 0xd3
	.ascii "SizeU\0"
	.byte	0x12
	.byte	0x35
	.byte	0x1d
	.ascii "_ZN4D2D15SizeUEjj\0"
	.long	0x1ccb0
	.uleb128 0x1
	.long	0x55a
	.uleb128 0x1
	.long	0x55a
	.byte	0
	.byte	0
	.uleb128 0x6
	.long	0x1d79d
	.uleb128 0x4
	.long	0x1e307
	.uleb128 0x7
	.long	0xcf8e
	.uleb128 0x6
	.long	0xcf8e
	.uleb128 0x4
	.long	0x1e316
	.uleb128 0x7
	.long	0xd6cf
	.uleb128 0x7
	.long	0xcf6e
	.uleb128 0x6
	.long	0xd6cf
	.uleb128 0x4
	.long	0x1e32a
	.uleb128 0x6
	.long	0xcf6e
	.uleb128 0x7
	.long	0x1e33e
	.uleb128 0x77
	.long	0xcf6e
	.long	0x1e34f
	.uleb128 0x8a
	.long	0xf1
	.byte	0x3f
	.byte	0
	.uleb128 0x6
	.long	0xd7e8
	.uleb128 0x4
	.long	0x1e34f
	.uleb128 0x7
	.long	0xd880
	.uleb128 0x7
	.long	0xd7e8
	.uleb128 0x6
	.long	0xd874
	.uleb128 0x6
	.long	0xd880
	.uleb128 0x6
	.long	0xe118
	.uleb128 0x7
	.long	0xd874
	.uleb128 0x7
	.long	0xe17b
	.uleb128 0x6
	.long	0xe17b
	.uleb128 0x4
	.long	0x1e37c
	.uleb128 0x7
	.long	0xe8d8
	.uleb128 0x7
	.long	0xcf89
	.uleb128 0x6
	.long	0xe8d8
	.uleb128 0x4
	.long	0x1e390
	.uleb128 0x6
	.long	0xcf89
	.uleb128 0x92
	.ascii "Factory\0"
	.byte	0x21
	.byte	0xf
	.long	0x1e3b9
	.uleb128 0x9
	.byte	0x3
	.quad	Factory
	.uleb128 0x6
	.long	0x1d268
	.uleb128 0x92
	.ascii "RenderTarget\0"
	.byte	0x22
	.byte	0x18
	.long	0x1e3dd
	.uleb128 0x9
	.byte	0x3
	.quad	RenderTarget
	.uleb128 0x6
	.long	0x1d344
	.uleb128 0x92
	.ascii "Bitmap\0"
	.byte	0x23
	.byte	0xe
	.long	0x1e3fb
	.uleb128 0x9
	.byte	0x3
	.quad	Bitmap
	.uleb128 0x6
	.long	0x1d255
	.uleb128 0x92
	.ascii "pixelBuffer\0"
	.byte	0x25
	.byte	0xb
	.long	0x1e41e
	.uleb128 0x9
	.byte	0x3
	.quad	pixelBuffer
	.uleb128 0x6
	.long	0x1a9a9
	.uleb128 0x92
	.ascii "elementColor\0"
	.byte	0x26
	.byte	0xb
	.long	0x1e41e
	.uleb128 0x9
	.byte	0x3
	.quad	elementColor
	.uleb128 0x13
	.ascii "s8flagcell\0"
	.byte	0x10
	.byte	0x2e
	.byte	0x7
	.long	0x1a983
	.uleb128 0x4
	.long	0x1e442
	.uleb128 0x13
	.ascii "s8flagkeys\0"
	.byte	0x10
	.byte	0x2f
	.byte	0x7
	.long	0x1a963
	.uleb128 0x4
	.long	0x1e45a
	.uleb128 0x47
	.ascii "CELL_NONE\0"
	.byte	0x10
	.byte	0x31
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL9CELL_NONE
	.uleb128 0x47
	.ascii "CELL_AIR\0"
	.byte	0x10
	.byte	0x32
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL8CELL_AIR
	.uleb128 0x47
	.ascii "CELL_WATER\0"
	.byte	0x10
	.byte	0x33
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL10CELL_WATER
	.uleb128 0x47
	.ascii "CELL_WOOD\0"
	.byte	0x10
	.byte	0x34
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL9CELL_WOOD
	.uleb128 0x47
	.ascii "CELL_FIRE\0"
	.byte	0x10
	.byte	0x35
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL9CELL_FIRE
	.uleb128 0x47
	.ascii "CELL_METAL\0"
	.byte	0x10
	.byte	0x36
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL10CELL_METAL
	.uleb128 0x47
	.ascii "CELL_CUSTOM\0"
	.byte	0x10
	.byte	0x37
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL11CELL_CUSTOM
	.uleb128 0x47
	.ascii "CELL_DIRTY\0"
	.byte	0x10
	.byte	0x38
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL10CELL_DIRTY
	.uleb128 0x47
	.ascii "CELL_ACTIVE\0"
	.byte	0x10
	.byte	0x39
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL11CELL_ACTIVE
	.uleb128 0x47
	.ascii "CELL_STATIC\0"
	.byte	0x10
	.byte	0x3a
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL11CELL_STATIC
	.uleb128 0x47
	.ascii "CELL_VISIBLE\0"
	.byte	0x10
	.byte	0x3b
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL12CELL_VISIBLE
	.uleb128 0x47
	.ascii "CELL_SOLID\0"
	.byte	0x10
	.byte	0x3c
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL10CELL_SOLID
	.uleb128 0x47
	.ascii "CELL_ELEMENT_ALL\0"
	.byte	0x10
	.byte	0x3e
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL16CELL_ELEMENT_ALL
	.uleb128 0x47
	.ascii "KEY_DOWN\0"
	.byte	0x10
	.byte	0x40
	.long	0x1e46d
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL8KEY_DOWN
	.uleb128 0x47
	.ascii "KEY_PRESSED\0"
	.byte	0x10
	.byte	0x41
	.long	0x1e46d
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL11KEY_PRESSED
	.uleb128 0x47
	.ascii "KEY_HELD\0"
	.byte	0x10
	.byte	0x42
	.long	0x1e46d
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL8KEY_HELD
	.uleb128 0x47
	.ascii "KEY_RELEASED\0"
	.byte	0x10
	.byte	0x43
	.long	0x1e46d
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL12KEY_RELEASED
	.uleb128 0x47
	.ascii "KEY_PREV\0"
	.byte	0x10
	.byte	0x44
	.long	0x1e46d
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL8KEY_PREV
	.uleb128 0x47
	.ascii "MATERIAL_SIZE\0"
	.byte	0x10
	.byte	0x46
	.long	0x1e455
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL13MATERIAL_SIZE
	.uleb128 0x1b
	.ascii "Vec3D\0"
	.byte	0xc
	.byte	0x10
	.byte	0x5d
	.byte	0x8
	.long	0x1e7b8
	.uleb128 0x16
	.ascii "x\0"
	.byte	0x10
	.byte	0x5f
	.byte	0x8
	.long	0x4ec
	.byte	0
	.uleb128 0x16
	.ascii "y\0"
	.byte	0x10
	.byte	0x5f
	.byte	0x11
	.long	0x4ec
	.byte	0x4
	.uleb128 0x16
	.ascii "z\0"
	.byte	0x10
	.byte	0x5f
	.byte	0x1a
	.long	0x4ec
	.byte	0x8
	.uleb128 0x62
	.ascii "Vec3D\0"
	.byte	0x10
	.byte	0x5f
	.byte	0x1d
	.ascii "_ZN5Vec3DC4Efff\0"
	.long	0x1e6de
	.long	0x1e6f3
	.uleb128 0x2
	.long	0x1e7bd
	.uleb128 0x1
	.long	0x4ec
	.uleb128 0x1
	.long	0x4ec
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF92
	.byte	0x10
	.byte	0x61
	.byte	0x8
	.ascii "_ZNK5Vec3DmiERKS_\0"
	.long	0x1e68c
	.long	0x1e719
	.long	0x1e724
	.uleb128 0x2
	.long	0x1e7c7
	.uleb128 0x1
	.long	0x1e7d1
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF77
	.byte	0x10
	.byte	0x62
	.byte	0xb
	.ascii "_ZNK5Vec3DmlEf\0"
	.long	0x1e68c
	.long	0x1e747
	.long	0x1e752
	.uleb128 0x2
	.long	0x1e7c7
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF91
	.byte	0x10
	.byte	0x63
	.byte	0xb
	.ascii "_ZNK5Vec3DplERKS_\0"
	.long	0x1e68c
	.long	0x1e778
	.long	0x1e783
	.uleb128 0x2
	.long	0x1e7c7
	.uleb128 0x1
	.long	0x1e7d1
	.byte	0
	.uleb128 0x140
	.ascii "operator/\0"
	.byte	0x10
	.byte	0x64
	.byte	0x8
	.ascii "_ZNK5Vec3DdvERKS_\0"
	.long	0x1e68c
	.long	0x1e7ac
	.uleb128 0x2
	.long	0x1e7c7
	.uleb128 0x1
	.long	0x1e7d1
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x1e68c
	.uleb128 0x6
	.long	0x1e68c
	.uleb128 0x4
	.long	0x1e7bd
	.uleb128 0x6
	.long	0x1e7b8
	.uleb128 0x4
	.long	0x1e7c7
	.uleb128 0x7
	.long	0x1e7b8
	.uleb128 0x1b
	.ascii "MATRIX\0"
	.byte	0x38
	.byte	0x10
	.byte	0x70
	.byte	0x8
	.long	0x1ed80
	.uleb128 0x5f
	.secrel32	.LASF204
	.byte	0x40
	.byte	0x10
	.byte	0x75
	.byte	0x9
	.long	0x1e8fb
	.uleb128 0x16
	.ascii "density\0"
	.byte	0x10
	.byte	0x77
	.byte	0x9
	.long	0x4ec
	.byte	0
	.uleb128 0x16
	.ascii "friction\0"
	.byte	0x10
	.byte	0x78
	.byte	0x9
	.long	0x4ec
	.byte	0x4
	.uleb128 0x16
	.ascii "thermalConductivity\0"
	.byte	0x10
	.byte	0x79
	.byte	0x9
	.long	0x4ec
	.byte	0x8
	.uleb128 0x16
	.ascii "specificHeat\0"
	.byte	0x10
	.byte	0x7a
	.byte	0x9
	.long	0x4ec
	.byte	0xc
	.uleb128 0x16
	.ascii "restitution\0"
	.byte	0x10
	.byte	0x7b
	.byte	0x9
	.long	0x4ec
	.byte	0x10
	.uleb128 0x16
	.ascii "hardness\0"
	.byte	0x10
	.byte	0x7c
	.byte	0x9
	.long	0x4ec
	.byte	0x14
	.uleb128 0x16
	.ascii "liquid\0"
	.byte	0x10
	.byte	0x7d
	.byte	0x9
	.long	0x1ab64
	.byte	0x18
	.uleb128 0x16
	.ascii "temperature\0"
	.byte	0x10
	.byte	0x7f
	.byte	0x9
	.long	0x4ec
	.byte	0x1c
	.uleb128 0x16
	.ascii "velocity\0"
	.byte	0x10
	.byte	0x80
	.byte	0x9
	.long	0x1e68c
	.byte	0x20
	.uleb128 0x16
	.ascii "pressure\0"
	.byte	0x10
	.byte	0x81
	.byte	0xa
	.long	0x77c
	.byte	0x30
	.uleb128 0x16
	.ascii "name\0"
	.byte	0x10
	.byte	0x83
	.byte	0xf
	.long	0x19808
	.byte	0x38
	.uleb128 0x141
	.secrel32	.LASF204
	.ascii "_ZN6MATRIX18MaterialAttributesC4Ev\0"
	.long	0x1e8f4
	.uleb128 0x2
	.long	0x1ed8f
	.byte	0
	.byte	0
	.uleb128 0x1b
	.ascii "cell\0"
	.byte	0x2
	.byte	0x10
	.byte	0x85
	.byte	0x9
	.long	0x1e9ad
	.uleb128 0xd7
	.ascii "cell\0"
	.byte	0x10
	.byte	0x87
	.byte	0x3
	.ascii "_ZN6MATRIX4cellC4Ev\0"
	.long	0x1e92f
	.long	0x1e935
	.uleb128 0x2
	.long	0x1ed80
	.byte	0
	.uleb128 0x62
	.ascii "cell\0"
	.byte	0x10
	.byte	0x88
	.byte	0x3
	.ascii "_ZN6MATRIX4cellC4Et\0"
	.long	0x1e95a
	.long	0x1e965
	.uleb128 0x2
	.long	0x1ed80
	.uleb128 0x1
	.long	0x1e442
	.byte	0
	.uleb128 0x62
	.ascii "~cell\0"
	.byte	0x10
	.byte	0x8a
	.byte	0x3
	.ascii "_ZN6MATRIX4cellD4Ev\0"
	.long	0x1e98b
	.long	0x1e996
	.uleb128 0x2
	.long	0x1ed80
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x16
	.ascii "MaterialType\0"
	.byte	0x10
	.byte	0x8f
	.byte	0xe
	.long	0x1e442
	.byte	0
	.byte	0
	.uleb128 0x35
	.ascii "InitMatrix\0"
	.byte	0x10
	.byte	0x92
	.byte	0xb
	.ascii "_ZN6MATRIX10InitMatrixEjjj\0"
	.long	0x1a9a9
	.long	0x1e9e3
	.long	0x1e9f8
	.uleb128 0x2
	.long	0x1ee9d
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.byte	0
	.uleb128 0x35
	.ascii "AccessDataAt\0"
	.byte	0x10
	.byte	0xf9
	.byte	0x7
	.ascii "_ZN6MATRIX12AccessDataAtEjjj\0"
	.long	0x1e8fb
	.long	0x1ea32
	.long	0x1ea47
	.uleb128 0x2
	.long	0x1ee9d
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.byte	0
	.uleb128 0x35
	.ascii "WriteDataTo\0"
	.byte	0x10
	.byte	0xff
	.byte	0x7
	.ascii "_ZN6MATRIX11WriteDataToEjjjt\0"
	.long	0x1e8fb
	.long	0x1ea80
	.long	0x1ea9a
	.uleb128 0x2
	.long	0x1ee9d
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1e442
	.byte	0
	.uleb128 0x5d
	.ascii "ClearDataFrom\0"
	.byte	0x10
	.word	0x107
	.byte	0xe
	.ascii "_ZN6MATRIX13ClearDataFromEjjjt\0"
	.long	0x1ead4
	.long	0x1eaee
	.uleb128 0x2
	.long	0x1ee9d
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1e442
	.byte	0
	.uleb128 0x5d
	.ascii "UpdateWorldView\0"
	.byte	0x10
	.word	0x10d
	.byte	0xe
	.ascii "_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE\0"
	.long	0x1eb3d
	.long	0x1eb4d
	.uleb128 0x2
	.long	0x1ee9d
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x1bc9f
	.byte	0
	.uleb128 0x63
	.ascii "FlattenedIndex\0"
	.byte	0x10
	.word	0x14d
	.byte	0xb
	.ascii "_ZN6MATRIX14FlattenedIndexEjjj\0"
	.long	0x1a9a9
	.long	0x1eb8c
	.long	0x1eba1
	.uleb128 0x2
	.long	0x1ee9d
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.byte	0
	.uleb128 0x1d
	.ascii "flag\0"
	.byte	0x10
	.word	0x153
	.byte	0xe
	.long	0x1eea7
	.byte	0
	.uleb128 0x1d
	.ascii "CELL_FRONT_BUFFER\0"
	.byte	0x10
	.word	0x155
	.byte	0x8
	.long	0x1ed80
	.byte	0x8
	.uleb128 0x56
	.ascii "CELL_BACK_BUFFER\0"
	.byte	0x10
	.word	0x157
	.byte	0x8
	.long	0x1ed80
	.byte	0x10
	.byte	0x3
	.uleb128 0x56
	.ascii "matAtt\0"
	.byte	0x10
	.word	0x159
	.byte	0x28
	.long	0x1074c
	.byte	0x18
	.byte	0x3
	.uleb128 0x1d
	.ascii "w\0"
	.byte	0x10
	.word	0x15c
	.byte	0xb
	.long	0x1a9a9
	.byte	0x20
	.uleb128 0x1d
	.ascii "h\0"
	.byte	0x10
	.word	0x15d
	.byte	0xb
	.long	0x1a9a9
	.byte	0x24
	.uleb128 0x1d
	.ascii "d\0"
	.byte	0x10
	.word	0x15e
	.byte	0xb
	.long	0x1a9a9
	.byte	0x28
	.uleb128 0x1d
	.ascii "_pixelWidth\0"
	.byte	0x10
	.word	0x160
	.byte	0xb
	.long	0x1a983
	.byte	0x2c
	.uleb128 0x1d
	.ascii "_pixelHeight\0"
	.byte	0x10
	.word	0x161
	.byte	0xb
	.long	0x1a983
	.byte	0x2e
	.uleb128 0x39
	.secrel32	.LASF205
	.byte	0x10
	.word	0x163
	.byte	0x8
	.long	0x4ec
	.byte	0x30
	.uleb128 0x5d
	.ascii "DestroyMatrix\0"
	.byte	0x10
	.word	0x165
	.byte	0xe
	.ascii "_ZN6MATRIX13DestroyMatrixEv\0"
	.long	0x1ec90
	.long	0x1ec96
	.uleb128 0x2
	.long	0x1ee9d
	.byte	0
	.uleb128 0xce
	.ascii "UpdateSimulationState<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x10
	.word	0x123
	.byte	0xe
	.long	0x1ecf9
	.long	0x1ed31
	.uleb128 0xa
	.ascii "C\0"
	.long	0x262f0
	.uleb128 0x2
	.long	0x1ee9d
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x1bcea
	.uleb128 0x1
	.long	0x1f540
	.uleb128 0x1
	.long	0x1bc9f
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.byte	0
	.uleb128 0x142
	.ascii "MATRIX\0"
	.ascii "_ZN6MATRIXC4Ev\0"
	.long	0x1ed51
	.long	0x1ed57
	.uleb128 0x2
	.long	0x1ee9d
	.byte	0
	.uleb128 0xae
	.ascii "~MATRIX\0"
	.ascii "_ZN6MATRIXD4Ev\0"
	.long	0x1ed74
	.uleb128 0x2
	.long	0x1ee9d
	.uleb128 0x2
	.long	0x184
	.byte	0
	.byte	0
	.uleb128 0x6
	.long	0x1e8fb
	.uleb128 0x4
	.long	0x1ed80
	.uleb128 0x6
	.long	0xe8dd
	.uleb128 0x6
	.long	0x1e7e6
	.uleb128 0x4
	.long	0x1ed8f
	.uleb128 0x6
	.long	0xf0bb
	.uleb128 0x4
	.long	0x1ed99
	.uleb128 0x7
	.long	0xea37
	.uleb128 0x7
	.long	0xf466
	.uleb128 0x1e
	.long	0xf0bb
	.uleb128 0x7
	.long	0xe8dd
	.uleb128 0x7
	.long	0xf0bb
	.uleb128 0x7
	.long	0xf46b
	.uleb128 0x7
	.long	0xf864
	.uleb128 0x6
	.long	0xf46b
	.uleb128 0x4
	.long	0x1edc6
	.uleb128 0x1e
	.long	0xf46b
	.uleb128 0x6
	.long	0xf869
	.uleb128 0x4
	.long	0x1edd5
	.uleb128 0x7
	.long	0x1ed94
	.uleb128 0x7
	.long	0xfb6b
	.uleb128 0x1e
	.long	0xf869
	.uleb128 0x7
	.long	0x1ed8f
	.uleb128 0x7
	.long	0xf869
	.uleb128 0x7
	.long	0xfb70
	.uleb128 0x7
	.long	0x100b7
	.uleb128 0x7
	.long	0xfcd1
	.uleb128 0x7
	.long	0xfcde
	.uleb128 0x6
	.long	0xfb70
	.uleb128 0x4
	.long	0x1ee0c
	.uleb128 0x1e
	.long	0xfb70
	.uleb128 0x6
	.long	0x100bc
	.uleb128 0x4
	.long	0x1ee1b
	.uleb128 0x7
	.long	0x1042f
	.uleb128 0x1e
	.long	0x100bc
	.uleb128 0x7
	.long	0x100bc
	.uleb128 0x6
	.long	0xeaa3
	.uleb128 0x4
	.long	0x1ee34
	.uleb128 0x1e
	.long	0xeaa3
	.uleb128 0x7
	.long	0xeaa3
	.uleb128 0x7
	.long	0xec6c
	.uleb128 0x6
	.long	0xf0b6
	.uleb128 0x4
	.long	0x1ee4d
	.uleb128 0x6
	.long	0x1044c
	.uleb128 0x4
	.long	0x1ee57
	.uleb128 0x1e
	.long	0x1044c
	.uleb128 0x7
	.long	0x1044c
	.uleb128 0x7
	.long	0x1e7e6
	.uleb128 0x6
	.long	0x1074c
	.uleb128 0x4
	.long	0x1ee70
	.uleb128 0x1e
	.long	0x1074c
	.uleb128 0x7
	.long	0x1074c
	.uleb128 0x6
	.long	0x10f26
	.uleb128 0x4
	.long	0x1ee84
	.uleb128 0x7
	.long	0x10a61
	.uleb128 0x7
	.long	0x10a6f
	.uleb128 0x7
	.long	0x10f26
	.uleb128 0x6
	.long	0x1e7d6
	.uleb128 0x4
	.long	0x1ee9d
	.uleb128 0x6
	.long	0x1e442
	.uleb128 0x1f
	.ascii "Camera\0"
	.byte	0x54
	.byte	0x10
	.word	0x172
	.byte	0x8
	.long	0x1f2cf
	.uleb128 0xd9
	.ascii "Camera\0"
	.byte	0x10
	.word	0x174
	.byte	0x2
	.ascii "_ZN6CameraC4Ev\0"
	.long	0x1eee1
	.long	0x1eee7
	.uleb128 0x2
	.long	0x1f2d4
	.byte	0
	.uleb128 0x5d
	.ascii "SetFOV\0"
	.byte	0x10
	.word	0x177
	.byte	0x7
	.ascii "_ZN6Camera6SetFOVEf\0"
	.long	0x1ef0f
	.long	0x1ef1a
	.uleb128 0x2
	.long	0x1f2d4
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x5d
	.ascii "SetPosition\0"
	.byte	0x10
	.word	0x17b
	.byte	0xa
	.ascii "_ZN6Camera11SetPositionE5Vec3D\0"
	.long	0x1ef52
	.long	0x1ef5d
	.uleb128 0x2
	.long	0x1f2d4
	.uleb128 0x1
	.long	0x1e68c
	.byte	0
	.uleb128 0x5d
	.ascii "Rotate\0"
	.byte	0x10
	.word	0x180
	.byte	0x11
	.ascii "_ZN6Camera6RotateEff\0"
	.long	0x1ef86
	.long	0x1ef96
	.uleb128 0x2
	.long	0x1f2d4
	.uleb128 0x1
	.long	0x4ec
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x5d
	.ascii "MoveForward\0"
	.byte	0x10
	.word	0x18c
	.byte	0xa
	.ascii "_ZN6Camera11MoveForwardEf\0"
	.long	0x1efc9
	.long	0x1efd4
	.uleb128 0x2
	.long	0x1f2d4
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x5d
	.ascii "MoveBack\0"
	.byte	0x10
	.word	0x191
	.byte	0x7
	.ascii "_ZN6Camera8MoveBackEf\0"
	.long	0x1f000
	.long	0x1f00b
	.uleb128 0x2
	.long	0x1f2d4
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x5d
	.ascii "MoveRight\0"
	.byte	0x10
	.word	0x196
	.byte	0xa
	.ascii "_ZN6Camera9MoveRightEf\0"
	.long	0x1f039
	.long	0x1f044
	.uleb128 0x2
	.long	0x1f2d4
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x5d
	.ascii "MoveLeft\0"
	.byte	0x10
	.word	0x19b
	.byte	0x7
	.ascii "_ZN6Camera8MoveLeftEf\0"
	.long	0x1f070
	.long	0x1f07b
	.uleb128 0x2
	.long	0x1f2d4
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x5d
	.ascii "MoveUp\0"
	.byte	0x10
	.word	0x1a0
	.byte	0xa
	.ascii "_ZN6Camera6MoveUpEf\0"
	.long	0x1f0a3
	.long	0x1f0ae
	.uleb128 0x2
	.long	0x1f2d4
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x5d
	.ascii "MoveDown\0"
	.byte	0x10
	.word	0x1a5
	.byte	0x7
	.ascii "_ZN6Camera8MoveDownEf\0"
	.long	0x1f0da
	.long	0x1f0e5
	.uleb128 0x2
	.long	0x1f2d4
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0x63
	.ascii "GetPosition\0"
	.byte	0x10
	.word	0x1aa
	.byte	0xb
	.ascii "_ZNK6Camera11GetPositionEv\0"
	.long	0x1e68c
	.long	0x1f11d
	.long	0x1f123
	.uleb128 0x2
	.long	0x1f2de
	.byte	0
	.uleb128 0x63
	.ascii "GenerateRayDirection\0"
	.byte	0x10
	.word	0x1ae
	.byte	0xb
	.ascii "_ZNK6Camera20GenerateRayDirectionEiiii\0"
	.long	0x1e68c
	.long	0x1f170
	.long	0x1f18a
	.uleb128 0x2
	.long	0x1f2de
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x143
	.ascii "UpdateBasis\0"
	.byte	0x10
	.word	0x1bf
	.byte	0x7
	.ascii "_ZN6Camera11UpdateBasisEv\0"
	.byte	0x3
	.long	0x1f1bf
	.long	0x1f1c5
	.uleb128 0x2
	.long	0x1f2d4
	.byte	0
	.uleb128 0xea
	.ascii "normalize\0"
	.word	0x1ce
	.ascii "_ZN6Camera9normalizeE5Vec3D\0"
	.long	0x1e68c
	.long	0x1f1fd
	.uleb128 0x1
	.long	0x1e68c
	.byte	0
	.uleb128 0xea
	.ascii "Cross\0"
	.word	0x1d3
	.ascii "_ZN6Camera5CrossE5Vec3DS0_\0"
	.long	0x1e68c
	.long	0x1f235
	.uleb128 0x1
	.long	0x1e68c
	.uleb128 0x1
	.long	0x1e68c
	.byte	0
	.uleb128 0x56
	.ascii "forward\0"
	.byte	0x10
	.word	0x1dd
	.byte	0x8
	.long	0x1e68c
	.byte	0
	.byte	0x2
	.uleb128 0xc0
	.secrel32	.LASF168
	.byte	0x10
	.word	0x1de
	.byte	0x8
	.long	0x1e68c
	.byte	0xc
	.byte	0x2
	.uleb128 0x56
	.ascii "up\0"
	.byte	0x10
	.word	0x1df
	.byte	0x8
	.long	0x1e68c
	.byte	0x18
	.byte	0x2
	.uleb128 0x56
	.ascii "position\0"
	.byte	0x10
	.word	0x1e0
	.byte	0x8
	.long	0x1e68c
	.byte	0x24
	.byte	0x2
	.uleb128 0x56
	.ascii "lookAt\0"
	.byte	0x10
	.word	0x1e2
	.byte	0x8
	.long	0x1e68c
	.byte	0x30
	.byte	0x2
	.uleb128 0x56
	.ascii "worldup\0"
	.byte	0x10
	.word	0x1e3
	.byte	0x8
	.long	0x1e68c
	.byte	0x3c
	.byte	0x2
	.uleb128 0x56
	.ascii "FOV\0"
	.byte	0x10
	.word	0x1e5
	.byte	0x8
	.long	0x4ec
	.byte	0x48
	.byte	0x2
	.uleb128 0x56
	.ascii "yaw\0"
	.byte	0x10
	.word	0x1e6
	.byte	0x8
	.long	0x4ec
	.byte	0x4c
	.byte	0x2
	.uleb128 0x56
	.ascii "pitch\0"
	.byte	0x10
	.word	0x1e7
	.byte	0x8
	.long	0x4ec
	.byte	0x50
	.byte	0x2
	.byte	0
	.uleb128 0x4
	.long	0x1eeac
	.uleb128 0x6
	.long	0x1eeac
	.uleb128 0x4
	.long	0x1f2d4
	.uleb128 0x6
	.long	0x1f2cf
	.uleb128 0x4
	.long	0x1f2de
	.uleb128 0x6
	.long	0x10fd9
	.uleb128 0x6
	.long	0x115ed
	.uleb128 0x4
	.long	0x1f2ed
	.uleb128 0x7
	.long	0x110ed
	.uleb128 0x7
	.long	0x118fd
	.uleb128 0x1e
	.long	0x115ed
	.uleb128 0x7
	.long	0x10fd9
	.uleb128 0x7
	.long	0x115ed
	.uleb128 0x7
	.long	0x11902
	.uleb128 0x7
	.long	0x11c4c
	.uleb128 0x6
	.long	0x11902
	.uleb128 0x4
	.long	0x1f31a
	.uleb128 0x1e
	.long	0x11902
	.uleb128 0x6
	.long	0x11c51
	.uleb128 0x4
	.long	0x1f329
	.uleb128 0x7
	.long	0x1bd3f
	.uleb128 0x7
	.long	0x11eb8
	.uleb128 0x1e
	.long	0x11c51
	.uleb128 0x7
	.long	0x1bd3a
	.uleb128 0x7
	.long	0x11c51
	.uleb128 0x7
	.long	0x11ebd
	.uleb128 0x7
	.long	0x1231e
	.uleb128 0x7
	.long	0x11fd8
	.uleb128 0x7
	.long	0x11fe5
	.uleb128 0x6
	.long	0x11ebd
	.uleb128 0x4
	.long	0x1f360
	.uleb128 0x1e
	.long	0x11ebd
	.uleb128 0x6
	.long	0x12323
	.uleb128 0x4
	.long	0x1f36f
	.uleb128 0x7
	.long	0x125ec
	.uleb128 0x1e
	.long	0x12323
	.uleb128 0x7
	.long	0x12323
	.uleb128 0x6
	.long	0x110f2
	.uleb128 0x4
	.long	0x1f388
	.uleb128 0x1e
	.long	0x110f2
	.uleb128 0x7
	.long	0x110f2
	.uleb128 0x7
	.long	0x11257
	.uleb128 0x6
	.long	0x115e8
	.uleb128 0x4
	.long	0x1f3a1
	.uleb128 0x6
	.long	0x12609
	.uleb128 0x4
	.long	0x1f3ab
	.uleb128 0x1e
	.long	0x12609
	.uleb128 0x7
	.long	0x12609
	.uleb128 0x6
	.long	0x12815
	.uleb128 0x4
	.long	0x1f3bf
	.uleb128 0x1e
	.long	0x12815
	.uleb128 0x7
	.long	0x12815
	.uleb128 0x6
	.long	0x12e21
	.uleb128 0x4
	.long	0x1f3d3
	.uleb128 0x7
	.long	0x12a94
	.uleb128 0x7
	.long	0x12aa2
	.uleb128 0x7
	.long	0x12e21
	.uleb128 0x6
	.long	0x12e26
	.uleb128 0x6
	.long	0x1336a
	.uleb128 0x4
	.long	0x1f3f1
	.uleb128 0x6
	.long	0x13575
	.uleb128 0x4
	.long	0x1f3fb
	.uleb128 0x7
	.long	0x12f3d
	.uleb128 0x7
	.long	0x136d6
	.uleb128 0x1e
	.long	0x13575
	.uleb128 0x7
	.long	0x12e26
	.uleb128 0x7
	.long	0x13575
	.uleb128 0x7
	.long	0x136db
	.uleb128 0x7
	.long	0x13852
	.uleb128 0x6
	.long	0x136db
	.uleb128 0x4
	.long	0x1f428
	.uleb128 0x1e
	.long	0x136db
	.uleb128 0x6
	.long	0x13857
	.uleb128 0x4
	.long	0x1f437
	.uleb128 0x7
	.long	0x1f3f6
	.uleb128 0x7
	.long	0x139a2
	.uleb128 0x1e
	.long	0x13857
	.uleb128 0x7
	.long	0x1f3f1
	.uleb128 0x7
	.long	0x13857
	.uleb128 0x7
	.long	0x139a7
	.uleb128 0x7
	.long	0x13bc5
	.uleb128 0x7
	.long	0x13ac1
	.uleb128 0x7
	.long	0x13ace
	.uleb128 0x6
	.long	0x139a7
	.uleb128 0x4
	.long	0x1f46e
	.uleb128 0x1e
	.long	0x139a7
	.uleb128 0x6
	.long	0x13bca
	.uleb128 0x4
	.long	0x1f47d
	.uleb128 0x7
	.long	0x13d6d
	.uleb128 0x1e
	.long	0x13bca
	.uleb128 0x7
	.long	0x13bca
	.uleb128 0x6
	.long	0x12fe5
	.uleb128 0x4
	.long	0x1f496
	.uleb128 0x1e
	.long	0x12fe5
	.uleb128 0x7
	.long	0x12fe5
	.uleb128 0x7
	.long	0x131f4
	.uleb128 0x6
	.long	0x13317
	.uleb128 0x4
	.long	0x1f4af
	.uleb128 0x6
	.long	0x13d8a
	.uleb128 0x4
	.long	0x1f4b9
	.uleb128 0x1e
	.long	0x13d8a
	.uleb128 0x7
	.long	0x13d8a
	.uleb128 0x7
	.long	0x1336a
	.uleb128 0x6
	.long	0x13f93
	.uleb128 0x4
	.long	0x1f4d2
	.uleb128 0x1e
	.long	0x13f93
	.uleb128 0x7
	.long	0x13f93
	.uleb128 0x6
	.long	0x14301
	.uleb128 0x4
	.long	0x1f4e6
	.uleb128 0x7
	.long	0x14145
	.uleb128 0x7
	.long	0x14153
	.uleb128 0x7
	.long	0x14301
	.uleb128 0x6b
	.long	0x13395
	.uleb128 0x6
	.long	0x262f0
	.uleb128 0x1e
	.long	0x262f0
	.uleb128 0x7
	.long	0x26329
	.uleb128 0x6
	.long	0x26329
	.uleb128 0x6
	.long	0x1331c
	.uleb128 0x4
	.long	0x1f518
	.uleb128 0x6
	.long	0x13570
	.uleb128 0x4
	.long	0x1f522
	.uleb128 0x1e
	.long	0x13485
	.uleb128 0x6
	.long	0x14306
	.uleb128 0x4
	.long	0x1f531
	.uleb128 0x7
	.long	0x14536
	.uleb128 0x7
	.long	0x14306
	.uleb128 0x6
	.long	0x14536
	.uleb128 0x4
	.long	0x1f545
	.uleb128 0x1e
	.long	0x143e8
	.uleb128 0x6
	.long	0x26556
	.uleb128 0xeb
	.long	0x6655
	.byte	0x1
	.long	0x1f56c
	.uleb128 0x8a
	.long	0xf1
	.byte	0xfe
	.byte	0
	.uleb128 0x7
	.long	0x1f559
	.uleb128 0x6
	.long	0x2661f
	.uleb128 0x6
	.long	0x2674c
	.uleb128 0x7
	.long	0x1eeac
	.uleb128 0x6
	.long	0x267b6
	.uleb128 0x6
	.long	0xa785
	.uleb128 0x4
	.long	0x1f585
	.uleb128 0x7
	.long	0xae6b
	.uleb128 0x7
	.long	0xa785
	.uleb128 0x6
	.long	0xae6b
	.uleb128 0x4
	.long	0x1f599
	.uleb128 0x7
	.long	0xa93d
	.uleb128 0x7
	.long	0x4f5
	.uleb128 0x77
	.long	0x1e7e6
	.long	0x1f5b9
	.uleb128 0xc5
	.byte	0
	.uleb128 0x77
	.long	0x79ab
	.long	0x1f5c5
	.uleb128 0xc5
	.byte	0
	.uleb128 0x77
	.long	0x1336a
	.long	0x1f5d1
	.uleb128 0xc5
	.byte	0
	.uleb128 0x6
	.long	0x14864
	.uleb128 0x4
	.long	0x1f5d1
	.uleb128 0x7
	.long	0x2661f
	.uleb128 0x7
	.long	0x14969
	.uleb128 0x1e
	.long	0x14864
	.uleb128 0x7
	.long	0x26556
	.uleb128 0x7
	.long	0x14864
	.uleb128 0x7
	.long	0x1496e
	.uleb128 0x7
	.long	0x14a8e
	.uleb128 0x6
	.long	0x1496e
	.uleb128 0x4
	.long	0x1f5fe
	.uleb128 0x1e
	.long	0x1496e
	.uleb128 0x6
	.long	0x14a93
	.uleb128 0x4
	.long	0x1f60d
	.uleb128 0x7
	.long	0x14b73
	.uleb128 0x1e
	.long	0x14a93
	.uleb128 0x7
	.long	0x14a93
	.uleb128 0x1e
	.long	0xeb3
	.uleb128 0x6
	.long	0x7df3
	.uleb128 0x4
	.long	0x1f62b
	.uleb128 0x6
	.long	0x14b90
	.uleb128 0x6
	.long	0x14c58
	.uleb128 0x4
	.long	0x1f63a
	.uleb128 0x6
	.long	0x7d7c
	.uleb128 0x4
	.long	0x1f644
	.uleb128 0x6
	.long	0x151bf
	.uleb128 0x4
	.long	0x1f64e
	.uleb128 0x7
	.long	0x14c58
	.uleb128 0x7
	.long	0x15505
	.uleb128 0x1e
	.long	0x151bf
	.uleb128 0x7
	.long	0x14b90
	.uleb128 0x7
	.long	0x151bf
	.uleb128 0x7
	.long	0x1550a
	.uleb128 0x7
	.long	0x15891
	.uleb128 0x6
	.long	0x1550a
	.uleb128 0x4
	.long	0x1f67b
	.uleb128 0x1e
	.long	0x1550a
	.uleb128 0x6
	.long	0x15896
	.uleb128 0x4
	.long	0x1f68a
	.uleb128 0x7
	.long	0x1f649
	.uleb128 0x7
	.long	0x15b44
	.uleb128 0x1e
	.long	0x15896
	.uleb128 0x7
	.long	0x1f644
	.uleb128 0x7
	.long	0x15896
	.uleb128 0x7
	.long	0x15b49
	.uleb128 0x7
	.long	0x15ffd
	.uleb128 0x7
	.long	0x15c7f
	.uleb128 0x7
	.long	0x15c8c
	.uleb128 0x6
	.long	0x15b49
	.uleb128 0x4
	.long	0x1f6c1
	.uleb128 0x1e
	.long	0x15b49
	.uleb128 0x6
	.long	0x16002
	.uleb128 0x4
	.long	0x1f6d0
	.uleb128 0x7
	.long	0x16309
	.uleb128 0x1e
	.long	0x16002
	.uleb128 0x7
	.long	0x16002
	.uleb128 0x6
	.long	0x14c5d
	.uleb128 0x4
	.long	0x1f6e9
	.uleb128 0x1e
	.long	0x14c5d
	.uleb128 0x7
	.long	0x14c5d
	.uleb128 0x7
	.long	0x14dea
	.uleb128 0x6
	.long	0x151ba
	.uleb128 0x6
	.long	0x16326
	.uleb128 0x4
	.long	0x1f707
	.uleb128 0x1e
	.long	0x16326
	.uleb128 0x7
	.long	0x16326
	.uleb128 0x7
	.long	0x7d7c
	.uleb128 0x6
	.long	0x80b5
	.uleb128 0x4
	.long	0x1f720
	.uleb128 0x1e
	.long	0x80b5
	.uleb128 0x7
	.long	0x80b5
	.uleb128 0x6
	.long	0x8778
	.uleb128 0x7
	.long	0x83c6
	.uleb128 0x7
	.long	0x83d4
	.uleb128 0x7
	.long	0x8778
	.uleb128 0x6
	.long	0x1655c
	.uleb128 0x4
	.long	0x1f748
	.uleb128 0x7
	.long	0x267b6
	.uleb128 0x7
	.long	0x16661
	.uleb128 0x1e
	.long	0x1655c
	.uleb128 0x7
	.long	0x2674c
	.uleb128 0x7
	.long	0x1655c
	.uleb128 0x7
	.long	0x16666
	.uleb128 0x7
	.long	0x16786
	.uleb128 0x6
	.long	0x16666
	.uleb128 0x4
	.long	0x1f775
	.uleb128 0x1e
	.long	0x16666
	.uleb128 0x6
	.long	0x1678b
	.uleb128 0x4
	.long	0x1f784
	.uleb128 0x7
	.long	0x1686b
	.uleb128 0x1e
	.long	0x1678b
	.uleb128 0x7
	.long	0x1678b
	.uleb128 0x6
	.long	0x7e5d
	.uleb128 0x4
	.long	0x1f79d
	.uleb128 0x6
	.long	0x143e8
	.uleb128 0x4
	.long	0x1f7a7
	.uleb128 0x7
	.long	0x143e8
	.uleb128 0x6
	.long	0x7ec7
	.uleb128 0x4
	.long	0x1f7b6
	.uleb128 0x1e
	.long	0x7ec7
	.uleb128 0x7
	.long	0x7f8d
	.uleb128 0x6
	.long	0x7f92
	.uleb128 0x4
	.long	0x1f7ca
	.uleb128 0x1e
	.long	0x7f92
	.uleb128 0x7
	.long	0x8058
	.uleb128 0x91
	.ascii "sched_yield\0"
	.byte	0x49
	.byte	0xea
	.byte	0x14
	.long	0x184
	.uleb128 0xf
	.ascii "pthread_mutex_unlock\0"
	.byte	0x49
	.word	0x14c
	.byte	0x14
	.long	0x184
	.long	0x1f81b
	.uleb128 0x1
	.long	0x1f81b
	.byte	0
	.uleb128 0x6
	.long	0x1b5d0
	.uleb128 0xf
	.ascii "pthread_cond_wait\0"
	.byte	0x49
	.word	0x146
	.byte	0x14
	.long	0x184
	.long	0x1f84a
	.uleb128 0x1
	.long	0x1f84a
	.uleb128 0x1
	.long	0x1f81b
	.byte	0
	.uleb128 0x6
	.long	0x1b5e9
	.uleb128 0xf
	.ascii "pthread_mutex_lock\0"
	.byte	0x49
	.word	0x14a
	.byte	0x14
	.long	0x184
	.long	0x1f875
	.uleb128 0x1
	.long	0x1f81b
	.byte	0
	.uleb128 0xf
	.ascii "tanf\0"
	.byte	0x42
	.word	0x299
	.byte	0x18
	.long	0x4ec
	.long	0x1f88d
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0xc6
	.secrel32	.LASF206
	.byte	0x89
	.ascii "_ZdaPvy\0"
	.long	0x1f8ab
	.uleb128 0x1
	.long	0x4b0
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0x71
	.ascii "free\0"
	.byte	0x21
	.word	0x219
	.byte	0x10
	.long	0x1f8bf
	.uleb128 0x1
	.long	0x4b0
	.byte	0
	.uleb128 0x31
	.ascii "sqrt\0"
	.byte	0x42
	.byte	0xc0
	.byte	0x12
	.long	0x77c
	.long	0x1f8d6
	.uleb128 0x1
	.long	0x77c
	.byte	0
	.uleb128 0xf
	.ascii "sinf\0"
	.byte	0x42
	.word	0x293
	.byte	0x18
	.long	0x4ec
	.long	0x1f8ee
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0xf
	.ascii "cosf\0"
	.byte	0x42
	.word	0x296
	.byte	0x18
	.long	0x4ec
	.long	0x1f906
	.uleb128 0x1
	.long	0x4ec
	.byte	0
	.uleb128 0xec
	.long	0x7d89
	.ascii "_ZNSt6thread6_StateD2Ev\0"
	.long	0x1f92c
	.long	0x1f936
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f649
	.byte	0
	.uleb128 0x91
	.ascii "_errno\0"
	.byte	0x51
	.byte	0x12
	.byte	0x1f
	.long	0x1dd
	.uleb128 0x31
	.ascii "nanosleep\0"
	.byte	0x52
	.byte	0x58
	.byte	0x1c
	.long	0x184
	.long	0x1f967
	.uleb128 0x1
	.long	0x1f967
	.uleb128 0x1
	.long	0x1f96c
	.byte	0
	.uleb128 0x6
	.long	0x1b588
	.uleb128 0x6
	.long	0x1b559
	.uleb128 0xf
	.ascii "pthread_cond_signal\0"
	.byte	0x49
	.word	0x144
	.byte	0x14
	.long	0x184
	.long	0x1f998
	.uleb128 0x1
	.long	0x1f84a
	.byte	0
	.uleb128 0xf
	.ascii "pthread_cond_broadcast\0"
	.byte	0x49
	.word	0x145
	.byte	0x14
	.long	0x184
	.long	0x1f9c2
	.uleb128 0x1
	.long	0x1f84a
	.byte	0
	.uleb128 0xf
	.ascii "pthread_mutex_init\0"
	.byte	0x49
	.word	0x14e
	.byte	0x14
	.long	0x184
	.long	0x1f9ed
	.uleb128 0x1
	.long	0x1f81b
	.uleb128 0x1
	.long	0x1f9ed
	.byte	0
	.uleb128 0x6
	.long	0x1b5b9
	.uleb128 0xf
	.ascii "pthread_mutex_destroy\0"
	.byte	0x49
	.word	0x14f
	.byte	0x14
	.long	0x184
	.long	0x1fa1b
	.uleb128 0x1
	.long	0x1f81b
	.byte	0
	.uleb128 0xf
	.ascii "pthread_cond_destroy\0"
	.byte	0x49
	.word	0x143
	.byte	0x14
	.long	0x184
	.long	0x1fa43
	.uleb128 0x1
	.long	0x1f84a
	.byte	0
	.uleb128 0x144
	.ascii "__cxa_guard_release\0"
	.long	0x1fa63
	.uleb128 0x1
	.long	0x555
	.byte	0
	.uleb128 0x145
	.ascii "__cxa_guard_acquire\0"
	.long	0x184
	.long	0x1fa87
	.uleb128 0x1
	.long	0x555
	.byte	0
	.uleb128 0xf
	.ascii "InvalidateRect\0"
	.byte	0x40
	.word	0xde5
	.byte	0x1d
	.long	0x4b3
	.long	0x1fab3
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x19f3f
	.uleb128 0x1
	.long	0x4b3
	.byte	0
	.uleb128 0xc6
	.secrel32	.LASF206
	.byte	0xa1
	.ascii "_ZdaPvSt11align_val_t\0"
	.long	0x1fadf
	.uleb128 0x1
	.long	0x4b0
	.uleb128 0x1
	.long	0x20a2
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF207
	.byte	0x5
	.byte	0x9d
	.byte	0x1a
	.ascii "_ZnaySt11align_val_t\0"
	.long	0x4b0
	.long	0x1fb0f
	.uleb128 0x1
	.long	0xe3f
	.uleb128 0x1
	.long	0x20a2
	.byte	0
	.uleb128 0x85
	.ascii "pthread_self\0"
	.byte	0x49
	.word	0x120
	.byte	0x1a
	.long	0x1b5be
	.uleb128 0xf
	.ascii "PeekMessageW\0"
	.byte	0x40
	.word	0x7b6
	.byte	0x1d
	.long	0x4b3
	.long	0x1fb5a
	.uleb128 0x1
	.long	0x1a24d
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x52c
	.uleb128 0x1
	.long	0x52c
	.uleb128 0x1
	.long	0x52c
	.byte	0
	.uleb128 0xf
	.ascii "DispatchMessageW\0"
	.byte	0x40
	.word	0x7b3
	.byte	0x1d
	.long	0x19d7f
	.long	0x1fb7e
	.uleb128 0x1
	.long	0x1fb7e
	.byte	0
	.uleb128 0x6
	.long	0x1a243
	.uleb128 0xf
	.ascii "TranslateMessage\0"
	.byte	0x40
	.word	0x7b1
	.byte	0x1d
	.long	0x4b3
	.long	0x1fba7
	.uleb128 0x1
	.long	0x1fb7e
	.byte	0
	.uleb128 0xf
	.ascii "GetAsyncKeyState\0"
	.byte	0x40
	.word	0xa15
	.byte	0x1b
	.long	0x5c2
	.long	0x1fbcb
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "round\0"
	.byte	0x42
	.word	0x405
	.byte	0x19
	.long	0x77c
	.long	0x1fbe4
	.uleb128 0x1
	.long	0x77c
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF208
	.byte	0x5
	.byte	0x7e
	.byte	0x1a
	.ascii "_Znwy\0"
	.long	0x4b0
	.long	0x1fc00
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0xf
	.ascii "UpdateWindow\0"
	.byte	0x40
	.word	0xdac
	.byte	0x1d
	.long	0x4b3
	.long	0x1fc20
	.uleb128 0x1
	.long	0x19e13
	.byte	0
	.uleb128 0xf
	.ascii "ShowWindow\0"
	.byte	0x40
	.word	0x8a5
	.byte	0x1d
	.long	0x4b3
	.long	0x1fc43
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "LocalFree\0"
	.byte	0x53
	.word	0x467
	.byte	0x1c
	.long	0x19d8f
	.long	0x1fc60
	.uleb128 0x1
	.long	0x19d8f
	.byte	0
	.uleb128 0xf
	.ascii "FormatMessageW\0"
	.byte	0x53
	.word	0x5a1
	.byte	0x1b
	.long	0x4d0
	.long	0x1fca0
	.uleb128 0x1
	.long	0x4d0
	.uleb128 0x1
	.long	0x509
	.uleb128 0x1
	.long	0x4d0
	.uleb128 0x1
	.long	0x4d0
	.uleb128 0x1
	.long	0x5fd
	.uleb128 0x1
	.long	0x4d0
	.uleb128 0x1
	.long	0x1fca0
	.byte	0
	.uleb128 0x6
	.long	0xd2
	.uleb128 0x91
	.ascii "GetLastError\0"
	.byte	0x54
	.byte	0x30
	.byte	0x1b
	.long	0x4d0
	.uleb128 0xf
	.ascii "CreateWindowExW\0"
	.byte	0x40
	.word	0x89c
	.byte	0x1a
	.long	0x19e13
	.long	0x1fd15
	.uleb128 0x1
	.long	0x4d0
	.uleb128 0x1
	.long	0x60d
	.uleb128 0x1
	.long	0x60d
	.uleb128 0x1
	.long	0x4d0
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x19eaf
	.uleb128 0x1
	.long	0x19dce
	.uleb128 0x1
	.long	0x4fa
	.byte	0
	.uleb128 0xf
	.ascii "RegisterClassExW\0"
	.byte	0x40
	.word	0x86c
	.byte	0x1a
	.long	0x19d9e
	.long	0x1fd39
	.uleb128 0x1
	.long	0x1fd39
	.byte	0
	.uleb128 0x6
	.long	0x1a1ad
	.uleb128 0xf
	.ascii "LoadCursorW\0"
	.byte	0x40
	.word	0x1012
	.byte	0x1d
	.long	0x19ec2
	.long	0x1fd62
	.uleb128 0x1
	.long	0x19dce
	.uleb128 0x1
	.long	0x60d
	.byte	0
	.uleb128 0x31
	.ascii "GetModuleHandleW\0"
	.byte	0x55
	.byte	0x8c
	.byte	0x1b
	.long	0x19de5
	.long	0x1fd85
	.uleb128 0x1
	.long	0x60d
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF207
	.byte	0x5
	.byte	0x80
	.byte	0x1a
	.ascii "_Znay\0"
	.long	0x4b0
	.long	0x1fda1
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0x146
	.ascii "__cxa_throw_bad_array_new_length\0"
	.long	0xf1
	.uleb128 0x31
	.ascii "MultiByteToWideChar\0"
	.byte	0x56
	.byte	0x29
	.byte	0x19
	.long	0x184
	.long	0x1fe07
	.uleb128 0x1
	.long	0x52c
	.uleb128 0x1
	.long	0x4d0
	.uleb128 0x1
	.long	0x623
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x5fd
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0x31
	.ascii "__mingw_vfprintf\0"
	.byte	0x2
	.byte	0xc1
	.byte	0xf
	.long	0x184
	.long	0x1fe34
	.uleb128 0x1
	.long	0x1a35c
	.uleb128 0x1
	.long	0x19808
	.uleb128 0x1
	.long	0xd2
	.byte	0
	.uleb128 0x31
	.ascii "__acrt_iob_func\0"
	.byte	0x44
	.byte	0x38
	.byte	0x17
	.long	0x1a35c
	.long	0x1fe56
	.uleb128 0x1
	.long	0x1e2
	.byte	0
	.uleb128 0xf
	.ascii "vswprintf_s\0"
	.byte	0x16
	.word	0x319
	.byte	0xf
	.long	0x184
	.long	0x1fe84
	.uleb128 0x1
	.long	0x1c8
	.uleb128 0x1
	.long	0xe2
	.uleb128 0x1
	.long	0x78d
	.uleb128 0x1
	.long	0xd2
	.byte	0
	.uleb128 0x147
	.secrel32	.LASF209
	.byte	0xf
	.word	0x9ac
	.byte	0x10
	.long	0x666
	.long	0x1feab
	.uleb128 0x1
	.long	0x1cf9f
	.uleb128 0x1
	.long	0x1a28e
	.uleb128 0x1
	.long	0x1feab
	.uleb128 0x1
	.long	0x1a289
	.byte	0
	.uleb128 0x6
	.long	0x1d555
	.uleb128 0xc6
	.secrel32	.LASF206
	.byte	0x84
	.ascii "_ZdaPv\0"
	.long	0x1fec8
	.uleb128 0x1
	.long	0x4b0
	.byte	0
	.uleb128 0x71
	.ascii "PostQuitMessage\0"
	.byte	0x40
	.word	0x860
	.byte	0x1a
	.long	0x1fee7
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "ValidateRect\0"
	.byte	0x40
	.word	0xde6
	.byte	0x1d
	.long	0x4b3
	.long	0x1ff0c
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x19f3f
	.byte	0
	.uleb128 0xf
	.ascii "DefWindowProcW\0"
	.byte	0x40
	.word	0x85f
	.byte	0x1d
	.long	0x19d7f
	.long	0x1ff3d
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x52c
	.uleb128 0x1
	.long	0x19d61
	.uleb128 0x1
	.long	0x19d70
	.byte	0
	.uleb128 0xf
	.ascii "malloc\0"
	.byte	0x21
	.word	0x21a
	.byte	0x11
	.long	0x4b0
	.long	0x1ff57
	.uleb128 0x1
	.long	0xe2
	.byte	0
	.uleb128 0xf
	.ascii "GetClientRect\0"
	.byte	0x40
	.word	0xe39
	.byte	0x1d
	.long	0x4b3
	.long	0x1ff7d
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x19f30
	.byte	0
	.uleb128 0xf
	.ascii "MessageBoxW\0"
	.byte	0x40
	.word	0xe83
	.byte	0x19
	.long	0x184
	.long	0x1ffab
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x60d
	.uleb128 0x1
	.long	0x60d
	.uleb128 0x1
	.long	0x52c
	.byte	0
	.uleb128 0x90
	.ascii "operator delete\0"
	.byte	0x5
	.byte	0x87
	.byte	0x6
	.ascii "_ZdlPvy\0"
	.long	0x1ffd7
	.uleb128 0x1
	.long	0x4b0
	.uleb128 0x1
	.long	0xe3f
	.byte	0
	.uleb128 0xf
	.ascii "GetWindowLongPtrW\0"
	.byte	0x40
	.word	0xf34
	.byte	0x1e
	.long	0x57a
	.long	0x20001
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x184
	.byte	0
	.uleb128 0xf
	.ascii "SetWindowLongPtrW\0"
	.byte	0x40
	.word	0xf36
	.byte	0x1e
	.long	0x57a
	.long	0x20030
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x184
	.uleb128 0x1
	.long	0x57a
	.byte	0
	.uleb128 0x29
	.long	0x148f8
	.quad	.LFB12470
	.quad	.LFE12470-.LFB12470
	.uleb128 0x1
	.byte	0x9c
	.long	0x2005b
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0xe9
	.byte	0x1b
	.long	0x1f5ef
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0x165f0
	.quad	.LFB12469
	.quad	.LFE12469-.LFB12469
	.uleb128 0x1
	.byte	0x9c
	.long	0x20086
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0xe9
	.byte	0x1b
	.long	0x1f766
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x14982
	.quad	.LFB12468
	.quad	.LFE12468-.LFB12468
	.uleb128 0x1
	.byte	0x9c
	.long	0x200b2
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x1a8
	.byte	0x1c
	.long	0x1f5f4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x1667a
	.quad	.LFB12467
	.quad	.LFE12467-.LFB12467
	.uleb128 0x1
	.byte	0x9c
	.long	0x200de
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x1a8
	.byte	0x1c
	.long	0x1f76b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x1766b
	.quad	.LFB12466
	.quad	.LFE12466-.LFB12466
	.uleb128 0x1
	.byte	0x9c
	.long	0x2012a
	.uleb128 0xa1
	.ascii "_Res\0"
	.uleb128 0xa
	.ascii "_Fn\0"
	.long	0x26556
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x57
	.long	0xe54
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__f\0"
	.byte	0x19
	.byte	0x3c
	.byte	0x29
	.long	0x17695
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x73
	.byte	0x19
	.byte	0x3c
	.byte	0x35
	.byte	0
	.uleb128 0x17
	.long	0x1769b
	.quad	.LFB12465
	.quad	.LFE12465-.LFB12465
	.uleb128 0x1
	.byte	0x9c
	.long	0x2016e
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x26556
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x554
	.byte	0x35
	.long	0x1f5f4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x176c9
	.quad	.LFB12464
	.quad	.LFE12464-.LFB12464
	.uleb128 0x1
	.byte	0x9c
	.long	0x201ba
	.uleb128 0xa1
	.ascii "_Res\0"
	.uleb128 0xa
	.ascii "_Fn\0"
	.long	0x2674c
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x57
	.long	0xe54
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__f\0"
	.byte	0x19
	.byte	0x3c
	.byte	0x29
	.long	0x176f3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x73
	.byte	0x19
	.byte	0x3c
	.byte	0x35
	.byte	0
	.uleb128 0x17
	.long	0x176f9
	.quad	.LFB12463
	.quad	.LFE12463-.LFB12463
	.uleb128 0x1
	.byte	0x9c
	.long	0x201fe
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x2674c
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x554
	.byte	0x35
	.long	0x1f76b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x17727
	.quad	.LFB12462
	.quad	.LFE12462-.LFB12462
	.uleb128 0x1
	.byte	0x9c
	.long	0x2023c
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x26556
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x18
	.ascii "__fn\0"
	.byte	0x19
	.byte	0x5a
	.byte	0x1a
	.long	0x17695
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x73
	.byte	0x19
	.byte	0x5a
	.byte	0x27
	.byte	0
	.uleb128 0x1e
	.long	0x17746
	.uleb128 0x17
	.long	0x17752
	.quad	.LFB12461
	.quad	.LFE12461-.LFB12461
	.uleb128 0x1
	.byte	0x9c
	.long	0x20286
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x20275
	.uleb128 0x10
	.long	0x26556
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x570
	.byte	0x1f
	.long	0x1f61c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1e
	.long	0x1756a
	.uleb128 0x29
	.long	0x17781
	.quad	.LFB12460
	.quad	.LFE12460-.LFB12460
	.uleb128 0x1
	.byte	0x9c
	.long	0x202bf
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f621
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x14
	.byte	0x68
	.byte	0x10
	.long	0x1f621
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x177a0
	.quad	.LFB12459
	.quad	.LFE12459-.LFB12459
	.uleb128 0x1
	.byte	0x9c
	.long	0x202fd
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x2674c
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x18
	.ascii "__fn\0"
	.byte	0x19
	.byte	0x5a
	.byte	0x1a
	.long	0x176f3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x73
	.byte	0x19
	.byte	0x5a
	.byte	0x27
	.byte	0
	.uleb128 0x1e
	.long	0x177bf
	.uleb128 0x17
	.long	0x177cb
	.quad	.LFB12458
	.quad	.LFE12458-.LFB12458
	.uleb128 0x1
	.byte	0x9c
	.long	0x20347
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x20336
	.uleb128 0x10
	.long	0x2674c
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x570
	.byte	0x1f
	.long	0x1f793
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1e
	.long	0x174e7
	.uleb128 0x29
	.long	0x177fa
	.quad	.LFB12457
	.quad	.LFE12457-.LFB12457
	.uleb128 0x1
	.byte	0x9c
	.long	0x20380
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f798
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x14
	.byte	0x68
	.byte	0x10
	.long	0x1f798
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x7e23
	.long	0x203b1
	.quad	.LFB12455
	.quad	.LFE12455-.LFB12455
	.uleb128 0x1
	.byte	0x9c
	.long	0x203c6
	.uleb128 0x9a
	.ascii "_Ind\0"
	.long	0x203b1
	.uleb128 0x8e
	.long	0xf1
	.byte	0
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f630
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x57
	.long	0x174aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x7e8d
	.long	0x203f7
	.quad	.LFB12453
	.quad	.LFE12453-.LFB12453
	.uleb128 0x1
	.byte	0x9c
	.long	0x2040c
	.uleb128 0x9a
	.ascii "_Ind\0"
	.long	0x203f7
	.uleb128 0x8e
	.long	0xf1
	.byte	0
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f7a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x57
	.long	0x174aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x7e0d
	.long	0x2042b
	.quad	.LFB12452
	.quad	.LFE12452-.LFB12452
	.uleb128 0x1
	.byte	0x9c
	.long	0x20438
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f630
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x7e77
	.long	0x20457
	.quad	.LFB12451
	.quad	.LFE12451-.LFB12451
	.uleb128 0x1
	.byte	0x9c
	.long	0x20464
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f7a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x7fe8
	.long	0x20483
	.quad	.LFB12450
	.quad	.LFE12450-.LFB12450
	.uleb128 0x1
	.byte	0x9c
	.long	0x20490
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f7cf
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x7f1d
	.long	0x204af
	.quad	.LFB12449
	.quad	.LFE12449-.LFB12449
	.uleb128 0x1
	.byte	0x9c
	.long	0x204bc
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f7bb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x58
	.long	0x8007
	.byte	0xd
	.byte	0xc8
	.byte	0xe
	.long	0x204cc
	.long	0x204df
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f7cf
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x32
	.long	0x204bc
	.long	0x204fe
	.quad	.LFB12432
	.quad	.LFE12432-.LFB12432
	.uleb128 0x1
	.byte	0x9c
	.long	0x20507
	.uleb128 0x8
	.long	0x204cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x32
	.long	0x204bc
	.long	0x20526
	.quad	.LFB12430
	.quad	.LFE12430-.LFB12430
	.uleb128 0x1
	.byte	0x9c
	.long	0x2052f
	.uleb128 0x8
	.long	0x204cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x58
	.long	0x7f3c
	.byte	0xd
	.byte	0xc8
	.byte	0xe
	.long	0x2053f
	.long	0x20552
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f7bb
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x32
	.long	0x2052f
	.long	0x20571
	.quad	.LFB12428
	.quad	.LFE12428-.LFB12428
	.uleb128 0x1
	.byte	0x9c
	.long	0x2057a
	.uleb128 0x8
	.long	0x2053f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x32
	.long	0x2052f
	.long	0x20599
	.quad	.LFB12426
	.quad	.LFE12426-.LFB12426
	.uleb128 0x1
	.byte	0x9c
	.long	0x205a2
	.uleb128 0x8
	.long	0x2053f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0x1396b
	.quad	.LFB12424
	.quad	.LFE12424-.LFB12424
	.uleb128 0x1
	.byte	0x9c
	.long	0x205cd
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0xec
	.byte	0x21
	.long	0x1f446
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x13aab
	.quad	.LFB12423
	.quad	.LFE12423-.LFB12423
	.uleb128 0x1
	.byte	0x9c
	.long	0x205f9
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x10f
	.byte	0x22
	.long	0x1f45f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x17819
	.quad	.LFB12422
	.quad	.LFE12422-.LFB12422
	.uleb128 0x1
	.byte	0x9c
	.long	0x20647
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1f3f1
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x20636
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x559
	.byte	0x3b
	.long	0x1f45f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x1785d
	.uleb128 0x17
	.long	0x17862
	.quad	.LFB12421
	.quad	.LFE12421-.LFB12421
	.uleb128 0x1
	.byte	0x9c
	.long	0x20696
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x20685
	.uleb128 0x10
	.long	0x1f3f1
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x56a
	.byte	0x24
	.long	0x1f487
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x1ef7
	.quad	.LFB12420
	.quad	.LFE12420-.LFB12420
	.uleb128 0x1
	.byte	0x9c
	.long	0x20703
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x2232b
	.uleb128 0x3
	.secrel32	.LASF17
	.long	0x1370
	.uleb128 0x4a
	.secrel32	.LASF212
	.byte	0xa
	.byte	0x9e
	.byte	0x1c
	.long	0x1fc5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF213
	.byte	0xa
	.byte	0x9e
	.byte	0x2a
	.long	0x1370
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x34
	.quad	.LBB323
	.quad	.LBE323-.LBB323
	.uleb128 0x27
	.ascii "__i\0"
	.byte	0xa
	.byte	0xa0
	.byte	0xc
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	0x15419
	.quad	.LFB12419
	.quad	.LFE12419-.LFB12419
	.uleb128 0x1
	.byte	0x9c
	.long	0x2072e
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0x7c
	.byte	0x1b
	.long	0x1f66c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1dea
	.long	0x20745
	.byte	0x2
	.long	0x2075c
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b7cd
	.uleb128 0x53
	.secrel32	.LASF214
	.byte	0xa
	.word	0x173
	.byte	0x21
	.long	0x1e39a
	.byte	0
	.uleb128 0x21
	.long	0x2072e
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_\0"
	.long	0x207d8
	.quad	.LFB12418
	.quad	.LFE12418-.LFB12418
	.uleb128 0x1
	.byte	0x9c
	.long	0x207e9
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x8
	.long	0x20745
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2074e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7
	.long	0x1798e
	.uleb128 0x6c
	.long	0x178ae
	.long	0x20842
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x53
	.secrel32	.LASF215
	.byte	0xb
	.word	0x3e7
	.byte	0x24
	.long	0x1e334
	.uleb128 0x53
	.secrel32	.LASF216
	.byte	0xb
	.word	0x3e7
	.byte	0x36
	.long	0x207e9
	.uleb128 0x53
	.secrel32	.LASF217
	.byte	0xb
	.word	0x3e8
	.byte	0x14
	.long	0x1798e
	.uleb128 0x53
	.secrel32	.LASF218
	.byte	0xb
	.word	0x3e8
	.byte	0x2c
	.long	0x3a08
	.uleb128 0x53
	.secrel32	.LASF219
	.byte	0xb
	.word	0x3e9
	.byte	0x17
	.long	0x3a08
	.byte	0
	.uleb128 0x14
	.long	0x13259
	.long	0x20861
	.quad	.LFB12414
	.quad	.LFE12414-.LFB12414
	.uleb128 0x1
	.byte	0x9c
	.long	0x2086e
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f4b4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x1694
	.uleb128 0x17
	.long	0x18b6
	.quad	.LFB12413
	.quad	.LFE12413-.LFB12413
	.uleb128 0x1
	.byte	0x9c
	.long	0x208e1
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x2232b
	.uleb128 0x3
	.secrel32	.LASF17
	.long	0x1370
	.uleb128 0x1c
	.secrel32	.LASF214
	.byte	0xa
	.word	0x15c
	.byte	0x28
	.long	0x1b773
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF212
	.byte	0xa
	.word	0x15d
	.byte	0xe
	.long	0x2232b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1c
	.secrel32	.LASF220
	.byte	0xa
	.word	0x15e
	.byte	0x1b
	.long	0x2086e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1c
	.secrel32	.LASF213
	.byte	0xa
	.word	0x15f
	.byte	0xe
	.long	0x1370
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x29
	.long	0x1991
	.quad	.LFB12412
	.quad	.LFE12412-.LFB12412
	.uleb128 0x1
	.byte	0x9c
	.long	0x20926
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0xcf6e
	.uleb128 0x11
	.ascii "__a\0"
	.byte	0xa
	.word	0x116
	.byte	0x1c
	.long	0x1e39a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__b\0"
	.byte	0xa
	.word	0x116
	.byte	0x34
	.long	0x1b7a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x15554
	.quad	.LFB12411
	.quad	.LFE12411-.LFB12411
	.uleb128 0x1
	.byte	0x9c
	.long	0x20952
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x1a8
	.byte	0x1c
	.long	0x1f671
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0x15a7e
	.quad	.LFB12410
	.quad	.LFE12410-.LFB12410
	.uleb128 0x1
	.byte	0x9c
	.long	0x2097d
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0xe9
	.byte	0x1b
	.long	0x1f6a8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x15206
	.long	0x2098b
	.byte	0x2
	.long	0x20995
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f653
	.byte	0
	.uleb128 0x42
	.long	0x2097d
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev\0"
	.long	0x209fa
	.quad	.LFB12408
	.quad	.LFE12408-.LFB12408
	.uleb128 0x1
	.byte	0x9c
	.long	0x20a03
	.uleb128 0x8
	.long	0x2098b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x17b78
	.quad	.LFB12406
	.quad	.LFE12406-.LFB12406
	.uleb128 0x1
	.byte	0x9c
	.long	0x20a5a
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x1c
	.secrel32	.LASF214
	.byte	0xa
	.word	0x1c9
	.byte	0x28
	.long	0x1e39a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__all\0"
	.byte	0xa
	.word	0x1c9
	.byte	0x35
	.long	0x1ab64
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x12
	.ascii "__w\0"
	.byte	0xa
	.word	0x1cb
	.byte	0x1d
	.long	0x1fd0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x14
	.long	0xd3e2
	.long	0x20a79
	.quad	.LFB12405
	.quad	.LFE12405-.LFB12405
	.uleb128 0x1
	.byte	0x9c
	.long	0x20b08
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1e32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF216
	.byte	0xb
	.word	0x58c
	.byte	0x24
	.long	0x1e325
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1c
	.secrel32	.LASF217
	.byte	0xb
	.word	0x58c
	.byte	0x34
	.long	0xcf6e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1c
	.secrel32	.LASF218
	.byte	0xb
	.word	0x58d
	.byte	0x15
	.long	0x3a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1c
	.secrel32	.LASF219
	.byte	0xb
	.word	0x58e
	.byte	0x15
	.long	0x3a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x68
	.long	0x207ee
	.quad	.LBB320
	.quad	.LBE320-.LBB320
	.byte	0xb
	.word	0x590
	.byte	0x2f
	.uleb128 0x8
	.long	0x20834
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x8
	.long	0x20827
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x8
	.long	0x2081a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -57
	.uleb128 0x8
	.long	0x2080d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x8
	.long	0x20800
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	0xd708
	.quad	.LFB12404
	.quad	.LFE12404-.LFB12404
	.uleb128 0x1
	.byte	0x9c
	.long	0x20b42
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x18
	.byte	0x3c
	.byte	0x1b
	.long	0x1e339
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__n\0"
	.byte	0x18
	.byte	0x3c
	.byte	0x2c
	.long	0xe3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x14128
	.long	0x20b61
	.quad	.LFB12403
	.quad	.LFE12403-.LFB12403
	.uleb128 0x1
	.byte	0x9c
	.long	0x20b6e
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f4eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x1a39
	.long	0x20b9f
	.quad	.LFB12402
	.quad	.LFE12402-.LFB12402
	.uleb128 0x1
	.byte	0x9c
	.long	0x20bdc
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x2232b
	.uleb128 0x5e
	.secrel32	.LASF17
	.long	0x1370
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b7b9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF212
	.byte	0xa
	.word	0x168
	.byte	0x15
	.long	0x2232b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1c
	.secrel32	.LASF220
	.byte	0xa
	.word	0x168
	.byte	0x30
	.long	0x2086e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1c
	.secrel32	.LASF213
	.byte	0xa
	.word	0x169
	.byte	0xe
	.long	0x1370
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x15
	.long	0x1af4
	.long	0x20bf3
	.byte	0x2
	.long	0x20c0a
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0xcf6e
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b7b9
	.uleb128 0x53
	.secrel32	.LASF214
	.byte	0xa
	.word	0x127
	.byte	0x26
	.long	0x1e39a
	.byte	0
	.uleb128 0x21
	.long	0x20bdc
	.ascii "_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_\0"
	.long	0x20c83
	.quad	.LFB12400
	.quad	.LFE12400-.LFB12400
	.uleb128 0x1
	.byte	0x9c
	.long	0x20c94
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0xcf6e
	.uleb128 0x8
	.long	0x20bf3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x20bfc
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x29
	.long	0x11e4d
	.quad	.LFB12398
	.quad	.LFE12398-.LFB12398
	.uleb128 0x1
	.byte	0x9c
	.long	0x20cbf
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0xec
	.byte	0x21
	.long	0x1f338
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0x13689
	.quad	.LFB12397
	.quad	.LFE12397-.LFB12397
	.uleb128 0x1
	.byte	0x9c
	.long	0x20cea
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0x7c
	.byte	0x1b
	.long	0x1f419
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x13602
	.long	0x20cf8
	.byte	0x2
	.long	0x20d02
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f400
	.byte	0
	.uleb128 0xc7
	.long	0x20cea
	.long	0x20d22
	.quad	.LFB12395
	.quad	.LFE12395-.LFB12395
	.uleb128 0x1
	.byte	0x9c
	.long	0x20d2b
	.uleb128 0x8
	.long	0x20cf8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0x1181f
	.quad	.LFB12393
	.quad	.LFE12393-.LFB12393
	.uleb128 0x1
	.byte	0x9c
	.long	0x20d56
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0x7c
	.byte	0x1b
	.long	0x1f30b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0xfaec
	.quad	.LFB12392
	.quad	.LFE12392-.LFB12392
	.uleb128 0x1
	.byte	0x9c
	.long	0x20d81
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0xec
	.byte	0x21
	.long	0x1ede4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x17c01
	.quad	.LFB12382
	.quad	.LFE12382-.LFB12382
	.uleb128 0x1
	.byte	0x9c
	.long	0x20dc5
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x14b90
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x554
	.byte	0x35
	.long	0x1f671
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x15bae
	.quad	.LFB12381
	.quad	.LFE12381-.LFB12381
	.uleb128 0x1
	.byte	0x9c
	.long	0x20df1
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x10c
	.byte	0x1c
	.long	0x1f6ad
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x158ca
	.long	0x20dff
	.byte	0x2
	.long	0x20e09
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f68f
	.byte	0
	.uleb128 0x42
	.long	0x20df1
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev\0"
	.long	0x20e5b
	.quad	.LFB12379
	.quad	.LFE12379-.LFB12379
	.uleb128 0x1
	.byte	0x9c
	.long	0x20e64
	.uleb128 0x8
	.long	0x20dff
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1561d
	.long	0x20e72
	.byte	0x2
	.long	0x20e7c
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f680
	.byte	0
	.uleb128 0x21
	.long	0x20e64
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev\0"
	.long	0x20ee0
	.quad	.LFB12376
	.quad	.LFE12376-.LFB12376
	.uleb128 0x1
	.byte	0x9c
	.long	0x20ee9
	.uleb128 0x8
	.long	0x20e72
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x6c
	.long	0x1799c
	.long	0x20f09
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x53
	.secrel32	.LASF215
	.byte	0xb
	.word	0x407
	.byte	0x1d
	.long	0x1e39a
	.byte	0
	.uleb128 0x6c
	.long	0x17a16
	.long	0x20f43
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x53
	.secrel32	.LASF215
	.byte	0xb
	.word	0x3c1
	.byte	0x12
	.long	0x1e334
	.uleb128 0x2f
	.ascii "__t\0"
	.byte	0xb
	.word	0x3c1
	.byte	0x23
	.long	0x1798e
	.uleb128 0x2f
	.ascii "__m\0"
	.byte	0xb
	.word	0x3c1
	.byte	0x35
	.long	0x3a08
	.byte	0
	.uleb128 0x14
	.long	0xd506
	.long	0x20f62
	.quad	.LFB12372
	.quad	.LFE12372-.LFB12372
	.uleb128 0x1
	.byte	0x9c
	.long	0x20fa3
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1e32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF216
	.byte	0xb
	.word	0x59f
	.byte	0x24
	.long	0x1e325
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1c
	.secrel32	.LASF217
	.byte	0xb
	.word	0x59f
	.byte	0x34
	.long	0xcf6e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "__order\0"
	.byte	0xb
	.word	0x5a0
	.byte	0x17
	.long	0x3a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x14
	.long	0xddd5
	.long	0x20fc2
	.quad	.LFB12371
	.quad	.LFE12371-.LFB12371
	.uleb128 0x1
	.byte	0x9c
	.long	0x20fde
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1e354
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__n\0"
	.byte	0x18
	.byte	0xce
	.byte	0x1c
	.long	0xdcc6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x140fb
	.long	0x20ffd
	.quad	.LFB12370
	.quad	.LFE12370-.LFB12370
	.uleb128 0x1
	.byte	0x9c
	.long	0x2101a
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f4eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__i\0"
	.byte	0x11
	.word	0x2cd
	.byte	0x19
	.long	0xe3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x29
	.long	0x17ccc
	.quad	.LFB12369
	.quad	.LFE12369-.LFB12369
	.uleb128 0x1
	.byte	0x9c
	.long	0x2104e
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x18
	.ascii "__r\0"
	.byte	0x14
	.byte	0x31
	.byte	0x16
	.long	0x1e325
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x1c2f
	.long	0x21076
	.quad	.LFB12368
	.quad	.LFE12368-.LFB12368
	.uleb128 0x1
	.byte	0x9c
	.long	0x210aa
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x2232b
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b7c3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF212
	.byte	0xa
	.word	0x190
	.byte	0x15
	.long	0x2232b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0xed
	.secrel32	.LLRL4
	.uleb128 0x2c
	.secrel32	.LASF220
	.byte	0xa
	.word	0x194
	.byte	0x15
	.long	0x1694
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0x1cd3
	.long	0x210c1
	.byte	0x2
	.long	0x210d8
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b7c3
	.uleb128 0x53
	.secrel32	.LASF214
	.byte	0xa
	.word	0x173
	.byte	0x21
	.long	0x1e39a
	.byte	0
	.uleb128 0x21
	.long	0x210aa
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_\0"
	.long	0x21154
	.quad	.LFB12367
	.quad	.LFE12367-.LFB12367
	.uleb128 0x1
	.byte	0x9c
	.long	0x21165
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x8
	.long	0x210c1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x210ca
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x6c
	.long	0x17abd
	.long	0x211b2
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x53
	.secrel32	.LASF215
	.byte	0xb
	.word	0x3c6
	.byte	0x17
	.long	0x1e39a
	.uleb128 0x2f
	.ascii "__m\0"
	.byte	0xb
	.word	0x3c6
	.byte	0x2b
	.long	0x3a08
	.uleb128 0x148
	.ascii "__buf\0"
	.byte	0xb
	.word	0x3c8
	.byte	0x1d
	.long	0x211b2
	.byte	0x1
	.uleb128 0x7e
	.ascii "__dest\0"
	.word	0x3c9
	.byte	0x8
	.long	0x1e334
	.byte	0
	.uleb128 0x77
	.long	0x49a
	.long	0x211c3
	.uleb128 0x8a
	.long	0xf1
	.byte	0
	.byte	0
	.uleb128 0x29
	.long	0x17d3b
	.quad	.LFB12363
	.quad	.LFE12363-.LFB12363
	.uleb128 0x1
	.byte	0x9c
	.long	0x211f7
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf89
	.uleb128 0x18
	.ascii "__r\0"
	.byte	0x14
	.byte	0x31
	.byte	0x16
	.long	0x1e38b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x11f76
	.quad	.LFB12362
	.quad	.LFE12362-.LFB12362
	.uleb128 0x1
	.byte	0x9c
	.long	0x21223
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x10f
	.byte	0x22
	.long	0x1f351
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x1376b
	.quad	.LFB12361
	.quad	.LFE12361-.LFB12361
	.uleb128 0x1
	.byte	0x9c
	.long	0x2124f
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x1a8
	.byte	0x1c
	.long	0x1f41e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0x13955
	.quad	.LFB12360
	.quad	.LFE12360-.LFB12360
	.uleb128 0x1
	.byte	0x9c
	.long	0x2127a
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0xe9
	.byte	0x1b
	.long	0x1f455
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x138ce
	.long	0x21288
	.byte	0x2
	.long	0x21292
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f43c
	.byte	0
	.uleb128 0xc7
	.long	0x2127a
	.long	0x212b2
	.quad	.LFB12358
	.quad	.LFE12358-.LFB12358
	.uleb128 0x1
	.byte	0x9c
	.long	0x212bb
	.uleb128 0x8
	.long	0x21288
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x13797
	.long	0x212c9
	.byte	0x2
	.long	0x212d3
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f42d
	.byte	0
	.uleb128 0x32
	.long	0x212bb
	.long	0x212f2
	.quad	.LFB12355
	.quad	.LFE12355-.LFB12355
	.uleb128 0x1
	.byte	0x9c
	.long	0x212fb
	.uleb128 0x8
	.long	0x212c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x11947
	.quad	.LFB12353
	.quad	.LFE12353-.LFB12353
	.uleb128 0x1
	.byte	0x9c
	.long	0x21327
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x1a8
	.byte	0x1c
	.long	0x1f310
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0x11e04
	.quad	.LFB12352
	.quad	.LFE12352-.LFB12352
	.uleb128 0x1
	.byte	0x9c
	.long	0x21352
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0xe9
	.byte	0x1b
	.long	0x1f347
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1162f
	.long	0x21360
	.byte	0x2
	.long	0x2136a
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f2f2
	.byte	0
	.uleb128 0x42
	.long	0x21352
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev\0"
	.long	0x213c8
	.quad	.LFB12350
	.quad	.LFE12350-.LFB12350
	.uleb128 0x1
	.byte	0x9c
	.long	0x213d1
	.uleb128 0x8
	.long	0x21360
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xfc5b
	.quad	.LFB12348
	.quad	.LFE12348-.LFB12348
	.uleb128 0x1
	.byte	0x9c
	.long	0x213fd
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x10f
	.byte	0x22
	.long	0x1edfd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0xf360
	.quad	.LFB12347
	.quad	.LFE12347-.LFB12347
	.uleb128 0x1
	.byte	0x9c
	.long	0x21428
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0x7c
	.byte	0x1b
	.long	0x1edb7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0xfa8f
	.quad	.LFB12346
	.quad	.LFE12346-.LFB12346
	.uleb128 0x1
	.byte	0x9c
	.long	0x21453
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x17
	.byte	0xe9
	.byte	0x1b
	.long	0x1edf3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x16629
	.long	0x2146a
	.byte	0x2
	.long	0x21480
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x2674c
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f74d
	.uleb128 0x3c
	.ascii "__h\0"
	.byte	0x17
	.byte	0xc7
	.byte	0x27
	.long	0x176f3
	.byte	0
	.uleb128 0x32
	.long	0x21453
	.long	0x214a8
	.quad	.LFB12327
	.quad	.LFE12327-.LFB12327
	.uleb128 0x1
	.byte	0x9c
	.long	0x214b9
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x2674c
	.uleb128 0x8
	.long	0x2146a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x21473
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7
	.long	0x17db1
	.uleb128 0x17
	.long	0x17dbd
	.quad	.LFB12325
	.quad	.LFE12325-.LFB12325
	.uleb128 0x1
	.byte	0x9c
	.long	0x21508
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x214f7
	.uleb128 0x10
	.long	0x1f644
	.uleb128 0x10
	.long	0x14b90
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x564
	.byte	0x1e
	.long	0x1f6e4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x17ea5
	.quad	.LFB12324
	.quad	.LFE12324-.LFB12324
	.uleb128 0x1
	.byte	0x9c
	.long	0x21556
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1f644
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x21545
	.uleb128 0x10
	.long	0x14b90
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x554
	.byte	0x35
	.long	0x1f6ad
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x15d62
	.long	0x21564
	.byte	0x2
	.long	0x2156e
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f6c6
	.byte	0
	.uleb128 0x21
	.long	0x21556
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev\0"
	.long	0x215d6
	.quad	.LFB12322
	.quad	.LFE12322-.LFB12322
	.uleb128 0x1
	.byte	0x9c
	.long	0x215df
	.uleb128 0x8
	.long	0x21564
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x14931
	.long	0x215f6
	.byte	0x2
	.long	0x2160c
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x26556
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f5d6
	.uleb128 0x3c
	.ascii "__h\0"
	.byte	0x17
	.byte	0xc7
	.byte	0x27
	.long	0x17695
	.byte	0
	.uleb128 0x32
	.long	0x215df
	.long	0x21634
	.quad	.LFB12319
	.quad	.LFE12319-.LFB12319
	.uleb128 0x1
	.byte	0x9c
	.long	0x21645
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x26556
	.uleb128 0x8
	.long	0x215f6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x215ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0xd65c
	.long	0x21653
	.byte	0x3
	.long	0x2165d
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1e32f
	.byte	0
	.uleb128 0x14
	.long	0xd1fe
	.long	0x2167c
	.quad	.LFB12316
	.quad	.LFE12316-.LFB12316
	.uleb128 0x1
	.byte	0x9c
	.long	0x216db
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1e32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0xb
	.word	0x575
	.byte	0x11
	.long	0xcf6e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "__m\0"
	.byte	0xb
	.word	0x575
	.byte	0x23
	.long	0x3a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x68
	.long	0x20f09
	.quad	.LBB307
	.quad	.LBE307-.LBB307
	.byte	0xb
	.word	0x576
	.byte	0x1d
	.uleb128 0x8
	.long	0x20f35
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x8
	.long	0x20f28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -29
	.uleb128 0x8
	.long	0x20f1b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0x6fc2
	.long	0x216e9
	.byte	0x3
	.long	0x21719
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bd03
	.uleb128 0x2f
	.ascii "__i\0"
	.byte	0xb
	.word	0x1c8
	.byte	0x18
	.long	0x68a5
	.uleb128 0x2f
	.ascii "__m\0"
	.byte	0xb
	.word	0x1c8
	.byte	0x2a
	.long	0x3a08
	.uleb128 0x7e
	.ascii "__b\0"
	.word	0x1ca
	.byte	0xf
	.long	0x3a08
	.byte	0
	.uleb128 0x15
	.long	0x7065
	.long	0x21727
	.byte	0x3
	.long	0x2174a
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bd1c
	.uleb128 0x2f
	.ascii "__m\0"
	.byte	0xb
	.word	0x1e1
	.byte	0x19
	.long	0x3a08
	.uleb128 0x7e
	.ascii "__b\0"
	.word	0x1e3
	.byte	0xf
	.long	0x3a08
	.byte	0
	.uleb128 0x14
	.long	0x13425
	.long	0x21769
	.quad	.LFB12313
	.quad	.LFE12313-.LFB12313
	.uleb128 0x1
	.byte	0x9c
	.long	0x21889
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f51d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF221
	.byte	0x13
	.byte	0x61
	.byte	0x23
	.long	0xcf6e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4a
	.secrel32	.LASF222
	.byte	0x13
	.byte	0x61
	.byte	0x37
	.long	0xe3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x27
	.ascii "__old_phase_val\0"
	.byte	0x13
	.byte	0x63
	.byte	0xd
	.long	0x4ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -29
	.uleb128 0x27
	.ascii "__half_step\0"
	.byte	0x13
	.byte	0x64
	.byte	0xd
	.long	0xcf89
	.uleb128 0x2
	.byte	0x91
	.sleb128 -30
	.uleb128 0x27
	.ascii "__full_step\0"
	.byte	0x13
	.byte	0x66
	.byte	0xd
	.long	0xcf89
	.uleb128 0x2
	.byte	0x91
	.sleb128 -31
	.uleb128 0x27
	.ascii "__current_expected\0"
	.byte	0x13
	.byte	0x69
	.byte	0x9
	.long	0xe3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x34
	.quad	.LBB302
	.quad	.LBE302-.LBB302
	.uleb128 0x27
	.ascii "__round\0"
	.byte	0x13
	.byte	0x6c
	.byte	0xb
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x34
	.quad	.LBB303
	.quad	.LBE303-.LBB303
	.uleb128 0x27
	.ascii "__end_node\0"
	.byte	0x13
	.byte	0x70
	.byte	0x13
	.long	0xe4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x27
	.ascii "__last_node\0"
	.byte	0x13
	.byte	0x71
	.byte	0x5
	.long	0xe4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0xed
	.secrel32	.LLRL3
	.uleb128 0x27
	.ascii "__expect\0"
	.byte	0x13
	.byte	0x76
	.byte	0x8
	.long	0xcf6e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -49
	.uleb128 0x93
	.secrel32	.LASF223
	.byte	0x77
	.byte	0x18
	.long	0x134e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x4e
	.long	0xd26d
	.long	0x218a8
	.quad	.LFB12312
	.quad	.LFE12312-.LFB12312
	.uleb128 0x1
	.byte	0x9c
	.long	0x218ff
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1e32f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__m\0"
	.byte	0xb
	.word	0x579
	.byte	0x19
	.long	0x3a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x68
	.long	0x21165
	.quad	.LBB300
	.quad	.LBE300-.LBB300
	.byte	0xb
	.word	0x57a
	.byte	0x23
	.uleb128 0x8
	.long	0x21184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x8
	.long	0x21177
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x41
	.long	0x21191
	.uleb128 0x2
	.byte	0x91
	.sleb128 -41
	.uleb128 0x41
	.long	0x211a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0xd026
	.long	0x2190d
	.byte	0x2
	.long	0x21924
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1e31b
	.uleb128 0x2f
	.ascii "__t\0"
	.byte	0xb
	.word	0x562
	.byte	0x19
	.long	0x1e325
	.byte	0
	.uleb128 0x21
	.long	0x218ff
	.ascii "_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_\0"
	.long	0x2197d
	.quad	.LFB12311
	.quad	.LFE12311-.LFB12311
	.uleb128 0x1
	.byte	0x9c
	.long	0x2198e
	.uleb128 0x8
	.long	0x2190d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x21916
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x17f94
	.quad	.LFB12308
	.quad	.LFE12308-.LFB12308
	.uleb128 0x1
	.byte	0x9c
	.long	0x219ec
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xcf6e
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x2232b
	.uleb128 0x1c
	.secrel32	.LASF214
	.byte	0xa
	.word	0x1ac
	.byte	0x26
	.long	0x1e39a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF212
	.byte	0xa
	.word	0x1ac
	.byte	0x34
	.long	0x2232b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x12
	.ascii "__w\0"
	.byte	0xa
	.word	0x1ae
	.byte	0x1f
	.long	0x1fe5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x4e
	.long	0xe46d
	.long	0x21a0b
	.quad	.LFB12307
	.quad	.LFE12307-.LFB12307
	.uleb128 0x1
	.byte	0x9c
	.long	0x21a62
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1e395
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__m\0"
	.byte	0xb
	.word	0x579
	.byte	0x19
	.long	0x3a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x68
	.long	0x21165
	.quad	.LBB297
	.quad	.LBE297-.LBB297
	.byte	0xb
	.word	0x57a
	.byte	0x23
	.uleb128 0x8
	.long	0x21184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x8
	.long	0x21177
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x41
	.long	0x21191
	.uleb128 0x2
	.byte	0x91
	.sleb128 -41
	.uleb128 0x41
	.long	0x211a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0xe21a
	.long	0x21a70
	.byte	0x2
	.long	0x21a87
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1e381
	.uleb128 0x2f
	.ascii "__t\0"
	.byte	0xb
	.word	0x562
	.byte	0x19
	.long	0x1e38b
	.byte	0
	.uleb128 0x21
	.long	0x21a62
	.ascii "_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_\0"
	.long	0x21ae1
	.quad	.LFB12306
	.quad	.LFE12306-.LFB12306
	.uleb128 0x1
	.byte	0x9c
	.long	0x21af2
	.uleb128 0x8
	.long	0x21a70
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x21a79
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x18060
	.quad	.LFB12303
	.quad	.LFE12303-.LFB12303
	.uleb128 0x1
	.byte	0x9c
	.long	0x21b40
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1bd3a
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x21b2f
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x559
	.byte	0x3b
	.long	0x1f351
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x180fc
	.quad	.LFB12302
	.quad	.LFE12302-.LFB12302
	.uleb128 0x1
	.byte	0x9c
	.long	0x21b84
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x12e26
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x554
	.byte	0x35
	.long	0x1f41e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x13a95
	.quad	.LFB12301
	.quad	.LFE12301-.LFB12301
	.uleb128 0x1
	.byte	0x9c
	.long	0x21bb0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x10c
	.byte	0x1c
	.long	0x1f45a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x131d9
	.long	0x21bbe
	.byte	0x2
	.long	0x21bd4
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f49b
	.uleb128 0x3c
	.ascii "__p\0"
	.byte	0x11
	.byte	0xa8
	.byte	0x1f
	.long	0x131f4
	.byte	0
	.uleb128 0x32
	.long	0x21bb0
	.long	0x21bf3
	.quad	.LFB12299
	.quad	.LFE12299-.LFB12299
	.uleb128 0x1
	.byte	0x9c
	.long	0x21c04
	.uleb128 0x8
	.long	0x21bbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x21bc7
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x13aff
	.long	0x21c12
	.byte	0x2
	.long	0x21c1c
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f473
	.byte	0
	.uleb128 0x32
	.long	0x21c04
	.long	0x21c3b
	.quad	.LFB12296
	.quad	.LFE12296-.LFB12296
	.uleb128 0x1
	.byte	0x9c
	.long	0x21c44
	.uleb128 0x8
	.long	0x21c12
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x181a8
	.quad	.LFB12294
	.quad	.LFE12294-.LFB12294
	.uleb128 0x1
	.byte	0x9c
	.long	0x21c88
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x10fd9
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x554
	.byte	0x35
	.long	0x1f310
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x11f15
	.quad	.LFB12293
	.quad	.LFE12293-.LFB12293
	.uleb128 0x1
	.byte	0x9c
	.long	0x21cb4
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x10c
	.byte	0x1c
	.long	0x1f34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x11c7d
	.long	0x21cc2
	.byte	0x2
	.long	0x21ccc
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f32e
	.byte	0
	.uleb128 0x42
	.long	0x21cb4
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev\0"
	.long	0x21d15
	.quad	.LFB12291
	.quad	.LFE12291-.LFB12291
	.uleb128 0x1
	.byte	0x9c
	.long	0x21d1e
	.uleb128 0x8
	.long	0x21cc2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x11a02
	.long	0x21d2c
	.byte	0x2
	.long	0x21d36
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f31f
	.byte	0
	.uleb128 0x21
	.long	0x21d1e
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev\0"
	.long	0x21d93
	.quad	.LFB12288
	.quad	.LFE12288-.LFB12288
	.uleb128 0x1
	.byte	0x9c
	.long	0x21d9c
	.uleb128 0x8
	.long	0x21d2c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xf10c
	.long	0x21daa
	.byte	0x2
	.long	0x21db4
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ed9e
	.byte	0
	.uleb128 0x42
	.long	0x21d9c
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev\0"
	.long	0x21e26
	.quad	.LFB12285
	.quad	.LFE12285-.LFB12285
	.uleb128 0x1
	.byte	0x9c
	.long	0x21e2f
	.uleb128 0x8
	.long	0x21daa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x18267
	.quad	.LFB12283
	.quad	.LFE12283-.LFB12283
	.uleb128 0x1
	.byte	0x9c
	.long	0x21e7d
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1ed8f
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x21e6c
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x559
	.byte	0x3b
	.long	0x1edfd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xf4bf
	.quad	.LFB12282
	.quad	.LFE12282-.LFB12282
	.uleb128 0x1
	.byte	0x9c
	.long	0x21ea9
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x1a8
	.byte	0x1c
	.long	0x1edbc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xfbe6
	.quad	.LFB12281
	.quad	.LFE12281-.LFB12281
	.uleb128 0x1
	.byte	0x9c
	.long	0x21ed5
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x10c
	.byte	0x1c
	.long	0x1edf8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xb795
	.quad	.LFB12279
	.quad	.LFE12279-.LFB12279
	.uleb128 0x1
	.byte	0x9c
	.long	0x21f1e
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcb3f
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xdd
	.byte	0x2a
	.long	0x1be97
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x19
	.secrel32	.LASF224
	.byte	0xe
	.byte	0xdf
	.byte	0x25
	.long	0xa1ae
	.byte	0
	.uleb128 0x15
	.long	0x1674b
	.long	0x21f35
	.byte	0x2
	.long	0x21f4f
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x2674c
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f77a
	.uleb128 0x2f
	.ascii "__head\0"
	.byte	0x17
	.word	0x1b8
	.byte	0x17
	.long	0x176f3
	.byte	0
	.uleb128 0x32
	.long	0x21f1e
	.long	0x21f77
	.quad	.LFB12241
	.quad	.LFE12241-.LFB12241
	.uleb128 0x1
	.byte	0x9c
	.long	0x21f88
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x2674c
	.uleb128 0x8
	.long	0x21f35
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x21f3e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x14f8e
	.long	0x21fa7
	.quad	.LFB12239
	.quad	.LFE12239-.LFB12239
	.uleb128 0x1
	.byte	0x9c
	.long	0x21fb4
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f6ee
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x18317
	.uleb128 0x17
	.long	0x18323
	.quad	.LFB12238
	.quad	.LFE12238-.LFB12238
	.uleb128 0x1
	.byte	0x9c
	.long	0x22003
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x21ff2
	.uleb128 0x10
	.long	0x1f644
	.uleb128 0x10
	.long	0x14b90
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x564
	.byte	0x1e
	.long	0x1f6e4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1629d
	.long	0x2201a
	.byte	0x2
	.long	0x22024
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f6d5
	.byte	0
	.uleb128 0x21
	.long	0x22003
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv\0"
	.long	0x22094
	.quad	.LFB12237
	.quad	.LFE12237-.LFB12237
	.uleb128 0x1
	.byte	0x9c
	.long	0x2209d
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0x8
	.long	0x2201a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x14a53
	.long	0x220b4
	.byte	0x2
	.long	0x220ce
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x26556
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f603
	.uleb128 0x2f
	.ascii "__head\0"
	.byte	0x17
	.word	0x1b8
	.byte	0x17
	.long	0x17695
	.byte	0
	.uleb128 0x32
	.long	0x2209d
	.long	0x220f6
	.quad	.LFB12233
	.quad	.LFE12233-.LFB12233
	.uleb128 0x1
	.byte	0x9c
	.long	0x22107
	.uleb128 0x3
	.secrel32	.LASF141
	.long	0x26556
	.uleb128 0x8
	.long	0x220b4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x220bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x1445e
	.long	0x22115
	.byte	0x2
	.long	0x2212d
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f7ac
	.uleb128 0x3c
	.ascii "__tok\0"
	.byte	0x13
	.byte	0xde
	.byte	0x21
	.long	0x1447a
	.byte	0
	.uleb128 0xc7
	.long	0x22107
	.long	0x2214d
	.quad	.LFB12230
	.quad	.LFE12230-.LFB12230
	.uleb128 0x1
	.byte	0x9c
	.long	0x2215e
	.uleb128 0x8
	.long	0x22115
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2211e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x13496
	.long	0x2217d
	.quad	.LFB12228
	.quad	.LFE12228-.LFB12228
	.uleb128 0x1
	.byte	0x9c
	.long	0x222cd
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f51d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF225
	.byte	0x13
	.byte	0xa2
	.byte	0x18
	.long	0x2932
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x27
	.ascii "__hasher\0"
	.byte	0x13
	.byte	0xa4
	.byte	0x1d
	.long	0x87d3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -89
	.uleb128 0x93
	.secrel32	.LASF222
	.byte	0xa5
	.byte	0x9
	.long	0xe3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x93
	.secrel32	.LASF223
	.byte	0xa6
	.byte	0x17
	.long	0x134e8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x93
	.secrel32	.LASF221
	.byte	0xa7
	.byte	0xd
	.long	0xcf89
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.uleb128 0x27
	.ascii "__cur\0"
	.byte	0x13
	.byte	0xa8
	.byte	0xd
	.long	0x4ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x34
	.quad	.LBB279
	.quad	.LBE279-.LBB279
	.uleb128 0x27
	.ascii "__new_phase\0"
	.byte	0x13
	.byte	0xb0
	.byte	0x8
	.long	0xcf6e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -27
	.uleb128 0xee
	.long	0x21719
	.quad	.LBB280
	.quad	.LBE280-.LBB280
	.byte	0xae
	.byte	0x2d
	.long	0x2224c
	.uleb128 0x8
	.long	0x21730
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x8
	.long	0x21727
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x41
	.long	0x2173d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0xee
	.long	0x216db
	.quad	.LBB282
	.quad	.LBE282-.LBB282
	.byte	0xaf
	.byte	0x1f
	.long	0x22289
	.uleb128 0x8
	.long	0x216ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x8
	.long	0x216f2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x8
	.long	0x216e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x41
	.long	0x2170c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x86
	.long	0x21645
	.quad	.LBB284
	.quad	.LBE284-.LBB284
	.byte	0x13
	.byte	0xb2
	.byte	0x15
	.uleb128 0x87
	.long	0x21653
	.uleb128 0x68
	.long	0x20ee9
	.quad	.LBB286
	.quad	.LBE286-.LBB286
	.byte	0xb
	.word	0x5b6
	.byte	0x22
	.uleb128 0x8
	.long	0x20efb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x134b7
	.long	0x222ec
	.quad	.LFB12226
	.quad	.LFE12226-.LFB12226
	.uleb128 0x1
	.byte	0x9c
	.long	0x22420
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f527
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF221
	.byte	0x13
	.byte	0xb9
	.byte	0x1c
	.long	0x1f52c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x93
	.secrel32	.LASF223
	.byte	0xbb
	.byte	0x1d
	.long	0x13505
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x27
	.ascii "__test_fn\0"
	.byte	0x13
	.byte	0xbc
	.byte	0xd
	.long	0x2236f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x149
	.byte	0x10
	.byte	0x13
	.byte	0xbc
	.byte	0x19
	.uleb128 0x4f
	.secrel32	.LASF226
	.long	0x2233e
	.long	0x22353
	.uleb128 0x2
	.long	0x22343
	.uleb128 0x6
	.long	0x2232b
	.uleb128 0x1
	.long	0x2234d
	.uleb128 0x1e
	.long	0x2232b
	.byte	0
	.uleb128 0x4f
	.secrel32	.LASF226
	.long	0x22360
	.long	0x22375
	.uleb128 0x2
	.long	0x22343
	.uleb128 0x1
	.long	0x2236a
	.uleb128 0x7
	.long	0x2236f
	.uleb128 0x4
	.long	0x2232b
	.byte	0
	.uleb128 0xc8
	.secrel32	.LASF226
	.long	0x22383
	.long	0x22389
	.uleb128 0x2
	.long	0x22343
	.byte	0
	.uleb128 0x4f
	.secrel32	.LASF227
	.long	0x22396
	.long	0x223a1
	.uleb128 0x2
	.long	0x22343
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x16
	.ascii "____phase\0"
	.byte	0x13
	.byte	0xbe
	.byte	0xd
	.long	0x13505
	.byte	0
	.uleb128 0x16
	.ascii "____old_phase\0"
	.byte	0x13
	.byte	0xbe
	.byte	0x33
	.long	0x13485
	.byte	0x8
	.uleb128 0xef
	.secrel32	.LASF4
	.long	0x1ab64
	.long	0x223f5
	.quad	.LFB12227
	.quad	.LFE12227-.LFB12227
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x6
	.long	0x2236f
	.uleb128 0x4
	.long	0x223eb
	.uleb128 0xe
	.secrel32	.LASF228
	.long	0x223f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x59
	.secrel32	.LASF221
	.long	0x13491
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x59
	.secrel32	.LASF223
	.long	0x13528
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1e
	.long	0x1723a
	.uleb128 0x29
	.long	0x1840b
	.quad	.LFB12225
	.quad	.LFE12225-.LFB12225
	.uleb128 0x1
	.byte	0x9c
	.long	0x22459
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1e325
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x14
	.byte	0x68
	.byte	0x10
	.long	0x1e325
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x18496
	.uleb128 0x17
	.long	0x1849b
	.quad	.LFB12224
	.quad	.LFE12224-.LFB12224
	.uleb128 0x1
	.byte	0x9c
	.long	0x224a8
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x22497
	.uleb128 0x10
	.long	0x1bd3a
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x56a
	.byte	0x24
	.long	0x1f379
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x18539
	.uleb128 0x17
	.long	0x18545
	.quad	.LFB12223
	.quad	.LFE12223-.LFB12223
	.uleb128 0x1
	.byte	0x9c
	.long	0x224f7
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x224e6
	.uleb128 0x10
	.long	0x1f3f1
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x564
	.byte	0x1e
	.long	0x1f491
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x18647
	.quad	.LFB12222
	.quad	.LFE12222-.LFB12222
	.uleb128 0x1
	.byte	0x9c
	.long	0x22545
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1f3f1
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x22534
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x554
	.byte	0x35
	.long	0x1f45a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1e
	.long	0x12e26
	.uleb128 0x7
	.long	0x12fce
	.uleb128 0x29
	.long	0x1867f
	.quad	.LFB12221
	.quad	.LFE12221-.LFB12221
	.uleb128 0x1
	.byte	0x9c
	.long	0x22583
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x12e26
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x14
	.byte	0x4d
	.byte	0x38
	.long	0x2254a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x132c2
	.long	0x225a2
	.quad	.LFB12220
	.quad	.LFE12220-.LFB12220
	.uleb128 0x1
	.byte	0x9c
	.long	0x225be
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f49b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x27
	.ascii "__p\0"
	.byte	0x11
	.byte	0xd1
	.byte	0xa
	.long	0x131f4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x14
	.long	0x132a7
	.long	0x225dd
	.quad	.LFB12219
	.quad	.LFE12219-.LFB12219
	.uleb128 0x1
	.byte	0x9c
	.long	0x2260c
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f49b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x11
	.byte	0xc6
	.byte	0x1a
	.long	0x131f4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x27
	.ascii "__old_p\0"
	.byte	0x11
	.byte	0xc8
	.byte	0x10
	.long	0x13200
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x15
	.long	0x1423d
	.long	0x2262c
	.byte	0x2
	.long	0x22643
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1f3f1
	.uleb128 0x60
	.ascii "_Vp\0"
	.long	0x12e26
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f4d7
	.uleb128 0x2f
	.ascii "__p\0"
	.byte	0x11
	.word	0x256
	.byte	0x11
	.long	0x1f3f1
	.byte	0
	.uleb128 0x32
	.long	0x2260c
	.long	0x22674
	.quad	.LFB12217
	.quad	.LFE12217-.LFB12217
	.uleb128 0x1
	.byte	0x9c
	.long	0x22685
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1f3f1
	.uleb128 0x60
	.ascii "_Vp\0"
	.long	0x12e26
	.uleb128 0x8
	.long	0x2262c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x22635
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x58
	.long	0x13eb8
	.byte	0x11
	.byte	0xe9
	.byte	0x28
	.long	0x22695
	.long	0x226a4
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f4be
	.uleb128 0x1
	.long	0x131f4
	.byte	0
	.uleb128 0x32
	.long	0x22685
	.long	0x226c3
	.quad	.LFB12215
	.quad	.LFE12215-.LFB12215
	.uleb128 0x1
	.byte	0x9c
	.long	0x226d4
	.uleb128 0x8
	.long	0x22695
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2269e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x13d49
	.long	0x226eb
	.byte	0x2
	.long	0x226f5
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f482
	.byte	0
	.uleb128 0x32
	.long	0x226d4
	.long	0x2271d
	.quad	.LFB12211
	.quad	.LFE12211-.LFB12211
	.uleb128 0x1
	.byte	0x9c
	.long	0x22726
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0x8
	.long	0x226eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x18714
	.uleb128 0x17
	.long	0x18720
	.quad	.LFB12209
	.quad	.LFE12209-.LFB12209
	.uleb128 0x1
	.byte	0x9c
	.long	0x22775
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x22764
	.uleb128 0x10
	.long	0x1bd3a
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x564
	.byte	0x1e
	.long	0x1f383
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x187f4
	.quad	.LFB12208
	.quad	.LFE12208-.LFB12208
	.uleb128 0x1
	.byte	0x9c
	.long	0x227c3
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1bd3a
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x227b2
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x554
	.byte	0x35
	.long	0x1f34c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x120ad
	.long	0x227d1
	.byte	0x2
	.long	0x227db
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f365
	.byte	0
	.uleb128 0x21
	.long	0x227c3
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev\0"
	.long	0x2283c
	.quad	.LFB12206
	.quad	.LFE12206-.LFB12206
	.uleb128 0x1
	.byte	0x9c
	.long	0x22845
	.uleb128 0x8
	.long	0x227d1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xf8a4
	.long	0x22853
	.byte	0x2
	.long	0x2285d
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1edda
	.byte	0
	.uleb128 0x42
	.long	0x22845
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev\0"
	.long	0x228ba
	.quad	.LFB12203
	.quad	.LFE12203-.LFB12203
	.uleb128 0x1
	.byte	0x9c
	.long	0x228c3
	.uleb128 0x8
	.long	0x22853
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xf5a2
	.long	0x228d1
	.byte	0x2
	.long	0x228db
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1edcb
	.byte	0
	.uleb128 0x21
	.long	0x228c3
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev\0"
	.long	0x2294c
	.quad	.LFB12200
	.quad	.LFE12200-.LFB12200
	.uleb128 0x1
	.byte	0x9c
	.long	0x22955
	.uleb128 0x8
	.long	0x228d1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x1889a
	.uleb128 0x17
	.long	0x1889f
	.quad	.LFB12198
	.quad	.LFE12198-.LFB12198
	.uleb128 0x1
	.byte	0x9c
	.long	0x229a4
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x22993
	.uleb128 0x10
	.long	0x1ed8f
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x56a
	.byte	0x24
	.long	0x1ee25
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x18951
	.quad	.LFB12197
	.quad	.LFE12197-.LFB12197
	.uleb128 0x1
	.byte	0x9c
	.long	0x229e8
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0xe8dd
	.uleb128 0x36
	.secrel32	.LASF154
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x554
	.byte	0x35
	.long	0x1edbc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x18a33
	.quad	.LFB12196
	.quad	.LFE12196-.LFB12196
	.uleb128 0x1
	.byte	0x9c
	.long	0x22a36
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF123
	.long	0x1ed8f
	.uleb128 0x20
	.secrel32	.LASF154
	.long	0x22a25
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x554
	.byte	0x35
	.long	0x1edf8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xb885
	.quad	.LFB12193
	.quad	.LFE12193-.LFB12193
	.uleb128 0x1
	.byte	0x9c
	.long	0x22a7c
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0xa013
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcb3f
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x34
	.long	0x1be97
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xb62d
	.quad	.LFB12106
	.quad	.LFE12106-.LFB12106
	.uleb128 0x1
	.byte	0x9c
	.long	0x22ac5
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xd0
	.byte	0x2a
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x19
	.secrel32	.LASF224
	.byte	0xe
	.byte	0xd2
	.byte	0x25
	.long	0xa930
	.byte	0
	.uleb128 0x15
	.long	0x16833
	.long	0x22aeb
	.byte	0x2
	.long	0x22afd
	.uleb128 0x20
	.secrel32	.LASF145
	.long	0x22ae2
	.uleb128 0x10
	.long	0x2674c
	.byte	0
	.uleb128 0x49
	.secrel32	.LASF146
	.long	0x1ab64
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f789
	.uleb128 0xa4
	.uleb128 0x1
	.long	0x176f3
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	0x22ac5
	.long	0x22b34
	.quad	.LFB12104
	.quad	.LFE12104-.LFB12104
	.uleb128 0x1
	.byte	0x9c
	.long	0x22b48
	.uleb128 0x20
	.secrel32	.LASF145
	.long	0x22b2b
	.uleb128 0x10
	.long	0x2674c
	.byte	0
	.uleb128 0x49
	.secrel32	.LASF146
	.long	0x1ab64
	.uleb128 0x8
	.long	0x22aeb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xa4
	.uleb128 0x8
	.long	0x22af6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x14c01
	.long	0x22b67
	.quad	.LFB12102
	.quad	.LFE12102-.LFB12102
	.uleb128 0x1
	.byte	0x9c
	.long	0x22b83
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f63f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF215
	.byte	0x11
	.byte	0x59
	.byte	0x17
	.long	0x1f644
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x1e
	.long	0x16e79
	.uleb128 0x29
	.long	0x18ae1
	.quad	.LFB12101
	.quad	.LFE12101-.LFB12101
	.uleb128 0x1
	.byte	0x9c
	.long	0x22bbc
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f6a3
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x14
	.byte	0x68
	.byte	0x10
	.long	0x1f6a3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x83d9
	.long	0x22bdb
	.quad	.LFB12100
	.quad	.LFE12100-.LFB12100
	.uleb128 0x1
	.byte	0x9c
	.long	0x22be8
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f725
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x14ec3
	.long	0x22c07
	.quad	.LFB12099
	.quad	.LFE12099-.LFB12099
	.uleb128 0x1
	.byte	0x9c
	.long	0x22c14
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f6ee
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x14d85
	.long	0x22c22
	.byte	0x2
	.long	0x22c38
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f6ee
	.uleb128 0x3c
	.ascii "__p\0"
	.byte	0x11
	.byte	0xa8
	.byte	0x1f
	.long	0x14dea
	.byte	0
	.uleb128 0x21
	.long	0x22c14
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_\0"
	.long	0x22ca0
	.quad	.LFB12097
	.quad	.LFE12097-.LFB12097
	.uleb128 0x1
	.byte	0x9c
	.long	0x22cb1
	.uleb128 0x8
	.long	0x22c22
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x22c2b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x14b3b
	.long	0x22cd7
	.byte	0x2
	.long	0x22ce9
	.uleb128 0x20
	.secrel32	.LASF145
	.long	0x22cce
	.uleb128 0x10
	.long	0x26556
	.byte	0
	.uleb128 0x49
	.secrel32	.LASF146
	.long	0x1ab64
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f612
	.uleb128 0xa4
	.uleb128 0x1
	.long	0x17695
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	0x22cb1
	.long	0x22d20
	.quad	.LFB12093
	.quad	.LFE12093-.LFB12093
	.uleb128 0x1
	.byte	0x9c
	.long	0x22d34
	.uleb128 0x20
	.secrel32	.LASF145
	.long	0x22d17
	.uleb128 0x10
	.long	0x26556
	.byte	0
	.uleb128 0x49
	.secrel32	.LASF146
	.long	0x1ab64
	.uleb128 0x8
	.long	0x22cd7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xa4
	.uleb128 0x8
	.long	0x22ce2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x1449b
	.long	0x22d53
	.quad	.LFB12091
	.quad	.LFE12091-.LFB12091
	.uleb128 0x1
	.byte	0x9c
	.long	0x22d6f
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f536
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF225
	.byte	0x13
	.byte	0xef
	.byte	0x18
	.long	0x2932
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x144bc
	.long	0x22d8e
	.quad	.LFB12090
	.quad	.LFE12090-.LFB12090
	.uleb128 0x1
	.byte	0x9c
	.long	0x22daa
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f54a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF223
	.byte	0x13
	.byte	0xf3
	.byte	0x1c
	.long	0x1f54f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x11380
	.long	0x22dc9
	.quad	.LFB12089
	.quad	.LFE12089-.LFB12089
	.uleb128 0x1
	.byte	0x9c
	.long	0x22dd6
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f3a6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x13273
	.long	0x22df5
	.quad	.LFB12088
	.quad	.LFE12088-.LFB12088
	.uleb128 0x1
	.byte	0x9c
	.long	0x22e02
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f49b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x17851
	.uleb128 0x17
	.long	0x18b5c
	.quad	.LFB12087
	.quad	.LFE12087-.LFB12087
	.uleb128 0x1
	.byte	0x9c
	.long	0x22e51
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x22e40
	.uleb128 0x10
	.long	0x1f3f1
	.uleb128 0x10
	.long	0x12e26
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x564
	.byte	0x1e
	.long	0x1f491
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x13220
	.long	0x22e70
	.quad	.LFB12086
	.quad	.LFE12086-.LFB12086
	.uleb128 0x1
	.byte	0x9c
	.long	0x22e8c
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f49b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__u\0"
	.byte	0x11
	.byte	0xb5
	.byte	0x34
	.long	0x1f4a0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x18b90
	.quad	.LFB12085
	.quad	.LFE12085-.LFB12085
	.uleb128 0x1
	.byte	0x9c
	.long	0x22ec3
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1f5c5
	.uleb128 0x11
	.ascii "__num\0"
	.byte	0x11
	.word	0x437
	.byte	0x18
	.long	0xe3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x142cd
	.long	0x22eda
	.byte	0x2
	.long	0x22ee4
	.uleb128 0x5e
	.secrel32	.LASF83
	.long	0x12e26
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f4d7
	.byte	0
	.uleb128 0x32
	.long	0x22ec3
	.long	0x22f0c
	.quad	.LFB12083
	.quad	.LFE12083-.LFB12083
	.uleb128 0x1
	.byte	0x9c
	.long	0x22f15
	.uleb128 0x5e
	.secrel32	.LASF83
	.long	0x12e26
	.uleb128 0x8
	.long	0x22eda
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x58
	.long	0x13ed0
	.byte	0x11
	.byte	0xe9
	.byte	0x28
	.long	0x22f25
	.long	0x22f2f
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f4be
	.byte	0
	.uleb128 0x32
	.long	0x22f15
	.long	0x22f4e
	.quad	.LFB12081
	.quad	.LFE12081-.LFB12081
	.uleb128 0x1
	.byte	0x9c
	.long	0x22f57
	.uleb128 0x8
	.long	0x22f25
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x131c2
	.long	0x22f65
	.byte	0x2
	.long	0x22f6f
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f49b
	.byte	0
	.uleb128 0x32
	.long	0x22f57
	.long	0x22f8e
	.quad	.LFB12079
	.quad	.LFE12079-.LFB12079
	.uleb128 0x1
	.byte	0x9c
	.long	0x22f97
	.uleb128 0x8
	.long	0x22f65
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x113df
	.long	0x22fb6
	.quad	.LFB12074
	.quad	.LFE12074-.LFB12074
	.uleb128 0x1
	.byte	0x9c
	.long	0x22fc3
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f38d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x1848a
	.uleb128 0x17
	.long	0x18c13
	.quad	.LFB12073
	.quad	.LFE12073-.LFB12073
	.uleb128 0x1
	.byte	0x9c
	.long	0x23012
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x23001
	.uleb128 0x10
	.long	0x1bd3a
	.uleb128 0x10
	.long	0x10fd9
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x564
	.byte	0x1e
	.long	0x1f383
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x12587
	.long	0x23029
	.byte	0x2
	.long	0x23033
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f374
	.byte	0
	.uleb128 0x21
	.long	0x23012
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv\0"
	.long	0x2309c
	.quad	.LFB12072
	.quad	.LFE12072-.LFB12072
	.uleb128 0x1
	.byte	0x9c
	.long	0x230a5
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0x8
	.long	0x23029
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xfdce
	.long	0x230b3
	.byte	0x2
	.long	0x230bd
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ee11
	.byte	0
	.uleb128 0x21
	.long	0x230a5
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev\0"
	.long	0x23132
	.quad	.LFB12068
	.quad	.LFE12068-.LFB12068
	.uleb128 0x1
	.byte	0x9c
	.long	0x2313b
	.uleb128 0x8
	.long	0x230b3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xedd6
	.long	0x2315a
	.quad	.LFB12066
	.quad	.LFE12066-.LFB12066
	.uleb128 0x1
	.byte	0x9c
	.long	0x23167
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1ee52
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x18caf
	.uleb128 0x17
	.long	0x18cbb
	.quad	.LFB12065
	.quad	.LFE12065-.LFB12065
	.uleb128 0x1
	.byte	0x9c
	.long	0x231b6
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0x1
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x231a5
	.uleb128 0x10
	.long	0x1ed8f
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x564
	.byte	0x1e
	.long	0x1ee2f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x1888e
	.uleb128 0x17
	.long	0x18dc1
	.quad	.LFB12064
	.quad	.LFE12064-.LFB12064
	.uleb128 0x1
	.byte	0x9c
	.long	0x23205
	.uleb128 0x1a
	.ascii "__i\0"
	.long	0xf1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF126
	.long	0x231f4
	.uleb128 0x10
	.long	0x1ed8f
	.uleb128 0x10
	.long	0xe8dd
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x17
	.word	0x564
	.byte	0x1e
	.long	0x1ee2f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x8fc3
	.long	0x23225
	.byte	0x2
	.long	0x2323c
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1be4c
	.uleb128 0x2f
	.ascii "__d\0"
	.byte	0xe
	.word	0x201
	.byte	0x38
	.long	0x1be97
	.byte	0
	.uleb128 0x21
	.long	0x23205
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE\0"
	.long	0x232c3
	.quad	.LFB12061
	.quad	.LFE12061-.LFB12061
	.uleb128 0x1
	.byte	0x9c
	.long	0x232d4
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.uleb128 0x8
	.long	0x23225
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2322e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0xa614
	.long	0x232f4
	.byte	0x2
	.long	0x2330b
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1beb5
	.uleb128 0x2f
	.ascii "__d\0"
	.byte	0xe
	.word	0x201
	.byte	0x38
	.long	0x1be97
	.byte	0
	.uleb128 0x21
	.long	0x232d4
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE\0"
	.long	0x2338c
	.quad	.LFB12054
	.quad	.LFE12054-.LFB12054
	.uleb128 0x1
	.byte	0x9c
	.long	0x2339d
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.uleb128 0x8
	.long	0x232f4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x232fd
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0xb4d8
	.quad	.LFB12051
	.quad	.LFE12051-.LFB12051
	.uleb128 0x1
	.byte	0x9c
	.long	0x233e6
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcbbb
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xd0
	.byte	0x2a
	.long	0x1beba
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x19
	.secrel32	.LASF224
	.byte	0xe
	.byte	0xd2
	.byte	0x25
	.long	0x9b64
	.byte	0
	.uleb128 0x15
	.long	0xa692
	.long	0x233fd
	.byte	0x2
	.long	0x23414
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1beb5
	.uleb128 0x53
	.secrel32	.LASF229
	.byte	0xe
	.word	0x1f9
	.byte	0x2d
	.long	0x1be6a
	.byte	0
	.uleb128 0x42
	.long	0x233e6
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_\0"
	.long	0x23475
	.quad	.LFB12050
	.quad	.LFE12050-.LFB12050
	.uleb128 0x1
	.byte	0x9c
	.long	0x23486
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x8
	.long	0x233fd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x23406
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0xb360
	.quad	.LFB12046
	.quad	.LFE12046-.LFB12046
	.uleb128 0x1
	.byte	0x9c
	.long	0x234cf
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcb3f
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xdd
	.byte	0x2a
	.long	0x1be97
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x19
	.secrel32	.LASF224
	.byte	0xe
	.byte	0xdf
	.byte	0x25
	.long	0x8b09
	.byte	0
	.uleb128 0x17
	.long	0x1795
	.quad	.LFB12038
	.quad	.LFE12038-.LFB12038
	.uleb128 0x1
	.byte	0x9c
	.long	0x2350b
	.uleb128 0x1c
	.secrel32	.LASF214
	.byte	0xa
	.word	0x11f
	.byte	0x15
	.long	0x519
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x12
	.ascii "res\0"
	.byte	0xa
	.word	0x122
	.byte	0xa
	.long	0x1b778
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x17
	.long	0xb9c1
	.quad	.LFB11921
	.quad	.LFE11921-.LFB11921
	.uleb128 0x1
	.byte	0x9c
	.long	0x23551
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0xa785
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x34
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x5c6c
	.long	0x2355f
	.byte	0x3
	.long	0x2358f
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bcc2
	.uleb128 0x2f
	.ascii "__i\0"
	.byte	0xb
	.word	0x1c8
	.byte	0x18
	.long	0x554f
	.uleb128 0x2f
	.ascii "__m\0"
	.byte	0xb
	.word	0x1c8
	.byte	0x2a
	.long	0x3a08
	.uleb128 0x7e
	.ascii "__b\0"
	.word	0x1ca
	.byte	0xf
	.long	0x3a08
	.byte	0
	.uleb128 0x15
	.long	0x5d0f
	.long	0x2359d
	.byte	0x3
	.long	0x235c0
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bcdb
	.uleb128 0x2f
	.ascii "__m\0"
	.byte	0xb
	.word	0x1e1
	.byte	0x19
	.long	0x3a08
	.uleb128 0x7e
	.ascii "__b\0"
	.word	0x1e3
	.byte	0xf
	.long	0x3a08
	.byte	0
	.uleb128 0x15
	.long	0x7f59
	.long	0x235dd
	.byte	0x2
	.long	0x235ef
	.uleb128 0x20
	.secrel32	.LASF73
	.long	0x235dd
	.uleb128 0x10
	.long	0x2674c
	.byte	0
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f7bb
	.uleb128 0xa5
	.uleb128 0x1
	.long	0x176f3
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	0x235c0
	.long	0x2361d
	.quad	.LFB11917
	.quad	.LFE11917-.LFB11917
	.uleb128 0x1
	.byte	0x9c
	.long	0x23631
	.uleb128 0x20
	.secrel32	.LASF73
	.long	0x2361d
	.uleb128 0x10
	.long	0x2674c
	.byte	0
	.uleb128 0x8
	.long	0x235dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xa5
	.uleb128 0x8
	.long	0x235e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x7
	.long	0x1456e
	.uleb128 0x29
	.long	0x18e71
	.quad	.LFB11909
	.quad	.LFE11909-.LFB11909
	.uleb128 0x1
	.byte	0x9c
	.long	0x2366a
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x2674c
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x14
	.byte	0x4d
	.byte	0x38
	.long	0x23631
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x8176
	.long	0x23678
	.byte	0x2
	.long	0x23699
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f725
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.uleb128 0x74
	.uleb128 0xa6
	.secrel32	.LASF215
	.word	0x18a
	.long	0x1f6a3
	.byte	0
	.byte	0
	.uleb128 0x21
	.long	0x2366a
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev\0"
	.long	0x236f9
	.quad	.LFB11908
	.quad	.LFE11908-.LFB11908
	.uleb128 0x1
	.byte	0x9c
	.long	0x23730
	.uleb128 0x8
	.long	0x23678
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x75
	.long	0x2368a
	.long	0x23710
	.uleb128 0x6d
	.long	0x2368b
	.byte	0
	.uleb128 0x88
	.long	0x2368a
	.quad	.LBB257
	.quad	.LBE257-.LBB257
	.uleb128 0x41
	.long	0x2368b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0x86f4
	.long	0x23747
	.byte	0x2
	.long	0x2375e
	.uleb128 0x5e
	.secrel32	.LASF83
	.long	0x14b90
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f725
	.uleb128 0x2f
	.ascii "__p\0"
	.byte	0x11
	.word	0x135
	.byte	0x15
	.long	0x82f7
	.byte	0
	.uleb128 0x21
	.long	0x23730
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_\0"
	.long	0x237d0
	.quad	.LFB11905
	.quad	.LFE11905-.LFB11905
	.uleb128 0x1
	.byte	0x9c
	.long	0x237e1
	.uleb128 0x5e
	.secrel32	.LASF83
	.long	0x14b90
	.uleb128 0x8
	.long	0x23747
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x23750
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x58
	.long	0x16469
	.byte	0x11
	.byte	0xe9
	.byte	0x28
	.long	0x237f1
	.long	0x23800
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f70c
	.uleb128 0x1
	.long	0x14dea
	.byte	0
	.uleb128 0x21
	.long	0x237e1
	.ascii "_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_\0"
	.long	0x2388c
	.quad	.LFB11903
	.quad	.LFE11903-.LFB11903
	.uleb128 0x1
	.byte	0x9c
	.long	0x2389d
	.uleb128 0x8
	.long	0x237f1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x237fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x8024
	.long	0x238ba
	.byte	0x2
	.long	0x238cc
	.uleb128 0x20
	.secrel32	.LASF73
	.long	0x238ba
	.uleb128 0x10
	.long	0x26556
	.byte	0
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f7cf
	.uleb128 0xa5
	.uleb128 0x1
	.long	0x17695
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	0x2389d
	.long	0x238fa
	.quad	.LFB11898
	.quad	.LFE11898-.LFB11898
	.uleb128 0x1
	.byte	0x9c
	.long	0x2390e
	.uleb128 0x20
	.secrel32	.LASF73
	.long	0x238fa
	.uleb128 0x10
	.long	0x26556
	.byte	0
	.uleb128 0x8
	.long	0x238ba
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xa5
	.uleb128 0x8
	.long	0x238c5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x58
	.long	0x7dc7
	.byte	0xd
	.byte	0x43
	.byte	0xc
	.long	0x2391e
	.long	0x23928
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f649
	.byte	0
	.uleb128 0x42
	.long	0x2390e
	.ascii "_ZNSt6thread6_StateC2Ev\0"
	.long	0x2395f
	.quad	.LFB11890
	.quad	.LFE11890-.LFB11890
	.uleb128 0x1
	.byte	0x9c
	.long	0x23968
	.uleb128 0x8
	.long	0x2391e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x14549
	.uleb128 0x29
	.long	0x18e90
	.quad	.LFB11887
	.quad	.LFE11887-.LFB11887
	.uleb128 0x1
	.byte	0x9c
	.long	0x239a1
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x26556
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x14
	.byte	0x4d
	.byte	0x38
	.long	0x23968
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xbae5
	.quad	.LFB11886
	.quad	.LFE11886-.LFB11886
	.uleb128 0x1
	.byte	0x9c
	.long	0x23a0f
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0xcbbb
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0x88a3
	.uleb128 0x1c
	.secrel32	.LASF230
	.byte	0xe
	.word	0x284
	.byte	0x32
	.long	0x1beba
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF231
	.byte	0xe
	.word	0x285
	.byte	0x24
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x22
	.ascii "__cd\0"
	.byte	0xe
	.word	0x289
	.byte	0x34
	.long	0x10fb1
	.byte	0
	.uleb128 0x14
	.long	0x144d7
	.long	0x23a2e
	.quad	.LFB11885
	.quad	.LFE11885-.LFB11885
	.uleb128 0x1
	.byte	0x9c
	.long	0x23a3b
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f536
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x12a3d
	.long	0x23a5a
	.quad	.LFB11884
	.quad	.LFE11884-.LFB11884
	.uleb128 0x1
	.byte	0x9c
	.long	0x23a67
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f3d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x6
	.long	0x12f3d
	.uleb128 0x4
	.long	0x23a67
	.uleb128 0x14
	.long	0x12eaf
	.long	0x23a99
	.quad	.LFB11883
	.quad	.LFE11883-.LFB11883
	.uleb128 0x1
	.byte	0x9c
	.long	0x23ab5
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1336a
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x23a6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF215
	.byte	0x11
	.byte	0x80
	.byte	0x12
	.long	0x1f3f1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x14158
	.long	0x23ad4
	.quad	.LFB11882
	.quad	.LFE11882-.LFB11882
	.uleb128 0x1
	.byte	0x9c
	.long	0x23ae1
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f4d7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x1323f
	.long	0x23b00
	.quad	.LFB11881
	.quad	.LFE11881-.LFB11881
	.uleb128 0x1
	.byte	0x9c
	.long	0x23b0d
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f49b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1345b
	.long	0x23b1b
	.byte	0x2
	.long	0x23b50
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f51d
	.uleb128 0x5a
	.secrel32	.LASF216
	.byte	0x13
	.byte	0x97
	.byte	0x20
	.long	0x2932
	.uleb128 0x5a
	.secrel32	.LASF232
	.byte	0x13
	.byte	0x97
	.byte	0x39
	.long	0x262f0
	.uleb128 0x74
	.uleb128 0x89
	.ascii "__count\0"
	.byte	0x13
	.byte	0x9c
	.byte	0xf
	.long	0xe4f
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	0x23b0d
	.long	0x23b6f
	.quad	.LFB11879
	.quad	.LFE11879-.LFB11879
	.uleb128 0x1
	.byte	0x9c
	.long	0x23bb6
	.uleb128 0x8
	.long	0x23b1b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x23b24
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x8
	.long	0x23b30
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x75
	.long	0x23b3c
	.long	0x23b96
	.uleb128 0x6d
	.long	0x23b3d
	.byte	0
	.uleb128 0x88
	.long	0x23b3c
	.quad	.LBB250
	.quad	.LBE250-.LBB250
	.uleb128 0x41
	.long	0x23b3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x140b9
	.long	0x23bd5
	.quad	.LFB11877
	.quad	.LFE11877-.LFB11877
	.uleb128 0x1
	.byte	0x9c
	.long	0x23bea
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f4d7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x57
	.long	0x1f4dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x13e97
	.long	0x23c09
	.quad	.LFB11878
	.quad	.LFE11878-.LFB11878
	.uleb128 0x1
	.byte	0x9c
	.long	0x23c1e
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f4be
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x57
	.long	0x1f4c3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x1e
	.long	0x1484d
	.uleb128 0x29
	.long	0x18eaf
	.quad	.LFB11875
	.quad	.LFE11875-.LFB11875
	.uleb128 0x1
	.byte	0x9c
	.long	0x23c57
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x18f02
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x14
	.byte	0x68
	.byte	0x10
	.long	0x18f02
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x6
	.long	0x110ed
	.uleb128 0x4
	.long	0x23c57
	.uleb128 0x14
	.long	0x1103e
	.long	0x23c89
	.quad	.LFB11874
	.quad	.LFE11874-.LFB11874
	.uleb128 0x1
	.byte	0x9c
	.long	0x23ca5
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x79ab
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x23c5c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF215
	.byte	0x11
	.byte	0x80
	.byte	0x12
	.long	0x1bd3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x12aa7
	.long	0x23cc4
	.quad	.LFB11873
	.quad	.LFE11873-.LFB11873
	.uleb128 0x1
	.byte	0x9c
	.long	0x23cd1
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f3c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x11322
	.long	0x23cf0
	.quad	.LFB11872
	.quad	.LFE11872-.LFB11872
	.uleb128 0x1
	.byte	0x9c
	.long	0x23cfd
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f38d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x111f9
	.long	0x23d0b
	.byte	0x2
	.long	0x23d21
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f38d
	.uleb128 0x3c
	.ascii "__p\0"
	.byte	0x11
	.byte	0xa8
	.byte	0x1f
	.long	0x11257
	.byte	0
	.uleb128 0x21
	.long	0x23cfd
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_\0"
	.long	0x23d82
	.quad	.LFB11870
	.quad	.LFE11870-.LFB11870
	.uleb128 0x1
	.byte	0x9c
	.long	0x23d93
	.uleb128 0x8
	.long	0x23d0b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x23d14
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x103b6
	.long	0x23daa
	.byte	0x2
	.long	0x23db4
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ee20
	.byte	0
	.uleb128 0x21
	.long	0x23d93
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv\0"
	.long	0x23e31
	.quad	.LFB11867
	.quad	.LFE11867-.LFB11867
	.uleb128 0x1
	.byte	0x9c
	.long	0x23e3a
	.uleb128 0x49
	.secrel32	.LASF132
	.long	0x1ab64
	.uleb128 0x8
	.long	0x23daa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1e
	.long	0x147e3
	.uleb128 0x7
	.long	0x1ed80
	.uleb128 0x29
	.long	0x18f0d
	.quad	.LFB11864
	.quad	.LFE11864-.LFB11864
	.uleb128 0x1
	.byte	0x9c
	.long	0x23e78
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x23e3f
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x14
	.byte	0x68
	.byte	0x10
	.long	0x23e3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x109f6
	.long	0x23e97
	.quad	.LFB11863
	.quad	.LFE11863-.LFB11863
	.uleb128 0x1
	.byte	0x9c
	.long	0x23ea4
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1ee89
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1e
	.long	0xe8dd
	.uleb128 0x7
	.long	0xea8c
	.uleb128 0x29
	.long	0x18f7d
	.quad	.LFB11862
	.quad	.LFE11862-.LFB11862
	.uleb128 0x1
	.byte	0x9c
	.long	0x23ee2
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xe8dd
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x14
	.byte	0x4d
	.byte	0x38
	.long	0x23ea9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xee49
	.long	0x23f01
	.quad	.LFB11861
	.quad	.LFE11861-.LFB11861
	.uleb128 0x1
	.byte	0x9c
	.long	0x23f0e
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1ee39
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xefae
	.long	0x23f2d
	.quad	.LFB11860
	.quad	.LFE11860-.LFB11860
	.uleb128 0x1
	.byte	0x9c
	.long	0x23f49
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1ee39
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x27
	.ascii "__p\0"
	.byte	0x11
	.byte	0xd1
	.byte	0xa
	.long	0xec6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x14
	.long	0xef38
	.long	0x23f68
	.quad	.LFB11859
	.quad	.LFE11859-.LFB11859
	.uleb128 0x1
	.byte	0x9c
	.long	0x23f97
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1ee39
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x11
	.byte	0xc6
	.byte	0x1a
	.long	0xec6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x27
	.ascii "__old_p\0"
	.byte	0x11
	.byte	0xc8
	.byte	0x10
	.long	0xec78
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x6
	.long	0xea37
	.uleb128 0x4
	.long	0x23f97
	.uleb128 0x14
	.long	0xe965
	.long	0x23fc9
	.quad	.LFB11858
	.quad	.LFE11858-.LFB11858
	.uleb128 0x1
	.byte	0x9c
	.long	0x23fe5
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1e7e6
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x23f9c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF215
	.byte	0x11
	.byte	0x80
	.byte	0x12
	.long	0x1ed8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x10a74
	.long	0x24004
	.quad	.LFB11857
	.quad	.LFE11857-.LFB11857
	.uleb128 0x1
	.byte	0x9c
	.long	0x24011
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1ee75
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xed64
	.long	0x24030
	.quad	.LFB11856
	.quad	.LFE11856-.LFB11856
	.uleb128 0x1
	.byte	0x9c
	.long	0x2403d
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1ee39
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xebfa
	.long	0x2404b
	.byte	0x2
	.long	0x24061
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ee39
	.uleb128 0x3c
	.ascii "__p\0"
	.byte	0x11
	.byte	0xa8
	.byte	0x1f
	.long	0xec6c
	.byte	0
	.uleb128 0x21
	.long	0x2403d
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_\0"
	.long	0x240d6
	.quad	.LFB11854
	.quad	.LFE11854-.LFB11854
	.uleb128 0x1
	.byte	0x9c
	.long	0x240e7
	.uleb128 0x8
	.long	0x2404b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x24054
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0xb1ec
	.quad	.LFB11835
	.quad	.LFE11835-.LFB11835
	.uleb128 0x1
	.byte	0x9c
	.long	0x24130
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xc4
	.byte	0x2a
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x19
	.secrel32	.LASF224
	.byte	0xe
	.byte	0xc6
	.byte	0x25
	.long	0x8b09
	.byte	0
	.uleb128 0x17
	.long	0xbbfe
	.quad	.LFB11833
	.quad	.LFE11833-.LFB11833
	.uleb128 0x1
	.byte	0x9c
	.long	0x2419e
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0x88a3
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.uleb128 0x1c
	.secrel32	.LASF230
	.byte	0xe
	.word	0x284
	.byte	0x32
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF231
	.byte	0xe
	.word	0x285
	.byte	0x24
	.long	0x1be97
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x22
	.ascii "__cd\0"
	.byte	0xe
	.word	0x289
	.byte	0x34
	.long	0xcf36
	.byte	0
	.uleb128 0x17
	.long	0xbd0e
	.quad	.LFB11829
	.quad	.LFE11829-.LFB11829
	.uleb128 0x1
	.byte	0x9c
	.long	0x2420c
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0xcbbb
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcb3f
	.uleb128 0x1c
	.secrel32	.LASF230
	.byte	0xe
	.word	0x284
	.byte	0x32
	.long	0x1beba
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF231
	.byte	0xe
	.word	0x285
	.byte	0x24
	.long	0x1be97
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x22
	.ascii "__cd\0"
	.byte	0xe
	.word	0x289
	.byte	0x34
	.long	0x14790
	.byte	0
	.uleb128 0x17
	.long	0xbe1e
	.quad	.LFB11828
	.quad	.LFE11828-.LFB11828
	.uleb128 0x1
	.byte	0x9c
	.long	0x24252
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x99b1
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcbbb
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x34
	.long	0x1beba
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xa7
	.long	0xa540
	.quad	.LFB11827
	.quad	.LFE11827-.LFB11827
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x17
	.long	0xb06f
	.quad	.LFB11825
	.quad	.LFE11825-.LFB11825
	.uleb128 0x1
	.byte	0x9c
	.long	0x242b3
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcbbb
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xdd
	.byte	0x2a
	.long	0x1beba
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x19
	.secrel32	.LASF224
	.byte	0xe
	.byte	0xdf
	.byte	0x25
	.long	0x8b09
	.byte	0
	.uleb128 0x17
	.long	0xbf4a
	.quad	.LFB11816
	.quad	.LFE11816-.LFB11816
	.uleb128 0x1
	.byte	0x9c
	.long	0x242f9
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x8950
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcb3f
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x34
	.long	0x1be97
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xaefe
	.quad	.LFB11815
	.quad	.LFE11815-.LFB11815
	.uleb128 0x1
	.byte	0x9c
	.long	0x24342
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xd0
	.byte	0x2a
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x19
	.secrel32	.LASF224
	.byte	0xe
	.byte	0xd2
	.byte	0x25
	.long	0x9b64
	.byte	0
	.uleb128 0x1e
	.long	0x145b2
	.uleb128 0x7
	.long	0x79b8
	.uleb128 0x29
	.long	0x1903b
	.quad	.LFB11814
	.quad	.LFE11814-.LFB11814
	.uleb128 0x1
	.byte	0x9c
	.long	0x24380
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x24347
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x14
	.byte	0x68
	.byte	0x10
	.long	0x24347
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1bd9
	.long	0x2438e
	.byte	0x2
	.long	0x243a1
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b7c3
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x21
	.long	0x24380
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev\0"
	.long	0x243fa
	.quad	.LFB11808
	.quad	.LFE11808-.LFB11808
	.uleb128 0x1
	.byte	0x9c
	.long	0x24403
	.uleb128 0x8
	.long	0x2438e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x4e
	.long	0x17ed
	.long	0x24422
	.quad	.LFB11802
	.quad	.LFE11802-.LFB11802
	.uleb128 0x1
	.byte	0x9c
	.long	0x2442f
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b7af
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xc086
	.quad	.LFB11631
	.quad	.LFE11631-.LFB11631
	.uleb128 0x1
	.byte	0x9c
	.long	0x2449d
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0x88a3
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0x88a3
	.uleb128 0x1c
	.secrel32	.LASF230
	.byte	0xe
	.word	0x284
	.byte	0x32
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF231
	.byte	0xe
	.word	0x285
	.byte	0x24
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x22
	.ascii "__cd\0"
	.byte	0xe
	.word	0x289
	.byte	0x34
	.long	0xcab6
	.byte	0
	.uleb128 0x4e
	.long	0xa942
	.long	0x244bc
	.quad	.LFB11630
	.quad	.LFE11630-.LFB11630
	.uleb128 0x1
	.byte	0x9c
	.long	0x244c9
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f59e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xad6c
	.long	0x244e9
	.byte	0x2
	.long	0x24500
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0x88a3
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f58a
	.uleb128 0x2f
	.ascii "__d\0"
	.byte	0xe
	.word	0x201
	.byte	0x38
	.long	0x1be51
	.byte	0
	.uleb128 0x21
	.long	0x244c9
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IxS1_ILx1ELx1000000000EEvEERKNS0_IT_T0_EE\0"
	.long	0x24587
	.quad	.LFB11629
	.quad	.LFE11629-.LFB11629
	.uleb128 0x1
	.byte	0x9c
	.long	0x24598
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0x88a3
	.uleb128 0x8
	.long	0x244e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x244f2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x573d
	.long	0x245b7
	.quad	.LFB11626
	.quad	.LFE11626-.LFB11626
	.uleb128 0x1
	.byte	0x9c
	.long	0x2460e
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bcc2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__i\0"
	.byte	0xb
	.word	0x162
	.byte	0x1c
	.long	0x554f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x68
	.long	0x23551
	.quad	.LBB242
	.quad	.LBE242-.LBB242
	.byte	0xb
	.word	0x164
	.byte	0x7
	.uleb128 0x8
	.long	0x23575
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x8
	.long	0x23568
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.uleb128 0x8
	.long	0x2355f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x41
	.long	0x23582
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x4e
	.long	0x5a78
	.long	0x2462d
	.quad	.LFB11625
	.quad	.LFE11625-.LFB11625
	.uleb128 0x1
	.byte	0x9c
	.long	0x2464a
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bcc2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__i\0"
	.byte	0xb
	.word	0x1a0
	.byte	0x1d
	.long	0x554f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x56ca
	.long	0x24669
	.quad	.LFB11624
	.quad	.LFE11624-.LFB11624
	.uleb128 0x1
	.byte	0x9c
	.long	0x246a8
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bcdb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x68
	.long	0x2358f
	.quad	.LBB240
	.quad	.LBE240-.LBB240
	.byte	0xb
	.word	0x15c
	.byte	0x14
	.uleb128 0x8
	.long	0x235a6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x8
	.long	0x2359d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x41
	.long	0x235b3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0x805d
	.long	0x246c4
	.byte	0x2
	.long	0x246eb
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x2674c
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bd3f
	.uleb128 0x3c
	.ascii "__f\0"
	.byte	0xd
	.byte	0x7e
	.byte	0x1a
	.long	0x176f3
	.uleb128 0x73
	.byte	0xd
	.byte	0x7e
	.byte	0x26
	.uleb128 0x74
	.uleb128 0xf0
	.secrel32	.LASF233
	.byte	0x89
	.long	0x1ac37
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	0x246a8
	.long	0x24718
	.quad	.LFB11622
	.quad	.LFE11622-.LFB11622
	.uleb128 0x1
	.byte	0x9c
	.long	0x2474f
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x2674c
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x8
	.long	0x246c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x246cd
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x73
	.byte	0xd
	.byte	0x7e
	.byte	0x26
	.uleb128 0x75
	.long	0x246dd
	.long	0x2473b
	.uleb128 0x6d
	.long	0x246de
	.byte	0
	.uleb128 0xf1
	.long	0x246dd
	.secrel32	.LLRL2
	.uleb128 0x41
	.long	0x246de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x8b
	.ascii "WINDOWGraphicsOverlay\0"
	.byte	0x10
	.word	0x1ea
	.byte	0xb
	.long	0x24947
	.uleb128 0x64
	.ascii "blitOverlay<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x10
	.word	0x1f7
	.byte	0x7
	.long	0x1ab64
	.long	0x247e6
	.uleb128 0xa
	.ascii "C\0"
	.long	0x262f0
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x1f540
	.uleb128 0x1
	.long	0x1f57b
	.uleb128 0x1
	.long	0x1bc9f
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.byte	0
	.uleb128 0x26
	.ascii "CreateWindowOverlay\0"
	.byte	0x10
	.word	0x2f1
	.byte	0x8
	.ascii "_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj\0"
	.long	0x4b0
	.long	0x24852
	.uleb128 0x1
	.long	0x1ee9d
	.uleb128 0x1
	.long	0x1a9a9
	.uleb128 0x1
	.long	0x1a9a9
	.byte	0
	.uleb128 0xa2
	.ascii "ShowErrorMessage\0"
	.byte	0x10
	.word	0x2e9
	.byte	0x7
	.ascii "_ZN21WINDOWGraphicsOverlay16ShowErrorMessageEPKc\0"
	.long	0x248a4
	.uleb128 0x1
	.long	0x19808
	.byte	0
	.uleb128 0x26
	.ascii "WindowProc\0"
	.byte	0x10
	.word	0x262
	.byte	0x13
	.ascii "_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx\0"
	.long	0x19d7f
	.long	0x24904
	.uleb128 0x1
	.long	0x19e13
	.uleb128 0x1
	.long	0x52c
	.uleb128 0x1
	.long	0x19d61
	.uleb128 0x1
	.long	0x19d70
	.byte	0
	.uleb128 0x14a
	.ascii "ErrorHandle\0"
	.byte	0x10
	.word	0x1ec
	.byte	0xe
	.ascii "_ZN21WINDOWGraphicsOverlay11ErrorHandleEl\0"
	.uleb128 0x1
	.long	0x666
	.byte	0
	.byte	0
	.uleb128 0x17
	.long	0x2476f
	.quad	.LFB11613
	.quad	.LFE11613-.LFB11613
	.uleb128 0x1
	.byte	0x9c
	.long	0x24d67
	.uleb128 0xa
	.ascii "C\0"
	.long	0x262f0
	.uleb128 0x1c
	.secrel32	.LASF171
	.byte	0x10
	.word	0x1f7
	.byte	0x18
	.long	0x19e13
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF234
	.byte	0x10
	.word	0x1f7
	.byte	0x2f
	.long	0x1f540
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "cam\0"
	.byte	0x10
	.word	0x1f7
	.byte	0x42
	.long	0x1f57b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1c
	.secrel32	.LASF235
	.byte	0x10
	.word	0x1f7
	.byte	0x5a
	.long	0x1bc9f
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1c
	.secrel32	.LASF236
	.byte	0x10
	.word	0x1f7
	.byte	0x6c
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x11
	.ascii "EndX\0"
	.byte	0x10
	.word	0x1f7
	.byte	0x7d
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x2c
	.secrel32	.LASF237
	.byte	0x10
	.word	0x1f9
	.byte	0xb
	.long	0x1ee9d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2c
	.secrel32	.LASF205
	.byte	0x10
	.word	0x1fb
	.byte	0x9
	.long	0x4ec
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2c
	.secrel32	.LASF238
	.byte	0x10
	.word	0x1fd
	.byte	0xe
	.long	0xa76c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x48
	.quad	.LBB230
	.quad	.LBE230-.LBB230
	.long	0x24c18
	.uleb128 0x2c
	.secrel32	.LASF239
	.byte	0x10
	.word	0x201
	.byte	0x9
	.long	0x9393
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2c
	.secrel32	.LASF240
	.byte	0x10
	.word	0x255
	.byte	0x9
	.long	0x9393
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x12
	.ascii "elapsed\0"
	.byte	0x10
	.word	0x256
	.byte	0xc
	.long	0x8950
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x34
	.quad	.LBB231
	.quad	.LBE231-.LBB231
	.uleb128 0x12
	.ascii "j\0"
	.byte	0x10
	.word	0x203
	.byte	0xd
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x34
	.quad	.LBB233
	.quad	.LBE233-.LBB233
	.uleb128 0x12
	.ascii "i\0"
	.byte	0x10
	.word	0x205
	.byte	0x11
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x34
	.quad	.LBB234
	.quad	.LBE234-.LBB234
	.uleb128 0x12
	.ascii "dir\0"
	.byte	0x10
	.word	0x207
	.byte	0xc
	.long	0x1e68c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x12
	.ascii "org\0"
	.byte	0x10
	.word	0x208
	.byte	0xc
	.long	0x1e68c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x12
	.ascii "ix\0"
	.byte	0x10
	.word	0x20a
	.byte	0xa
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x12
	.ascii "iy\0"
	.byte	0x10
	.word	0x20b
	.byte	0xa
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x12
	.ascii "iz\0"
	.byte	0x10
	.word	0x20c
	.byte	0xa
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x12
	.ascii "stepX\0"
	.byte	0x10
	.word	0x214
	.byte	0xa
	.long	0x184
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x12
	.ascii "stepY\0"
	.byte	0x10
	.word	0x215
	.byte	0xa
	.long	0x184
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x12
	.ascii "stepZ\0"
	.byte	0x10
	.word	0x216
	.byte	0xa
	.long	0x184
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x12
	.ascii "invDx\0"
	.byte	0x10
	.word	0x21a
	.byte	0xc
	.long	0x4ec
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x12
	.ascii "invDy\0"
	.byte	0x10
	.word	0x21b
	.byte	0x12
	.long	0x4ec
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x12
	.ascii "invDz\0"
	.byte	0x10
	.word	0x21c
	.byte	0x12
	.long	0x4ec
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x12
	.ascii "firstT\0"
	.byte	0x10
	.word	0x21e
	.byte	0xb
	.long	0x24c18
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x12
	.ascii "tMaxX\0"
	.byte	0x10
	.word	0x227
	.byte	0xc
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x12
	.ascii "tMaxY\0"
	.byte	0x10
	.word	0x228
	.byte	0x12
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x12
	.ascii "tMaxZ\0"
	.byte	0x10
	.word	0x229
	.byte	0x12
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x12
	.ascii "maxDist\0"
	.byte	0x10
	.word	0x22b
	.byte	0x12
	.long	0x4f5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x12
	.ascii "traveled\0"
	.byte	0x10
	.word	0x22c
	.byte	0x12
	.long	0x4ec
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x12
	.ascii "hit\0"
	.byte	0x10
	.word	0x22d
	.byte	0x12
	.long	0x1ab64
	.uleb128 0x3
	.byte	0x91
	.sleb128 -69
	.uleb128 0x12
	.ascii "mat\0"
	.byte	0x10
	.word	0x22e
	.byte	0x17
	.long	0x1e442
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x34
	.quad	.LBB235
	.quad	.LBE235-.LBB235
	.uleb128 0x12
	.ascii "flat\0"
	.byte	0x10
	.word	0x232
	.byte	0x14
	.long	0x184
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xf2
	.byte	0x8
	.word	0x21e
	.byte	0x14
	.long	0x24d59
	.uleb128 0x4f
	.secrel32	.LASF226
	.long	0x24c2f
	.long	0x24c44
	.uleb128 0x2
	.long	0x24c34
	.uleb128 0x6
	.long	0x24c18
	.uleb128 0x1
	.long	0x24c3e
	.uleb128 0x1e
	.long	0x24c18
	.byte	0
	.uleb128 0x4f
	.secrel32	.LASF226
	.long	0x24c51
	.long	0x24c66
	.uleb128 0x2
	.long	0x24c34
	.uleb128 0x1
	.long	0x24c5b
	.uleb128 0x7
	.long	0x24c60
	.uleb128 0x4
	.long	0x24c18
	.byte	0
	.uleb128 0xc8
	.secrel32	.LASF226
	.long	0x24c74
	.long	0x24c7a
	.uleb128 0x2
	.long	0x24c34
	.byte	0
	.uleb128 0x4f
	.secrel32	.LASF227
	.long	0x24c87
	.long	0x24c92
	.uleb128 0x2
	.long	0x24c34
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x1d
	.ascii "__cellSize\0"
	.byte	0x10
	.word	0x222
	.byte	0x31
	.long	0x1bd2b
	.byte	0
	.uleb128 0xef
	.secrel32	.LASF4
	.long	0x4ec
	.long	0x24cd1
	.quad	.LFB11614
	.quad	.LFE11614-.LFB11614
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x6
	.long	0x24c60
	.uleb128 0x4
	.long	0x24cc7
	.uleb128 0xe
	.secrel32	.LASF228
	.long	0x24ccc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "posComponent\0"
	.byte	0x10
	.word	0x21e
	.byte	0x1e
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "dirComponent\0"
	.byte	0x10
	.word	0x21e
	.byte	0x32
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "step\0"
	.byte	0x10
	.word	0x21e
	.byte	0x44
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x59
	.secrel32	.LASF205
	.long	0x1bd2b
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.uleb128 0x34
	.quad	.LBB229
	.quad	.LBE229-.LBB229
	.uleb128 0x12
	.ascii "voxelBorder\0"
	.byte	0x10
	.word	0x221
	.byte	0x16
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LVL45
	.long	0x1ffd7
	.byte	0
	.uleb128 0x15
	.long	0x8088
	.long	0x24d83
	.byte	0x2
	.long	0x24daa
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x26556
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bd3f
	.uleb128 0x3c
	.ascii "__f\0"
	.byte	0xd
	.byte	0x7e
	.byte	0x1a
	.long	0x17695
	.uleb128 0x73
	.byte	0xd
	.byte	0x7e
	.byte	0x26
	.uleb128 0x74
	.uleb128 0xf0
	.secrel32	.LASF233
	.byte	0x89
	.long	0x1ac37
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	0x24d67
	.long	0x24dd7
	.quad	.LFB11611
	.quad	.LFE11611-.LFB11611
	.uleb128 0x1
	.byte	0x9c
	.long	0x24e0e
	.uleb128 0x3
	.secrel32	.LASF72
	.long	0x26556
	.uleb128 0x36
	.secrel32	.LASF73
	.uleb128 0x8
	.long	0x24d83
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x24d8c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x73
	.byte	0xd
	.byte	0x7e
	.byte	0x26
	.uleb128 0x75
	.long	0x24d9c
	.long	0x24dfa
	.uleb128 0x6d
	.long	0x24d9d
	.byte	0
	.uleb128 0xf1
	.long	0x24d9c
	.secrel32	.LLRL1
	.uleb128 0x41
	.long	0x24d9d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x1ec96
	.long	0x24e34
	.quad	.LFB11592
	.quad	.LFE11592-.LFB11592
	.uleb128 0x1
	.byte	0x9c
	.long	0x24f96
	.uleb128 0xa
	.ascii "C\0"
	.long	0x262f0
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1eea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF171
	.byte	0x10
	.word	0x123
	.byte	0x29
	.long	0x19e13
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1c
	.secrel32	.LASF241
	.byte	0x10
	.word	0x123
	.byte	0x48
	.long	0x1bcea
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1c
	.secrel32	.LASF234
	.byte	0x10
	.word	0x123
	.byte	0x63
	.long	0x1f540
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1c
	.secrel32	.LASF235
	.byte	0x10
	.word	0x123
	.byte	0x81
	.long	0x1bc9f
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x11
	.ascii "x1\0"
	.byte	0x10
	.word	0x123
	.byte	0x93
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x11
	.ascii "x2\0"
	.byte	0x10
	.word	0x123
	.byte	0xa0
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 48
	.uleb128 0x11
	.ascii "y1\0"
	.byte	0x10
	.word	0x123
	.byte	0xad
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 56
	.uleb128 0x11
	.ascii "y2\0"
	.byte	0x10
	.word	0x123
	.byte	0xba
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 64
	.uleb128 0x11
	.ascii "z1\0"
	.byte	0x10
	.word	0x123
	.byte	0xc7
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 72
	.uleb128 0x11
	.ascii "z2\0"
	.byte	0x10
	.word	0x123
	.byte	0xd4
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 80
	.uleb128 0x2c
	.secrel32	.LASF238
	.byte	0x10
	.word	0x125
	.byte	0xe
	.long	0xa76c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x34
	.quad	.LBB218
	.quad	.LBE218-.LBB218
	.uleb128 0x2c
	.secrel32	.LASF239
	.byte	0x10
	.word	0x12a
	.byte	0x9
	.long	0x9393
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2c
	.secrel32	.LASF240
	.byte	0x10
	.word	0x140
	.byte	0x9
	.long	0x9393
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x12
	.ascii "elapsed\0"
	.byte	0x10
	.word	0x141
	.byte	0xc
	.long	0x8950
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x34
	.quad	.LBB219
	.quad	.LBE219-.LBB219
	.uleb128 0x12
	.ascii "z\0"
	.byte	0x10
	.word	0x12c
	.byte	0x11
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x34
	.quad	.LBB221
	.quad	.LBE221-.LBB221
	.uleb128 0x12
	.ascii "y\0"
	.byte	0x10
	.word	0x130
	.byte	0x12
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x34
	.quad	.LBB223
	.quad	.LBE223-.LBB223
	.uleb128 0x12
	.ascii "x\0"
	.byte	0x10
	.word	0x132
	.byte	0x13
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0xa6f0
	.long	0x24fad
	.byte	0x2
	.long	0x24fc4
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x184
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1beb5
	.uleb128 0x53
	.secrel32	.LASF229
	.byte	0xe
	.word	0x1f9
	.byte	0x2d
	.long	0x1b6e7
	.byte	0
	.uleb128 0x42
	.long	0x24f96
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_\0"
	.long	0x25025
	.quad	.LFB11595
	.quad	.LFE11595-.LFB11595
	.uleb128 0x1
	.byte	0x9c
	.long	0x25036
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x184
	.uleb128 0x8
	.long	0x24fad
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x24fb6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x129d4
	.long	0x25055
	.quad	.LFB11591
	.quad	.LFE11591-.LFB11591
	.uleb128 0x1
	.byte	0x9c
	.long	0x25072
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f3d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__i\0"
	.byte	0x11
	.word	0x2cd
	.byte	0x19
	.long	0xe3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x1409c
	.long	0x25080
	.byte	0x2
	.long	0x250a1
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f4d7
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.uleb128 0x74
	.uleb128 0xa6
	.secrel32	.LASF215
	.word	0x29b
	.long	0x1f450
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	0x25072
	.long	0x250c0
	.quad	.LFB11589
	.quad	.LFE11589-.LFB11589
	.uleb128 0x1
	.byte	0x9c
	.long	0x250f7
	.uleb128 0x8
	.long	0x25080
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x75
	.long	0x25092
	.long	0x250d7
	.uleb128 0x6d
	.long	0x25093
	.byte	0
	.uleb128 0x88
	.long	0x25092
	.quad	.LBB216
	.quad	.LBE216-.LBB216
	.uleb128 0x41
	.long	0x25093
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0x14380
	.long	0x25105
	.byte	0x2
	.long	0x2512b
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f536
	.uleb128 0x3c
	.ascii "__count\0"
	.byte	0x13
	.byte	0xe7
	.byte	0x19
	.long	0x2932
	.uleb128 0x5a
	.secrel32	.LASF232
	.byte	0x13
	.byte	0xe7
	.byte	0x2f
	.long	0x262f0
	.byte	0
	.uleb128 0x32
	.long	0x250f7
	.long	0x2514a
	.quad	.LFB11586
	.quad	.LFE11586-.LFB11586
	.uleb128 0x1
	.byte	0x9c
	.long	0x25163
	.uleb128 0x8
	.long	0x25105
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2510e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x8
	.long	0x2511e
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x190ac
	.quad	.LFB11584
	.quad	.LFE11584-.LFB11584
	.uleb128 0x1
	.byte	0x9c
	.long	0x25198
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1e2
	.uleb128 0x11
	.ascii "__x\0"
	.byte	0x3
	.word	0x500
	.byte	0xe
	.long	0x1e2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x128c5
	.long	0x251a6
	.byte	0x2
	.long	0x251c7
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f3c4
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.uleb128 0x74
	.uleb128 0xa6
	.secrel32	.LASF215
	.word	0x29b
	.long	0x1f342
	.byte	0
	.byte	0
	.uleb128 0x21
	.long	0x25198
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev\0"
	.long	0x25220
	.quad	.LFB11583
	.quad	.LFE11583-.LFB11583
	.uleb128 0x1
	.byte	0x9c
	.long	0x25257
	.uleb128 0x8
	.long	0x251a6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x75
	.long	0x251b8
	.long	0x25237
	.uleb128 0x6d
	.long	0x251b9
	.byte	0
	.uleb128 0x88
	.long	0x251b8
	.quad	.LBB213
	.quad	.LBE213-.LBB213
	.uleb128 0x41
	.long	0x251b9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0x12d88
	.long	0x25277
	.byte	0x2
	.long	0x2528e
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1bd3a
	.uleb128 0x60
	.ascii "_Vp\0"
	.long	0x10fd9
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f3c4
	.uleb128 0x2f
	.ascii "__p\0"
	.byte	0x11
	.word	0x256
	.byte	0x11
	.long	0x1bd3a
	.byte	0
	.uleb128 0x21
	.long	0x25257
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_\0"
	.long	0x25305
	.quad	.LFB11580
	.quad	.LFE11580-.LFB11580
	.uleb128 0x1
	.byte	0x9c
	.long	0x25316
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1bd3a
	.uleb128 0x60
	.ascii "_Vp\0"
	.long	0x10fd9
	.uleb128 0x8
	.long	0x25277
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x25280
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x58
	.long	0x12731
	.byte	0x11
	.byte	0xe9
	.byte	0x28
	.long	0x25326
	.long	0x25335
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f3b0
	.uleb128 0x1
	.long	0x11257
	.byte	0
	.uleb128 0x21
	.long	0x25316
	.ascii "_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_\0"
	.long	0x253ba
	.quad	.LFB11578
	.quad	.LFE11578-.LFB11578
	.uleb128 0x1
	.byte	0x9c
	.long	0x253cb
	.uleb128 0x8
	.long	0x25326
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2532f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x10df5
	.long	0x253e2
	.byte	0x2
	.long	0x253ec
	.uleb128 0x5e
	.secrel32	.LASF83
	.long	0xe8dd
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ee75
	.byte	0
	.uleb128 0x21
	.long	0x253cb
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv\0"
	.long	0x25468
	.quad	.LFB11574
	.quad	.LFE11574-.LFB11574
	.uleb128 0x1
	.byte	0x9c
	.long	0x25471
	.uleb128 0x5e
	.secrel32	.LASF83
	.long	0xe8dd
	.uleb128 0x8
	.long	0x253e2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x58
	.long	0x105ba
	.byte	0x11
	.byte	0xe9
	.byte	0x28
	.long	0x25481
	.long	0x2548b
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ee5c
	.byte	0
	.uleb128 0x21
	.long	0x25471
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv\0"
	.long	0x25521
	.quad	.LFB11572
	.quad	.LFE11572-.LFB11572
	.uleb128 0x1
	.byte	0x9c
	.long	0x2552a
	.uleb128 0x8
	.long	0x25481
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xeb90
	.long	0x25538
	.byte	0x2
	.long	0x25542
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ee39
	.byte	0
	.uleb128 0x21
	.long	0x2552a
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev\0"
	.long	0x255b4
	.quad	.LFB11569
	.quad	.LFE11569-.LFB11569
	.uleb128 0x1
	.byte	0x9c
	.long	0x255bd
	.uleb128 0x8
	.long	0x25538
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc3
	.ascii "D2D1CreateFactory<ID2D1Factory>\0"
	.byte	0xf
	.word	0x9d8
	.byte	0x9
	.ascii "_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_\0"
	.long	0x666
	.quad	.LFB11564
	.quad	.LFE11564-.LFB11564
	.uleb128 0x1
	.byte	0x9c
	.long	0x2566d
	.uleb128 0xa
	.ascii "Factory\0"
	.long	0x1d275
	.uleb128 0x1c
	.secrel32	.LASF242
	.byte	0xf
	.word	0x9d8
	.byte	0x2d
	.long	0x1cf9f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "factory\0"
	.byte	0xf
	.word	0x9d8
	.byte	0x44
	.long	0x2566d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x6
	.long	0x25672
	.uleb128 0x6
	.long	0x1d275
	.uleb128 0x4
	.long	0x25672
	.uleb128 0xc3
	.ascii "swprintf_s<512>\0"
	.byte	0x16
	.word	0x335
	.byte	0x3
	.ascii "_Z10swprintf_sILy512EEiRAT__wPKwz\0"
	.long	0x184
	.quad	.LFB11563
	.quad	.LFE11563-.LFB11563
	.uleb128 0x1
	.byte	0x9c
	.long	0x25729
	.uleb128 0x14b
	.ascii "__size\0"
	.long	0xf1
	.word	0x200
	.uleb128 0x11
	.ascii "_Dst\0"
	.byte	0x16
	.word	0x335
	.byte	0x3
	.long	0x2573b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "_Format\0"
	.byte	0x16
	.word	0x335
	.byte	0x3
	.long	0x78d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x52
	.uleb128 0x12
	.ascii "__vaargs\0"
	.byte	0x16
	.word	0x335
	.byte	0x3
	.long	0xd2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2c
	.secrel32	.LASF172
	.byte	0x16
	.word	0x335
	.byte	0x3
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x77
	.long	0x1cd
	.long	0x2573b
	.uleb128 0x14c
	.long	0xf1
	.word	0x1ff
	.byte	0
	.uleb128 0x7
	.long	0x25729
	.uleb128 0x17
	.long	0x1912e
	.quad	.LFB11562
	.quad	.LFE11562-.LFB11562
	.uleb128 0x1
	.byte	0x9c
	.long	0x25794
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x1ed80
	.uleb128 0x18
	.ascii "__a\0"
	.byte	0x14
	.byte	0xc4
	.byte	0xf
	.long	0x23e3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x14
	.byte	0xc4
	.byte	0x19
	.long	0x23e3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x27
	.ascii "__tmp\0"
	.byte	0x14
	.byte	0xcc
	.byte	0xb
	.long	0x1ed80
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x14
	.long	0x10979
	.long	0x257b3
	.quad	.LFB11561
	.quad	.LFE11561-.LFB11561
	.uleb128 0x1
	.byte	0x9c
	.long	0x257d0
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1ee89
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__i\0"
	.byte	0x11
	.word	0x2cd
	.byte	0x19
	.long	0xe3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0xecef
	.long	0x257ef
	.quad	.LFB11560
	.quad	.LFE11560-.LFB11560
	.uleb128 0x1
	.byte	0x9c
	.long	0x2580b
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1ee39
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__u\0"
	.byte	0x11
	.byte	0xb5
	.byte	0x34
	.long	0x1ee3e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x1082e
	.long	0x25819
	.byte	0x2
	.long	0x2583a
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ee75
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.uleb128 0x74
	.uleb128 0xa6
	.secrel32	.LASF215
	.word	0x29b
	.long	0x1edee
	.byte	0
	.byte	0
	.uleb128 0x21
	.long	0x2580b
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev\0"
	.long	0x258a7
	.quad	.LFB11559
	.quad	.LFE11559-.LFB11559
	.uleb128 0x1
	.byte	0x9c
	.long	0x258de
	.uleb128 0x8
	.long	0x25819
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x75
	.long	0x2582b
	.long	0x258be
	.uleb128 0x6d
	.long	0x2582c
	.byte	0
	.uleb128 0x88
	.long	0x2582b
	.quad	.LBB206
	.quad	.LBE206-.LBB206
	.uleb128 0x41
	.long	0x2582c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0x10e6a
	.long	0x258fe
	.byte	0x2
	.long	0x25915
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1ed8f
	.uleb128 0x60
	.ascii "_Vp\0"
	.long	0xe8dd
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ee75
	.uleb128 0x2f
	.ascii "__p\0"
	.byte	0x11
	.word	0x256
	.byte	0x11
	.long	0x1ed8f
	.byte	0
	.uleb128 0x21
	.long	0x258de
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_\0"
	.long	0x259a0
	.quad	.LFB11556
	.quad	.LFE11556-.LFB11556
	.uleb128 0x1
	.byte	0x9c
	.long	0x259b1
	.uleb128 0xa
	.ascii "_Up\0"
	.long	0x1ed8f
	.uleb128 0x60
	.ascii "_Vp\0"
	.long	0xe8dd
	.uleb128 0x8
	.long	0x258fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x25907
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x58
	.long	0x10645
	.byte	0x11
	.byte	0xe9
	.byte	0x28
	.long	0x259c1
	.long	0x259d0
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ee5c
	.uleb128 0x1
	.long	0xec6c
	.byte	0
	.uleb128 0x21
	.long	0x259b1
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_\0"
	.long	0x25a69
	.quad	.LFB11554
	.quad	.LFE11554-.LFB11554
	.uleb128 0x1
	.byte	0x9c
	.long	0x25a7a
	.uleb128 0x8
	.long	0x259c1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x259ca
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x6c
	.long	0x1e0b8
	.long	0x25ac7
	.uleb128 0xa
	.ascii "T\0"
	.long	0x4ec
	.uleb128 0x3c
	.ascii "left\0"
	.byte	0x12
	.byte	0x39
	.byte	0x4a
	.long	0x4ec
	.uleb128 0x3c
	.ascii "top\0"
	.byte	0x12
	.byte	0x39
	.byte	0x52
	.long	0x4ec
	.uleb128 0x5a
	.secrel32	.LASF168
	.byte	0x12
	.byte	0x39
	.byte	0x59
	.long	0x4ec
	.uleb128 0x5a
	.secrel32	.LASF169
	.byte	0x12
	.byte	0x39
	.byte	0x62
	.long	0x4ec
	.uleb128 0x89
	.ascii "r\0"
	.byte	0x12
	.byte	0x3a
	.byte	0x22
	.long	0x1d788
	.byte	0
	.uleb128 0x6c
	.long	0x1e123
	.long	0x25afb
	.uleb128 0xa
	.ascii "T\0"
	.long	0x1e2
	.uleb128 0x5a
	.secrel32	.LASF182
	.byte	0x12
	.byte	0x2c
	.byte	0x4a
	.long	0x1e2
	.uleb128 0x5a
	.secrel32	.LASF183
	.byte	0x12
	.byte	0x2c
	.byte	0x53
	.long	0x1e2
	.uleb128 0x89
	.ascii "r\0"
	.byte	0x12
	.byte	0x2d
	.byte	0x22
	.long	0x1d758
	.byte	0
	.uleb128 0x17
	.long	0xc198
	.quad	.LFB11489
	.quad	.LFE11489-.LFB11489
	.uleb128 0x1
	.byte	0x9c
	.long	0x25b41
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x8950
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x34
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x1921f
	.quad	.LFB11485
	.quad	.LFE11485-.LFB11485
	.uleb128 0x1
	.byte	0x9c
	.long	0x25bbf
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x18
	.ascii "__rtime\0"
	.byte	0x15
	.byte	0x44
	.byte	0x38
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x27
	.ascii "__s\0"
	.byte	0x15
	.byte	0x48
	.byte	0x7
	.long	0x99b1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x27
	.ascii "__ns\0"
	.byte	0x15
	.byte	0x49
	.byte	0x7
	.long	0x8950
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x27
	.ascii "__ts\0"
	.byte	0x15
	.byte	0x4b
	.byte	0x14
	.long	0x1b559
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.quad	.LVL44
	.long	0x1f936
	.byte	0
	.uleb128 0x17
	.long	0x192cf
	.quad	.LFB11479
	.quad	.LFE11479-.LFB11479
	.uleb128 0x1
	.byte	0x9c
	.long	0x25c3d
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcbbb
	.uleb128 0x18
	.ascii "__rtime\0"
	.byte	0x15
	.byte	0x44
	.byte	0x38
	.long	0x1beba
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x27
	.ascii "__s\0"
	.byte	0x15
	.byte	0x48
	.byte	0x7
	.long	0x99b1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x27
	.ascii "__ns\0"
	.byte	0x15
	.byte	0x49
	.byte	0x7
	.long	0x8950
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x27
	.ascii "__ts\0"
	.byte	0x15
	.byte	0x4b
	.byte	0x14
	.long	0x1b559
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2a
	.quad	.LVL43
	.long	0x1f936
	.byte	0
	.uleb128 0x17
	.long	0xc2d6
	.quad	.LFB11480
	.quad	.LFE11480-.LFB11480
	.uleb128 0x1
	.byte	0x9c
	.long	0x25cab
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0xcbbb
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcbbb
	.uleb128 0x1c
	.secrel32	.LASF230
	.byte	0xe
	.word	0x302
	.byte	0x34
	.long	0x1beba
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF231
	.byte	0xe
	.word	0x303
	.byte	0x26
	.long	0x1beba
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x22
	.ascii "__ct\0"
	.byte	0xe
	.word	0x305
	.byte	0x8
	.long	0x193a0
	.byte	0
	.uleb128 0x4e
	.long	0xa1c0
	.long	0x25cca
	.quad	.LFB11481
	.quad	.LFE11481-.LFB11481
	.uleb128 0x1
	.byte	0x9c
	.long	0x25cd7
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bec9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xc3ba
	.quad	.LFB11477
	.quad	.LFE11477-.LFB11477
	.uleb128 0x1
	.byte	0x9c
	.long	0x25d1d
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x8950
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0xcbbb
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x34
	.long	0x1beba
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x4e
	.long	0x9b76
	.long	0x25d3c
	.quad	.LFB11450
	.quad	.LFE11450-.LFB11450
	.uleb128 0x1
	.byte	0x9c
	.long	0x25d49
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bea6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xc4ff
	.quad	.LFB11449
	.quad	.LFE11449-.LFB11449
	.uleb128 0x1
	.byte	0x9c
	.long	0x25d8f
	.uleb128 0x3
	.secrel32	.LASF105
	.long	0x99b1
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF101
	.long	0x88a3
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xe
	.byte	0xfc
	.byte	0x34
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x10b
	.uleb128 0x17
	.long	0x2a71
	.quad	.LFB11448
	.quad	.LFE11448-.LFB11448
	.uleb128 0x1
	.byte	0x9c
	.long	0x25dc8
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0xf1
	.uleb128 0x4a
	.secrel32	.LASF220
	.byte	0x7
	.byte	0xd2
	.byte	0x17
	.long	0x25d8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x193ad
	.quad	.LFB11447
	.quad	.LFE11447-.LFB11447
	.uleb128 0x1
	.byte	0x9c
	.long	0x25e1c
	.uleb128 0xa
	.ascii "_Tp\0"
	.long	0x79b8
	.uleb128 0x18
	.ascii "__a\0"
	.byte	0x14
	.byte	0xc4
	.byte	0xf
	.long	0x24347
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x14
	.byte	0xc4
	.byte	0x19
	.long	0x24347
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x27
	.ascii "__tmp\0"
	.byte	0x14
	.byte	0xcc
	.byte	0xb
	.long	0x79b8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x15
	.long	0x69e8
	.long	0x25e2a
	.byte	0x2
	.long	0x25e41
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bd03
	.uleb128 0x2f
	.ascii "__i\0"
	.byte	0xb
	.word	0x159
	.byte	0x2a
	.long	0x68a5
	.byte	0
	.uleb128 0x42
	.long	0x25e1c
	.ascii "_ZNSt13__atomic_baseIxEC1Ex\0"
	.long	0x25e7c
	.quad	.LFB11422
	.quad	.LFE11422-.LFB11422
	.uleb128 0x1
	.byte	0x9c
	.long	0x25e8d
	.uleb128 0x8
	.long	0x25e2a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x25e33
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x426a
	.long	0x25e9b
	.byte	0x3
	.long	0x25ecb
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bc68
	.uleb128 0x2f
	.ascii "__i\0"
	.byte	0xb
	.word	0x1c8
	.byte	0x18
	.long	0x3b4d
	.uleb128 0x2f
	.ascii "__m\0"
	.byte	0xb
	.word	0x1c8
	.byte	0x2a
	.long	0x3a08
	.uleb128 0x7e
	.ascii "__b\0"
	.word	0x1ca
	.byte	0xf
	.long	0x3a08
	.byte	0
	.uleb128 0x15
	.long	0x430d
	.long	0x25ed9
	.byte	0x3
	.long	0x25efc
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bc81
	.uleb128 0x2f
	.ascii "__m\0"
	.byte	0xb
	.word	0x1e1
	.byte	0x19
	.long	0x3a08
	.uleb128 0x7e
	.ascii "__b\0"
	.word	0x1e3
	.byte	0xf
	.long	0x3a08
	.byte	0
	.uleb128 0x14
	.long	0x3d3b
	.long	0x25f1b
	.quad	.LFB11374
	.quad	.LFE11374-.LFB11374
	.uleb128 0x1
	.byte	0x9c
	.long	0x25f72
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bc68
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__i\0"
	.byte	0xb
	.word	0x162
	.byte	0x1c
	.long	0x3b4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x68
	.long	0x25e8d
	.quad	.LBB200
	.quad	.LBE200-.LBB200
	.byte	0xb
	.word	0x164
	.byte	0x7
	.uleb128 0x8
	.long	0x25eb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x8
	.long	0x25ea4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.uleb128 0x8
	.long	0x25e9b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x41
	.long	0x25ebe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x1855
	.long	0x25f91
	.quad	.LFB11371
	.quad	.LFE11371-.LFB11371
	.uleb128 0x1
	.byte	0x9c
	.long	0x25fc3
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b7b9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__all\0"
	.byte	0xa
	.word	0x131
	.byte	0x11
	.long	0x1ab64
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "__bare\0"
	.byte	0xa
	.word	0x131
	.byte	0x1d
	.long	0x1ab64
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x15
	.long	0x1d94
	.long	0x25fd1
	.byte	0x2
	.long	0x25fe4
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b7cd
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x42
	.long	0x25fc3
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev\0"
	.long	0x2603d
	.quad	.LFB11370
	.quad	.LFE11370-.LFB11370
	.uleb128 0x1
	.byte	0x9c
	.long	0x26046
	.uleb128 0x8
	.long	0x25fd1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x391a
	.long	0x26054
	.byte	0x2
	.long	0x26067
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b78c
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x21
	.long	0x26046
	.ascii "_ZNSt10lock_guardISt5mutexED1Ev\0"
	.long	0x260a6
	.quad	.LFB11364
	.quad	.LFE11364-.LFB11364
	.uleb128 0x1
	.byte	0x9c
	.long	0x260af
	.uleb128 0x8
	.long	0x26054
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x3871
	.long	0x260bd
	.byte	0x2
	.long	0x260d3
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b78c
	.uleb128 0x3c
	.ascii "__m\0"
	.byte	0x9
	.byte	0xe4
	.byte	0x27
	.long	0x1b791
	.byte	0
	.uleb128 0x21
	.long	0x260af
	.ascii "_ZNSt10lock_guardISt5mutexEC1ERS0_\0"
	.long	0x26115
	.quad	.LFB11361
	.quad	.LFE11361-.LFB11361
	.uleb128 0x1
	.byte	0x9c
	.long	0x26126
	.uleb128 0x8
	.long	0x260bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x260c6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14d
	.ascii "WinMain\0"
	.byte	0x10
	.word	0x323
	.byte	0xc
	.long	0x520
	.quad	.LFB10946
	.quad	.LFE10946-.LFB10946
	.uleb128 0x1
	.byte	0x9c
	.long	0x26a45
	.uleb128 0x57
	.long	0x19dce
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x57
	.long	0x19dce
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x57
	.long	0x637
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x57
	.long	0x520
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x2c
	.secrel32	.LASF237
	.byte	0x10
	.word	0x325
	.byte	0xa
	.long	0x1ee9d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2c
	.secrel32	.LASF182
	.byte	0x10
	.word	0x327
	.byte	0xb
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x2c
	.secrel32	.LASF183
	.byte	0x10
	.word	0x328
	.byte	0xb
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x12
	.ascii "depth\0"
	.byte	0x10
	.word	0x329
	.byte	0xb
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x2c
	.secrel32	.LASF241
	.byte	0x10
	.word	0x32b
	.byte	0x1a
	.long	0x1f559
	.uleb128 0x3
	.byte	0x91
	.sleb128 -832
	.uleb128 0x12
	.ascii "SizeOfMatrix\0"
	.byte	0x10
	.word	0x32d
	.byte	0xb
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2c
	.secrel32	.LASF243
	.byte	0x10
	.word	0x32e
	.byte	0x7
	.long	0x19e13
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2c
	.secrel32	.LASF235
	.byte	0x10
	.word	0x330
	.byte	0x14
	.long	0x4c53
	.uleb128 0x3
	.byte	0x91
	.sleb128 -833
	.uleb128 0x12
	.ascii "ready\0"
	.byte	0x10
	.word	0x331
	.byte	0x14
	.long	0x4c53
	.uleb128 0x3
	.byte	0x91
	.sleb128 -834
	.uleb128 0x12
	.ascii "MainThreadID\0"
	.byte	0x10
	.word	0x333
	.byte	0x12
	.long	0x79b8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -848
	.uleb128 0x12
	.ascii "msg\0"
	.byte	0x10
	.word	0x335
	.byte	0x6
	.long	0x1a236
	.uleb128 0x3
	.byte	0x91
	.sleb128 -896
	.uleb128 0x14e
	.secrel32	.LLRL0
	.long	0x26a37
	.uleb128 0x12
	.ascii "cam\0"
	.byte	0x10
	.word	0x339
	.byte	0xa
	.long	0x1eeac
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1040
	.uleb128 0x12
	.ascii "ChunkThreads\0"
	.byte	0x10
	.word	0x33c
	.byte	0x22
	.long	0x12815
	.uleb128 0x3
	.byte	0x91
	.sleb128 -904
	.uleb128 0x12
	.ascii "splitPerAxis\0"
	.byte	0x10
	.word	0x33e
	.byte	0xc
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x12
	.ascii "numofMatrixThreads\0"
	.byte	0x10
	.word	0x33f
	.byte	0xc
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x12
	.ascii "threadsRemaining\0"
	.byte	0x10
	.word	0x340
	.byte	0xc
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x12
	.ascii "rondevousPointFunction\0"
	.byte	0x10
	.word	0x342
	.byte	0x8
	.long	0x262f0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -928
	.uleb128 0xf2
	.byte	0x18
	.word	0x342
	.byte	0x2d
	.long	0x263e3
	.uleb128 0x4f
	.secrel32	.LASF226
	.long	0x26307
	.long	0x26312
	.uleb128 0x2
	.long	0x1f504
	.uleb128 0x1
	.long	0x1f509
	.byte	0
	.uleb128 0x4f
	.secrel32	.LASF226
	.long	0x2631f
	.long	0x2632f
	.uleb128 0x2
	.long	0x1f504
	.uleb128 0x1
	.long	0x1f50e
	.uleb128 0x4
	.long	0x262f0
	.byte	0
	.uleb128 0xc8
	.secrel32	.LASF226
	.long	0x2633d
	.long	0x26343
	.uleb128 0x2
	.long	0x1f504
	.byte	0
	.uleb128 0x4f
	.secrel32	.LASF227
	.long	0x26350
	.long	0x2635b
	.uleb128 0x2
	.long	0x1f504
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x39
	.secrel32	.LASF244
	.byte	0x10
	.word	0x342
	.byte	0x26
	.long	0x1bc9f
	.byte	0
	.uleb128 0xc9
	.secrel32	.LASF4
	.long	0x26389
	.quad	.LFB10973
	.quad	.LFE10973-.LFB10973
	.uleb128 0x1
	.byte	0x9c
	.long	0x263c6
	.uleb128 0xe
	.secrel32	.LASF228
	.long	0x26395
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.long	0x1f513
	.uleb128 0x59
	.secrel32	.LASF235
	.long	0x1bc9f
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.uleb128 0x59
	.secrel32	.LASF237
	.long	0x1eea2
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x59
	.secrel32	.LASF243
	.long	0x19e20
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x10
	.byte	0
	.uleb128 0x39
	.secrel32	.LASF245
	.byte	0x10
	.word	0x342
	.byte	0x31
	.long	0x1ee9d
	.byte	0x8
	.uleb128 0x39
	.secrel32	.LASF246
	.byte	0x10
	.word	0x342
	.byte	0x49
	.long	0x19e13
	.byte	0x10
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF234
	.byte	0x10
	.word	0x343
	.byte	0x10
	.long	0x14306
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1104
	.uleb128 0x12
	.ascii "chunkSizeX\0"
	.byte	0x10
	.word	0x345
	.byte	0xc
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x12
	.ascii "chunkSizeY\0"
	.byte	0x10
	.word	0x346
	.byte	0xc
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x12
	.ascii "chunkSizeZ\0"
	.byte	0x10
	.word	0x347
	.byte	0xc
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x12
	.ascii "threadIndex\0"
	.byte	0x10
	.word	0x349
	.byte	0xc
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x12
	.ascii "RotationState\0"
	.byte	0x10
	.word	0x37b
	.byte	0x9
	.long	0x4ec
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x2c
	.secrel32	.LASF238
	.byte	0x10
	.word	0x3cb
	.byte	0x26
	.long	0xae6b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -932
	.uleb128 0x48
	.quad	.LBB178
	.quad	.LBE178-.LBB178
	.long	0x266f4
	.uleb128 0x12
	.ascii "x\0"
	.byte	0x10
	.word	0x34b
	.byte	0x11
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x34
	.quad	.LBB180
	.quad	.LBE180-.LBB180
	.uleb128 0x12
	.ascii "y\0"
	.byte	0x10
	.word	0x34d
	.byte	0x15
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x34
	.quad	.LBB182
	.quad	.LBE182-.LBB182
	.uleb128 0x12
	.ascii "z\0"
	.byte	0x10
	.word	0x34f
	.byte	0x19
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x34
	.quad	.LBB183
	.quad	.LBE183-.LBB183
	.uleb128 0x12
	.ascii "x1\0"
	.byte	0x10
	.word	0x351
	.byte	0x18
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x12
	.ascii "x2\0"
	.byte	0x10
	.word	0x352
	.byte	0x18
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x12
	.ascii "y1\0"
	.byte	0x10
	.word	0x354
	.byte	0x18
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x12
	.ascii "y2\0"
	.byte	0x10
	.word	0x355
	.byte	0x18
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -220
	.uleb128 0x12
	.ascii "z1\0"
	.byte	0x10
	.word	0x357
	.byte	0x18
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x12
	.ascii "z2\0"
	.byte	0x10
	.word	0x358
	.byte	0x18
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -228
	.uleb128 0xf3
	.byte	0x40
	.word	0x35e
	.byte	0x46
	.uleb128 0x4f
	.secrel32	.LASF227
	.long	0x26569
	.long	0x26574
	.uleb128 0x2
	.long	0x1f554
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x39
	.secrel32	.LASF247
	.byte	0x10
	.word	0x35e
	.byte	0xc
	.long	0x1f540
	.byte	0
	.uleb128 0x1d
	.ascii "__keyfield\0"
	.byte	0x10
	.word	0x35e
	.byte	0x18
	.long	0x1f56c
	.byte	0x8
	.uleb128 0x39
	.secrel32	.LASF244
	.byte	0x10
	.word	0x35e
	.byte	0x23
	.long	0x1bc9f
	.byte	0x10
	.uleb128 0x1d
	.ascii "__x1\0"
	.byte	0x10
	.word	0x35e
	.byte	0x2c
	.long	0x1a9a9
	.byte	0x18
	.uleb128 0x1d
	.ascii "__x2\0"
	.byte	0x10
	.word	0x35e
	.byte	0x31
	.long	0x1a9a9
	.byte	0x1c
	.uleb128 0x1d
	.ascii "__y1\0"
	.byte	0x10
	.word	0x35e
	.byte	0x36
	.long	0x1a9a9
	.byte	0x20
	.uleb128 0x1d
	.ascii "__y2\0"
	.byte	0x10
	.word	0x35e
	.byte	0x3b
	.long	0x1a9a9
	.byte	0x24
	.uleb128 0x1d
	.ascii "__z1\0"
	.byte	0x10
	.word	0x35e
	.byte	0x40
	.long	0x1a9a9
	.byte	0x28
	.uleb128 0x1d
	.ascii "__z2\0"
	.byte	0x10
	.word	0x35e
	.byte	0x44
	.long	0x1a9a9
	.byte	0x2c
	.uleb128 0xc9
	.secrel32	.LASF4
	.long	0x26624
	.quad	.LFB10988
	.quad	.LFE10988-.LFB10988
	.uleb128 0x1
	.byte	0x9c
	.long	0x266d3
	.uleb128 0x4
	.long	0x26556
	.uleb128 0xe
	.secrel32	.LASF228
	.long	0x26630
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.long	0x1f571
	.uleb128 0x76
	.ascii "z2\0"
	.long	0x1a9ba
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x76
	.ascii "z1\0"
	.long	0x1a9ba
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x76
	.ascii "y2\0"
	.long	0x1a9ba
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x76
	.ascii "y1\0"
	.long	0x1a9ba
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x76
	.ascii "x2\0"
	.long	0x1a9ba
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x76
	.ascii "x1\0"
	.long	0x1a9ba
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x59
	.secrel32	.LASF235
	.long	0x1bc9f
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x59
	.secrel32	.LASF241
	.long	0x1f56c
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x59
	.secrel32	.LASF234
	.long	0x1f540
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.uleb128 0x59
	.secrel32	.LASF237
	.long	0x1eea2
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x59
	.secrel32	.LASF243
	.long	0x19e20
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x38
	.byte	0
	.uleb128 0x39
	.secrel32	.LASF245
	.byte	0x10
	.word	0x35e
	.byte	0x4b
	.long	0x1ee9d
	.byte	0x30
	.uleb128 0x39
	.secrel32	.LASF246
	.byte	0x10
	.word	0x35e
	.byte	0x69
	.long	0x19e13
	.byte	0x38
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x48
	.quad	.LBB184
	.quad	.LBE184-.LBB184
	.long	0x2685b
	.uleb128 0x12
	.ascii "i\0"
	.byte	0x10
	.word	0x366
	.byte	0xb
	.long	0x184
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x34
	.quad	.LBB185
	.quad	.LBE185-.LBB185
	.uleb128 0x2c
	.secrel32	.LASF236
	.byte	0x10
	.word	0x368
	.byte	0xc
	.long	0x1a994
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x12
	.ascii "EndX\0"
	.byte	0x10
	.word	0x369
	.byte	0xc
	.long	0x1a994
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0xf3
	.byte	0x28
	.word	0x36d
	.byte	0x23
	.uleb128 0x4f
	.secrel32	.LASF227
	.long	0x2675f
	.long	0x2676a
	.uleb128 0x2
	.long	0x1f576
	.uleb128 0x2
	.long	0x184
	.byte	0
	.uleb128 0x39
	.secrel32	.LASF244
	.byte	0x10
	.word	0x36d
	.byte	0xa
	.long	0x1bc9f
	.byte	0
	.uleb128 0x1d
	.ascii "__cam\0"
	.byte	0x10
	.word	0x36d
	.byte	0x14
	.long	0x1f57b
	.byte	0x8
	.uleb128 0x39
	.secrel32	.LASF247
	.byte	0x10
	.word	0x36d
	.byte	0x1a
	.long	0x1f540
	.byte	0x10
	.uleb128 0xc9
	.secrel32	.LASF4
	.long	0x267bb
	.quad	.LFB10989
	.quad	.LFE10989-.LFB10989
	.uleb128 0x1
	.byte	0x9c
	.long	0x26826
	.uleb128 0x4
	.long	0x2674c
	.uleb128 0xe
	.secrel32	.LASF228
	.long	0x267c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.long	0x1f580
	.uleb128 0x59
	.secrel32	.LASF234
	.long	0x1f540
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x76
	.ascii "cam\0"
	.long	0x1f57b
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x59
	.secrel32	.LASF235
	.long	0x1bc9f
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.uleb128 0x59
	.secrel32	.LASF243
	.long	0x19e20
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x59
	.secrel32	.LASF236
	.long	0x1a9a4
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x76
	.ascii "EndX\0"
	.long	0x1a9a4
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x24
	.byte	0
	.uleb128 0x39
	.secrel32	.LASF246
	.byte	0x10
	.word	0x36d
	.byte	0x4b
	.long	0x19e13
	.byte	0x18
	.uleb128 0x1d
	.ascii "__StartX\0"
	.byte	0x10
	.word	0x36d
	.byte	0x6d
	.long	0x1a994
	.byte	0x20
	.uleb128 0x1d
	.ascii "__EndX\0"
	.byte	0x10
	.word	0x36d
	.byte	0x75
	.long	0x1a994
	.byte	0x24
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x48
	.quad	.LBB186
	.quad	.LBE186-.LBB186
	.long	0x268a1
	.uleb128 0x12
	.ascii "i\0"
	.byte	0x10
	.word	0x371
	.byte	0x10
	.long	0x1a983
	.uleb128 0x3
	.byte	0x91
	.sleb128 -102
	.uleb128 0x34
	.quad	.LBB187
	.quad	.LBE187-.LBB187
	.uleb128 0x12
	.ascii "n\0"
	.byte	0x10
	.word	0x373
	.byte	0xd
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.byte	0
	.byte	0
	.uleb128 0x48
	.quad	.LBB188
	.quad	.LBE188-.LBB188
	.long	0x268e7
	.uleb128 0x12
	.ascii "j\0"
	.byte	0x10
	.word	0x3bd
	.byte	0x10
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x34
	.quad	.LBB190
	.quad	.LBE190-.LBB190
	.uleb128 0x12
	.ascii "i\0"
	.byte	0x10
	.word	0x3bf
	.byte	0x11
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.byte	0
	.byte	0
	.uleb128 0x48
	.quad	.LBB191
	.quad	.LBE191-.LBB191
	.long	0x26a15
	.uleb128 0x2c
	.secrel32	.LASF239
	.byte	0x10
	.word	0x3cf
	.byte	0x9
	.long	0x9393
	.uleb128 0x3
	.byte	0x91
	.sleb128 -944
	.uleb128 0x2c
	.secrel32	.LASF240
	.byte	0x10
	.word	0x3ee
	.byte	0x9
	.long	0x9393
	.uleb128 0x3
	.byte	0x91
	.sleb128 -952
	.uleb128 0x12
	.ascii "deltaTime\0"
	.byte	0x10
	.word	0x3ef
	.byte	0xd
	.long	0x4ec
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x48
	.quad	.LBB193
	.quad	.LBE193-.LBB193
	.long	0x269ed
	.uleb128 0x12
	.ascii "i\0"
	.byte	0x10
	.word	0x3d4
	.byte	0xe
	.long	0x184
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x34
	.quad	.LBB194
	.quad	.LBE194-.LBB194
	.uleb128 0x12
	.ascii "state\0"
	.byte	0x10
	.word	0x3d6
	.byte	0xe
	.long	0x548
	.uleb128 0x3
	.byte	0x91
	.sleb128 -182
	.uleb128 0x12
	.ascii "down\0"
	.byte	0x10
	.word	0x3d7
	.byte	0x11
	.long	0x1a963
	.uleb128 0x3
	.byte	0x91
	.sleb128 -183
	.uleb128 0x12
	.ascii "prev\0"
	.byte	0x10
	.word	0x3d8
	.byte	0x11
	.long	0x1a963
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x12
	.ascii "pressed\0"
	.byte	0x10
	.word	0x3dc
	.byte	0x11
	.long	0x1a963
	.uleb128 0x3
	.byte	0x91
	.sleb128 -185
	.uleb128 0x12
	.ascii "held\0"
	.byte	0x10
	.word	0x3dd
	.byte	0x11
	.long	0x1a963
	.uleb128 0x3
	.byte	0x91
	.sleb128 -186
	.uleb128 0x12
	.ascii "released\0"
	.byte	0x10
	.word	0x3de
	.byte	0x11
	.long	0x1a963
	.uleb128 0x3
	.byte	0x91
	.sleb128 -187
	.uleb128 0x2a
	.quad	.LVL38
	.long	0x1fba7
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LVL39
	.long	0x1fb83
	.uleb128 0x2a
	.quad	.LVL40
	.long	0x1fb5a
	.uleb128 0x2a
	.quad	.LVL41
	.long	0x1fb26
	.byte	0
	.uleb128 0x34
	.quad	.LBB195
	.quad	.LBE195-.LBB195
	.uleb128 0x12
	.ascii "i\0"
	.byte	0x10
	.word	0x40f
	.byte	0x10
	.long	0x1a983
	.uleb128 0x3
	.byte	0x91
	.sleb128 -118
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LVL42
	.long	0x1ff7d
	.byte	0
	.uleb128 0x4e
	.long	0x9514
	.long	0x26a64
	.quad	.LFB10995
	.quad	.LFE10995-.LFB10995
	.uleb128 0x1
	.byte	0x9c
	.long	0x26a71
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1be83
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xc62b
	.quad	.LFB10994
	.quad	.LFE10994-.LFB10994
	.uleb128 0x1
	.byte	0x9c
	.long	0x26acc
	.uleb128 0x3
	.secrel32	.LASF103
	.long	0x9229
	.uleb128 0xa
	.ascii "_Dur1\0"
	.long	0x8950
	.uleb128 0xa
	.ascii "_Dur2\0"
	.long	0x8950
	.uleb128 0x1c
	.secrel32	.LASF230
	.byte	0xe
	.word	0x402
	.byte	0x32
	.long	0x1bed3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF231
	.byte	0xe
	.word	0x403
	.byte	0x24
	.long	0x1bed3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0xadf0
	.long	0x26ae3
	.byte	0x2
	.long	0x26afa
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x4ec
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f58a
	.uleb128 0x53
	.secrel32	.LASF229
	.byte	0xe
	.word	0x1f9
	.byte	0x2d
	.long	0x1f5a8
	.byte	0
	.uleb128 0x42
	.long	0x26acc
	.ascii "_ZNSt6chrono8durationIfSt5ratioILx1ELx1EEEC1IfvEERKT_\0"
	.long	0x26b58
	.quad	.LFB10992
	.quad	.LFE10992-.LFB10992
	.uleb128 0x1
	.byte	0x9c
	.long	0x26b69
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x4ec
	.uleb128 0x8
	.long	0x26ae3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x26aec
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x58
	.long	0x1450e
	.byte	0x13
	.byte	0xcc
	.byte	0xb
	.long	0x26b79
	.long	0x26b8c
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f536
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x32
	.long	0x26b69
	.long	0x26bab
	.quad	.LFB10986
	.quad	.LFE10986-.LFB10986
	.uleb128 0x1
	.byte	0x9c
	.long	0x26bb4
	.uleb128 0x8
	.long	0x26b79
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x58
	.long	0x13541
	.byte	0x13
	.byte	0x4c
	.byte	0xb
	.long	0x26bc4
	.long	0x26bd7
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f51d
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x32
	.long	0x26bb4
	.long	0x26bf6
	.quad	.LFB10984
	.quad	.LFE10984-.LFB10984
	.uleb128 0x1
	.byte	0x9c
	.long	0x26bff
	.uleb128 0x8
	.long	0x26bc4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1eebd
	.long	0x26c0d
	.byte	0x2
	.long	0x26c17
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1f2d9
	.byte	0
	.uleb128 0x21
	.long	0x26bff
	.ascii "_ZN6CameraC1Ev\0"
	.long	0x26c45
	.quad	.LFB10964
	.quad	.LFE10964-.LFB10964
	.uleb128 0x1
	.byte	0x9c
	.long	0x26c4e
	.uleb128 0x8
	.long	0x26c0d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x58
	.long	0x1ed31
	.byte	0x10
	.byte	0x70
	.byte	0x8
	.long	0x26c5e
	.long	0x26c68
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1eea2
	.byte	0
	.uleb128 0x21
	.long	0x26c4e
	.ascii "_ZN6MATRIXC1Ev\0"
	.long	0x26c96
	.quad	.LFB10949
	.quad	.LFE10949-.LFB10949
	.uleb128 0x1
	.byte	0x9c
	.long	0x26c9f
	.uleb128 0x8
	.long	0x26c5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14f
	.long	0x247e6
	.long	0x4b0
	.quad	.LFB10945
	.quad	.LFE10945-.LFB10945
	.uleb128 0x1
	.byte	0x9c
	.long	0x26dcf
	.uleb128 0x1c
	.secrel32	.LASF237
	.byte	0x10
	.word	0x2f1
	.byte	0x24
	.long	0x1ee9d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF182
	.byte	0x10
	.word	0x2f1
	.byte	0x35
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1c
	.secrel32	.LASF183
	.byte	0x10
	.word	0x2f1
	.byte	0x45
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x2c
	.secrel32	.LASF243
	.byte	0x10
	.word	0x2f3
	.byte	0x9
	.long	0x4b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x12
	.ascii "wc\0"
	.byte	0x10
	.word	0x2f5
	.byte	0xe
	.long	0x1a1b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x48
	.quad	.LBB170
	.quad	.LBE170-.LBB170
	.long	0x26d73
	.uleb128 0x12
	.ascii "errorCode\0"
	.byte	0x10
	.word	0x30c
	.byte	0xa
	.long	0x4d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2c
	.secrel32	.LASF248
	.byte	0x10
	.word	0x30d
	.byte	0xd
	.long	0x637
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2a
	.quad	.LVL33
	.long	0x1fca5
	.uleb128 0x2a
	.quad	.LVL34
	.long	0x1fc60
	.uleb128 0x2a
	.quad	.LVL35
	.long	0x1fc43
	.byte	0
	.uleb128 0x2a
	.quad	.LVL28
	.long	0x1fd62
	.uleb128 0x2a
	.quad	.LVL29
	.long	0x1fd3e
	.uleb128 0x2a
	.quad	.LVL30
	.long	0x1fd15
	.uleb128 0x2a
	.quad	.LVL31
	.long	0x1fd62
	.uleb128 0x2a
	.quad	.LVL32
	.long	0x1fcbb
	.uleb128 0x2a
	.quad	.LVL36
	.long	0x1fc20
	.uleb128 0x2a
	.quad	.LVL37
	.long	0x1fc00
	.byte	0
	.uleb128 0x17
	.long	0x24852
	.quad	.LFB10944
	.quad	.LFE10944-.LFB10944
	.uleb128 0x1
	.byte	0x9c
	.long	0x26e4c
	.uleb128 0x1c
	.secrel32	.LASF248
	.byte	0x10
	.word	0x2e9
	.byte	0x24
	.long	0x19808
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x12
	.ascii "len\0"
	.byte	0x10
	.word	0x2ea
	.byte	0x7
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x12
	.ascii "wideErrorText\0"
	.byte	0x10
	.word	0x2eb
	.byte	0xc
	.long	0x1c8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2a
	.quad	.LVL25
	.long	0x1fdc8
	.uleb128 0x2a
	.quad	.LVL26
	.long	0x1fdc8
	.uleb128 0x2a
	.quad	.LVL27
	.long	0x1ff7d
	.byte	0
	.uleb128 0x17
	.long	0x248a4
	.quad	.LFB10940
	.quad	.LFE10940-.LFB10940
	.uleb128 0x1
	.byte	0x9c
	.long	0x273d8
	.uleb128 0x1c
	.secrel32	.LASF171
	.byte	0x10
	.word	0x262
	.byte	0x23
	.long	0x19e13
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "msg\0"
	.byte	0x10
	.word	0x262
	.byte	0x2e
	.long	0x52c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "wp\0"
	.byte	0x10
	.word	0x262
	.byte	0x3a
	.long	0x19d61
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "lp\0"
	.byte	0x10
	.word	0x262
	.byte	0x45
	.long	0x19d70
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x48
	.quad	.LBB126
	.quad	.LBE126-.LBB126
	.long	0x26eea
	.uleb128 0x12
	.ascii "pcs\0"
	.byte	0x10
	.word	0x266
	.byte	0x18
	.long	0x273d8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2c
	.secrel32	.LASF237
	.byte	0x10
	.word	0x267
	.byte	0x12
	.long	0x1ee9d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2a
	.quad	.LVL9
	.long	0x20001
	.byte	0
	.uleb128 0x48
	.quad	.LBB128
	.quad	.LBE128-.LBB128
	.long	0x26f2a
	.uleb128 0x2c
	.secrel32	.LASF237
	.byte	0x10
	.word	0x26f
	.byte	0xc
	.long	0x1ee9d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2a
	.quad	.LVL10
	.long	0x1ffd7
	.uleb128 0x2a
	.quad	.LVL11
	.long	0x20001
	.byte	0
	.uleb128 0x48
	.quad	.LBB131
	.quad	.LBE131-.LBB131
	.long	0x271c9
	.uleb128 0x12
	.ascii "hr\0"
	.byte	0x10
	.word	0x27d
	.byte	0xd
	.long	0x666
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x12
	.ascii "dpiX\0"
	.byte	0x10
	.word	0x285
	.byte	0xb
	.long	0x4de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x12
	.ascii "dpiY\0"
	.byte	0x10
	.word	0x286
	.byte	0xb
	.long	0x4de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x12
	.ascii "rc\0"
	.byte	0x10
	.word	0x289
	.byte	0xa
	.long	0x19f19
	.uleb128 0x3
	.byte	0x91
	.sleb128 -304
	.uleb128 0x12
	.ascii "size\0"
	.byte	0x10
	.word	0x28c
	.byte	0x11
	.long	0x1ccb0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -312
	.uleb128 0x12
	.ascii "props\0"
	.byte	0x10
	.word	0x28e
	.byte	0x23
	.long	0x1d5d4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -352
	.uleb128 0x12
	.ascii "hwndProps\0"
	.byte	0x10
	.word	0x294
	.byte	0x28
	.long	0x1d57e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -384
	.uleb128 0x48
	.quad	.LBB133
	.quad	.LBE133-.LBB133
	.long	0x26ff2
	.uleb128 0x2c
	.secrel32	.LASF249
	.byte	0x10
	.word	0x280
	.byte	0xe
	.long	0x25729
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1456
	.uleb128 0x2a
	.quad	.LVL15
	.long	0x1ff7d
	.byte	0
	.uleb128 0x48
	.quad	.LBB143
	.quad	.LBE143-.LBB143
	.long	0x270c7
	.uleb128 0x12
	.ascii "bmpProps\0"
	.byte	0x10
	.word	0x2a1
	.byte	0x1d
	.long	0x1d500
	.uleb128 0x3
	.byte	0x91
	.sleb128 -416
	.uleb128 0x48
	.quad	.LBB148
	.quad	.LBE148-.LBB148
	.long	0x27041
	.uleb128 0x12
	.ascii "i\0"
	.byte	0x10
	.word	0x2b1
	.byte	0xe
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x48
	.quad	.LBB149
	.quad	.LBE149-.LBB149
	.long	0x27065
	.uleb128 0x12
	.ascii "i\0"
	.byte	0x10
	.word	0x2b2
	.byte	0xe
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.uleb128 0x68
	.long	0x2816b
	.quad	.LBB144
	.quad	.LBE144-.LBB144
	.byte	0x10
	.word	0x2a7
	.byte	0x20
	.uleb128 0x8
	.long	0x28180
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x8
	.long	0x28174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x86
	.long	0x25ac7
	.quad	.LBB146
	.quad	.LBE146-.LBB146
	.byte	0x12
	.byte	0x36
	.byte	0x18
	.uleb128 0x8
	.long	0x25ae3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x8
	.long	0x25ad7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x41
	.long	0x25aef
	.uleb128 0x3
	.byte	0x91
	.sleb128 -424
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x94
	.long	0x2816b
	.quad	.LBB134
	.quad	.LBE134-.LBB134
	.word	0x28c
	.byte	0x23
	.long	0x2712c
	.uleb128 0x8
	.long	0x28180
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x8
	.long	0x28174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x86
	.long	0x25ac7
	.quad	.LBB136
	.quad	.LBE136-.LBB136
	.byte	0x12
	.byte	0x36
	.byte	0x18
	.uleb128 0x8
	.long	0x25ae3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x8
	.long	0x25ad7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x41
	.long	0x25aef
	.uleb128 0x3
	.byte	0x91
	.sleb128 -400
	.byte	0
	.byte	0
	.uleb128 0x94
	.long	0x280fc
	.quad	.LBB138
	.quad	.LBE138-.LBB138
	.word	0x290
	.byte	0x1a
	.long	0x27165
	.uleb128 0x8
	.long	0x28118
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x8
	.long	0x28105
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x41
	.long	0x28124
	.uleb128 0x3
	.byte	0x91
	.sleb128 -392
	.byte	0
	.uleb128 0x94
	.long	0x2809b
	.quad	.LBB140
	.quad	.LBE140-.LBB140
	.word	0x28e
	.byte	0x47
	.long	0x271bb
	.uleb128 0x8
	.long	0x280e4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x8
	.long	0x280d6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x8
	.long	0x280c9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x8
	.long	0x280bc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x87
	.long	0x280b0
	.uleb128 0x8
	.long	0x280a4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x6d
	.long	0x280f0
	.byte	0
	.uleb128 0x2a
	.quad	.LVL16
	.long	0x1ff57
	.byte	0
	.uleb128 0x48
	.quad	.LBB152
	.quad	.LBE152-.LBB152
	.long	0x27262
	.uleb128 0x2c
	.secrel32	.LASF182
	.byte	0x10
	.word	0x2c0
	.byte	0x11
	.long	0x52c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2c
	.secrel32	.LASF183
	.byte	0x10
	.word	0x2c1
	.byte	0x11
	.long	0x52c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x68
	.long	0x2816b
	.quad	.LBB153
	.quad	.LBE153-.LBB153
	.byte	0x10
	.word	0x2c2
	.byte	0x2c
	.uleb128 0x8
	.long	0x28180
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x8
	.long	0x28174
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x86
	.long	0x25ac7
	.quad	.LBB155
	.quad	.LBE155-.LBB155
	.byte	0x12
	.byte	0x36
	.byte	0x18
	.uleb128 0x8
	.long	0x25ae3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x8
	.long	0x25ad7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x41
	.long	0x25aef
	.uleb128 0x3
	.byte	0x91
	.sleb128 -432
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x48
	.quad	.LBB159
	.quad	.LBE159-.LBB159
	.long	0x272c0
	.uleb128 0x2c
	.secrel32	.LASF237
	.byte	0x10
	.word	0x2cb
	.byte	0xd
	.long	0x1ee9d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x12
	.ascii "x\0"
	.byte	0x10
	.word	0x2ce
	.byte	0xe
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x12
	.ascii "y\0"
	.byte	0x10
	.word	0x2cf
	.byte	0xe
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2a
	.quad	.LVL18
	.long	0x1ffd7
	.uleb128 0x2a
	.quad	.LVL19
	.long	0x1ff0c
	.byte	0
	.uleb128 0x94
	.long	0x2801f
	.quad	.LBB160
	.quad	.LBE160-.LBB160
	.word	0x2dc
	.byte	0x20
	.long	0x2732b
	.uleb128 0x8
	.long	0x2804a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x8
	.long	0x28036
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x87
	.long	0x2802d
	.uleb128 0x68
	.long	0x27fee
	.quad	.LBB163
	.quad	.LBE163-.LBB163
	.byte	0x12
	.word	0x15d
	.byte	0xd
	.uleb128 0x8
	.long	0x28012
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x8
	.long	0x28005
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0x8
	.long	0x27ffc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.byte	0
	.byte	0
	.uleb128 0x94
	.long	0x28130
	.quad	.LBB165
	.quad	.LBE165-.LBB165
	.word	0x2dd
	.byte	0x32
	.long	0x273b0
	.uleb128 0x8
	.long	0x2815e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x8
	.long	0x28152
	.uleb128 0x3
	.byte	0x91
	.sleb128 -220
	.uleb128 0x8
	.long	0x28146
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x8
	.long	0x28139
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x86
	.long	0x25a7a
	.quad	.LBB167
	.quad	.LBE167-.LBB167
	.byte	0x12
	.byte	0x3f
	.byte	0x17
	.uleb128 0x8
	.long	0x25aaf
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x8
	.long	0x25aa3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -236
	.uleb128 0x8
	.long	0x25a97
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x8
	.long	0x25a8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -228
	.uleb128 0x6d
	.long	0x25abb
	.byte	0
	.byte	0
	.uleb128 0x2a
	.quad	.LVL20
	.long	0x1fee7
	.uleb128 0x2a
	.quad	.LVL23
	.long	0x1fec8
	.uleb128 0x2a
	.quad	.LVL24
	.long	0x1ff0c
	.byte	0
	.uleb128 0x6
	.long	0x1a273
	.uleb128 0x58
	.long	0x1ed57
	.byte	0x10
	.byte	0x70
	.byte	0x8
	.long	0x273ed
	.long	0x27400
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1eea2
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x21
	.long	0x273dd
	.ascii "_ZN6MATRIXD1Ev\0"
	.long	0x2742e
	.quad	.LFB10943
	.quad	.LFE10943-.LFB10943
	.uleb128 0x1
	.byte	0x9c
	.long	0x27437
	.uleb128 0x8
	.long	0x273ed
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x24904
	.quad	.LFB10937
	.quad	.LFE10937-.LFB10937
	.uleb128 0x1
	.byte	0x9c
	.long	0x27492
	.uleb128 0x11
	.ascii "hr\0"
	.byte	0x10
	.word	0x1ec
	.byte	0x22
	.long	0x666
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.quad	.LBB123
	.quad	.LBE123-.LBB123
	.uleb128 0x2c
	.secrel32	.LASF249
	.byte	0x10
	.word	0x1f0
	.byte	0xc
	.long	0x25729
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1040
	.uleb128 0x2a
	.quad	.LVL8
	.long	0x1ff7d
	.byte	0
	.byte	0
	.uleb128 0x17
	.long	0x1f1fd
	.quad	.LFB10936
	.quad	.LFE10936-.LFB10936
	.uleb128 0x1
	.byte	0x9c
	.long	0x274ca
	.uleb128 0x11
	.ascii "a\0"
	.byte	0x10
	.word	0x1d3
	.byte	0x1b
	.long	0x1e68c
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x11
	.ascii "b\0"
	.byte	0x10
	.word	0x1d3
	.byte	0x24
	.long	0x1e68c
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x1f1c5
	.quad	.LFB10935
	.quad	.LFE10935-.LFB10935
	.uleb128 0x1
	.byte	0x9c
	.long	0x27506
	.uleb128 0x11
	.ascii "vec\0"
	.byte	0x10
	.word	0x1ce
	.byte	0x1f
	.long	0x1e68c
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x12
	.ascii "len\0"
	.byte	0x10
	.word	0x1d0
	.byte	0x9
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x14
	.long	0x1f18a
	.long	0x27525
	.quad	.LFB10934
	.quad	.LFE10934-.LFB10934
	.uleb128 0x1
	.byte	0x9c
	.long	0x2755a
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x12
	.ascii "radYaw\0"
	.byte	0x10
	.word	0x1c1
	.byte	0x9
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x12
	.ascii "radPitch\0"
	.byte	0x10
	.word	0x1c2
	.byte	0x9
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x14
	.long	0x1f123
	.long	0x27579
	.quad	.LFB10933
	.quad	.LFE10933-.LFB10933
	.uleb128 0x1
	.byte	0x9c
	.long	0x27693
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "i\0"
	.byte	0x10
	.word	0x1ae
	.byte	0x24
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "j\0"
	.byte	0x10
	.word	0x1ae
	.byte	0x2b
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x11
	.ascii "screenWidth\0"
	.byte	0x10
	.word	0x1ae
	.byte	0x32
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x11
	.ascii "screenHeight\0"
	.byte	0x10
	.word	0x1ae
	.byte	0x43
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x12
	.ascii "aspectRatio\0"
	.byte	0x10
	.word	0x1af
	.byte	0xf
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x12
	.ascii "fovRadians\0"
	.byte	0x10
	.word	0x1b0
	.byte	0xf
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x12
	.ascii "screenHalfWidth\0"
	.byte	0x10
	.word	0x1b1
	.byte	0xf
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x12
	.ascii "screenHalfHeight\0"
	.byte	0x10
	.word	0x1b2
	.byte	0xf
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x12
	.ascii "u\0"
	.byte	0x10
	.word	0x1b4
	.byte	0xf
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x12
	.ascii "v\0"
	.byte	0x10
	.word	0x1b5
	.byte	0xf
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x12
	.ascii "screenX\0"
	.byte	0x10
	.word	0x1b7
	.byte	0xf
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x12
	.ascii "screenY\0"
	.byte	0x10
	.word	0x1b8
	.byte	0xf
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x12
	.ascii "rayDir\0"
	.byte	0x10
	.word	0x1ba
	.byte	0xf
	.long	0x1e68c
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0
	.uleb128 0x4e
	.long	0x1f0e5
	.long	0x276b2
	.quad	.LFB10932
	.quad	.LFE10932-.LFB10932
	.uleb128 0x1
	.byte	0x9c
	.long	0x276bf
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1f0ae
	.long	0x276de
	.quad	.LFB10931
	.quad	.LFE10931-.LFB10931
	.uleb128 0x1
	.byte	0x9c
	.long	0x276fb
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF250
	.byte	0x10
	.word	0x1a5
	.byte	0x16
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1f07b
	.long	0x2771a
	.quad	.LFB10930
	.quad	.LFE10930-.LFB10930
	.uleb128 0x1
	.byte	0x9c
	.long	0x27737
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF250
	.byte	0x10
	.word	0x1a0
	.byte	0x17
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1f044
	.long	0x27756
	.quad	.LFB10929
	.quad	.LFE10929-.LFB10929
	.uleb128 0x1
	.byte	0x9c
	.long	0x27773
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF250
	.byte	0x10
	.word	0x19b
	.byte	0x16
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1f00b
	.long	0x27792
	.quad	.LFB10928
	.quad	.LFE10928-.LFB10928
	.uleb128 0x1
	.byte	0x9c
	.long	0x277af
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF250
	.byte	0x10
	.word	0x196
	.byte	0x1a
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1efd4
	.long	0x277ce
	.quad	.LFB10927
	.quad	.LFE10927-.LFB10927
	.uleb128 0x1
	.byte	0x9c
	.long	0x277eb
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF250
	.byte	0x10
	.word	0x191
	.byte	0x16
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1ef96
	.long	0x2780a
	.quad	.LFB10926
	.quad	.LFE10926-.LFB10926
	.uleb128 0x1
	.byte	0x9c
	.long	0x27827
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF250
	.byte	0x10
	.word	0x18c
	.byte	0x1c
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1ef5d
	.long	0x27846
	.quad	.LFB10925
	.quad	.LFE10925-.LFB10925
	.uleb128 0x1
	.byte	0x9c
	.long	0x27896
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "deltaYaw\0"
	.byte	0x10
	.word	0x180
	.byte	0x1e
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "deltaPitch\0"
	.byte	0x10
	.word	0x180
	.byte	0x2e
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x12
	.ascii "pitchLimit\0"
	.byte	0x10
	.word	0x185
	.byte	0x15
	.long	0x4f5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x14
	.long	0x1ef1a
	.long	0x278b5
	.quad	.LFB10924
	.quad	.LFE10924-.LFB10924
	.uleb128 0x1
	.byte	0x9c
	.long	0x278d2
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "pos\0"
	.byte	0x10
	.word	0x17b
	.byte	0x1c
	.long	0x1e68c
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0x4e
	.long	0x1eee7
	.long	0x278f1
	.quad	.LFB10923
	.quad	.LFE10923-.LFB10923
	.uleb128 0x1
	.byte	0x9c
	.long	0x27912
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1f2d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "degrees\0"
	.byte	0x10
	.word	0x177
	.byte	0x14
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1ec59
	.long	0x27931
	.quad	.LFB10922
	.quad	.LFE10922-.LFB10922
	.uleb128 0x1
	.byte	0x9c
	.long	0x2795e
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1eea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.quad	.LBB121
	.quad	.LBE121-.LBB121
	.uleb128 0x12
	.ascii "i\0"
	.byte	0x10
	.word	0x167
	.byte	0x10
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x4e
	.long	0x1eb4d
	.long	0x2797d
	.quad	.LFB10921
	.quad	.LFE10921-.LFB10921
	.uleb128 0x1
	.byte	0x9c
	.long	0x279b4
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1eea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "x\0"
	.byte	0x10
	.word	0x14d
	.byte	0x23
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "y\0"
	.byte	0x10
	.word	0x14d
	.byte	0x2f
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "z\0"
	.byte	0x10
	.word	0x14d
	.byte	0x3b
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x14
	.long	0x1eaee
	.long	0x279d3
	.quad	.LFB10918
	.quad	.LFE10918-.LFB10918
	.uleb128 0x1
	.byte	0x9c
	.long	0x27a54
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1eea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF171
	.byte	0x10
	.word	0x10d
	.byte	0x23
	.long	0x19e13
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1c
	.secrel32	.LASF235
	.byte	0x10
	.word	0x10d
	.byte	0x3c
	.long	0x1bc9f
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x48
	.quad	.LBB119
	.quad	.LBE119-.LBB119
	.long	0x27a33
	.uleb128 0x12
	.ascii "rect\0"
	.byte	0x10
	.word	0x114
	.byte	0x10
	.long	0x1d667
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.quad	.LVL7
	.long	0x1fa87
	.byte	0
	.uleb128 0x34
	.quad	.LBB120
	.quad	.LBE120-.LBB120
	.uleb128 0x12
	.ascii "i\0"
	.byte	0x10
	.word	0x118
	.byte	0x10
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x1ea9a
	.long	0x27a73
	.quad	.LFB10917
	.quad	.LFE10917-.LFB10917
	.uleb128 0x1
	.byte	0x9c
	.long	0x27abc
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1eea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "x\0"
	.byte	0x10
	.word	0x107
	.byte	0x25
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "y\0"
	.byte	0x10
	.word	0x107
	.byte	0x31
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "z\0"
	.byte	0x10
	.word	0x107
	.byte	0x3d
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x11
	.ascii "_data\0"
	.byte	0x10
	.word	0x107
	.byte	0x4b
	.long	0x1e442
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x14
	.long	0x1ea47
	.long	0x27adb
	.quad	.LFB10916
	.quad	.LFE10916-.LFB10916
	.uleb128 0x1
	.byte	0x9c
	.long	0x27b20
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1eea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "x\0"
	.byte	0x10
	.byte	0xff
	.byte	0x1c
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x18
	.ascii "y\0"
	.byte	0x10
	.byte	0xff
	.byte	0x28
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x18
	.ascii "z\0"
	.byte	0x10
	.byte	0xff
	.byte	0x34
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x18
	.ascii "_data\0"
	.byte	0x10
	.byte	0xff
	.byte	0x42
	.long	0x1e442
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x14
	.long	0x1e9ad
	.long	0x27b3f
	.quad	.LFB10909
	.quad	.LFE10909-.LFB10909
	.uleb128 0x1
	.byte	0x9c
	.long	0x27c38
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1eea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF182
	.byte	0x10
	.byte	0x92
	.byte	0x1f
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4a
	.secrel32	.LASF183
	.byte	0x10
	.byte	0x92
	.byte	0x2f
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x18
	.ascii "depth\0"
	.byte	0x10
	.byte	0x92
	.byte	0x40
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x48
	.quad	.LBB114
	.quad	.LBE114-.LBB114
	.long	0x27b9d
	.uleb128 0x27
	.ascii "i\0"
	.byte	0x10
	.byte	0x9b
	.byte	0x10
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x48
	.quad	.LBB115
	.quad	.LBE115-.LBB115
	.long	0x27bc0
	.uleb128 0x27
	.ascii "i\0"
	.byte	0x10
	.byte	0xa0
	.byte	0x10
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x34
	.quad	.LBB116
	.quad	.LBE116-.LBB116
	.uleb128 0x27
	.ascii "i\0"
	.byte	0x10
	.byte	0xab
	.byte	0x10
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x34
	.quad	.LBB117
	.quad	.LBE117-.LBB117
	.uleb128 0x27
	.ascii "x\0"
	.byte	0x10
	.byte	0xad
	.byte	0xd
	.long	0x1a9a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x27
	.ascii "y\0"
	.byte	0x10
	.byte	0xad
	.byte	0x21
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x27
	.ascii "z\0"
	.byte	0x10
	.byte	0xad
	.byte	0x3b
	.long	0x1a9a9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x27
	.ascii "back_buffer_cell\0"
	.byte	0x10
	.byte	0xae
	.byte	0x9
	.long	0x1e8fb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -82
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x10899
	.long	0x27c57
	.quad	.LFB10913
	.quad	.LFE10913-.LFB10913
	.uleb128 0x1
	.byte	0x9c
	.long	0x27c6c
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1ee75
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x57
	.long	0x1ee7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1053f
	.long	0x27c8b
	.quad	.LFB10914
	.quad	.LFE10914-.LFB10914
	.uleb128 0x1
	.byte	0x9c
	.long	0x27ca0
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1ee5c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x57
	.long	0x1ee61
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x58
	.long	0x1e8c7
	.byte	0x10
	.byte	0x75
	.byte	0x9
	.long	0x27cb0
	.long	0x27cba
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ed94
	.byte	0
	.uleb128 0x21
	.long	0x27ca0
	.ascii "_ZN6MATRIX18MaterialAttributesC1Ev\0"
	.long	0x27cfc
	.quad	.LFB10912
	.quad	.LFE10912-.LFB10912
	.uleb128 0x1
	.byte	0x9c
	.long	0x27d05
	.uleb128 0x8
	.long	0x27cb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1e965
	.long	0x27d13
	.byte	0x2
	.long	0x27d26
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ed85
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x42
	.long	0x27d05
	.ascii "_ZN6MATRIX4cellD1Ev\0"
	.long	0x27d59
	.quad	.LFB10908
	.quad	.LFE10908-.LFB10908
	.uleb128 0x1
	.byte	0x9c
	.long	0x27d62
	.uleb128 0x8
	.long	0x27d13
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1e935
	.long	0x27d70
	.byte	0x2
	.long	0x27d90
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1ed85
	.uleb128 0x3c
	.ascii "_MaterialType\0"
	.byte	0x10
	.byte	0x88
	.byte	0x13
	.long	0x1e442
	.byte	0
	.uleb128 0x42
	.long	0x27d62
	.ascii "_ZN6MATRIX4cellC1Et\0"
	.long	0x27dc3
	.quad	.LFB10905
	.quad	.LFE10905-.LFB10905
	.uleb128 0x1
	.byte	0x9c
	.long	0x27dd4
	.uleb128 0x8
	.long	0x27d70
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x27d79
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1e752
	.long	0x27df3
	.quad	.LFB10893
	.quad	.LFE10893-.LFB10893
	.uleb128 0x1
	.byte	0x9c
	.long	0x27e11
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1e7cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "other\0"
	.byte	0x10
	.byte	0x63
	.byte	0x22
	.long	0x1e7d1
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x14
	.long	0x1e724
	.long	0x27e30
	.quad	.LFB10892
	.quad	.LFE10892-.LFB10892
	.uleb128 0x1
	.byte	0x9c
	.long	0x27e4f
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1e7cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "scalar\0"
	.byte	0x10
	.byte	0x62
	.byte	0x1b
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x14
	.long	0x1e6f3
	.long	0x27e6e
	.quad	.LFB10891
	.quad	.LFE10891-.LFB10891
	.uleb128 0x1
	.byte	0x9c
	.long	0x27e8c
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1e7cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "other\0"
	.byte	0x10
	.byte	0x61
	.byte	0x1f
	.long	0x1e7d1
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x15
	.long	0x1e6bc
	.long	0x27e9a
	.byte	0x2
	.long	0x27ec5
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1e7c2
	.uleb128 0x3c
	.ascii "_x\0"
	.byte	0x10
	.byte	0x5f
	.byte	0x29
	.long	0x4ec
	.uleb128 0x3c
	.ascii "_y\0"
	.byte	0x10
	.byte	0x5f
	.byte	0x33
	.long	0x4ec
	.uleb128 0x3c
	.ascii "_z\0"
	.byte	0x10
	.byte	0x5f
	.byte	0x3d
	.long	0x4ec
	.byte	0
	.uleb128 0x42
	.long	0x27e8c
	.ascii "_ZN5Vec3DC1Efff\0"
	.long	0x27ef4
	.quad	.LFB10890
	.quad	.LFE10890-.LFB10890
	.uleb128 0x1
	.byte	0x9c
	.long	0x27f15
	.uleb128 0x8
	.long	0x27e9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x27ea3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x8
	.long	0x27eae
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x8
	.long	0x27eb9
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x150
	.ascii "ElementIndex\0"
	.byte	0x10
	.byte	0x4e
	.byte	0xa
	.ascii "_Z12ElementIndext\0"
	.long	0x1a9a9
	.quad	.LFB10884
	.quad	.LFE10884-.LFB10884
	.uleb128 0x1
	.byte	0x9c
	.long	0x27f64
	.uleb128 0x18
	.ascii "CELL\0"
	.byte	0x10
	.byte	0x4e
	.byte	0x22
	.long	0x1e442
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x151
	.secrel32	.LASF209
	.byte	0xf
	.word	0x9d3
	.byte	0x10
	.ascii "_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv\0"
	.long	0x666
	.quad	.LFB10823
	.quad	.LFE10823-.LFB10823
	.uleb128 0x1
	.byte	0x9c
	.long	0x27fee
	.uleb128 0x1c
	.secrel32	.LASF242
	.byte	0xf
	.word	0x9d3
	.byte	0x34
	.long	0x1cf9f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "riid\0"
	.byte	0xf
	.word	0x9d3
	.byte	0x48
	.long	0x1a28e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "ppv\0"
	.byte	0xf
	.word	0x9d3
	.byte	0x55
	.long	0x1a289
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x15
	.long	0x1e080
	.long	0x27ffc
	.byte	0x3
	.long	0x2801f
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1e30c
	.uleb128 0x2f
	.ascii "rgb\0"
	.byte	0x12
	.word	0x167
	.byte	0x26
	.long	0x55a
	.uleb128 0x2f
	.ascii "_a\0"
	.byte	0x12
	.word	0x167
	.byte	0x31
	.long	0x4de
	.byte	0
	.uleb128 0x15
	.long	0x1dffd
	.long	0x2802d
	.byte	0x2
	.long	0x28057
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1e30c
	.uleb128 0x2f
	.ascii "knownColor\0"
	.byte	0x12
	.word	0x15c
	.byte	0x21
	.long	0x1d7aa
	.uleb128 0x2f
	.ascii "_a\0"
	.byte	0x12
	.word	0x15c
	.byte	0x33
	.long	0x4de
	.byte	0
	.uleb128 0xec
	.long	0x2801f
	.ascii "_ZN4D2D16ColorFC1ENS0_4EnumEf\0"
	.long	0x28083
	.long	0x28096
	.uleb128 0x87
	.long	0x2802d
	.uleb128 0x87
	.long	0x28036
	.uleb128 0x87
	.long	0x2804a
	.byte	0
	.uleb128 0x7
	.long	0x1cc7c
	.uleb128 0x6c
	.long	0x1e185
	.long	0x280fc
	.uleb128 0x5a
	.secrel32	.LASF2
	.byte	0x12
	.byte	0x9d
	.byte	0x21
	.long	0x1d182
	.uleb128 0x5a
	.secrel32	.LASF197
	.byte	0x12
	.byte	0x9e
	.byte	0x22
	.long	0x28096
	.uleb128 0x3c
	.ascii "dpiX\0"
	.byte	0x12
	.byte	0x9f
	.byte	0xf
	.long	0x4de
	.uleb128 0x3c
	.ascii "dpiY\0"
	.byte	0x12
	.byte	0xa0
	.byte	0xf
	.long	0x4de
	.uleb128 0x3c
	.ascii "usage\0"
	.byte	0x12
	.byte	0xa1
	.byte	0x22
	.long	0x1d248
	.uleb128 0x5a
	.secrel32	.LASF202
	.byte	0x12
	.byte	0xa2
	.byte	0x1d
	.long	0x1d02d
	.uleb128 0x89
	.ascii "r\0"
	.byte	0x12
	.byte	0xa4
	.byte	0x23
	.long	0x1d5d4
	.byte	0
	.uleb128 0x6c
	.long	0x1e247
	.long	0x28130
	.uleb128 0x3c
	.ascii "dxgiFormat\0"
	.byte	0x12
	.byte	0x8f
	.byte	0x15
	.long	0x1cb8e
	.uleb128 0x5a
	.secrel32	.LASF181
	.byte	0x12
	.byte	0x90
	.byte	0x19
	.long	0x1cc39
	.uleb128 0x89
	.ascii "r\0"
	.byte	0x12
	.byte	0x92
	.byte	0x17
	.long	0x1cc70
	.byte	0
	.uleb128 0x6c
	.long	0x1e29f
	.long	0x2816b
	.uleb128 0x3c
	.ascii "left\0"
	.byte	0x12
	.byte	0x3e
	.byte	0x29
	.long	0x4de
	.uleb128 0x3c
	.ascii "top\0"
	.byte	0x12
	.byte	0x3e
	.byte	0x3c
	.long	0x4de
	.uleb128 0x5a
	.secrel32	.LASF168
	.byte	0x12
	.byte	0x3e
	.byte	0x4e
	.long	0x4de
	.uleb128 0x5a
	.secrel32	.LASF169
	.byte	0x12
	.byte	0x3e
	.byte	0x62
	.long	0x4de
	.byte	0
	.uleb128 0x6c
	.long	0x1e2da
	.long	0x2818d
	.uleb128 0x5a
	.secrel32	.LASF182
	.byte	0x12
	.byte	0x35
	.byte	0x2a
	.long	0x55a
	.uleb128 0x5a
	.secrel32	.LASF183
	.byte	0x12
	.byte	0x35
	.byte	0x3c
	.long	0x55a
	.byte	0
	.uleb128 0x152
	.ascii "__mingw_uuidof<ID2D1Factory>\0"
	.byte	0xf
	.word	0x994
	.byte	0x1
	.ascii "_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv\0"
	.long	0x281fe
	.quad	.LFB10722
	.quad	.LFE10722-.LFB10722
	.uleb128 0x1
	.byte	0x9c
	.long	0x281fe
	.uleb128 0xa
	.ascii "T\0"
	.long	0x1d275
	.byte	0
	.uleb128 0x7
	.long	0x6e1
	.uleb128 0x6
	.long	0x1d351
	.uleb128 0x4
	.long	0x28203
	.uleb128 0x7
	.long	0x1ccc4
	.uleb128 0x14
	.long	0x1d35b
	.long	0x28231
	.quad	.LFB10696
	.quad	.LFE10696-.LFB10696
	.uleb128 0x1
	.byte	0x9c
	.long	0x2824e
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x28208
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF200
	.byte	0xf
	.word	0x733
	.byte	0x27
	.long	0x2820d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7
	.long	0x1d5e1
	.uleb128 0x7
	.long	0x1d58b
	.uleb128 0x6
	.long	0x1e3dd
	.uleb128 0x14
	.long	0x1d27f
	.long	0x2827c
	.quad	.LFB10691
	.quad	.LFE10691-.LFB10691
	.uleb128 0x1
	.byte	0x9c
	.long	0x282f0
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x25677
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "renderTargetProperties\0"
	.byte	0xf
	.word	0x64a
	.byte	0x49
	.long	0x2824e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "hwndRenderTargetProperties\0"
	.byte	0xf
	.word	0x64a
	.byte	0x8b
	.long	0x28253
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "hwndRenderTarget\0"
	.byte	0xf
	.word	0x64a
	.byte	0xbf
	.long	0x28258
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x6
	.long	0x1d3ac
	.uleb128 0x4
	.long	0x282f0
	.uleb128 0x7
	.long	0x1d692
	.uleb128 0x14
	.long	0x1d3c4
	.long	0x2831e
	.quad	.LFB10642
	.quad	.LFE10642-.LFB10642
	.uleb128 0x1
	.byte	0x9c
	.long	0x28342
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x282f5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "clearColor\0"
	.byte	0xf
	.word	0x397
	.byte	0x24
	.long	0x282fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7
	.long	0x1d662
	.uleb128 0x6
	.long	0x1d662
	.uleb128 0x14
	.long	0x1d412
	.long	0x2836b
	.quad	.LFB10637
	.quad	.LFE10637-.LFB10637
	.uleb128 0x1
	.byte	0x9c
	.long	0x283fa
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x282f5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "bitmap\0"
	.byte	0xf
	.word	0x383
	.byte	0x22
	.long	0x1e3fb
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "destinationRectangle\0"
	.byte	0xf
	.word	0x383
	.byte	0x3d
	.long	0x28342
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "opacity\0"
	.byte	0xf
	.word	0x383
	.byte	0x59
	.long	0x4de
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x11
	.ascii "interpolationMode\0"
	.byte	0xf
	.word	0x383
	.byte	0x88
	.long	0x1ce70
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x11
	.ascii "sourceRectangle\0"
	.byte	0xf
	.word	0x383
	.byte	0xd6
	.long	0x28347
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.byte	0
	.uleb128 0x6
	.long	0x1d4fb
	.uleb128 0x4
	.long	0x283fa
	.uleb128 0x14
	.long	0x1d4ae
	.long	0x28423
	.quad	.LFB10606
	.quad	.LFE10606-.LFB10606
	.uleb128 0x1
	.byte	0x9c
	.long	0x28442
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x283ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x12
	.ascii "__ret\0"
	.byte	0xf
	.word	0x2f1
	.byte	0x1b
	.long	0x1cc70
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x15
	.long	0x7a50
	.long	0x28450
	.byte	0x2
	.long	0x2845a
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bd3f
	.byte	0
	.uleb128 0x21
	.long	0x28442
	.ascii "_ZNSt6threadC1Ev\0"
	.long	0x2848a
	.quad	.LFB9886
	.quad	.LFE9886-.LFB9886
	.uleb128 0x1
	.byte	0x9c
	.long	0x28493
	.uleb128 0x8
	.long	0x28450
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xc7af
	.quad	.LFB9743
	.quad	.LFE9743-.LFB9743
	.uleb128 0x1
	.byte	0x9c
	.long	0x28501
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0x88a3
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcbbb
	.uleb128 0x1c
	.secrel32	.LASF230
	.byte	0xe
	.word	0x302
	.byte	0x34
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF231
	.byte	0xe
	.word	0x303
	.byte	0x26
	.long	0x1beba
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x22
	.ascii "__ct\0"
	.byte	0xe
	.word	0x305
	.byte	0x8
	.long	0x19489
	.byte	0
	.uleb128 0x15
	.long	0x9047
	.long	0x28521
	.byte	0x2
	.long	0x28538
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcbbb
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1be4c
	.uleb128 0x2f
	.ascii "__d\0"
	.byte	0xe
	.word	0x201
	.byte	0x38
	.long	0x1beba
	.byte	0
	.uleb128 0x21
	.long	0x28501
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE\0"
	.long	0x285c2
	.quad	.LFB9747
	.quad	.LFE9747-.LFB9747
	.uleb128 0x1
	.byte	0x9c
	.long	0x285d3
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0xcbbb
	.uleb128 0x8
	.long	0x28521
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2852a
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x9fa0
	.long	0x285ea
	.byte	0x2
	.long	0x28601
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1be92
	.uleb128 0x53
	.secrel32	.LASF229
	.byte	0xe
	.word	0x1f9
	.byte	0x2d
	.long	0x1be6a
	.byte	0
	.uleb128 0x42
	.long	0x285d3
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_\0"
	.long	0x2865f
	.quad	.LFB9727
	.quad	.LFE9727-.LFB9727
	.uleb128 0x1
	.byte	0x9c
	.long	0x28670
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x8
	.long	0x285ea
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x285f3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xa8
	.long	0x9173
	.quad	.LFB9708
	.quad	.LFE9708-.LFB9708
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x15
	.long	0x90ce
	.long	0x2869f
	.byte	0x2
	.long	0x286b6
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1be4c
	.uleb128 0x53
	.secrel32	.LASF229
	.byte	0xe
	.word	0x1f9
	.byte	0x2d
	.long	0x1be6a
	.byte	0
	.uleb128 0x42
	.long	0x28688
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_\0"
	.long	0x2871d
	.quad	.LFB9707
	.quad	.LFE9707-.LFB9707
	.uleb128 0x1
	.byte	0x9c
	.long	0x2872e
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x8
	.long	0x2869f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x286a8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xa7
	.long	0x8edd
	.quad	.LFB9703
	.quad	.LFE9703-.LFB9703
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x17
	.long	0xc8ac
	.quad	.LFB9700
	.quad	.LFE9700-.LFB9700
	.uleb128 0x1
	.byte	0x9c
	.long	0x287b4
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF112
	.long	0x88a3
	.uleb128 0x3
	.secrel32	.LASF96
	.long	0x110
	.uleb128 0x3
	.secrel32	.LASF97
	.long	0x88a3
	.uleb128 0x1c
	.secrel32	.LASF230
	.byte	0xe
	.word	0x302
	.byte	0x34
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF231
	.byte	0xe
	.word	0x303
	.byte	0x26
	.long	0x1be51
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x22
	.ascii "__ct\0"
	.byte	0xe
	.word	0x305
	.byte	0x8
	.long	0x19496
	.byte	0
	.uleb128 0x4e
	.long	0x8b1b
	.long	0x287d3
	.quad	.LFB9701
	.quad	.LFE9701-.LFB9701
	.uleb128 0x1
	.byte	0x9c
	.long	0x287e0
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1be60
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xa7
	.long	0x19373
	.quad	.LFB9627
	.quad	.LFE9627-.LFB9627
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x14
	.long	0x87f8
	.long	0x28817
	.quad	.LFB9626
	.quad	.LFE9626-.LFB9626
	.uleb128 0x1
	.byte	0x9c
	.long	0x28835
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bd62
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__id\0"
	.byte	0xd
	.word	0x12a
	.byte	0x24
	.long	0x1bd67
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x29
	.long	0x194a3
	.quad	.LFB9625
	.quad	.LFE9625-.LFB9625
	.uleb128 0x1
	.byte	0x9c
	.long	0x28871
	.uleb128 0x11
	.ascii "__x\0"
	.byte	0xd
	.word	0x118
	.byte	0x19
	.long	0x79b8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__y\0"
	.byte	0xd
	.word	0x118
	.byte	0x29
	.long	0x79b8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x4e
	.long	0x7c35
	.long	0x28890
	.quad	.LFB9618
	.quad	.LFE9618-.LFB9618
	.uleb128 0x1
	.byte	0x9c
	.long	0x2889d
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bd58
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x7ba1
	.long	0x288bc
	.quad	.LFB9617
	.quad	.LFE9617-.LFB9617
	.uleb128 0x1
	.byte	0x9c
	.long	0x288c9
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bd58
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x7b6f
	.long	0x288e8
	.quad	.LFB9615
	.quad	.LFE9615-.LFB9615
	.uleb128 0x1
	.byte	0x9c
	.long	0x28904
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bd3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0xd
	.byte	0xaa
	.byte	0x12
	.long	0x1bd4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x7b3d
	.long	0x28923
	.quad	.LFB9614
	.quad	.LFE9614-.LFB9614
	.uleb128 0x1
	.byte	0x9c
	.long	0x28956
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bd3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0xd
	.byte	0xa1
	.byte	0x20
	.long	0x1bd49
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0xf4
	.long	0x297d2
	.quad	.LBB104
	.quad	.LBE104-.LBB104
	.byte	0xa4
	.byte	0
	.uleb128 0x15
	.long	0x7a78
	.long	0x28964
	.byte	0x2
	.long	0x28977
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bd3f
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x21
	.long	0x28956
	.ascii "_ZNSt6threadD1Ev\0"
	.long	0x289a7
	.quad	.LFB9610
	.quad	.LFE9610-.LFB9610
	.uleb128 0x1
	.byte	0x9c
	.long	0x289c7
	.uleb128 0x8
	.long	0x28964
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf4
	.long	0x297d2
	.quad	.LBB102
	.quad	.LBE102-.LBB102
	.byte	0x97
	.byte	0
	.uleb128 0x15
	.long	0x7a03
	.long	0x289d5
	.byte	0x2
	.long	0x289ec
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bd35
	.uleb128 0x3c
	.ascii "__id\0"
	.byte	0xd
	.byte	0x58
	.byte	0x1d
	.long	0x7a35
	.byte	0
	.uleb128 0x42
	.long	0x289c7
	.ascii "_ZNSt6thread2idC1Ey\0"
	.long	0x28a1f
	.quad	.LFB9606
	.quad	.LFE9606-.LFB9606
	.uleb128 0x1
	.byte	0x9c
	.long	0x28a30
	.uleb128 0x8
	.long	0x289d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x289de
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x79d9
	.long	0x28a3e
	.byte	0x2
	.long	0x28a48
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1bd35
	.byte	0
	.uleb128 0x42
	.long	0x28a30
	.ascii "_ZNSt6thread2idC1Ev\0"
	.long	0x28a7b
	.quad	.LFB9603
	.quad	.LFE9603-.LFB9603
	.uleb128 0x1
	.byte	0x9c
	.long	0x28a84
	.uleb128 0x8
	.long	0x28a3e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x4e14
	.long	0x28aa3
	.quad	.LFB9404
	.quad	.LFE9404-.LFB9404
	.uleb128 0x1
	.byte	0x9c
	.long	0x28ae2
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bcae
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x86
	.long	0x25ecb
	.quad	.LBB97
	.quad	.LBE97-.LBB97
	.byte	0xc
	.byte	0x57
	.byte	0x1a
	.uleb128 0x8
	.long	0x25ee2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x8
	.long	0x25ed9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x41
	.long	0x25eef
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x4dad
	.long	0x28b01
	.quad	.LFB9402
	.quad	.LFE9402-.LFB9402
	.uleb128 0x1
	.byte	0x9c
	.long	0x28b1d
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1bc95
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__i\0"
	.byte	0xc
	.byte	0x4f
	.byte	0x14
	.long	0x1ab64
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x194de
	.quad	.LFB8991
	.quad	.LFE8991-.LFB8991
	.uleb128 0x1
	.byte	0x9c
	.long	0x28b48
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0xb
	.byte	0x7d
	.byte	0x31
	.long	0x3a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x19548
	.quad	.LFB8990
	.quad	.LFE8990-.LFB8990
	.uleb128 0x1
	.byte	0x9c
	.long	0x28b73
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0xb
	.byte	0x76
	.byte	0x28
	.long	0x3a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0x195a0
	.quad	.LFB8989
	.quad	.LFE8989-.LFB8989
	.uleb128 0x1
	.byte	0x9c
	.long	0x28b9e
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0xb
	.byte	0x6f
	.byte	0x29
	.long	0x3a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0x195fa
	.quad	.LFB8988
	.quad	.LFE8988-.LFB8988
	.uleb128 0x1
	.byte	0x9c
	.long	0x28bda
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0xb
	.byte	0x68
	.byte	0x1a
	.long	0x3a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__mod\0"
	.byte	0xb
	.byte	0x68
	.byte	0x37
	.long	0x3a5d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x29
	.long	0x1964d
	.quad	.LFB8987
	.quad	.LFE8987-.LFB8987
	.uleb128 0x1
	.byte	0x9c
	.long	0x28c16
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0xb
	.byte	0x62
	.byte	0x1a
	.long	0x3a08
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__mod\0"
	.byte	0xb
	.byte	0x62
	.byte	0x37
	.long	0x3a5d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x16d1
	.long	0x28c35
	.quad	.LFB8967
	.quad	.LFE8967-.LFB8967
	.uleb128 0x1
	.byte	0x9c
	.long	0x28c94
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b782
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF214
	.byte	0xa
	.byte	0xfc
	.byte	0x2b
	.long	0x1b773
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "__old\0"
	.byte	0xa
	.byte	0xfc
	.byte	0x45
	.long	0x1694
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x2c
	.secrel32	.LASF220
	.byte	0xa
	.word	0x101
	.byte	0x14
	.long	0x1694
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x34
	.quad	.LBB96
	.quad	.LBE96-.LBB96
	.uleb128 0x12
	.ascii "__l\0"
	.byte	0xa
	.word	0x105
	.byte	0x18
	.long	0x3851
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x17
	.long	0x15fb
	.quad	.LFB8953
	.quad	.LFE8953-.LFB8953
	.uleb128 0x1
	.byte	0x9c
	.long	0x28d2a
	.uleb128 0x4a
	.secrel32	.LASF214
	.byte	0xa
	.byte	0xf0
	.byte	0x1a
	.long	0x519
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x47
	.ascii "__ct\0"
	.byte	0xa
	.byte	0xf2
	.long	0x149
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x153
	.ascii "__w\0"
	.byte	0xa
	.byte	0xf3
	.byte	0x1c
	.ascii "_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w\0"
	.long	0x28d2a
	.uleb128 0x9
	.byte	0x3
	.quad	_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w
	.uleb128 0x27
	.ascii "__key\0"
	.byte	0xa
	.byte	0xf4
	.byte	0x7
	.long	0xf1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0xeb
	.long	0x13d7
	.byte	0x40
	.long	0x28d3d
	.uleb128 0x8a
	.long	0xf1
	.byte	0xf
	.byte	0
	.uleb128 0x154
	.ascii "__tcf_0\0"
	.quad	.LFB8966
	.quad	.LFE8966-.LFB8966
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x15
	.long	0x146b
	.long	0x28d67
	.byte	0x2
	.long	0x28d71
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b764
	.byte	0
	.uleb128 0x21
	.long	0x28d59
	.ascii "_ZNSt8__detail18__waiter_pool_baseC1Ev\0"
	.long	0x28db7
	.quad	.LFB8965
	.quad	.LFE8965-.LFB8965
	.uleb128 0x1
	.byte	0x9c
	.long	0x28dc0
	.uleb128 0x8
	.long	0x28d67
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x3455
	.long	0x28dce
	.byte	0x2
	.long	0x28dd8
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b70f
	.byte	0
	.uleb128 0x21
	.long	0x28dc0
	.ascii "_ZNSt5mutexC1Ev\0"
	.long	0x28e07
	.quad	.LFB8963
	.quad	.LFE8963-.LFB8963
	.uleb128 0x1
	.byte	0x9c
	.long	0x28e10
	.uleb128 0x8
	.long	0x28dce
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x58
	.long	0x1642
	.byte	0xa
	.byte	0xbc
	.byte	0xc
	.long	0x28e20
	.long	0x28e33
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b764
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x21
	.long	0x28e10
	.ascii "_ZNSt8__detail18__waiter_pool_baseD1Ev\0"
	.long	0x28e79
	.quad	.LFB8959
	.quad	.LFE8959-.LFB8959
	.uleb128 0x1
	.byte	0x9c
	.long	0x28e82
	.uleb128 0x8
	.long	0x28e20
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x347c
	.long	0x28e90
	.byte	0x2
	.long	0x28ea3
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b70f
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x21
	.long	0x28e82
	.ascii "_ZNSt5mutexD1Ev\0"
	.long	0x28ed2
	.quad	.LFB8957
	.quad	.LFE8957-.LFB8957
	.uleb128 0x1
	.byte	0x9c
	.long	0x28edb
	.uleb128 0x8
	.long	0x28e90
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x15a3
	.long	0x28efa
	.quad	.LFB8952
	.quad	.LFE8952-.LFB8952
	.uleb128 0x1
	.byte	0x9c
	.long	0x28f39
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b764
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4a
	.secrel32	.LASF214
	.byte	0xa
	.byte	0xe0
	.byte	0x2a
	.long	0x1b773
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "__all\0"
	.byte	0xa
	.byte	0xe0
	.byte	0x37
	.long	0x1ab64
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x18
	.ascii "__bare\0"
	.byte	0xa
	.byte	0xe0
	.byte	0x43
	.long	0x1ab64
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x4e
	.long	0x1550
	.long	0x28f58
	.quad	.LFB8951
	.quad	.LFE8951-.LFB8951
	.uleb128 0x1
	.byte	0x9c
	.long	0x28f76
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b76e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x27
	.ascii "__res\0"
	.byte	0xa
	.byte	0xda
	.byte	0x14
	.long	0x1694
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x4e
	.long	0x14fc
	.long	0x28f95
	.quad	.LFB8950
	.quad	.LFE8950-.LFB8950
	.uleb128 0x1
	.byte	0x9c
	.long	0x28fa2
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b764
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x4e
	.long	0x14a8
	.long	0x28fc1
	.quad	.LFB8949
	.quad	.LFE8949-.LFB8949
	.uleb128 0x1
	.byte	0x9c
	.long	0x28fce
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b764
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x4e
	.long	0x138f
	.long	0x28fed
	.quad	.LFB8946
	.quad	.LFE8946-.LFB8946
	.uleb128 0x1
	.byte	0x9c
	.long	0x28ffa
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b75a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xa8
	.long	0x201a
	.quad	.LFB8945
	.quad	.LFE8945-.LFB8945
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0xa7
	.long	0x204d
	.quad	.LFB8944
	.quad	.LFE8944-.LFB8944
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x14
	.long	0x37cd
	.long	0x29049
	.quad	.LFB8940
	.quad	.LFE8940-.LFB8940
	.uleb128 0x1
	.byte	0x9c
	.long	0x29065
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b728
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x27
	.ascii "__e\0"
	.byte	0x9
	.byte	0xb8
	.byte	0xb
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x14
	.long	0x3798
	.long	0x29084
	.quad	.LFB8939
	.quad	.LFE8939-.LFB8939
	.uleb128 0x1
	.byte	0x9c
	.long	0x290a0
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b728
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x27
	.ascii "__e\0"
	.byte	0x9
	.byte	0xb1
	.byte	0xb
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x14
	.long	0x36f9
	.long	0x290bf
	.quad	.LFB8937
	.quad	.LFE8937-.LFB8937
	.uleb128 0x1
	.byte	0x9c
	.long	0x290ea
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b728
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0x9
	.byte	0x98
	.byte	0x11
	.long	0x1b719
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x27
	.ascii "__e\0"
	.byte	0x9
	.byte	0x9a
	.byte	0xb
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x15
	.long	0x361c
	.long	0x290f8
	.byte	0x2
	.long	0x2911a
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b728
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.uleb128 0x74
	.uleb128 0x89
	.ascii "__e\0"
	.byte	0x9
	.byte	0x8d
	.byte	0xb
	.long	0x184
	.byte	0
	.byte	0
	.uleb128 0x21
	.long	0x290ea
	.ascii "_ZNSt9__condvarD1Ev\0"
	.long	0x2914d
	.quad	.LFB8935
	.quad	.LFE8935-.LFB8935
	.uleb128 0x1
	.byte	0x9c
	.long	0x29184
	.uleb128 0x8
	.long	0x290f8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x75
	.long	0x2910a
	.long	0x29164
	.uleb128 0x6d
	.long	0x2910b
	.byte	0
	.uleb128 0x88
	.long	0x2910a
	.quad	.LBB90
	.quad	.LBE90-.LBB90
	.uleb128 0x41
	.long	0x2910b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0x35f1
	.long	0x29192
	.byte	0x2
	.long	0x2919c
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b728
	.byte	0
	.uleb128 0x42
	.long	0x29184
	.ascii "_ZNSt9__condvarC1Ev\0"
	.long	0x291cf
	.quad	.LFB8932
	.quad	.LFE8932-.LFB8932
	.uleb128 0x1
	.byte	0x9c
	.long	0x291d8
	.uleb128 0x8
	.long	0x29192
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x4e
	.long	0x35aa
	.long	0x291f7
	.quad	.LFB8929
	.quad	.LFE8929-.LFB8929
	.uleb128 0x1
	.byte	0x9c
	.long	0x29204
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b70f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x356f
	.long	0x29223
	.quad	.LFB8928
	.quad	.LFE8928-.LFB8928
	.uleb128 0x1
	.byte	0x9c
	.long	0x29230
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b70f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x350e
	.long	0x2924f
	.quad	.LFB8926
	.quad	.LFE8926-.LFB8926
	.uleb128 0x1
	.byte	0x9c
	.long	0x2926b
	.uleb128 0xe
	.secrel32	.LASF210
	.long	0x1b70f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x27
	.ascii "__e\0"
	.byte	0x9
	.byte	0x64
	.byte	0xb
	.long	0x184
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x15
	.long	0x338d
	.long	0x29279
	.byte	0x2
	.long	0x2928c
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b6fb
	.uleb128 0xd
	.secrel32	.LASF211
	.long	0x18b
	.byte	0
	.uleb128 0x21
	.long	0x2926b
	.ascii "_ZNSt12__mutex_baseD2Ev\0"
	.long	0x292c3
	.quad	.LFB8924
	.quad	.LFE8924-.LFB8924
	.uleb128 0x1
	.byte	0x9c
	.long	0x292cc
	.uleb128 0x8
	.long	0x29279
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x335e
	.long	0x292da
	.byte	0x2
	.long	0x292e4
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1b6fb
	.byte	0
	.uleb128 0x21
	.long	0x292cc
	.ascii "_ZNSt12__mutex_baseC2Ev\0"
	.long	0x2931b
	.quad	.LFB8921
	.quad	.LFE8921-.LFB8921
	.uleb128 0x1
	.byte	0x9c
	.long	0x29324
	.uleb128 0x8
	.long	0x292da
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7f
	.ascii "__gthread_cond_destroy\0"
	.word	0x373
	.long	0x184
	.quad	.LFB7465
	.quad	.LFE7465-.LFB7465
	.uleb128 0x1
	.byte	0x9c
	.long	0x29369
	.uleb128 0x1c
	.secrel32	.LASF251
	.byte	0x8
	.word	0x373
	.byte	0x2b
	.long	0x1b737
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7f
	.ascii "__gthread_cond_wait\0"
	.word	0x35f
	.long	0x184
	.quad	.LFB7462
	.quad	.LFE7462-.LFB7462
	.uleb128 0x1
	.byte	0x9c
	.long	0x293bb
	.uleb128 0x1c
	.secrel32	.LASF251
	.byte	0x8
	.word	0x35f
	.byte	0x28
	.long	0x1b737
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1c
	.secrel32	.LASF252
	.byte	0x8
	.word	0x35f
	.byte	0x43
	.long	0x1b6f1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7f
	.ascii "__gthread_cond_signal\0"
	.word	0x359
	.long	0x184
	.quad	.LFB7461
	.quad	.LFE7461-.LFB7461
	.uleb128 0x1
	.byte	0x9c
	.long	0x293ff
	.uleb128 0x1c
	.secrel32	.LASF251
	.byte	0x8
	.word	0x359
	.byte	0x2a
	.long	0x1b737
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7f
	.ascii "__gthread_cond_broadcast\0"
	.word	0x353
	.long	0x184
	.quad	.LFB7460
	.quad	.LFE7460-.LFB7460
	.uleb128 0x1
	.byte	0x9c
	.long	0x29446
	.uleb128 0x1c
	.secrel32	.LASF251
	.byte	0x8
	.word	0x353
	.byte	0x2d
	.long	0x1b737
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7f
	.ascii "__gthread_mutex_unlock\0"
	.word	0x308
	.long	0x184
	.quad	.LFB7453
	.quad	.LFE7453-.LFB7453
	.uleb128 0x1
	.byte	0x9c
	.long	0x2948b
	.uleb128 0x1c
	.secrel32	.LASF252
	.byte	0x8
	.word	0x308
	.byte	0x2c
	.long	0x1b6f1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7f
	.ascii "__gthread_mutex_lock\0"
	.word	0x2ea
	.long	0x184
	.quad	.LFB7450
	.quad	.LFE7450-.LFB7450
	.uleb128 0x1
	.byte	0x9c
	.long	0x294ce
	.uleb128 0x1c
	.secrel32	.LASF252
	.byte	0x8
	.word	0x2ea
	.byte	0x2a
	.long	0x1b6f1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7f
	.ascii "__gthread_mutex_destroy\0"
	.word	0x2e1
	.long	0x184
	.quad	.LFB7449
	.quad	.LFE7449-.LFB7449
	.uleb128 0x1
	.byte	0x9c
	.long	0x29514
	.uleb128 0x1c
	.secrel32	.LASF252
	.byte	0x8
	.word	0x2e1
	.byte	0x2d
	.long	0x1b6f1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x155
	.ascii "__gthread_mutex_init_function\0"
	.byte	0x8
	.word	0x2da
	.byte	0x1
	.quad	.LFB7448
	.quad	.LFE7448-.LFB7448
	.uleb128 0x1
	.byte	0x9c
	.long	0x2955f
	.uleb128 0x1c
	.secrel32	.LASF252
	.byte	0x8
	.word	0x2da
	.byte	0x33
	.long	0x1b6f1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xf5
	.ascii "__gthread_yield\0"
	.word	0x2b3
	.long	0x184
	.quad	.LFB7442
	.quad	.LFE7442-.LFB7442
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0xf5
	.ascii "__gthread_self\0"
	.word	0x2ad
	.long	0x1b601
	.quad	.LFB7441
	.quad	.LFE7441-.LFB7441
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x156
	.ascii "__gthread_active_p\0"
	.byte	0x8
	.word	0x12c
	.byte	0x1
	.long	0x184
	.quad	.LFB7436
	.quad	.LFE7436-.LFB7436
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x17
	.long	0x2a33
	.quad	.LFB7262
	.quad	.LFE7262-.LFB7262
	.uleb128 0x1
	.byte	0x9c
	.long	0x29633
	.uleb128 0x4a
	.secrel32	.LASF215
	.byte	0x7
	.byte	0xcc
	.byte	0x16
	.long	0x519
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__clength\0"
	.byte	0x7
	.byte	0xcc
	.byte	0x24
	.long	0xe3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "__seed\0"
	.byte	0x7
	.byte	0xcd
	.byte	0xa
	.long	0xe3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xa8
	.long	0x26e1
	.quad	.LFB6601
	.quad	.LFE6601-.LFB6601
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x157
	.secrel32	.LASF208
	.byte	0x5
	.byte	0xae
	.byte	0x21
	.ascii "_ZnwyPv\0"
	.long	0x4b0
	.quad	.LFB6076
	.quad	.LFE6076-.LFB6076
	.uleb128 0x1
	.byte	0x9c
	.long	0x2968e
	.uleb128 0x57
	.long	0xe3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x5
	.byte	0xae
	.byte	0x41
	.long	0x4b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x29
	.long	0x196a0
	.quad	.LFB5951
	.quad	.LFE5951-.LFB5951
	.uleb128 0x1
	.byte	0x9c
	.long	0x296c2
	.uleb128 0x11
	.ascii "__v\0"
	.byte	0x4
	.word	0x130
	.byte	0x20
	.long	0x11eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x57
	.long	0x104f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x29
	.long	0x196f4
	.quad	.LFB5949
	.quad	.LFE5949-.LFB5949
	.uleb128 0x1
	.byte	0x9c
	.long	0x296f6
	.uleb128 0x11
	.ascii "__v\0"
	.byte	0x4
	.word	0x126
	.byte	0x20
	.long	0x11eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x57
	.long	0x104f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x1059
	.long	0x29704
	.byte	0x2
	.long	0x29713
	.uleb128 0xd
	.secrel32	.LASF210
	.long	0x1abd0
	.uleb128 0x1
	.long	0x1abcb
	.byte	0
	.uleb128 0x42
	.long	0x296f6
	.ascii "_ZNSt9__cmp_cat8__unspecC1EPS0_\0"
	.long	0x29752
	.quad	.LFB5910
	.quad	.LFE5910-.LFB5910
	.uleb128 0x1
	.byte	0x9c
	.long	0x29763
	.uleb128 0x8
	.long	0x29704
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2970d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x29
	.long	0x19747
	.quad	.LFB5683
	.quad	.LFE5683-.LFB5683
	.uleb128 0x1
	.byte	0x9c
	.long	0x2978f
	.uleb128 0x11
	.ascii "__x\0"
	.byte	0x3
	.word	0x104
	.byte	0xf
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x29
	.long	0x1976c
	.quad	.LFB5680
	.quad	.LFE5680-.LFB5680
	.uleb128 0x1
	.byte	0x9c
	.long	0x297ba
	.uleb128 0x18
	.ascii "__x\0"
	.byte	0x3
	.byte	0xf1
	.byte	0xe
	.long	0x4ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xa8
	.long	0x1978e
	.quad	.LFB404
	.quad	.LFE404-.LFB404
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x158
	.long	0x197b0
	.byte	0x3
	.uleb128 0x159
	.secrel32	.LASF151
	.byte	0x1
	.word	0x137
	.byte	0xa
	.secrel32	.LASF253
	.byte	0
	.byte	0
	.section	.debug_abbrev,"dr"
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x8
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x10
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x2f
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x42
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x4107
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x48
	.byte	0
	.uleb128 0x7d
	.uleb128 0x1
	.uleb128 0x7f
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x32
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x33
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x34
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x35
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x36
	.uleb128 0x4107
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x37
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 23
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x38
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x39
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x3a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3c
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3e
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x3f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x40
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x41
	.uleb128 0x34
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x42
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x43
	.uleb128 0x8
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x44
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x45
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x46
	.uleb128 0x4107
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x47
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 22
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x48
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x49
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1e
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0x4a
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x4b
	.uleb128 0x1c
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x4c
	.uleb128 0x1c
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.byte	0
	.byte	0
	.uleb128 0x4d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 23
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x50
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x51
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x52
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x53
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x54
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x55
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x56
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x57
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x58
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x59
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x5a
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5b
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x5c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5e
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1e
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x5f
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x60
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1e
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x61
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 76
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x62
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x63
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x64
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x65
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x66
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x67
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x68
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0xb
	.uleb128 0x59
	.uleb128 0x5
	.uleb128 0x57
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x69
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6b
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 3
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6d
	.uleb128 0x34
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6f
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x70
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x71
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x72
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3e
	.uleb128 0x21
	.sleb128 7
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 4
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 14
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x73
	.uleb128 0x4108
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x74
	.uleb128 0xb
	.byte	0x1
	.byte	0
	.byte	0
	.uleb128 0x75
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x76
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x77
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x78
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x79
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x7a
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7b
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0x7c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 23
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7e
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x80
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x81
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x82
	.uleb128 0x4107
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x83
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x84
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 23
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x85
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x86
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0xb
	.uleb128 0x59
	.uleb128 0xb
	.uleb128 0x57
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x87
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x88
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x89
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8a
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x8b
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8c
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x8d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8e
	.uleb128 0x30
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x21
	.sleb128 0
	.byte	0
	.byte	0
	.uleb128 0x8f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 23
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x90
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x91
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x92
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 16
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x93
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 19
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x94
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0x21
	.sleb128 16
	.uleb128 0x59
	.uleb128 0x5
	.uleb128 0x57
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x95
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 4
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x96
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x97
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x98
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 12
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x99
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9a
	.uleb128 0x4107
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 13
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 249
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 21
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 14
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 450
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 3
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 14
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 517
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 12
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 23
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 20
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa0
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 25
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa1
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0xa2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa3
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 76
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xa
	.uleb128 0x6c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xa4
	.uleb128 0x4108
	.byte	0x1
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 23
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 742
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 20
	.byte	0
	.byte	0
	.uleb128 0xa5
	.uleb128 0x4108
	.byte	0x1
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 13
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 205
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 23
	.byte	0
	.byte	0
	.uleb128 0xa6
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa7
	.uleb128 0x2e
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xa8
	.uleb128 0x2e
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xa9
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6d
	.uleb128 0x19
	.uleb128 0x3e
	.uleb128 0x21
	.sleb128 5
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xaa
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0x21
	.sleb128 -1
	.byte	0
	.byte	0
	.uleb128 0xab
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xac
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xad
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 10
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.uleb128 0x6c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xae
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xaf
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb0
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb1
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb2
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xb3
	.uleb128 0x2
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xb4
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb5
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb6
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 332
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 28
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 3
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0xb7
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 335
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 40
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 3
	.byte	0
	.byte	0
	.uleb128 0xb8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb9
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 16
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xba
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xbb
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 19
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xbc
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 51
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 33
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0x6
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0xbd
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0xbe
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xbf
	.uleb128 0x4107
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0xc0
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc1
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 23
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 1035
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 29
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xc2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 235
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 24
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc3
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc4
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc5
	.uleb128 0x21
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc6
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 6
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc9
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xca
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 38
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 10
	.byte	0
	.byte	0
	.uleb128 0xcb
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xcc
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xcd
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xce
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xcf
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 10
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xd0
	.uleb128 0x4
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6d
	.uleb128 0x19
	.uleb128 0x3e
	.uleb128 0x21
	.sleb128 7
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 14
	.byte	0
	.byte	0
	.uleb128 0xd1
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 6
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 41
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xd
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0xd2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd3
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xd4
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd5
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 9
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 2
	.byte	0
	.byte	0
	.uleb128 0xd6
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 9
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 12
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd9
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xda
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xdb
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 13
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 14
	.uleb128 0x1d
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xdc
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 13
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x4c
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x4d
	.uleb128 0x18
	.uleb128 0x1d
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xdd
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x4c
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x1d
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xde
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xdf
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 51
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 33
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0x21
	.sleb128 1000
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0xe0
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x21
	.sleb128 1000
	.byte	0
	.byte	0
	.uleb128 0xe1
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 598
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe3
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 56
	.uleb128 0x88
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 19
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe4
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 19
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xe5
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 19
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe6
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 19
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe8
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe9
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xea
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 16
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 3
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xeb
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xec
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xed
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xee
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0x21
	.sleb128 19
	.uleb128 0x59
	.uleb128 0xb
	.uleb128 0x57
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xef
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xf0
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 13
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf1
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x55
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xf2
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 16
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf3
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 16
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf4
	.uleb128 0x1d
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0x21
	.sleb128 13
	.uleb128 0x59
	.uleb128 0xb
	.uleb128 0x57
	.uleb128 0x21
	.sleb128 18
	.byte	0
	.byte	0
	.uleb128 0xf5
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xf6
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x1f
	.uleb128 0x1b
	.uleb128 0x1f
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xf7
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf8
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf9
	.uleb128 0x26
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xfa
	.uleb128 0x15
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xfb
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xfc
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xfd
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xfe
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xff
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x100
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x101
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x102
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x103
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x104
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x105
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x106
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x107
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x108
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x109
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x10a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10f
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x110
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x111
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x112
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x113
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x114
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x115
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x116
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x117
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x4c
	.uleb128 0xb
	.uleb128 0x1d
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x118
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x119
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11b
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x11c
	.uleb128 0x3a
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11d
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x11e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11f
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x120
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x121
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x122
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x123
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x124
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x125
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x126
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x127
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x128
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x129
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x12a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12d
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x130
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x131
	.uleb128 0x4107
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x132
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0xe
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x133
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x134
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x135
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x136
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x137
	.uleb128 0x3a
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x138
	.uleb128 0x3b
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x139
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13a
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x13b
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13c
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x13d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xa
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13e
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x140
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x141
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x142
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x143
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x144
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x145
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x146
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x147
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x148
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x149
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x14a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x14b
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x14c
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x14d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14e
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x150
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x151
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x152
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x153
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x154
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x155
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x156
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x157
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x158
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x159
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0xe
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"dr"
	.long	0x101c
	.word	0x2
	.secrel32	.Ldebug_info0
	.byte	0x8
	.byte	0
	.word	0
	.word	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	.LFB404
	.quad	.LFE404-.LFB404
	.quad	.LFB5616
	.quad	.LFE5616-.LFB5616
	.quad	.LFB5680
	.quad	.LFE5680-.LFB5680
	.quad	.LFB5683
	.quad	.LFE5683-.LFB5683
	.quad	.LFB5910
	.quad	.LFE5910-.LFB5910
	.quad	.LFB5949
	.quad	.LFE5949-.LFB5949
	.quad	.LFB5951
	.quad	.LFE5951-.LFB5951
	.quad	.LFB6076
	.quad	.LFE6076-.LFB6076
	.quad	.LFB6601
	.quad	.LFE6601-.LFB6601
	.quad	.LFB7262
	.quad	.LFE7262-.LFB7262
	.quad	.LFB8921
	.quad	.LFE8921-.LFB8921
	.quad	.LFB8924
	.quad	.LFE8924-.LFB8924
	.quad	.LFB8926
	.quad	.LFE8926-.LFB8926
	.quad	.LFB8928
	.quad	.LFE8928-.LFB8928
	.quad	.LFB8929
	.quad	.LFE8929-.LFB8929
	.quad	.LFB8932
	.quad	.LFE8932-.LFB8932
	.quad	.LFB8935
	.quad	.LFE8935-.LFB8935
	.quad	.LFB8937
	.quad	.LFE8937-.LFB8937
	.quad	.LFB8939
	.quad	.LFE8939-.LFB8939
	.quad	.LFB8940
	.quad	.LFE8940-.LFB8940
	.quad	.LFB8944
	.quad	.LFE8944-.LFB8944
	.quad	.LFB8945
	.quad	.LFE8945-.LFB8945
	.quad	.LFB8946
	.quad	.LFE8946-.LFB8946
	.quad	.LFB8949
	.quad	.LFE8949-.LFB8949
	.quad	.LFB8950
	.quad	.LFE8950-.LFB8950
	.quad	.LFB8951
	.quad	.LFE8951-.LFB8951
	.quad	.LFB8952
	.quad	.LFE8952-.LFB8952
	.quad	.LFB8957
	.quad	.LFE8957-.LFB8957
	.quad	.LFB8959
	.quad	.LFE8959-.LFB8959
	.quad	.LFB8963
	.quad	.LFE8963-.LFB8963
	.quad	.LFB8965
	.quad	.LFE8965-.LFB8965
	.quad	.LFB8953
	.quad	.LFE8953-.LFB8953
	.quad	.LFB8967
	.quad	.LFE8967-.LFB8967
	.quad	.LFB8987
	.quad	.LFE8987-.LFB8987
	.quad	.LFB8988
	.quad	.LFE8988-.LFB8988
	.quad	.LFB8989
	.quad	.LFE8989-.LFB8989
	.quad	.LFB8990
	.quad	.LFE8990-.LFB8990
	.quad	.LFB8991
	.quad	.LFE8991-.LFB8991
	.quad	.LFB9402
	.quad	.LFE9402-.LFB9402
	.quad	.LFB9404
	.quad	.LFE9404-.LFB9404
	.quad	.LFB9603
	.quad	.LFE9603-.LFB9603
	.quad	.LFB9606
	.quad	.LFE9606-.LFB9606
	.quad	.LFB9610
	.quad	.LFE9610-.LFB9610
	.quad	.LFB9614
	.quad	.LFE9614-.LFB9614
	.quad	.LFB9615
	.quad	.LFE9615-.LFB9615
	.quad	.LFB9617
	.quad	.LFE9617-.LFB9617
	.quad	.LFB9618
	.quad	.LFE9618-.LFB9618
	.quad	.LFB9625
	.quad	.LFE9625-.LFB9625
	.quad	.LFB9626
	.quad	.LFE9626-.LFB9626
	.quad	.LFB9627
	.quad	.LFE9627-.LFB9627
	.quad	.LFB9701
	.quad	.LFE9701-.LFB9701
	.quad	.LFB9700
	.quad	.LFE9700-.LFB9700
	.quad	.LFB9703
	.quad	.LFE9703-.LFB9703
	.quad	.LFB9707
	.quad	.LFE9707-.LFB9707
	.quad	.LFB9708
	.quad	.LFE9708-.LFB9708
	.quad	.LFB9727
	.quad	.LFE9727-.LFB9727
	.quad	.LFB9747
	.quad	.LFE9747-.LFB9747
	.quad	.LFB9743
	.quad	.LFE9743-.LFB9743
	.quad	.LFB9886
	.quad	.LFE9886-.LFB9886
	.quad	.LFB10606
	.quad	.LFE10606-.LFB10606
	.quad	.LFB10637
	.quad	.LFE10637-.LFB10637
	.quad	.LFB10642
	.quad	.LFE10642-.LFB10642
	.quad	.LFB10691
	.quad	.LFE10691-.LFB10691
	.quad	.LFB10696
	.quad	.LFE10696-.LFB10696
	.quad	.LFB10722
	.quad	.LFE10722-.LFB10722
	.quad	.LFB10823
	.quad	.LFE10823-.LFB10823
	.quad	.LFB10890
	.quad	.LFE10890-.LFB10890
	.quad	.LFB10891
	.quad	.LFE10891-.LFB10891
	.quad	.LFB10892
	.quad	.LFE10892-.LFB10892
	.quad	.LFB10893
	.quad	.LFE10893-.LFB10893
	.quad	.LFB10905
	.quad	.LFE10905-.LFB10905
	.quad	.LFB10908
	.quad	.LFE10908-.LFB10908
	.quad	.LFB10912
	.quad	.LFE10912-.LFB10912
	.quad	.LFB10914
	.quad	.LFE10914-.LFB10914
	.quad	.LFB10913
	.quad	.LFE10913-.LFB10913
	.quad	.LFB10909
	.quad	.LFE10909-.LFB10909
	.quad	.LFB10916
	.quad	.LFE10916-.LFB10916
	.quad	.LFB10917
	.quad	.LFE10917-.LFB10917
	.quad	.LFB10918
	.quad	.LFE10918-.LFB10918
	.quad	.LFB10921
	.quad	.LFE10921-.LFB10921
	.quad	.LFB10922
	.quad	.LFE10922-.LFB10922
	.quad	.LFB10923
	.quad	.LFE10923-.LFB10923
	.quad	.LFB10924
	.quad	.LFE10924-.LFB10924
	.quad	.LFB10925
	.quad	.LFE10925-.LFB10925
	.quad	.LFB10926
	.quad	.LFE10926-.LFB10926
	.quad	.LFB10927
	.quad	.LFE10927-.LFB10927
	.quad	.LFB10928
	.quad	.LFE10928-.LFB10928
	.quad	.LFB10929
	.quad	.LFE10929-.LFB10929
	.quad	.LFB10930
	.quad	.LFE10930-.LFB10930
	.quad	.LFB10931
	.quad	.LFE10931-.LFB10931
	.quad	.LFB10932
	.quad	.LFE10932-.LFB10932
	.quad	.LFB10933
	.quad	.LFE10933-.LFB10933
	.quad	.LFB10934
	.quad	.LFE10934-.LFB10934
	.quad	.LFB10935
	.quad	.LFE10935-.LFB10935
	.quad	.LFB10936
	.quad	.LFE10936-.LFB10936
	.quad	.LFB10937
	.quad	.LFE10937-.LFB10937
	.quad	.LFB10943
	.quad	.LFE10943-.LFB10943
	.quad	.LFB10949
	.quad	.LFE10949-.LFB10949
	.quad	.LFB10964
	.quad	.LFE10964-.LFB10964
	.quad	.LFB10992
	.quad	.LFE10992-.LFB10992
	.quad	.LFB10994
	.quad	.LFE10994-.LFB10994
	.quad	.LFB10995
	.quad	.LFE10995-.LFB10995
	.quad	.LFB11361
	.quad	.LFE11361-.LFB11361
	.quad	.LFB11364
	.quad	.LFE11364-.LFB11364
	.quad	.LFB11370
	.quad	.LFE11370-.LFB11370
	.quad	.LFB11371
	.quad	.LFE11371-.LFB11371
	.quad	.LFB11374
	.quad	.LFE11374-.LFB11374
	.quad	.LFB11422
	.quad	.LFE11422-.LFB11422
	.quad	.LFB11447
	.quad	.LFE11447-.LFB11447
	.quad	.LFB11448
	.quad	.LFE11448-.LFB11448
	.quad	.LFB11449
	.quad	.LFE11449-.LFB11449
	.quad	.LFB11450
	.quad	.LFE11450-.LFB11450
	.quad	.LFB11477
	.quad	.LFE11477-.LFB11477
	.quad	.LFB11481
	.quad	.LFE11481-.LFB11481
	.quad	.LFB11480
	.quad	.LFE11480-.LFB11480
	.quad	.LFB11479
	.quad	.LFE11479-.LFB11479
	.quad	.LFB11485
	.quad	.LFE11485-.LFB11485
	.quad	.LFB11489
	.quad	.LFE11489-.LFB11489
	.quad	.LFB11554
	.quad	.LFE11554-.LFB11554
	.quad	.LFB11556
	.quad	.LFE11556-.LFB11556
	.quad	.LFB11559
	.quad	.LFE11559-.LFB11559
	.quad	.LFB11560
	.quad	.LFE11560-.LFB11560
	.quad	.LFB11561
	.quad	.LFE11561-.LFB11561
	.quad	.LFB11562
	.quad	.LFE11562-.LFB11562
	.quad	.LFB11563
	.quad	.LFE11563-.LFB11563
	.quad	.LFB11564
	.quad	.LFE11564-.LFB11564
	.quad	.LFB11569
	.quad	.LFE11569-.LFB11569
	.quad	.LFB11572
	.quad	.LFE11572-.LFB11572
	.quad	.LFB11574
	.quad	.LFE11574-.LFB11574
	.quad	.LFB11578
	.quad	.LFE11578-.LFB11578
	.quad	.LFB11580
	.quad	.LFE11580-.LFB11580
	.quad	.LFB11583
	.quad	.LFE11583-.LFB11583
	.quad	.LFB11584
	.quad	.LFE11584-.LFB11584
	.quad	.LFB11591
	.quad	.LFE11591-.LFB11591
	.quad	.LFB11595
	.quad	.LFE11595-.LFB11595
	.quad	.LFB11624
	.quad	.LFE11624-.LFB11624
	.quad	.LFB11625
	.quad	.LFE11625-.LFB11625
	.quad	.LFB11626
	.quad	.LFE11626-.LFB11626
	.quad	.LFB11629
	.quad	.LFE11629-.LFB11629
	.quad	.LFB11630
	.quad	.LFE11630-.LFB11630
	.quad	.LFB11631
	.quad	.LFE11631-.LFB11631
	.quad	.LFB11802
	.quad	.LFE11802-.LFB11802
	.quad	.LFB11808
	.quad	.LFE11808-.LFB11808
	.quad	.LFB11814
	.quad	.LFE11814-.LFB11814
	.quad	.LFB11815
	.quad	.LFE11815-.LFB11815
	.quad	.LFB11816
	.quad	.LFE11816-.LFB11816
	.quad	.LFB11825
	.quad	.LFE11825-.LFB11825
	.quad	.LFB11827
	.quad	.LFE11827-.LFB11827
	.quad	.LFB11828
	.quad	.LFE11828-.LFB11828
	.quad	.LFB11829
	.quad	.LFE11829-.LFB11829
	.quad	.LFB11833
	.quad	.LFE11833-.LFB11833
	.quad	.LFB11835
	.quad	.LFE11835-.LFB11835
	.quad	.LFB11854
	.quad	.LFE11854-.LFB11854
	.quad	.LFB11856
	.quad	.LFE11856-.LFB11856
	.quad	.LFB11857
	.quad	.LFE11857-.LFB11857
	.quad	.LFB11858
	.quad	.LFE11858-.LFB11858
	.quad	.LFB11859
	.quad	.LFE11859-.LFB11859
	.quad	.LFB11860
	.quad	.LFE11860-.LFB11860
	.quad	.LFB11861
	.quad	.LFE11861-.LFB11861
	.quad	.LFB11862
	.quad	.LFE11862-.LFB11862
	.quad	.LFB11863
	.quad	.LFE11863-.LFB11863
	.quad	.LFB11864
	.quad	.LFE11864-.LFB11864
	.quad	.LFB11867
	.quad	.LFE11867-.LFB11867
	.quad	.LFB11870
	.quad	.LFE11870-.LFB11870
	.quad	.LFB11872
	.quad	.LFE11872-.LFB11872
	.quad	.LFB11873
	.quad	.LFE11873-.LFB11873
	.quad	.LFB11874
	.quad	.LFE11874-.LFB11874
	.quad	.LFB11884
	.quad	.LFE11884-.LFB11884
	.quad	.LFB11886
	.quad	.LFE11886-.LFB11886
	.quad	.LFB11890
	.quad	.LFE11890-.LFB11890
	.quad	.LFB11903
	.quad	.LFE11903-.LFB11903
	.quad	.LFB11905
	.quad	.LFE11905-.LFB11905
	.quad	.LFB11908
	.quad	.LFE11908-.LFB11908
	.quad	.LFB11921
	.quad	.LFE11921-.LFB11921
	.quad	.LFB12038
	.quad	.LFE12038-.LFB12038
	.quad	.LFB12046
	.quad	.LFE12046-.LFB12046
	.quad	.LFB12050
	.quad	.LFE12050-.LFB12050
	.quad	.LFB12051
	.quad	.LFE12051-.LFB12051
	.quad	.LFB12054
	.quad	.LFE12054-.LFB12054
	.quad	.LFB12061
	.quad	.LFE12061-.LFB12061
	.quad	.LFB12064
	.quad	.LFE12064-.LFB12064
	.quad	.LFB12065
	.quad	.LFE12065-.LFB12065
	.quad	.LFB12066
	.quad	.LFE12066-.LFB12066
	.quad	.LFB12068
	.quad	.LFE12068-.LFB12068
	.quad	.LFB12072
	.quad	.LFE12072-.LFB12072
	.quad	.LFB12073
	.quad	.LFE12073-.LFB12073
	.quad	.LFB12074
	.quad	.LFE12074-.LFB12074
	.quad	.LFB12089
	.quad	.LFE12089-.LFB12089
	.quad	.LFB12097
	.quad	.LFE12097-.LFB12097
	.quad	.LFB12099
	.quad	.LFE12099-.LFB12099
	.quad	.LFB12100
	.quad	.LFE12100-.LFB12100
	.quad	.LFB12101
	.quad	.LFE12101-.LFB12101
	.quad	.LFB12102
	.quad	.LFE12102-.LFB12102
	.quad	.LFB12106
	.quad	.LFE12106-.LFB12106
	.quad	.LFB12193
	.quad	.LFE12193-.LFB12193
	.quad	.LFB12196
	.quad	.LFE12196-.LFB12196
	.quad	.LFB12197
	.quad	.LFE12197-.LFB12197
	.quad	.LFB12198
	.quad	.LFE12198-.LFB12198
	.quad	.LFB12200
	.quad	.LFE12200-.LFB12200
	.quad	.LFB12203
	.quad	.LFE12203-.LFB12203
	.quad	.LFB12206
	.quad	.LFE12206-.LFB12206
	.quad	.LFB12208
	.quad	.LFE12208-.LFB12208
	.quad	.LFB12209
	.quad	.LFE12209-.LFB12209
	.quad	.LFB12224
	.quad	.LFE12224-.LFB12224
	.quad	.LFB12225
	.quad	.LFE12225-.LFB12225
	.quad	.LFB12237
	.quad	.LFE12237-.LFB12237
	.quad	.LFB12238
	.quad	.LFE12238-.LFB12238
	.quad	.LFB12239
	.quad	.LFE12239-.LFB12239
	.quad	.LFB12279
	.quad	.LFE12279-.LFB12279
	.quad	.LFB12281
	.quad	.LFE12281-.LFB12281
	.quad	.LFB12282
	.quad	.LFE12282-.LFB12282
	.quad	.LFB12283
	.quad	.LFE12283-.LFB12283
	.quad	.LFB12285
	.quad	.LFE12285-.LFB12285
	.quad	.LFB12288
	.quad	.LFE12288-.LFB12288
	.quad	.LFB12291
	.quad	.LFE12291-.LFB12291
	.quad	.LFB12293
	.quad	.LFE12293-.LFB12293
	.quad	.LFB12294
	.quad	.LFE12294-.LFB12294
	.quad	.LFB12303
	.quad	.LFE12303-.LFB12303
	.quad	.LFB12306
	.quad	.LFE12306-.LFB12306
	.quad	.LFB12307
	.quad	.LFE12307-.LFB12307
	.quad	.LFB12311
	.quad	.LFE12311-.LFB12311
	.quad	.LFB12312
	.quad	.LFE12312-.LFB12312
	.quad	.LFB12316
	.quad	.LFE12316-.LFB12316
	.quad	.LFB12322
	.quad	.LFE12322-.LFB12322
	.quad	.LFB12324
	.quad	.LFE12324-.LFB12324
	.quad	.LFB12325
	.quad	.LFE12325-.LFB12325
	.quad	.LFB12346
	.quad	.LFE12346-.LFB12346
	.quad	.LFB12347
	.quad	.LFE12347-.LFB12347
	.quad	.LFB12348
	.quad	.LFE12348-.LFB12348
	.quad	.LFB12350
	.quad	.LFE12350-.LFB12350
	.quad	.LFB12352
	.quad	.LFE12352-.LFB12352
	.quad	.LFB12353
	.quad	.LFE12353-.LFB12353
	.quad	.LFB12362
	.quad	.LFE12362-.LFB12362
	.quad	.LFB12363
	.quad	.LFE12363-.LFB12363
	.quad	.LFB12367
	.quad	.LFE12367-.LFB12367
	.quad	.LFB12369
	.quad	.LFE12369-.LFB12369
	.quad	.LFB12371
	.quad	.LFE12371-.LFB12371
	.quad	.LFB12372
	.quad	.LFE12372-.LFB12372
	.quad	.LFB12376
	.quad	.LFE12376-.LFB12376
	.quad	.LFB12379
	.quad	.LFE12379-.LFB12379
	.quad	.LFB12381
	.quad	.LFE12381-.LFB12381
	.quad	.LFB12382
	.quad	.LFE12382-.LFB12382
	.quad	.LFB12392
	.quad	.LFE12392-.LFB12392
	.quad	.LFB12393
	.quad	.LFE12393-.LFB12393
	.quad	.LFB12398
	.quad	.LFE12398-.LFB12398
	.quad	.LFB12400
	.quad	.LFE12400-.LFB12400
	.quad	.LFB12404
	.quad	.LFE12404-.LFB12404
	.quad	.LFB12405
	.quad	.LFE12405-.LFB12405
	.quad	.LFB12406
	.quad	.LFE12406-.LFB12406
	.quad	.LFB12408
	.quad	.LFE12408-.LFB12408
	.quad	.LFB12410
	.quad	.LFE12410-.LFB12410
	.quad	.LFB12411
	.quad	.LFE12411-.LFB12411
	.quad	.LFB12412
	.quad	.LFE12412-.LFB12412
	.quad	.LFB12418
	.quad	.LFE12418-.LFB12418
	.quad	.LFB12419
	.quad	.LFE12419-.LFB12419
	.quad	0
	.quad	0
	.section	.debug_rnglists,"dr"
.Ldebug_ranges0:
	.long	.Ldebug_ranges3-.Ldebug_ranges2
.Ldebug_ranges2:
	.word	0x5
	.byte	0x8
	.byte	0
	.long	0
.LLRL0:
	.byte	0x5
	.quad	.LBB177
	.byte	0x4
	.uleb128 .LBB177-.LBB177
	.uleb128 .LBE177-.LBB177
	.byte	0x4
	.uleb128 .LBB196-.LBB177
	.uleb128 .LBE196-.LBB177
	.byte	0
.LLRL1:
	.byte	0x5
	.quad	.LBB226
	.byte	0x4
	.uleb128 .LBB226-.LBB226
	.uleb128 .LBE226-.LBB226
	.byte	0x4
	.uleb128 .LBB227-.LBB226
	.uleb128 .LBE227-.LBB226
	.byte	0
.LLRL2:
	.byte	0x5
	.quad	.LBB237
	.byte	0x4
	.uleb128 .LBB237-.LBB237
	.uleb128 .LBE237-.LBB237
	.byte	0x4
	.uleb128 .LBB238-.LBB237
	.uleb128 .LBE238-.LBB237
	.byte	0
.LLRL3:
	.byte	0x5
	.quad	.LBB305
	.byte	0x4
	.uleb128 .LBB305-.LBB305
	.uleb128 .LBE305-.LBB305
	.byte	0x4
	.uleb128 .LBB306-.LBB305
	.uleb128 .LBE306-.LBB305
	.byte	0
.LLRL4:
	.byte	0x5
	.quad	.LBB315
	.byte	0x4
	.uleb128 .LBB315-.LBB315
	.uleb128 .LBE315-.LBB315
	.byte	0x4
	.uleb128 .LBB316-.LBB315
	.uleb128 .LBE316-.LBB315
	.byte	0
.LLRL5:
	.byte	0x7
	.quad	.Ltext0
	.uleb128 .Letext0-.Ltext0
	.byte	0x7
	.quad	.LFB404
	.uleb128 .LFE404-.LFB404
	.byte	0x7
	.quad	.LFB5616
	.uleb128 .LFE5616-.LFB5616
	.byte	0x7
	.quad	.LFB5680
	.uleb128 .LFE5680-.LFB5680
	.byte	0x7
	.quad	.LFB5683
	.uleb128 .LFE5683-.LFB5683
	.byte	0x7
	.quad	.LFB5910
	.uleb128 .LFE5910-.LFB5910
	.byte	0x7
	.quad	.LFB5949
	.uleb128 .LFE5949-.LFB5949
	.byte	0x7
	.quad	.LFB5951
	.uleb128 .LFE5951-.LFB5951
	.byte	0x7
	.quad	.LFB6076
	.uleb128 .LFE6076-.LFB6076
	.byte	0x7
	.quad	.LFB6601
	.uleb128 .LFE6601-.LFB6601
	.byte	0x7
	.quad	.LFB7262
	.uleb128 .LFE7262-.LFB7262
	.byte	0x7
	.quad	.LFB8921
	.uleb128 .LFE8921-.LFB8921
	.byte	0x7
	.quad	.LFB8924
	.uleb128 .LFE8924-.LFB8924
	.byte	0x7
	.quad	.LFB8926
	.uleb128 .LFE8926-.LFB8926
	.byte	0x7
	.quad	.LFB8928
	.uleb128 .LFE8928-.LFB8928
	.byte	0x7
	.quad	.LFB8929
	.uleb128 .LFE8929-.LFB8929
	.byte	0x7
	.quad	.LFB8932
	.uleb128 .LFE8932-.LFB8932
	.byte	0x7
	.quad	.LFB8935
	.uleb128 .LFE8935-.LFB8935
	.byte	0x7
	.quad	.LFB8937
	.uleb128 .LFE8937-.LFB8937
	.byte	0x7
	.quad	.LFB8939
	.uleb128 .LFE8939-.LFB8939
	.byte	0x7
	.quad	.LFB8940
	.uleb128 .LFE8940-.LFB8940
	.byte	0x7
	.quad	.LFB8944
	.uleb128 .LFE8944-.LFB8944
	.byte	0x7
	.quad	.LFB8945
	.uleb128 .LFE8945-.LFB8945
	.byte	0x7
	.quad	.LFB8946
	.uleb128 .LFE8946-.LFB8946
	.byte	0x7
	.quad	.LFB8949
	.uleb128 .LFE8949-.LFB8949
	.byte	0x7
	.quad	.LFB8950
	.uleb128 .LFE8950-.LFB8950
	.byte	0x7
	.quad	.LFB8951
	.uleb128 .LFE8951-.LFB8951
	.byte	0x7
	.quad	.LFB8952
	.uleb128 .LFE8952-.LFB8952
	.byte	0x7
	.quad	.LFB8957
	.uleb128 .LFE8957-.LFB8957
	.byte	0x7
	.quad	.LFB8959
	.uleb128 .LFE8959-.LFB8959
	.byte	0x7
	.quad	.LFB8963
	.uleb128 .LFE8963-.LFB8963
	.byte	0x7
	.quad	.LFB8965
	.uleb128 .LFE8965-.LFB8965
	.byte	0x7
	.quad	.LFB8953
	.uleb128 .LFE8953-.LFB8953
	.byte	0x7
	.quad	.LFB8967
	.uleb128 .LFE8967-.LFB8967
	.byte	0x7
	.quad	.LFB8987
	.uleb128 .LFE8987-.LFB8987
	.byte	0x7
	.quad	.LFB8988
	.uleb128 .LFE8988-.LFB8988
	.byte	0x7
	.quad	.LFB8989
	.uleb128 .LFE8989-.LFB8989
	.byte	0x7
	.quad	.LFB8990
	.uleb128 .LFE8990-.LFB8990
	.byte	0x7
	.quad	.LFB8991
	.uleb128 .LFE8991-.LFB8991
	.byte	0x7
	.quad	.LFB9402
	.uleb128 .LFE9402-.LFB9402
	.byte	0x7
	.quad	.LFB9404
	.uleb128 .LFE9404-.LFB9404
	.byte	0x7
	.quad	.LFB9603
	.uleb128 .LFE9603-.LFB9603
	.byte	0x7
	.quad	.LFB9606
	.uleb128 .LFE9606-.LFB9606
	.byte	0x7
	.quad	.LFB9610
	.uleb128 .LFE9610-.LFB9610
	.byte	0x7
	.quad	.LFB9614
	.uleb128 .LFE9614-.LFB9614
	.byte	0x7
	.quad	.LFB9615
	.uleb128 .LFE9615-.LFB9615
	.byte	0x7
	.quad	.LFB9617
	.uleb128 .LFE9617-.LFB9617
	.byte	0x7
	.quad	.LFB9618
	.uleb128 .LFE9618-.LFB9618
	.byte	0x7
	.quad	.LFB9625
	.uleb128 .LFE9625-.LFB9625
	.byte	0x7
	.quad	.LFB9626
	.uleb128 .LFE9626-.LFB9626
	.byte	0x7
	.quad	.LFB9627
	.uleb128 .LFE9627-.LFB9627
	.byte	0x7
	.quad	.LFB9701
	.uleb128 .LFE9701-.LFB9701
	.byte	0x7
	.quad	.LFB9700
	.uleb128 .LFE9700-.LFB9700
	.byte	0x7
	.quad	.LFB9703
	.uleb128 .LFE9703-.LFB9703
	.byte	0x7
	.quad	.LFB9707
	.uleb128 .LFE9707-.LFB9707
	.byte	0x7
	.quad	.LFB9708
	.uleb128 .LFE9708-.LFB9708
	.byte	0x7
	.quad	.LFB9727
	.uleb128 .LFE9727-.LFB9727
	.byte	0x7
	.quad	.LFB9747
	.uleb128 .LFE9747-.LFB9747
	.byte	0x7
	.quad	.LFB9743
	.uleb128 .LFE9743-.LFB9743
	.byte	0x7
	.quad	.LFB9886
	.uleb128 .LFE9886-.LFB9886
	.byte	0x7
	.quad	.LFB10606
	.uleb128 .LFE10606-.LFB10606
	.byte	0x7
	.quad	.LFB10637
	.uleb128 .LFE10637-.LFB10637
	.byte	0x7
	.quad	.LFB10642
	.uleb128 .LFE10642-.LFB10642
	.byte	0x7
	.quad	.LFB10691
	.uleb128 .LFE10691-.LFB10691
	.byte	0x7
	.quad	.LFB10696
	.uleb128 .LFE10696-.LFB10696
	.byte	0x7
	.quad	.LFB10722
	.uleb128 .LFE10722-.LFB10722
	.byte	0x7
	.quad	.LFB10823
	.uleb128 .LFE10823-.LFB10823
	.byte	0x7
	.quad	.LFB10890
	.uleb128 .LFE10890-.LFB10890
	.byte	0x7
	.quad	.LFB10891
	.uleb128 .LFE10891-.LFB10891
	.byte	0x7
	.quad	.LFB10892
	.uleb128 .LFE10892-.LFB10892
	.byte	0x7
	.quad	.LFB10893
	.uleb128 .LFE10893-.LFB10893
	.byte	0x7
	.quad	.LFB10905
	.uleb128 .LFE10905-.LFB10905
	.byte	0x7
	.quad	.LFB10908
	.uleb128 .LFE10908-.LFB10908
	.byte	0x7
	.quad	.LFB10912
	.uleb128 .LFE10912-.LFB10912
	.byte	0x7
	.quad	.LFB10914
	.uleb128 .LFE10914-.LFB10914
	.byte	0x7
	.quad	.LFB10913
	.uleb128 .LFE10913-.LFB10913
	.byte	0x7
	.quad	.LFB10909
	.uleb128 .LFE10909-.LFB10909
	.byte	0x7
	.quad	.LFB10916
	.uleb128 .LFE10916-.LFB10916
	.byte	0x7
	.quad	.LFB10917
	.uleb128 .LFE10917-.LFB10917
	.byte	0x7
	.quad	.LFB10918
	.uleb128 .LFE10918-.LFB10918
	.byte	0x7
	.quad	.LFB10921
	.uleb128 .LFE10921-.LFB10921
	.byte	0x7
	.quad	.LFB10922
	.uleb128 .LFE10922-.LFB10922
	.byte	0x7
	.quad	.LFB10923
	.uleb128 .LFE10923-.LFB10923
	.byte	0x7
	.quad	.LFB10924
	.uleb128 .LFE10924-.LFB10924
	.byte	0x7
	.quad	.LFB10925
	.uleb128 .LFE10925-.LFB10925
	.byte	0x7
	.quad	.LFB10926
	.uleb128 .LFE10926-.LFB10926
	.byte	0x7
	.quad	.LFB10927
	.uleb128 .LFE10927-.LFB10927
	.byte	0x7
	.quad	.LFB10928
	.uleb128 .LFE10928-.LFB10928
	.byte	0x7
	.quad	.LFB10929
	.uleb128 .LFE10929-.LFB10929
	.byte	0x7
	.quad	.LFB10930
	.uleb128 .LFE10930-.LFB10930
	.byte	0x7
	.quad	.LFB10931
	.uleb128 .LFE10931-.LFB10931
	.byte	0x7
	.quad	.LFB10932
	.uleb128 .LFE10932-.LFB10932
	.byte	0x7
	.quad	.LFB10933
	.uleb128 .LFE10933-.LFB10933
	.byte	0x7
	.quad	.LFB10934
	.uleb128 .LFE10934-.LFB10934
	.byte	0x7
	.quad	.LFB10935
	.uleb128 .LFE10935-.LFB10935
	.byte	0x7
	.quad	.LFB10936
	.uleb128 .LFE10936-.LFB10936
	.byte	0x7
	.quad	.LFB10937
	.uleb128 .LFE10937-.LFB10937
	.byte	0x7
	.quad	.LFB10943
	.uleb128 .LFE10943-.LFB10943
	.byte	0x7
	.quad	.LFB10949
	.uleb128 .LFE10949-.LFB10949
	.byte	0x7
	.quad	.LFB10964
	.uleb128 .LFE10964-.LFB10964
	.byte	0x7
	.quad	.LFB10992
	.uleb128 .LFE10992-.LFB10992
	.byte	0x7
	.quad	.LFB10994
	.uleb128 .LFE10994-.LFB10994
	.byte	0x7
	.quad	.LFB10995
	.uleb128 .LFE10995-.LFB10995
	.byte	0x7
	.quad	.LFB11361
	.uleb128 .LFE11361-.LFB11361
	.byte	0x7
	.quad	.LFB11364
	.uleb128 .LFE11364-.LFB11364
	.byte	0x7
	.quad	.LFB11370
	.uleb128 .LFE11370-.LFB11370
	.byte	0x7
	.quad	.LFB11371
	.uleb128 .LFE11371-.LFB11371
	.byte	0x7
	.quad	.LFB11374
	.uleb128 .LFE11374-.LFB11374
	.byte	0x7
	.quad	.LFB11422
	.uleb128 .LFE11422-.LFB11422
	.byte	0x7
	.quad	.LFB11447
	.uleb128 .LFE11447-.LFB11447
	.byte	0x7
	.quad	.LFB11448
	.uleb128 .LFE11448-.LFB11448
	.byte	0x7
	.quad	.LFB11449
	.uleb128 .LFE11449-.LFB11449
	.byte	0x7
	.quad	.LFB11450
	.uleb128 .LFE11450-.LFB11450
	.byte	0x7
	.quad	.LFB11477
	.uleb128 .LFE11477-.LFB11477
	.byte	0x7
	.quad	.LFB11481
	.uleb128 .LFE11481-.LFB11481
	.byte	0x7
	.quad	.LFB11480
	.uleb128 .LFE11480-.LFB11480
	.byte	0x7
	.quad	.LFB11479
	.uleb128 .LFE11479-.LFB11479
	.byte	0x7
	.quad	.LFB11485
	.uleb128 .LFE11485-.LFB11485
	.byte	0x7
	.quad	.LFB11489
	.uleb128 .LFE11489-.LFB11489
	.byte	0x7
	.quad	.LFB11554
	.uleb128 .LFE11554-.LFB11554
	.byte	0x7
	.quad	.LFB11556
	.uleb128 .LFE11556-.LFB11556
	.byte	0x7
	.quad	.LFB11559
	.uleb128 .LFE11559-.LFB11559
	.byte	0x7
	.quad	.LFB11560
	.uleb128 .LFE11560-.LFB11560
	.byte	0x7
	.quad	.LFB11561
	.uleb128 .LFE11561-.LFB11561
	.byte	0x7
	.quad	.LFB11562
	.uleb128 .LFE11562-.LFB11562
	.byte	0x7
	.quad	.LFB11563
	.uleb128 .LFE11563-.LFB11563
	.byte	0x7
	.quad	.LFB11564
	.uleb128 .LFE11564-.LFB11564
	.byte	0x7
	.quad	.LFB11569
	.uleb128 .LFE11569-.LFB11569
	.byte	0x7
	.quad	.LFB11572
	.uleb128 .LFE11572-.LFB11572
	.byte	0x7
	.quad	.LFB11574
	.uleb128 .LFE11574-.LFB11574
	.byte	0x7
	.quad	.LFB11578
	.uleb128 .LFE11578-.LFB11578
	.byte	0x7
	.quad	.LFB11580
	.uleb128 .LFE11580-.LFB11580
	.byte	0x7
	.quad	.LFB11583
	.uleb128 .LFE11583-.LFB11583
	.byte	0x7
	.quad	.LFB11584
	.uleb128 .LFE11584-.LFB11584
	.byte	0x7
	.quad	.LFB11591
	.uleb128 .LFE11591-.LFB11591
	.byte	0x7
	.quad	.LFB11595
	.uleb128 .LFE11595-.LFB11595
	.byte	0x7
	.quad	.LFB11624
	.uleb128 .LFE11624-.LFB11624
	.byte	0x7
	.quad	.LFB11625
	.uleb128 .LFE11625-.LFB11625
	.byte	0x7
	.quad	.LFB11626
	.uleb128 .LFE11626-.LFB11626
	.byte	0x7
	.quad	.LFB11629
	.uleb128 .LFE11629-.LFB11629
	.byte	0x7
	.quad	.LFB11630
	.uleb128 .LFE11630-.LFB11630
	.byte	0x7
	.quad	.LFB11631
	.uleb128 .LFE11631-.LFB11631
	.byte	0x7
	.quad	.LFB11802
	.uleb128 .LFE11802-.LFB11802
	.byte	0x7
	.quad	.LFB11808
	.uleb128 .LFE11808-.LFB11808
	.byte	0x7
	.quad	.LFB11814
	.uleb128 .LFE11814-.LFB11814
	.byte	0x7
	.quad	.LFB11815
	.uleb128 .LFE11815-.LFB11815
	.byte	0x7
	.quad	.LFB11816
	.uleb128 .LFE11816-.LFB11816
	.byte	0x7
	.quad	.LFB11825
	.uleb128 .LFE11825-.LFB11825
	.byte	0x7
	.quad	.LFB11827
	.uleb128 .LFE11827-.LFB11827
	.byte	0x7
	.quad	.LFB11828
	.uleb128 .LFE11828-.LFB11828
	.byte	0x7
	.quad	.LFB11829
	.uleb128 .LFE11829-.LFB11829
	.byte	0x7
	.quad	.LFB11833
	.uleb128 .LFE11833-.LFB11833
	.byte	0x7
	.quad	.LFB11835
	.uleb128 .LFE11835-.LFB11835
	.byte	0x7
	.quad	.LFB11854
	.uleb128 .LFE11854-.LFB11854
	.byte	0x7
	.quad	.LFB11856
	.uleb128 .LFE11856-.LFB11856
	.byte	0x7
	.quad	.LFB11857
	.uleb128 .LFE11857-.LFB11857
	.byte	0x7
	.quad	.LFB11858
	.uleb128 .LFE11858-.LFB11858
	.byte	0x7
	.quad	.LFB11859
	.uleb128 .LFE11859-.LFB11859
	.byte	0x7
	.quad	.LFB11860
	.uleb128 .LFE11860-.LFB11860
	.byte	0x7
	.quad	.LFB11861
	.uleb128 .LFE11861-.LFB11861
	.byte	0x7
	.quad	.LFB11862
	.uleb128 .LFE11862-.LFB11862
	.byte	0x7
	.quad	.LFB11863
	.uleb128 .LFE11863-.LFB11863
	.byte	0x7
	.quad	.LFB11864
	.uleb128 .LFE11864-.LFB11864
	.byte	0x7
	.quad	.LFB11867
	.uleb128 .LFE11867-.LFB11867
	.byte	0x7
	.quad	.LFB11870
	.uleb128 .LFE11870-.LFB11870
	.byte	0x7
	.quad	.LFB11872
	.uleb128 .LFE11872-.LFB11872
	.byte	0x7
	.quad	.LFB11873
	.uleb128 .LFE11873-.LFB11873
	.byte	0x7
	.quad	.LFB11874
	.uleb128 .LFE11874-.LFB11874
	.byte	0x7
	.quad	.LFB11884
	.uleb128 .LFE11884-.LFB11884
	.byte	0x7
	.quad	.LFB11886
	.uleb128 .LFE11886-.LFB11886
	.byte	0x7
	.quad	.LFB11890
	.uleb128 .LFE11890-.LFB11890
	.byte	0x7
	.quad	.LFB11903
	.uleb128 .LFE11903-.LFB11903
	.byte	0x7
	.quad	.LFB11905
	.uleb128 .LFE11905-.LFB11905
	.byte	0x7
	.quad	.LFB11908
	.uleb128 .LFE11908-.LFB11908
	.byte	0x7
	.quad	.LFB11921
	.uleb128 .LFE11921-.LFB11921
	.byte	0x7
	.quad	.LFB12038
	.uleb128 .LFE12038-.LFB12038
	.byte	0x7
	.quad	.LFB12046
	.uleb128 .LFE12046-.LFB12046
	.byte	0x7
	.quad	.LFB12050
	.uleb128 .LFE12050-.LFB12050
	.byte	0x7
	.quad	.LFB12051
	.uleb128 .LFE12051-.LFB12051
	.byte	0x7
	.quad	.LFB12054
	.uleb128 .LFE12054-.LFB12054
	.byte	0x7
	.quad	.LFB12061
	.uleb128 .LFE12061-.LFB12061
	.byte	0x7
	.quad	.LFB12064
	.uleb128 .LFE12064-.LFB12064
	.byte	0x7
	.quad	.LFB12065
	.uleb128 .LFE12065-.LFB12065
	.byte	0x7
	.quad	.LFB12066
	.uleb128 .LFE12066-.LFB12066
	.byte	0x7
	.quad	.LFB12068
	.uleb128 .LFE12068-.LFB12068
	.byte	0x7
	.quad	.LFB12072
	.uleb128 .LFE12072-.LFB12072
	.byte	0x7
	.quad	.LFB12073
	.uleb128 .LFE12073-.LFB12073
	.byte	0x7
	.quad	.LFB12074
	.uleb128 .LFE12074-.LFB12074
	.byte	0x7
	.quad	.LFB12089
	.uleb128 .LFE12089-.LFB12089
	.byte	0x7
	.quad	.LFB12097
	.uleb128 .LFE12097-.LFB12097
	.byte	0x7
	.quad	.LFB12099
	.uleb128 .LFE12099-.LFB12099
	.byte	0x7
	.quad	.LFB12100
	.uleb128 .LFE12100-.LFB12100
	.byte	0x7
	.quad	.LFB12101
	.uleb128 .LFE12101-.LFB12101
	.byte	0x7
	.quad	.LFB12102
	.uleb128 .LFE12102-.LFB12102
	.byte	0x7
	.quad	.LFB12106
	.uleb128 .LFE12106-.LFB12106
	.byte	0x7
	.quad	.LFB12193
	.uleb128 .LFE12193-.LFB12193
	.byte	0x7
	.quad	.LFB12196
	.uleb128 .LFE12196-.LFB12196
	.byte	0x7
	.quad	.LFB12197
	.uleb128 .LFE12197-.LFB12197
	.byte	0x7
	.quad	.LFB12198
	.uleb128 .LFE12198-.LFB12198
	.byte	0x7
	.quad	.LFB12200
	.uleb128 .LFE12200-.LFB12200
	.byte	0x7
	.quad	.LFB12203
	.uleb128 .LFE12203-.LFB12203
	.byte	0x7
	.quad	.LFB12206
	.uleb128 .LFE12206-.LFB12206
	.byte	0x7
	.quad	.LFB12208
	.uleb128 .LFE12208-.LFB12208
	.byte	0x7
	.quad	.LFB12209
	.uleb128 .LFE12209-.LFB12209
	.byte	0x7
	.quad	.LFB12224
	.uleb128 .LFE12224-.LFB12224
	.byte	0x7
	.quad	.LFB12225
	.uleb128 .LFE12225-.LFB12225
	.byte	0x7
	.quad	.LFB12237
	.uleb128 .LFE12237-.LFB12237
	.byte	0x7
	.quad	.LFB12238
	.uleb128 .LFE12238-.LFB12238
	.byte	0x7
	.quad	.LFB12239
	.uleb128 .LFE12239-.LFB12239
	.byte	0x7
	.quad	.LFB12279
	.uleb128 .LFE12279-.LFB12279
	.byte	0x7
	.quad	.LFB12281
	.uleb128 .LFE12281-.LFB12281
	.byte	0x7
	.quad	.LFB12282
	.uleb128 .LFE12282-.LFB12282
	.byte	0x7
	.quad	.LFB12283
	.uleb128 .LFE12283-.LFB12283
	.byte	0x7
	.quad	.LFB12285
	.uleb128 .LFE12285-.LFB12285
	.byte	0x7
	.quad	.LFB12288
	.uleb128 .LFE12288-.LFB12288
	.byte	0x7
	.quad	.LFB12291
	.uleb128 .LFE12291-.LFB12291
	.byte	0x7
	.quad	.LFB12293
	.uleb128 .LFE12293-.LFB12293
	.byte	0x7
	.quad	.LFB12294
	.uleb128 .LFE12294-.LFB12294
	.byte	0x7
	.quad	.LFB12303
	.uleb128 .LFE12303-.LFB12303
	.byte	0x7
	.quad	.LFB12306
	.uleb128 .LFE12306-.LFB12306
	.byte	0x7
	.quad	.LFB12307
	.uleb128 .LFE12307-.LFB12307
	.byte	0x7
	.quad	.LFB12311
	.uleb128 .LFE12311-.LFB12311
	.byte	0x7
	.quad	.LFB12312
	.uleb128 .LFE12312-.LFB12312
	.byte	0x7
	.quad	.LFB12316
	.uleb128 .LFE12316-.LFB12316
	.byte	0x7
	.quad	.LFB12322
	.uleb128 .LFE12322-.LFB12322
	.byte	0x7
	.quad	.LFB12324
	.uleb128 .LFE12324-.LFB12324
	.byte	0x7
	.quad	.LFB12325
	.uleb128 .LFE12325-.LFB12325
	.byte	0x7
	.quad	.LFB12346
	.uleb128 .LFE12346-.LFB12346
	.byte	0x7
	.quad	.LFB12347
	.uleb128 .LFE12347-.LFB12347
	.byte	0x7
	.quad	.LFB12348
	.uleb128 .LFE12348-.LFB12348
	.byte	0x7
	.quad	.LFB12350
	.uleb128 .LFE12350-.LFB12350
	.byte	0x7
	.quad	.LFB12352
	.uleb128 .LFE12352-.LFB12352
	.byte	0x7
	.quad	.LFB12353
	.uleb128 .LFE12353-.LFB12353
	.byte	0x7
	.quad	.LFB12362
	.uleb128 .LFE12362-.LFB12362
	.byte	0x7
	.quad	.LFB12363
	.uleb128 .LFE12363-.LFB12363
	.byte	0x7
	.quad	.LFB12367
	.uleb128 .LFE12367-.LFB12367
	.byte	0x7
	.quad	.LFB12369
	.uleb128 .LFE12369-.LFB12369
	.byte	0x7
	.quad	.LFB12371
	.uleb128 .LFE12371-.LFB12371
	.byte	0x7
	.quad	.LFB12372
	.uleb128 .LFE12372-.LFB12372
	.byte	0x7
	.quad	.LFB12376
	.uleb128 .LFE12376-.LFB12376
	.byte	0x7
	.quad	.LFB12379
	.uleb128 .LFE12379-.LFB12379
	.byte	0x7
	.quad	.LFB12381
	.uleb128 .LFE12381-.LFB12381
	.byte	0x7
	.quad	.LFB12382
	.uleb128 .LFE12382-.LFB12382
	.byte	0x7
	.quad	.LFB12392
	.uleb128 .LFE12392-.LFB12392
	.byte	0x7
	.quad	.LFB12393
	.uleb128 .LFE12393-.LFB12393
	.byte	0x7
	.quad	.LFB12398
	.uleb128 .LFE12398-.LFB12398
	.byte	0x7
	.quad	.LFB12400
	.uleb128 .LFE12400-.LFB12400
	.byte	0x7
	.quad	.LFB12404
	.uleb128 .LFE12404-.LFB12404
	.byte	0x7
	.quad	.LFB12405
	.uleb128 .LFE12405-.LFB12405
	.byte	0x7
	.quad	.LFB12406
	.uleb128 .LFE12406-.LFB12406
	.byte	0x7
	.quad	.LFB12408
	.uleb128 .LFE12408-.LFB12408
	.byte	0x7
	.quad	.LFB12410
	.uleb128 .LFE12410-.LFB12410
	.byte	0x7
	.quad	.LFB12411
	.uleb128 .LFE12411-.LFB12411
	.byte	0x7
	.quad	.LFB12412
	.uleb128 .LFE12412-.LFB12412
	.byte	0x7
	.quad	.LFB12418
	.uleb128 .LFE12418-.LFB12418
	.byte	0x7
	.quad	.LFB12419
	.uleb128 .LFE12419-.LFB12419
	.byte	0
.Ldebug_ranges3:
	.section	.debug_line,"dr"
.Ldebug_line0:
	.section	.debug_str,"dr"
.LASF96:
	.ascii "_Rep2\0"
.LASF207:
	.ascii "operator new []\0"
.LASF228:
	.ascii "__closure\0"
.LASF135:
	.ascii "arrival_token\0"
.LASF223:
	.ascii "__phase\0"
.LASF249:
	.ascii "errorMsg\0"
.LASF121:
	.ascii "_M_head_impl\0"
.LASF12:
	.ascii "strong_ordering\0"
.LASF79:
	.ascii "deleter_type\0"
.LASF247:
	.ascii "__SyncPoint\0"
.LASF167:
	.ascii "unused\0"
.LASF199:
	.ascii "D2D1_HWND_RENDER_TARGET_PROPERTIES\0"
.LASF218:
	.ascii "__success\0"
.LASF250:
	.ascii "amount\0"
.LASF76:
	.ascii "~unique_ptr\0"
.LASF194:
	.ascii "ID2D1Factory\0"
.LASF204:
	.ascii "MaterialAttributes\0"
.LASF44:
	.ascii "operator&=\0"
.LASF108:
	.ascii "__cast<long long int, std::ratio<1, 1000> >\0"
.LASF136:
	.ascii "arrive_and_drop\0"
.LASF24:
	.ascii "__mutex_base\0"
.LASF83:
	.ascii "_Del\0"
.LASF180:
	.ascii "D2D1_PIXEL_FORMAT\0"
.LASF85:
	.ascii "_Den\0"
.LASF171:
	.ascii "hwnd\0"
.LASF118:
	.ascii "_M_deleter\0"
.LASF124:
	.ascii "_Tuple_impl\0"
.LASF59:
	.ascii "atomic\0"
.LASF84:
	.ascii "_Num\0"
.LASF241:
	.ascii "keyfield\0"
.LASF186:
	.ascii "D2D1_BITMAP_INTERPOLATION_MODE\0"
.LASF238:
	.ascii "FrameDuration\0"
.LASF95:
	.ascii "duration<long long int, std::ratio<1> >\0"
.LASF209:
	.ascii "D2D1CreateFactory\0"
.LASF189:
	.ascii "D2D1_FEATURE_LEVEL\0"
.LASF178:
	.ascii "DXGI_FORMAT\0"
.LASF170:
	.ascii "hInstance\0"
.LASF159:
	.ascii "__get_helper<0, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
.LASF112:
	.ascii "_Period1\0"
.LASF97:
	.ascii "_Period2\0"
.LASF129:
	.ascii "__nothrow_default_constructible\0"
.LASF17:
	.ascii "_Spin\0"
.LASF87:
	.ascii "_S_gcd\0"
.LASF205:
	.ascii "cellSize\0"
.LASF9:
	.ascii "partial_ordering\0"
.LASF234:
	.ascii "SyncPoint\0"
.LASF4:
	.ascii "operator()\0"
.LASF164:
	.ascii "get<0, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
.LASF148:
	.ascii "remove_reference<std::tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >&>\0"
.LASF150:
	.ascii "tuple_element<0, std::tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> > >\0"
.LASF50:
	.ascii "exchange\0"
.LASF236:
	.ascii "StartX\0"
.LASF157:
	.ascii "get<0, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF252:
	.ascii "__mutex\0"
.LASF142:
	.ascii "_Tuple_impl<0, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF145:
	.ascii "_UElements\0"
.LASF195:
	.ascii "ID2D1HwndRenderTarget\0"
.LASF222:
	.ascii "__current\0"
.LASF90:
	.ascii "count\0"
.LASF88:
	.ascii "duration\0"
.LASF18:
	.ascii "~__waiter\0"
.LASF248:
	.ascii "errorText\0"
.LASF244:
	.ascii "__running\0"
.LASF113:
	.ascii "__atomic_ref\0"
.LASF224:
	.ascii "__to_rep\0"
.LASF203:
	.ascii "ColorF\0"
.LASF245:
	.ascii "__matrix\0"
.LASF74:
	.ascii "thread<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF66:
	.ascii "_M_t\0"
.LASF53:
	.ascii "fetch_add\0"
.LASF246:
	.ascii "___handle\0"
.LASF233:
	.ascii "__depend\0"
.LASF63:
	.ascii "operator std::__atomic_base<long long int>::__int_type\0"
.LASF158:
	.ascii "move<std::tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >&>\0"
.LASF48:
	.ascii "store\0"
.LASF102:
	.ascii "time_point\0"
.LASF132:
	.ascii "_Dummy\0"
.LASF21:
	.ascii "allocator_arg_t\0"
.LASF75:
	.ascii "unique_ptr\0"
.LASF39:
	.ascii "operator std::__atomic_base<bool>::__int_type\0"
.LASF184:
	.ascii "D2D_RECT_F\0"
.LASF176:
	.ascii "__allow_vector\0"
.LASF242:
	.ascii "factoryType\0"
.LASF182:
	.ascii "width\0"
.LASF93:
	.ascii "operator*=\0"
.LASF185:
	.ascii "D2D_RECT_U\0"
.LASF251:
	.ascii "__cond\0"
.LASF42:
	.ascii "operator+=\0"
.LASF119:
	.ascii "_Head_base\0"
.LASF206:
	.ascii "operator delete []\0"
.LASF131:
	.ascii "tuple<>\0"
.LASF128:
	.ascii "_M_tail\0"
.LASF49:
	.ascii "load\0"
.LASF253:
	.ascii "_ZSt9terminatev\0"
.LASF200:
	.ascii "pixelSize\0"
.LASF117:
	.ascii "__uniq_ptr_impl\0"
.LASF40:
	.ascii "operator++\0"
.LASF10:
	.ascii "weak_ordering\0"
.LASF126:
	.ascii "_Elements\0"
.LASF11:
	.ascii "operator std::partial_ordering\0"
.LASF114:
	.ascii "_M_ptr\0"
.LASF179:
	.ascii "D2D1_ALPHA_MODE\0"
.LASF201:
	.ascii "D2D1_RENDER_TARGET_PROPERTIES\0"
.LASF30:
	.ascii "timespec\0"
.LASF239:
	.ascii "frameStart\0"
.LASF127:
	.ascii "_Inherited\0"
.LASF86:
	.ascii "duration<long long int, std::ratio<1, 1000000000> >\0"
.LASF230:
	.ascii "__lhs\0"
.LASF71:
	.ascii "_State_impl<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF141:
	.ascii "_UHead\0"
.LASF169:
	.ascii "bottom\0"
.LASF73:
	.ascii "_Args\0"
.LASF174:
	.ascii "vswprintf\0"
.LASF212:
	.ascii "__pred\0"
.LASF139:
	.ascii "_Head_base<0, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()>, false>\0"
.LASF106:
	.ascii "_NumIsOne\0"
.LASF98:
	.ascii "duration<long long int, std::ratio<1, 1000> >\0"
.LASF80:
	.ascii "get_deleter\0"
.LASF52:
	.ascii "compare_exchange_strong\0"
.LASF92:
	.ascii "operator-\0"
.LASF198:
	.ascii "D2D1_FACTORY_OPTIONS\0"
.LASF162:
	.ascii "__get_helper<0, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
.LASF168:
	.ascii "right\0"
.LASF23:
	.ascii "swap\0"
.LASF101:
	.ascii "_Period\0"
.LASF191:
	.ascii "D2D1_RENDER_TARGET_TYPE\0"
.LASF27:
	.ascii "native_handle\0"
.LASF211:
	.ascii "__in_chrg\0"
.LASF120:
	.ascii "_M_head\0"
.LASF34:
	.ascii "lock_guard\0"
.LASF105:
	.ascii "_ToDur\0"
.LASF41:
	.ascii "operator--\0"
.LASF51:
	.ascii "compare_exchange_weak\0"
.LASF107:
	.ascii "_DenIsOne\0"
.LASF54:
	.ascii "fetch_sub\0"
.LASF130:
	.ascii "tuple\0"
.LASF232:
	.ascii "__completion\0"
.LASF56:
	.ascii "fetch_or\0"
.LASF72:
	.ascii "_Callable\0"
.LASF77:
	.ascii "operator*\0"
.LASF91:
	.ascii "operator+\0"
.LASF57:
	.ascii "fetch_xor\0"
.LASF14:
	.ascii "_M_notify\0"
.LASF6:
	.ascii "operator=\0"
.LASF202:
	.ascii "minLevel\0"
.LASF149:
	.ascii "_Nth_type<0, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF227:
	.ascii "~<lambda>\0"
.LASF69:
	.ascii "_State_impl\0"
.LASF219:
	.ascii "__failure\0"
.LASF5:
	.ascii "__nonesuch\0"
.LASF103:
	.ascii "_Clock\0"
.LASF115:
	.ascii "operator[]\0"
.LASF31:
	.ascii "notify_one\0"
.LASF151:
	.ascii "terminate\0"
.LASF183:
	.ascii "height\0"
.LASF61:
	.ascii "_S_alignment\0"
.LASF29:
	.ascii "wait\0"
.LASF220:
	.ascii "__val\0"
.LASF229:
	.ascii "__rep\0"
.LASF111:
	.ascii "_Rep1\0"
.LASF152:
	.ascii "__invoke_impl<void, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF190:
	.ascii "D2D1_PRESENT_OPTIONS\0"
.LASF208:
	.ascii "operator new\0"
.LASF177:
	.ascii "__allow_parallel\0"
.LASF160:
	.ascii "get<0, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
.LASF100:
	.ascii "_Rep\0"
.LASF210:
	.ascii "this\0"
.LASF58:
	.ascii "_IntTp\0"
.LASF213:
	.ascii "__spin\0"
.LASF122:
	.ascii "_Idx\0"
.LASF225:
	.ascii "__update\0"
.LASF13:
	.ascii "__waiter_pool_base\0"
.LASF94:
	.ascii "operator/=\0"
.LASF47:
	.ascii "is_lock_free\0"
.LASF156:
	.ascii "__tuple_element_t\0"
.LASF221:
	.ascii "__old_phase\0"
.LASF7:
	.ascii "__detail\0"
.LASF155:
	.ascii "__invoke<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF147:
	.ascii "_Types\0"
.LASF116:
	.ascii "default_delete\0"
.LASF43:
	.ascii "operator-=\0"
.LASF104:
	.ascii "__cast<long long int, std::ratio<1, 1000000000> >\0"
.LASF216:
	.ascii "__expected\0"
.LASF134:
	.ascii "__uniq_ptr_data\0"
.LASF193:
	.ascii "ID2D1Bitmap\0"
.LASF45:
	.ascii "operator|=\0"
.LASF161:
	.ascii "__get_helper<0, std::thread*, std::default_delete<std::thread []> >\0"
.LASF192:
	.ascii "D2D1_RENDER_TARGET_USAGE\0"
.LASF78:
	.ascii "pointer\0"
.LASF240:
	.ascii "frameEnd\0"
.LASF81:
	.ascii "reset\0"
.LASF46:
	.ascii "operator^=\0"
.LASF110:
	.ascii "__enable_if_is_duration\0"
.LASF62:
	.ascii "operator std::__atomic_base<unsigned char>::__int_type\0"
.LASF163:
	.ascii "get<0, std::thread*, std::default_delete<std::thread []> >\0"
.LASF67:
	.ascii "_M_invoke<0>\0"
.LASF154:
	.ascii "_Tail\0"
.LASF22:
	.ascii "exception_ptr\0"
.LASF25:
	.ascii "operator bool\0"
.LASF68:
	.ascii "_State_impl<std::thread::_Invoker<std::tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> > > >\0"
.LASF140:
	.ascii "_Head_base<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF197:
	.ascii "pixelFormat\0"
.LASF20:
	.ascii "_EntersWait\0"
.LASF8:
	.ascii "_M_value\0"
.LASF181:
	.ascii "alphaMode\0"
.LASF99:
	.ascii "duration<long long int>\0"
.LASF215:
	.ascii "__ptr\0"
.LASF146:
	.ascii "_Valid\0"
.LASF231:
	.ascii "__rhs\0"
.LASF64:
	.ascii "thread\0"
.LASF70:
	.ascii "~_State_impl\0"
.LASF28:
	.ascii "__condvar\0"
.LASF26:
	.ascii "native_handle_type\0"
.LASF144:
	.ascii "tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF37:
	.ascii "__atomic_base\0"
.LASF2:
	.ascii "type\0"
.LASF196:
	.ascii "D2D1_BITMAP_PROPERTIES\0"
.LASF226:
	.ascii "<lambda>\0"
.LASF237:
	.ascii "matrix\0"
.LASF82:
	.ascii "unique_ptr<>\0"
.LASF175:
	.ascii "__allow_unsequenced\0"
.LASF165:
	.ascii "forward<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF214:
	.ascii "__addr\0"
.LASF109:
	.ascii "__cast<long long int, std::ratio<1> >\0"
.LASF60:
	.ascii "is_always_lock_free\0"
.LASF173:
	.ascii "swprintf\0"
.LASF172:
	.ascii "__retval\0"
.LASF153:
	.ascii "__get_helper<0, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF3:
	.ascii "value_type\0"
.LASF217:
	.ascii "__desired\0"
.LASF32:
	.ascii "notify_all\0"
.LASF123:
	.ascii "_Head\0"
.LASF35:
	.ascii "release\0"
.LASF55:
	.ascii "fetch_and\0"
.LASF133:
	.ascii "__conditional_t\0"
.LASF188:
	.ascii "D2D1_FACTORY_TYPE\0"
.LASF16:
	.ascii "_Pred\0"
.LASF65:
	.ascii "_Invoker<std::tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> > >\0"
.LASF235:
	.ascii "running\0"
.LASF187:
	.ascii "D2D1_DEBUG_LEVEL\0"
.LASF89:
	.ascii "~duration\0"
.LASF36:
	.ascii "__int_type\0"
.LASF138:
	.ascii "remove_reference<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF15:
	.ascii "__unspec\0"
.LASF166:
	.ascii "common_type_t\0"
.LASF19:
	.ascii "__waiter<std::__barrier_phase_t>\0"
.LASF243:
	.ascii "_handle\0"
.LASF33:
	.ascii "adopt_lock_t\0"
.LASF125:
	.ascii "_M_swap\0"
.LASF38:
	.ascii "~__atomic_base\0"
.LASF137:
	.ascii "_CompletionF\0"
.LASF143:
	.ascii "_Tuple_impl<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.section	.debug_line_str,"dr"
.LASF0:
	.ascii "src\\main.cpp\0"
.LASF1:
	.ascii "C:\\code\\redjader\\simulation\0"
	.ident	"GCC: (Rev6, Built by MSYS2 project) 12.2.0"
	.def	__mingw_vfprintf;	.scl	2;	.type	32;	.endef
	.def	_ZSt11_Hash_bytesPKvyy;	.scl	2;	.type	32;	.endef
	.def	pthread_self;	.scl	2;	.type	32;	.endef
	.def	sched_yield;	.scl	2;	.type	32;	.endef
	.def	pthread_mutex_init;	.scl	2;	.type	32;	.endef
	.def	pthread_mutex_destroy;	.scl	2;	.type	32;	.endef
	.def	pthread_mutex_lock;	.scl	2;	.type	32;	.endef
	.def	pthread_mutex_unlock;	.scl	2;	.type	32;	.endef
	.def	pthread_cond_broadcast;	.scl	2;	.type	32;	.endef
	.def	pthread_cond_signal;	.scl	2;	.type	32;	.endef
	.def	pthread_cond_wait;	.scl	2;	.type	32;	.endef
	.def	pthread_cond_destroy;	.scl	2;	.type	32;	.endef
	.def	_ZSt20__throw_system_errori;	.scl	2;	.type	32;	.endef
	.def	__cxa_guard_acquire;	.scl	2;	.type	32;	.endef
	.def	atexit;	.scl	2;	.type	32;	.endef
	.def	__cxa_guard_release;	.scl	2;	.type	32;	.endef
	.def	_ZSt9terminatev;	.scl	2;	.type	32;	.endef
	.def	D2D1CreateFactory;	.scl	2;	.type	32;	.endef
	.def	malloc;	.scl	2;	.type	32;	.endef
	.def	_Znay;	.scl	2;	.type	32;	.endef
	.def	free;	.scl	2;	.type	32;	.endef
	.def	tanf;	.scl	2;	.type	32;	.endef
	.def	cosf;	.scl	2;	.type	32;	.endef
	.def	sinf;	.scl	2;	.type	32;	.endef
	.def	sqrt;	.scl	2;	.type	32;	.endef
	.def	_ZdlPvy;	.scl	2;	.type	32;	.endef
	.def	__cxa_throw_bad_array_new_length;	.scl	2;	.type	32;	.endef
	.def	_ZdaPv;	.scl	2;	.type	32;	.endef
	.def	_Znwy;	.scl	2;	.type	32;	.endef
	.def	_ZNSt6thread20hardware_concurrencyEv;	.scl	2;	.type	32;	.endef
	.def	round;	.scl	2;	.type	32;	.endef
	.def	rand;	.scl	2;	.type	32;	.endef
	.def	_ZNSt6chrono3_V212system_clock3nowEv;	.scl	2;	.type	32;	.endef
	.def	_ZNSt6thread4joinEv;	.scl	2;	.type	32;	.endef
	.def	_Unwind_Resume;	.scl	2;	.type	32;	.endef
	.def	nanosleep;	.scl	2;	.type	32;	.endef
	.def	vswprintf_s;	.scl	2;	.type	32;	.endef
	.def	cbrt;	.scl	2;	.type	32;	.endef
	.def	_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE;	.scl	2;	.type	32;	.endef
	.def	_ZdaPvy;	.scl	2;	.type	32;	.endef
	.def	_ZdaPvSt11align_val_t;	.scl	2;	.type	32;	.endef
	.def	_ZnaySt11align_val_t;	.scl	2;	.type	32;	.endef
	.def	_ZNSt6thread6_StateD2Ev;	.scl	2;	.type	32;	.endef
	.section	.rdata$.refptr._ZTVNSt6thread6_StateE, "dr"
	.globl	.refptr._ZTVNSt6thread6_StateE
	.linkonce	discard
.refptr._ZTVNSt6thread6_StateE:
	.quad	_ZTVNSt6thread6_StateE
