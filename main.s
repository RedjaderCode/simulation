	.file	"main.cpp"
 # GNU C++20 (Rev6, Built by MSYS2 project) version 12.2.0 (x86_64-w64-mingw32)
 #	compiled by GNU C version 12.2.0, GMP version 6.2.1, MPFR version 4.1.0-p13, MPC version 1.2.1, isl version isl-0.25-GMP

 # GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
 # options passed: -mtune=generic -march=x86-64 -g -O0 -std=c++20 -fstack-usage -fno-inline -fno-omit-frame-pointer
	.text
.Ltext0:
	.file 0 "C:/code/redjader/simulation" "src/main.cpp"
	.section	.text$__is_constant_evaluated,"x"
	.linkonce discard
	.globl	__is_constant_evaluated
	.def	__is_constant_evaluated;	.scl	2;	.type	32;	.endef
	.seh_proc	__is_constant_evaluated
__is_constant_evaluated:
.LFB404:
	.file 1 "C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/c++config.h"
	.loc 1 517 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI0:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1:
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/c++config.h:523:     return __builtin_is_constant_evaluated();
	.loc 1 523 44
	movl	$0, %eax	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/c++config.h:527:   }
	.loc 1 527 3
	popq	%rbp	 #
.LCFI2:
	ret	
.LFE404:
	.seh_endproc
	.section	.text$_Z6printfPKcz,"x"
	.linkonce discard
	.globl	_Z6printfPKcz
	.def	_Z6printfPKcz;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z6printfPKcz
_Z6printfPKcz:
.LFB5616:
	.file 2 "C:/msys64/mingw64/include/stdio.h"
	.loc 2 369 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI3:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI4:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI5:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI6:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __format, __format
	movq	%rdx, 40(%rbp)	 #,
	movq	%r8, 48(%rbp)	 #,
	movq	%r9, 56(%rbp)	 #,
 # C:/msys64/mingw64/include/stdio.h:371:   __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
	.loc 2 371 53
	leaq	40(%rbp), %rax	 #, tmp86
	movq	%rax, -16(%rbp)	 # tmp86, MEM[(char * *)&__local_argv]
 # C:/msys64/mingw64/include/stdio.h:372:   __retval = __mingw_vfprintf( stdout, __format, __local_argv );
	.loc 2 372 30
	movq	-16(%rbp), %rbx	 # __local_argv, __local_argv.24_1
	movl	$1, %ecx	 #,
	movq	__imp___acrt_iob_func(%rip), %rax	 #, tmp87
	call	*%rax	 # tmp87
.LVL0:
	movq	%rax, %rcx	 #, _2
	movq	32(%rbp), %rax	 # __format, tmp88
	movq	%rbx, %r8	 # __local_argv.24_1,
	movq	%rax, %rdx	 # tmp88,
	call	__mingw_vfprintf	 #
	movl	%eax, -4(%rbp)	 # tmp89, __retval
 # C:/msys64/mingw64/include/stdio.h:374:   return __retval;
	.loc 2 374 10
	movl	-4(%rbp), %eax	 # __retval, _11
 # C:/msys64/mingw64/include/stdio.h:375: }
	.loc 2 375 1
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI7:
	popq	%rbp	 #
.LCFI8:
	ret	
.LFE5616:
	.seh_endproc
	.section	.text$_ZNSt9__cmp_cat8__unspecC1EPS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__cmp_cat8__unspecC1EPS0_
	.def	_ZNSt9__cmp_cat8__unspecC1EPS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__cmp_cat8__unspecC1EPS0_
_ZNSt9__cmp_cat8__unspecC1EPS0_:
.LFB5910:
	.file 3 "C:/msys64/mingw64/include/c++/12.2.0/compare"
	.loc 3 59 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI9:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI10:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.102302, D.102302
 # C:/msys64/mingw64/include/c++/12.2.0/compare:59:       constexpr __unspec(__unspec*) noexcept { }
	.loc 3 59 48
	nop	
	popq	%rbp	 #
.LCFI11:
	ret	
.LFE5910:
	.seh_endproc
	.section	.text$_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE,"x"
	.linkonce discard
	.globl	_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE
	.def	_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE
_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE:
.LFB5949:
	.loc 3 294 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI12:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI13:
	.seh_endprologue
	movb	%cl, 16(%rbp)	 # __v, __v
 # C:/msys64/mingw64/include/c++/12.2.0/compare:295:     { return __v._M_value < 0; }
	.loc 3 295 18
	movzbl	16(%rbp), %eax	 # __v._M_value, _1
 # C:/msys64/mingw64/include/c++/12.2.0/compare:295:     { return __v._M_value < 0; }
	.loc 3 295 29
	shrb	$7, %al	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/compare:295:     { return __v._M_value < 0; }
	.loc 3 295 32
	popq	%rbp	 #
.LCFI14:
	ret	
.LFE5949:
	.seh_endproc
	.section	.text$_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE,"x"
	.linkonce discard
	.globl	_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE
	.def	_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE
_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE:
.LFB5951:
	.loc 3 304 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI15:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI16:
	.seh_endprologue
	movb	%cl, 16(%rbp)	 # __v, __v
 # C:/msys64/mingw64/include/c++/12.2.0/compare:305:     { return __v._M_value <= 0; }
	.loc 3 305 18
	movzbl	16(%rbp), %eax	 # __v._M_value, _1
 # C:/msys64/mingw64/include/c++/12.2.0/compare:305:     { return __v._M_value <= 0; }
	.loc 3 305 30
	testb	%al, %al	 # _1
	setle	%al	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/compare:305:     { return __v._M_value <= 0; }
	.loc 3 305 33
	popq	%rbp	 #
.LCFI17:
	ret	
.LFE5951:
	.seh_endproc
	.section	.text$_ZnwyPv,"x"
	.linkonce discard
	.globl	_ZnwyPv
	.def	_ZnwyPv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZnwyPv
_ZnwyPv:
.LFB6076:
	.file 4 "C:/msys64/mingw64/include/c++/12.2.0/new"
	.loc 4 175 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI18:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI19:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.106237, D.106237
	movq	%rdx, 24(%rbp)	 # __p, __p
 # C:/msys64/mingw64/include/c++/12.2.0/new:175: { return __p; }
	.loc 4 175 10
	movq	24(%rbp), %rax	 # __p, _2
 # C:/msys64/mingw64/include/c++/12.2.0/new:175: { return __p; }
	.loc 4 175 15
	popq	%rbp	 #
.LCFI20:
	ret	
.LFE6076:
	.seh_endproc
	.section	.text$_ZNSt10_Hash_impl4hashEPKvyy,"x"
	.linkonce discard
	.globl	_ZNSt10_Hash_impl4hashEPKvyy
	.def	_ZNSt10_Hash_impl4hashEPKvyy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Hash_impl4hashEPKvyy
_ZNSt10_Hash_impl4hashEPKvyy:
.LFB7262:
	.file 5 "C:/msys64/mingw64/include/c++/12.2.0/bits/functional_hash.h"
	.loc 5 204 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI21:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI22:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __ptr, __ptr
	movq	%rdx, 24(%rbp)	 # __clength, __clength
	movq	%r8, 32(%rbp)	 # __seed, __seed
 # C:/msys64/mingw64/include/c++/12.2.0/bits/functional_hash.h:206:     { return _Hash_bytes(__ptr, __clength, __seed); }
	.loc 5 206 25
	movq	32(%rbp), %rcx	 # __seed, tmp84
	movq	24(%rbp), %rdx	 # __clength, tmp85
	movq	16(%rbp), %rax	 # __ptr, tmp86
	movq	%rcx, %r8	 # tmp84,
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt11_Hash_bytesPKvyy	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/functional_hash.h:206:     { return _Hash_bytes(__ptr, __clength, __seed); }
	.loc 5 206 53
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI23:
	ret	
.LFE7262:
	.seh_endproc
	.text
	.def	_ZL18__gthread_active_pv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL18__gthread_active_pv
_ZL18__gthread_active_pv:
.LFB7436:
	.file 6 "C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h"
	.loc 6 301 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI24:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI25:
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:302:   return 1;
	.loc 6 302 10
	movl	$1, %eax	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:303: }
	.loc 6 303 1
	popq	%rbp	 #
.LCFI26:
	ret	
.LFE7436:
	.seh_endproc
	.def	_ZL14__gthread_selfv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL14__gthread_selfv
_ZL14__gthread_selfv:
.LFB7441:
	.loc 6 686 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI27:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI28:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:687:   return __gthrw_(pthread_self) ();
	.loc 6 687 33
	call	pthread_self	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:688: }
	.loc 6 688 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI29:
	ret	
.LFE7441:
	.seh_endproc
	.def	_ZL15__gthread_yieldv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL15__gthread_yieldv
_ZL15__gthread_yieldv:
.LFB7442:
	.loc 6 692 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI30:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI31:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:693:   return __gthrw_(sched_yield) ();
	.loc 6 693 32
	call	sched_yield	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:694: }
	.loc 6 694 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI32:
	ret	
.LFE7442:
	.seh_endproc
	.def	_ZL29__gthread_mutex_init_functionPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL29__gthread_mutex_init_functionPx
_ZL29__gthread_mutex_init_functionPx:
.LFB7448:
	.loc 6 731 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI33:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI34:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __mutex, __mutex
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:732:   if (__gthread_active_p ())
	.loc 6 732 26
	call	_ZL18__gthread_active_pv	 #
	testl	%eax, %eax	 # _1
	setne	%al	 #, retval.160_5
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:732:   if (__gthread_active_p ())
	.loc 6 732 3
	testb	%al, %al	 # retval.160_5
	je	.L22	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:733:     __gthrw_(pthread_mutex_init) (__mutex, NULL);
	.loc 6 733 34
	movq	16(%rbp), %rax	 # __mutex, tmp84
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp84,
	call	pthread_mutex_init	 #
.L22:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:734: }
	.loc 6 734 1
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI35:
	ret	
.LFE7448:
	.seh_endproc
	.def	_ZL23__gthread_mutex_destroyPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL23__gthread_mutex_destroyPx
_ZL23__gthread_mutex_destroyPx:
.LFB7449:
	.loc 6 738 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI36:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI37:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __mutex, __mutex
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:739:   if (__gthread_active_p ())
	.loc 6 739 26
	call	_ZL18__gthread_active_pv	 #
	testl	%eax, %eax	 # _1
	setne	%al	 #, retval.159_6
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:739:   if (__gthread_active_p ())
	.loc 6 739 3
	testb	%al, %al	 # retval.159_6
	je	.L24	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:740:     return __gthrw_(pthread_mutex_destroy) (__mutex);
	.loc 6 740 44
	movq	16(%rbp), %rax	 # __mutex, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	pthread_mutex_destroy	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:740:     return __gthrw_(pthread_mutex_destroy) (__mutex);
	.loc 6 740 52
	jmp	.L25	 #
.L24:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:742:     return 0;
	.loc 6 742 12
	movl	$0, %eax	 #, _10
.L25:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:743: }
	.loc 6 743 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI38:
	ret	
.LFE7449:
	.seh_endproc
	.def	_ZL20__gthread_mutex_lockPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL20__gthread_mutex_lockPx
_ZL20__gthread_mutex_lockPx:
.LFB7450:
	.loc 6 747 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI39:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI40:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __mutex, __mutex
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:748:   if (__gthread_active_p ())
	.loc 6 748 26
	call	_ZL18__gthread_active_pv	 #
	testl	%eax, %eax	 # _1
	setne	%al	 #, retval.196_6
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:748:   if (__gthread_active_p ())
	.loc 6 748 3
	testb	%al, %al	 # retval.196_6
	je	.L27	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:749:     return __gthrw_(pthread_mutex_lock) (__mutex);
	.loc 6 749 41
	movq	16(%rbp), %rax	 # __mutex, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	pthread_mutex_lock	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:749:     return __gthrw_(pthread_mutex_lock) (__mutex);
	.loc 6 749 49
	jmp	.L28	 #
.L27:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:751:     return 0;
	.loc 6 751 12
	movl	$0, %eax	 #, _10
.L28:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:752: }
	.loc 6 752 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI41:
	ret	
.LFE7450:
	.seh_endproc
	.def	_ZL22__gthread_mutex_unlockPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL22__gthread_mutex_unlockPx
_ZL22__gthread_mutex_unlockPx:
.LFB7453:
	.loc 6 777 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI42:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI43:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __mutex, __mutex
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:778:   if (__gthread_active_p ())
	.loc 6 778 26
	call	_ZL18__gthread_active_pv	 #
	testl	%eax, %eax	 # _1
	setne	%al	 #, retval.199_6
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:778:   if (__gthread_active_p ())
	.loc 6 778 3
	testb	%al, %al	 # retval.199_6
	je	.L30	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:779:     return __gthrw_(pthread_mutex_unlock) (__mutex);
	.loc 6 779 43
	movq	16(%rbp), %rax	 # __mutex, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	pthread_mutex_unlock	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:779:     return __gthrw_(pthread_mutex_unlock) (__mutex);
	.loc 6 779 51
	jmp	.L31	 #
.L30:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:781:     return 0;
	.loc 6 781 12
	movl	$0, %eax	 #, _10
.L31:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:782: }
	.loc 6 782 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI44:
	ret	
.LFE7453:
	.seh_endproc
	.def	_ZL24__gthread_cond_broadcastPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL24__gthread_cond_broadcastPx
_ZL24__gthread_cond_broadcastPx:
.LFB7460:
	.loc 6 852 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI45:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI46:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __cond, __cond
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:853:   return __gthrw_(pthread_cond_broadcast) (__cond);
	.loc 6 853 43
	movq	16(%rbp), %rax	 # __cond, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	pthread_cond_broadcast	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:854: }
	.loc 6 854 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI47:
	ret	
.LFE7460:
	.seh_endproc
	.def	_ZL21__gthread_cond_signalPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL21__gthread_cond_signalPx
_ZL21__gthread_cond_signalPx:
.LFB7461:
	.loc 6 858 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI48:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI49:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __cond, __cond
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:859:   return __gthrw_(pthread_cond_signal) (__cond);
	.loc 6 859 40
	movq	16(%rbp), %rax	 # __cond, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	pthread_cond_signal	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:860: }
	.loc 6 860 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI50:
	ret	
.LFE7461:
	.seh_endproc
	.def	_ZL19__gthread_cond_waitPxS_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL19__gthread_cond_waitPxS_
_ZL19__gthread_cond_waitPxS_:
.LFB7462:
	.loc 6 864 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI51:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI52:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __cond, __cond
	movq	%rdx, 24(%rbp)	 # __mutex, __mutex
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:865:   return __gthrw_(pthread_cond_wait) (__cond, __mutex);
	.loc 6 865 38
	movq	24(%rbp), %rdx	 # __mutex, tmp84
	movq	16(%rbp), %rax	 # __cond, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	pthread_cond_wait	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:866: }
	.loc 6 866 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI53:
	ret	
.LFE7462:
	.seh_endproc
	.def	_ZL22__gthread_cond_destroyPx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZL22__gthread_cond_destroyPx
_ZL22__gthread_cond_destroyPx:
.LFB7465:
	.loc 6 884 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI54:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI55:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __cond, __cond
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:885:   return __gthrw_(pthread_cond_destroy) (__cond);
	.loc 6 885 41
	movq	16(%rbp), %rax	 # __cond, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	pthread_cond_destroy	 #
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/gthr-default.h:886: }
	.loc 6 886 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI56:
	ret	
.LFE7465:
	.seh_endproc
	.section .rdata,"dr"
	.align 4
_ZN9__gnu_cxxL21__default_lock_policyE:
	.long	2
	.section	.text$_ZNSt12__mutex_baseC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12__mutex_baseC2Ev
	.def	_ZNSt12__mutex_baseC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12__mutex_baseC2Ev
_ZNSt12__mutex_baseC2Ev:
.LFB8921:
	.file 7 "C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h"
	.loc 7 69 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI57:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI58:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB85:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:72:       __GTHREAD_MUTEX_INIT_FUNCTION(&_M_mutex);
	.loc 7 72 36
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL29__gthread_mutex_init_functionPx	 #
.LBE85:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:73:     }
	.loc 7 73 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI59:
	ret	
.LFE8921:
	.def	__gxx_personality_seh0;	.scl	2;	.type	32;	.endef
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8921:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8921-.LLSDACSB8921
.LLSDACSB8921:
.LLSDACSE8921:
	.section	.text$_ZNSt12__mutex_baseC2Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt12__mutex_baseD2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12__mutex_baseD2Ev
	.def	_ZNSt12__mutex_baseD2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12__mutex_baseD2Ev
_ZNSt12__mutex_baseD2Ev:
.LFB8924:
	.loc 7 75 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI60:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI61:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB86:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:75:     ~__mutex_base() noexcept { __gthread_mutex_destroy(&_M_mutex); }
	.loc 7 75 55
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL23__gthread_mutex_destroyPx	 #
.LBE86:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:75:     ~__mutex_base() noexcept { __gthread_mutex_destroy(&_M_mutex); }
	.loc 7 75 68
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI62:
	ret	
.LFE8924:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8924:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8924-.LLSDACSB8924
.LLSDACSB8924:
.LLSDACSE8924:
	.section	.text$_ZNSt12__mutex_baseD2Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt5mutex4lockEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5mutex4lockEv
	.def	_ZNSt5mutex4lockEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5mutex4lockEv
_ZNSt5mutex4lockEv:
.LFB8926:
	.loc 7 98 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI63:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI64:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:100:       int __e = __gthread_mutex_lock(&_M_mutex);
	.loc 7 100 37
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL20__gthread_mutex_lockPx	 #
	movl	%eax, -4(%rbp)	 # _5, __e
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:103:       if (__e)
	.loc 7 103 7
	cmpl	$0, -4(%rbp)	 #, __e
	je	.L44	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:104: 	__throw_system_error(__e);
	.loc 7 104 22
	movl	-4(%rbp), %eax	 # __e, tmp84
	movl	%eax, %ecx	 # tmp84,
	call	_ZSt20__throw_system_errori	 #
.L44:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:105:     }
	.loc 7 105 5
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI65:
	ret	
.LFE8926:
	.seh_endproc
	.section	.text$_ZNSt5mutex6unlockEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5mutex6unlockEv
	.def	_ZNSt5mutex6unlockEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5mutex6unlockEv
_ZNSt5mutex6unlockEv:
.LFB8928:
	.loc 7 115 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI66:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI67:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:118:       __gthread_mutex_unlock(&_M_mutex);
	.loc 7 118 29
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL22__gthread_mutex_unlockPx	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:119:     }
	.loc 7 119 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI68:
	ret	
.LFE8928:
	.seh_endproc
	.section	.text$_ZNSt5mutex13native_handleEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5mutex13native_handleEv
	.def	_ZNSt5mutex13native_handleEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5mutex13native_handleEv
_ZNSt5mutex13native_handleEv:
.LFB8929:
	.loc 7 122 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI69:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI70:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:123:     { return &_M_mutex; }
	.loc 7 123 15
	movq	16(%rbp), %rax	 # this, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:123:     { return &_M_mutex; }
	.loc 7 123 25
	popq	%rbp	 #
.LCFI71:
	ret	
.LFE8929:
	.seh_endproc
	.section	.text$_ZNSt9__condvarC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__condvarC1Ev
	.def	_ZNSt9__condvarC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__condvarC1Ev
_ZNSt9__condvarC1Ev:
.LFB8932:
	.loc 7 132 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI72:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI73:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB87:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:133:     {
	.loc 7 133 5
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$-1, (%rax)	 #, this_2(D)->_M_cond
.LBE87:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:137:     }
	.loc 7 137 5
	nop	
	popq	%rbp	 #
.LCFI74:
	ret	
.LFE8932:
	.seh_endproc
	.section	.text$_ZNSt9__condvarD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__condvarD1Ev
	.def	_ZNSt9__condvarD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__condvarD1Ev
_ZNSt9__condvarD1Ev:
.LFB8935:
	.loc 7 139 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI75:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI76:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB88:
.LBB89:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:141:       int __e __attribute__((__unused__)) = __gthread_cond_destroy(&_M_cond);
	.loc 7 141 67
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL22__gthread_cond_destroyPx	 #
	movl	%eax, -4(%rbp)	 # _7, __e
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:142:       __glibcxx_assert(__e != EBUSY); // threads are still blocked
	.loc 7 142 7
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _2
	je	.L50	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:142:       __glibcxx_assert(__e != EBUSY); // threads are still blocked
	.loc 7 142 7 is_stmt 0 discriminator 1
	cmpl	$16, -4(%rbp)	 #, __e
	jne	.L50	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:142:       __glibcxx_assert(__e != EBUSY); // threads are still blocked
	.loc 7 142 7 discriminator 3
	movl	$1, %eax	 #, iftmp.158_3
	jmp	.L51	 #
.L50:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:142:       __glibcxx_assert(__e != EBUSY); // threads are still blocked
	.loc 7 142 7 discriminator 4
	movl	$0, %eax	 #, iftmp.158_3
.L51:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:142:       __glibcxx_assert(__e != EBUSY); // threads are still blocked
	.loc 7 142 7 discriminator 6
	testb	%al, %al	 # iftmp.158_3
.LBE89:
.LBE88:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:143:     }
	.loc 7 143 5 is_stmt 1 discriminator 6
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI77:
	ret	
.LFE8935:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8935:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8935-.LLSDACSB8935
.LLSDACSB8935:
.LLSDACSE8935:
	.section	.text$_ZNSt9__condvarD1Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt9__condvar4waitERSt5mutex,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__condvar4waitERSt5mutex
	.def	_ZNSt9__condvar4waitERSt5mutex;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__condvar4waitERSt5mutex
_ZNSt9__condvar4waitERSt5mutex:
.LFB8937:
	.loc 7 152 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI78:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI79:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:155: 	= __gthread_cond_wait(&_M_cond, __m.native_handle());
	.loc 7 155 23
	movq	24(%rbp), %rax	 # __m, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt5mutex13native_handleEv	 #
	movq	%rax, %rdx	 #, _1
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZL19__gthread_cond_waitPxS_	 #
	movl	%eax, -4(%rbp)	 # _10, __e
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:156:       __glibcxx_assert(__e == 0);
	.loc 7 156 7
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _3
	je	.L54	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:156:       __glibcxx_assert(__e == 0);
	.loc 7 156 7 is_stmt 0 discriminator 1
	cmpl	$0, -4(%rbp)	 #, __e
	je	.L54	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:156:       __glibcxx_assert(__e == 0);
	.loc 7 156 7 discriminator 3
	movl	$1, %eax	 #, iftmp.198_4
	jmp	.L55	 #
.L54:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:156:       __glibcxx_assert(__e == 0);
	.loc 7 156 7 discriminator 4
	movl	$0, %eax	 #, iftmp.198_4
.L55:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:156:       __glibcxx_assert(__e == 0);
	.loc 7 156 7 discriminator 6
	testb	%al, %al	 # iftmp.198_4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:157:     }
	.loc 7 157 5 is_stmt 1 discriminator 6
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI80:
	ret	
.LFE8937:
	.seh_endproc
	.section	.text$_ZNSt9__condvar10notify_oneEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__condvar10notify_oneEv
	.def	_ZNSt9__condvar10notify_oneEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__condvar10notify_oneEv
_ZNSt9__condvar10notify_oneEv:
.LFB8939:
	.loc 7 175 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI81:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI82:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:177:       int __e __attribute__((__unused__)) = __gthread_cond_signal(&_M_cond);
	.loc 7 177 66
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL21__gthread_cond_signalPx	 #
	movl	%eax, -4(%rbp)	 # _7, __e
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:178:       __glibcxx_assert(__e == 0);
	.loc 7 178 7
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _2
	je	.L58	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:178:       __glibcxx_assert(__e == 0);
	.loc 7 178 7 is_stmt 0 discriminator 1
	cmpl	$0, -4(%rbp)	 #, __e
	je	.L58	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:178:       __glibcxx_assert(__e == 0);
	.loc 7 178 7 discriminator 3
	movl	$1, %eax	 #, iftmp.168_3
	jmp	.L59	 #
.L58:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:178:       __glibcxx_assert(__e == 0);
	.loc 7 178 7 discriminator 4
	movl	$0, %eax	 #, iftmp.168_3
.L59:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:178:       __glibcxx_assert(__e == 0);
	.loc 7 178 7 discriminator 6
	testb	%al, %al	 # iftmp.168_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:179:     }
	.loc 7 179 5 is_stmt 1 discriminator 6
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI83:
	ret	
.LFE8939:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8939:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8939-.LLSDACSB8939
.LLSDACSB8939:
.LLSDACSE8939:
	.section	.text$_ZNSt9__condvar10notify_oneEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt9__condvar10notify_allEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt9__condvar10notify_allEv
	.def	_ZNSt9__condvar10notify_allEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt9__condvar10notify_allEv
_ZNSt9__condvar10notify_allEv:
.LFB8940:
	.loc 7 182 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI84:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI85:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:184:       int __e __attribute__((__unused__)) = __gthread_cond_broadcast(&_M_cond);
	.loc 7 184 69
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZL24__gthread_cond_broadcastPx	 #
	movl	%eax, -4(%rbp)	 # _7, __e
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:185:       __glibcxx_assert(__e == 0);
	.loc 7 185 7
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _2
	je	.L62	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:185:       __glibcxx_assert(__e == 0);
	.loc 7 185 7 is_stmt 0 discriminator 1
	cmpl	$0, -4(%rbp)	 #, __e
	je	.L62	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:185:       __glibcxx_assert(__e == 0);
	.loc 7 185 7 discriminator 3
	movl	$1, %eax	 #, iftmp.166_3
	jmp	.L63	 #
.L62:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:185:       __glibcxx_assert(__e == 0);
	.loc 7 185 7 discriminator 4
	movl	$0, %eax	 #, iftmp.166_3
.L63:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:185:       __glibcxx_assert(__e == 0);
	.loc 7 185 7 discriminator 6
	testb	%al, %al	 # iftmp.166_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:186:     }
	.loc 7 186 5 is_stmt 1 discriminator 6
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI86:
	ret	
.LFE8940:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8940:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8940-.LLSDACSB8940
.LLSDACSB8940:
.LLSDACSE8940:
	.section	.text$_ZNSt9__condvar10notify_allEv,"x"
	.linkonce discard
	.seh_endproc
	.section .rdata,"dr"
	.align 8
_ZNSt8__detailL25__platform_wait_alignmentE:
	.quad	8
	.section	.text$_ZNSt8__detail14__thread_yieldEv,"x"
	.linkonce discard
	.globl	_ZNSt8__detail14__thread_yieldEv
	.def	_ZNSt8__detail14__thread_yieldEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail14__thread_yieldEv
_ZNSt8__detail14__thread_yieldEv:
.LFB8944:
	.file 8 "C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h"
	.loc 8 129 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI87:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI88:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:131:      __gthread_yield();
	.loc 8 131 21
	call	_ZL15__gthread_yieldv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:133:     }
	.loc 8 133 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI89:
	ret	
.LFE8944:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8944:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8944-.LLSDACSB8944
.LLSDACSB8944:
.LLSDACSE8944:
	.section	.text$_ZNSt8__detail14__thread_yieldEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt8__detail14__thread_relaxEv,"x"
	.linkonce discard
	.globl	_ZNSt8__detail14__thread_relaxEv
	.def	_ZNSt8__detail14__thread_relaxEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail14__thread_relaxEv
_ZNSt8__detail14__thread_relaxEv:
.LFB8945:
	.loc 8 137 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI90:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI91:
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:139:       __builtin_ia32_pause();
	.loc 8 139 27
	rep nop
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:143:     }
	.loc 8 143 5
	nop	
	popq	%rbp	 #
.LCFI92:
	ret	
.LFE8945:
	.seh_endproc
	.section .rdata,"dr"
	.align 4
_ZNSt8__detailL25__atomic_spin_count_relaxE:
	.long	12
	.align 4
_ZNSt8__detailL19__atomic_spin_countE:
	.long	16
	.section	.text$_ZNKSt8__detail21__default_spin_policyclEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt8__detail21__default_spin_policyclEv
	.def	_ZNKSt8__detail21__default_spin_policyclEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt8__detail21__default_spin_policyclEv
_ZNKSt8__detail21__default_spin_policyclEv:
.LFB8946:
	.loc 8 151 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI93:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI94:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:152:       { return false; }
	.loc 8 152 16
	movl	$0, %eax	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:152:       { return false; }
	.loc 8 152 23
	popq	%rbp	 #
.LCFI95:
	ret	
.LFE8946:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv
	.def	_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv
_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv:
.LFB8949:
	.loc 8 208 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI96:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI97:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:209:       { __atomic_fetch_add(&_M_wait, 1, __ATOMIC_SEQ_CST); }
	.loc 8 209 28
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:209:       { __atomic_fetch_add(&_M_wait, 1, __ATOMIC_SEQ_CST); }
	.loc 8 209 27
	lock addq	$1, (%rax)	 #,,* _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:209:       { __atomic_fetch_add(&_M_wait, 1, __ATOMIC_SEQ_CST); }
	.loc 8 209 60
	nop	
	popq	%rbp	 #
.LCFI98:
	ret	
.LFE8949:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv
	.def	_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv
_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv:
.LFB8950:
	.loc 8 212 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI99:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI100:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:213:       { __atomic_fetch_sub(&_M_wait, 1, __ATOMIC_RELEASE); }
	.loc 8 213 28
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:213:       { __atomic_fetch_sub(&_M_wait, 1, __ATOMIC_RELEASE); }
	.loc 8 213 27
	lock subq	$1, (%rax)	 #,,* _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:213:       { __atomic_fetch_sub(&_M_wait, 1, __ATOMIC_RELEASE); }
	.loc 8 213 60
	nop	
	popq	%rbp	 #
.LCFI101:
	ret	
.LFE8950:
	.seh_endproc
	.section	.text$_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv
	.def	_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv
_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv:
.LFB8951:
	.loc 8 216 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI102:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI103:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:219: 	__atomic_load(&_M_wait, &__res, __ATOMIC_SEQ_CST);
	.loc 8 219 16
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:219: 	__atomic_load(&_M_wait, &__res, __ATOMIC_SEQ_CST);
	.loc 8 219 15
	movq	(%rax), %rax	 #* _1, _2
	movq	%rax, -8(%rbp)	 # _2, __res
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:220: 	return __res != 0;
	.loc 8 220 15
	movq	-8(%rbp), %rax	 # __res, __res.164_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:220: 	return __res != 0;
	.loc 8 220 18
	testq	%rax, %rax	 # __res.164_3
	setne	%al	 #, _8
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:221:       }
	.loc 8 221 7
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI104:
	ret	
.LFE8951:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb
	.def	_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb
_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb:
.LFB8952:
	.loc 8 224 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI105:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI106:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __addr, __addr
	movl	%r8d, %eax	 # __all, tmp88
	movl	%r9d, %edx	 # __bare, tmp90
	movb	%al, 32(%rbp)	 # tmp89, __all
	movl	%edx, %eax	 # tmp90, tmp91
	movb	%al, 40(%rbp)	 # tmp91, __bare
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 8 226 8
	movzbl	40(%rbp), %eax	 # __bare, tmp92
	xorl	$1, %eax	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 8 226 6
	testb	%al, %al	 # _1
	je	.L74	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 8 226 28 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp93
	movq	%rax, %rcx	 # tmp93,
	call	_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv	 #
	xorl	$1, %eax	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 8 226 6 discriminator 1
	testb	%al, %al	 # _3
	je	.L74	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 8 226 6 is_stmt 0 discriminator 3
	movl	$1, %eax	 #, iftmp.163_6
	jmp	.L75	 #
.L74:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 8 226 6 discriminator 4
	movl	$0, %eax	 #, iftmp.163_6
.L75:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:226: 	if (!(__bare || _M_waiting()))
	.loc 8 226 2 is_stmt 1 discriminator 6
	testb	%al, %al	 # iftmp.163_6
	jne	.L79	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:232: 	if (__all)
	.loc 8 232 2
	cmpb	$0, 32(%rbp)	 #, __all
	je	.L78	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:233: 	  _M_cv.notify_all();
	.loc 8 233 20
	movq	16(%rbp), %rax	 # this, tmp94
	addq	$72, %rax	 #, _4
	movq	%rax, %rcx	 # _4,
	call	_ZNSt9__condvar10notify_allEv	 #
	jmp	.L73	 #
.L78:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:235: 	  _M_cv.notify_one();
	.loc 8 235 20
	movq	16(%rbp), %rax	 # this, tmp95
	addq	$72, %rax	 #, _5
	movq	%rax, %rcx	 # _5,
	call	_ZNSt9__condvar10notify_oneEv	 #
	jmp	.L73	 #
.L79:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:227: 	  return;
	.loc 8 227 4
	nop	
.L73:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:237:       }
	.loc 8 237 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI107:
	ret	
.LFE8952:
	.seh_endproc
	.globl	_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w
	.section	.data$_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w,"w"
	.linkonce same_size
	.align 64
_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w:
	.space 2048
	.section	.text$_ZNSt5mutexD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5mutexD1Ev
	.def	_ZNSt5mutexD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5mutexD1Ev
_ZNSt5mutexD1Ev:
.LFB8957:
	.loc 7 92 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI108:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI109:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB90:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:92:     ~mutex() = default;
	.loc 7 92 5
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12__mutex_baseD2Ev	 #
.LBE90:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI110:
	ret	
.LFE8957:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_baseD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail18__waiter_pool_baseD1Ev
	.def	_ZNSt8__detail18__waiter_pool_baseD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_baseD1Ev
_ZNSt8__detail18__waiter_pool_baseD1Ev:
.LFB8959:
	.loc 8 188 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI111:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI112:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB91:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:188:     struct __waiter_pool_base
	.loc 8 188 12
	movq	16(%rbp), %rax	 # this, tmp84
	addq	$72, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt9__condvarD1Ev	 #
	movq	16(%rbp), %rax	 # this, tmp85
	addq	$8, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt5mutexD1Ev	 #
.LBE91:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI113:
	ret	
.LFE8959:
	.seh_endproc
	.section	.text$_ZNSt5mutexC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5mutexC1Ev
	.def	_ZNSt5mutexC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5mutexC1Ev
_ZNSt5mutexC1Ev:
.LFB8963:
	.loc 7 91 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI114:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI115:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB92:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:91:     mutex() noexcept = default;
	.loc 7 91 5
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12__mutex_baseC2Ev	 #
.LBE92:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI116:
	ret	
.LFE8963:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_baseC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail18__waiter_pool_baseC1Ev
	.def	_ZNSt8__detail18__waiter_pool_baseC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_baseC1Ev
_ZNSt8__detail18__waiter_pool_baseC1Ev:
.LFB8965:
	.loc 8 205 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI117:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI118:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB93:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:205:       __waiter_pool_base() = default;
	.loc 8 205 7
	movq	16(%rbp), %rax	 # this, tmp86
	movq	$0, (%rax)	 #, this_6(D)->_M_wait
	movq	16(%rbp), %rax	 # this, tmp87
	addq	$8, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5mutexC1Ev	 #
	movq	16(%rbp), %rax	 # this, tmp88
	movq	$0, 64(%rax)	 #, this_6(D)->_M_ver
	movq	16(%rbp), %rax	 # this, tmp89
	addq	$72, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt9__condvarC1Ev	 #
.LBE93:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI119:
	ret	
.LFE8965:
	.seh_endproc
	.globl	_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w
	.section	.data$_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w,"w"
	.linkonce same_size
	.align 8
_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w:
	.space 8
	.text
	.def	__tcf_0;	.scl	3;	.type	32;	.endef
	.seh_proc	__tcf_0
__tcf_0:
.LFB8966:
	.loc 8 243 36
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI120:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI121:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI122:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI123:
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 8 243 36
	leaq	2048+_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rbx	 #, _1
.L86:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 8 243 36 is_stmt 0 discriminator 4
	leaq	_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rax	 #, tmp83
	cmpq	%rax, %rbx	 # tmp83, _1
	je	.L84	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 8 243 36 discriminator 3
	addq	$-128, %rbx	 #, _1
	movq	%rbx, %rcx	 # _1,
	call	_ZNSt8__detail18__waiter_pool_baseD1Ev	 #
	jmp	.L86	 #
.L84:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 8 243 36
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI124:
	popq	%rbp	 #
.LCFI125:
	ret	
.LFE8966:
	.seh_endproc
	.section	.text$_ZNSt8__detail18__waiter_pool_base6_S_forEPKv,"x"
	.linkonce discard
	.globl	_ZNSt8__detail18__waiter_pool_base6_S_forEPKv
	.def	_ZNSt8__detail18__waiter_pool_base6_S_forEPKv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail18__waiter_pool_base6_S_forEPKv
_ZNSt8__detail18__waiter_pool_base6_S_forEPKv:
.LFB8953:
	.loc 8 240 7 is_stmt 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI126:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI127:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI128:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
.LCFI129:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI130:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __addr, __addr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:242: 	constexpr uintptr_t __ct = 16;
	.loc 8 242 22
	movq	$16, -8(%rbp)	 #, __ct
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 8 243 36
	movzbl	_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %eax	 #, _1
	testb	%al, %al	 # _1
	sete	%al	 #, retval.153_15
	testb	%al, %al	 # retval.153_15
	je	.L88	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 8 243 36 is_stmt 0 discriminator 1
	leaq	_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rax	 #, tmp98
	movq	%rax, %rcx	 # tmp98,
	call	__cxa_guard_acquire	 #
	testl	%eax, %eax	 # _2
	setne	%al	 #, retval.154_17
	testb	%al, %al	 # retval.154_17
	je	.L88	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 8 243 36 discriminator 2
	leaq	_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rax	 #, _19
	movl	$15, %ebx	 #, _9
	movq	%rax, %rsi	 # _19, _8
	jmp	.L89	 #
.L90:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 8 243 36 discriminator 5
	movq	%rsi, %rcx	 # _8,
	call	_ZNSt8__detail18__waiter_pool_baseC1Ev	 #
	subq	$1, %rbx	 #, _9
	subq	$-128, %rsi	 #, _8
.L89:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 8 243 36 discriminator 3
	testq	%rbx, %rbx	 # _9
	jns	.L90	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:243: 	static __waiter_pool_base __w[__ct];
	.loc 8 243 36 discriminator 6
	leaq	__tcf_0(%rip), %rax	 #, tmp99
	movq	%rax, %rcx	 # tmp99,
	call	atexit	 #
	leaq	_ZGVZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rax	 #, tmp100
	movq	%rax, %rcx	 # tmp100,
	call	__cxa_guard_release	 #
.L88:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:244: 	auto __key = (uintptr_t(__addr) >> 2) % __ct;
	.loc 8 244 34 is_stmt 1
	movq	32(%rbp), %rax	 # __addr, __addr.156_6
	shrq	$2, %rax	 #, _7
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:244: 	auto __key = (uintptr_t(__addr) >> 2) % __ct;
	.loc 8 244 7
	andl	$15, %eax	 #, tmp101
	movq	%rax, -16(%rbp)	 # tmp101, __key
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:245: 	return __w[__key];
	.loc 8 245 18
	movq	-16(%rbp), %rax	 # __key, tmp103
	salq	$7, %rax	 #, tmp103
	movq	%rax, %rdx	 # tmp103, tmp102
	leaq	_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w(%rip), %rax	 #, tmp104
	addq	%rdx, %rax	 # tmp102, _31
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:246:       }
	.loc 8 246 7
	addq	$48, %rsp	 #,
	popq	%rbx	 #
.LCFI131:
	popq	%rsi	 #
.LCFI132:
	popq	%rbp	 #
.LCFI133:
	ret	
.LFE8953:
	.seh_endproc
	.section	.text$_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy
	.def	_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy
_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy:
.LFB8967:
	.loc 8 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI134:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI135:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __addr, __addr
	movq	%r8, 32(%rbp)	 # __old, __old
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:258: 	__atomic_load(__addr, &__val, __ATOMIC_SEQ_CST);
	.loc 8 258 15
	movq	24(%rbp), %rax	 # __addr, tmp87
	movq	(%rax), %rax	 #, _1
	movq	%rax, -8(%rbp)	 # _1, __val
.LBB94:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:259: 	if (__val == __old)
	.loc 8 259 12
	movq	-8(%rbp), %rax	 # __val, __val.195_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:259: 	if (__val == __old)
	.loc 8 259 2
	cmpq	%rax, 32(%rbp)	 # __val.195_2, __old
	jne	.L94	 #,
.LBB95:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:261: 	    lock_guard<mutex> __l(_M_mtx);
	.loc 8 261 28
	movq	16(%rbp), %rax	 # this, tmp88
	leaq	8(%rax), %rdx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:261: 	    lock_guard<mutex> __l(_M_mtx);
	.loc 8 261 34
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt10lock_guardISt5mutexEC1ERS0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:262: 	    _M_cv.wait(_M_mtx);
	.loc 8 262 16
	movq	16(%rbp), %rax	 # this, tmp90
	addq	$72, %rax	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:262: 	    _M_cv.wait(_M_mtx);
	.loc 8 262 17
	movq	16(%rbp), %rdx	 # this, tmp91
	addq	$8, %rdx	 #, _5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:262: 	    _M_cv.wait(_M_mtx);
	.loc 8 262 16
	movq	%rax, %rcx	 # _4,
	call	_ZNSt9__condvar4waitERSt5mutex	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:263: 	  }
	.loc 8 263 4
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNSt10lock_guardISt5mutexED1Ev	 #
.L94:
.LBE95:
.LBE94:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:265:       }
	.loc 8 265 7
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI136:
	ret	
.LFE8967:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA8967:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE8967-.LLSDACSB8967
.LLSDACSB8967:
.LLSDACSE8967:
	.section	.text$_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZStorSt12memory_orderSt23__memory_order_modifier,"x"
	.linkonce discard
	.globl	_ZStorSt12memory_orderSt23__memory_order_modifier
	.def	_ZStorSt12memory_orderSt23__memory_order_modifier;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStorSt12memory_orderSt23__memory_order_modifier
_ZStorSt12memory_orderSt23__memory_order_modifier:
.LFB8987:
	.file 9 "C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h"
	.loc 9 99 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI137:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI138:
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # __m, __m
	movl	%edx, 24(%rbp)	 # __mod, __mod
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:100:     return memory_order(int(__m) | int(__mod));
	.loc 9 100 36
	movl	24(%rbp), %eax	 # __mod, __mod.136_1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:100:     return memory_order(int(__m) | int(__mod));
	.loc 9 100 46
	orl	16(%rbp), %eax	 # __m, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:101:   }
	.loc 9 101 3
	popq	%rbp	 #
.LCFI139:
	ret	
.LFE8987:
	.seh_endproc
	.section	.text$_ZStanSt12memory_orderSt23__memory_order_modifier,"x"
	.linkonce discard
	.globl	_ZStanSt12memory_orderSt23__memory_order_modifier
	.def	_ZStanSt12memory_orderSt23__memory_order_modifier;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStanSt12memory_orderSt23__memory_order_modifier
_ZStanSt12memory_orderSt23__memory_order_modifier:
.LFB8988:
	.loc 9 105 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI140:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI141:
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # __m, __m
	movl	%edx, 24(%rbp)	 # __mod, __mod
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:106:     return memory_order(int(__m) & int(__mod));
	.loc 9 106 36
	movl	24(%rbp), %eax	 # __mod, __mod.130_1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:106:     return memory_order(int(__m) & int(__mod));
	.loc 9 106 46
	andl	16(%rbp), %eax	 # __m, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:107:   }
	.loc 9 107 3
	popq	%rbp	 #
.LCFI142:
	ret	
.LFE8988:
	.seh_endproc
	.section	.text$_ZSt24__cmpexch_failure_order2St12memory_order,"x"
	.linkonce discard
	.globl	_ZSt24__cmpexch_failure_order2St12memory_order
	.def	_ZSt24__cmpexch_failure_order2St12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt24__cmpexch_failure_order2St12memory_order
_ZSt24__cmpexch_failure_order2St12memory_order:
.LFB8989:
	.loc 9 112 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI143:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI144:
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 9 113 16
	movl	16(%rbp), %eax	 # __m, __m.132_1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 9 113 40
	cmpl	$4, %eax	 #, __m.132_1
	je	.L100	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:114:       : __m == memory_order_release ? memory_order_relaxed : __m;
	.loc 9 114 13 discriminator 1
	movl	16(%rbp), %eax	 # __m, __m.134_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 9 113 40 discriminator 1
	cmpl	$3, %eax	 #, __m.134_2
	je	.L101	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:114:       : __m == memory_order_release ? memory_order_relaxed : __m;
	.loc 9 114 62 discriminator 3
	leaq	16(%rbp), %rax	 #, __m.135_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 9 113 40 discriminator 3
	movl	(%rax), %eax	 # MEM[(const memory_order &)__m.135_3], iftmp.133_5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:114:       : __m == memory_order_release ? memory_order_relaxed : __m;
	.loc 9 114 62 discriminator 3
	jmp	.L104	 #
.L101:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 9 113 40 discriminator 4
	movl	$0, %eax	 #, iftmp.133_5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:114:       : __m == memory_order_release ? memory_order_relaxed : __m;
	.loc 9 114 62 discriminator 4
	jmp	.L104	 #
.L100:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:113:     return __m == memory_order_acq_rel ? memory_order_acquire
	.loc 9 113 40 discriminator 2
	movl	$2, %eax	 #, iftmp.133_5
.L104:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:115:   }
	.loc 9 115 3 discriminator 1
	popq	%rbp	 #
.LCFI145:
	ret	
.LFE8989:
	.seh_endproc
	.section	.text$_ZSt23__cmpexch_failure_orderSt12memory_order,"x"
	.linkonce discard
	.globl	_ZSt23__cmpexch_failure_orderSt12memory_order
	.def	_ZSt23__cmpexch_failure_orderSt12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt23__cmpexch_failure_orderSt12memory_order
_ZSt23__cmpexch_failure_orderSt12memory_order:
.LFB8990:
	.loc 9 119 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI146:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI147:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI148:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI149:
	.seh_endprologue
	movl	%ecx, 32(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:121:       | __memory_order_modifier(__m & __memory_order_modifier_mask));
	.loc 9 121 37
	movl	32(%rbp), %eax	 # __m, tmp88
	movl	$-65536, %edx	 #,
	movl	%eax, %ecx	 # tmp88,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:121:       | __memory_order_modifier(__m & __memory_order_modifier_mask));
	.loc 9 121 7
	movl	%eax, %ebx	 # _1, _2
	movl	32(%rbp), %eax	 # __m, tmp89
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp89,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, %ecx	 # _3,
	call	_ZSt24__cmpexch_failure_order2St12memory_order	 #
	movl	%ebx, %edx	 # _2,
	movl	%eax, %ecx	 # _4,
	call	_ZStorSt12memory_orderSt23__memory_order_modifier	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:122:   }
	.loc 9 122 3
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI150:
	popq	%rbp	 #
.LCFI151:
	ret	
.LFE8990:
	.seh_endproc
	.section	.text$_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order,"x"
	.linkonce discard
	.globl	_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order
	.def	_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order
_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order:
.LFB8991:
	.loc 9 126 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI152:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI153:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:127:     return (__m & __memory_order_mask) != memory_order_release
	.loc 9 127 17
	movl	16(%rbp), %eax	 # __m, tmp86
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp86,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:128: 	&& (__m & __memory_order_mask) != memory_order_acq_rel;
	.loc 9 128 2
	cmpl	$3, %eax	 #, _1
	je	.L108	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:128: 	&& (__m & __memory_order_mask) != memory_order_acq_rel;
	.loc 9 128 10 discriminator 1
	movl	16(%rbp), %eax	 # __m, tmp87
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp87,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:128: 	&& (__m & __memory_order_mask) != memory_order_acq_rel;
	.loc 9 128 2 discriminator 1
	cmpl	$4, %eax	 #, _2
	je	.L108	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:128: 	&& (__m & __memory_order_mask) != memory_order_acq_rel;
	.loc 9 128 2 is_stmt 0 discriminator 3
	movl	$1, %eax	 #, iftmp.139_3
	jmp	.L109	 #
.L108:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:128: 	&& (__m & __memory_order_mask) != memory_order_acq_rel;
	.loc 9 128 2 discriminator 4
	movl	$0, %eax	 #, iftmp.139_3
.L109:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:129:   }
	.loc 9 129 3 is_stmt 1 discriminator 6
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI154:
	ret	
.LFE8991:
	.seh_endproc
	.section .rdata,"dr"
_ZN6__pstl9execution2v1L3seqE:
	.space 1
_ZN6__pstl9execution2v1L3parE:
	.space 1
_ZN6__pstl9execution2v1L9par_unseqE:
	.space 1
_ZN6__pstl9execution2v1L5unseqE:
	.space 1
	.section	.text$_ZNSt6atomicIbEaSEb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6atomicIbEaSEb
	.def	_ZNSt6atomicIbEaSEb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6atomicIbEaSEb
_ZNSt6atomicIbEaSEb:
.LFB9402:
	.file 10 "C:/msys64/mingw64/include/c++/12.2.0/atomic"
	.loc 10 79 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI155:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI156:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __i, tmp86
	movb	%al, 24(%rbp)	 # tmp87, __i
 # C:/msys64/mingw64/include/c++/12.2.0/atomic:80:     { return _M_base.operator=(__i); }
	.loc 10 80 31
	movq	16(%rbp), %rax	 # this, _1
	movzbl	24(%rbp), %edx	 # __i, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt13__atomic_baseIbEaSEb	 #
 # C:/msys64/mingw64/include/c++/12.2.0/atomic:80:     { return _M_base.operator=(__i); }
	.loc 10 80 38
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI157:
	ret	
.LFE9402:
	.seh_endproc
	.section	.text$_ZNKSt6atomicIbEcvbEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6atomicIbEcvbEv
	.def	_ZNKSt6atomicIbEcvbEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6atomicIbEcvbEv
_ZNKSt6atomicIbEcvbEv:
.LFB9404:
	.loc 10 86 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI158:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI159:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/atomic:87:     { return _M_base.load(); }
	.loc 10 87 26
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, -8(%rbp)	 # _1, this
	movl	$5, -12(%rbp)	 #, __m
.LBB96:
.LBB97:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:484: 	  = __m & __memory_order_mask;
	.loc 9 484 10
	movl	-12(%rbp), %eax	 # __m, tmp91
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp91,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, -16(%rbp)	 # tmp92, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:485: 	__glibcxx_assert(__b != memory_order_release);
	.loc 9 485 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _8
	je	.L114	 #,
	cmpl	$3, -16(%rbp)	 #, __b
	jne	.L114	 #,
	movl	$1, %eax	 #, iftmp.178_9
	jmp	.L115	 #
.L114:
	movl	$0, %eax	 #, iftmp.178_9
.L115:
	testb	%al, %al	 # iftmp.178_9
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:486: 	__glibcxx_assert(__b != memory_order_acq_rel);
	.loc 9 486 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _13
	je	.L117	 #,
	cmpl	$4, -16(%rbp)	 #, __b
	jne	.L117	 #,
	movl	$1, %eax	 #, iftmp.180_14
	jmp	.L118	 #
.L117:
	movl	$0, %eax	 #, iftmp.180_14
.L118:
	testb	%al, %al	 # iftmp.180_14
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 9 488 25
	movq	-8(%rbp), %rax	 # this, _18
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 9 488 24
	movzbl	(%rax), %eax	 #* _18, _19
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 9 488 40
	testb	%al, %al	 # _19
	setne	%al	 #, D.237665
.LBE97:
.LBE96:
 # C:/msys64/mingw64/include/c++/12.2.0/atomic:87:     { return _M_base.load(); }
	.loc 10 87 30
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI160:
	ret	
.LFE9404:
	.seh_endproc
	.section	.text$_ZNSt6thread2idC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6thread2idC1Ev
	.def	_ZNSt6thread2idC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6thread2idC1Ev
_ZNSt6thread2idC1Ev:
.LFB9603:
	.file 11 "C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h"
	.loc 11 85 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI161:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI162:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB98:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:85:       id() noexcept : _M_thread() { }
	.loc 11 85 23
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_thread
.LBE98:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:85:       id() noexcept : _M_thread() { }
	.loc 11 85 37
	nop	
	popq	%rbp	 #
.LCFI163:
	ret	
.LFE9603:
	.seh_endproc
	.section	.text$_ZNSt6thread2idC1Ey,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6thread2idC1Ey
	.def	_ZNSt6thread2idC1Ey;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6thread2idC1Ey
_ZNSt6thread2idC1Ey:
.LFB9606:
	.loc 11 88 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI164:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI165:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __id, __id
.LBB99:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:88:       id(native_handle_type __id) : _M_thread(__id) { }
	.loc 11 88 37
	movq	16(%rbp), %rax	 # this, tmp82
	movq	24(%rbp), %rdx	 # __id, tmp83
	movq	%rdx, (%rax)	 # tmp83, this_2(D)->_M_thread
.LBE99:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:88:       id(native_handle_type __id) : _M_thread(__id) { }
	.loc 11 88 55
	nop	
	popq	%rbp	 #
.LCFI166:
	ret	
.LFE9606:
	.seh_endproc
	.section	.text$_ZNSt6threadD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6threadD1Ev
	.def	_ZNSt6threadD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6threadD1Ev
_ZNSt6threadD1Ev:
.LFB9610:
	.loc 11 148 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI167:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI168:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB100:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:150:       if (joinable())
	.loc 11 150 19
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNKSt6thread8joinableEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:150:       if (joinable())
	.loc 11 150 7
	testb	%al, %al	 # retval.176_4
	je	.L126	 #,
.LBB101:
.LBB102:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/c++config.h:312:     terminate();
	.loc 1 312 14
	call	_ZSt9terminatev	 #
.L126:
.LBE102:
.LBE101:
.LBE100:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:152:     }
	.loc 11 152 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI169:
	ret	
.LFE9610:
	.seh_endproc
	.section	.text$_ZNSt6threadaSEOS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6threadaSEOS_
	.def	_ZNSt6threadaSEOS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6threadaSEOS_
_ZNSt6threadaSEOS_:
.LFB9614:
	.loc 11 161 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI170:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI171:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:163:       if (joinable())
	.loc 11 163 19
	movq	16(%rbp), %rax	 # this, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNKSt6thread8joinableEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:163:       if (joinable())
	.loc 11 163 7
	testb	%al, %al	 # retval.175_4
	je	.L128	 #,
.LBB103:
.LBB104:
 # C:/msys64/mingw64/include/c++/12.2.0/x86_64-w64-mingw32/bits/c++config.h:312:     terminate();
	.loc 1 312 14
	call	_ZSt9terminatev	 #
.L128:
.LBE104:
.LBE103:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:165:       swap(__t);
	.loc 11 165 11
	movq	24(%rbp), %rdx	 # __t, tmp86
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt6thread4swapERS_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:166:       return *this;
	.loc 11 166 15
	movq	16(%rbp), %rax	 # this, _7
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:167:     }
	.loc 11 167 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI172:
	ret	
.LFE9614:
	.seh_endproc
	.section	.text$_ZNSt6thread4swapERS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6thread4swapERS_
	.def	_ZNSt6thread4swapERS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6thread4swapERS_
_ZNSt6thread4swapERS_:
.LFB9615:
	.loc 11 170 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI173:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI174:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:171:     { std::swap(_M_id, __t._M_id); }
	.loc 11 171 28
	movq	24(%rbp), %rdx	 # __t, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:171:     { std::swap(_M_id, __t._M_id); }
	.loc 11 171 17
	movq	16(%rbp), %rax	 # this, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:171:     { std::swap(_M_id, __t._M_id); }
	.loc 11 171 16
	movq	%rax, %rcx	 # _2,
	call	_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:171:     { std::swap(_M_id, __t._M_id); }
	.loc 11 171 36
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI175:
	ret	
.LFE9615:
	.seh_endproc
	.section	.text$_ZNKSt6thread8joinableEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6thread8joinableEv
	.def	_ZNKSt6thread8joinableEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6thread8joinableEv
_ZNKSt6thread8joinableEv:
.LFB9617:
	.loc 11 174 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI176:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI177:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:175:     { return !(_M_id == id()); }
	.loc 11 175 22
	leaq	-8(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt6thread2idC1Ev	 #
	movq	-8(%rbp), %rdx	 # D.170630, tmp86
	movq	16(%rbp), %rax	 # this, tmp87
	movq	(%rax), %rax	 # this_4(D)->_M_id, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSteqNSt6thread2idES0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:175:     { return !(_M_id == id()); }
	.loc 11 175 29
	xorl	$1, %eax	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:175:     { return !(_M_id == id()); }
	.loc 11 175 32
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI178:
	ret	
.LFE9617:
	.seh_endproc
	.section	.text$_ZNKSt6thread6get_idEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6thread6get_idEv
	.def	_ZNKSt6thread6get_idEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6thread6get_idEv
_ZNKSt6thread6get_idEv:
.LFB9618:
	.loc 11 184 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI179:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI180:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:185:     { return _M_id; }
	.loc 11 185 14
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->_M_id, D.236858
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:185:     { return _M_id; }
	.loc 11 185 21
	popq	%rbp	 #
.LCFI181:
	ret	
.LFE9618:
	.seh_endproc
	.section	.text$_ZSteqNSt6thread2idES0_,"x"
	.linkonce discard
	.globl	_ZSteqNSt6thread2idES0_
	.def	_ZSteqNSt6thread2idES0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSteqNSt6thread2idES0_
_ZSteqNSt6thread2idES0_:
.LFB9625:
	.loc 11 281 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI182:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI183:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __x, __x
	movq	%rdx, 24(%rbp)	 # __y, __y
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:286:     return __x._M_thread == __y._M_thread;
	.loc 11 286 16
	movq	16(%rbp), %rdx	 # __x._M_thread, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:286:     return __x._M_thread == __y._M_thread;
	.loc 11 286 33
	movq	24(%rbp), %rax	 # __y._M_thread, _2
	cmpq	%rax, %rdx	 # _2, _1
	sete	%al	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:287:   }
	.loc 11 287 3
	popq	%rbp	 #
.LCFI184:
	ret	
.LFE9625:
	.seh_endproc
	.section	.text$_ZNKSt4hashINSt6thread2idEEclERKS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt4hashINSt6thread2idEEclERKS1_
	.def	_ZNKSt4hashINSt6thread2idEEclERKS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt4hashINSt6thread2idEEclERKS1_
_ZNKSt4hashINSt6thread2idEEclERKS1_:
.LFB9626:
	.loc 11 298 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI185:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI186:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __id, __id
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:299:       { return std::_Hash_impl::hash(__id._M_thread); }
	.loc 11 299 43
	movq	24(%rbp), %rax	 # __id, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:299:       { return std::_Hash_impl::hash(__id._M_thread); }
	.loc 11 299 37
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Hash_impl4hashIyEEyRKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:299:       { return std::_Hash_impl::hash(__id._M_thread); }
	.loc 11 299 55
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI187:
	ret	
.LFE9626:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA9626:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE9626-.LLSDACSB9626
.LLSDACSB9626:
.LLSDACSE9626:
	.section	.text$_ZNKSt4hashINSt6thread2idEEclERKS1_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt11this_thread6get_idEv,"x"
	.linkonce discard
	.globl	_ZNSt11this_thread6get_idEv
	.def	_ZNSt11this_thread6get_idEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11this_thread6get_idEv
_ZNSt11this_thread6get_idEv:
.LFB9627:
	.loc 11 307 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI188:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI189:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:313:       return thread::id(__gthread_self());
	.loc 11 313 22
	call	_ZL14__gthread_selfv	 #
	movq	%rax, %rdx	 #, _1
	leaq	-8(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt6thread2idC1Ey	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:313:       return thread::id(__gthread_self());
	.loc 11 313 41
	movq	-8(%rbp), %rax	 # D.170680, D.236165
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:315:     }
	.loc 11 315 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI190:
	ret	
.LFE9627:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA9627:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE9627-.LLSDACSB9627
.LLSDACSB9627:
.LLSDACSE9627:
	.section	.text$_ZNSt11this_thread6get_idEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv
	.def	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv
_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv:
.LFB9701:
	.file 12 "C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h"
	.loc 12 521 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI191:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI192:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 12 522 11
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->__r, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 12 522 16
	popq	%rbp	 #
.LCFI193:
	ret	
.LFE9701:
	.seh_endproc
	.section	.text$_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE
	.def	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE
_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE:
.LFB9700:
	.loc 12 770 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI194:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI195:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI196:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI197:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 9
	movq	32(%rbp), %rax	 # __lhs, tmp86
	movq	(%rax), %rax	 # *__lhs_3(D), tmp87
	movq	%rax, -16(%rbp)	 # tmp87, D.173156
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 26
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rbx	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 33
	movq	40(%rbp), %rax	 # __rhs, tmp89
	movq	(%rax), %rax	 # *__rhs_7(D), tmp90
	movq	%rax, -8(%rbp)	 # tmp90, D.173157
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 50
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51
	cmpq	%rax, %rbx	 # _10, _6
	je	.L144	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 is_stmt 0 discriminator 1
	cmpq	%rax, %rbx	 # _10, _6
	jge	.L145	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 discriminator 3
	movl	$-1, %eax	 #, D.236661
	jmp	.L147	 #
.L145:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 discriminator 4
	movl	$1, %eax	 #, D.236661
	jmp	.L147	 #
.L144:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 discriminator 2
	movl	$0, %eax	 #, D.236661
.L147:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:776:       }
	.loc 12 776 7 is_stmt 1 discriminator 6
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI198:
	popq	%rbp	 #
.LCFI199:
	ret	
.LFE9700:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv,"x"
	.linkonce discard
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv:
.LFB9703:
	.loc 12 607 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI200:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI201:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 12 608 46
	call	_ZNSt6chrono15duration_valuesIxE4zeroEv	 #
	movq	%rax, -8(%rbp)	 # _1, D.173282
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 12 608 11
	leaq	-8(%rbp), %rdx	 #, tmp85
	leaq	-16(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 12 608 48
	movq	-16(%rbp), %rax	 # D.173283, D.236655
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 12 608 51
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI202:
	ret	
.LFE9703:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_:
.LFB9707:
	.loc 12 505 23
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI203:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI204:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __rep, __rep
.LBB105:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 10
	movq	24(%rbp), %rax	 # __rep, tmp83
	movq	(%rax), %rdx	 # *__rep_5(D), _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 6
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->__r
.LBE105:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 37
	nop	
	popq	%rbp	 #
.LCFI205:
	ret	
.LFE9707:
	.seh_endproc
	.section	.text$_ZNSt6chrono15duration_valuesIxE4zeroEv,"x"
	.linkonce discard
	.globl	_ZNSt6chrono15duration_valuesIxE4zeroEv
	.def	_ZNSt6chrono15duration_valuesIxE4zeroEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono15duration_valuesIxE4zeroEv
_ZNSt6chrono15duration_valuesIxE4zeroEv:
.LFB9708:
	.loc 12 416 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI206:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI207:
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:417: 	{ return _Rep(0); }
	.loc 12 417 17
	movl	$0, %eax	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:417: 	{ return _Rep(0); }
	.loc 12 417 20
	popq	%rbp	 #
.LCFI208:
	ret	
.LFE9708:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_
_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_:
.LFB9727:
	.loc 12 505 23
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI209:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI210:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __rep, __rep
.LBB106:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 10
	movq	24(%rbp), %rax	 # __rep, tmp83
	movq	(%rax), %rdx	 # *__rep_5(D), _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 6
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->__r
.LBE106:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 37
	nop	
	popq	%rbp	 #
.LCFI211:
	ret	
.LFE9727:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE:
.LFB9747:
	.loc 12 513 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI212:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI213:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __d, __d
.LBB107:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 33
	movq	24(%rbp), %rax	 # __d, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -8(%rbp)	 # tmp85, D.176570
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 44
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 6
	movq	16(%rbp), %rdx	 # this, tmp87
	movq	%rax, (%rdx)	 # _1, this_3(D)->__r
.LBE107:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 50
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI214:
	ret	
.LFE9747:
	.seh_endproc
	.section	.text$_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE
	.def	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE
_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE:
.LFB9743:
	.loc 12 770 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI215:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI216:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI217:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI218:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 9
	movq	32(%rbp), %rax	 # __lhs, tmp86
	movq	(%rax), %rax	 # *__lhs_3(D), tmp87
	movq	%rax, -16(%rbp)	 # tmp87, D.176461
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 26
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rbx	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 33
	movq	40(%rbp), %rdx	 # __rhs, tmp89
	leaq	-8(%rbp), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 50
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51
	cmpq	%rax, %rbx	 # _10, _6
	je	.L156	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 is_stmt 0 discriminator 3
	cmpq	%rax, %rbx	 # _10, _6
	jge	.L157	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 discriminator 5
	movl	$-1, %eax	 #, D.236602
	jmp	.L159	 #
.L157:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 discriminator 6
	movl	$1, %eax	 #, D.236602
	jmp	.L159	 #
.L156:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 discriminator 4
	movl	$0, %eax	 #, D.236602
.L159:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:776:       }
	.loc 12 776 7 is_stmt 1 discriminator 8
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI219:
	popq	%rbp	 #
.LCFI220:
	ret	
.LFE9743:
	.seh_endproc
	.section	.text$_ZNSt6threadC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6threadC1Ev
	.def	_ZNSt6threadC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6threadC1Ev
_ZNSt6threadC1Ev:
.LFB9886:
	.loc 11 120 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI221:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI222:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB108:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:120:     thread() noexcept = default;
	.loc 11 120 5
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6thread2idC1Ev	 #
.LBE108:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI223:
	ret	
.LFE9886:
	.seh_endproc
	.section	.text$_ZN17ID2D1RenderTarget21CreateSolidColorBrushERK14_D3DCOLORVALUEPP20ID2D1SolidColorBrush,"x"
	.linkonce discard
	.align 2
	.globl	_ZN17ID2D1RenderTarget21CreateSolidColorBrushERK14_D3DCOLORVALUEPP20ID2D1SolidColorBrush
	.def	_ZN17ID2D1RenderTarget21CreateSolidColorBrushERK14_D3DCOLORVALUEPP20ID2D1SolidColorBrush;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN17ID2D1RenderTarget21CreateSolidColorBrushERK14_D3DCOLORVALUEPP20ID2D1SolidColorBrush
_ZN17ID2D1RenderTarget21CreateSolidColorBrushERK14_D3DCOLORVALUEPP20ID2D1SolidColorBrush:
.LFB10616:
	.file 13 "C:/msys64/mingw64/include/d2d1.h"
	.loc 13 815 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI224:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI225:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # color, color
	movq	%r8, 32(%rbp)	 # solidColorBrush, solidColorBrush
 # C:/msys64/mingw64/include/d2d1.h:816:         return CreateSolidColorBrush(&color, NULL, solidColorBrush);
	.loc 13 816 37
	movq	16(%rbp), %rax	 # this, tmp87
	movq	(%rax), %rax	 # this_5(D)->D.200640.D.199868._vptr.IUnknown, _1
	addq	$64, %rax	 #, _2
	movq	(%rax), %r10	 # *_2, _3
	movq	32(%rbp), %rcx	 # solidColorBrush, tmp88
	movq	24(%rbp), %rdx	 # color, tmp89
	movq	16(%rbp), %rax	 # this, tmp90
	movq	%rcx, %r9	 # tmp88,
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp90,
	call	*%r10	 # _3
.LVL1:
 # C:/msys64/mingw64/include/d2d1.h:817:     }
	.loc 13 817 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI226:
	ret	
.LFE10616:
	.seh_endproc
	.section	.text$_ZN17ID2D1RenderTarget28CreateCompatibleRenderTargetEPP23ID2D1BitmapRenderTarget,"x"
	.linkonce discard
	.align 2
	.globl	_ZN17ID2D1RenderTarget28CreateCompatibleRenderTargetEPP23ID2D1BitmapRenderTarget
	.def	_ZN17ID2D1RenderTarget28CreateCompatibleRenderTargetEPP23ID2D1BitmapRenderTarget;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN17ID2D1RenderTarget28CreateCompatibleRenderTargetEPP23ID2D1BitmapRenderTarget
_ZN17ID2D1RenderTarget28CreateCompatibleRenderTargetEPP23ID2D1BitmapRenderTarget:
.LFB10623:
	.loc 13 843 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI227:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI228:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # bitmapRenderTarget, bitmapRenderTarget
 # C:/msys64/mingw64/include/d2d1.h:844:         return CreateCompatibleRenderTarget(NULL, NULL, NULL, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_NONE, bitmapRenderTarget);
	.loc 13 844 44
	movq	16(%rbp), %rax	 # this, tmp87
	movq	(%rax), %rax	 # this_5(D)->D.200640.D.199868._vptr.IUnknown, _1
	addq	$96, %rax	 #, _2
	movq	(%rax), %r10	 # *_2, _3
	movq	16(%rbp), %rax	 # this, tmp88
	movq	24(%rbp), %rdx	 # bitmapRenderTarget, tmp89
	movq	%rdx, 40(%rsp)	 # tmp89,
	movl	$0, 32(%rsp)	 #,
	movl	$0, %r9d	 #,
	movl	$0, %r8d	 #,
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp88,
	call	*%r10	 # _3
.LVL2:
 # C:/msys64/mingw64/include/d2d1.h:845:     }
	.loc 13 845 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI229:
	ret	
.LFE10623:
	.seh_endproc
	.section	.text$_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_
	.def	_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_
_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_:
.LFB10637:
	.loc 13 899 10
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI230:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI231:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # bitmap, bitmap
	movq	%r8, 32(%rbp)	 # destinationRectangle, destinationRectangle
	movss	%xmm3, 40(%rbp)	 # opacity, opacity
 # C:/msys64/mingw64/include/d2d1.h:900:         DrawBitmap(bitmap, &destinationRectangle, opacity, interpolationMode, sourceRectangle);
	.loc 13 900 19
	movq	16(%rbp), %rax	 # this, tmp85
	movq	(%rax), %rax	 # this_5(D)->D.200640.D.199868._vptr.IUnknown, _1
	addq	$208, %rax	 #, _2
	movq	(%rax), %r9	 # *_2, _3
	movss	40(%rbp), %xmm0	 # opacity, tmp86
	movq	32(%rbp), %r8	 # destinationRectangle, tmp87
	movq	24(%rbp), %rdx	 # bitmap, tmp88
	movq	16(%rbp), %rax	 # this, tmp89
	movq	56(%rbp), %rcx	 # sourceRectangle, tmp90
	movq	%rcx, 40(%rsp)	 # tmp90,
	movl	48(%rbp), %ecx	 # interpolationMode, tmp91
	movl	%ecx, 32(%rsp)	 # tmp91,
	movaps	%xmm0, %xmm3	 # tmp86,
	movq	%rax, %rcx	 # tmp89,
	call	*%r9	 # _3
.LVL3:
 # C:/msys64/mingw64/include/d2d1.h:901:     }
	.loc 13 901 5
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI232:
	ret	
.LFE10637:
	.seh_endproc
	.section	.text$_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE,"x"
	.linkonce discard
	.align 2
	.globl	_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE
	.def	_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE
_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE:
.LFB10642:
	.loc 13 919 10
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI233:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI234:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # clearColor, clearColor
 # C:/msys64/mingw64/include/d2d1.h:920:         return Clear(&clearColor);
	.loc 13 920 21
	movq	16(%rbp), %rax	 # this, tmp85
	movq	(%rax), %rax	 # this_5(D)->D.200640.D.199868._vptr.IUnknown, _1
	addq	$376, %rax	 #, _2
	movq	(%rax), %r8	 # *_2, _3
	movq	24(%rbp), %rdx	 # clearColor, tmp86
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	*%r8	 # _3
.LVL4:
 # C:/msys64/mingw64/include/d2d1.h:920:         return Clear(&clearColor);
	.loc 13 920 33
	nop	
 # C:/msys64/mingw64/include/d2d1.h:921:     }
	.loc 13 921 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI235:
	ret	
.LFE10642:
	.seh_endproc
	.section	.text$_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget,"x"
	.linkonce discard
	.align 2
	.globl	_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget
	.def	_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget
_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget:
.LFB10691:
	.loc 13 1610 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI236:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI237:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # renderTargetProperties, renderTargetProperties
	movq	%r8, 32(%rbp)	 # hwndRenderTargetProperties, hwndRenderTargetProperties
	movq	%r9, 40(%rbp)	 # hwndRenderTarget, hwndRenderTarget
 # C:/msys64/mingw64/include/d2d1.h:1611:         return CreateHwndRenderTarget(&renderTargetProperties, &hwndRenderTargetProperties, hwndRenderTarget);
	.loc 13 1611 38
	movq	16(%rbp), %rax	 # this, tmp87
	movq	(%rax), %rax	 # this_5(D)->D.201619._vptr.IUnknown, _1
	addq	$112, %rax	 #, _2
	movq	(%rax), %r10	 # *_2, _3
	movq	40(%rbp), %r8	 # hwndRenderTarget, tmp88
	movq	32(%rbp), %rcx	 # hwndRenderTargetProperties, tmp89
	movq	24(%rbp), %rdx	 # renderTargetProperties, tmp90
	movq	16(%rbp), %rax	 # this, tmp91
	movq	%r8, %r9	 # tmp88,
	movq	%rcx, %r8	 # tmp89,
	movq	%rax, %rcx	 # tmp91,
	call	*%r10	 # _3
.LVL5:
 # C:/msys64/mingw64/include/d2d1.h:1612:     }
	.loc 13 1612 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI238:
	ret	
.LFE10691:
	.seh_endproc
	.section	.text$_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U,"x"
	.linkonce discard
	.align 2
	.globl	_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U
	.def	_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U
_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U:
.LFB10696:
	.loc 13 1843 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI239:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI240:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # pixelSize, pixelSize
 # C:/msys64/mingw64/include/d2d1.h:1844:         return Resize(&pixelSize);
	.loc 13 1844 22
	movq	16(%rbp), %rax	 # this, tmp87
	movq	(%rax), %rax	 # this_5(D)->D.201843.D.200640.D.199868._vptr.IUnknown, _1
	addq	$464, %rax	 #, _2
	movq	(%rax), %r8	 # *_2, _3
	movq	24(%rbp), %rdx	 # pixelSize, tmp88
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	*%r8	 # _3
.LVL6:
 # C:/msys64/mingw64/include/d2d1.h:1845:     }
	.loc 13 1845 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI241:
	ret	
.LFE10696:
	.seh_endproc
	.globl	_ZN16__mingw_uuidof_sI12ID2D1FactoryE11__uuid_instE
	.section	.rdata$_ZN16__mingw_uuidof_sI12ID2D1FactoryE11__uuid_instE,"dr"
	.linkonce same_size
	.align 16
_ZN16__mingw_uuidof_sI12ID2D1FactoryE11__uuid_instE:
 # Data1:
	.long	102048327
 # Data2:
	.word	28496
 # Data3:
	.word	18010
 # Data4:
	.ascii "\222E\21\213\375;`\7"
	.section	.text$_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv,"x"
	.linkonce discard
	.globl	_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv
	.def	_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv
_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv:
.LFB10722:
	.loc 13 2452 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI242:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI243:
	.seh_endprologue
 # C:/msys64/mingw64/include/d2d1.h:2452: __CRT_UUID_DECL(ID2D1Factory, 0x06152247,0x6f50,0x465a,0x92,0x45,0x11,0x8b,0xfd,0x3b,0x60,0x07)
	.loc 13 2452 1
	leaq	_ZN16__mingw_uuidof_sI12ID2D1FactoryE11__uuid_instE(%rip), %rax	 #, _1
	popq	%rbp	 #
.LCFI244:
	ret	
.LFE10722:
	.seh_endproc
	.section	.text$_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv,"x"
	.linkonce discard
	.globl	_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv
	.def	_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv
_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv:
.LFB10823:
	.loc 13 2515 90
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI245:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI246:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # factoryType, factoryType
	movq	%rdx, 24(%rbp)	 # riid, riid
	movq	%r8, 32(%rbp)	 # ppv, ppv
 # C:/msys64/mingw64/include/d2d1.h:2516:     return D2D1CreateFactory(factoryType, riid, NULL, ppv);
	.loc 13 2516 29
	movq	32(%rbp), %rcx	 # ppv, tmp84
	movq	24(%rbp), %rdx	 # riid, tmp85
	movl	16(%rbp), %eax	 # factoryType, tmp86
	movq	%rcx, %r9	 # tmp84,
	movl	$0, %r8d	 #,
	movl	%eax, %ecx	 # tmp86,
	call	D2D1CreateFactory	 #
 # C:/msys64/mingw64/include/d2d1.h:2517: }
	.loc 13 2517 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI247:
	ret	
.LFE10823:
	.seh_endproc
	.globl	Factory
	.bss
	.align 8
Factory:
	.space 8
	.globl	RenderTarget
	.align 8
RenderTarget:
	.space 8
	.globl	BitmapRT
	.align 8
BitmapRT:
	.space 8
	.globl	Bitmap
	.align 8
Bitmap:
	.space 8
	.globl	brushPool
	.align 8
brushPool:
	.space 8
	.globl	memory
	.align 8
memory:
	.space 8
	.section	.text$_ZN5Vec3DC1Efff,"x"
	.linkonce discard
	.align 2
	.globl	_ZN5Vec3DC1Efff
	.def	_ZN5Vec3DC1Efff;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5Vec3DC1Efff
_ZN5Vec3DC1Efff:
.LFB10889:
	.file 14 "src/main.cpp"
	.loc 14 57 29
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI248:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI249:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movss	%xmm1, 24(%rbp)	 # _x, _x
	movss	%xmm2, 32(%rbp)	 # _y, _y
	movss	%xmm3, 40(%rbp)	 # _z, _z
.LBB109:
 # src\main.cpp:57: 	float x; float y; float z; Vec3D(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}
	.loc 14 57 67
	movq	16(%rbp), %rax	 # this, tmp82
	movss	24(%rbp), %xmm0	 # _x, tmp83
	movss	%xmm0, (%rax)	 # tmp83, this_2(D)->x
 # src\main.cpp:57: 	float x; float y; float z; Vec3D(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}
	.loc 14 57 74
	movq	16(%rbp), %rax	 # this, tmp84
	movss	32(%rbp), %xmm0	 # _y, tmp85
	movss	%xmm0, 4(%rax)	 # tmp85, this_2(D)->y
 # src\main.cpp:57: 	float x; float y; float z; Vec3D(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}
	.loc 14 57 81
	movq	16(%rbp), %rax	 # this, tmp86
	movss	40(%rbp), %xmm0	 # _z, tmp87
	movss	%xmm0, 8(%rax)	 # tmp87, this_2(D)->z
.LBE109:
 # src\main.cpp:57: 	float x; float y; float z; Vec3D(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}
	.loc 14 57 88
	nop	
	popq	%rbp	 #
.LCFI250:
	ret	
.LFE10889:
	.seh_endproc
	.section	.text$_ZN6MATRIX4cellC1ENS_7elementE,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX4cellC1ENS_7elementE
	.def	_ZN6MATRIX4cellC1ENS_7elementE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX4cellC1ENS_7elementE
_ZN6MATRIX4cellC1ENS_7elementE:
.LFB10904:
	.loc 14 94 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI251:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI252:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, 24(%rbp)	 # _MaterialType, _MaterialType
.LBB110:
 # src\main.cpp:94: 		cell(element _MaterialType) : MaterialType(_MaterialType) {}
	.loc 14 94 59
	movq	16(%rbp), %rax	 # this, tmp83
	pxor	%xmm0, %xmm0	 # tmp84
	movss	%xmm0, (%rax)	 # tmp84, this_3(D)->temperature
	movq	16(%rbp), %rax	 # this, tmp85
	addq	$4, %rax	 #, _1
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _1,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp86
	pxor	%xmm0, %xmm0	 # tmp87
	movsd	%xmm0, 16(%rax)	 # tmp87, this_3(D)->pressure
	movq	16(%rbp), %rax	 # this, tmp88
	movb	$0, 24(%rax)	 #, this_3(D)->active
 # src\main.cpp:94: 		cell(element _MaterialType) : MaterialType(_MaterialType) {}
	.loc 14 94 33
	movq	16(%rbp), %rax	 # this, tmp89
	movl	24(%rbp), %edx	 # _MaterialType, tmp90
	movl	%edx, 28(%rax)	 # tmp90, this_3(D)->MaterialType
.LBE110:
 # src\main.cpp:94: 		cell(element _MaterialType) : MaterialType(_MaterialType) {}
	.loc 14 94 62
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI253:
	ret	
.LFE10904:
	.seh_endproc
	.section	.text$_ZN6MATRIX4cellD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX4cellD1Ev
	.def	_ZN6MATRIX4cellD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX4cellD1Ev
_ZN6MATRIX4cellD1Ev:
.LFB10916:
	.loc 14 99 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI254:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI255:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB111:
 # src\main.cpp:101: 			temperature  = 0.0f;
	.loc 14 101 17
	movq	16(%rbp), %rax	 # this, tmp82
	pxor	%xmm0, %xmm0	 # tmp83
	movss	%xmm0, (%rax)	 # tmp83, this_2(D)->temperature
 # src\main.cpp:102: 			velocity     = Vec3D(0.0f, 0.0f, 0.0f);
	.loc 14 102 19
	leaq	-12(%rbp), %rax	 #, tmp84
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # tmp84,
	call	_ZN5Vec3DC1Efff	 #
 # src\main.cpp:102: 			velocity     = Vec3D(0.0f, 0.0f, 0.0f);
	.loc 14 102 17
	movq	16(%rbp), %rax	 # this, tmp85
	movq	-12(%rbp), %rdx	 # D.208252, tmp86
	movq	%rdx, 4(%rax)	 # tmp86, this_2(D)->velocity
	movl	-4(%rbp), %edx	 # D.208252, tmp87
	movl	%edx, 12(%rax)	 # tmp87, this_2(D)->velocity
 # src\main.cpp:103: 			pressure     = 0.0;
	.loc 14 103 17
	movq	16(%rbp), %rax	 # this, tmp88
	pxor	%xmm0, %xmm0	 # tmp89
	movsd	%xmm0, 16(%rax)	 # tmp89, this_2(D)->pressure
 # src\main.cpp:104: 			active       = false;
	.loc 14 104 17
	movq	16(%rbp), %rax	 # this, tmp90
	movb	$0, 24(%rax)	 #, this_2(D)->active
.LBE111:
 # src\main.cpp:105: 		}
	.loc 14 105 3
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI256:
	ret	
.LFE10916:
	.seh_endproc
	.section	.text$_ZN6MATRIX18MaterialAttributesC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX18MaterialAttributesC1Ev
	.def	_ZN6MATRIX18MaterialAttributesC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX18MaterialAttributesC1Ev
_ZN6MATRIX18MaterialAttributesC1Ev:
.LFB10920:
	.loc 14 79 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI257:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI258:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB112:
 # src\main.cpp:79: 	struct MaterialAttributes
	.loc 14 79 9
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, 32(%rax)	 #, this_2(D)->name
.LBE112:
	nop	
	popq	%rbp	 #
.LCFI259:
	ret	
.LFE10920:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_
	.def	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_
_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_:
.LFB10922:
	.file 15 "C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h"
	.loc 15 235 24
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI260:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI261:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.207743, D.207743
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:235:       __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
	.loc 15 235 24
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.207743, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_	 #
	movq	16(%rbp), %rax	 # this, _7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI262:
	ret	
.LFE10922:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_
	.def	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_
_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_:
.LFB10921:
	.loc 15 680 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI263:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI264:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.208010, D.208010
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:680:       operator=(unique_ptr&&) = default;
	.loc 15 680 7
	movq	24(%rbp), %rdx	 # D.208010, _1
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_	 #
	movq	16(%rbp), %rax	 # this, _7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI265:
	ret	
.LFE10921:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC2:
	.ascii "-> cells set to: element::air\12\0"
.LC3:
	.ascii "-> elements::name... \12\0"
.LC4:
	.ascii "air\0"
.LC5:
	.ascii "water\0"
.LC6:
	.ascii "wood\0"
.LC7:
	.ascii "fire\0"
.LC8:
	.ascii "metal\0"
.LC9:
	.ascii "Custom\0"
.LC10:
	.ascii "-> elements::density... \12\0"
.LC15:
	.ascii "-> elements::friction... \12\0"
	.align 8
.LC20:
	.ascii "-> elements::ThermalConductivity... \12\0"
	.align 8
.LC24:
	.ascii "-> elements::specificHeat... \12\0"
.LC29:
	.ascii "-> elements::restitution... \12\0"
.LC32:
	.ascii "-> elements::hardness... \12\0"
	.align 8
.LC34:
	.ascii "matrix initialized: CELLS: [%d] BPC: [%d]\12\12\0"
	.section	.text$_ZN6MATRIX10InitMatrixEjjj,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX10InitMatrixEjjj
	.def	_ZN6MATRIX10InitMatrixEjjj;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX10InitMatrixEjjj
_ZN6MATRIX10InitMatrixEjjj:
.LFB10917:
	.loc 14 115 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI266:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI267:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI268:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI269:
	subq	$280, %rsp	 #,
	.seh_stackalloc	280
.LCFI270:
	leaq	128(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 128
.LCFI271:
	.seh_endprologue
	movq	%rcx, 192(%rbp)	 # this, this
	movl	%edx, 200(%rbp)	 # width, width
	movl	%r8d, 208(%rbp)	 # height, height
	movl	%r9d, 216(%rbp)	 # depth, depth
 # src\main.cpp:117: 		w = width; h = height; d = depth;
	.loc 14 117 5
	movq	192(%rbp), %rax	 # this, tmp262
	movl	200(%rbp), %edx	 # width, tmp263
	movl	%edx, 40(%rax)	 # tmp263, this_184(D)->w
 # src\main.cpp:117: 		w = width; h = height; d = depth;
	.loc 14 117 16
	movq	192(%rbp), %rax	 # this, tmp264
	movl	208(%rbp), %edx	 # height, tmp265
	movl	%edx, 44(%rax)	 # tmp265, this_184(D)->h
 # src\main.cpp:117: 		w = width; h = height; d = depth;
	.loc 14 117 28
	movq	192(%rbp), %rax	 # this, tmp266
	movl	216(%rbp), %edx	 # depth, tmp267
	movl	%edx, 48(%rax)	 # tmp267, this_184(D)->d
 # src\main.cpp:121: 		CELL_FRONT_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 14 121 71
	movl	200(%rbp), %eax	 # width, tmp268
	imull	208(%rbp), %eax	 # height, _1
 # src\main.cpp:121: 		CELL_FRONT_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 14 121 80
	imull	216(%rbp), %eax	 # depth, _2
	movl	%eax, %eax	 # _2, _3
 # src\main.cpp:121: 		CELL_FRONT_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 14 121 48
	salq	$5, %rax	 #, _4
	movq	%rax, %rcx	 # _4,
	call	malloc	 #
	movq	%rax, %rdx	 # tmp269, _5
 # src\main.cpp:121: 		CELL_FRONT_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 14 121 21
	movq	192(%rbp), %rax	 # this, tmp270
	movq	%rdx, 8(%rax)	 # _5, this_184(D)->CELL_FRONT_BUFFER
.LBB113:
 # src\main.cpp:123: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 123 16
	movl	$0, 140(%rbp)	 #, i
 # src\main.cpp:123: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 123 3
	jmp	.L185	 #
.L186:
 # src\main.cpp:125: 			new (&CELL_FRONT_BUFFER[i]) cell(element::air);
	.loc 14 125 10 discriminator 3
	movq	192(%rbp), %rax	 # this, tmp271
	movq	8(%rax), %rax	 # this_184(D)->CELL_FRONT_BUFFER, _6
 # src\main.cpp:125: 			new (&CELL_FRONT_BUFFER[i]) cell(element::air);
	.loc 14 125 28 discriminator 3
	movl	140(%rbp), %edx	 # i, _7
 # src\main.cpp:125: 			new (&CELL_FRONT_BUFFER[i]) cell(element::air);
	.loc 14 125 29 discriminator 3
	salq	$5, %rdx	 #, _8
 # src\main.cpp:125: 			new (&CELL_FRONT_BUFFER[i]) cell(element::air);
	.loc 14 125 4 discriminator 3
	addq	%rdx, %rax	 # _8, _370
 # src\main.cpp:125: 			new (&CELL_FRONT_BUFFER[i]) cell(element::air);
	.loc 14 125 49 discriminator 3
	movq	%rax, %rdx	 # _370,
	movl	$32, %ecx	 #,
	call	_ZnwyPv	 #
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _372,
	call	_ZN6MATRIX4cellC1ENS_7elementE	 #
 # src\main.cpp:123: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 123 3 discriminator 3
	addl	$1, 140(%rbp)	 #, i
.L185:
 # src\main.cpp:123: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 123 29 discriminator 1
	movl	200(%rbp), %eax	 # width, tmp272
	imull	208(%rbp), %eax	 # height, _9
 # src\main.cpp:123: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 123 38 discriminator 1
	imull	216(%rbp), %eax	 # depth, _10
 # src\main.cpp:123: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 123 22 discriminator 1
	cmpl	%eax, 140(%rbp)	 # _10, i
	jb	.L186	 #,
.LBE113:
 # src\main.cpp:130: 		CELL_BACK_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 14 130 70
	movl	200(%rbp), %eax	 # width, tmp273
	imull	208(%rbp), %eax	 # height, _11
 # src\main.cpp:130: 		CELL_BACK_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 14 130 79
	imull	216(%rbp), %eax	 # depth, _12
	movl	%eax, %eax	 # _12, _13
 # src\main.cpp:130: 		CELL_BACK_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 14 130 47
	salq	$5, %rax	 #, _14
	movq	%rax, %rcx	 # _14,
	call	malloc	 #
	movq	%rax, %rdx	 # tmp274, _15
 # src\main.cpp:130: 		CELL_BACK_BUFFER = static_cast<cell*>(malloc(sizeof(cell) * (width * height * depth)));
	.loc 14 130 20
	movq	192(%rbp), %rax	 # this, tmp275
	movq	%rdx, 24(%rax)	 # _15, this_184(D)->CELL_BACK_BUFFER
.LBB114:
 # src\main.cpp:132: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 132 16
	movl	$0, 136(%rbp)	 #, i
 # src\main.cpp:132: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 132 3
	jmp	.L187	 #
.L188:
 # src\main.cpp:134: 			new (&CELL_BACK_BUFFER[i]) cell(element::air);
	.loc 14 134 10 discriminator 3
	movq	192(%rbp), %rax	 # this, tmp276
	movq	24(%rax), %rax	 # this_184(D)->CELL_BACK_BUFFER, _16
 # src\main.cpp:134: 			new (&CELL_BACK_BUFFER[i]) cell(element::air);
	.loc 14 134 27 discriminator 3
	movl	136(%rbp), %edx	 # i, _17
 # src\main.cpp:134: 			new (&CELL_BACK_BUFFER[i]) cell(element::air);
	.loc 14 134 28 discriminator 3
	salq	$5, %rdx	 #, _18
 # src\main.cpp:134: 			new (&CELL_BACK_BUFFER[i]) cell(element::air);
	.loc 14 134 4 discriminator 3
	addq	%rdx, %rax	 # _18, _363
 # src\main.cpp:134: 			new (&CELL_BACK_BUFFER[i]) cell(element::air);
	.loc 14 134 48 discriminator 3
	movq	%rax, %rdx	 # _363,
	movl	$32, %ecx	 #,
	call	_ZnwyPv	 #
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _365,
	call	_ZN6MATRIX4cellC1ENS_7elementE	 #
 # src\main.cpp:132: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 132 3 discriminator 3
	addl	$1, 136(%rbp)	 #, i
.L187:
 # src\main.cpp:132: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 132 29 discriminator 1
	movl	200(%rbp), %eax	 # width, tmp277
	imull	208(%rbp), %eax	 # height, _19
 # src\main.cpp:132: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 132 38 discriminator 1
	imull	216(%rbp), %eax	 # depth, _20
 # src\main.cpp:132: 		for(uint32_t i=0; i<width * height * depth; ++i)
	.loc 14 132 22 discriminator 1
	cmpl	%eax, 136(%rbp)	 # _20, i
	jb	.L188	 #,
.LBE114:
 # src\main.cpp:137: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[static_cast<uint32_t>(element::size)]);
	.loc 14 137 109
	movl	$240, %ecx	 #,
.LEHB0:
	call	_Znay	 #
	movq	%rax, %rdi	 # tmp278, _198
	movq	%rdi, %rsi	 # _198, _163
	movl	$5, %ebx	 #, _164
	jmp	.L189	 #
.L190:
 # src\main.cpp:137: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[static_cast<uint32_t>(element::size)]);
	.loc 14 137 109 is_stmt 0 discriminator 5
	movq	%rsi, %rcx	 # _163,
	call	_ZN6MATRIX18MaterialAttributesC1Ev	 #
	subq	$1, %rbx	 #, _164
	addq	$40, %rsi	 #, _163
.L189:
 # src\main.cpp:137: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[static_cast<uint32_t>(element::size)]);
	.loc 14 137 109 discriminator 3
	testq	%rbx, %rbx	 # _164
	jns	.L190	 #,
 # src\main.cpp:137: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[static_cast<uint32_t>(element::size)]);
	.loc 14 137 17 is_stmt 1 discriminator 6
	leaq	-40(%rbp), %rax	 #, tmp279
	movq	%rdi, %rdx	 # _198,
	movq	%rax, %rcx	 # tmp279,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_	 #
 # src\main.cpp:137: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[static_cast<uint32_t>(element::size)]);
	.loc 14 137 110 discriminator 6
	movq	192(%rbp), %rax	 # this, tmp280
	leaq	32(%rax), %rcx	 #, _21
	leaq	-40(%rbp), %rax	 #, tmp281
	movq	%rax, %rdx	 # tmp281,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_	 #
 # src\main.cpp:137: 		matAtt = std::unique_ptr<MaterialAttributes[]>(new MaterialAttributes[static_cast<uint32_t>(element::size)]);
	.loc 14 137 17 discriminator 6
	leaq	-40(%rbp), %rax	 #, tmp282
	movq	%rax, %rcx	 # tmp282,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev	 #
 # src\main.cpp:139: 		printf("-> cells set to: element::air\n");
	.loc 14 139 9 discriminator 6
	leaq	.LC2(%rip), %rax	 #, tmp283
	movq	%rax, %rcx	 # tmp283,
	call	_Z6printfPKcz	 #
.LEHE0:
.LBB115:
 # src\main.cpp:140: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 14 140 16 discriminator 6
	movl	$0, 132(%rbp)	 #, i
 # src\main.cpp:140: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 14 140 3 discriminator 6
	jmp	.L191	 #
.L197:
.LBB116:
 # src\main.cpp:143: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 143 21
	movq	192(%rbp), %rax	 # this, tmp284
	movl	40(%rax), %ecx	 # this_184(D)->w, _22
 # src\main.cpp:143: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 143 13
	movl	132(%rbp), %eax	 # i, tmp286
	movl	$0, %edx	 #, tmp287
	divl	%ecx	 # _22
	movl	%edx, 108(%rbp)	 # tmp287, x
 # src\main.cpp:143: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 143 42
	movq	192(%rbp), %rax	 # this, tmp289
	movl	40(%rax), %edi	 # this_184(D)->w, _23
 # src\main.cpp:143: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 143 40
	movl	132(%rbp), %eax	 # i, tmp292
	movl	$0, %edx	 #, tmp291
	divl	%edi	 # _23
	movl	%eax, %edx	 # tmp290, _24
 # src\main.cpp:143: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 143 47
	movq	192(%rbp), %rax	 # this, tmp293
	movl	44(%rax), %ecx	 # this_184(D)->h, _25
 # src\main.cpp:143: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 143 33
	movl	%edx, %eax	 # _24, _24
	movl	$0, %edx	 #, tmp294
	divl	%ecx	 # _25
	movl	%edx, 104(%rbp)	 # tmp294, y
 # src\main.cpp:143: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 143 68
	movq	192(%rbp), %rax	 # this, tmp296
	movl	40(%rax), %edx	 # this_184(D)->w, _26
 # src\main.cpp:143: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 143 72
	movq	192(%rbp), %rax	 # this, tmp297
	movl	44(%rax), %eax	 # this_184(D)->h, _27
 # src\main.cpp:143: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 143 70
	movl	%edx, %edi	 # _26, _26
	imull	%eax, %edi	 # _27, _26
 # src\main.cpp:143: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 143 59
	movl	132(%rbp), %eax	 # i, tmp300
	movl	$0, %edx	 #, tmp299
	divl	%edi	 # _28
	movl	%eax, 100(%rbp)	 # tmp298, z
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 136
	movl	$0, %ebx	 #, cleanup.100_168
	movl	$0, %esi	 #, cleanup.101_170
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 49
	cmpl	$0, 108(%rbp)	 #, x
	je	.L192	 #,
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 28 discriminator 2
	movq	192(%rbp), %rax	 # this, tmp301
	movl	40(%rax), %eax	 # this_184(D)->w, _29
	subl	$1, %eax	 #, _30
	cmpl	%eax, 108(%rbp)	 # _30, x
	je	.L192	 #,
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 28 is_stmt 0 discriminator 4
	cmpl	$0, 104(%rbp)	 #, y
	je	.L192	 #,
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 28 discriminator 6
	movq	192(%rbp), %rax	 # this, tmp302
	movl	44(%rax), %eax	 # this_184(D)->h, _31
	subl	$1, %eax	 #, _32
	cmpl	%eax, 104(%rbp)	 # _32, y
	je	.L192	 #,
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 28 discriminator 8
	cmpl	$0, 100(%rbp)	 #, z
	je	.L192	 #,
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 28 discriminator 10
	movq	192(%rbp), %rax	 # this, tmp303
	movl	48(%rax), %eax	 # this_184(D)->d, _33
	subl	$1, %eax	 #, _34
	cmpl	%eax, 100(%rbp)	 # _34, z
	jne	.L193	 #,
.L192:
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 72 is_stmt 1 discriminator 11
	leaq	-32(%rbp), %rax	 #, tmp304
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # tmp304,
	call	_ZN6MATRIX4cellC1ENS_7elementE	 #
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 136 discriminator 11
	movl	$1, %ebx	 #, cleanup.100_168
	leaq	-80(%rbp), %rax	 #, tmp305
	movl	104(%rbp), %r9d	 # y, tmp306
	movl	108(%rbp), %r8d	 # x, tmp307
	movq	192(%rbp), %rdx	 # this, tmp308
	leaq	-32(%rbp), %rcx	 #, tmp309
	movq	%rcx, 40(%rsp)	 # tmp309,
	movl	100(%rbp), %ecx	 # z, tmp310
	movl	%ecx, 32(%rsp)	 # tmp310,
	movq	%rax, %rcx	 # tmp305,
.LEHB1:
	call	_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE	 #
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 136 is_stmt 0
	jmp	.L194	 #
.L193:
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 118 is_stmt 1 discriminator 12
	movq	%rbp, %rax	 #, tmp311
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp311,
	call	_ZN6MATRIX4cellC1ENS_7elementE	 #
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 136 discriminator 12
	movl	$1, %esi	 #, cleanup.101_170
	leaq	-80(%rbp), %rax	 #, tmp312
	movl	104(%rbp), %r9d	 # y, tmp313
	movl	108(%rbp), %r8d	 # x, tmp314
	movq	192(%rbp), %rdx	 # this, tmp315
	movq	%rbp, %rcx	 #, tmp316
	movq	%rcx, 40(%rsp)	 # tmp316,
	movl	100(%rbp), %ecx	 # z, tmp317
	movl	%ecx, 32(%rsp)	 # tmp317,
	movq	%rax, %rcx	 # tmp312,
	call	_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE	 #
.LEHE1:
.L194:
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 118 discriminator 15
	testb	%sil, %sil	 # cleanup.101_170
	je	.L195	 #,
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 118 is_stmt 0 discriminator 16
	movq	%rbp, %rax	 #, tmp318
	movq	%rax, %rcx	 # tmp318,
	call	_ZN6MATRIX4cellD1Ev	 #
.L195:
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 72 is_stmt 1 discriminator 18
	testb	%bl, %bl	 # cleanup.100_168
	je	.L196	 #,
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 72 is_stmt 0 discriminator 19
	leaq	-32(%rbp), %rax	 #, tmp319
	movq	%rax, %rcx	 # tmp319,
	call	_ZN6MATRIX4cellD1Ev	 #
.L196:
 # src\main.cpp:145: 		}
	.loc 14 145 3 is_stmt 1 discriminator 21
	leaq	-80(%rbp), %rax	 #, tmp320
	movq	%rax, %rcx	 # tmp320,
	call	_ZN6MATRIX4cellD1Ev	 #
.LBE116:
 # src\main.cpp:140: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 14 140 3 discriminator 21
	addl	$1, 132(%rbp)	 #, i
.L191:
 # src\main.cpp:140: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 14 140 31 discriminator 2
	movl	200(%rbp), %eax	 # width, tmp321
	imull	208(%rbp), %eax	 # height, _35
 # src\main.cpp:140: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 14 140 40 discriminator 2
	imull	216(%rbp), %eax	 # depth, _36
 # src\main.cpp:140: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 14 140 48 discriminator 2
	subl	$1, %eax	 #, _37
 # src\main.cpp:140: 		for(uint32_t i=0; i<= width * height * depth -1; ++i)
	.loc 14 140 22 discriminator 2
	cmpl	132(%rbp), %eax	 # i, _37
	jnb	.L197	 #,
.LBE115:
 # src\main.cpp:147: 		uint32_t i1 = 0;
	.loc 14 147 12
	movl	$0, 128(%rbp)	 #, i1
.LBB118:
 # src\main.cpp:148: 		for(uint32_t i=FlattenedIndex(w >> 1, h >> 1, d >> 1); i<= static_cast<uint32_t>(element::size) -1; ++i)
	.loc 14 148 49
	movq	192(%rbp), %rax	 # this, tmp322
	movl	48(%rax), %eax	 # this_184(D)->d, _38
 # src\main.cpp:148: 		for(uint32_t i=FlattenedIndex(w >> 1, h >> 1, d >> 1); i<= static_cast<uint32_t>(element::size) -1; ++i)
	.loc 14 148 32
	shrl	%eax	 # _38
	movl	%eax, %r8d	 # _38, _39
 # src\main.cpp:148: 		for(uint32_t i=FlattenedIndex(w >> 1, h >> 1, d >> 1); i<= static_cast<uint32_t>(element::size) -1; ++i)
	.loc 14 148 41
	movq	192(%rbp), %rax	 # this, tmp323
	movl	44(%rax), %eax	 # this_184(D)->h, _40
 # src\main.cpp:148: 		for(uint32_t i=FlattenedIndex(w >> 1, h >> 1, d >> 1); i<= static_cast<uint32_t>(element::size) -1; ++i)
	.loc 14 148 32
	shrl	%eax	 # _40
	movl	%eax, %ecx	 # _40, _41
 # src\main.cpp:148: 		for(uint32_t i=FlattenedIndex(w >> 1, h >> 1, d >> 1); i<= static_cast<uint32_t>(element::size) -1; ++i)
	.loc 14 148 33
	movq	192(%rbp), %rax	 # this, tmp324
	movl	40(%rax), %eax	 # this_184(D)->w, _42
 # src\main.cpp:148: 		for(uint32_t i=FlattenedIndex(w >> 1, h >> 1, d >> 1); i<= static_cast<uint32_t>(element::size) -1; ++i)
	.loc 14 148 32
	shrl	%eax	 # _42
	movl	%eax, %edx	 # _42, _43
	movq	192(%rbp), %rax	 # this, tmp325
	movl	%r8d, %r9d	 # _39,
	movl	%ecx, %r8d	 # _41,
	movq	%rax, %rcx	 # tmp325,
	call	_ZN6MATRIX14FlattenedIndexEjjj	 #
	movl	%eax, 124(%rbp)	 # tmp326, i
 # src\main.cpp:148: 		for(uint32_t i=FlattenedIndex(w >> 1, h >> 1, d >> 1); i<= static_cast<uint32_t>(element::size) -1; ++i)
	.loc 14 148 3
	jmp	.L198	 #
.L199:
.LBB119:
 # src\main.cpp:151: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 151 21
	movq	192(%rbp), %rax	 # this, tmp327
	movl	40(%rax), %ecx	 # this_184(D)->w, _44
 # src\main.cpp:151: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 151 13
	movl	124(%rbp), %eax	 # i, tmp329
	movl	$0, %edx	 #, tmp330
	divl	%ecx	 # _44
	movl	%edx, 120(%rbp)	 # tmp330, x
 # src\main.cpp:151: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 151 42
	movq	192(%rbp), %rax	 # this, tmp332
	movl	40(%rax), %ebx	 # this_184(D)->w, _45
 # src\main.cpp:151: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 151 40
	movl	124(%rbp), %eax	 # i, tmp335
	movl	$0, %edx	 #, tmp334
	divl	%ebx	 # _45
	movl	%eax, %edx	 # tmp333, _46
 # src\main.cpp:151: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 151 47
	movq	192(%rbp), %rax	 # this, tmp336
	movl	44(%rax), %ecx	 # this_184(D)->h, _47
 # src\main.cpp:151: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 151 33
	movl	%edx, %eax	 # _46, _46
	movl	$0, %edx	 #, tmp337
	divl	%ecx	 # _47
	movl	%edx, 116(%rbp)	 # tmp337, y
 # src\main.cpp:151: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 151 68
	movq	192(%rbp), %rax	 # this, tmp339
	movl	40(%rax), %edx	 # this_184(D)->w, _48
 # src\main.cpp:151: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 151 72
	movq	192(%rbp), %rax	 # this, tmp340
	movl	44(%rax), %eax	 # this_184(D)->h, _49
 # src\main.cpp:151: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 151 70
	movl	%edx, %esi	 # _48, _48
	imull	%eax, %esi	 # _49, _48
 # src\main.cpp:151: 			uint32_t x = i % w; uint32_t y = (i / w) % h; uint32_t z = i / (w * h);
	.loc 14 151 59
	movl	124(%rbp), %eax	 # i, tmp343
	movl	$0, %edx	 #, tmp342
	divl	%esi	 # _50
	movl	%eax, 112(%rbp)	 # tmp341, z
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 86
	movq	192(%rbp), %rax	 # this, tmp344
	movl	48(%rax), %eax	 # this_184(D)->d, _51
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 69
	shrl	%eax	 # _51
	movl	%eax, %r8d	 # _51, _52
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 78
	movq	192(%rbp), %rax	 # this, tmp345
	movl	44(%rax), %eax	 # this_184(D)->h, _53
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 69
	shrl	%eax	 # _53
	movl	%eax, %ecx	 # _53, _54
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 70
	movq	192(%rbp), %rax	 # this, tmp346
	movl	40(%rax), %eax	 # this_184(D)->w, _55
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 69
	shrl	%eax	 # _55
	movl	%eax, %edx	 # _55, _56
	movq	192(%rbp), %rax	 # this, tmp347
	movl	%r8d, %r9d	 # _52,
	movl	%ecx, %r8d	 # _54,
	movq	%rax, %rcx	 # tmp347,
	call	_ZN6MATRIX14FlattenedIndexEjjj	 #
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 53
	movl	124(%rbp), %edx	 # i, tmp348
	subl	%eax, %edx	 # _57, _58
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 25
	leaq	64(%rbp), %rax	 #, tmp349
	movq	%rax, %rcx	 # tmp349,
	call	_ZN6MATRIX4cellC1ENS_7elementE	 #
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 15
	leaq	32(%rbp), %rax	 #, tmp350
	movl	116(%rbp), %r9d	 # y, tmp351
	movl	120(%rbp), %r8d	 # x, tmp352
	movq	192(%rbp), %rdx	 # this, tmp353
	leaq	64(%rbp), %rcx	 #, tmp354
	movq	%rcx, 40(%rsp)	 # tmp354,
	movl	112(%rbp), %ecx	 # z, tmp355
	movl	%ecx, 32(%rsp)	 # tmp355,
	movq	%rax, %rcx	 # tmp350,
.LEHB2:
	call	_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE	 #
.LEHE2:
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 15 is_stmt 0 discriminator 2
	leaq	32(%rbp), %rax	 #, tmp356
	movq	%rax, %rcx	 # tmp356,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 25 is_stmt 1 discriminator 2
	leaq	64(%rbp), %rax	 #, tmp357
	movq	%rax, %rcx	 # tmp357,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 98 discriminator 2
	addl	$1, 128(%rbp)	 #, i1
.LBE119:
 # src\main.cpp:148: 		for(uint32_t i=FlattenedIndex(w >> 1, h >> 1, d >> 1); i<= static_cast<uint32_t>(element::size) -1; ++i)
	.loc 14 148 3 discriminator 2
	addl	$1, 124(%rbp)	 #, i
.L198:
 # src\main.cpp:148: 		for(uint32_t i=FlattenedIndex(w >> 1, h >> 1, d >> 1); i<= static_cast<uint32_t>(element::size) -1; ++i)
	.loc 14 148 59 discriminator 2
	cmpl	$5, 124(%rbp)	 #, i
	jbe	.L199	 #,
.LBE118:
 # src\main.cpp:156: 		printf("-> elements::name... \n");
	.loc 14 156 9
	leaq	.LC3(%rip), %rax	 #, tmp358
	movq	%rax, %rcx	 # tmp358,
.LEHB3:
	call	_Z6printfPKcz	 #
 # src\main.cpp:157: 		matAtt[static_cast<uint32_t>(element::air)   ].name 			   = "air";
	.loc 14 157 48
	movq	192(%rbp), %rax	 # this, tmp359
	addq	$32, %rax	 #, _59
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _59,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:157: 		matAtt[static_cast<uint32_t>(element::air)   ].name 			   = "air";
	.loc 14 157 61
	leaq	.LC4(%rip), %rdx	 #, tmp360
	movq	%rdx, 32(%rax)	 # tmp360, _60->name
 # src\main.cpp:158: 		matAtt[static_cast<uint32_t>(element::water) ].name 			   = "water";
	.loc 14 158 48
	movq	192(%rbp), %rax	 # this, tmp361
	addq	$32, %rax	 #, _61
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # _61,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:158: 		matAtt[static_cast<uint32_t>(element::water) ].name 			   = "water";
	.loc 14 158 61
	leaq	.LC5(%rip), %rdx	 #, tmp362
	movq	%rdx, 32(%rax)	 # tmp362, _62->name
 # src\main.cpp:159: 		matAtt[static_cast<uint32_t>(element::wood)  ].name 			   = "wood";
	.loc 14 159 48
	movq	192(%rbp), %rax	 # this, tmp363
	addq	$32, %rax	 #, _63
	movl	$2, %edx	 #,
	movq	%rax, %rcx	 # _63,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:159: 		matAtt[static_cast<uint32_t>(element::wood)  ].name 			   = "wood";
	.loc 14 159 61
	leaq	.LC6(%rip), %rdx	 #, tmp364
	movq	%rdx, 32(%rax)	 # tmp364, _64->name
 # src\main.cpp:160: 		matAtt[static_cast<uint32_t>(element::fire)  ].name 			   = "fire";
	.loc 14 160 48
	movq	192(%rbp), %rax	 # this, tmp365
	addq	$32, %rax	 #, _65
	movl	$3, %edx	 #,
	movq	%rax, %rcx	 # _65,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:160: 		matAtt[static_cast<uint32_t>(element::fire)  ].name 			   = "fire";
	.loc 14 160 61
	leaq	.LC7(%rip), %rdx	 #, tmp366
	movq	%rdx, 32(%rax)	 # tmp366, _66->name
 # src\main.cpp:161: 		matAtt[static_cast<uint32_t>(element::metal) ].name 			   = "metal";
	.loc 14 161 48
	movq	192(%rbp), %rax	 # this, tmp367
	addq	$32, %rax	 #, _67
	movl	$4, %edx	 #,
	movq	%rax, %rcx	 # _67,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:161: 		matAtt[static_cast<uint32_t>(element::metal) ].name 			   = "metal";
	.loc 14 161 61
	leaq	.LC8(%rip), %rdx	 #, tmp368
	movq	%rdx, 32(%rax)	 # tmp368, _68->name
 # src\main.cpp:162: 		matAtt[static_cast<uint32_t>(element::Custom)].name 			   = "Custom";
	.loc 14 162 48
	movq	192(%rbp), %rax	 # this, tmp369
	addq	$32, %rax	 #, _69
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # _69,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:162: 		matAtt[static_cast<uint32_t>(element::Custom)].name 			   = "Custom";
	.loc 14 162 61
	leaq	.LC9(%rip), %rdx	 #, tmp370
	movq	%rdx, 32(%rax)	 # tmp370, _70->name
 # src\main.cpp:164: 		printf("-> elements::density... \n");
	.loc 14 164 9
	leaq	.LC10(%rip), %rax	 #, tmp371
	movq	%rax, %rcx	 # tmp371,
	call	_Z6printfPKcz	 #
 # src\main.cpp:165: 		matAtt[static_cast<uint32_t>(element::air)   ].density 			   = 1.225f;
	.loc 14 165 48
	movq	192(%rbp), %rax	 # this, tmp372
	addq	$32, %rax	 #, _71
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _71,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:165: 		matAtt[static_cast<uint32_t>(element::air)   ].density 			   = 1.225f;
	.loc 14 165 64
	movss	.LC11(%rip), %xmm0	 #, tmp373
	movss	%xmm0, (%rax)	 # tmp373, _72->density
 # src\main.cpp:166: 		matAtt[static_cast<uint32_t>(element::water) ].density 			   = 1000.0f;
	.loc 14 166 48
	movq	192(%rbp), %rax	 # this, tmp374
	addq	$32, %rax	 #, _73
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # _73,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:166: 		matAtt[static_cast<uint32_t>(element::water) ].density 			   = 1000.0f;
	.loc 14 166 64
	movss	.LC12(%rip), %xmm0	 #, tmp375
	movss	%xmm0, (%rax)	 # tmp375, _74->density
 # src\main.cpp:167: 		matAtt[static_cast<uint32_t>(element::wood)  ].density 			   = 700.0f;
	.loc 14 167 48
	movq	192(%rbp), %rax	 # this, tmp376
	addq	$32, %rax	 #, _75
	movl	$2, %edx	 #,
	movq	%rax, %rcx	 # _75,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:167: 		matAtt[static_cast<uint32_t>(element::wood)  ].density 			   = 700.0f;
	.loc 14 167 64
	movss	.LC13(%rip), %xmm0	 #, tmp377
	movss	%xmm0, (%rax)	 # tmp377, _76->density
 # src\main.cpp:168: 		matAtt[static_cast<uint32_t>(element::fire)  ].density 			   = 0.0f;
	.loc 14 168 48
	movq	192(%rbp), %rax	 # this, tmp378
	addq	$32, %rax	 #, _77
	movl	$3, %edx	 #,
	movq	%rax, %rcx	 # _77,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:168: 		matAtt[static_cast<uint32_t>(element::fire)  ].density 			   = 0.0f;
	.loc 14 168 64
	pxor	%xmm0, %xmm0	 # tmp379
	movss	%xmm0, (%rax)	 # tmp379, _78->density
 # src\main.cpp:169: 		matAtt[static_cast<uint32_t>(element::metal) ].density 			   = 7800.0f;
	.loc 14 169 48
	movq	192(%rbp), %rax	 # this, tmp380
	addq	$32, %rax	 #, _79
	movl	$4, %edx	 #,
	movq	%rax, %rcx	 # _79,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:169: 		matAtt[static_cast<uint32_t>(element::metal) ].density 			   = 7800.0f;
	.loc 14 169 64
	movss	.LC14(%rip), %xmm0	 #, tmp381
	movss	%xmm0, (%rax)	 # tmp381, _80->density
 # src\main.cpp:170: 		matAtt[static_cast<uint32_t>(element::Custom)].density 			   = 0.0f;
	.loc 14 170 48
	movq	192(%rbp), %rax	 # this, tmp382
	addq	$32, %rax	 #, _81
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # _81,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:170: 		matAtt[static_cast<uint32_t>(element::Custom)].density 			   = 0.0f;
	.loc 14 170 64
	pxor	%xmm0, %xmm0	 # tmp383
	movss	%xmm0, (%rax)	 # tmp383, _82->density
 # src\main.cpp:172: 		printf("-> elements::friction... \n");
	.loc 14 172 9
	leaq	.LC15(%rip), %rax	 #, tmp384
	movq	%rax, %rcx	 # tmp384,
	call	_Z6printfPKcz	 #
 # src\main.cpp:173: 		matAtt[static_cast<uint32_t>(element::air)   ].friction 		   = 0.02f;
	.loc 14 173 48
	movq	192(%rbp), %rax	 # this, tmp385
	addq	$32, %rax	 #, _83
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _83,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:173: 		matAtt[static_cast<uint32_t>(element::air)   ].friction 		   = 0.02f;
	.loc 14 173 64
	movss	.LC16(%rip), %xmm0	 #, tmp386
	movss	%xmm0, 4(%rax)	 # tmp386, _84->friction
 # src\main.cpp:174: 		matAtt[static_cast<uint32_t>(element::water) ].friction 		   = 0.1f;
	.loc 14 174 48
	movq	192(%rbp), %rax	 # this, tmp387
	addq	$32, %rax	 #, _85
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # _85,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:174: 		matAtt[static_cast<uint32_t>(element::water) ].friction 		   = 0.1f;
	.loc 14 174 64
	movss	.LC17(%rip), %xmm0	 #, tmp388
	movss	%xmm0, 4(%rax)	 # tmp388, _86->friction
 # src\main.cpp:175: 		matAtt[static_cast<uint32_t>(element::wood)  ].friction 		   = 0.4f;
	.loc 14 175 48
	movq	192(%rbp), %rax	 # this, tmp389
	addq	$32, %rax	 #, _87
	movl	$2, %edx	 #,
	movq	%rax, %rcx	 # _87,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:175: 		matAtt[static_cast<uint32_t>(element::wood)  ].friction 		   = 0.4f;
	.loc 14 175 64
	movss	.LC18(%rip), %xmm0	 #, tmp390
	movss	%xmm0, 4(%rax)	 # tmp390, _88->friction
 # src\main.cpp:176: 		matAtt[static_cast<uint32_t>(element::fire)  ].friction 		   = 0.0f;
	.loc 14 176 48
	movq	192(%rbp), %rax	 # this, tmp391
	addq	$32, %rax	 #, _89
	movl	$3, %edx	 #,
	movq	%rax, %rcx	 # _89,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:176: 		matAtt[static_cast<uint32_t>(element::fire)  ].friction 		   = 0.0f;
	.loc 14 176 64
	pxor	%xmm0, %xmm0	 # tmp392
	movss	%xmm0, 4(%rax)	 # tmp392, _90->friction
 # src\main.cpp:177: 		matAtt[static_cast<uint32_t>(element::metal) ].friction 		   = 0.6f;
	.loc 14 177 48
	movq	192(%rbp), %rax	 # this, tmp393
	addq	$32, %rax	 #, _91
	movl	$4, %edx	 #,
	movq	%rax, %rcx	 # _91,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:177: 		matAtt[static_cast<uint32_t>(element::metal) ].friction 		   = 0.6f;
	.loc 14 177 64
	movss	.LC19(%rip), %xmm0	 #, tmp394
	movss	%xmm0, 4(%rax)	 # tmp394, _92->friction
 # src\main.cpp:178: 		matAtt[static_cast<uint32_t>(element::Custom)].friction 		   = 0.0f;
	.loc 14 178 48
	movq	192(%rbp), %rax	 # this, tmp395
	addq	$32, %rax	 #, _93
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # _93,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:178: 		matAtt[static_cast<uint32_t>(element::Custom)].friction 		   = 0.0f;
	.loc 14 178 64
	pxor	%xmm0, %xmm0	 # tmp396
	movss	%xmm0, 4(%rax)	 # tmp396, _94->friction
 # src\main.cpp:180: 		printf("-> elements::ThermalConductivity... \n");
	.loc 14 180 9
	leaq	.LC20(%rip), %rax	 #, tmp397
	movq	%rax, %rcx	 # tmp397,
	call	_Z6printfPKcz	 #
 # src\main.cpp:181: 		matAtt[static_cast<uint32_t>(element::air)   ].thermalConductivity = 0.025f;
	.loc 14 181 48
	movq	192(%rbp), %rax	 # this, tmp398
	addq	$32, %rax	 #, _95
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _95,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:181: 		matAtt[static_cast<uint32_t>(element::air)   ].thermalConductivity = 0.025f;
	.loc 14 181 70
	movss	.LC21(%rip), %xmm0	 #, tmp399
	movss	%xmm0, 8(%rax)	 # tmp399, _96->thermalConductivity
 # src\main.cpp:182: 		matAtt[static_cast<uint32_t>(element::water) ].thermalConductivity = 0.6f;
	.loc 14 182 48
	movq	192(%rbp), %rax	 # this, tmp400
	addq	$32, %rax	 #, _97
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # _97,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:182: 		matAtt[static_cast<uint32_t>(element::water) ].thermalConductivity = 0.6f;
	.loc 14 182 70
	movss	.LC19(%rip), %xmm0	 #, tmp401
	movss	%xmm0, 8(%rax)	 # tmp401, _98->thermalConductivity
 # src\main.cpp:183: 		matAtt[static_cast<uint32_t>(element::wood)  ].thermalConductivity = 0.12f;
	.loc 14 183 48
	movq	192(%rbp), %rax	 # this, tmp402
	addq	$32, %rax	 #, _99
	movl	$2, %edx	 #,
	movq	%rax, %rcx	 # _99,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:183: 		matAtt[static_cast<uint32_t>(element::wood)  ].thermalConductivity = 0.12f;
	.loc 14 183 70
	movss	.LC22(%rip), %xmm0	 #, tmp403
	movss	%xmm0, 8(%rax)	 # tmp403, _100->thermalConductivity
 # src\main.cpp:184: 		matAtt[static_cast<uint32_t>(element::fire)  ].thermalConductivity = 0.0f;
	.loc 14 184 48
	movq	192(%rbp), %rax	 # this, tmp404
	addq	$32, %rax	 #, _101
	movl	$3, %edx	 #,
	movq	%rax, %rcx	 # _101,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:184: 		matAtt[static_cast<uint32_t>(element::fire)  ].thermalConductivity = 0.0f;
	.loc 14 184 70
	pxor	%xmm0, %xmm0	 # tmp405
	movss	%xmm0, 8(%rax)	 # tmp405, _102->thermalConductivity
 # src\main.cpp:185: 		matAtt[static_cast<uint32_t>(element::metal) ].thermalConductivity = 400.0f;
	.loc 14 185 48
	movq	192(%rbp), %rax	 # this, tmp406
	addq	$32, %rax	 #, _103
	movl	$4, %edx	 #,
	movq	%rax, %rcx	 # _103,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:185: 		matAtt[static_cast<uint32_t>(element::metal) ].thermalConductivity = 400.0f;
	.loc 14 185 70
	movss	.LC23(%rip), %xmm0	 #, tmp407
	movss	%xmm0, 8(%rax)	 # tmp407, _104->thermalConductivity
 # src\main.cpp:186: 		matAtt[static_cast<uint32_t>(element::Custom)].thermalConductivity = 0.0f;
	.loc 14 186 48
	movq	192(%rbp), %rax	 # this, tmp408
	addq	$32, %rax	 #, _105
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # _105,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:186: 		matAtt[static_cast<uint32_t>(element::Custom)].thermalConductivity = 0.0f;
	.loc 14 186 70
	pxor	%xmm0, %xmm0	 # tmp409
	movss	%xmm0, 8(%rax)	 # tmp409, _106->thermalConductivity
 # src\main.cpp:188: 		printf("-> elements::specificHeat... \n");
	.loc 14 188 9
	leaq	.LC24(%rip), %rax	 #, tmp410
	movq	%rax, %rcx	 # tmp410,
	call	_Z6printfPKcz	 #
 # src\main.cpp:189: 		matAtt[static_cast<uint32_t>(element::air)   ].specificHeat 	   = 1005.0f;
	.loc 14 189 48
	movq	192(%rbp), %rax	 # this, tmp411
	addq	$32, %rax	 #, _107
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _107,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:189: 		matAtt[static_cast<uint32_t>(element::air)   ].specificHeat 	   = 1005.0f;
	.loc 14 189 67
	movss	.LC25(%rip), %xmm0	 #, tmp412
	movss	%xmm0, 12(%rax)	 # tmp412, _108->specificHeat
 # src\main.cpp:190: 		matAtt[static_cast<uint32_t>(element::water) ].specificHeat 	   = 4186.0f;
	.loc 14 190 48
	movq	192(%rbp), %rax	 # this, tmp413
	addq	$32, %rax	 #, _109
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # _109,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:190: 		matAtt[static_cast<uint32_t>(element::water) ].specificHeat 	   = 4186.0f;
	.loc 14 190 67
	movss	.LC26(%rip), %xmm0	 #, tmp414
	movss	%xmm0, 12(%rax)	 # tmp414, _110->specificHeat
 # src\main.cpp:191: 		matAtt[static_cast<uint32_t>(element::wood)  ].specificHeat 	   = 2400.0f;
	.loc 14 191 48
	movq	192(%rbp), %rax	 # this, tmp415
	addq	$32, %rax	 #, _111
	movl	$2, %edx	 #,
	movq	%rax, %rcx	 # _111,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:191: 		matAtt[static_cast<uint32_t>(element::wood)  ].specificHeat 	   = 2400.0f;
	.loc 14 191 67
	movss	.LC27(%rip), %xmm0	 #, tmp416
	movss	%xmm0, 12(%rax)	 # tmp416, _112->specificHeat
 # src\main.cpp:192: 		matAtt[static_cast<uint32_t>(element::fire)  ].specificHeat 	   = 0.0f;
	.loc 14 192 48
	movq	192(%rbp), %rax	 # this, tmp417
	addq	$32, %rax	 #, _113
	movl	$3, %edx	 #,
	movq	%rax, %rcx	 # _113,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:192: 		matAtt[static_cast<uint32_t>(element::fire)  ].specificHeat 	   = 0.0f;
	.loc 14 192 67
	pxor	%xmm0, %xmm0	 # tmp418
	movss	%xmm0, 12(%rax)	 # tmp418, _114->specificHeat
 # src\main.cpp:193: 		matAtt[static_cast<uint32_t>(element::metal) ].specificHeat 	   = 450.0f;
	.loc 14 193 48
	movq	192(%rbp), %rax	 # this, tmp419
	addq	$32, %rax	 #, _115
	movl	$4, %edx	 #,
	movq	%rax, %rcx	 # _115,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:193: 		matAtt[static_cast<uint32_t>(element::metal) ].specificHeat 	   = 450.0f;
	.loc 14 193 67
	movss	.LC28(%rip), %xmm0	 #, tmp420
	movss	%xmm0, 12(%rax)	 # tmp420, _116->specificHeat
 # src\main.cpp:194: 		matAtt[static_cast<uint32_t>(element::Custom)].specificHeat 	   = 0.0f;
	.loc 14 194 48
	movq	192(%rbp), %rax	 # this, tmp421
	addq	$32, %rax	 #, _117
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # _117,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:194: 		matAtt[static_cast<uint32_t>(element::Custom)].specificHeat 	   = 0.0f;
	.loc 14 194 67
	pxor	%xmm0, %xmm0	 # tmp422
	movss	%xmm0, 12(%rax)	 # tmp422, _118->specificHeat
 # src\main.cpp:196: 		printf("-> elements::restitution... \n");
	.loc 14 196 9
	leaq	.LC29(%rip), %rax	 #, tmp423
	movq	%rax, %rcx	 # tmp423,
	call	_Z6printfPKcz	 #
 # src\main.cpp:197: 		matAtt[static_cast<uint32_t>(element::air)   ].restitution 		   = 0.0f;
	.loc 14 197 48
	movq	192(%rbp), %rax	 # this, tmp424
	addq	$32, %rax	 #, _119
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _119,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:197: 		matAtt[static_cast<uint32_t>(element::air)   ].restitution 		   = 0.0f;
	.loc 14 197 67
	pxor	%xmm0, %xmm0	 # tmp425
	movss	%xmm0, 16(%rax)	 # tmp425, _120->restitution
 # src\main.cpp:198: 		matAtt[static_cast<uint32_t>(element::water) ].restitution 		   = 0.1f;
	.loc 14 198 48
	movq	192(%rbp), %rax	 # this, tmp426
	addq	$32, %rax	 #, _121
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # _121,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:198: 		matAtt[static_cast<uint32_t>(element::water) ].restitution 		   = 0.1f;
	.loc 14 198 67
	movss	.LC17(%rip), %xmm0	 #, tmp427
	movss	%xmm0, 16(%rax)	 # tmp427, _122->restitution
 # src\main.cpp:199: 		matAtt[static_cast<uint32_t>(element::wood)  ].restitution 		   = 0.3f;
	.loc 14 199 48
	movq	192(%rbp), %rax	 # this, tmp428
	addq	$32, %rax	 #, _123
	movl	$2, %edx	 #,
	movq	%rax, %rcx	 # _123,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:199: 		matAtt[static_cast<uint32_t>(element::wood)  ].restitution 		   = 0.3f;
	.loc 14 199 67
	movss	.LC30(%rip), %xmm0	 #, tmp429
	movss	%xmm0, 16(%rax)	 # tmp429, _124->restitution
 # src\main.cpp:200: 		matAtt[static_cast<uint32_t>(element::fire)  ].restitution 		   = 0.0f;
	.loc 14 200 48
	movq	192(%rbp), %rax	 # this, tmp430
	addq	$32, %rax	 #, _125
	movl	$3, %edx	 #,
	movq	%rax, %rcx	 # _125,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:200: 		matAtt[static_cast<uint32_t>(element::fire)  ].restitution 		   = 0.0f;
	.loc 14 200 67
	pxor	%xmm0, %xmm0	 # tmp431
	movss	%xmm0, 16(%rax)	 # tmp431, _126->restitution
 # src\main.cpp:201: 		matAtt[static_cast<uint32_t>(element::metal) ].restitution 		   = 0.9f;
	.loc 14 201 48
	movq	192(%rbp), %rax	 # this, tmp432
	addq	$32, %rax	 #, _127
	movl	$4, %edx	 #,
	movq	%rax, %rcx	 # _127,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:201: 		matAtt[static_cast<uint32_t>(element::metal) ].restitution 		   = 0.9f;
	.loc 14 201 67
	movss	.LC31(%rip), %xmm0	 #, tmp433
	movss	%xmm0, 16(%rax)	 # tmp433, _128->restitution
 # src\main.cpp:202: 		matAtt[static_cast<uint32_t>(element::Custom)].restitution 		   = 0.0f;
	.loc 14 202 48
	movq	192(%rbp), %rax	 # this, tmp434
	addq	$32, %rax	 #, _129
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # _129,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:202: 		matAtt[static_cast<uint32_t>(element::Custom)].restitution 		   = 0.0f;
	.loc 14 202 67
	pxor	%xmm0, %xmm0	 # tmp435
	movss	%xmm0, 16(%rax)	 # tmp435, _130->restitution
 # src\main.cpp:204: 		printf("-> elements::hardness... \n");
	.loc 14 204 9
	leaq	.LC32(%rip), %rax	 #, tmp436
	movq	%rax, %rcx	 # tmp436,
	call	_Z6printfPKcz	 #
 # src\main.cpp:205: 		matAtt[static_cast<uint32_t>(element::air)   ].hardness 		   = 0.0f;
	.loc 14 205 48
	movq	192(%rbp), %rax	 # this, tmp437
	addq	$32, %rax	 #, _131
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _131,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:205: 		matAtt[static_cast<uint32_t>(element::air)   ].hardness 		   = 0.0f;
	.loc 14 205 64
	pxor	%xmm0, %xmm0	 # tmp438
	movss	%xmm0, 20(%rax)	 # tmp438, _132->hardness
 # src\main.cpp:206: 		matAtt[static_cast<uint32_t>(element::water) ].hardness 		   = 0.1f;
	.loc 14 206 48
	movq	192(%rbp), %rax	 # this, tmp439
	addq	$32, %rax	 #, _133
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # _133,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:206: 		matAtt[static_cast<uint32_t>(element::water) ].hardness 		   = 0.1f;
	.loc 14 206 64
	movss	.LC17(%rip), %xmm0	 #, tmp440
	movss	%xmm0, 20(%rax)	 # tmp440, _134->hardness
 # src\main.cpp:207: 		matAtt[static_cast<uint32_t>(element::wood)  ].hardness 		   = 0.3f;
	.loc 14 207 48
	movq	192(%rbp), %rax	 # this, tmp441
	addq	$32, %rax	 #, _135
	movl	$2, %edx	 #,
	movq	%rax, %rcx	 # _135,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:207: 		matAtt[static_cast<uint32_t>(element::wood)  ].hardness 		   = 0.3f;
	.loc 14 207 64
	movss	.LC30(%rip), %xmm0	 #, tmp442
	movss	%xmm0, 20(%rax)	 # tmp442, _136->hardness
 # src\main.cpp:208: 		matAtt[static_cast<uint32_t>(element::fire)  ].hardness 		   = 0.0f;
	.loc 14 208 48
	movq	192(%rbp), %rax	 # this, tmp443
	addq	$32, %rax	 #, _137
	movl	$3, %edx	 #,
	movq	%rax, %rcx	 # _137,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:208: 		matAtt[static_cast<uint32_t>(element::fire)  ].hardness 		   = 0.0f;
	.loc 14 208 64
	pxor	%xmm0, %xmm0	 # tmp444
	movss	%xmm0, 20(%rax)	 # tmp444, _138->hardness
 # src\main.cpp:209: 		matAtt[static_cast<uint32_t>(element::metal) ].hardness 		   = 0.9f;
	.loc 14 209 48
	movq	192(%rbp), %rax	 # this, tmp445
	addq	$32, %rax	 #, _139
	movl	$4, %edx	 #,
	movq	%rax, %rcx	 # _139,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:209: 		matAtt[static_cast<uint32_t>(element::metal) ].hardness 		   = 0.9f;
	.loc 14 209 64
	movss	.LC31(%rip), %xmm0	 #, tmp446
	movss	%xmm0, 20(%rax)	 # tmp446, _140->hardness
 # src\main.cpp:210: 		matAtt[static_cast<uint32_t>(element::Custom)].hardness 		   = 10000.0f;
	.loc 14 210 48
	movq	192(%rbp), %rax	 # this, tmp447
	addq	$32, %rax	 #, _141
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # _141,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:210: 		matAtt[static_cast<uint32_t>(element::Custom)].hardness 		   = 10000.0f;
	.loc 14 210 64
	movss	.LC33(%rip), %xmm0	 #, tmp448
	movss	%xmm0, 20(%rax)	 # tmp448, _142->hardness
 # src\main.cpp:212: 		printf("-> elements::hardness... \n");
	.loc 14 212 9
	leaq	.LC32(%rip), %rax	 #, tmp449
	movq	%rax, %rcx	 # tmp449,
	call	_Z6printfPKcz	 #
 # src\main.cpp:213: 		matAtt[static_cast<uint32_t>(element::air)   ].liquid 			   = false;
	.loc 14 213 48
	movq	192(%rbp), %rax	 # this, tmp450
	addq	$32, %rax	 #, _143
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _143,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:213: 		matAtt[static_cast<uint32_t>(element::air)   ].liquid 			   = false;
	.loc 14 213 63
	movb	$0, 24(%rax)	 #, _144->liquid
 # src\main.cpp:214: 		matAtt[static_cast<uint32_t>(element::water) ].liquid 			   = true;
	.loc 14 214 48
	movq	192(%rbp), %rax	 # this, tmp451
	addq	$32, %rax	 #, _145
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # _145,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:214: 		matAtt[static_cast<uint32_t>(element::water) ].liquid 			   = true;
	.loc 14 214 63
	movb	$1, 24(%rax)	 #, _146->liquid
 # src\main.cpp:215: 		matAtt[static_cast<uint32_t>(element::wood)  ].liquid 			   = false;
	.loc 14 215 48
	movq	192(%rbp), %rax	 # this, tmp452
	addq	$32, %rax	 #, _147
	movl	$2, %edx	 #,
	movq	%rax, %rcx	 # _147,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:215: 		matAtt[static_cast<uint32_t>(element::wood)  ].liquid 			   = false;
	.loc 14 215 63
	movb	$0, 24(%rax)	 #, _148->liquid
 # src\main.cpp:216: 		matAtt[static_cast<uint32_t>(element::fire)  ].liquid 			   = false;
	.loc 14 216 48
	movq	192(%rbp), %rax	 # this, tmp453
	addq	$32, %rax	 #, _149
	movl	$3, %edx	 #,
	movq	%rax, %rcx	 # _149,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:216: 		matAtt[static_cast<uint32_t>(element::fire)  ].liquid 			   = false;
	.loc 14 216 63
	movb	$0, 24(%rax)	 #, _150->liquid
 # src\main.cpp:217: 		matAtt[static_cast<uint32_t>(element::metal) ].liquid 			   = false;
	.loc 14 217 48
	movq	192(%rbp), %rax	 # this, tmp454
	addq	$32, %rax	 #, _151
	movl	$4, %edx	 #,
	movq	%rax, %rcx	 # _151,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:217: 		matAtt[static_cast<uint32_t>(element::metal) ].liquid 			   = false;
	.loc 14 217 63
	movb	$0, 24(%rax)	 #, _152->liquid
 # src\main.cpp:218: 		matAtt[static_cast<uint32_t>(element::Custom)].liquid 			   = false;
	.loc 14 218 48
	movq	192(%rbp), %rax	 # this, tmp455
	addq	$32, %rax	 #, _153
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # _153,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
 # src\main.cpp:218: 		matAtt[static_cast<uint32_t>(element::Custom)].liquid 			   = false;
	.loc 14 218 63
	movb	$0, 24(%rax)	 #, _154->liquid
 # src\main.cpp:222: 		printf("matrix initialized: CELLS: [%d] BPC: [%d]\n\n", (w*h*d), sizeof(CELL_BACK_BUFFER[0]));
	.loc 14 222 60
	movq	192(%rbp), %rax	 # this, tmp456
	movl	40(%rax), %edx	 # this_184(D)->w, _155
 # src\main.cpp:222: 		printf("matrix initialized: CELLS: [%d] BPC: [%d]\n\n", (w*h*d), sizeof(CELL_BACK_BUFFER[0]));
	.loc 14 222 62
	movq	192(%rbp), %rax	 # this, tmp457
	movl	44(%rax), %eax	 # this_184(D)->h, _156
 # src\main.cpp:222: 		printf("matrix initialized: CELLS: [%d] BPC: [%d]\n\n", (w*h*d), sizeof(CELL_BACK_BUFFER[0]));
	.loc 14 222 61
	imull	%eax, %edx	 # _156, _157
 # src\main.cpp:222: 		printf("matrix initialized: CELLS: [%d] BPC: [%d]\n\n", (w*h*d), sizeof(CELL_BACK_BUFFER[0]));
	.loc 14 222 64
	movq	192(%rbp), %rax	 # this, tmp458
	movl	48(%rax), %eax	 # this_184(D)->d, _158
 # src\main.cpp:222: 		printf("matrix initialized: CELLS: [%d] BPC: [%d]\n\n", (w*h*d), sizeof(CELL_BACK_BUFFER[0]));
	.loc 14 222 9
	imull	%edx, %eax	 # _157, _159
	movl	$32, %r8d	 #,
	movl	%eax, %edx	 # _159,
	leaq	.LC34(%rip), %rax	 #, tmp459
	movq	%rax, %rcx	 # tmp459,
	call	_Z6printfPKcz	 #
 # src\main.cpp:223: 		return width * height * depth;
	.loc 14 223 16
	movl	200(%rbp), %eax	 # width, tmp460
	imull	208(%rbp), %eax	 # height, _160
 # src\main.cpp:223: 		return width * height * depth;
	.loc 14 223 27
	imull	216(%rbp), %eax	 # depth, _320
	jmp	.L207	 #
.L205:
.LBB121:
.LBB117:
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 118
	movq	%rax, %rdi	 #, tmp464
	testb	%sil, %sil	 # cleanup.101_170
	je	.L202	 #,
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 118 is_stmt 0 discriminator 22
	movq	%rbp, %rax	 #, tmp462
	movq	%rax, %rcx	 # tmp462,
	call	_ZN6MATRIX4cellD1Ev	 #
.L202:
	movq	%rdi, %rsi	 # tmp464, tmp463
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 72 is_stmt 1
	testb	%bl, %bl	 # cleanup.100_168
	je	.L203	 #,
 # src\main.cpp:144: 			cell back_buffer_cell = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : WriteDataTo(x, y, z, cell(element::air));
	.loc 14 144 72 is_stmt 0 discriminator 23
	leaq	-32(%rbp), %rax	 #, tmp467
	movq	%rax, %rcx	 # tmp467,
	call	_ZN6MATRIX4cellD1Ev	 #
.L203:
	movq	%rsi, %rax	 # tmp463, D.237810
	movq	%rax, %rcx	 # D.237810,
	call	_Unwind_Resume	 #
.L206:
.LBE117:
.LBE121:
.LBB122:
.LBB120:
 # src\main.cpp:152: 			WriteDataTo(x, y, z, cell(static_cast<element>(i - FlattenedIndex(w >> 1, h >> 1, d >> 1)))); ++i1;
	.loc 14 152 25 is_stmt 1
	movq	%rax, %rbx	 #, tmp469
	leaq	64(%rbp), %rax	 #, tmp468
	movq	%rax, %rcx	 # tmp468,
	call	_ZN6MATRIX4cellD1Ev	 #
	movq	%rbx, %rax	 # tmp469, D.237811
	movq	%rax, %rcx	 # D.237811,
	call	_Unwind_Resume	 #
.LEHE3:
.L207:
.LBE120:
.LBE122:
 # src\main.cpp:224: 	}
	.loc 14 224 2
	addq	$280, %rsp	 #,
	popq	%rbx	 #
.LCFI272:
	popq	%rsi	 #
.LCFI273:
	popq	%rdi	 #
.LCFI274:
	popq	%rbp	 #
.LCFI275:
	ret	
.LFE10917:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA10917:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE10917-.LLSDACSB10917
.LLSDACSB10917:
	.uleb128 .LEHB0-.LFB10917
	.uleb128 .LEHE0-.LEHB0
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB1-.LFB10917
	.uleb128 .LEHE1-.LEHB1
	.uleb128 .L205-.LFB10917
	.uleb128 0
	.uleb128 .LEHB2-.LFB10917
	.uleb128 .LEHE2-.LEHB2
	.uleb128 .L206-.LFB10917
	.uleb128 0
	.uleb128 .LEHB3-.LFB10917
	.uleb128 .LEHE3-.LEHB3
	.uleb128 0
	.uleb128 0
.LLSDACSE10917:
	.section	.text$_ZN6MATRIX10InitMatrixEjjj,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZN6MATRIX12AccessDataAtEjjj,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX12AccessDataAtEjjj
	.def	_ZN6MATRIX12AccessDataAtEjjj;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX12AccessDataAtEjjj
_ZN6MATRIX12AccessDataAtEjjj:
.LFB10923:
	.loc 14 226 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI276:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI277:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI278:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI279:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 40(%rbp)	 # this, this
	movl	%r8d, 48(%rbp)	 # x, x
	movl	%r9d, 56(%rbp)	 # y, y
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 10
	movq	40(%rbp), %rax	 # this, tmp96
	movl	40(%rax), %eax	 # this_15(D)->w, _1
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 12
	cmpl	%eax, 48(%rbp)	 # _1, x
	jb	.L209	 #,
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 14 discriminator 1
	movq	40(%rbp), %rax	 # this, tmp97
	movl	40(%rax), %eax	 # this_15(D)->w, _2
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 12 discriminator 1
	subl	$1, %eax	 #, iftmp.71_11
	jmp	.L210	 #
.L209:
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 12 is_stmt 0 discriminator 2
	movl	48(%rbp), %eax	 # x, iftmp.71_11
.L210:
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 5 is_stmt 1 discriminator 4
	movl	%eax, 48(%rbp)	 # iftmp.71_11, x
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 30 discriminator 4
	movq	40(%rbp), %rax	 # this, tmp98
	movl	44(%rax), %eax	 # this_15(D)->h, _3
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 32 discriminator 4
	cmpl	%eax, 56(%rbp)	 # _3, y
	jb	.L211	 #,
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 34 discriminator 5
	movq	40(%rbp), %rax	 # this, tmp99
	movl	44(%rax), %eax	 # this_15(D)->h, _4
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 32 discriminator 5
	subl	$1, %eax	 #, iftmp.72_12
	jmp	.L212	 #
.L211:
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 32 is_stmt 0 discriminator 6
	movl	56(%rbp), %eax	 # y, iftmp.72_12
.L212:
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 25 is_stmt 1 discriminator 8
	movl	%eax, 56(%rbp)	 # iftmp.72_12, y
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 50 discriminator 8
	movq	40(%rbp), %rax	 # this, tmp100
	movl	48(%rax), %eax	 # this_15(D)->d, _5
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 52 discriminator 8
	cmpl	%eax, 64(%rbp)	 # _5, z
	jb	.L213	 #,
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 54 discriminator 9
	movq	40(%rbp), %rax	 # this, tmp101
	movl	48(%rax), %eax	 # this_15(D)->d, _6
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 52 discriminator 9
	subl	$1, %eax	 #, iftmp.73_13
	jmp	.L214	 #
.L213:
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 52 is_stmt 0 discriminator 10
	movl	64(%rbp), %eax	 # z, iftmp.73_13
.L214:
 # src\main.cpp:228: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 228 45 is_stmt 1 discriminator 12
	movl	%eax, 64(%rbp)	 # iftmp.73_13, z
 # src\main.cpp:229: 		return CELL_BACK_BUFFER[FlattenedIndex(x, y, z)]; // [x][y][z]
	.loc 14 229 10 discriminator 12
	movq	40(%rbp), %rax	 # this, tmp102
	movq	24(%rax), %rbx	 # this_15(D)->CELL_BACK_BUFFER, _28
 # src\main.cpp:229: 		return CELL_BACK_BUFFER[FlattenedIndex(x, y, z)]; // [x][y][z]
	.loc 14 229 41 discriminator 12
	movl	64(%rbp), %r8d	 # z, tmp103
	movl	56(%rbp), %ecx	 # y, tmp104
	movl	48(%rbp), %edx	 # x, tmp105
	movq	40(%rbp), %rax	 # this, tmp106
	movl	%r8d, %r9d	 # tmp103,
	movl	%ecx, %r8d	 # tmp104,
	movq	%rax, %rcx	 # tmp106,
	call	_ZN6MATRIX14FlattenedIndexEjjj	 #
	movl	%eax, %eax	 # _7, _8
 # src\main.cpp:229: 		return CELL_BACK_BUFFER[FlattenedIndex(x, y, z)]; // [x][y][z]
	.loc 14 229 50 discriminator 12
	salq	$5, %rax	 #, _9
	leaq	(%rbx,%rax), %r8	 #, _10
	movq	32(%rbp), %rcx	 # <retval>, tmp107
	movq	(%r8), %rax	 # MEM[(const struct cell &)_10], tmp108
	movq	8(%r8), %rdx	 # MEM[(const struct cell &)_10],
	movq	%rax, (%rcx)	 # tmp108, *_30(D)
	movq	%rdx, 8(%rcx)	 #, *_30(D)
	movq	16(%r8), %rax	 # MEM[(const struct cell &)_10], tmp109
	movq	24(%r8), %rdx	 # MEM[(const struct cell &)_10],
	movq	%rax, 16(%rcx)	 # tmp109, *_30(D)
	movq	%rdx, 24(%rcx)	 #, *_30(D)
 # src\main.cpp:230: 	}
	.loc 14 230 2 discriminator 12
	movq	32(%rbp), %rax	 # <retval>,
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI280:
	popq	%rbp	 #
.LCFI281:
	ret	
.LFE10923:
	.seh_endproc
	.section	.text$_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE
	.def	_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE
_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE:
.LFB10924:
	.loc 14 232 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI282:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI283:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI284:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI285:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 40(%rbp)	 # this, this
	movl	%r8d, 48(%rbp)	 # x, x
	movl	%r9d, 56(%rbp)	 # y, y
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 10
	movq	40(%rbp), %rax	 # this, tmp101
	movl	40(%rax), %eax	 # this_19(D)->w, _1
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 12
	cmpl	%eax, 48(%rbp)	 # _1, x
	jb	.L217	 #,
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 14 discriminator 1
	movq	40(%rbp), %rax	 # this, tmp102
	movl	40(%rax), %eax	 # this_19(D)->w, _2
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 12 discriminator 1
	subl	$1, %eax	 #, iftmp.68_15
	jmp	.L218	 #
.L217:
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 12 is_stmt 0 discriminator 2
	movl	48(%rbp), %eax	 # x, iftmp.68_15
.L218:
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 5 is_stmt 1 discriminator 4
	movl	%eax, 48(%rbp)	 # iftmp.68_15, x
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 30 discriminator 4
	movq	40(%rbp), %rax	 # this, tmp103
	movl	44(%rax), %eax	 # this_19(D)->h, _3
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 32 discriminator 4
	cmpl	%eax, 56(%rbp)	 # _3, y
	jb	.L219	 #,
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 34 discriminator 5
	movq	40(%rbp), %rax	 # this, tmp104
	movl	44(%rax), %eax	 # this_19(D)->h, _4
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 32 discriminator 5
	subl	$1, %eax	 #, iftmp.69_16
	jmp	.L220	 #
.L219:
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 32 is_stmt 0 discriminator 6
	movl	56(%rbp), %eax	 # y, iftmp.69_16
.L220:
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 25 is_stmt 1 discriminator 8
	movl	%eax, 56(%rbp)	 # iftmp.69_16, y
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 50 discriminator 8
	movq	40(%rbp), %rax	 # this, tmp105
	movl	48(%rax), %eax	 # this_19(D)->d, _5
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 52 discriminator 8
	cmpl	%eax, 64(%rbp)	 # _5, z
	jb	.L221	 #,
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 54 discriminator 9
	movq	40(%rbp), %rax	 # this, tmp106
	movl	48(%rax), %eax	 # this_19(D)->d, _6
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 52 discriminator 9
	subl	$1, %eax	 #, iftmp.70_17
	jmp	.L222	 #
.L221:
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 52 is_stmt 0 discriminator 10
	movl	64(%rbp), %eax	 # z, iftmp.70_17
.L222:
 # src\main.cpp:234: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 234 45 is_stmt 1 discriminator 12
	movl	%eax, 64(%rbp)	 # iftmp.70_17, z
 # src\main.cpp:235: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)] = _data; // [x][y][z]
	.loc 14 235 3 discriminator 12
	movq	40(%rbp), %rax	 # this, tmp107
	movq	24(%rax), %rbx	 # this_19(D)->CELL_BACK_BUFFER, _32
 # src\main.cpp:235: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)] = _data; // [x][y][z]
	.loc 14 235 34 discriminator 12
	movl	64(%rbp), %r8d	 # z, tmp108
	movl	56(%rbp), %ecx	 # y, tmp109
	movl	48(%rbp), %edx	 # x, tmp110
	movq	40(%rbp), %rax	 # this, tmp111
	movl	%r8d, %r9d	 # tmp108,
	movl	%ecx, %r8d	 # tmp109,
	movq	%rax, %rcx	 # tmp111,
	call	_ZN6MATRIX14FlattenedIndexEjjj	 #
	movl	%eax, %eax	 # _7, _8
 # src\main.cpp:235: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)] = _data; // [x][y][z]
	.loc 14 235 43 discriminator 12
	salq	$5, %rax	 #, _9
	leaq	(%rbx,%rax), %r8	 #, _10
 # src\main.cpp:235: 		CELL_BACK_BUFFER[FlattenedIndex(x, y, z)] = _data; // [x][y][z]
	.loc 14 235 45 discriminator 12
	movq	72(%rbp), %rcx	 # _data, tmp112
	movq	(%rcx), %rax	 # *_data_34(D), tmp113
	movq	8(%rcx), %rdx	 # *_data_34(D),
	movq	%rax, (%r8)	 # tmp113, *_10
	movq	%rdx, 8(%r8)	 #, *_10
	movq	16(%rcx), %rax	 # *_data_34(D), tmp114
	movq	24(%rcx), %rdx	 # *_data_34(D),
	movq	%rax, 16(%r8)	 # tmp114, *_10
	movq	%rdx, 24(%r8)	 #, *_10
 # src\main.cpp:236: 		return CELL_BACK_BUFFER[FlattenedIndex(x, y, z)];
	.loc 14 236 10 discriminator 12
	movq	40(%rbp), %rax	 # this, tmp115
	movq	24(%rax), %rbx	 # this_19(D)->CELL_BACK_BUFFER, _36
 # src\main.cpp:236: 		return CELL_BACK_BUFFER[FlattenedIndex(x, y, z)];
	.loc 14 236 41 discriminator 12
	movl	64(%rbp), %r8d	 # z, tmp116
	movl	56(%rbp), %ecx	 # y, tmp117
	movl	48(%rbp), %edx	 # x, tmp118
	movq	40(%rbp), %rax	 # this, tmp119
	movl	%r8d, %r9d	 # tmp116,
	movl	%ecx, %r8d	 # tmp117,
	movq	%rax, %rcx	 # tmp119,
	call	_ZN6MATRIX14FlattenedIndexEjjj	 #
	movl	%eax, %eax	 # _11, _12
 # src\main.cpp:236: 		return CELL_BACK_BUFFER[FlattenedIndex(x, y, z)];
	.loc 14 236 50 discriminator 12
	salq	$5, %rax	 #, _13
	leaq	(%rbx,%rax), %r8	 #, _14
	movq	32(%rbp), %rcx	 # <retval>, tmp120
	movq	(%r8), %rax	 # MEM[(const struct cell &)_14], tmp121
	movq	8(%r8), %rdx	 # MEM[(const struct cell &)_14],
	movq	%rax, (%rcx)	 # tmp121, *_38(D)
	movq	%rdx, 8(%rcx)	 #, *_38(D)
	movq	16(%r8), %rax	 # MEM[(const struct cell &)_14], tmp122
	movq	24(%r8), %rdx	 # MEM[(const struct cell &)_14],
	movq	%rax, 16(%rcx)	 # tmp122, *_38(D)
	movq	%rdx, 24(%rcx)	 #, *_38(D)
 # src\main.cpp:237: 	}
	.loc 14 237 2 discriminator 12
	movq	32(%rbp), %rax	 # <retval>,
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI286:
	popq	%rbp	 #
.LCFI287:
	ret	
.LFE10924:
	.seh_endproc
	.section	.text$_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE
	.def	_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE
_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE:
.LFB10925:
	.loc 14 239 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI288:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI289:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # hwnd, hwnd
	movq	%r8, 32(%rbp)	 # running, running
.LBB123:
 # src\main.cpp:241: 		if(running)
	.loc 14 241 6
	movq	32(%rbp), %rax	 # running, tmp103
	movq	%rax, %rcx	 # tmp103,
	call	_ZNKSt6atomicIbEcvbEv	 #
 # src\main.cpp:241: 		if(running)
	.loc 14 241 3
	testb	%al, %al	 # retval.140_27
	je	.L231	 #,
.LBB124:
.LBB125:
 # src\main.cpp:243: 			for(uint32_t i=0; i<=w*h*d -1; ++i)
	.loc 14 243 17
	movl	$0, -4(%rbp)	 #, i
 # src\main.cpp:243: 			for(uint32_t i=0; i<=w*h*d -1; ++i)
	.loc 14 243 4
	jmp	.L226	 #
.L230:
 # src\main.cpp:245: 				if(!running){break;}
	.loc 14 245 9
	movq	32(%rbp), %rax	 # running, tmp104
	movq	%rax, %rcx	 # tmp104,
	call	_ZNKSt6atomicIbEcvbEv	 #
 # src\main.cpp:245: 				if(!running){break;}
	.loc 14 245 8
	xorl	$1, %eax	 #, retval.141_31
 # src\main.cpp:245: 				if(!running){break;}
	.loc 14 245 5
	testb	%al, %al	 # retval.141_31
	jne	.L232	 #,
 # src\main.cpp:247: 				if(CELL_BACK_BUFFER[i].MaterialType != CELL_FRONT_BUFFER[i].MaterialType)
	.loc 14 247 8
	movq	16(%rbp), %rax	 # this, tmp105
	movq	24(%rax), %rax	 # this_29(D)->CELL_BACK_BUFFER, _2
 # src\main.cpp:247: 				if(CELL_BACK_BUFFER[i].MaterialType != CELL_FRONT_BUFFER[i].MaterialType)
	.loc 14 247 25
	movl	-4(%rbp), %edx	 # i, _3
 # src\main.cpp:247: 				if(CELL_BACK_BUFFER[i].MaterialType != CELL_FRONT_BUFFER[i].MaterialType)
	.loc 14 247 26
	salq	$5, %rdx	 #, _4
	addq	%rdx, %rax	 # _4, _5
 # src\main.cpp:247: 				if(CELL_BACK_BUFFER[i].MaterialType != CELL_FRONT_BUFFER[i].MaterialType)
	.loc 14 247 28
	movl	28(%rax), %edx	 # _5->MaterialType, _6
 # src\main.cpp:247: 				if(CELL_BACK_BUFFER[i].MaterialType != CELL_FRONT_BUFFER[i].MaterialType)
	.loc 14 247 44
	movq	16(%rbp), %rax	 # this, tmp106
	movq	8(%rax), %rax	 # this_29(D)->CELL_FRONT_BUFFER, _7
 # src\main.cpp:247: 				if(CELL_BACK_BUFFER[i].MaterialType != CELL_FRONT_BUFFER[i].MaterialType)
	.loc 14 247 62
	movl	-4(%rbp), %ecx	 # i, _8
 # src\main.cpp:247: 				if(CELL_BACK_BUFFER[i].MaterialType != CELL_FRONT_BUFFER[i].MaterialType)
	.loc 14 247 63
	salq	$5, %rcx	 #, _9
	addq	%rcx, %rax	 # _9, _10
 # src\main.cpp:247: 				if(CELL_BACK_BUFFER[i].MaterialType != CELL_FRONT_BUFFER[i].MaterialType)
	.loc 14 247 65
	movl	28(%rax), %eax	 # _10->MaterialType, _11
 # src\main.cpp:247: 				if(CELL_BACK_BUFFER[i].MaterialType != CELL_FRONT_BUFFER[i].MaterialType)
	.loc 14 247 5
	cmpl	%eax, %edx	 # _11, _6
	je	.L229	 #,
 # src\main.cpp:250: 					std::swap(CELL_FRONT_BUFFER, CELL_BACK_BUFFER);
	.loc 14 250 35
	movq	16(%rbp), %rax	 # this, tmp107
	leaq	24(%rax), %rdx	 #, _12
 # src\main.cpp:250: 					std::swap(CELL_FRONT_BUFFER, CELL_BACK_BUFFER);
	.loc 14 250 16
	movq	16(%rbp), %rax	 # this, tmp108
	addq	$8, %rax	 #, _13
 # src\main.cpp:250: 					std::swap(CELL_FRONT_BUFFER, CELL_BACK_BUFFER);
	.loc 14 250 15
	movq	%rax, %rcx	 # _13,
	call	_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_	 #
 # src\main.cpp:251: 					InvalidateRect(hwnd, nullptr, FALSE);
	.loc 14 251 20
	movq	24(%rbp), %rax	 # hwnd, tmp109
	movl	$0, %r8d	 #,
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp109,
	movq	__imp_InvalidateRect(%rip), %rax	 #, tmp110
	call	*%rax	 # tmp110
.LVL7:
 # src\main.cpp:252: 					break;
	.loc 14 252 6
	jmp	.L225	 #
.L229:
 # src\main.cpp:243: 			for(uint32_t i=0; i<=w*h*d -1; ++i)
	.loc 14 243 4 discriminator 2
	addl	$1, -4(%rbp)	 #, i
.L226:
 # src\main.cpp:243: 			for(uint32_t i=0; i<=w*h*d -1; ++i)
	.loc 14 243 25 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp111
	movl	40(%rax), %edx	 # this_29(D)->w, _14
 # src\main.cpp:243: 			for(uint32_t i=0; i<=w*h*d -1; ++i)
	.loc 14 243 27 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp112
	movl	44(%rax), %eax	 # this_29(D)->h, _15
 # src\main.cpp:243: 			for(uint32_t i=0; i<=w*h*d -1; ++i)
	.loc 14 243 26 discriminator 1
	imull	%eax, %edx	 # _15, _16
 # src\main.cpp:243: 			for(uint32_t i=0; i<=w*h*d -1; ++i)
	.loc 14 243 29 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp113
	movl	48(%rax), %eax	 # this_29(D)->d, _17
 # src\main.cpp:243: 			for(uint32_t i=0; i<=w*h*d -1; ++i)
	.loc 14 243 28 discriminator 1
	imull	%edx, %eax	 # _16, _18
 # src\main.cpp:243: 			for(uint32_t i=0; i<=w*h*d -1; ++i)
	.loc 14 243 31 discriminator 1
	subl	$1, %eax	 #, _19
 # src\main.cpp:243: 			for(uint32_t i=0; i<=w*h*d -1; ++i)
	.loc 14 243 23 discriminator 1
	cmpl	-4(%rbp), %eax	 # i, _19
	jnb	.L230	 #,
.LBE125:
.LBE124:
.LBE123:
 # src\main.cpp:256: 	}
	.loc 14 256 2
	jmp	.L231	 #
.L232:
.LBB128:
.LBB127:
.LBB126:
 # src\main.cpp:245: 				if(!running){break;}
	.loc 14 245 18
	nop	
.L225:
.L231:
.LBE126:
.LBE127:
.LBE128:
 # src\main.cpp:256: 	}
	.loc 14 256 2
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI290:
	ret	
.LFE10925:
	.seh_endproc
	.section	.text$_ZN6MATRIX11FlushMatrixERSt6atomicIbEjjjjjj,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX11FlushMatrixERSt6atomicIbEjjjjjj
	.def	_ZN6MATRIX11FlushMatrixERSt6atomicIbEjjjjjj;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX11FlushMatrixERSt6atomicIbEjjjjjj
_ZN6MATRIX11FlushMatrixERSt6atomicIbEjjjjjj:
.LFB10927:
	.loc 14 258 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI291:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI292:
	subq	$280, %rsp	 #,
	.seh_stackalloc	280
.LCFI293:
	leaq	128(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 128
.LCFI294:
	.seh_endprologue
	movq	%rcx, 176(%rbp)	 # this, this
	movq	%rdx, 184(%rbp)	 # running, running
	movl	%r8d, 192(%rbp)	 # x1, x1
	movl	%r9d, 200(%rbp)	 # x2, x2
.LBB129:
 # src\main.cpp:260: 		for(uint32_t z=z1; z<=z2; ++z)
	.loc 14 260 16
	movl	224(%rbp), %eax	 # z1, tmp95
	movl	%eax, 140(%rbp)	 # tmp95, z
 # src\main.cpp:260: 		for(uint32_t z=z1; z<=z2; ++z)
	.loc 14 260 3
	jmp	.L234	 #
.L245:
.LBB130:
 # src\main.cpp:262: 			if(!running) break;
	.loc 14 262 8
	movq	184(%rbp), %rax	 # running, tmp96
	movq	%rax, %rcx	 # tmp96,
	call	_ZNKSt6atomicIbEcvbEv	 #
 # src\main.cpp:262: 			if(!running) break;
	.loc 14 262 7
	xorl	$1, %eax	 #, retval.120_30
 # src\main.cpp:262: 			if(!running) break;
	.loc 14 262 4
	testb	%al, %al	 # retval.120_30
	jne	.L249	 #,
.LBB131:
 # src\main.cpp:264: 			for(uint32_t y=y1; y<=y2; ++y)
	.loc 14 264 17
	movl	208(%rbp), %eax	 # y1, tmp97
	movl	%eax, 136(%rbp)	 # tmp97, y
 # src\main.cpp:264: 			for(uint32_t y=y1; y<=y2; ++y)
	.loc 14 264 4
	jmp	.L237	 #
.L244:
.LBB132:
.LBB133:
 # src\main.cpp:266: 				for(uint32_t x=x1; x<=x2; ++x)
	.loc 14 266 18
	movl	192(%rbp), %eax	 # x1, tmp98
	movl	%eax, 132(%rbp)	 # tmp98, x
 # src\main.cpp:266: 				for(uint32_t x=x1; x<=x2; ++x)
	.loc 14 266 5
	jmp	.L238	 #
.L243:
.LBB134:
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 115
	movl	$0, %ebx	 #, cleanup.121_14
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 50
	cmpl	$0, 132(%rbp)	 #, x
	je	.L239	 #,
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 29 discriminator 2
	movq	176(%rbp), %rax	 # this, tmp99
	movl	40(%rax), %eax	 # this_40(D)->w, _2
	subl	$1, %eax	 #, _3
	cmpl	%eax, 132(%rbp)	 # _3, x
	je	.L239	 #,
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 29 is_stmt 0 discriminator 4
	cmpl	$0, 136(%rbp)	 #, y
	je	.L239	 #,
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 29 discriminator 6
	movq	176(%rbp), %rax	 # this, tmp100
	movl	44(%rax), %eax	 # this_40(D)->h, _4
	subl	$1, %eax	 #, _5
	cmpl	%eax, 136(%rbp)	 # _5, y
	je	.L239	 #,
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 29 discriminator 8
	cmpl	$0, 140(%rbp)	 #, z
	je	.L239	 #,
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 29 discriminator 10
	movq	176(%rbp), %rax	 # this, tmp101
	movl	48(%rax), %eax	 # this_40(D)->d, _6
	subl	$1, %eax	 #, _7
	cmpl	%eax, 140(%rbp)	 # _7, z
	jne	.L240	 #,
.L239:
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 73 is_stmt 1 discriminator 11
	movq	%rbp, %rax	 #, tmp102
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # tmp102,
	call	_ZN6MATRIX4cellC1ENS_7elementE	 #
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 115 discriminator 11
	movl	$1, %ebx	 #, cleanup.121_14
	leaq	-80(%rbp), %rax	 #, tmp103
	movl	136(%rbp), %r9d	 # y, tmp104
	movl	132(%rbp), %r8d	 # x, tmp105
	movq	176(%rbp), %rdx	 # this, tmp106
	movq	%rbp, %rcx	 #, tmp107
	movq	%rcx, 40(%rsp)	 # tmp107,
	movl	140(%rbp), %ecx	 # z, tmp108
	movl	%ecx, 32(%rsp)	 # tmp108,
	movq	%rax, %rcx	 # tmp103,
	call	_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE	 #
	jmp	.L241	 #
.L240:
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 115 is_stmt 0 discriminator 12
	leaq	-80(%rbp), %rax	 #, tmp109
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp109,
	call	_ZN6MATRIX4cellC1ENS_7elementE	 #
.L241:
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 73 is_stmt 1 discriminator 14
	testb	%bl, %bl	 # cleanup.121_14
	je	.L242	 #,
 # src\main.cpp:268: 					cell genericCellRead = CHECK_MATRIX_WALLS() ? WriteDataTo(x, y, z, cell(element::Custom)) : cell(element::air);
	.loc 14 268 73 is_stmt 0 discriminator 15
	movq	%rbp, %rax	 #, tmp110
	movq	%rax, %rcx	 # tmp110,
	call	_ZN6MATRIX4cellD1Ev	 #
.L242:
 # src\main.cpp:269: 					MaterialAttributes MA = ReadCellAttributes(genericCellRead); // read that these cells can't be destroyed... pretty much
	.loc 14 269 48 is_stmt 1 discriminator 17
	movq	-80(%rbp), %rax	 # genericCellRead, tmp111
	movq	-72(%rbp), %rdx	 # genericCellRead,
	movq	%rax, 32(%rbp)	 # tmp111, D.208634
	movq	%rdx, 40(%rbp)	 #, D.208634
	movq	-64(%rbp), %rax	 # genericCellRead, tmp112
	movq	-56(%rbp), %rdx	 # genericCellRead,
	movq	%rax, 48(%rbp)	 # tmp112, D.208634
	movq	%rdx, 56(%rbp)	 #, D.208634
	leaq	-48(%rbp), %rax	 #, tmp113
	leaq	32(%rbp), %rcx	 #, tmp114
	movq	176(%rbp), %rdx	 # this, tmp115
	movq	%rcx, %r8	 # tmp114,
	movq	%rax, %rcx	 # tmp113,
.LEHB4:
	call	_ZN6MATRIX18ReadCellAttributesENS_4cellE	 #
.LEHE4:
 # src\main.cpp:269: 					MaterialAttributes MA = ReadCellAttributes(genericCellRead); // read that these cells can't be destroyed... pretty much
	.loc 14 269 48 is_stmt 0 discriminator 2
	leaq	32(%rbp), %rax	 #, tmp116
	movq	%rax, %rcx	 # tmp116,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:270: 					WriteDataTo(x, y, z, cell(static_cast<element>(rand() % element::size)));
	.loc 14 270 57 is_stmt 1 discriminator 2
	call	rand	 #
	movl	%eax, %ecx	 #, _8
 # src\main.cpp:270: 					WriteDataTo(x, y, z, cell(static_cast<element>(rand() % element::size)));
	.loc 14 270 60 discriminator 2
	movslq	%ecx, %rax	 # _8, tmp117
	imulq	$715827883, %rax, %rax	 #, tmp117, tmp118
	shrq	$32, %rax	 #, tmp118
	movq	%rax, %rdx	 # tmp118, tmp119
	movl	%ecx, %eax	 # _8, tmp120
	sarl	$31, %eax	 #, tmp120
	subl	%eax, %edx	 # tmp120, _9
	movl	%edx, %eax	 # _9, tmp121
	addl	%eax, %eax	 # tmp121
	addl	%edx, %eax	 # _9, tmp121
	addl	%eax, %eax	 # tmp122
	movl	%ecx, %edx	 # _8, _8
	subl	%eax, %edx	 # tmp121, _8
 # src\main.cpp:270: 					WriteDataTo(x, y, z, cell(static_cast<element>(rand() % element::size)));
	.loc 14 270 27 discriminator 2
	leaq	96(%rbp), %rax	 #, tmp123
	movq	%rax, %rcx	 # tmp123,
	call	_ZN6MATRIX4cellC1ENS_7elementE	 #
 # src\main.cpp:270: 					WriteDataTo(x, y, z, cell(static_cast<element>(rand() % element::size)));
	.loc 14 270 17 discriminator 2
	leaq	64(%rbp), %rax	 #, tmp124
	movl	136(%rbp), %r9d	 # y, tmp125
	movl	132(%rbp), %r8d	 # x, tmp126
	movq	176(%rbp), %rdx	 # this, tmp127
	leaq	96(%rbp), %rcx	 #, tmp128
	movq	%rcx, 40(%rsp)	 # tmp128,
	movl	140(%rbp), %ecx	 # z, tmp129
	movl	%ecx, 32(%rsp)	 # tmp129,
	movq	%rax, %rcx	 # tmp124,
	call	_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE	 #
	leaq	64(%rbp), %rax	 #, tmp130
	movq	%rax, %rcx	 # tmp130,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:270: 					WriteDataTo(x, y, z, cell(static_cast<element>(rand() % element::size)));
	.loc 14 270 27 discriminator 2
	leaq	96(%rbp), %rax	 #, tmp131
	movq	%rax, %rcx	 # tmp131,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:271: 				}
	.loc 14 271 5 discriminator 2
	leaq	-80(%rbp), %rax	 #, tmp132
	movq	%rax, %rcx	 # tmp132,
	call	_ZN6MATRIX4cellD1Ev	 #
.LBE134:
 # src\main.cpp:266: 				for(uint32_t x=x1; x<=x2; ++x)
	.loc 14 266 5 discriminator 2
	addl	$1, 132(%rbp)	 #, x
.L238:
 # src\main.cpp:266: 				for(uint32_t x=x1; x<=x2; ++x)
	.loc 14 266 25 discriminator 2
	movl	132(%rbp), %eax	 # x, tmp133
	cmpl	%eax, 200(%rbp)	 # tmp133, x2
	jnb	.L243	 #,
.LBE133:
.LBE132:
 # src\main.cpp:264: 			for(uint32_t y=y1; y<=y2; ++y)
	.loc 14 264 4 discriminator 2
	addl	$1, 136(%rbp)	 #, y
.L237:
 # src\main.cpp:264: 			for(uint32_t y=y1; y<=y2; ++y)
	.loc 14 264 24 discriminator 1
	movl	136(%rbp), %eax	 # y, tmp134
	cmpl	%eax, 216(%rbp)	 # tmp134, y2
	jnb	.L244	 #,
.LBE131:
.LBE130:
 # src\main.cpp:260: 		for(uint32_t z=z1; z<=z2; ++z)
	.loc 14 260 3 discriminator 2
	addl	$1, 140(%rbp)	 #, z
.L234:
 # src\main.cpp:260: 		for(uint32_t z=z1; z<=z2; ++z)
	.loc 14 260 23 discriminator 1
	movl	140(%rbp), %eax	 # z, tmp135
	cmpl	%eax, 232(%rbp)	 # tmp135, z2
	jnb	.L245	 #,
.LBE129:
 # src\main.cpp:274: 	}
	.loc 14 274 2
	jmp	.L233	 #
.L249:
.LBB141:
.LBB139:
 # src\main.cpp:262: 			if(!running) break;
	.loc 14 262 17
	nop	
.LBE139:
.LBE141:
 # src\main.cpp:274: 	}
	.loc 14 274 2
	jmp	.L233	 #
.L247:
.LBB142:
.LBB140:
.LBB138:
.LBB137:
.LBB136:
.LBB135:
 # src\main.cpp:269: 					MaterialAttributes MA = ReadCellAttributes(genericCellRead); // read that these cells can't be destroyed... pretty much
	.loc 14 269 48
	movq	%rax, %rbx	 #, tmp138
	leaq	32(%rbp), %rax	 #, tmp136
	movq	%rax, %rcx	 # tmp136,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:271: 				}
	.loc 14 271 5
	leaq	-80(%rbp), %rax	 #, tmp141
	movq	%rax, %rcx	 # tmp141,
	call	_ZN6MATRIX4cellD1Ev	 #
	movq	%rbx, %rax	 # tmp137, D.237833
	movq	%rax, %rcx	 # D.237833,
.LEHB5:
	call	_Unwind_Resume	 #
	nop	
.LEHE5:
.L233:
.LBE135:
.LBE136:
.LBE137:
.LBE138:
.LBE140:
.LBE142:
 # src\main.cpp:274: 	}
	.loc 14 274 2
	addq	$280, %rsp	 #,
	popq	%rbx	 #
.LCFI295:
	popq	%rbp	 #
.LCFI296:
	ret	
.LFE10927:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA10927:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE10927-.LLSDACSB10927
.LLSDACSB10927:
	.uleb128 .LEHB4-.LFB10927
	.uleb128 .LEHE4-.LEHB4
	.uleb128 .L247-.LFB10927
	.uleb128 0
	.uleb128 .LEHB5-.LFB10927
	.uleb128 .LEHE5-.LEHB5
	.uleb128 0
	.uleb128 0
.LLSDACSE10927:
	.section	.text$_ZN6MATRIX11FlushMatrixERSt6atomicIbEjjjjjj,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZN6MATRIX14FlattenedIndexEjjj,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX14FlattenedIndexEjjj
	.def	_ZN6MATRIX14FlattenedIndexEjjj;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX14FlattenedIndexEjjj
_ZN6MATRIX14FlattenedIndexEjjj:
.LFB10930:
	.loc 14 328 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI297:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI298:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, 24(%rbp)	 # x, x
	movl	%r8d, 32(%rbp)	 # y, y
	movl	%r9d, 40(%rbp)	 # z, z
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 10
	movq	16(%rbp), %rax	 # this, tmp100
	movl	40(%rax), %eax	 # this_18(D)->w, _1
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 12
	cmpl	%eax, 24(%rbp)	 # _1, x
	jb	.L251	 #,
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 14 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp101
	movl	40(%rax), %eax	 # this_18(D)->w, _2
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 12 discriminator 1
	subl	$1, %eax	 #, iftmp.25_14
	jmp	.L252	 #
.L251:
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 12 is_stmt 0 discriminator 2
	movl	24(%rbp), %eax	 # x, iftmp.25_14
.L252:
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 5 is_stmt 1 discriminator 4
	movl	%eax, 24(%rbp)	 # iftmp.25_14, x
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 30 discriminator 4
	movq	16(%rbp), %rax	 # this, tmp102
	movl	44(%rax), %eax	 # this_18(D)->h, _3
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 32 discriminator 4
	cmpl	%eax, 32(%rbp)	 # _3, y
	jb	.L253	 #,
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 34 discriminator 5
	movq	16(%rbp), %rax	 # this, tmp103
	movl	44(%rax), %eax	 # this_18(D)->h, _4
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 32 discriminator 5
	subl	$1, %eax	 #, iftmp.26_15
	jmp	.L254	 #
.L253:
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 32 is_stmt 0 discriminator 6
	movl	32(%rbp), %eax	 # y, iftmp.26_15
.L254:
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 25 is_stmt 1 discriminator 8
	movl	%eax, 32(%rbp)	 # iftmp.26_15, y
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 50 discriminator 8
	movq	16(%rbp), %rax	 # this, tmp104
	movl	48(%rax), %eax	 # this_18(D)->d, _5
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 52 discriminator 8
	cmpl	%eax, 40(%rbp)	 # _5, z
	jb	.L255	 #,
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 54 discriminator 9
	movq	16(%rbp), %rax	 # this, tmp105
	movl	48(%rax), %eax	 # this_18(D)->d, _6
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 52 discriminator 9
	subl	$1, %eax	 #, iftmp.27_16
	jmp	.L256	 #
.L255:
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 52 is_stmt 0 discriminator 10
	movl	40(%rbp), %eax	 # z, iftmp.27_16
.L256:
 # src\main.cpp:330: 		x = x>=w ? w-1 : x; y = y>=h ? h-1 : y; z = z>=d ? d-1 : z;
	.loc 14 330 45 is_stmt 1 discriminator 12
	movl	%eax, 40(%rbp)	 # iftmp.27_16, z
 # src\main.cpp:331: 		return z * (w * h) + y * w + x; 
	.loc 14 331 15 discriminator 12
	movq	16(%rbp), %rax	 # this, tmp106
	movl	40(%rax), %edx	 # this_18(D)->w, _7
 # src\main.cpp:331: 		return z * (w * h) + y * w + x; 
	.loc 14 331 19 discriminator 12
	movq	16(%rbp), %rax	 # this, tmp107
	movl	44(%rax), %eax	 # this_18(D)->h, _8
 # src\main.cpp:331: 		return z * (w * h) + y * w + x; 
	.loc 14 331 17 discriminator 12
	imull	%edx, %eax	 # _7, _9
 # src\main.cpp:331: 		return z * (w * h) + y * w + x; 
	.loc 14 331 12 discriminator 12
	imull	40(%rbp), %eax	 # z, _9
	movl	%eax, %edx	 # _9, _10
 # src\main.cpp:331: 		return z * (w * h) + y * w + x; 
	.loc 14 331 28 discriminator 12
	movq	16(%rbp), %rax	 # this, tmp108
	movl	40(%rax), %eax	 # this_18(D)->w, _11
 # src\main.cpp:331: 		return z * (w * h) + y * w + x; 
	.loc 14 331 26 discriminator 12
	imull	32(%rbp), %eax	 # y, _12
 # src\main.cpp:331: 		return z * (w * h) + y * w + x; 
	.loc 14 331 22 discriminator 12
	addl	%eax, %edx	 # _12, _13
 # src\main.cpp:331: 		return z * (w * h) + y * w + x; 
	.loc 14 331 32 discriminator 12
	movl	24(%rbp), %eax	 # x, tmp109
	addl	%edx, %eax	 # _13, _31
 # src\main.cpp:332: 	}
	.loc 14 332 2 discriminator 12
	popq	%rbp	 #
.LCFI299:
	ret	
.LFE10930:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC35:
	.ascii "\12WARNING: MaterialType: element::%d is greater than element::size. Defaulting to element::air\0"
	.section	.text$_ZN6MATRIX18ReadCellAttributesENS_4cellE,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX18ReadCellAttributesENS_4cellE
	.def	_ZN6MATRIX18ReadCellAttributesENS_4cellE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX18ReadCellAttributesENS_4cellE
_ZN6MATRIX18ReadCellAttributesENS_4cellE:
.LFB10931:
	.loc 14 353 21
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI300:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI301:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI302:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI303:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 40(%rbp)	 # this, this
	movq	%r8, 48(%rbp)	 # c, c
 # src\main.cpp:355: 		if(c.MaterialType >= element::size){ printf("\nWARNING: MaterialType: element::%d is greater than element::size. Defaulting to element::air", static_cast<uint32_t>(c.MaterialType)); }
	.loc 14 355 8
	movq	48(%rbp), %rax	 # c, tmp92
	movl	28(%rax), %eax	 # c_14(D)->MaterialType, _1
 # src\main.cpp:355: 		if(c.MaterialType >= element::size){ printf("\nWARNING: MaterialType: element::%d is greater than element::size. Defaulting to element::air", static_cast<uint32_t>(c.MaterialType)); }
	.loc 14 355 3
	cmpl	$5, %eax	 #, _2
	jle	.L259	 #,
 # src\main.cpp:355: 		if(c.MaterialType >= element::size){ printf("\nWARNING: MaterialType: element::%d is greater than element::size. Defaulting to element::air", static_cast<uint32_t>(c.MaterialType)); }
	.loc 14 355 169 discriminator 1
	movq	48(%rbp), %rax	 # c, tmp93
	movl	28(%rax), %eax	 # c_14(D)->MaterialType, _3
 # src\main.cpp:355: 		if(c.MaterialType >= element::size){ printf("\nWARNING: MaterialType: element::%d is greater than element::size. Defaulting to element::air", static_cast<uint32_t>(c.MaterialType)); }
	.loc 14 355 46 discriminator 1
	movl	%eax, %edx	 # _3,
	leaq	.LC35(%rip), %rax	 #, tmp94
	movq	%rax, %rcx	 # tmp94,
	call	_Z6printfPKcz	 #
.L259:
 # src\main.cpp:356: 		return c.MaterialType < element::size ? matAtt[static_cast<uint32_t>(c.MaterialType)] : matAtt[static_cast<uint32_t>(element::air)];
	.loc 14 356 12
	movq	48(%rbp), %rax	 # c, tmp95
	movl	28(%rax), %eax	 # c_14(D)->MaterialType, _4
 # src\main.cpp:356: 		return c.MaterialType < element::size ? matAtt[static_cast<uint32_t>(c.MaterialType)] : matAtt[static_cast<uint32_t>(element::air)];
	.loc 14 356 41
	cmpl	$5, %eax	 #, _5
	jg	.L260	 #,
 # src\main.cpp:356: 		return c.MaterialType < element::size ? matAtt[static_cast<uint32_t>(c.MaterialType)] : matAtt[static_cast<uint32_t>(element::air)];
	.loc 14 356 87 discriminator 1
	movq	40(%rbp), %rax	 # this, tmp96
	addq	$32, %rax	 #, _6
 # src\main.cpp:356: 		return c.MaterialType < element::size ? matAtt[static_cast<uint32_t>(c.MaterialType)] : matAtt[static_cast<uint32_t>(element::air)];
	.loc 14 356 74 discriminator 1
	movq	48(%rbp), %rdx	 # c, tmp97
	movl	28(%rdx), %edx	 # c_14(D)->MaterialType, _7
 # src\main.cpp:356: 		return c.MaterialType < element::size ? matAtt[static_cast<uint32_t>(c.MaterialType)] : matAtt[static_cast<uint32_t>(element::air)];
	.loc 14 356 87 discriminator 1
	movl	%edx, %edx	 # _7, _8
	movq	%rax, %rcx	 # _6,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
	jmp	.L261	 #
.L260:
 # src\main.cpp:356: 		return c.MaterialType < element::size ? matAtt[static_cast<uint32_t>(c.MaterialType)] : matAtt[static_cast<uint32_t>(element::air)];
	.loc 14 356 133 discriminator 2
	movq	40(%rbp), %rax	 # this, tmp98
	addq	$32, %rax	 #, _9
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _9,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy	 #
.L261:
 # src\main.cpp:356: 		return c.MaterialType < element::size ? matAtt[static_cast<uint32_t>(c.MaterialType)] : matAtt[static_cast<uint32_t>(element::air)];
	.loc 14 356 133 is_stmt 0 discriminator 4
	movq	32(%rbp), %rdx	 # .result_ptr, tmp99
	movq	(%rax), %rcx	 # MEM[(const struct MaterialAttributes &)iftmp.74_10], tmp100
	movq	8(%rax), %rbx	 # MEM[(const struct MaterialAttributes &)iftmp.74_10],
	movq	%rcx, (%rdx)	 # tmp100, <retval>
	movq	%rbx, 8(%rdx)	 #, <retval>
	movq	16(%rax), %rcx	 # MEM[(const struct MaterialAttributes &)iftmp.74_10], tmp101
	movq	24(%rax), %rbx	 # MEM[(const struct MaterialAttributes &)iftmp.74_10],
	movq	%rcx, 16(%rdx)	 # tmp101, <retval>
	movq	%rbx, 24(%rdx)	 #, <retval>
	movq	32(%rax), %rax	 # MEM[(const struct MaterialAttributes &)iftmp.74_10], tmp102
	movq	%rax, 32(%rdx)	 # tmp102, <retval>
 # src\main.cpp:357: 	}
	.loc 14 357 2 is_stmt 1 discriminator 4
	movq	32(%rbp), %rax	 # .result_ptr,
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI304:
	popq	%rbp	 #
.LCFI305:
	ret	
.LFE10931:
	.seh_endproc
	.section	.text$_ZN6CameraC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6CameraC1Ev
	.def	_ZN6CameraC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6CameraC1Ev
_ZN6CameraC1Ev:
.LFB10935:
	.loc 14 374 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI306:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI307:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB143:
 # src\main.cpp:374: 	Camera() : FOV(90.0f) {}
	.loc 14 374 22
	movq	16(%rbp), %rax	 # this, _1
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _1,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp88
	addq	$12, %rax	 #, _2
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _2,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp89
	addq	$24, %rax	 #, _3
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _3,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp90
	addq	$36, %rax	 #, _4
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _4,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp91
	addq	$48, %rax	 #, _5
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _5,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp92
	addq	$60, %rax	 #, _6
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _6,
	call	_ZN5Vec3DC1Efff	 #
 # src\main.cpp:374: 	Camera() : FOV(90.0f) {}
	.loc 14 374 13
	movq	16(%rbp), %rax	 # this, tmp93
	movss	.LC36(%rip), %xmm0	 #, tmp94
	movss	%xmm0, 72(%rax)	 # tmp94, this_8(D)->FOV
.LBE143:
 # src\main.cpp:374: 	Camera() : FOV(90.0f) {}
	.loc 14 374 25
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI308:
	ret	
.LFE10935:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC37:
	.ascii "D\0"
	.ascii "2\0D\0"
	.ascii "1\0C\0r\0e\0a\0t\0e\0F\0a\0c\0t\0o\0r\0y\0 \0f\0a\0i\0l\0e\0d\0 \0w\0i\0t\0h\0 \0H\0R\0E\0S\0U\0L\0T\0:\0 \0"
	.ascii "0\0x\0%\0"
	.ascii "0\0"
	.ascii "8\0X\0\0\0"
	.align 2
.LC38:
	.ascii "E\0r\0r\0o\0r\0\0\0"
	.section	.text$_ZN21WINDOWGraphicsOverlay11ErrorHandleEl,"x"
	.linkonce discard
	.globl	_ZN21WINDOWGraphicsOverlay11ErrorHandleEl
	.def	_ZN21WINDOWGraphicsOverlay11ErrorHandleEl;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay11ErrorHandleEl
_ZN21WINDOWGraphicsOverlay11ErrorHandleEl:
.LFB10941:
	.loc 14 499 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI309:
	subq	$1056, %rsp	 #,
	.seh_stackalloc	1056
.LCFI310:
	leaq	128(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 128
.LCFI311:
	.seh_endprologue
	movl	%ecx, 944(%rbp)	 # hr, hr
.LBB144:
 # src\main.cpp:500: 		if(FAILED(hr))
	.loc 14 500 3
	cmpl	$0, 944(%rbp)	 #, hr
	jns	.L266	 #,
.LBB145:
 # src\main.cpp:503:        		swprintf_s(errorMsg, L"D2D1CreateFactory failed with HRESULT: 0x%08X", hr);
	.loc 14 503 20
	movl	944(%rbp), %edx	 # hr, tmp82
	leaq	-96(%rbp), %rax	 #, tmp83
	movl	%edx, %r8d	 # tmp82,
	leaq	.LC37(%rip), %rdx	 #, tmp84
	movq	%rax, %rcx	 # tmp83,
	call	_Z10swprintf_sILy512EEiRAT__wPKwz	 #
 # src\main.cpp:504:        		MessageBoxW(0, errorMsg, L"Error", MB_ICONERROR);
	.loc 14 504 21
	leaq	-96(%rbp), %rax	 #, tmp85
	movl	$16, %r9d	 #,
	leaq	.LC38(%rip), %r8	 #,
	movq	%rax, %rdx	 # tmp85,
	movl	$0, %ecx	 #,
	movq	__imp_MessageBoxW(%rip), %rax	 #, tmp86
	call	*%rax	 # tmp86
.LVL8:
.L266:
.LBE145:
.LBE144:
 # src\main.cpp:506: 	}
	.loc 14 506 2
	nop	
	addq	$1056, %rsp	 #,
	popq	%rbp	 #
.LCFI312:
	ret	
.LFE10941:
	.seh_endproc
	.text
	.globl	_ZN21WINDOWGraphicsOverlay16GetMaterialColorEN6MATRIX7elementE
	.def	_ZN21WINDOWGraphicsOverlay16GetMaterialColorEN6MATRIX7elementE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay16GetMaterialColorEN6MATRIX7elementE
_ZN21WINDOWGraphicsOverlay16GetMaterialColorEN6MATRIX7elementE:
.LFB10942:
	.loc 14 508 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI313:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI314:
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # e, e
 # src\main.cpp:509: 		switch(e)
	.loc 14 509 10
	movl	16(%rbp), %eax	 # e, e.0_1
 # src\main.cpp:509: 		switch(e)
	.loc 14 509 3
	cmpl	$4, %eax	 #, e.0_1
	ja	.L268	 #,
	movl	%eax, %eax	 # e.0_1, tmp85
	leaq	0(,%rax,4), %rdx	 #, tmp86
	leaq	.L270(%rip), %rax	 #, tmp87
	movl	(%rdx,%rax), %eax	 #, tmp88
	cltq
	leaq	.L270(%rip), %rdx	 #, tmp91
	addq	%rdx, %rax	 # tmp91, tmp90
	jmp	*%rax	 # tmp90
	.section .rdata,"dr"
	.align 4
.L270:
	.long	.L274-.L270
	.long	.L273-.L270
	.long	.L272-.L270
	.long	.L271-.L270
	.long	.L269-.L270
	.text
.L274:
 # src\main.cpp:511: 			case MATRIX::element::air:   return RGB(173, 216, 230); break;
	.loc 14 511 40
	movl	$15128749, %eax	 #, _2
	jmp	.L275	 #
.L273:
 # src\main.cpp:512: 			case MATRIX::element::water: return RGB(0, 0, 255);     break;
	.loc 14 512 40
	movl	$16711680, %eax	 #, _2
	jmp	.L275	 #
.L272:
 # src\main.cpp:513: 			case MATRIX::element::wood:  return RGB(139, 69, 19);   break;
	.loc 14 513 40
	movl	$1262987, %eax	 #, _2
	jmp	.L275	 #
.L271:
 # src\main.cpp:514: 			case MATRIX::element::fire:  return RGB(255, 0, 0);     break;
	.loc 14 514 40
	movl	$255, %eax	 #, _2
	jmp	.L275	 #
.L269:
 # src\main.cpp:515: 			case MATRIX::element::metal: return RGB(169, 169, 169); break;
	.loc 14 515 40
	movl	$11119017, %eax	 #, _2
	jmp	.L275	 #
.L268:
 # src\main.cpp:516: 			default:                	 return RGB(0, 0, 0); break;
	.loc 14 516 37
	movl	$0, %eax	 #, _2
.L275:
 # src\main.cpp:518: 	}
	.loc 14 518 2
	popq	%rbp	 #
.LCFI315:
	ret	
.LFE10942:
	.seh_endproc
	.section	.text$_ZN21WINDOWGraphicsOverlay14AllocBrushPoolEP6HWND__,"x"
	.linkonce discard
	.globl	_ZN21WINDOWGraphicsOverlay14AllocBrushPoolEP6HWND__
	.def	_ZN21WINDOWGraphicsOverlay14AllocBrushPoolEP6HWND__;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay14AllocBrushPoolEP6HWND__
_ZN21WINDOWGraphicsOverlay14AllocBrushPoolEP6HWND__:
.LFB10943:
	.loc 14 521 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI316:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI317:
	subq	$80, %rsp	 #,
	.seh_stackalloc	80
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # hwnd, hwnd
 # src\main.cpp:523: 		MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 523 62
	movq	16(%rbp), %rax	 # hwnd, tmp116
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp116,
	movq	__imp_GetWindowLongPtrW(%rip), %rax	 #, tmp117
	call	*%rax	 # tmp117
.LVL9:
 # src\main.cpp:523: 		MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 523 83
	movq	%rax, -16(%rbp)	 # _1, matrix
 # src\main.cpp:525: 		uint32_t N = static_cast<uint32_t>(MATRIX::element::size);
	.loc 14 525 12
	movl	$6, -20(%rbp)	 #, N
 # src\main.cpp:527: 		memory = static_cast<void**>(malloc(sizeof(ID2D1SolidColorBrush*) * N));
	.loc 14 527 71
	movl	-20(%rbp), %eax	 # N, _2
 # src\main.cpp:527: 		memory = static_cast<void**>(malloc(sizeof(ID2D1SolidColorBrush*) * N));
	.loc 14 527 38
	salq	$3, %rax	 #, _3
	movq	%rax, %rcx	 # _3,
	call	malloc	 #
 # src\main.cpp:527: 		memory = static_cast<void**>(malloc(sizeof(ID2D1SolidColorBrush*) * N));
	.loc 14 527 10
	movq	%rax, memory(%rip)	 # _4, memory
 # src\main.cpp:528: 		brushPool 	  = reinterpret_cast<ID2D1SolidColorBrush**>(memory);
	.loc 14 528 16
	movq	memory(%rip), %rax	 # memory, memory.104_5
	movq	%rax, brushPool(%rip)	 # memory.104_5, brushPool
.LBB146:
 # src\main.cpp:530: 		for(uint32_t i=0; i<=N -1; ++i)
	.loc 14 530 16
	movl	$0, -4(%rbp)	 #, i
 # src\main.cpp:530: 		for(uint32_t i=0; i<=N -1; ++i)
	.loc 14 530 3
	jmp	.L277	 #
.L278:
 # src\main.cpp:532: 			brushPool[i] = nullptr;
	.loc 14 532 15 discriminator 3
	movq	brushPool(%rip), %rax	 # brushPool, brushPool.105_6
 # src\main.cpp:532: 			brushPool[i] = nullptr;
	.loc 14 532 14 discriminator 3
	movl	-4(%rbp), %edx	 # i, _7
 # src\main.cpp:532: 			brushPool[i] = nullptr;
	.loc 14 532 15 discriminator 3
	salq	$3, %rdx	 #, _8
	addq	%rdx, %rax	 # _8, _9
 # src\main.cpp:532: 			brushPool[i] = nullptr;
	.loc 14 532 17 discriminator 3
	movq	$0, (%rax)	 #, *_9
 # src\main.cpp:530: 		for(uint32_t i=0; i<=N -1; ++i)
	.loc 14 530 3 discriminator 3
	addl	$1, -4(%rbp)	 #, i
.L277:
 # src\main.cpp:530: 		for(uint32_t i=0; i<=N -1; ++i)
	.loc 14 530 26 discriminator 1
	movl	-20(%rbp), %eax	 # N, tmp119
	subl	$1, %eax	 #, _10
 # src\main.cpp:530: 		for(uint32_t i=0; i<=N -1; ++i)
	.loc 14 530 22 discriminator 1
	cmpl	-4(%rbp), %eax	 # i, _10
	jnb	.L278	 #,
.LBE146:
.LBB147:
 # src\main.cpp:535: 		for(uint32_t i=0; i<=N -1; ++i)
	.loc 14 535 16
	movl	$0, -8(%rbp)	 #, i
 # src\main.cpp:535: 		for(uint32_t i=0; i<=N -1; ++i)
	.loc 14 535 3
	jmp	.L279	 #
.L281:
.LBB148:
 # src\main.cpp:537: 			COLORREF Color 		  = WINDOWGraphicsOverlay::GetMaterialColor(static_cast<MATRIX::element>(i));
	.loc 14 537 64
	movl	-8(%rbp), %eax	 # i, tmp120
	movl	%eax, %ecx	 # tmp120,
	call	_ZN21WINDOWGraphicsOverlay16GetMaterialColorEN6MATRIX7elementE	 #
	movl	%eax, -24(%rbp)	 # tmp121, Color
 # src\main.cpp:538: 			D2D1_COLOR_F d2dcolor = {GetRValue(Color) / 255.0f, GetGValue(Color) / 255.0f, GetBValue(Color) / 255.0f, 1.0f};
	.loc 14 538 17
	movq	$0, -48(%rbp)	 #, d2dcolor
	movq	$0, -40(%rbp)	 #, d2dcolor
	movss	.LC39(%rip), %xmm0	 #, tmp122
	movss	%xmm0, -36(%rbp)	 # tmp122, d2dcolor.a
 # src\main.cpp:538: 			D2D1_COLOR_F d2dcolor = {GetRValue(Color) / 255.0f, GetGValue(Color) / 255.0f, GetBValue(Color) / 255.0f, 1.0f};
	.loc 14 538 29
	movl	-24(%rbp), %eax	 # Color, tmp123
	movzbl	%al, %eax	 # _11, _12
 # src\main.cpp:538: 			D2D1_COLOR_F d2dcolor = {GetRValue(Color) / 255.0f, GetGValue(Color) / 255.0f, GetBValue(Color) / 255.0f, 1.0f};
	.loc 14 538 46
	pxor	%xmm0, %xmm0	 # _13
	cvtsi2ssl	%eax, %xmm0	 # _12, _13
	movss	.LC40(%rip), %xmm1	 #, tmp124
	divss	%xmm1, %xmm0	 # tmp124, _14
 # src\main.cpp:538: 			D2D1_COLOR_F d2dcolor = {GetRValue(Color) / 255.0f, GetGValue(Color) / 255.0f, GetBValue(Color) / 255.0f, 1.0f};
	.loc 14 538 114
	movss	%xmm0, -48(%rbp)	 # _14, d2dcolor.r
 # src\main.cpp:538: 			D2D1_COLOR_F d2dcolor = {GetRValue(Color) / 255.0f, GetGValue(Color) / 255.0f, GetBValue(Color) / 255.0f, 1.0f};
	.loc 14 538 56
	movl	-24(%rbp), %eax	 # Color, tmp125
	shrw	$8, %ax	 #, _16
	movzbl	%al, %eax	 # _17, _18
 # src\main.cpp:538: 			D2D1_COLOR_F d2dcolor = {GetRValue(Color) / 255.0f, GetGValue(Color) / 255.0f, GetBValue(Color) / 255.0f, 1.0f};
	.loc 14 538 73
	pxor	%xmm0, %xmm0	 # _19
	cvtsi2ssl	%eax, %xmm0	 # _18, _19
	movss	.LC40(%rip), %xmm1	 #, tmp126
	divss	%xmm1, %xmm0	 # tmp126, _20
 # src\main.cpp:538: 			D2D1_COLOR_F d2dcolor = {GetRValue(Color) / 255.0f, GetGValue(Color) / 255.0f, GetBValue(Color) / 255.0f, 1.0f};
	.loc 14 538 114
	movss	%xmm0, -44(%rbp)	 # _20, d2dcolor.g
 # src\main.cpp:538: 			D2D1_COLOR_F d2dcolor = {GetRValue(Color) / 255.0f, GetGValue(Color) / 255.0f, GetBValue(Color) / 255.0f, 1.0f};
	.loc 14 538 83
	movl	-24(%rbp), %eax	 # Color, tmp127
	shrl	$16, %eax	 #, _21
	movzbl	%al, %eax	 # _22, _23
 # src\main.cpp:538: 			D2D1_COLOR_F d2dcolor = {GetRValue(Color) / 255.0f, GetGValue(Color) / 255.0f, GetBValue(Color) / 255.0f, 1.0f};
	.loc 14 538 100
	pxor	%xmm0, %xmm0	 # _24
	cvtsi2ssl	%eax, %xmm0	 # _23, _24
	movss	.LC40(%rip), %xmm1	 #, tmp128
	divss	%xmm1, %xmm0	 # tmp128, _25
 # src\main.cpp:538: 			D2D1_COLOR_F d2dcolor = {GetRValue(Color) / 255.0f, GetGValue(Color) / 255.0f, GetBValue(Color) / 255.0f, 1.0f};
	.loc 14 538 114
	movss	%xmm0, -40(%rbp)	 # _25, d2dcolor.b
.LBB149:
 # src\main.cpp:539: 			if(BitmapRT) { HRESULT hr = BitmapRT->CreateSolidColorBrush(d2dcolor, &brushPool[i]); ErrorHandle(hr); }
	.loc 14 539 7
	movq	BitmapRT(%rip), %rax	 # BitmapRT, BitmapRT.106_26
 # src\main.cpp:539: 			if(BitmapRT) { HRESULT hr = BitmapRT->CreateSolidColorBrush(d2dcolor, &brushPool[i]); ErrorHandle(hr); }
	.loc 14 539 4
	testq	%rax, %rax	 # BitmapRT.106_26
	je	.L280	 #,
.LBB150:
 # src\main.cpp:539: 			if(BitmapRT) { HRESULT hr = BitmapRT->CreateSolidColorBrush(d2dcolor, &brushPool[i]); ErrorHandle(hr); }
	.loc 14 539 63 discriminator 1
	movq	BitmapRT(%rip), %rax	 # BitmapRT, BitmapRT.107_27
	movq	%rax, %rcx	 # BitmapRT.107_27, _28
	movq	brushPool(%rip), %rax	 # brushPool, brushPool.108_29
 # src\main.cpp:539: 			if(BitmapRT) { HRESULT hr = BitmapRT->CreateSolidColorBrush(d2dcolor, &brushPool[i]); ErrorHandle(hr); }
	.loc 14 539 85 discriminator 1
	movl	-8(%rbp), %edx	 # i, _30
 # src\main.cpp:539: 			if(BitmapRT) { HRESULT hr = BitmapRT->CreateSolidColorBrush(d2dcolor, &brushPool[i]); ErrorHandle(hr); }
	.loc 14 539 86 discriminator 1
	salq	$3, %rdx	 #, _31
 # src\main.cpp:539: 			if(BitmapRT) { HRESULT hr = BitmapRT->CreateSolidColorBrush(d2dcolor, &brushPool[i]); ErrorHandle(hr); }
	.loc 14 539 63 discriminator 1
	addq	%rax, %rdx	 # brushPool.108_29, _32
	leaq	-48(%rbp), %rax	 #, tmp129
	movq	%rdx, %r8	 # _32,
	movq	%rax, %rdx	 # tmp129,
	call	_ZN17ID2D1RenderTarget21CreateSolidColorBrushERK14_D3DCOLORVALUEPP20ID2D1SolidColorBrush	 #
	movl	%eax, -28(%rbp)	 # _59, hr
 # src\main.cpp:539: 			if(BitmapRT) { HRESULT hr = BitmapRT->CreateSolidColorBrush(d2dcolor, &brushPool[i]); ErrorHandle(hr); }
	.loc 14 539 101 discriminator 1
	movl	-28(%rbp), %eax	 # hr, tmp130
	movl	%eax, %ecx	 # tmp130,
	call	_ZN21WINDOWGraphicsOverlay11ErrorHandleEl	 #
.L280:
.LBE150:
.LBE149:
.LBE148:
 # src\main.cpp:535: 		for(uint32_t i=0; i<=N -1; ++i)
	.loc 14 535 3 discriminator 2
	addl	$1, -8(%rbp)	 #, i
.L279:
 # src\main.cpp:535: 		for(uint32_t i=0; i<=N -1; ++i)
	.loc 14 535 26 discriminator 1
	movl	-20(%rbp), %eax	 # N, tmp131
	subl	$1, %eax	 #, _33
 # src\main.cpp:535: 		for(uint32_t i=0; i<=N -1; ++i)
	.loc 14 535 22 discriminator 1
	cmpl	-8(%rbp), %eax	 # i, _33
	jnb	.L281	 #,
.LBE147:
 # src\main.cpp:541: 	}
	.loc 14 541 2
	nop	
	nop	
	addq	$80, %rsp	 #,
	popq	%rbp	 #
.LCFI318:
	ret	
.LFE10943:
	.seh_endproc
	.section .rdata,"dr"
.LC41:
	.ascii "bad BitmapRT\0"
	.text
	.globl	_ZN21WINDOWGraphicsOverlay11blitOverlayEP6HWND__jii
	.def	_ZN21WINDOWGraphicsOverlay11blitOverlayEP6HWND__jii;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay11blitOverlayEP6HWND__jii
_ZN21WINDOWGraphicsOverlay11blitOverlayEP6HWND__jii:
.LFB10944:
	.loc 14 544 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI319:
	pushq	%r12	 #
	.seh_pushreg	%r12
.LCFI320:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI321:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI322:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI323:
	subq	$144, %rsp	 #,
	.seh_stackalloc	144
.LCFI324:
	leaq	144(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 144
.LCFI325:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # hwnd, hwnd
	movl	%edx, 56(%rbp)	 # zLevel, zLevel
	movl	%r8d, 64(%rbp)	 # cellWidth, cellWidth
	movl	%r9d, 72(%rbp)	 # cellHeight, cellHeight
 # src\main.cpp:545: 		MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 545 62
	movq	48(%rbp), %rax	 # hwnd, tmp168
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp168,
	movq	__imp_GetWindowLongPtrW(%rip), %rax	 #, tmp169
	call	*%rax	 # tmp169
.LVL10:
 # src\main.cpp:545: 		MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 545 83
	movq	%rax, -16(%rbp)	 # _1, matrix
 # src\main.cpp:547: 		if(!BitmapRT)
	.loc 14 547 6
	movq	BitmapRT(%rip), %rax	 # BitmapRT, BitmapRT.1_2
 # src\main.cpp:547: 		if(!BitmapRT)
	.loc 14 547 3
	testq	%rax, %rax	 # BitmapRT.1_2
	jne	.L283	 #,
 # src\main.cpp:549: 			printf("bad BitmapRT");
	.loc 14 549 10
	leaq	.LC41(%rip), %rax	 #, tmp170
	movq	%rax, %rcx	 # tmp170,
	call	_Z6printfPKcz	 #
 # src\main.cpp:550: 			return false;
	.loc 14 550 11
	movl	$0, %eax	 #, _107
	jmp	.L282	 #
.L283:
 # src\main.cpp:553: 		BitmapRT->BeginDraw();
	.loc 14 553 22
	movq	BitmapRT(%rip), %rax	 # BitmapRT, BitmapRT.3_5
	movq	(%rax), %rax	 # BitmapRT.3_5->D.201369.D.200640.D.199868._vptr.IUnknown, _6
	addq	$384, %rax	 #, _7
	movq	(%rax), %rax	 # *_7, _8
	movq	BitmapRT(%rip), %rdx	 # BitmapRT, BitmapRT.4_9
	movq	%rdx, %rcx	 # _10,
	call	*%rax	 # _8
.LVL11:
 # src\main.cpp:554: 		BitmapRT->Clear(D2D1::ColorF(D2D1::ColorF::Black));
	.loc 14 554 18
	movq	BitmapRT(%rip), %rax	 # BitmapRT, BitmapRT.5_11
	movq	%rax, %rcx	 # BitmapRT.5_11, _12
	movl	$0, -24(%rbp)	 #, knownColor
	movss	.LC39(%rip), %xmm0	 #, tmp171
	movss	%xmm0, -28(%rbp)	 # tmp171, _a
	leaq	-96(%rbp), %rax	 #, tmp172
	movq	%rax, -40(%rbp)	 # tmp172, this
	movl	-24(%rbp), %eax	 # knownColor, tmp173
	movl	%eax, -44(%rbp)	 # tmp173, rgb
	movss	-28(%rbp), %xmm0	 # _a, tmp174
	movss	%xmm0, -48(%rbp)	 # tmp174, _a
.LBB151:
.LBB152:
.LBB153:
.LBB154:
.LBB155:
 # C:/msys64/mingw64/include/d2d1helper.h:360:         r = static_cast<float>((rgb>>16)&0xff)/255.0f;
	.file 16 "C:/msys64/mingw64/include/d2d1helper.h"
	.loc 16 360 36
	movl	-44(%rbp), %eax	 # rgb, tmp175
	shrl	$16, %eax	 #, _113
 # C:/msys64/mingw64/include/d2d1helper.h:360:         r = static_cast<float>((rgb>>16)&0xff)/255.0f;
	.loc 16 360 41
	movzbl	%al, %eax	 # _113, _114
 # C:/msys64/mingw64/include/d2d1helper.h:360:         r = static_cast<float>((rgb>>16)&0xff)/255.0f;
	.loc 16 360 13
	movl	%eax, %eax	 # _114, tmp176
	testq	%rax, %rax	 # tmp176
	js	.L285	 #,
	pxor	%xmm0, %xmm0	 # _115
	cvtsi2ssq	%rax, %xmm0	 # tmp176, _115
	jmp	.L286	 #
.L285:
	movq	%rax, %rdx	 # tmp176, tmp178
	shrq	%rdx	 # tmp178
	andl	$1, %eax	 #, tmp179
	orq	%rax, %rdx	 # tmp179, tmp178
	pxor	%xmm0, %xmm0	 # tmp177
	cvtsi2ssq	%rdx, %xmm0	 # tmp178, tmp177
	addss	%xmm0, %xmm0	 # tmp177, _115
.L286:
 # C:/msys64/mingw64/include/d2d1helper.h:360:         r = static_cast<float>((rgb>>16)&0xff)/255.0f;
	.loc 16 360 47
	movss	.LC40(%rip), %xmm1	 #, tmp180
	divss	%xmm1, %xmm0	 # tmp180, _116
 # C:/msys64/mingw64/include/d2d1helper.h:360:         r = static_cast<float>((rgb>>16)&0xff)/255.0f;
	.loc 16 360 11
	movq	-40(%rbp), %rax	 # this, tmp181
	movss	%xmm0, (%rax)	 # _116, this_110->D.203202.r
 # C:/msys64/mingw64/include/d2d1helper.h:361:         g = static_cast<float>((rgb>>8)&0xff)/255.0f;
	.loc 16 361 36
	movl	-44(%rbp), %eax	 # rgb, tmp182
	shrl	$8, %eax	 #, _117
 # C:/msys64/mingw64/include/d2d1helper.h:361:         g = static_cast<float>((rgb>>8)&0xff)/255.0f;
	.loc 16 361 40
	movzbl	%al, %eax	 # _117, _118
 # C:/msys64/mingw64/include/d2d1helper.h:361:         g = static_cast<float>((rgb>>8)&0xff)/255.0f;
	.loc 16 361 13
	movl	%eax, %eax	 # _118, tmp183
	testq	%rax, %rax	 # tmp183
	js	.L287	 #,
	pxor	%xmm0, %xmm0	 # _119
	cvtsi2ssq	%rax, %xmm0	 # tmp183, _119
	jmp	.L288	 #
.L287:
	movq	%rax, %rdx	 # tmp183, tmp185
	shrq	%rdx	 # tmp185
	andl	$1, %eax	 #, tmp186
	orq	%rax, %rdx	 # tmp186, tmp185
	pxor	%xmm0, %xmm0	 # tmp184
	cvtsi2ssq	%rdx, %xmm0	 # tmp185, tmp184
	addss	%xmm0, %xmm0	 # tmp184, _119
.L288:
 # C:/msys64/mingw64/include/d2d1helper.h:361:         g = static_cast<float>((rgb>>8)&0xff)/255.0f;
	.loc 16 361 46
	movss	.LC40(%rip), %xmm1	 #, tmp187
	divss	%xmm1, %xmm0	 # tmp187, _120
 # C:/msys64/mingw64/include/d2d1helper.h:361:         g = static_cast<float>((rgb>>8)&0xff)/255.0f;
	.loc 16 361 11
	movq	-40(%rbp), %rax	 # this, tmp188
	movss	%xmm0, 4(%rax)	 # _120, this_110->D.203202.g
 # C:/msys64/mingw64/include/d2d1helper.h:362:         b = static_cast<float>(rgb&0xff)/255.0f;
	.loc 16 362 35
	movl	-44(%rbp), %eax	 # rgb, tmp189
	movzbl	%al, %eax	 # tmp189, _121
 # C:/msys64/mingw64/include/d2d1helper.h:362:         b = static_cast<float>(rgb&0xff)/255.0f;
	.loc 16 362 13
	movl	%eax, %eax	 # _121, tmp190
	testq	%rax, %rax	 # tmp190
	js	.L289	 #,
	pxor	%xmm0, %xmm0	 # _122
	cvtsi2ssq	%rax, %xmm0	 # tmp190, _122
	jmp	.L290	 #
.L289:
	movq	%rax, %rdx	 # tmp190, tmp192
	shrq	%rdx	 # tmp192
	andl	$1, %eax	 #, tmp193
	orq	%rax, %rdx	 # tmp193, tmp192
	pxor	%xmm0, %xmm0	 # tmp191
	cvtsi2ssq	%rdx, %xmm0	 # tmp192, tmp191
	addss	%xmm0, %xmm0	 # tmp191, _122
.L290:
 # C:/msys64/mingw64/include/d2d1helper.h:362:         b = static_cast<float>(rgb&0xff)/255.0f;
	.loc 16 362 41
	movss	.LC40(%rip), %xmm1	 #, tmp194
	divss	%xmm1, %xmm0	 # tmp194, _123
 # C:/msys64/mingw64/include/d2d1helper.h:362:         b = static_cast<float>(rgb&0xff)/255.0f;
	.loc 16 362 11
	movq	-40(%rbp), %rax	 # this, tmp195
	movss	%xmm0, 8(%rax)	 # _123, this_110->D.203202.b
 # C:/msys64/mingw64/include/d2d1helper.h:363:         a = _a;
	.loc 16 363 11
	movq	-40(%rbp), %rax	 # this, tmp196
	movss	-48(%rbp), %xmm0	 # _a, tmp197
	movss	%xmm0, 12(%rax)	 # tmp197, this_110->D.203202.a
 # C:/msys64/mingw64/include/d2d1helper.h:364:     }
	.loc 16 364 5
	nop	
.LBE155:
.LBE154:
.LBE153:
 # C:/msys64/mingw64/include/d2d1helper.h:350:     }
	.loc 16 350 5
	nop	
.LBE152:
.LBE151:
 # src\main.cpp:554: 		BitmapRT->Clear(D2D1::ColorF(D2D1::ColorF::Black));
	.loc 14 554 18
	leaq	-96(%rbp), %rax	 #, tmp198
	movq	%rax, %rdx	 # tmp198,
	call	_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE	 #
.LBB156:
 # src\main.cpp:556: 		for (int j = 0; j < matrix->h; ++j)
	.loc 14 556 12
	movl	$0, -4(%rbp)	 #, j
 # src\main.cpp:556: 		for (int j = 0; j < matrix->h; ++j)
	.loc 14 556 3
	jmp	.L291	 #
.L296:
.LBB157:
.LBB158:
 # src\main.cpp:558:     		for (int i = 0; i < matrix->w; ++i)
	.loc 14 558 16
	movl	$0, -8(%rbp)	 #, i
 # src\main.cpp:558:     		for (int i = 0; i < matrix->w; ++i)
	.loc 14 558 7
	jmp	.L292	 #
.L295:
.LBB159:
 # src\main.cpp:560: 				D2D1_RECT_F rect = D2D1::RectF( static_cast<float>(i * cellWidth), static_cast<float>(j * cellHeight), static_cast<float>((i + 1) * cellWidth), static_cast<float>((j + 1) * cellHeight) );
	.loc 14 560 171
	movl	-4(%rbp), %eax	 # j, tmp199
	addl	$1, %eax	 #, _13
 # src\main.cpp:560: 				D2D1_RECT_F rect = D2D1::RectF( static_cast<float>(i * cellWidth), static_cast<float>(j * cellHeight), static_cast<float>((i + 1) * cellWidth), static_cast<float>((j + 1) * cellHeight) );
	.loc 14 560 176
	imull	72(%rbp), %eax	 # cellHeight, _14
 # src\main.cpp:560: 				D2D1_RECT_F rect = D2D1::RectF( static_cast<float>(i * cellWidth), static_cast<float>(j * cellHeight), static_cast<float>((i + 1) * cellWidth), static_cast<float>((j + 1) * cellHeight) );
	.loc 14 560 35
	pxor	%xmm0, %xmm0	 # _15
	cvtsi2ssl	%eax, %xmm0	 # _14, _15
 # src\main.cpp:560: 				D2D1_RECT_F rect = D2D1::RectF( static_cast<float>(i * cellWidth), static_cast<float>(j * cellHeight), static_cast<float>((i + 1) * cellWidth), static_cast<float>((j + 1) * cellHeight) );
	.loc 14 560 130
	movl	-8(%rbp), %eax	 # i, tmp200
	addl	$1, %eax	 #, _16
 # src\main.cpp:560: 				D2D1_RECT_F rect = D2D1::RectF( static_cast<float>(i * cellWidth), static_cast<float>(j * cellHeight), static_cast<float>((i + 1) * cellWidth), static_cast<float>((j + 1) * cellHeight) );
	.loc 14 560 135
	imull	64(%rbp), %eax	 # cellWidth, _17
 # src\main.cpp:560: 				D2D1_RECT_F rect = D2D1::RectF( static_cast<float>(i * cellWidth), static_cast<float>(j * cellHeight), static_cast<float>((i + 1) * cellWidth), static_cast<float>((j + 1) * cellHeight) );
	.loc 14 560 35
	pxor	%xmm1, %xmm1	 # _18
	cvtsi2ssl	%eax, %xmm1	 # _17, _18
 # src\main.cpp:560: 				D2D1_RECT_F rect = D2D1::RectF( static_cast<float>(i * cellWidth), static_cast<float>(j * cellHeight), static_cast<float>((i + 1) * cellWidth), static_cast<float>((j + 1) * cellHeight) );
	.loc 14 560 93
	movl	-4(%rbp), %eax	 # j, tmp201
	imull	72(%rbp), %eax	 # cellHeight, _19
 # src\main.cpp:560: 				D2D1_RECT_F rect = D2D1::RectF( static_cast<float>(i * cellWidth), static_cast<float>(j * cellHeight), static_cast<float>((i + 1) * cellWidth), static_cast<float>((j + 1) * cellHeight) );
	.loc 14 560 35
	pxor	%xmm2, %xmm2	 # _20
	cvtsi2ssl	%eax, %xmm2	 # _19, _20
 # src\main.cpp:560: 				D2D1_RECT_F rect = D2D1::RectF( static_cast<float>(i * cellWidth), static_cast<float>(j * cellHeight), static_cast<float>((i + 1) * cellWidth), static_cast<float>((j + 1) * cellHeight) );
	.loc 14 560 58
	movl	-8(%rbp), %eax	 # i, tmp202
	imull	64(%rbp), %eax	 # cellWidth, _21
 # src\main.cpp:560: 				D2D1_RECT_F rect = D2D1::RectF( static_cast<float>(i * cellWidth), static_cast<float>(j * cellHeight), static_cast<float>((i + 1) * cellWidth), static_cast<float>((j + 1) * cellHeight) );
	.loc 14 560 35
	pxor	%xmm3, %xmm3	 # _22
	cvtsi2ssl	%eax, %xmm3	 # _21, _22
	movss	%xmm3, -52(%rbp)	 # _22, left
	movss	%xmm2, -56(%rbp)	 # _20, top
	movss	%xmm1, -60(%rbp)	 # _18, right
	movss	%xmm0, -64(%rbp)	 # _15, bottom
	movss	-52(%rbp), %xmm0	 # left, tmp203
	movss	%xmm0, -68(%rbp)	 # tmp203, left
	movss	-56(%rbp), %xmm0	 # top, tmp204
	movss	%xmm0, -72(%rbp)	 # tmp204, top
	movss	-60(%rbp), %xmm0	 # right, tmp205
	movss	%xmm0, -76(%rbp)	 # tmp205, right
	movss	-64(%rbp), %xmm0	 # bottom, tmp206
	movss	%xmm0, -80(%rbp)	 # tmp206, bottom
.LBB160:
.LBB161:
.LBB162:
.LBB163:
 # C:/msys64/mingw64/include/d2d1helper.h:58:     typename TypeTraits<T>::Rect r = {left, top, right, bottom};
	.loc 16 58 34
	movss	-68(%rbp), %xmm0	 # left, tmp207
	movss	%xmm0, -112(%rbp)	 # tmp207, rect.left
	movss	-72(%rbp), %xmm0	 # top, tmp208
	movss	%xmm0, -108(%rbp)	 # tmp208, rect.top
	movss	-76(%rbp), %xmm0	 # right, tmp209
	movss	%xmm0, -104(%rbp)	 # tmp209, rect.right
	movss	-80(%rbp), %xmm0	 # bottom, tmp210
	movss	%xmm0, -100(%rbp)	 # tmp210, rect.bottom
 # C:/msys64/mingw64/include/d2d1helper.h:59:     return r;
	.loc 16 59 12
	nop	
.LBE163:
.LBE162:
 # C:/msys64/mingw64/include/d2d1helper.h:63:     return Rect<FLOAT>(left, top, right, bottom);
	.loc 16 63 48
	nop	
.LBE161:
.LBE160:
 # src\main.cpp:561:     			BitmapRT->FillRectangle(&rect, brushPool[static_cast<uint32_t>(matrix->CELL_FRONT_BUFFER[matrix->FlattenedIndex(i, j, matrix->_zLevel)].MaterialType)]);
	.loc 14 561 31
	movq	BitmapRT(%rip), %rax	 # BitmapRT, BitmapRT.7_25
	movq	(%rax), %rax	 # BitmapRT.7_25->D.201369.D.200640.D.199868._vptr.IUnknown, _26
	addq	$136, %rax	 #, _27
	movq	(%rax), %rbx	 # *_27, _28
	movq	BitmapRT(%rip), %rax	 # BitmapRT, BitmapRT.8_29
	movq	%rax, %r12	 # BitmapRT.8_29, _30
 # src\main.cpp:561:     			BitmapRT->FillRectangle(&rect, brushPool[static_cast<uint32_t>(matrix->CELL_FRONT_BUFFER[matrix->FlattenedIndex(i, j, matrix->_zLevel)].MaterialType)]);
	.loc 14 561 39
	movq	brushPool(%rip), %rsi	 # brushPool, brushPool.9_98
 # src\main.cpp:561:     			BitmapRT->FillRectangle(&rect, brushPool[static_cast<uint32_t>(matrix->CELL_FRONT_BUFFER[matrix->FlattenedIndex(i, j, matrix->_zLevel)].MaterialType)]);
	.loc 14 561 79
	movq	-16(%rbp), %rax	 # matrix, tmp211
	movq	8(%rax), %rdi	 # matrix_82->CELL_FRONT_BUFFER, _99
 # src\main.cpp:561:     			BitmapRT->FillRectangle(&rect, brushPool[static_cast<uint32_t>(matrix->CELL_FRONT_BUFFER[matrix->FlattenedIndex(i, j, matrix->_zLevel)].MaterialType)]);
	.loc 14 561 134
	movq	-16(%rbp), %rax	 # matrix, tmp212
	movzwl	56(%rax), %eax	 # matrix_82->_zLevel, _31
 # src\main.cpp:561:     			BitmapRT->FillRectangle(&rect, brushPool[static_cast<uint32_t>(matrix->CELL_FRONT_BUFFER[matrix->FlattenedIndex(i, j, matrix->_zLevel)].MaterialType)]);
	.loc 14 561 119
	movzwl	%ax, %r8d	 # _31, _32
	movl	-4(%rbp), %ecx	 # j, j.10_33
	movl	-8(%rbp), %edx	 # i, i.11_34
	movq	-16(%rbp), %rax	 # matrix, tmp213
	movl	%r8d, %r9d	 # _32,
	movl	%ecx, %r8d	 # j.10_33,
	movq	%rax, %rcx	 # tmp213,
	call	_ZN6MATRIX14FlattenedIndexEjjj	 #
	movl	%eax, %eax	 # _35, _36
 # src\main.cpp:561:     			BitmapRT->FillRectangle(&rect, brushPool[static_cast<uint32_t>(matrix->CELL_FRONT_BUFFER[matrix->FlattenedIndex(i, j, matrix->_zLevel)].MaterialType)]);
	.loc 14 561 142
	salq	$5, %rax	 #, _37
	addq	%rdi, %rax	 # _99, _38
 # src\main.cpp:561:     			BitmapRT->FillRectangle(&rect, brushPool[static_cast<uint32_t>(matrix->CELL_FRONT_BUFFER[matrix->FlattenedIndex(i, j, matrix->_zLevel)].MaterialType)]);
	.loc 14 561 144
	movl	28(%rax), %eax	 # _38->MaterialType, _39
 # src\main.cpp:561:     			BitmapRT->FillRectangle(&rect, brushPool[static_cast<uint32_t>(matrix->CELL_FRONT_BUFFER[matrix->FlattenedIndex(i, j, matrix->_zLevel)].MaterialType)]);
	.loc 14 561 49
	movl	%eax, %eax	 # _39, _40
 # src\main.cpp:561:     			BitmapRT->FillRectangle(&rect, brushPool[static_cast<uint32_t>(matrix->CELL_FRONT_BUFFER[matrix->FlattenedIndex(i, j, matrix->_zLevel)].MaterialType)]);
	.loc 14 561 157
	salq	$3, %rax	 #, _41
	addq	%rsi, %rax	 # brushPool.9_98, _42
 # src\main.cpp:561:     			BitmapRT->FillRectangle(&rect, brushPool[static_cast<uint32_t>(matrix->CELL_FRONT_BUFFER[matrix->FlattenedIndex(i, j, matrix->_zLevel)].MaterialType)]);
	.loc 14 561 31
	movq	(%rax), %rdx	 # *_42, _43
	leaq	-112(%rbp), %rax	 #, tmp214
	movq	%rdx, %r8	 # _43,
	movq	%rax, %rdx	 # tmp214,
	movq	%r12, %rcx	 # _30,
	call	*%rbx	 # _28
.LVL12:
.LBE159:
 # src\main.cpp:558:     		for (int i = 0; i < matrix->w; ++i)
	.loc 14 558 7
	addl	$1, -8(%rbp)	 #, i
.L292:
 # src\main.cpp:558:     		for (int i = 0; i < matrix->w; ++i)
	.loc 14 558 35 discriminator 1
	movq	-16(%rbp), %rax	 # matrix, tmp215
	movl	40(%rax), %eax	 # matrix_82->w, _44
 # src\main.cpp:558:     		for (int i = 0; i < matrix->w; ++i)
	.loc 14 558 23 discriminator 1
	movl	-8(%rbp), %edx	 # i, i.12_45
 # src\main.cpp:558:     		for (int i = 0; i < matrix->w; ++i)
	.loc 14 558 25 discriminator 1
	cmpl	%eax, %edx	 # _44, i.12_45
	jb	.L295	 #,
.LBE158:
.LBE157:
 # src\main.cpp:556: 		for (int j = 0; j < matrix->h; ++j)
	.loc 14 556 3 discriminator 2
	addl	$1, -4(%rbp)	 #, j
.L291:
 # src\main.cpp:556: 		for (int j = 0; j < matrix->h; ++j)
	.loc 14 556 31 discriminator 1
	movq	-16(%rbp), %rax	 # matrix, tmp216
	movl	44(%rax), %eax	 # matrix_82->h, _46
 # src\main.cpp:556: 		for (int j = 0; j < matrix->h; ++j)
	.loc 14 556 19 discriminator 1
	movl	-4(%rbp), %edx	 # j, j.13_47
 # src\main.cpp:556: 		for (int j = 0; j < matrix->h; ++j)
	.loc 14 556 21 discriminator 1
	cmpl	%eax, %edx	 # _46, j.13_47
	jb	.L296	 #,
.LBE156:
 # src\main.cpp:564: 		BitmapRT->EndDraw();
	.loc 14 564 20
	movq	BitmapRT(%rip), %rax	 # BitmapRT, BitmapRT.15_50
	movq	(%rax), %rax	 # BitmapRT.15_50->D.201369.D.200640.D.199868._vptr.IUnknown, _51
	addq	$392, %rax	 #, _52
	movq	(%rax), %rax	 # *_52, _53
	movq	BitmapRT(%rip), %rdx	 # BitmapRT, BitmapRT.16_54
	movq	%rdx, %rcx	 # BitmapRT.16_54, _55
	movl	$0, %r8d	 #,
	movl	$0, %edx	 #,
	call	*%rax	 # _53
.LVL13:
 # src\main.cpp:565: 		if(Bitmap) { Bitmap->Release(); Bitmap = nullptr; }
	.loc 14 565 6
	movq	Bitmap(%rip), %rax	 # Bitmap, Bitmap.17_56
 # src\main.cpp:565: 		if(Bitmap) { Bitmap->Release(); Bitmap = nullptr; }
	.loc 14 565 3
	testq	%rax, %rax	 # Bitmap.17_56
	je	.L297	 #,
 # src\main.cpp:565: 		if(Bitmap) { Bitmap->Release(); Bitmap = nullptr; }
	.loc 14 565 31 discriminator 1
	movq	Bitmap(%rip), %rax	 # Bitmap, Bitmap.19_59
	movq	(%rax), %rax	 # Bitmap.19_59->D.199978.D.199927.D.199868._vptr.IUnknown, _60
	addq	$16, %rax	 #, _61
	movq	(%rax), %rax	 # *_61, _62
	movq	Bitmap(%rip), %rdx	 # Bitmap, Bitmap.20_63
	movq	%rdx, %rcx	 # _64,
	call	*%rax	 # _62
.LVL14:
 # src\main.cpp:565: 		if(Bitmap) { Bitmap->Release(); Bitmap = nullptr; }
	.loc 14 565 42 discriminator 1
	movq	$0, Bitmap(%rip)	 #, Bitmap
.L297:
 # src\main.cpp:566: 		HRESULT hr = BitmapRT->GetBitmap(&Bitmap);
	.loc 14 566 35
	movq	BitmapRT(%rip), %rax	 # BitmapRT, BitmapRT.22_66
	movq	(%rax), %rax	 # BitmapRT.22_66->D.201369.D.200640.D.199868._vptr.IUnknown, _67
	addq	$456, %rax	 #, _68
	movq	(%rax), %r8	 # *_68, _69
	movq	BitmapRT(%rip), %rax	 # BitmapRT, BitmapRT.23_70
	leaq	Bitmap(%rip), %rdx	 #, tmp217
	movq	%rax, %rcx	 # BitmapRT.23_70,
	call	*%r8	 # _69
.LVL15:
	movl	%eax, -20(%rbp)	 # _91, hr
 # src\main.cpp:567: 		ErrorHandle(hr);
	.loc 14 567 14
	movl	-20(%rbp), %eax	 # hr, tmp218
	movl	%eax, %ecx	 # tmp218,
	call	_ZN21WINDOWGraphicsOverlay11ErrorHandleEl	 #
.L282:
 # src\main.cpp:568: 	}
	.loc 14 568 2
	addq	$144, %rsp	 #,
	popq	%rbx	 #
.LCFI326:
	popq	%rsi	 #
.LCFI327:
	popq	%rdi	 #
.LCFI328:
	popq	%r12	 #
.LCFI329:
	popq	%rbp	 #
.LCFI330:
	ret	
.LFE10944:
	.seh_endproc
	.section	.text$_ZN6MATRIXD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIXD1Ev
	.def	_ZN6MATRIXD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIXD1Ev
_ZN6MATRIXD1Ev:
.LFB10948:
	.loc 14 74 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI331:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI332:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB164:
 # src\main.cpp:74: struct MATRIX
	.loc 14 74 8
	movq	16(%rbp), %rax	 # this, tmp83
	addq	$32, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev	 #
.LBE164:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI333:
	ret	
.LFE10948:
	.seh_endproc
	.section	.text$_ZN6MATRIX4cellC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIX4cellC1Ev
	.def	_ZN6MATRIX4cellC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX4cellC1Ev
_ZN6MATRIX4cellC1Ev:
.LFB10951:
	.loc 14 93 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI334:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI335:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB165:
 # src\main.cpp:93: 		cell() = default;
	.loc 14 93 3
	movq	16(%rbp), %rax	 # this, tmp83
	pxor	%xmm0, %xmm0	 # tmp84
	movss	%xmm0, (%rax)	 # tmp84, this_3(D)->temperature
	movq	16(%rbp), %rax	 # this, tmp85
	addq	$4, %rax	 #, _1
	pxor	%xmm3, %xmm3	 #
	pxor	%xmm2, %xmm2	 #
	pxor	%xmm1, %xmm1	 #
	movq	%rax, %rcx	 # _1,
	call	_ZN5Vec3DC1Efff	 #
	movq	16(%rbp), %rax	 # this, tmp86
	pxor	%xmm0, %xmm0	 # tmp87
	movsd	%xmm0, 16(%rax)	 # tmp87, this_3(D)->pressure
	movq	16(%rbp), %rax	 # this, tmp88
	movb	$0, 24(%rax)	 #, this_3(D)->active
.LBE165:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI336:
	ret	
.LFE10951:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC43:
	.ascii "RenderTarget->CreateCompatibleRenderTarget(&BitmapRT); RENDERTARGET = nullptr\0"
	.align 8
.LC44:
	.ascii "WM_SIZE: RENDERTARGET = nullptr\0"
	.align 8
.LC45:
	.ascii "cell[%d, %d][SLICE: %d]->element: %s\12\0"
	.align 8
.LC48:
	.ascii "WM_PAINT: RENDERTARGET = nullptr\12\0"
	.text
	.globl	_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx
	.def	_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx
_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx:
.LFB10945:
	.loc 14 571 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI337:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI338:
	subq	$1688, %rsp	 #,
	.seh_stackalloc	1688
.LCFI339:
	leaq	128(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 128
.LCFI340:
	.seh_endprologue
	movq	%rcx, 1584(%rbp)	 # hwnd, hwnd
	movl	%edx, 1592(%rbp)	 # msg, msg
	movq	%r8, 1600(%rbp)	 # wp, wp
	movq	%r9, 1608(%rbp)	 # lp, lp
.LBB166:
 # src\main.cpp:572: 		if (msg == WM_NCCREATE)
	.loc 14 572 3
	cmpl	$129, 1592(%rbp)	 #, msg
	jne	.L301	 #,
.LBB167:
 # src\main.cpp:574:     	    CREATESTRUCT* pcs = reinterpret_cast<CREATESTRUCT*>(lp);
	.loc 14 574 24
	movq	1608(%rbp), %rax	 # lp, tmp218
	movq	%rax, 1472(%rbp)	 # tmp218, pcs
 # src\main.cpp:575:     	    MATRIX* matrix = static_cast<MATRIX*>(pcs->lpCreateParams);
	.loc 14 575 18
	movq	1472(%rbp), %rax	 # pcs, tmp219
	movq	(%rax), %rax	 # pcs_291->lpCreateParams, tmp220
	movq	%rax, 1464(%rbp)	 # tmp220, matrix
 # src\main.cpp:576:     	   	SetWindowLongPtr(hwnd, GWLP_USERDATA, reinterpret_cast<LONG_PTR>(matrix));
	.loc 14 576 26
	movq	1464(%rbp), %rdx	 # matrix, matrix.29_1
	movq	1584(%rbp), %rax	 # hwnd, tmp221
	movq	%rdx, %r8	 # matrix.29_1,
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp221,
	movq	__imp_SetWindowLongPtrW(%rip), %rax	 #, tmp222
.LEHB6:
	call	*%rax	 # tmp222
.LVL16:
 # src\main.cpp:578: 			return 1;
	.loc 14 578 11
	movl	$1, %eax	 #, _123
	jmp	.L348	 #
.L301:
.LBE167:
.LBE166:
.LBB168:
 # src\main.cpp:581: 		if(msg == WM_NCDESTROY)
	.loc 14 581 3
	cmpl	$130, 1592(%rbp)	 #, msg
	jne	.L303	 #,
.LBB169:
 # src\main.cpp:583: 			MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 583 63
	movq	1584(%rbp), %rax	 # hwnd, tmp223
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp223,
	movq	__imp_GetWindowLongPtrW(%rip), %rax	 #, tmp224
	call	*%rax	 # tmp224
.LVL17:
 # src\main.cpp:583: 			MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 583 84
	movq	%rax, 1536(%rbp)	 # _2, matrix
 # src\main.cpp:584: 			delete matrix;
	.loc 14 584 11
	movq	1536(%rbp), %rbx	 # matrix, matrix.30_156
 # src\main.cpp:584: 			delete matrix;
	.loc 14 584 4
	testq	%rbx, %rbx	 # matrix.30_156
	je	.L304	 #,
 # src\main.cpp:584: 			delete matrix;
	.loc 14 584 11 discriminator 1
	movq	%rbx, %rcx	 # matrix.30_156,
	call	_ZN6MATRIXD1Ev	 #
	movl	$64, %edx	 #,
	movq	%rbx, %rcx	 # matrix.30_156,
	call	_ZdlPvy	 #
.L304:
 # src\main.cpp:585: 			matrix=nullptr;
	.loc 14 585 10
	movq	$0, 1536(%rbp)	 #, matrix
 # src\main.cpp:586: 			SetWindowLongPtr(hwnd, GWLP_USERDATA, 0);
	.loc 14 586 20
	movq	1584(%rbp), %rax	 # hwnd, tmp225
	movl	$0, %r8d	 #,
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp225,
	movq	__imp_SetWindowLongPtrW(%rip), %rax	 #, tmp226
	call	*%rax	 # tmp226
.LVL18:
 # src\main.cpp:588: 			if(RenderTarget){RenderTarget->Release();}
	.loc 14 588 7
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.31_3
 # src\main.cpp:588: 			if(RenderTarget){RenderTarget->Release();}
	.loc 14 588 4
	testq	%rax, %rax	 # RenderTarget.31_3
	je	.L305	 #,
 # src\main.cpp:588: 			if(RenderTarget){RenderTarget->Release();}
	.loc 14 588 42 discriminator 1
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.33_6
	movq	(%rax), %rax	 # RenderTarget.33_6->D.201843.D.200640.D.199868._vptr.IUnknown, _7
	addq	$16, %rax	 #, _8
	movq	(%rax), %rax	 # *_8, _9
	movq	RenderTarget(%rip), %rdx	 # RenderTarget, RenderTarget.34_10
	movq	%rdx, %rcx	 # _11,
	call	*%rax	 # _9
.LVL19:
.L305:
 # src\main.cpp:589: 			if(Factory)     {Factory->Release();     }
	.loc 14 589 7
	movq	Factory(%rip), %rax	 # Factory, Factory.35_12
 # src\main.cpp:589: 			if(Factory)     {Factory->Release();     }
	.loc 14 589 4
	testq	%rax, %rax	 # Factory.35_12
	je	.L306	 #,
 # src\main.cpp:589: 			if(Factory)     {Factory->Release();     }
	.loc 14 589 37 discriminator 1
	movq	Factory(%rip), %rax	 # Factory, Factory.37_15
	movq	(%rax), %rax	 # Factory.37_15->D.201619._vptr.IUnknown, _16
	addq	$16, %rax	 #, _17
	movq	(%rax), %rax	 # *_17, _18
	movq	Factory(%rip), %rdx	 # Factory, Factory.38_19
	movq	%rdx, %rcx	 # _20,
	call	*%rax	 # _18
.LVL20:
.L306:
.LBB170:
 # src\main.cpp:591: 			for(uint32_t i=0; i<=static_cast<uint32_t>(MATRIX::element::size) -1; ++i)
	.loc 14 591 17
	movl	$0, 1548(%rbp)	 #, i
 # src\main.cpp:591: 			for(uint32_t i=0; i<=static_cast<uint32_t>(MATRIX::element::size) -1; ++i)
	.loc 14 591 4
	jmp	.L307	 #
.L309:
 # src\main.cpp:593: 				if(brushPool[i])
	.loc 14 593 19
	movq	brushPool(%rip), %rax	 # brushPool, brushPool.39_21
 # src\main.cpp:593: 				if(brushPool[i])
	.loc 14 593 18
	movl	1548(%rbp), %edx	 # i, _22
 # src\main.cpp:593: 				if(brushPool[i])
	.loc 14 593 19
	salq	$3, %rdx	 #, _23
	addq	%rdx, %rax	 # _23, _24
	movq	(%rax), %rax	 # *_24, _25
 # src\main.cpp:593: 				if(brushPool[i])
	.loc 14 593 5
	testq	%rax, %rax	 # _25
	je	.L308	 #,
 # src\main.cpp:595: 					brushPool[i]->Release();
	.loc 14 595 17
	movq	brushPool(%rip), %rax	 # brushPool, brushPool.41_32
 # src\main.cpp:595: 					brushPool[i]->Release();
	.loc 14 595 16
	movl	1548(%rbp), %edx	 # i, _33
 # src\main.cpp:595: 					brushPool[i]->Release();
	.loc 14 595 17
	salq	$3, %rdx	 #, _34
	addq	%rdx, %rax	 # _34, _35
 # src\main.cpp:595: 					brushPool[i]->Release();
	.loc 14 595 27
	movq	(%rax), %rax	 # *_35, _36
	movq	(%rax), %rax	 # _36->D.202031.D.199894.D.199868._vptr.IUnknown, _37
	addq	$16, %rax	 #, _38
	movq	(%rax), %rax	 # *_38, _39
 # src\main.cpp:595: 					brushPool[i]->Release();
	.loc 14 595 17
	movq	brushPool(%rip), %rdx	 # brushPool, brushPool.42_40
 # src\main.cpp:595: 					brushPool[i]->Release();
	.loc 14 595 16
	movl	1548(%rbp), %ecx	 # i, _41
 # src\main.cpp:595: 					brushPool[i]->Release();
	.loc 14 595 17
	salq	$3, %rcx	 #, _42
	addq	%rcx, %rdx	 # _42, _43
 # src\main.cpp:595: 					brushPool[i]->Release();
	.loc 14 595 27
	movq	(%rdx), %rdx	 # *_43, _44
	movq	%rdx, %rcx	 # _45,
	call	*%rax	 # _39
.LVL21:
 # src\main.cpp:596: 					brushPool[i] = nullptr;
	.loc 14 596 17
	movq	brushPool(%rip), %rax	 # brushPool, brushPool.43_46
 # src\main.cpp:596: 					brushPool[i] = nullptr;
	.loc 14 596 16
	movl	1548(%rbp), %edx	 # i, _47
 # src\main.cpp:596: 					brushPool[i] = nullptr;
	.loc 14 596 17
	salq	$3, %rdx	 #, _48
	addq	%rdx, %rax	 # _48, _49
 # src\main.cpp:596: 					brushPool[i] = nullptr;
	.loc 14 596 19
	movq	$0, (%rax)	 #, *_49
.L308:
 # src\main.cpp:599: 				free(memory);
	.loc 14 599 9 discriminator 2
	movq	memory(%rip), %rax	 # memory, memory.44_50
	movq	%rax, %rcx	 # memory.44_50,
	call	free	 #
 # src\main.cpp:600: 				memory = nullptr;
	.loc 14 600 12 discriminator 2
	movq	$0, memory(%rip)	 #, memory
 # src\main.cpp:591: 			for(uint32_t i=0; i<=static_cast<uint32_t>(MATRIX::element::size) -1; ++i)
	.loc 14 591 4 discriminator 2
	addl	$1, 1548(%rbp)	 #, i
.L307:
 # src\main.cpp:591: 			for(uint32_t i=0; i<=static_cast<uint32_t>(MATRIX::element::size) -1; ++i)
	.loc 14 591 23 discriminator 1
	cmpl	$5, 1548(%rbp)	 #, i
	jbe	.L309	 #,
.L303:
.LBE170:
.LBE169:
.LBE168:
.LBB171:
 # src\main.cpp:604: 		switch(msg)
	.loc 14 604 3
	cmpl	$512, 1592(%rbp)	 #, msg
	je	.L310	 #,
	cmpl	$512, 1592(%rbp)	 #, msg
	ja	.L311	 #,
	cmpl	$256, 1592(%rbp)	 #, msg
	je	.L312	 #,
	cmpl	$256, 1592(%rbp)	 #, msg
	ja	.L311	 #,
	cmpl	$15, 1592(%rbp)	 #, msg
	je	.L313	 #,
	cmpl	$15, 1592(%rbp)	 #, msg
	ja	.L311	 #,
	cmpl	$5, 1592(%rbp)	 #, msg
	je	.L314	 #,
	cmpl	$5, 1592(%rbp)	 #, msg
	ja	.L311	 #,
	cmpl	$1, 1592(%rbp)	 #, msg
	je	.L315	 #,
	cmpl	$2, 1592(%rbp)	 #, msg
	je	.L316	 #,
	jmp	.L311	 #
.L315:
.LBB172:
.LBB173:
 # src\main.cpp:608: 				HRESULT hr = D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, &Factory);
	.loc 14 608 35
	leaq	Factory(%rip), %rax	 #, tmp227
	movq	%rax, %rdx	 # tmp227,
	movl	$0, %ecx	 #,
	call	_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_	 #
	movl	%eax, 1544(%rbp)	 # _259, hr
.LBB174:
 # src\main.cpp:609: 				if(FAILED(hr))
	.loc 14 609 5
	cmpl	$0, 1544(%rbp)	 #, hr
	jns	.L317	 #,
.LBB175:
 # src\main.cpp:612:         			swprintf_s(errorMsg, L"D2D1CreateFactory failed with HRESULT: 0x%08X", hr);
	.loc 14 612 22
	movl	1544(%rbp), %edx	 # hr, tmp228
	leaq	-80(%rbp), %rax	 #, tmp229
	movl	%edx, %r8d	 # tmp228,
	leaq	.LC37(%rip), %rdx	 #, tmp230
	movq	%rax, %rcx	 # tmp229,
	call	_Z10swprintf_sILy512EEiRAT__wPKwz	 #
 # src\main.cpp:613:         			MessageBoxW(0, errorMsg, L"Error", MB_ICONERROR);
	.loc 14 613 23
	leaq	-80(%rbp), %rax	 #, tmp231
	movl	$16, %r9d	 #,
	leaq	.LC38(%rip), %r8	 #,
	movq	%rax, %rdx	 # tmp231,
	movl	$0, %ecx	 #,
	movq	__imp_MessageBoxW(%rip), %rax	 #, tmp232
	call	*%rax	 # tmp232
.LVL22:
.L317:
.LBE175:
.LBE174:
 # src\main.cpp:616: 				FLOAT dpiX = 96.0f;
	.loc 14 616 11
	movss	.LC42(%rip), %xmm0	 #, tmp233
	movss	%xmm0, 1484(%rbp)	 # tmp233, dpiX
 # src\main.cpp:617: 				FLOAT dpiY = 96.0f;
	.loc 14 617 11
	movss	.LC42(%rip), %xmm0	 #, tmp234
	movss	%xmm0, 1480(%rbp)	 # tmp234, dpiY
 # src\main.cpp:621: 				GetClientRect(hwnd, &rc);
	.loc 14 621 18
	leaq	1056(%rbp), %rdx	 #, tmp235
	movq	1584(%rbp), %rax	 # hwnd, tmp236
	movq	%rax, %rcx	 # tmp236,
	movq	__imp_GetClientRect(%rip), %rax	 #, tmp237
	call	*%rax	 # tmp237
.LVL23:
 # src\main.cpp:623: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 14 623 59
	movl	1068(%rbp), %edx	 # rc.bottom, _51
 # src\main.cpp:623: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 14 623 71
	movl	1060(%rbp), %eax	 # rc.top, _52
 # src\main.cpp:623: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 14 623 66
	subl	%eax, %edx	 # _52, _53
 # src\main.cpp:623: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 14 623 35
	movl	%edx, %ecx	 # _53, _54
 # src\main.cpp:623: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 14 623 39
	movl	1064(%rbp), %edx	 # rc.right, _55
 # src\main.cpp:623: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 14 623 50
	movl	1056(%rbp), %eax	 # rc.left, _56
 # src\main.cpp:623: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 14 623 45
	subl	%eax, %edx	 # _56, _57
 # src\main.cpp:623: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 14 623 35
	movl	%edx, %eax	 # _57, _58
	movl	%eax, 1460(%rbp)	 # _58, width
	movl	%ecx, 1456(%rbp)	 # _54, height
	movl	1460(%rbp), %eax	 # width, tmp238
	movl	%eax, 1452(%rbp)	 # tmp238, width
	movl	1456(%rbp), %eax	 # height, tmp239
	movl	%eax, 1448(%rbp)	 # tmp239, height
.LBB176:
.LBB177:
.LBB178:
.LBB179:
 # C:/msys64/mingw64/include/d2d1helper.h:45:     typename TypeTraits<T>::Size r = {width, height};
	.loc 16 45 34
	movl	1452(%rbp), %eax	 # width, tmp240
	movl	%eax, 960(%rbp)	 # tmp240, r.width
	movl	1448(%rbp), %eax	 # height, tmp241
	movl	%eax, 964(%rbp)	 # tmp241, r.height
 # C:/msys64/mingw64/include/d2d1helper.h:46:     return r;
	.loc 16 46 12
	movq	960(%rbp), %rax	 # r, D.237736
.LBE179:
.LBE178:
 # C:/msys64/mingw64/include/d2d1helper.h:54:     return Size<UINT32>(width, height);
	.loc 16 54 38
	nop	
.LBE177:
.LBE176:
 # src\main.cpp:623: 				D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);
	.loc 14 623 35
	movq	%rax, 1048(%rbp)	 # D.237735, size
	movl	$87, 1424(%rbp)	 #, dxgiFormat
	movl	$1, 1420(%rbp)	 #, alphaMode
.LBB180:
.LBB181:
 # C:/msys64/mingw64/include/d2d1helper.h:146:     D2D1_PIXEL_FORMAT r = {dxgiFormat, alphaMode};
	.loc 16 146 49
	movl	1424(%rbp), %eax	 # dxgiFormat, tmp242
	movl	%eax, 968(%rbp)	 # tmp242, r.format
	movl	1420(%rbp), %eax	 # alphaMode, tmp243
	movl	%eax, 972(%rbp)	 # tmp243, r.alphaMode
 # C:/msys64/mingw64/include/d2d1helper.h:147:     return r;
	.loc 16 147 12
	movq	968(%rbp), %rax	 # r, D.237753
.LBE181:
.LBE180:
 # src\main.cpp:627:     				D2D1::PixelFormat(DXGI_FORMAT_B8G8R8A8_UNORM, D2D1_ALPHA_MODE_PREMULTIPLIED),
	.loc 14 627 26
	movq	%rax, 1072(%rbp)	 # D.237752, D.209022
	movl	$2, 1444(%rbp)	 #, type
	movss	1484(%rbp), %xmm0	 # dpiX, tmp244
	movss	%xmm0, 1440(%rbp)	 # tmp244, dpiX
	movss	1480(%rbp), %xmm0	 # dpiY, tmp245
	movss	%xmm0, 1436(%rbp)	 # tmp245, dpiY
	movl	$0, 1432(%rbp)	 #, usage
	movl	$0, 1428(%rbp)	 #, minLevel
.LBB182:
.LBB183:
 # C:/msys64/mingw64/include/d2d1helper.h:164:     D2D1_RENDER_TARGET_PROPERTIES r = {type, pixelFormat, dpiX, dpiY, usage, minLevel};
	.loc 16 164 86
	movl	1444(%rbp), %eax	 # type, tmp246
	movl	%eax, 1008(%rbp)	 # tmp246, props.type
	movq	1072(%rbp), %rax	 # D.209022, tmp247
	movq	%rax, 1012(%rbp)	 # tmp247, props.pixelFormat
	movss	1440(%rbp), %xmm0	 # dpiX, tmp248
	movss	%xmm0, 1020(%rbp)	 # tmp248, props.dpiX
	movss	1436(%rbp), %xmm0	 # dpiY, tmp249
	movss	%xmm0, 1024(%rbp)	 # tmp249, props.dpiY
	movl	1432(%rbp), %eax	 # usage, tmp250
	movl	%eax, 1028(%rbp)	 # tmp250, props.usage
	movl	1428(%rbp), %eax	 # minLevel, tmp251
	movl	%eax, 1032(%rbp)	 # tmp251, props.minLevel
 # C:/msys64/mingw64/include/d2d1helper.h:165:     return r;
	.loc 16 165 12
	nop	
.LBE183:
.LBE182:
 # src\main.cpp:631: 				D2D1_HWND_RENDER_TARGET_PROPERTIES hwndProps = {};
	.loc 14 631 40
	pxor	%xmm0, %xmm0	 # tmp252
	movups	%xmm0, 976(%rbp)	 # tmp252, hwndProps
	movq	%xmm0, 992(%rbp)	 # tmp252, hwndProps
 # src\main.cpp:632: 				hwndProps.hwnd 			   = hwnd;
	.loc 14 632 26
	movq	1584(%rbp), %rax	 # hwnd, tmp253
	movq	%rax, 976(%rbp)	 # tmp253, hwndProps.hwnd
 # src\main.cpp:633: 				hwndProps.pixelSize		   = size;
	.loc 14 633 29
	movq	1048(%rbp), %rax	 # size, tmp254
	movq	%rax, 984(%rbp)	 # tmp254, hwndProps.pixelSize
 # src\main.cpp:634: 				hwndProps.presentOptions   = D2D1_PRESENT_OPTIONS_NONE;
	.loc 14 634 32
	movl	$0, 992(%rbp)	 #, hwndProps.presentOptions
 # src\main.cpp:636: 				if(Factory)
	.loc 14 636 8
	movq	Factory(%rip), %rax	 # Factory, Factory.45_59
 # src\main.cpp:636: 				if(Factory)
	.loc 14 636 5
	testq	%rax, %rax	 # Factory.45_59
	je	.L322	 #,
 # src\main.cpp:638: 					hr = Factory->CreateHwndRenderTarget(props, hwndProps, &RenderTarget);
	.loc 14 638 42
	movq	Factory(%rip), %rax	 # Factory, Factory.46_60
	leaq	976(%rbp), %rcx	 #, tmp255
	leaq	1008(%rbp), %rdx	 #, tmp256
	leaq	RenderTarget(%rip), %r9	 #,
	movq	%rcx, %r8	 # tmp255,
	movq	%rax, %rcx	 # Factory.46_60,
	call	_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget	 #
	movl	%eax, 1544(%rbp)	 # _274, hr
.L322:
 # src\main.cpp:640: 				ErrorHandle(hr);
	.loc 14 640 16
	movl	1544(%rbp), %eax	 # hr, tmp257
	movl	%eax, %ecx	 # tmp257,
	call	_ZN21WINDOWGraphicsOverlay11ErrorHandleEl	 #
 # src\main.cpp:642: 				if(RenderTarget)
	.loc 14 642 8
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.47_61
 # src\main.cpp:642: 				if(RenderTarget)
	.loc 14 642 5
	testq	%rax, %rax	 # RenderTarget.47_61
	je	.L323	 #,
 # src\main.cpp:644: 					RenderTarget->CreateCompatibleRenderTarget(&BitmapRT);
	.loc 14 644 48
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.48_62
	movq	%rax, %rcx	 # RenderTarget.48_62, _63
	leaq	BitmapRT(%rip), %rax	 #, tmp258
	movq	%rax, %rdx	 # tmp258,
	call	_ZN17ID2D1RenderTarget28CreateCompatibleRenderTargetEPP23ID2D1BitmapRenderTarget	 #
.LBE173:
 # src\main.cpp:650: 			break;
	.loc 14 650 4
	jmp	.L325	 #
.L323:
.LBB184:
 # src\main.cpp:647: 					printf("RenderTarget->CreateCompatibleRenderTarget(&BitmapRT); RENDERTARGET = nullptr");
	.loc 14 647 12
	leaq	.LC43(%rip), %rax	 #, tmp259
	movq	%rax, %rcx	 # tmp259,
	call	_Z6printfPKcz	 #
.LBE184:
 # src\main.cpp:650: 			break;
	.loc 14 650 4
	jmp	.L325	 #
.L314:
.LBB185:
.LBB186:
 # src\main.cpp:653: 			    if (RenderTarget)
	.loc 14 653 12
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.49_64
 # src\main.cpp:653: 			    if (RenderTarget)
	.loc 14 653 8
	testq	%rax, %rax	 # RenderTarget.49_64
	je	.L326	 #,
.LBB187:
 # src\main.cpp:655: 			        UINT width  = LOWORD(lp);
	.loc 14 655 26
	movq	1608(%rbp), %rax	 # lp, tmp260
 # src\main.cpp:655: 			        UINT width  = LOWORD(lp);
	.loc 14 655 17
	movzwl	%ax, %eax	 # _65, tmp261
	movl	%eax, 1492(%rbp)	 # tmp261, width
 # src\main.cpp:656: 			        UINT height = HIWORD(lp);
	.loc 14 656 26
	movq	1608(%rbp), %rax	 # lp, lp.50_66
	shrq	$16, %rax	 #, _67
 # src\main.cpp:656: 			        UINT height = HIWORD(lp);
	.loc 14 656 17
	movzwl	%ax, %eax	 # _68, tmp262
	movl	%eax, 1488(%rbp)	 # tmp262, height
 # src\main.cpp:657: 			        RenderTarget->Resize(D2D1::SizeU(width, height));
	.loc 14 657 32
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.51_69
	movl	1492(%rbp), %edx	 # width, tmp263
	movl	%edx, 1416(%rbp)	 # tmp263, width
	movl	1488(%rbp), %edx	 # height, tmp264
	movl	%edx, 1412(%rbp)	 # tmp264, height
	movl	1416(%rbp), %edx	 # width, tmp265
	movl	%edx, 1408(%rbp)	 # tmp265, width
	movl	1412(%rbp), %edx	 # height, tmp266
	movl	%edx, 1404(%rbp)	 # tmp266, height
.LBB188:
.LBB189:
.LBB190:
.LBB191:
 # C:/msys64/mingw64/include/d2d1helper.h:45:     typename TypeTraits<T>::Size r = {width, height};
	.loc 16 45 34
	movl	1408(%rbp), %edx	 # width, tmp267
	movl	%edx, 952(%rbp)	 # tmp267, r.width
	movl	1404(%rbp), %edx	 # height, tmp268
	movl	%edx, 956(%rbp)	 # tmp268, r.height
 # C:/msys64/mingw64/include/d2d1helper.h:46:     return r;
	.loc 16 46 12
	movq	952(%rbp), %rdx	 # r, D.237761
.LBE191:
.LBE190:
 # C:/msys64/mingw64/include/d2d1helper.h:54:     return Size<UINT32>(width, height);
	.loc 16 54 38
	nop	
.LBE189:
.LBE188:
 # src\main.cpp:657: 			        RenderTarget->Resize(D2D1::SizeU(width, height));
	.loc 14 657 44
	movq	%rdx, 1080(%rbp)	 # D.237760, D.209034
 # src\main.cpp:657: 			        RenderTarget->Resize(D2D1::SizeU(width, height));
	.loc 14 657 32
	leaq	1080(%rbp), %rdx	 #, tmp269
	movq	%rax, %rcx	 # RenderTarget.51_69,
	call	_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U	 #
.LBE187:
.LBE186:
.LBE185:
 # src\main.cpp:663: 			break;
	.loc 14 663 4
	jmp	.L325	 #
.L326:
.LBB193:
.LBB192:
 # src\main.cpp:660: 					printf("WM_SIZE: RENDERTARGET = nullptr");
	.loc 14 660 12
	leaq	.LC44(%rip), %rax	 #, tmp270
	movq	%rax, %rcx	 # tmp270,
	call	_Z6printfPKcz	 #
.LBE192:
.LBE193:
 # src\main.cpp:663: 			break;
	.loc 14 663 4
	jmp	.L325	 #
.L310:
.LBB194:
 # src\main.cpp:666: 				MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 666 64
	movq	1584(%rbp), %rax	 # hwnd, tmp271
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp271,
	movq	__imp_GetWindowLongPtrW(%rip), %rax	 #, tmp272
	call	*%rax	 # tmp272
.LVL24:
 # src\main.cpp:666: 				MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 666 85
	movq	%rax, 1528(%rbp)	 # _70, matrix
 # src\main.cpp:667: 				CHECK_MATRIX_POPULATION();
	.loc 14 667 5
	cmpq	$0, 1528(%rbp)	 #, matrix
	jne	.L330	 #,
 # src\main.cpp:667: 				CHECK_MATRIX_POPULATION();
	.loc 14 667 5 is_stmt 0 discriminator 1
	movq	1608(%rbp), %r8	 # lp, tmp273
	movq	1600(%rbp), %rcx	 # wp, tmp274
	movl	1592(%rbp), %edx	 # msg, tmp275
	movq	1584(%rbp), %rax	 # hwnd, tmp276
	movq	%r8, %r9	 # tmp273,
	movq	%rcx, %r8	 # tmp274,
	movq	%rax, %rcx	 # tmp276,
	movq	__imp_DefWindowProcW(%rip), %rax	 #, tmp277
	call	*%rax	 # tmp277
.LVL25:
.LEHE6:
	jmp	.L348	 #
.L330:
 # src\main.cpp:669: 				uint32_t x = GET_X_LPARAM(lp);
	.loc 14 669 18 is_stmt 1
	movq	1608(%rbp), %rax	 # lp, tmp278
 # src\main.cpp:669: 				uint32_t x = GET_X_LPARAM(lp);
	.loc 14 669 14
	cwtl
	movl	%eax, 1524(%rbp)	 # tmp279, x
 # src\main.cpp:670: 				uint32_t y = GET_Y_LPARAM(lp);
	.loc 14 670 18
	movq	1608(%rbp), %rax	 # lp, lp.52_72
	shrq	$16, %rax	 #, _73
 # src\main.cpp:670: 				uint32_t y = GET_Y_LPARAM(lp);
	.loc 14 670 14
	cwtl
	movl	%eax, 1520(%rbp)	 # tmp280, y
 # src\main.cpp:672: 				uint32_t xCell = x / matrix->_pixelWidth;
	.loc 14 672 34
	movq	1528(%rbp), %rax	 # matrix, tmp281
	movzwl	52(%rax), %eax	 # matrix_171->_pixelWidth, _75
	movzwl	%ax, %ebx	 # _75, _76
 # src\main.cpp:672: 				uint32_t xCell = x / matrix->_pixelWidth;
	.loc 14 672 14
	movl	1524(%rbp), %eax	 # x, tmp284
	movl	$0, %edx	 #, tmp283
	divl	%ebx	 # _76
	movl	%eax, 1516(%rbp)	 # tmp282, xCell
 # src\main.cpp:673: 				uint32_t yCell = y / matrix->_pixelHeight;
	.loc 14 673 34
	movq	1528(%rbp), %rax	 # matrix, tmp285
	movzwl	54(%rax), %eax	 # matrix_171->_pixelHeight, _77
	movzwl	%ax, %ebx	 # _77, _78
 # src\main.cpp:673: 				uint32_t yCell = y / matrix->_pixelHeight;
	.loc 14 673 14
	movl	1520(%rbp), %eax	 # y, tmp288
	movl	$0, %edx	 #, tmp287
	divl	%ebx	 # _78
	movl	%eax, 1512(%rbp)	 # tmp286, yCell
 # src\main.cpp:675: 				MATRIX::cell readcell = MATRIX::cell();
	.loc 14 675 42
	pxor	%xmm0, %xmm0	 # tmp289
	movups	%xmm0, -80(%rbp)	 # tmp289, MEM[(struct cell *)_149]
	movups	%xmm0, -64(%rbp)	 # tmp289, MEM[(struct cell *)_149]
	leaq	-80(%rbp), %rax	 #, tmp290
	movq	%rax, %rcx	 # tmp290,
	call	_ZN6MATRIX4cellC1Ev	 #
 # src\main.cpp:677: 				if(wp & MK_LBUTTON)
	.loc 14 677 11
	movq	1600(%rbp), %rax	 # wp, tmp291
	andl	$1, %eax	 #, _79
 # src\main.cpp:677: 				if(wp & MK_LBUTTON)
	.loc 14 677 5
	testq	%rax, %rax	 # _79
	je	.L331	 #,
 # src\main.cpp:679: 					readcell = matrix->WriteDataTo(xCell, yCell, matrix->_zLevel, MATRIX::cell(MATRIX::element::fire));
	.loc 14 679 36
	movq	1528(%rbp), %rbx	 # matrix, matrix.53_80
 # src\main.cpp:679: 					readcell = matrix->WriteDataTo(xCell, yCell, matrix->_zLevel, MATRIX::cell(MATRIX::element::fire));
	.loc 14 679 76
	leaq	1120(%rbp), %rax	 #, tmp292
	movl	$3, %edx	 #,
	movq	%rax, %rcx	 # tmp292,
	call	_ZN6MATRIX4cellC1ENS_7elementE	 #
 # src\main.cpp:679: 					readcell = matrix->WriteDataTo(xCell, yCell, matrix->_zLevel, MATRIX::cell(MATRIX::element::fire));
	.loc 14 679 59
	movq	1528(%rbp), %rax	 # matrix, tmp293
	movzwl	56(%rax), %eax	 # matrix_171->_zLevel, _81
 # src\main.cpp:679: 					readcell = matrix->WriteDataTo(xCell, yCell, matrix->_zLevel, MATRIX::cell(MATRIX::element::fire));
	.loc 14 679 36
	movzwl	%ax, %edx	 # _81, _82
	leaq	1088(%rbp), %rax	 #, tmp294
	movl	1512(%rbp), %r9d	 # yCell, tmp295
	movl	1516(%rbp), %r8d	 # xCell, tmp296
	leaq	1120(%rbp), %rcx	 #, tmp297
	movq	%rcx, 40(%rsp)	 # tmp297,
	movl	%edx, 32(%rsp)	 # _82,
	movq	%rbx, %rdx	 # matrix.53_80,
	movq	%rax, %rcx	 # tmp294,
	call	_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE	 #
 # src\main.cpp:679: 					readcell = matrix->WriteDataTo(xCell, yCell, matrix->_zLevel, MATRIX::cell(MATRIX::element::fire));
	.loc 14 679 15
	movq	1088(%rbp), %rax	 # D.209055, tmp298
	movq	1096(%rbp), %rdx	 # D.209055,
	movq	%rax, -80(%rbp)	 # tmp298, MEM[(struct cell *)_149]
	movq	%rdx, -72(%rbp)	 #, MEM[(struct cell *)_149]
	movq	1104(%rbp), %rax	 # D.209055, tmp299
	movq	1112(%rbp), %rdx	 # D.209055,
	movq	%rax, -64(%rbp)	 # tmp299, MEM[(struct cell *)_149]
	movq	%rdx, -56(%rbp)	 #, MEM[(struct cell *)_149]
 # src\main.cpp:679: 					readcell = matrix->WriteDataTo(xCell, yCell, matrix->_zLevel, MATRIX::cell(MATRIX::element::fire));
	.loc 14 679 36
	leaq	1088(%rbp), %rax	 #, tmp300
	movq	%rax, %rcx	 # tmp300,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:679: 					readcell = matrix->WriteDataTo(xCell, yCell, matrix->_zLevel, MATRIX::cell(MATRIX::element::fire));
	.loc 14 679 76
	leaq	1120(%rbp), %rax	 #, tmp301
	movq	%rax, %rcx	 # tmp301,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:680: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 680 112
	movq	1528(%rbp), %rcx	 # matrix, matrix.54_83
	movq	-80(%rbp), %rax	 # MEM[(struct cell *)_149], tmp302
	movq	-72(%rbp), %rdx	 # MEM[(struct cell *)_149],
	movq	%rax, 1200(%rbp)	 # tmp302, D.209056
	movq	%rdx, 1208(%rbp)	 #, D.209056
	movq	-64(%rbp), %rax	 # MEM[(struct cell *)_149], tmp303
	movq	-56(%rbp), %rdx	 # MEM[(struct cell *)_149],
	movq	%rax, 1216(%rbp)	 # tmp303, D.209056
	movq	%rdx, 1224(%rbp)	 #, D.209056
	leaq	1152(%rbp), %rax	 #, tmp304
	leaq	1200(%rbp), %rdx	 #, tmp305
	movq	%rdx, %r8	 # tmp305,
	movq	%rcx, %rdx	 # matrix.54_83,
	movq	%rax, %rcx	 # tmp304,
.LEHB7:
	call	_ZN6MATRIX18ReadCellAttributesENS_4cellE	 #
 # src\main.cpp:680: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 680 12 discriminator 2
	movq	1184(%rbp), %rdx	 # D.209057.name, _84
 # src\main.cpp:680: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 680 77 discriminator 2
	movq	1528(%rbp), %rax	 # matrix, tmp306
	movzwl	56(%rax), %eax	 # matrix_171->_zLevel, _85
 # src\main.cpp:680: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 680 12 discriminator 2
	movzwl	%ax, %r8d	 # _85, _86
	movl	1512(%rbp), %ecx	 # yCell, tmp307
	movl	1516(%rbp), %eax	 # xCell, tmp308
	movq	%rdx, 32(%rsp)	 # _84,
	movl	%r8d, %r9d	 # _86,
	movl	%ecx, %r8d	 # tmp307,
	movl	%eax, %edx	 # tmp308,
	leaq	.LC45(%rip), %rax	 #, tmp309
	movq	%rax, %rcx	 # tmp309,
	call	_Z6printfPKcz	 #
.LEHE7:
 # src\main.cpp:680: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 680 112 discriminator 4
	leaq	1200(%rbp), %rax	 #, tmp310
	movq	%rax, %rcx	 # tmp310,
	call	_ZN6MATRIX4cellD1Ev	 #
.L331:
 # src\main.cpp:683: 				if(wp & MK_RBUTTON)
	.loc 14 683 11
	movq	1600(%rbp), %rax	 # wp, tmp311
	andl	$2, %eax	 #, _87
 # src\main.cpp:683: 				if(wp & MK_RBUTTON)
	.loc 14 683 5
	testq	%rax, %rax	 # _87
	je	.L332	 #,
 # src\main.cpp:685: 					readcell = matrix->AccessDataAt(xCell, yCell, matrix->_zLevel);
	.loc 14 685 60
	movq	1528(%rbp), %rax	 # matrix, tmp312
	movzwl	56(%rax), %eax	 # matrix_171->_zLevel, _88
 # src\main.cpp:685: 					readcell = matrix->AccessDataAt(xCell, yCell, matrix->_zLevel);
	.loc 14 685 37
	movzwl	%ax, %ecx	 # _88, _89
	leaq	1232(%rbp), %rax	 #, tmp313
	movl	1512(%rbp), %r9d	 # yCell, tmp314
	movl	1516(%rbp), %r8d	 # xCell, tmp315
	movq	1528(%rbp), %rdx	 # matrix, tmp316
	movl	%ecx, 32(%rsp)	 # _89,
	movq	%rax, %rcx	 # tmp313,
	call	_ZN6MATRIX12AccessDataAtEjjj	 #
 # src\main.cpp:685: 					readcell = matrix->AccessDataAt(xCell, yCell, matrix->_zLevel);
	.loc 14 685 15
	movq	1232(%rbp), %rax	 # D.209058, tmp317
	movq	1240(%rbp), %rdx	 # D.209058,
	movq	%rax, -80(%rbp)	 # tmp317, MEM[(struct cell *)_149]
	movq	%rdx, -72(%rbp)	 #, MEM[(struct cell *)_149]
	movq	1248(%rbp), %rax	 # D.209058, tmp318
	movq	1256(%rbp), %rdx	 # D.209058,
	movq	%rax, -64(%rbp)	 # tmp318, MEM[(struct cell *)_149]
	movq	%rdx, -56(%rbp)	 #, MEM[(struct cell *)_149]
 # src\main.cpp:685: 					readcell = matrix->AccessDataAt(xCell, yCell, matrix->_zLevel);
	.loc 14 685 37
	leaq	1232(%rbp), %rax	 #, tmp319
	movq	%rax, %rcx	 # tmp319,
	call	_ZN6MATRIX4cellD1Ev	 #
 # src\main.cpp:686: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 686 112
	movq	1528(%rbp), %rcx	 # matrix, matrix.55_90
	movq	-80(%rbp), %rax	 # MEM[(struct cell *)_149], tmp320
	movq	-72(%rbp), %rdx	 # MEM[(struct cell *)_149],
	movq	%rax, 1312(%rbp)	 # tmp320, D.209059
	movq	%rdx, 1320(%rbp)	 #, D.209059
	movq	-64(%rbp), %rax	 # MEM[(struct cell *)_149], tmp321
	movq	-56(%rbp), %rdx	 # MEM[(struct cell *)_149],
	movq	%rax, 1328(%rbp)	 # tmp321, D.209059
	movq	%rdx, 1336(%rbp)	 #, D.209059
	leaq	1264(%rbp), %rax	 #, tmp322
	leaq	1312(%rbp), %rdx	 #, tmp323
	movq	%rdx, %r8	 # tmp323,
	movq	%rcx, %rdx	 # matrix.55_90,
	movq	%rax, %rcx	 # tmp322,
.LEHB8:
	call	_ZN6MATRIX18ReadCellAttributesENS_4cellE	 #
 # src\main.cpp:686: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 686 12 discriminator 2
	movq	1296(%rbp), %rdx	 # D.209060.name, _91
 # src\main.cpp:686: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 686 77 discriminator 2
	movq	1528(%rbp), %rax	 # matrix, tmp324
	movzwl	56(%rax), %eax	 # matrix_171->_zLevel, _92
 # src\main.cpp:686: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 686 12 discriminator 2
	movzwl	%ax, %r8d	 # _92, _93
	movl	1512(%rbp), %ecx	 # yCell, tmp325
	movl	1516(%rbp), %eax	 # xCell, tmp326
	movq	%rdx, 32(%rsp)	 # _91,
	movl	%r8d, %r9d	 # _93,
	movl	%ecx, %r8d	 # tmp325,
	movl	%eax, %edx	 # tmp326,
	leaq	.LC45(%rip), %rax	 #, tmp327
	movq	%rax, %rcx	 # tmp327,
	call	_Z6printfPKcz	 #
.LEHE8:
 # src\main.cpp:686: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 686 112 discriminator 4
	leaq	1312(%rbp), %rax	 #, tmp328
	movq	%rax, %rcx	 # tmp328,
	call	_ZN6MATRIX4cellD1Ev	 #
.L332:
 # src\main.cpp:688: 			}
	.loc 14 688 4
	leaq	-80(%rbp), %rax	 #, tmp329
	movq	%rax, %rcx	 # tmp329,
	call	_ZN6MATRIX4cellD1Ev	 #
.LBE194:
 # src\main.cpp:689: 			break;
	.loc 14 689 4
	jmp	.L325	 #
.L312:
.LBB195:
 # src\main.cpp:692: 				MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 692 64
	movq	1584(%rbp), %rax	 # hwnd, tmp330
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp330,
	movq	__imp_GetWindowLongPtrW(%rip), %rax	 #, tmp331
.LEHB9:
	call	*%rax	 # tmp331
.LVL26:
 # src\main.cpp:692: 				MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 692 85
	movq	%rax, 1504(%rbp)	 # _94, matrix
 # src\main.cpp:693: 				CHECK_MATRIX_POPULATION();
	.loc 14 693 5
	cmpq	$0, 1504(%rbp)	 #, matrix
	jne	.L333	 #,
 # src\main.cpp:693: 				CHECK_MATRIX_POPULATION();
	.loc 14 693 5 is_stmt 0 discriminator 1
	movq	1608(%rbp), %r8	 # lp, tmp332
	movq	1600(%rbp), %rcx	 # wp, tmp333
	movl	1592(%rbp), %edx	 # msg, tmp334
	movq	1584(%rbp), %rax	 # hwnd, tmp335
	movq	%r8, %r9	 # tmp332,
	movq	%rcx, %r8	 # tmp333,
	movq	%rax, %rcx	 # tmp335,
	movq	__imp_DefWindowProcW(%rip), %rax	 #, tmp336
	call	*%rax	 # tmp336
.LVL27:
	jmp	.L348	 #
.L333:
 # src\main.cpp:695: 				matrix->_zLevel += wp == VK_UP   ? 1 : 0;
	.loc 14 695 13 is_stmt 1
	movq	1504(%rbp), %rax	 # matrix, tmp337
	movzwl	56(%rax), %eax	 # matrix_223->_zLevel, _95
 # src\main.cpp:695: 				matrix->_zLevel += wp == VK_UP   ? 1 : 0;
	.loc 14 695 21
	cmpq	$38, 1600(%rbp)	 #, wp
	jne	.L334	 #,
 # src\main.cpp:695: 				matrix->_zLevel += wp == VK_UP   ? 1 : 0;
	.loc 14 695 21 is_stmt 0 discriminator 1
	movl	$1, %edx	 #, iftmp.56_124
	jmp	.L335	 #
.L334:
 # src\main.cpp:695: 				matrix->_zLevel += wp == VK_UP   ? 1 : 0;
	.loc 14 695 21 discriminator 2
	movl	$0, %edx	 #, iftmp.56_124
.L335:
 # src\main.cpp:695: 				matrix->_zLevel += wp == VK_UP   ? 1 : 0;
	.loc 14 695 21 discriminator 4
	addl	%eax, %edx	 # _95, _96
	movq	1504(%rbp), %rax	 # matrix, tmp338
	movw	%dx, 56(%rax)	 # _96, matrix_223->_zLevel
 # src\main.cpp:696: 				matrix->_zLevel -= wp == VK_DOWN ? 1 : 0;
	.loc 14 696 13 is_stmt 1 discriminator 4
	movq	1504(%rbp), %rax	 # matrix, tmp339
	movzwl	56(%rax), %eax	 # matrix_223->_zLevel, _97
 # src\main.cpp:696: 				matrix->_zLevel -= wp == VK_DOWN ? 1 : 0;
	.loc 14 696 21 discriminator 4
	cmpq	$40, 1600(%rbp)	 #, wp
	jne	.L336	 #,
 # src\main.cpp:696: 				matrix->_zLevel -= wp == VK_DOWN ? 1 : 0;
	.loc 14 696 21 is_stmt 0 discriminator 1
	movl	$1, %ecx	 #, iftmp.57_125
	jmp	.L337	 #
.L336:
 # src\main.cpp:696: 				matrix->_zLevel -= wp == VK_DOWN ? 1 : 0;
	.loc 14 696 21 discriminator 2
	movl	$0, %ecx	 #, iftmp.57_125
.L337:
 # src\main.cpp:696: 				matrix->_zLevel -= wp == VK_DOWN ? 1 : 0;
	.loc 14 696 21 discriminator 4
	subl	%ecx, %eax	 # iftmp.57_125, _97
	movl	%eax, %edx	 # _97, _98
	movq	1504(%rbp), %rax	 # matrix, tmp340
	movw	%dx, 56(%rax)	 # _98, matrix_223->_zLevel
 # src\main.cpp:698: 				InvalidateRect(hwnd, nullptr, FALSE);
	.loc 14 698 19 is_stmt 1 discriminator 4
	movq	1584(%rbp), %rax	 # hwnd, tmp341
	movl	$0, %r8d	 #,
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp341,
	movq	__imp_InvalidateRect(%rip), %rax	 #, tmp342
	call	*%rax	 # tmp342
.LVL28:
.LBE195:
 # src\main.cpp:700: 			break;
	.loc 14 700 4 discriminator 4
	jmp	.L325	 #
.L313:
.LBB196:
 # src\main.cpp:703: 				MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 703 64
	movq	1584(%rbp), %rax	 # hwnd, tmp343
	movl	$-21, %edx	 #,
	movq	%rax, %rcx	 # tmp343,
	movq	__imp_GetWindowLongPtrW(%rip), %rax	 #, tmp344
	call	*%rax	 # tmp344
.LVL29:
 # src\main.cpp:703: 				MATRIX* matrix = reinterpret_cast<MATRIX*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));
	.loc 14 703 85
	movq	%rax, 1496(%rbp)	 # _99, matrix
 # src\main.cpp:704: 				CHECK_MATRIX_POPULATION();
	.loc 14 704 5
	cmpq	$0, 1496(%rbp)	 #, matrix
	jne	.L338	 #,
 # src\main.cpp:704: 				CHECK_MATRIX_POPULATION();
	.loc 14 704 5 is_stmt 0 discriminator 1
	movq	1608(%rbp), %r8	 # lp, tmp345
	movq	1600(%rbp), %rcx	 # wp, tmp346
	movl	1592(%rbp), %edx	 # msg, tmp347
	movq	1584(%rbp), %rax	 # hwnd, tmp348
	movq	%r8, %r9	 # tmp345,
	movq	%rcx, %r8	 # tmp346,
	movq	%rax, %rcx	 # tmp348,
	movq	__imp_DefWindowProcW(%rip), %rax	 #, tmp349
	call	*%rax	 # tmp349
.LVL30:
	jmp	.L348	 #
.L338:
 # src\main.cpp:706: 				ValidateRect(hwnd, nullptr);
	.loc 14 706 17 is_stmt 1
	movq	1584(%rbp), %rax	 # hwnd, tmp350
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp350,
	movq	__imp_ValidateRect(%rip), %rax	 #, tmp351
	call	*%rax	 # tmp351
.LVL31:
 # src\main.cpp:708: 				Camera cam;
	.loc 14 708 12
	leaq	-80(%rbp), %rax	 #, tmp352
	movq	%rax, %rcx	 # tmp352,
	call	_ZN6CameraC1Ev	 #
 # src\main.cpp:710: 				if(RenderTarget && Bitmap)
	.loc 14 710 8
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.58_100
 # src\main.cpp:710: 				if(RenderTarget && Bitmap)
	.loc 14 710 5
	testq	%rax, %rax	 # RenderTarget.58_100
	je	.L339	 #,
 # src\main.cpp:710: 				if(RenderTarget && Bitmap)
	.loc 14 710 24 discriminator 1
	movq	Bitmap(%rip), %rax	 # Bitmap, Bitmap.59_101
 # src\main.cpp:710: 				if(RenderTarget && Bitmap)
	.loc 14 710 21 discriminator 1
	testq	%rax, %rax	 # Bitmap.59_101
	je	.L339	 #,
 # src\main.cpp:712: 					RenderTarget->BeginDraw();
	.loc 14 712 29
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.61_104
	movq	(%rax), %rax	 # RenderTarget.61_104->D.201843.D.200640.D.199868._vptr.IUnknown, _105
	addq	$384, %rax	 #, _106
	movq	(%rax), %rax	 # *_106, _107
	movq	RenderTarget(%rip), %rdx	 # RenderTarget, RenderTarget.62_108
	movq	%rdx, %rcx	 # _109,
	call	*%rax	 # _107
.LVL32:
 # src\main.cpp:713: 					RenderTarget->DrawBitmap(Bitmap, D2D1::RectF(0, 0, static_cast<float>(WIDTH), static_cast<float>(HEIGHT)));
	.loc 14 713 30
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.63_110
	movq	%rax, %rcx	 # RenderTarget.63_110, _111
	pxor	%xmm0, %xmm0	 # tmp353
	movss	%xmm0, 1400(%rbp)	 # tmp353, left
	pxor	%xmm0, %xmm0	 # tmp354
	movss	%xmm0, 1396(%rbp)	 # tmp354, top
	movss	.LC46(%rip), %xmm0	 #, tmp355
	movss	%xmm0, 1392(%rbp)	 # tmp355, right
	movss	.LC47(%rip), %xmm0	 #, tmp356
	movss	%xmm0, 1388(%rbp)	 # tmp356, bottom
	movss	1400(%rbp), %xmm0	 # left, tmp357
	movss	%xmm0, 1384(%rbp)	 # tmp357, left
	movss	1396(%rbp), %xmm0	 # top, tmp358
	movss	%xmm0, 1380(%rbp)	 # tmp358, top
	movss	1392(%rbp), %xmm0	 # right, tmp359
	movss	%xmm0, 1376(%rbp)	 # tmp359, right
	movss	1388(%rbp), %xmm0	 # bottom, tmp360
	movss	%xmm0, 1372(%rbp)	 # tmp360, bottom
.LBB197:
.LBB198:
.LBB199:
.LBB200:
 # C:/msys64/mingw64/include/d2d1helper.h:58:     typename TypeTraits<T>::Rect r = {left, top, right, bottom};
	.loc 16 58 34
	movss	1384(%rbp), %xmm0	 # left, tmp361
	movss	%xmm0, 1344(%rbp)	 # tmp361, D.209093.left
	movss	1380(%rbp), %xmm0	 # top, tmp362
	movss	%xmm0, 1348(%rbp)	 # tmp362, D.209093.top
	movss	1376(%rbp), %xmm0	 # right, tmp363
	movss	%xmm0, 1352(%rbp)	 # tmp363, D.209093.right
	movss	1372(%rbp), %xmm0	 # bottom, tmp364
	movss	%xmm0, 1356(%rbp)	 # tmp364, D.209093.bottom
 # C:/msys64/mingw64/include/d2d1helper.h:59:     return r;
	.loc 16 59 12
	nop	
.LBE200:
.LBE199:
 # C:/msys64/mingw64/include/d2d1helper.h:63:     return Rect<FLOAT>(left, top, right, bottom);
	.loc 16 63 48
	nop	
.LBE198:
.LBE197:
 # src\main.cpp:713: 					RenderTarget->DrawBitmap(Bitmap, D2D1::RectF(0, 0, static_cast<float>(WIDTH), static_cast<float>(HEIGHT)));
	.loc 14 713 30
	movq	Bitmap(%rip), %rax	 # Bitmap, Bitmap.64_112
	leaq	1344(%rbp), %rdx	 #, tmp365
	movq	$0, 40(%rsp)	 #,
	movl	$1, 32(%rsp)	 #,
	movss	.LC39(%rip), %xmm3	 #,
	movq	%rdx, %r8	 # tmp365,
	movq	%rax, %rdx	 # Bitmap.64_112,
	call	_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_	 #
 # src\main.cpp:714: 					RenderTarget->EndDraw();
	.loc 14 714 27
	movq	RenderTarget(%rip), %rax	 # RenderTarget, RenderTarget.66_115
	movq	(%rax), %rax	 # RenderTarget.66_115->D.201843.D.200640.D.199868._vptr.IUnknown, _116
	addq	$392, %rax	 #, _117
	movq	(%rax), %rax	 # *_117, _118
	movq	RenderTarget(%rip), %rdx	 # RenderTarget, RenderTarget.67_119
	movq	%rdx, %rcx	 # RenderTarget.67_119, _120
	movl	$0, %r8d	 #,
	movl	$0, %edx	 #,
	call	*%rax	 # _118
.LVL33:
.LBE196:
 # src\main.cpp:720: 			break;
	.loc 14 720 4
	jmp	.L325	 #
.L339:
.LBB201:
 # src\main.cpp:717: 					printf("WM_PAINT: RENDERTARGET = nullptr\n");
	.loc 14 717 12
	leaq	.LC48(%rip), %rax	 #, tmp366
	movq	%rax, %rcx	 # tmp366,
	call	_Z6printfPKcz	 #
.LBE201:
 # src\main.cpp:720: 			break;
	.loc 14 720 4
	jmp	.L325	 #
.L316:
 # src\main.cpp:721: 			case WM_DESTROY: PostQuitMessage(0); break;
	.loc 14 721 36
	movl	$0, %ecx	 #,
	movq	__imp_PostQuitMessage(%rip), %rax	 #, tmp367
	call	*%rax	 # tmp367
.LVL34:
 # src\main.cpp:721: 			case WM_DESTROY: PostQuitMessage(0); break;
	.loc 14 721 41
	jmp	.L325	 #
.L311:
 # src\main.cpp:722: 			default: return DefWindowProc(hwnd, msg, wp, lp); break;
	.loc 14 722 33
	movq	1608(%rbp), %r8	 # lp, tmp368
	movq	1600(%rbp), %rcx	 # wp, tmp369
	movl	1592(%rbp), %edx	 # msg, tmp370
	movq	1584(%rbp), %rax	 # hwnd, tmp371
	movq	%r8, %r9	 # tmp368,
	movq	%rcx, %r8	 # tmp369,
	movq	%rax, %rcx	 # tmp371,
	movq	__imp_DefWindowProcW(%rip), %rax	 #, tmp372
	call	*%rax	 # tmp372
.LVL35:
 # src\main.cpp:722: 			default: return DefWindowProc(hwnd, msg, wp, lp); break;
	.loc 14 722 51
	jmp	.L348	 #
.L325:
.LBE172:
.LBE171:
 # src\main.cpp:725: 		return 0;
	.loc 14 725 10
	movl	$0, %eax	 #, _123
	jmp	.L348	 #
.L346:
.LBB204:
.LBB203:
.LBB202:
 # src\main.cpp:680: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 680 112
	movq	%rax, %rbx	 #, tmp376
	leaq	1200(%rbp), %rax	 #, tmp374
	movq	%rax, %rcx	 # tmp374,
	call	_ZN6MATRIX4cellD1Ev	 #
	jmp	.L344	 #
.L347:
 # src\main.cpp:686: 					printf("cell[%d, %d][SLICE: %d]->element: %s\n", xCell, yCell, matrix->_zLevel, matrix->ReadCellAttributes(readcell).name);
	.loc 14 686 112
	movq	%rax, %rbx	 #, tmp380
	leaq	1312(%rbp), %rax	 #, tmp379
	movq	%rax, %rcx	 # tmp379,
	call	_ZN6MATRIX4cellD1Ev	 #
.L344:
 # src\main.cpp:688: 			}
	.loc 14 688 4
	leaq	-80(%rbp), %rax	 #, tmp382
	movq	%rax, %rcx	 # tmp382,
	call	_ZN6MATRIX4cellD1Ev	 #
	movq	%rbx, %rax	 # tmp375, D.237844
	movq	%rax, %rcx	 # D.237844,
	call	_Unwind_Resume	 #
.LEHE9:
.L348:
.LBE202:
.LBE203:
.LBE204:
 # src\main.cpp:726: 	}
	.loc 14 726 2
	addq	$1688, %rsp	 #,
	popq	%rbx	 #
.LCFI341:
	popq	%rbp	 #
.LCFI342:
	ret	
.LFE10945:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA10945:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE10945-.LLSDACSB10945
.LLSDACSB10945:
	.uleb128 .LEHB6-.LFB10945
	.uleb128 .LEHE6-.LEHB6
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB7-.LFB10945
	.uleb128 .LEHE7-.LEHB7
	.uleb128 .L346-.LFB10945
	.uleb128 0
	.uleb128 .LEHB8-.LFB10945
	.uleb128 .LEHE8-.LEHB8
	.uleb128 .L347-.LFB10945
	.uleb128 0
	.uleb128 .LEHB9-.LFB10945
	.uleb128 .LEHE9-.LEHB9
	.uleb128 0
	.uleb128 0
.LLSDACSE10945:
	.text
	.seh_endproc
	.globl	_ZN21WINDOWGraphicsOverlay16ShowErrorMessageEPKc
	.def	_ZN21WINDOWGraphicsOverlay16ShowErrorMessageEPKc;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay16ShowErrorMessageEPKc
_ZN21WINDOWGraphicsOverlay16ShowErrorMessageEPKc:
.LFB10952:
	.loc 14 728 47
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI343:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI344:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # errorText, errorText
 # src\main.cpp:729: 		int len = MultiByteToWideChar(CP_ACP, 0, errorText, -1, NULL, 0);
	.loc 14 729 32
	movq	16(%rbp), %rax	 # errorText, tmp86
	movl	$0, 40(%rsp)	 #,
	movq	$0, 32(%rsp)	 #,
	movl	$-1, %r9d	 #,
	movq	%rax, %r8	 # tmp86,
	movl	$0, %edx	 #,
	movl	$0, %ecx	 #,
	movq	__imp_MultiByteToWideChar(%rip), %rax	 #, tmp87
	call	*%rax	 # tmp87
.LVL36:
	movl	%eax, -4(%rbp)	 # _5, len
 # src\main.cpp:730: 		wchar_t* wideErrorText = new wchar_t[len];
	.loc 14 730 40
	movl	-4(%rbp), %eax	 # len, tmp88
	cltq
 # src\main.cpp:730: 		wchar_t* wideErrorText = new wchar_t[len];
	.loc 14 730 43
	movabsq	$4611686018427387900, %rdx	 #, tmp89
	cmpq	%rax, %rdx	 # _7, tmp89
	jb	.L350	 #,
 # src\main.cpp:730: 		wchar_t* wideErrorText = new wchar_t[len];
	.loc 14 730 43 is_stmt 0 discriminator 1
	addq	%rax, %rax	 # iftmp.77_9
	movq	%rax, %rcx	 # iftmp.77_9,
	call	_Znay	 #
	movq	%rax, -16(%rbp)	 # _11, wideErrorText
 # src\main.cpp:731: 		MultiByteToWideChar(CP_ACP, 0, errorText, -1, wideErrorText, len);
	.loc 14 731 22 is_stmt 1 discriminator 1
	movq	16(%rbp), %rdx	 # errorText, tmp91
	movl	-4(%rbp), %eax	 # len, tmp92
	movl	%eax, 40(%rsp)	 # tmp92,
	movq	-16(%rbp), %rax	 # wideErrorText, tmp93
	movq	%rax, 32(%rsp)	 # tmp93,
	movl	$-1, %r9d	 #,
	movq	%rdx, %r8	 # tmp91,
	movl	$0, %edx	 #,
	movl	$0, %ecx	 #,
	movq	__imp_MultiByteToWideChar(%rip), %rax	 #, tmp94
	call	*%rax	 # tmp94
.LVL37:
 # src\main.cpp:732: 		MessageBoxW(NULL, wideErrorText, L"Error", MB_ICONERROR | MB_OK);
	.loc 14 732 14 discriminator 1
	movq	-16(%rbp), %rax	 # wideErrorText, tmp95
	movl	$16, %r9d	 #,
	leaq	.LC38(%rip), %r8	 #,
	movq	%rax, %rdx	 # tmp95,
	movl	$0, %ecx	 #,
	movq	__imp_MessageBoxW(%rip), %rax	 #, tmp96
	call	*%rax	 # tmp96
.LVL38:
 # src\main.cpp:733: 		delete[] wideErrorText;
	.loc 14 733 3 discriminator 1
	cmpq	$0, -16(%rbp)	 #, wideErrorText
	je	.L354	 #,
	jmp	.L353	 #
.L350:
 # src\main.cpp:730: 		wchar_t* wideErrorText = new wchar_t[len];
	.loc 14 730 43 discriminator 2
	call	__cxa_throw_bad_array_new_length	 #
.L353:
 # src\main.cpp:733: 		delete[] wideErrorText;
	.loc 14 733 12 discriminator 1
	movq	-16(%rbp), %rax	 # wideErrorText, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZdaPv	 #
.L354:
 # src\main.cpp:734: 	}
	.loc 14 734 2
	nop	
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI345:
	ret	
.LFE10952:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC49:
	.ascii "3\0D\0S\0i\0m\0u\0l\0a\0t\0i\0o\0n\0O\0v\0e\0r\0l\0a\0y\0\0\0"
	.align 8
.LC50:
	.ascii "-> Window Class not initialized or registered\12\0"
	.align 8
.LC51:
	.ascii "R\0E\0D\0J\0A\0D\0E\0R\0 \0-\0 \0S\0I\0M\0U\0L\0A\0T\0I\0O\0N\0\0\0"
.LC52:
	.ascii "Error creating window: %s\12\0"
.LC53:
	.ascii "-> Window Created\12\0"
	.text
	.globl	_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj
	.def	_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj
_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj:
.LFB10953:
	.loc 14 737 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI346:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI347:
	subq	$208, %rsp	 #,
	.seh_stackalloc	208
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # matrix, matrix
	movl	%edx, 24(%rbp)	 # width, width
	movl	%r8d, 32(%rbp)	 # height, height
 # src\main.cpp:738: 		void* _handle = nullptr;
	.loc 14 738 9
	movq	$0, -8(%rbp)	 #, _handle
 # src\main.cpp:740: 		WNDCLASSEX wc = { };
	.loc 14 740 14
	pxor	%xmm0, %xmm0	 # tmp94
	movups	%xmm0, -96(%rbp)	 # tmp94, wc
	movups	%xmm0, -80(%rbp)	 # tmp94, wc
	movups	%xmm0, -64(%rbp)	 # tmp94, wc
	movups	%xmm0, -48(%rbp)	 # tmp94, wc
	movups	%xmm0, -32(%rbp)	 # tmp94, wc
 # src\main.cpp:741: 		wc.cbSize        = sizeof(WNDCLASSEX);
	.loc 14 741 20
	movl	$80, -96(%rbp)	 #, wc.cbSize
 # src\main.cpp:742: 		wc.lpfnWndProc   = WindowProc;
	.loc 14 742 20
	leaq	_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx(%rip), %rax	 #, tmp95
	movq	%rax, -88(%rbp)	 # tmp95, wc.lpfnWndProc
 # src\main.cpp:743: 		wc.hInstance     = GetInstance();
	.loc 14 743 22
	movl	$0, %ecx	 #,
	movq	__imp_GetModuleHandleW(%rip), %rax	 #, tmp96
	call	*%rax	 # tmp96
.LVL39:
 # src\main.cpp:743: 		wc.hInstance     = GetInstance();
	.loc 14 743 20
	movq	%rax, -72(%rbp)	 # _1, wc.hInstance
 # src\main.cpp:744: 		wc.hCursor       = LoadCursor(nullptr, IDC_ARROW);
	.loc 14 744 32
	movl	$32512, %edx	 #,
	movl	$0, %ecx	 #,
	movq	__imp_LoadCursorW(%rip), %rax	 #, tmp97
	call	*%rax	 # tmp97
.LVL40:
 # src\main.cpp:744: 		wc.hCursor       = LoadCursor(nullptr, IDC_ARROW);
	.loc 14 744 20
	movq	%rax, -56(%rbp)	 # _2, wc.hCursor
 # src\main.cpp:745: 		wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
	.loc 14 745 20
	movq	$6, -48(%rbp)	 #, wc.hbrBackground
 # src\main.cpp:746: 		wc.lpszClassName = L"3DSimulationOverlay";
	.loc 14 746 20
	leaq	.LC49(%rip), %rax	 #, tmp98
	movq	%rax, -32(%rbp)	 # tmp98, wc.lpszClassName
 # src\main.cpp:747: 		if(!RegisterClassEx(&wc))
	.loc 14 747 22
	leaq	-96(%rbp), %rax	 #, tmp99
	movq	%rax, %rcx	 # tmp99,
	movq	__imp_RegisterClassExW(%rip), %rax	 #, tmp100
	call	*%rax	 # tmp100
.LVL41:
 # src\main.cpp:747: 		if(!RegisterClassEx(&wc))
	.loc 14 747 6
	testw	%ax, %ax	 # _3
	sete	%al	 #, retval.78_28
 # src\main.cpp:747: 		if(!RegisterClassEx(&wc))
	.loc 14 747 3
	testb	%al, %al	 # retval.78_28
	je	.L356	 #,
 # src\main.cpp:749: 			printf("-> Window Class not initialized or registered\n");
	.loc 14 749 10
	leaq	.LC50(%rip), %rax	 #, tmp101
	movq	%rax, %rcx	 # tmp101,
	call	_Z6printfPKcz	 #
.L356:
 # src\main.cpp:752: 		_handle = CreateWindowEx(
	.loc 14 752 27
	movl	$0, %ecx	 #,
	movq	__imp_GetModuleHandleW(%rip), %rax	 #, tmp102
	call	*%rax	 # tmp102
.LVL42:
	movq	%rax, %rdx	 #, _4
	movq	-32(%rbp), %rax	 # wc.lpszClassName, _5
	movq	16(%rbp), %rcx	 # matrix, tmp103
	movq	%rcx, 88(%rsp)	 # tmp103,
	movq	%rdx, 80(%rsp)	 # _4,
	movq	$0, 72(%rsp)	 #,
	movq	$0, 64(%rsp)	 #,
	movl	$600, 56(%rsp)	 #,
	movl	$800, 48(%rsp)	 #,
	movl	$-2147483648, 40(%rsp)	 #,
	movl	$-2147483648, 32(%rsp)	 #,
	movl	$13565952, %r9d	 #,
	leaq	.LC51(%rip), %r8	 #,
	movq	%rax, %rdx	 # _5,
	movl	$0, %ecx	 #,
	movq	__imp_CreateWindowExW(%rip), %rax	 #, tmp104
	call	*%rax	 # tmp104
.LVL43:
	movq	%rax, -8(%rbp)	 # _34, _handle
.LBB205:
 # src\main.cpp:761: 		if(_handle==nullptr)
	.loc 14 761 3
	cmpq	$0, -8(%rbp)	 #, _handle
	jne	.L357	 #,
.LBB206:
 # src\main.cpp:763: 			DWORD errorCode = GetLastError();
	.loc 14 763 34
	movq	__imp_GetLastError(%rip), %rax	 #, tmp105
	call	*%rax	 # tmp105
.LVL44:
	movl	%eax, -12(%rbp)	 # _41, errorCode
 # src\main.cpp:764:     		LPSTR errorText = NULL;
	.loc 14 764 13
	movq	$0, -104(%rbp)	 #, errorText
 # src\main.cpp:765:     		FormatMessage(
	.loc 14 765 20
	movl	-12(%rbp), %edx	 # errorCode, tmp106
	movq	$0, 48(%rsp)	 #,
	movl	$0, 40(%rsp)	 #,
	leaq	-104(%rbp), %rax	 #, tmp107
	movq	%rax, 32(%rsp)	 # tmp107,
	movl	$1024, %r9d	 #,
	movl	%edx, %r8d	 # tmp106,
	movl	$0, %edx	 #,
	movl	$4864, %ecx	 #,
	movq	__imp_FormatMessageW(%rip), %rax	 #, tmp108
	call	*%rax	 # tmp108
.LVL45:
 # src\main.cpp:770:     		printf("Error creating window: %s\n", errorText);
	.loc 14 770 13
	movq	-104(%rbp), %rax	 # errorText, errorText.79_6
	movq	%rax, %rdx	 # errorText.79_6,
	leaq	.LC52(%rip), %rax	 #, tmp109
	movq	%rax, %rcx	 # tmp109,
	call	_Z6printfPKcz	 #
 # src\main.cpp:771:     		LocalFree(errorText);
	.loc 14 771 16
	movq	-104(%rbp), %rax	 # errorText, errorText.80_7
	movq	%rax, %rcx	 # errorText.80_7,
	movq	__imp_LocalFree(%rip), %rax	 #, tmp110
	call	*%rax	 # tmp110
.LVL46:
 # src\main.cpp:772: 			return nullptr;
	.loc 14 772 11
	movl	$0, %eax	 #, _8
	jmp	.L359	 #
.L357:
.LBE206:
 # src\main.cpp:776: 			printf("-> Window Created\n");
	.loc 14 776 10
	leaq	.LC53(%rip), %rax	 #, tmp111
	movq	%rax, %rcx	 # tmp111,
	call	_Z6printfPKcz	 #
.LBE205:
 # src\main.cpp:779: 		::ShowWindow((HWND)_handle, SW_SHOW);
	.loc 14 779 15
	movq	-8(%rbp), %rax	 # _handle, tmp112
	movl	$5, %edx	 #,
	movq	%rax, %rcx	 # tmp112,
	movq	__imp_ShowWindow(%rip), %rax	 #, tmp113
	call	*%rax	 # tmp113
.LVL47:
 # src\main.cpp:780: 		::UpdateWindow((HWND)_handle);
	.loc 14 780 17
	movq	-8(%rbp), %rax	 # _handle, tmp114
	movq	%rax, %rcx	 # tmp114,
	movq	__imp_UpdateWindow(%rip), %rax	 #, tmp115
	call	*%rax	 # tmp115
.LVL48:
 # src\main.cpp:782: 		return _handle;
	.loc 14 782 10
	movq	-8(%rbp), %rax	 # _handle, _8
.L359:
 # src\main.cpp:783: 	}
	.loc 14 783 2 discriminator 2
	addq	$208, %rsp	 #,
	popq	%rbp	 #
.LCFI348:
	ret	
.LFE10953:
	.seh_endproc
	.section	.text$_ZN6MATRIXC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN6MATRIXC1Ev
	.def	_ZN6MATRIXC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN6MATRIXC1Ev
_ZN6MATRIXC1Ev:
.LFB10957:
	.loc 14 74 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI349:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI350:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB207:
 # src\main.cpp:74: struct MATRIX
	.loc 14 74 8
	movq	16(%rbp), %rax	 # this, tmp84
	movq	$0, (%rax)	 #, this_4(D)->memoryfb
	movq	16(%rbp), %rax	 # this, tmp85
	movq	$0, 8(%rax)	 #, this_4(D)->CELL_FRONT_BUFFER
	movq	16(%rbp), %rax	 # this, tmp86
	movq	$0, 16(%rax)	 #, this_4(D)->memorybb
	movq	16(%rbp), %rax	 # this, tmp87
	movq	$0, 24(%rax)	 #, this_4(D)->CELL_BACK_BUFFER
	movq	16(%rbp), %rax	 # this, tmp88
	addq	$32, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv	 #
	movq	16(%rbp), %rax	 # this, tmp89
	movl	$0, 40(%rax)	 #, this_4(D)->w
	movq	16(%rbp), %rax	 # this, tmp90
	movl	$0, 44(%rax)	 #, this_4(D)->h
	movq	16(%rbp), %rax	 # this, tmp91
	movl	$0, 48(%rax)	 #, this_4(D)->d
	movq	16(%rbp), %rax	 # this, tmp92
	movw	$5, 52(%rax)	 #, this_4(D)->_pixelWidth
	movq	16(%rbp), %rax	 # this, tmp93
	movw	$5, 54(%rax)	 #, this_4(D)->_pixelHeight
	movq	16(%rbp), %rax	 # this, tmp94
	movw	$0, 56(%rax)	 #, this_4(D)->_zLevel
.LBE207:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI351:
	ret	
.LFE10957:
	.seh_endproc
	.text
	.align 2
	.def	_ZZ7WinMainENKUlvE_clEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZZ7WinMainENKUlvE_clEv
_ZZ7WinMainENKUlvE_clEv:
.LFB10975:
	.loc 14 816 33
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI352:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI353:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __closure, __closure
 # src\main.cpp:816: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 14 816 49
	movq	16(%rbp), %rax	 # __closure, tmp85
	movq	8(%rax), %rax	 # __closure_5(D)->__matrix, _1
 # src\main.cpp:816: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 14 816 47
	movq	16(%rbp), %rdx	 # __closure, tmp86
	movq	(%rdx), %rcx	 # __closure_5(D)->__running, _2
 # src\main.cpp:816: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 14 816 73
	movq	16(%rbp), %rdx	 # __closure, tmp87
	movq	16(%rdx), %rdx	 # __closure_5(D)->___handle, _3
 # src\main.cpp:816: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 14 816 72
	movq	%rcx, %r8	 # _2,
	movq	%rax, %rcx	 # _1,
	call	_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE	 #
 # src\main.cpp:816: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 14 816 91
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI354:
	ret	
.LFE10975:
	.seh_endproc
	.align 2
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED2Ev
_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED2Ev:
.LFB10986:
	.file 17 "C:/msys64/mingw64/include/c++/12.2.0/barrier"
	.loc 17 76 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI355:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI356:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB208:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:76:     class __tree_barrier
	.loc 17 76 11
	movq	16(%rbp), %rax	 # this, tmp83
	addq	$8, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED1Ev	 #
.LBE208:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI357:
	ret	
.LFE10986:
	.seh_endproc
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED1Ev;	.scl	3;	.type	32;	.endef
	.set	_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED1Ev,_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED2Ev
	.align 2
	.def	_ZNSt7barrierIZ7WinMainEUlvE_ED2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt7barrierIZ7WinMainEUlvE_ED2Ev
_ZNSt7barrierIZ7WinMainEUlvE_ED2Ev:
.LFB10988:
	.loc 17 204 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI358:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI359:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB209:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:204:     class barrier
	.loc 17 204 11
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt14__tree_barrierIZ7WinMainEUlvE_ED1Ev	 #
.LBE209:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI360:
	ret	
.LFE10988:
	.seh_endproc
	.def	_ZNSt7barrierIZ7WinMainEUlvE_ED1Ev;	.scl	3;	.type	32;	.endef
	.set	_ZNSt7barrierIZ7WinMainEUlvE_ED1Ev,_ZNSt7barrierIZ7WinMainEUlvE_ED2Ev
	.align 2
	.def	_ZZ7WinMainENKUlvE0_clEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZZ7WinMainENKUlvE0_clEv
_ZZ7WinMainENKUlvE0_clEv:
.LFB10990:
	.loc 14 842 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI361:
	pushq	%r14	 #
	.seh_pushreg	%r14
.LCFI362:
	pushq	%r13	 #
	.seh_pushreg	%r13
.LCFI363:
	pushq	%r12	 #
	.seh_pushreg	%r12
.LCFI364:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI365:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI366:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI367:
	subq	$112, %rsp	 #,
	.seh_stackalloc	112
.LCFI368:
	leaq	112(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 112
.LCFI369:
	.seh_endprologue
	movq	%rcx, 64(%rbp)	 # __closure, __closure
 # src\main.cpp:842: 						[=, &SyncPoint, &keyPressed, &keyHeld, &keyReleased, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, SyncPoint, keyHeld, keyHeld, keyReleased, running, x1, x2, y1, y2, z1, z2); }
	.loc 14 842 101
	movq	64(%rbp), %rax	 # __closure, tmp95
	movq	64(%rax), %rax	 # __closure_15(D)->__matrix, _1
 # src\main.cpp:842: 						[=, &SyncPoint, &keyPressed, &keyHeld, &keyReleased, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, SyncPoint, keyHeld, keyHeld, keyReleased, running, x1, x2, y1, y2, z1, z2); }
	.loc 14 842 98
	movq	64(%rbp), %rdx	 # __closure, tmp96
	movl	60(%rdx), %r12d	 # __closure_15(D)->__z2, _2
	movq	64(%rbp), %rdx	 # __closure, tmp97
	movl	56(%rdx), %edi	 # __closure_15(D)->__z1, _3
	movq	64(%rbp), %rdx	 # __closure, tmp98
	movl	52(%rdx), %esi	 # __closure_15(D)->__y2, _4
	movq	64(%rbp), %rdx	 # __closure, tmp99
	movl	48(%rdx), %ebx	 # __closure_15(D)->__y1, _5
	movq	64(%rbp), %rdx	 # __closure, tmp100
	movl	44(%rdx), %r11d	 # __closure_15(D)->__x2, _6
	movq	64(%rbp), %rdx	 # __closure, tmp101
	movl	40(%rdx), %r10d	 # __closure_15(D)->__x1, _7
	movq	64(%rbp), %rdx	 # __closure, tmp102
	movq	32(%rdx), %r9	 # __closure_15(D)->__running, _8
	movq	64(%rbp), %rdx	 # __closure, tmp103
	movq	24(%rdx), %r8	 # __closure_15(D)->__keyReleased, _9
	movq	64(%rbp), %rdx	 # __closure, tmp104
	movq	16(%rdx), %rcx	 # __closure_15(D)->__keyHeld, _10
	movq	64(%rbp), %rdx	 # __closure, tmp105
	movq	16(%rdx), %r14	 # __closure_15(D)->__keyHeld, _11
	movq	64(%rbp), %rdx	 # __closure, tmp106
	movq	(%rdx), %r13	 # __closure_15(D)->__SyncPoint, _12
 # src\main.cpp:842: 						[=, &SyncPoint, &keyPressed, &keyHeld, &keyReleased, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, SyncPoint, keyHeld, keyHeld, keyReleased, running, x1, x2, y1, y2, z1, z2); }
	.loc 14 842 131
	movq	64(%rbp), %rdx	 # __closure, tmp107
	movq	72(%rdx), %rdx	 # __closure_15(D)->___handle, _13
 # src\main.cpp:842: 						[=, &SyncPoint, &keyPressed, &keyHeld, &keyReleased, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, SyncPoint, keyHeld, keyHeld, keyReleased, running, x1, x2, y1, y2, z1, z2); }
	.loc 14 842 130
	movl	%r12d, 96(%rsp)	 # _2,
	movl	%edi, 88(%rsp)	 # _3,
	movl	%esi, 80(%rsp)	 # _4,
	movl	%ebx, 72(%rsp)	 # _5,
	movl	%r11d, 64(%rsp)	 # _6,
	movl	%r10d, 56(%rsp)	 # _7,
	movq	%r9, 48(%rsp)	 # _8,
	movq	%r8, 40(%rsp)	 # _9,
	movq	%rcx, 32(%rsp)	 # _10,
	movq	%r14, %r9	 # _11,
	movq	%r13, %r8	 # _12,
	movq	%rax, %rcx	 # _1,
	call	_ZN6MATRIX21UpdateSimulationStateIZ7WinMainEUlvE_EEvP6HWND__RSt7barrierIT_EPSt6atomicIbESA_SA_RS9_jjjjjj	 #
 # src\main.cpp:842: 						[=, &SyncPoint, &keyPressed, &keyHeld, &keyReleased, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, SyncPoint, keyHeld, keyHeld, keyReleased, running, x1, x2, y1, y2, z1, z2); }
	.loc 14 842 216
	nop	
	addq	$112, %rsp	 #,
	popq	%rbx	 #
.LCFI370:
	popq	%rsi	 #
.LCFI371:
	popq	%rdi	 #
.LCFI372:
	popq	%r12	 #
.LCFI373:
	popq	%r13	 #
.LCFI374:
	popq	%r14	 #
.LCFI375:
	popq	%rbp	 #
.LCFI376:
	ret	
.LFE10990:
	.seh_endproc
	.section .rdata,"dr"
.LC54:
	.ascii "UpdateThread[%d] -> \0"
.LC55:
	.ascii "NewThread\12\0"
.LC56:
	.ascii "MainThread\0"
.LC57:
	.ascii "Starting...\12\12\0"
.LC58:
	.ascii "Goodbye!\12\12\0"
.LC59:
	.ascii "Thread[%d] -> closing\12\0"
	.align 2
.LC60:
	.ascii "E\0R\0R\0O\0R\0\0\0"
	.align 8
.LC61:
	.ascii "W\0I\0N\0D\0O\0W\0 \0H\0A\0N\0D\0L\0E\0 \0I\0S\0 \0E\0M\0P\0T\0Y\0\0\0"
	.text
	.globl	WinMain
	.def	WinMain;	.scl	2;	.type	32;	.endef
	.seh_proc	WinMain
WinMain:
.LFB10954:
	.loc 14 787 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI377:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI378:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI379:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI380:
	subq	$1512, %rsp	 #,
	.seh_stackalloc	1512
.LCFI381:
	leaq	128(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 128
.LCFI382:
	.seh_endprologue
	movq	%rcx, 1424(%rbp)	 # D.209154, D.209154
	movq	%rdx, 1432(%rbp)	 # D.209155, D.209155
	movq	%r8, 1440(%rbp)	 # D.209156, D.209156
	movl	%r9d, 1448(%rbp)	 # D.209157, D.209157
 # src\main.cpp:788: 	MATRIX* matrix = new MATRIX();
	.loc 14 788 30
	movl	$64, %ecx	 #,
.LEHB10:
	call	_Znwy	 #
	movq	%rax, %rbx	 # tmp184, _109
	pxor	%xmm0, %xmm0	 # tmp185
	movups	%xmm0, (%rbx)	 # tmp185, MEM[(struct MATRIX *)_110]
	movups	%xmm0, 16(%rbx)	 # tmp185, MEM[(struct MATRIX *)_110]
	movups	%xmm0, 32(%rbx)	 # tmp185, MEM[(struct MATRIX *)_110]
	movups	%xmm0, 48(%rbx)	 # tmp185, MEM[(struct MATRIX *)_110]
	movq	%rbx, %rcx	 # _109,
	call	_ZN6MATRIXC1Ev	 #
	movq	%rbx, 1336(%rbp)	 # _109, matrix
 # src\main.cpp:790: 	uint32_t width  = 200;
	.loc 14 790 11
	movl	$200, 1332(%rbp)	 #, width
 # src\main.cpp:791: 	uint32_t height = 200;
	.loc 14 791 11
	movl	$200, 1328(%rbp)	 #, height
 # src\main.cpp:792: 	uint32_t depth  = 200;
	.loc 14 792 11
	movl	$200, 1324(%rbp)	 #, depth
 # src\main.cpp:794: 	std::atomic<bool> keyPressed[0xFF]   = { 0 };
	.loc 14 794 20
	leaq	880(%rbp), %rdx	 #, tmp186
	movl	$0, %eax	 #, tmp187
	movl	$31, %ecx	 #, tmp188
	movq	%rdx, %rdi	 # tmp186, tmp186
	rep stosq
	movq	%rdi, %rdx	 # tmp186, tmp186
	movl	%eax, (%rdx)	 # tmp187, keyPressed
	addq	$4, %rdx	 #, tmp186
	movw	%ax, (%rdx)	 # tmp187, keyPressed
	addq	$2, %rdx	 #, tmp186
	movb	%al, (%rdx)	 # tmp187, keyPressed
	addq	$1, %rdx	 #, tmp186
 # src\main.cpp:795: 	std::atomic<bool> keyReleased[0xFF]  = { 0 };
	.loc 14 795 20
	leaq	624(%rbp), %rdx	 #, tmp189
	movl	$0, %eax	 #, tmp190
	movl	$31, %ecx	 #, tmp191
	movq	%rdx, %rdi	 # tmp189, tmp189
	rep stosq
	movq	%rdi, %rdx	 # tmp189, tmp189
	movl	%eax, (%rdx)	 # tmp190, keyReleased
	addq	$4, %rdx	 #, tmp189
	movw	%ax, (%rdx)	 # tmp190, keyReleased
	addq	$2, %rdx	 #, tmp189
	movb	%al, (%rdx)	 # tmp190, keyReleased
	addq	$1, %rdx	 #, tmp189
 # src\main.cpp:796: 	std::atomic<bool> keyHeld[0xFF]      = { 0 };
	.loc 14 796 20
	leaq	368(%rbp), %rdx	 #, tmp192
	movl	$0, %eax	 #, tmp193
	movl	$31, %ecx	 #, tmp194
	movq	%rdx, %rdi	 # tmp192, tmp192
	rep stosq
	movq	%rdi, %rdx	 # tmp192, tmp192
	movl	%eax, (%rdx)	 # tmp193, keyHeld
	addq	$4, %rdx	 #, tmp192
	movw	%ax, (%rdx)	 # tmp193, keyHeld
	addq	$2, %rdx	 #, tmp192
	movb	%al, (%rdx)	 # tmp193, keyHeld
	addq	$1, %rdx	 #, tmp192
 # src\main.cpp:797: 	std::atomic<bool> keyPrev[0xFF]      = { 0 };
	.loc 14 797 20
	leaq	112(%rbp), %rdx	 #, tmp195
	movl	$0, %eax	 #, tmp196
	movl	$31, %ecx	 #, tmp197
	movq	%rdx, %rdi	 # tmp195, tmp195
	rep stosq
	movq	%rdi, %rdx	 # tmp195, tmp195
	movl	%eax, (%rdx)	 # tmp196, keyPrev
	addq	$4, %rdx	 #, tmp195
	movw	%ax, (%rdx)	 # tmp196, keyPrev
	addq	$2, %rdx	 #, tmp195
	movb	%al, (%rdx)	 # tmp196, keyPrev
	addq	$1, %rdx	 #, tmp195
 # src\main.cpp:799: 	uint32_t SizeOfMatrix = matrix->InitMatrix(width, height, depth);
	.loc 14 799 44
	movl	1324(%rbp), %r8d	 # depth, tmp198
	movl	1328(%rbp), %ecx	 # height, tmp199
	movl	1332(%rbp), %edx	 # width, tmp200
	movq	1336(%rbp), %rax	 # matrix, tmp201
	movl	%r8d, %r9d	 # tmp198,
	movl	%ecx, %r8d	 # tmp199,
	movq	%rax, %rcx	 # tmp201,
	call	_ZN6MATRIX10InitMatrixEjjj	 #
	movl	%eax, 1320(%rbp)	 # _124, SizeOfMatrix
 # src\main.cpp:800: 	HWND _handle = (HWND)WINDOWGraphicsOverlay::CreateWindowOverlay(matrix, width, height);
	.loc 14 800 65
	movl	1328(%rbp), %ecx	 # height, tmp202
	movl	1332(%rbp), %edx	 # width, tmp203
	movq	1336(%rbp), %rax	 # matrix, tmp204
	movl	%ecx, %r8d	 # tmp202,
	movq	%rax, %rcx	 # tmp204,
	call	_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj	 #
	movq	%rax, 1312(%rbp)	 # _127, _handle
 # src\main.cpp:801: 	WINDOWGraphicsOverlay::AllocBrushPool(_handle);
	.loc 14 801 39
	movq	1312(%rbp), %rax	 # _handle, tmp205
	movq	%rax, %rcx	 # tmp205,
	call	_ZN21WINDOWGraphicsOverlay14AllocBrushPoolEP6HWND__	 #
 # src\main.cpp:803: 	std::atomic<bool> running = true;
	.loc 14 803 20
	movb	$1, 111(%rbp)	 #, running._M_base._M_i
 # src\main.cpp:804: 	std::atomic<bool> ready   = false;
	.loc 14 804 20
	movb	$0, 110(%rbp)	 #, ready._M_base._M_i
 # src\main.cpp:805: 	std::thread::id MainThreadID = std::this_thread::get_id();
	.loc 14 805 57
	call	_ZNSt11this_thread6get_idEv	 #
	movq	%rax, 96(%rbp)	 # tmp207, MainThreadID
 # src\main.cpp:807: 	MSG msg = {NULL};
	.loc 14 807 6
	pxor	%xmm0, %xmm0	 # tmp208
	movups	%xmm0, 48(%rbp)	 # tmp208, msg
	movups	%xmm0, 64(%rbp)	 # tmp208, msg
	movups	%xmm0, 80(%rbp)	 # tmp208, msg
.LBB210:
 # src\main.cpp:809: 	if(_handle)
	.loc 14 809 2
	cmpq	$0, 1312(%rbp)	 #, _handle
	je	.L366	 #,
.LBB211:
 # src\main.cpp:812: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 14 812 129
	call	_ZNSt6thread20hardware_concurrencyEv	 #
	movl	%eax, %ebx	 # _1, _137
 # src\main.cpp:812: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 14 812 131
	movabsq	$1152921504606846975, %rax	 #, tmp209
	cmpq	%rbx, %rax	 # _137, tmp209
	jb	.L367	 #,
 # src\main.cpp:812: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 14 812 131 is_stmt 0 discriminator 1
	leaq	1(%rbx), %rax	 #, _2
	salq	$3, %rax	 #, iftmp.81_80
	jmp	.L368	 #
.L367:
 # src\main.cpp:812: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 14 812 131 discriminator 2
	movq	$-1, %rax	 #, iftmp.81_80
.L368:
 # src\main.cpp:812: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 14 812 131 discriminator 4
	movq	%rax, %rcx	 # iftmp.81_80,
	call	_Znay	 #
.LEHE10:
	movq	%rax, %rsi	 # tmp210, _141
 # src\main.cpp:812: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 14 812 132 is_stmt 1 discriminator 4
	movq	%rbx, (%rsi)	 # _137, MEM[(sizetype *)_142]
 # src\main.cpp:812: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 14 812 131 discriminator 4
	leaq	8(%rsi), %rax	 #, _145
	leaq	-1(%rbx), %rdx	 #, _4
	movq	%rdx, %rbx	 # _4, _70
	movq	%rax, %rdi	 # _145, _69
	jmp	.L369	 #
.L370:
 # src\main.cpp:812: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 14 812 131 is_stmt 0 discriminator 8
	movq	%rdi, %rcx	 # _69,
	call	_ZNSt6threadC1Ev	 #
	subq	$1, %rbx	 #, _70
	addq	$8, %rdi	 #, _69
.L369:
 # src\main.cpp:812: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 14 812 131 discriminator 6
	testq	%rbx, %rbx	 # _70
	jns	.L370	 #,
 # src\main.cpp:812: 		std::unique_ptr<std::thread[]> ChunkThreads = std::unique_ptr<std::thread[]>(new std::thread[std::thread::hardware_concurrency()]);
	.loc 14 812 132 is_stmt 1 discriminator 9
	leaq	8(%rsi), %rdx	 #, _9
	leaq	40(%rbp), %rax	 #, tmp211
	movq	%rax, %rcx	 # tmp211,
	call	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_	 #
 # src\main.cpp:814: 		uint32_t splitPerAxis = std::round(std::cbrt(std::thread::hardware_concurrency()));
	.loc 14 814 37 discriminator 9
	call	_ZNSt6thread20hardware_concurrencyEv	 #
	movl	%eax, %ecx	 # _10,
	call	_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_	 #
	movq	%xmm0, %rax	 #, _11
	movq	%rax, %xmm0	 # _11,
	call	round	 #
 # src\main.cpp:814: 		uint32_t splitPerAxis = std::round(std::cbrt(std::thread::hardware_concurrency()));
	.loc 14 814 84 discriminator 9
	cvttsd2siq	%xmm0, %rax	 # _12, tmp212
	movl	%eax, 1308(%rbp)	 # tmp212, splitPerAxis
 # src\main.cpp:816: 		auto rondevousPointFunction = [=, &running](){matrix->UpdateWorldView(_handle, running);};
	.loc 14 816 91 discriminator 9
	leaq	111(%rbp), %rax	 #, tmp213
	movq	%rax, 16(%rbp)	 # tmp213, rondevousPointFunction.__running
	movq	1336(%rbp), %rax	 # matrix, tmp214
	movq	%rax, 24(%rbp)	 # tmp214, rondevousPointFunction.__matrix
	movq	1312(%rbp), %rax	 # _handle, tmp215
	movq	%rax, 32(%rbp)	 # tmp215, rondevousPointFunction.___handle
 # src\main.cpp:817: 		std::barrier SyncPoint(splitPerAxis * splitPerAxis * splitPerAxis, rondevousPointFunction);
	.loc 14 817 39 discriminator 9
	movl	1308(%rbp), %eax	 # splitPerAxis, tmp216
	imull	%eax, %eax	 # tmp216, _13
 # src\main.cpp:817: 		std::barrier SyncPoint(splitPerAxis * splitPerAxis * splitPerAxis, rondevousPointFunction);
	.loc 14 817 54 discriminator 9
	imull	1308(%rbp), %eax	 # splitPerAxis, _14
 # src\main.cpp:817: 		std::barrier SyncPoint(splitPerAxis * splitPerAxis * splitPerAxis, rondevousPointFunction);
	.loc 14 817 92 discriminator 9
	movl	%eax, %ecx	 # _14, _15
	movq	16(%rbp), %rax	 # rondevousPointFunction, tmp217
	movq	24(%rbp), %rdx	 # rondevousPointFunction,
	movq	%rax, -80(%rbp)	 # tmp217,
	movq	%rdx, -72(%rbp)	 #,
	movq	32(%rbp), %rax	 # rondevousPointFunction, tmp218
	movq	%rax, -64(%rbp)	 # tmp218,
	leaq	-80(%rbp), %rdx	 #, tmp219
	leaq	-48(%rbp), %rax	 #, tmp220
	movq	%rdx, %r8	 # tmp219,
	movq	%rcx, %rdx	 # _15,
	movq	%rax, %rcx	 # tmp220,
.LEHB11:
	call	_ZNSt7barrierIZ7WinMainEUlvE_EC1ExS0_	 #
.LEHE11:
 # src\main.cpp:819: 		uint32_t chunkSizeX = width  / splitPerAxis;
	.loc 14 819 12
	movl	1332(%rbp), %eax	 # width, tmp224
	movl	$0, %edx	 #, tmp223
	divl	1308(%rbp)	 # splitPerAxis
	movl	%eax, 1304(%rbp)	 # tmp222, chunkSizeX
 # src\main.cpp:820: 		uint32_t chunkSizeY = height / splitPerAxis;
	.loc 14 820 12
	movl	1328(%rbp), %eax	 # height, tmp228
	movl	$0, %edx	 #, tmp227
	divl	1308(%rbp)	 # splitPerAxis
	movl	%eax, 1300(%rbp)	 # tmp226, chunkSizeY
 # src\main.cpp:821: 		uint32_t chunkSizeZ = depth  / splitPerAxis;
	.loc 14 821 12
	movl	1324(%rbp), %eax	 # depth, tmp232
	movl	$0, %edx	 #, tmp231
	divl	1308(%rbp)	 # splitPerAxis
	movl	%eax, 1296(%rbp)	 # tmp230, chunkSizeZ
 # src\main.cpp:823: 		uint32_t threadIndex = 0;
	.loc 14 823 12
	movl	$0, 1372(%rbp)	 #, threadIndex
.LBB212:
 # src\main.cpp:825: 		for (uint32_t x = 0; x < splitPerAxis; ++x) 
	.loc 14 825 17
	movl	$0, 1368(%rbp)	 #, x
 # src\main.cpp:825: 		for (uint32_t x = 0; x < splitPerAxis; ++x) 
	.loc 14 825 3
	jmp	.L371	 #
.L382:
.LBB213:
.LBB214:
 # src\main.cpp:827: 		    for (uint32_t y = 0; y < splitPerAxis; ++y) 
	.loc 14 827 21
	movl	$0, 1364(%rbp)	 #, y
 # src\main.cpp:827: 		    for (uint32_t y = 0; y < splitPerAxis; ++y) 
	.loc 14 827 7
	jmp	.L372	 #
.L381:
.LBB215:
.LBB216:
 # src\main.cpp:829: 		        for (uint32_t z = 0; z < splitPerAxis; ++z) 
	.loc 14 829 25
	movl	$0, 1360(%rbp)	 #, z
 # src\main.cpp:829: 		        for (uint32_t z = 0; z < splitPerAxis; ++z) 
	.loc 14 829 11
	jmp	.L373	 #
.L380:
.LBB217:
 # src\main.cpp:831: 		            uint32_t x1 = x * chunkSizeX;
	.loc 14 831 24
	movl	1368(%rbp), %eax	 # x, tmp234
	imull	1304(%rbp), %eax	 # chunkSizeX, tmp233
	movl	%eax, 1284(%rbp)	 # tmp233, x1
 # src\main.cpp:832: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 14 832 48
	movl	1308(%rbp), %eax	 # splitPerAxis, tmp235
	subl	$1, %eax	 #, _16
 # src\main.cpp:832: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 14 832 53
	cmpl	%eax, 1368(%rbp)	 # _16, x
	je	.L374	 #,
 # src\main.cpp:832: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 14 832 66 discriminator 1
	movl	1368(%rbp), %eax	 # x, tmp236
	addl	$1, %eax	 #, _17
 # src\main.cpp:832: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 14 832 53 discriminator 1
	imull	1304(%rbp), %eax	 # chunkSizeX, iftmp.84_81
	jmp	.L375	 #
.L374:
 # src\main.cpp:832: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 14 832 53 is_stmt 0 discriminator 2
	movl	1332(%rbp), %eax	 # width, iftmp.84_81
.L375:
 # src\main.cpp:832: 		            uint32_t x2 = (x == splitPerAxis - 1) ? width : (x + 1) * chunkSizeX;
	.loc 14 832 24 is_stmt 1 discriminator 4
	movl	%eax, 1280(%rbp)	 # iftmp.84_81, x2
 # src\main.cpp:834: 		            uint32_t y1 = y * chunkSizeY;
	.loc 14 834 24 discriminator 4
	movl	1364(%rbp), %eax	 # y, tmp238
	imull	1300(%rbp), %eax	 # chunkSizeY, tmp237
	movl	%eax, 1276(%rbp)	 # tmp237, y1
 # src\main.cpp:835: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 14 835 48 discriminator 4
	movl	1308(%rbp), %eax	 # splitPerAxis, tmp239
	subl	$1, %eax	 #, _18
 # src\main.cpp:835: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 14 835 53 discriminator 4
	cmpl	%eax, 1364(%rbp)	 # _18, y
	je	.L376	 #,
 # src\main.cpp:835: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 14 835 67 discriminator 1
	movl	1364(%rbp), %eax	 # y, tmp240
	addl	$1, %eax	 #, _19
 # src\main.cpp:835: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 14 835 53 discriminator 1
	imull	1300(%rbp), %eax	 # chunkSizeY, iftmp.85_82
	jmp	.L377	 #
.L376:
 # src\main.cpp:835: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 14 835 53 is_stmt 0 discriminator 2
	movl	1328(%rbp), %eax	 # height, iftmp.85_82
.L377:
 # src\main.cpp:835: 		            uint32_t y2 = (y == splitPerAxis - 1) ? height : (y + 1) * chunkSizeY;
	.loc 14 835 24 is_stmt 1 discriminator 4
	movl	%eax, 1272(%rbp)	 # iftmp.85_82, y2
 # src\main.cpp:837: 		            uint32_t z1 = z * chunkSizeZ;
	.loc 14 837 24 discriminator 4
	movl	1360(%rbp), %eax	 # z, tmp242
	imull	1296(%rbp), %eax	 # chunkSizeZ, tmp241
	movl	%eax, 1268(%rbp)	 # tmp241, z1
 # src\main.cpp:838: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 14 838 48 discriminator 4
	movl	1308(%rbp), %eax	 # splitPerAxis, tmp243
	subl	$1, %eax	 #, _20
 # src\main.cpp:838: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 14 838 53 discriminator 4
	cmpl	%eax, 1360(%rbp)	 # _20, z
	je	.L378	 #,
 # src\main.cpp:838: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 14 838 66 discriminator 1
	movl	1360(%rbp), %eax	 # z, tmp244
	addl	$1, %eax	 #, _21
 # src\main.cpp:838: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 14 838 53 discriminator 1
	imull	1296(%rbp), %eax	 # chunkSizeZ, iftmp.86_83
	jmp	.L379	 #
.L378:
 # src\main.cpp:838: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 14 838 53 is_stmt 0 discriminator 2
	movl	1324(%rbp), %eax	 # depth, iftmp.86_83
.L379:
 # src\main.cpp:838: 		            uint32_t z2 = (z == splitPerAxis - 1) ? depth : (z + 1) * chunkSizeZ;
	.loc 14 838 24 is_stmt 1 discriminator 4
	movl	%eax, 1264(%rbp)	 # iftmp.86_83, z2
 # src\main.cpp:842: 						[=, &SyncPoint, &keyPressed, &keyHeld, &keyReleased, &running, x1,  x2,  y1,  y2,  z1, z2](){ matrix->UpdateSimulationState(_handle, SyncPoint, keyHeld, keyHeld, keyReleased, running, x1, x2, y1, y2, z1, z2); }
	.loc 14 842 7 discriminator 4
	leaq	-48(%rbp), %rax	 #, tmp245
	movq	%rax, 1152(%rbp)	 # tmp245, D.215942.__SyncPoint
	leaq	880(%rbp), %rax	 #, tmp246
	movq	%rax, 1160(%rbp)	 # tmp246, D.215942.__keyPressed
	leaq	368(%rbp), %rax	 #, tmp247
	movq	%rax, 1168(%rbp)	 # tmp247, D.215942.__keyHeld
	leaq	624(%rbp), %rax	 #, tmp248
	movq	%rax, 1176(%rbp)	 # tmp248, D.215942.__keyReleased
	leaq	111(%rbp), %rax	 #, tmp249
	movq	%rax, 1184(%rbp)	 # tmp249, D.215942.__running
	movl	1284(%rbp), %eax	 # x1, tmp250
	movl	%eax, 1192(%rbp)	 # tmp250, D.215942.__x1
	movl	1280(%rbp), %eax	 # x2, tmp251
	movl	%eax, 1196(%rbp)	 # tmp251, D.215942.__x2
	movl	1276(%rbp), %eax	 # y1, tmp252
	movl	%eax, 1200(%rbp)	 # tmp252, D.215942.__y1
	movl	1272(%rbp), %eax	 # y2, tmp253
	movl	%eax, 1204(%rbp)	 # tmp253, D.215942.__y2
	movl	1268(%rbp), %eax	 # z1, tmp254
	movl	%eax, 1208(%rbp)	 # tmp254, D.215942.__z1
	movl	1264(%rbp), %eax	 # z2, tmp255
	movl	%eax, 1212(%rbp)	 # tmp255, D.215942.__z2
	movq	1336(%rbp), %rax	 # matrix, tmp256
	movq	%rax, 1216(%rbp)	 # tmp256, D.215942.__matrix
	movq	1312(%rbp), %rax	 # _handle, tmp257
	movq	%rax, 1224(%rbp)	 # tmp257, D.215942.___handle
 # src\main.cpp:840: 		            ChunkThreads[threadIndex++] = std::thread
	.loc 14 840 50 discriminator 4
	leaq	1152(%rbp), %rdx	 #, tmp258
	leaq	1144(%rbp), %rax	 #, tmp259
	movq	%rax, %rcx	 # tmp259,
.LEHB12:
	call	_ZNSt6threadC1IZ7WinMainEUlvE0_JEvEEOT_DpOT0_	 #
 # src\main.cpp:840: 		            ChunkThreads[threadIndex++] = std::thread
	.loc 14 840 39 discriminator 1
	movl	1372(%rbp), %eax	 # threadIndex, threadIndex.87_22
	leal	1(%rax), %edx	 #, tmp260
	movl	%edx, 1372(%rbp)	 # tmp260, threadIndex
 # src\main.cpp:840: 		            ChunkThreads[threadIndex++] = std::thread
	.loc 14 840 41 discriminator 1
	movl	%eax, %edx	 # threadIndex.87_22, _23
	leaq	40(%rbp), %rax	 #, tmp261
	movq	%rax, %rcx	 # tmp261,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
	movq	%rax, %rcx	 #, _24
 # src\main.cpp:843: 					);
	.loc 14 843 6 discriminator 1
	leaq	1144(%rbp), %rax	 #, tmp262
	movq	%rax, %rdx	 # tmp262,
	call	_ZNSt6threadaSEOS_	 #
 # src\main.cpp:840: 		            ChunkThreads[threadIndex++] = std::thread
	.loc 14 840 50 discriminator 1
	leaq	1144(%rbp), %rax	 #, tmp263
	movq	%rax, %rcx	 # tmp263,
	call	_ZNSt6threadD1Ev	 #
.LBE217:
 # src\main.cpp:829: 		        for (uint32_t z = 0; z < splitPerAxis; ++z) 
	.loc 14 829 11 discriminator 1
	addl	$1, 1360(%rbp)	 #, z
.L373:
 # src\main.cpp:829: 		        for (uint32_t z = 0; z < splitPerAxis; ++z) 
	.loc 14 829 34 discriminator 2
	movl	1360(%rbp), %eax	 # z, tmp264
	cmpl	1308(%rbp), %eax	 # splitPerAxis, tmp264
	jb	.L380	 #,
.LBE216:
.LBE215:
 # src\main.cpp:827: 		    for (uint32_t y = 0; y < splitPerAxis; ++y) 
	.loc 14 827 7 discriminator 2
	addl	$1, 1364(%rbp)	 #, y
.L372:
 # src\main.cpp:827: 		    for (uint32_t y = 0; y < splitPerAxis; ++y) 
	.loc 14 827 30 discriminator 1
	movl	1364(%rbp), %eax	 # y, tmp265
	cmpl	1308(%rbp), %eax	 # splitPerAxis, tmp265
	jb	.L381	 #,
.LBE214:
.LBE213:
 # src\main.cpp:825: 		for (uint32_t x = 0; x < splitPerAxis; ++x) 
	.loc 14 825 3 discriminator 2
	addl	$1, 1368(%rbp)	 #, x
.L371:
 # src\main.cpp:825: 		for (uint32_t x = 0; x < splitPerAxis; ++x) 
	.loc 14 825 26 discriminator 1
	movl	1368(%rbp), %eax	 # x, tmp266
	cmpl	1308(%rbp), %eax	 # splitPerAxis, tmp266
	jb	.L382	 #,
.LBE212:
.LBB218:
 # src\main.cpp:848: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 14 848 16
	movw	$0, 1358(%rbp)	 #, i
 # src\main.cpp:848: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 14 848 3
	jmp	.L383	 #
.L386:
.LBB219:
 # src\main.cpp:849: 			printf("UpdateThread[%d] -> ", ChunkThreads[i].get_id());
	.loc 14 849 49
	movzwl	1358(%rbp), %edx	 # i, _25
	leaq	40(%rbp), %rax	 #, tmp267
	movq	%rax, %rcx	 # tmp267,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
 # src\main.cpp:849: 			printf("UpdateThread[%d] -> ", ChunkThreads[i].get_id());
	.loc 14 849 10
	movq	%rax, %rcx	 # _26,
	call	_ZNKSt6thread6get_idEv	 #
	movq	%rax, %rdx	 # D.236042,
	leaq	.LC54(%rip), %rax	 #, tmp268
	movq	%rax, %rcx	 # tmp268,
	call	_Z6printfPKcz	 #
 # src\main.cpp:850: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 14 850 31
	movzwl	1358(%rbp), %edx	 # i, _27
	leaq	40(%rbp), %rax	 #, tmp269
	movq	%rax, %rcx	 # tmp269,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
 # src\main.cpp:850: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 14 850 45
	movq	%rax, %rcx	 # _28,
	call	_ZNKSt6thread6get_idEv	 #
	movq	%rax, %rcx	 #, D.236044
	movq	96(%rbp), %rax	 # MainThreadID, tmp270
	movq	%rax, %rdx	 # tmp270,
	call	_ZSteqNSt6thread2idES0_	 #
 # src\main.cpp:850: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 14 850 42
	xorl	$1, %eax	 #, _30
 # src\main.cpp:850: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 14 850 58
	testb	%al, %al	 # _30
	je	.L384	 #,
 # src\main.cpp:850: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 14 850 66 discriminator 1
	leaq	.LC55(%rip), %rax	 #, tmp271
	movq	%rax, %rcx	 # tmp271,
	call	_Z6printfPKcz	 #
	jmp	.L385	 #
.L384:
 # src\main.cpp:850: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 14 850 90 discriminator 2
	leaq	.LC56(%rip), %rax	 #, tmp272
	movq	%rax, %rcx	 # tmp272,
	call	_Z6printfPKcz	 #
.L385:
 # src\main.cpp:850: 			uint32_t n = ChunkThreads[i].get_id() != MainThreadID ? printf("NewThread\n") : printf("MainThread");
	.loc 14 850 103 discriminator 6
	movl	%eax, 1288(%rbp)	 # iftmp.88_84, n
.LBE219:
 # src\main.cpp:848: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 14 848 3 discriminator 6
	addw	$1, 1358(%rbp)	 #, i
.L383:
 # src\main.cpp:848: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 14 848 21 discriminator 2
	movzwl	1358(%rbp), %ebx	 # i, _33
 # src\main.cpp:848: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 14 848 57 discriminator 2
	call	_ZNSt6thread20hardware_concurrencyEv	 #
 # src\main.cpp:848: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 14 848 60 discriminator 2
	subl	$1, %eax	 #, _35
 # src\main.cpp:848: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i){
	.loc 14 848 22 discriminator 2
	cmpl	%ebx, %eax	 # _33, _35
	setnb	%al	 #, retval.89_165
	testb	%al, %al	 # retval.89_165
	jne	.L386	 #,
.LBE218:
 # src\main.cpp:856: 		printf("Starting...\n\n");
	.loc 14 856 9
	leaq	.LC57(%rip), %rax	 #, tmp273
	movq	%rax, %rcx	 # tmp273,
	call	_Z6printfPKcz	 #
 # src\main.cpp:858: 		while(running)
	.loc 14 858 3
	jmp	.L387	 #
.L400:
.LBB220:
 # src\main.cpp:860: 			WINDOWGraphicsOverlay::blitOverlay(_handle, matrix->_zLevel, matrix->_pixelWidth, matrix->_pixelHeight);
	.loc 14 860 94
	movq	1336(%rbp), %rax	 # matrix, tmp274
	movzwl	54(%rax), %eax	 # matrix_115->_pixelHeight, _36
 # src\main.cpp:860: 			WINDOWGraphicsOverlay::blitOverlay(_handle, matrix->_zLevel, matrix->_pixelWidth, matrix->_pixelHeight);
	.loc 14 860 38
	movzwl	%ax, %r8d	 # _36, _37
 # src\main.cpp:860: 			WINDOWGraphicsOverlay::blitOverlay(_handle, matrix->_zLevel, matrix->_pixelWidth, matrix->_pixelHeight);
	.loc 14 860 73
	movq	1336(%rbp), %rax	 # matrix, tmp275
	movzwl	52(%rax), %eax	 # matrix_115->_pixelWidth, _38
 # src\main.cpp:860: 			WINDOWGraphicsOverlay::blitOverlay(_handle, matrix->_zLevel, matrix->_pixelWidth, matrix->_pixelHeight);
	.loc 14 860 38
	movzwl	%ax, %ecx	 # _38, _39
 # src\main.cpp:860: 			WINDOWGraphicsOverlay::blitOverlay(_handle, matrix->_zLevel, matrix->_pixelWidth, matrix->_pixelHeight);
	.loc 14 860 56
	movq	1336(%rbp), %rax	 # matrix, tmp276
	movzwl	56(%rax), %eax	 # matrix_115->_zLevel, _40
 # src\main.cpp:860: 			WINDOWGraphicsOverlay::blitOverlay(_handle, matrix->_zLevel, matrix->_pixelWidth, matrix->_pixelHeight);
	.loc 14 860 38
	movzwl	%ax, %edx	 # _40, _41
	movq	1312(%rbp), %rax	 # _handle, tmp277
	movl	%r8d, %r9d	 # _37,
	movl	%ecx, %r8d	 # _39,
	movq	%rax, %rcx	 # tmp277,
	call	_ZN21WINDOWGraphicsOverlay11blitOverlayEP6HWND__jii	 #
 # src\main.cpp:862: 			while(PeekMessage(&msg, NULL, 0, 0,PM_REMOVE))
	.loc 14 862 4
	jmp	.L388	 #
.L399:
.LBB221:
.LBB222:
 # src\main.cpp:865: 				for (int i = 0; i <= 0xFF - 1; i++)
	.loc 14 865 14
	movl	$0, 1352(%rbp)	 #, i
 # src\main.cpp:865: 				for (int i = 0; i <= 0xFF - 1; i++)
	.loc 14 865 5
	jmp	.L389	 #
.L396:
.LBB223:
 # src\main.cpp:867: 					short KeyState = GetAsyncKeyState( i );
	.loc 14 867 39
	movl	1352(%rbp), %eax	 # i, tmp278
	movl	%eax, %ecx	 # tmp278,
	movq	__imp_GetAsyncKeyState(%rip), %rax	 #, tmp279
	call	*%rax	 # tmp279
.LVL49:
	movw	%ax, 1294(%rbp)	 # _211, KeyState
 # src\main.cpp:868: 					bool down      = (KeyState >> 15) & 0x1;
	.loc 14 868 11
	movzwl	1294(%rbp), %eax	 # KeyState, tmp281
	shrw	$15, %ax	 #, tmp280
	movb	%al, 1293(%rbp)	 # tmp280, down
 # src\main.cpp:870: 					keyPressed[i]  = !keyPrev[i] && down;
	.loc 14 870 33
	leaq	112(%rbp), %rdx	 #, tmp282
	movl	1352(%rbp), %eax	 # i, tmp284
	cltq
	addq	%rdx, %rax	 # tmp282, _42
	movq	%rax, %rcx	 # _42,
	call	_ZNKSt6atomicIbEcvbEv	 #
 # src\main.cpp:870: 					keyPressed[i]  = !keyPrev[i] && down;
	.loc 14 870 23
	xorl	$1, %eax	 #, _44
 # src\main.cpp:870: 					keyPressed[i]  = !keyPrev[i] && down;
	.loc 14 870 35
	testb	%al, %al	 # _44
	je	.L390	 #,
 # src\main.cpp:870: 					keyPressed[i]  = !keyPrev[i] && down;
	.loc 14 870 35 is_stmt 0 discriminator 1
	cmpb	$0, 1293(%rbp)	 #, down
	je	.L390	 #,
 # src\main.cpp:870: 					keyPressed[i]  = !keyPrev[i] && down;
	.loc 14 870 35 discriminator 3
	movl	$1, %eax	 #, iftmp.90_85
	jmp	.L391	 #
.L390:
 # src\main.cpp:870: 					keyPressed[i]  = !keyPrev[i] && down;
	.loc 14 870 35 discriminator 4
	movl	$0, %eax	 #, iftmp.90_85
.L391:
 # src\main.cpp:870: 					keyPressed[i]  = !keyPrev[i] && down;
	.loc 14 870 21 is_stmt 1 discriminator 6
	movzbl	%al, %eax	 # iftmp.90_85, _45
	leaq	880(%rbp), %rcx	 #, tmp285
	movl	1352(%rbp), %edx	 # i, tmp287
	movslq	%edx, %rdx	 # tmp287, tmp286
	addq	%rdx, %rcx	 # tmp286, _46
	movl	%eax, %edx	 # _45,
	call	_ZNSt6atomicIbEaSEb	 #
 # src\main.cpp:871: 					keyHeld[i]     = keyPrev[i]  && down;
	.loc 14 871 38 discriminator 6
	leaq	112(%rbp), %rdx	 #, tmp288
	movl	1352(%rbp), %eax	 # i, tmp290
	cltq
	addq	%rdx, %rax	 # tmp288, _47
	movq	%rax, %rcx	 # _47,
	call	_ZNKSt6atomicIbEcvbEv	 #
 # src\main.cpp:871: 					keyHeld[i]     = keyPrev[i]  && down;
	.loc 14 871 35 discriminator 6
	testb	%al, %al	 # _48
	je	.L392	 #,
 # src\main.cpp:871: 					keyHeld[i]     = keyPrev[i]  && down;
	.loc 14 871 35 is_stmt 0 discriminator 1
	cmpb	$0, 1293(%rbp)	 #, down
	je	.L392	 #,
 # src\main.cpp:871: 					keyHeld[i]     = keyPrev[i]  && down;
	.loc 14 871 35 discriminator 3
	movl	$1, %eax	 #, iftmp.91_86
	jmp	.L393	 #
.L392:
 # src\main.cpp:871: 					keyHeld[i]     = keyPrev[i]  && down;
	.loc 14 871 35 discriminator 4
	movl	$0, %eax	 #, iftmp.91_86
.L393:
 # src\main.cpp:871: 					keyHeld[i]     = keyPrev[i]  && down;
	.loc 14 871 21 is_stmt 1 discriminator 6
	movzbl	%al, %eax	 # iftmp.91_86, _49
	leaq	368(%rbp), %rcx	 #, tmp291
	movl	1352(%rbp), %edx	 # i, tmp293
	movslq	%edx, %rdx	 # tmp293, tmp292
	addq	%rdx, %rcx	 # tmp292, _50
	movl	%eax, %edx	 # _49,
	call	_ZNSt6atomicIbEaSEb	 #
 # src\main.cpp:872: 					keyReleased[i] = keyPrev[i]  && !down;
	.loc 14 872 39 discriminator 6
	leaq	112(%rbp), %rdx	 #, tmp294
	movl	1352(%rbp), %eax	 # i, tmp296
	cltq
	addq	%rdx, %rax	 # tmp294, _51
	movq	%rax, %rcx	 # _51,
	call	_ZNKSt6atomicIbEcvbEv	 #
 # src\main.cpp:872: 					keyReleased[i] = keyPrev[i]  && !down;
	.loc 14 872 35 discriminator 6
	testb	%al, %al	 # _52
	je	.L394	 #,
 # src\main.cpp:872: 					keyReleased[i] = keyPrev[i]  && !down;
	.loc 14 872 38 discriminator 1
	movzbl	1293(%rbp), %eax	 # down, tmp297
	xorl	$1, %eax	 #, _53
 # src\main.cpp:872: 					keyReleased[i] = keyPrev[i]  && !down;
	.loc 14 872 35 discriminator 1
	testb	%al, %al	 # _53
	je	.L394	 #,
 # src\main.cpp:872: 					keyReleased[i] = keyPrev[i]  && !down;
	.loc 14 872 35 is_stmt 0 discriminator 3
	movl	$1, %eax	 #, iftmp.92_87
	jmp	.L395	 #
.L394:
 # src\main.cpp:872: 					keyReleased[i] = keyPrev[i]  && !down;
	.loc 14 872 35 discriminator 4
	movl	$0, %eax	 #, iftmp.92_87
.L395:
 # src\main.cpp:872: 					keyReleased[i] = keyPrev[i]  && !down;
	.loc 14 872 21 is_stmt 1 discriminator 6
	movzbl	%al, %eax	 # iftmp.92_87, _54
	leaq	624(%rbp), %rcx	 #, tmp298
	movl	1352(%rbp), %edx	 # i, tmp300
	movslq	%edx, %rdx	 # tmp300, tmp299
	addq	%rdx, %rcx	 # tmp299, _55
	movl	%eax, %edx	 # _54,
	call	_ZNSt6atomicIbEaSEb	 #
 # src\main.cpp:874: 					keyPrev[i] = down;
	.loc 14 874 17 discriminator 6
	movzbl	1293(%rbp), %eax	 # down, _56
	leaq	112(%rbp), %rcx	 #, tmp301
	movl	1352(%rbp), %edx	 # i, tmp303
	movslq	%edx, %rdx	 # tmp303, tmp302
	addq	%rdx, %rcx	 # tmp302, _57
	movl	%eax, %edx	 # _56,
	call	_ZNSt6atomicIbEaSEb	 #
.LBE223:
 # src\main.cpp:865: 				for (int i = 0; i <= 0xFF - 1; i++)
	.loc 14 865 5 discriminator 6
	addl	$1, 1352(%rbp)	 #, i
.L389:
 # src\main.cpp:865: 				for (int i = 0; i <= 0xFF - 1; i++)
	.loc 14 865 23 discriminator 2
	cmpl	$254, 1352(%rbp)	 #, i
	jle	.L396	 #,
.LBE222:
 # src\main.cpp:877: 				if(keyReleased[VK_INSERT])
	.loc 14 877 29
	leaq	624(%rbp), %rax	 #, tmp304
	addq	$45, %rax	 #, tmp305
	movq	%rax, %rcx	 # tmp305,
	call	_ZNKSt6atomicIbEcvbEv	 #
 # src\main.cpp:877: 				if(keyReleased[VK_INSERT])
	.loc 14 877 5
	testb	%al, %al	 # retval.93_205
	je	.L397	 #,
 # src\main.cpp:879: 					running = false;
	.loc 14 879 14
	leaq	111(%rbp), %rax	 #, tmp306
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp306,
	call	_ZNSt6atomicIbEaSEb	 #
 # src\main.cpp:880: 					printf("Goodbye!\n\n");
	.loc 14 880 12
	leaq	.LC58(%rip), %rax	 #, tmp307
	movq	%rax, %rcx	 # tmp307,
	call	_Z6printfPKcz	 #
 # src\main.cpp:881: 					break;
	.loc 14 881 6
	jmp	.L398	 #
.L397:
 # src\main.cpp:884: 				::TranslateMessage(&msg);
	.loc 14 884 23
	leaq	48(%rbp), %rax	 #, tmp308
	movq	%rax, %rcx	 # tmp308,
	movq	__imp_TranslateMessage(%rip), %rax	 #, tmp309
	call	*%rax	 # tmp309
.LVL50:
 # src\main.cpp:885: 				::DispatchMessage(&msg);
	.loc 14 885 22
	leaq	48(%rbp), %rax	 #, tmp310
	movq	%rax, %rcx	 # tmp310,
	movq	__imp_DispatchMessageW(%rip), %rax	 #, tmp311
	call	*%rax	 # tmp311
.LVL51:
.L388:
.LBE221:
 # src\main.cpp:862: 			while(PeekMessage(&msg, NULL, 0, 0,PM_REMOVE))
	.loc 14 862 21
	leaq	48(%rbp), %rax	 #, tmp312
	movl	$1, 32(%rsp)	 #,
	movl	$0, %r9d	 #,
	movl	$0, %r8d	 #,
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp312,
	movq	__imp_PeekMessageW(%rip), %rax	 #, tmp313
	call	*%rax	 # tmp313
.LVL52:
	testl	%eax, %eax	 # _58
	setne	%al	 #, retval.94_202
	testb	%al, %al	 # retval.94_202
	jne	.L399	 #,
.L398:
 # src\main.cpp:888: 			std::this_thread::sleep_for(std::chrono::milliseconds(1000 / TARGET_FPS));
	.loc 14 888 63
	movl	$16, 1244(%rbp)	 #, D.216005
 # src\main.cpp:888: 			std::this_thread::sleep_for(std::chrono::milliseconds(1000 / TARGET_FPS));
	.loc 14 888 45
	leaq	1244(%rbp), %rdx	 #, tmp314
	leaq	1232(%rbp), %rax	 #, tmp315
	movq	%rax, %rcx	 # tmp315,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_	 #
 # src\main.cpp:888: 			std::this_thread::sleep_for(std::chrono::milliseconds(1000 / TARGET_FPS));
	.loc 14 888 31
	leaq	1232(%rbp), %rax	 #, tmp316
	movq	%rax, %rcx	 # tmp316,
	call	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE	 #
.L387:
.LBE220:
 # src\main.cpp:858: 		while(running)
	.loc 14 858 9
	leaq	111(%rbp), %rax	 #, tmp317
	movq	%rax, %rcx	 # tmp317,
	call	_ZNKSt6atomicIbEcvbEv	 #
	testb	%al, %al	 # retval.95_168
	jne	.L400	 #,
 # src\main.cpp:891: 		running = false;
	.loc 14 891 11
	leaq	111(%rbp), %rax	 #, tmp318
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp318,
	call	_ZNSt6atomicIbEaSEb	 #
 # src\main.cpp:893: 		std::this_thread::sleep_for(std::chrono::milliseconds(1000));
	.loc 14 893 57
	movl	$1000, 1260(%rbp)	 #, D.216007
 # src\main.cpp:893: 		std::this_thread::sleep_for(std::chrono::milliseconds(1000));
	.loc 14 893 44
	leaq	1260(%rbp), %rdx	 #, tmp319
	leaq	1248(%rbp), %rax	 #, tmp320
	movq	%rax, %rcx	 # tmp320,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_	 #
 # src\main.cpp:893: 		std::this_thread::sleep_for(std::chrono::milliseconds(1000));
	.loc 14 893 30
	leaq	1248(%rbp), %rax	 #, tmp321
	movq	%rax, %rcx	 # tmp321,
	call	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE	 #
.LBB224:
 # src\main.cpp:895: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 14 895 16 discriminator 2
	movw	$0, 1350(%rbp)	 #, i
 # src\main.cpp:895: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 14 895 3 discriminator 2
	jmp	.L401	 #
.L403:
 # src\main.cpp:897: 			if(ChunkThreads[i].joinable())
	.loc 14 897 21
	movzwl	1350(%rbp), %edx	 # i, _59
	leaq	40(%rbp), %rax	 #, tmp322
	movq	%rax, %rcx	 # tmp322,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
 # src\main.cpp:897: 			if(ChunkThreads[i].joinable())
	.loc 14 897 31
	movq	%rax, %rcx	 # _60,
	call	_ZNKSt6thread8joinableEv	 #
 # src\main.cpp:897: 			if(ChunkThreads[i].joinable())
	.loc 14 897 4
	testb	%al, %al	 # retval.96_190
	je	.L402	 #,
 # src\main.cpp:899: 				printf("Thread[%d] -> closing\n", ChunkThreads[i].get_id());
	.loc 14 899 53
	movzwl	1350(%rbp), %edx	 # i, _61
	leaq	40(%rbp), %rax	 #, tmp323
	movq	%rax, %rcx	 # tmp323,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
 # src\main.cpp:899: 				printf("Thread[%d] -> closing\n", ChunkThreads[i].get_id());
	.loc 14 899 11
	movq	%rax, %rcx	 # _62,
	call	_ZNKSt6thread6get_idEv	 #
	movq	%rax, %rdx	 # D.236072,
	leaq	.LC59(%rip), %rax	 #, tmp324
	movq	%rax, %rcx	 # tmp324,
	call	_Z6printfPKcz	 #
 # src\main.cpp:900: 				ChunkThreads[i].join();
	.loc 14 900 19
	movzwl	1350(%rbp), %edx	 # i, _63
	leaq	40(%rbp), %rax	 #, tmp325
	movq	%rax, %rcx	 # tmp325,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy	 #
 # src\main.cpp:900: 				ChunkThreads[i].join();
	.loc 14 900 25
	movq	%rax, %rcx	 # _64,
	call	_ZNSt6thread4joinEv	 #
.LEHE12:
.L402:
 # src\main.cpp:895: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 14 895 3 discriminator 2
	addw	$1, 1350(%rbp)	 #, i
.L401:
 # src\main.cpp:895: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 14 895 21 discriminator 1
	movzwl	1350(%rbp), %ebx	 # i, _65
 # src\main.cpp:895: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 14 895 57 discriminator 1
	call	_ZNSt6thread20hardware_concurrencyEv	 #
 # src\main.cpp:895: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 14 895 60 discriminator 1
	subl	$1, %eax	 #, _67
 # src\main.cpp:895: 		for(uint16_t i=0; i<=std::thread::hardware_concurrency() -1; ++i)
	.loc 14 895 22 discriminator 1
	cmpl	%ebx, %eax	 # _65, _67
	setnb	%al	 #, retval.97_177
	testb	%al, %al	 # retval.97_177
	jne	.L403	 #,
.LBE224:
 # src\main.cpp:903: 	}
	.loc 14 903 2
	leaq	-48(%rbp), %rax	 #, tmp326
	movq	%rax, %rcx	 # tmp326,
	call	_ZNSt7barrierIZ7WinMainEUlvE_ED1Ev	 #
	leaq	40(%rbp), %rax	 #, tmp327
	movq	%rax, %rcx	 # tmp327,
	call	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev	 #
.LBE211:
.LBE210:
 # src\main.cpp:910: 	delete matrix;
	.loc 14 910 9
	movq	1336(%rbp), %rbx	 # matrix, matrix.98_183
 # src\main.cpp:910: 	delete matrix;
	.loc 14 910 2
	testq	%rbx, %rbx	 # matrix.98_183
	je	.L406	 #,
	jmp	.L412	 #
.L366:
.LBB226:
 # src\main.cpp:906: 		MessageBoxW(nullptr, L"WINDOW HANDLE IS EMPTY", L"ERROR", MB_ICONERROR | MB_OK);
	.loc 14 906 14
	movl	$16, %r9d	 #,
	leaq	.LC60(%rip), %r8	 #,
	leaq	.LC61(%rip), %rax	 #, tmp328
	movq	%rax, %rdx	 # tmp328,
	movl	$0, %ecx	 #,
	movq	__imp_MessageBoxW(%rip), %rax	 #, tmp329
.LEHB13:
	call	*%rax	 # tmp329
.LVL53:
 # src\main.cpp:907: 		return msg.wParam;
	.loc 14 907 14
	movq	64(%rbp), %rax	 # msg.wParam, _68
	jmp	.L413	 #
.L412:
.LBE226:
 # src\main.cpp:910: 	delete matrix;
	.loc 14 910 9 discriminator 1
	movq	%rbx, %rcx	 # matrix.98_183,
	call	_ZN6MATRIXD1Ev	 #
	movl	$64, %edx	 #,
	movq	%rbx, %rcx	 # matrix.98_183,
	call	_ZdlPvy	 #
.L406:
 # src\main.cpp:911: 	matrix=nullptr;
	.loc 14 911 8
	movq	$0, 1336(%rbp)	 #, matrix
 # src\main.cpp:912: 	return EXIT_SUCCESS;
	.loc 14 912 9
	movl	$0, %eax	 #, _88
	jmp	.L413	 #
.L411:
.LBB227:
.LBB225:
 # src\main.cpp:903: 	}
	.loc 14 903 2
	movq	%rax, %rbx	 #, tmp333
	leaq	-48(%rbp), %rax	 #, tmp331
	movq	%rax, %rcx	 # tmp331,
	call	_ZNSt7barrierIZ7WinMainEUlvE_ED1Ev	 #
	jmp	.L409	 #
.L410:
	movq	%rax, %rbx	 #, tmp332
.L409:
	leaq	40(%rbp), %rax	 #, tmp336
	movq	%rax, %rcx	 # tmp336,
	call	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev	 #
	movq	%rbx, %rax	 # tmp332, D.237874
	movq	%rax, %rcx	 # D.237874,
	call	_Unwind_Resume	 #
.LEHE13:
.L413:
.LBE225:
.LBE227:
 # src\main.cpp:913: }
	.loc 14 913 1
	addq	$1512, %rsp	 #,
	popq	%rbx	 #
.LCFI383:
	popq	%rsi	 #
.LCFI384:
	popq	%rdi	 #
.LCFI385:
	popq	%rbp	 #
.LCFI386:
	ret	
.LFE10954:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA10954:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE10954-.LLSDACSB10954
.LLSDACSB10954:
	.uleb128 .LEHB10-.LFB10954
	.uleb128 .LEHE10-.LEHB10
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB11-.LFB10954
	.uleb128 .LEHE11-.LEHB11
	.uleb128 .L410-.LFB10954
	.uleb128 0
	.uleb128 .LEHB12-.LFB10954
	.uleb128 .LEHE12-.LEHB12
	.uleb128 .L411-.LFB10954
	.uleb128 0
	.uleb128 .LEHB13-.LFB10954
	.uleb128 .LEHE13-.LEHB13
	.uleb128 0
	.uleb128 0
.LLSDACSE10954:
	.text
	.seh_endproc
	.section	.text$_ZNSt10lock_guardISt5mutexEC1ERS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10lock_guardISt5mutexEC1ERS0_
	.def	_ZNSt10lock_guardISt5mutexEC1ERS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10lock_guardISt5mutexEC1ERS0_
_ZNSt10lock_guardISt5mutexEC1ERS0_:
.LFB11356:
	.loc 7 228 16
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI387:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI388:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __m, __m
.LBB228:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:228:       explicit lock_guard(mutex_type& __m) : _M_device(__m)
	.loc 7 228 46
	movq	16(%rbp), %rax	 # this, tmp83
	movq	24(%rbp), %rdx	 # __m, tmp84
	movq	%rdx, (%rax)	 # tmp84, this_3(D)->_M_device
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:229:       { _M_device.lock(); }
	.loc 7 229 9
	movq	16(%rbp), %rax	 # this, tmp85
	movq	(%rax), %rax	 # this_3(D)->_M_device, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:229:       { _M_device.lock(); }
	.loc 7 229 23
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5mutex4lockEv	 #
.LBE228:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:229:       { _M_device.lock(); }
	.loc 7 229 27
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI389:
	ret	
.LFE11356:
	.seh_endproc
	.section	.text$_ZNSt10lock_guardISt5mutexED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10lock_guardISt5mutexED1Ev
	.def	_ZNSt10lock_guardISt5mutexED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10lock_guardISt5mutexED1Ev
_ZNSt10lock_guardISt5mutexED1Ev:
.LFB11359:
	.loc 7 234 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI390:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI391:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB229:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:235:       { _M_device.unlock(); }
	.loc 7 235 9
	movq	16(%rbp), %rax	 # this, tmp83
	movq	(%rax), %rax	 # this_3(D)->_M_device, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:235:       { _M_device.unlock(); }
	.loc 7 235 25
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5mutex6unlockEv	 #
.LBE229:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_mutex.h:235:       { _M_device.unlock(); }
	.loc 7 235 29
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI392:
	ret	
.LFE11359:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA11359:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE11359-.LLSDACSB11359
.LLSDACSB11359:
.LLSDACSE11359:
	.section	.text$_ZNSt10lock_guardISt5mutexED1Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev
	.def	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev
_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev:
.LFB11365:
	.loc 8 378 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI393:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI394:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:382: 	}
	.loc 8 382 2
	nop	
	popq	%rbp	 #
.LCFI395:
	ret	
.LFE11365:
	.seh_endproc
	.section	.text$_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb:
.LFB11366:
	.loc 8 305 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI396:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI397:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __all, tmp89
	movl	%r8d, %edx	 # __bare, tmp91
	movb	%al, 24(%rbp)	 # tmp90, __all
	movl	%edx, %eax	 # tmp91, tmp92
	movb	%al, 32(%rbp)	 # tmp92, __bare
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:307: 	  if (_M_laundered())
	.loc 8 307 20
	movq	16(%rbp), %rax	 # this, tmp93
	movq	%rax, %rcx	 # tmp93,
	call	_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:307: 	  if (_M_laundered())
	.loc 8 307 4
	testb	%al, %al	 # retval.161_12
	je	.L418	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:309: 	      __atomic_fetch_add(_M_addr, 1, __ATOMIC_SEQ_CST);
	.loc 8 309 27
	movq	16(%rbp), %rax	 # this, tmp94
	movq	8(%rax), %rax	 # this_10(D)->_M_addr, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:309: 	      __atomic_fetch_add(_M_addr, 1, __ATOMIC_SEQ_CST);
	.loc 8 309 26
	lock addq	$1, (%rax)	 #,,* _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:310: 	      __all = true;
	.loc 8 310 14
	movb	$1, 24(%rbp)	 #, __all
.L418:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:312: 	  _M_w._M_notify(_M_addr, __all, __bare);
	.loc 8 312 4
	movq	16(%rbp), %rax	 # this, tmp95
	movq	(%rax), %rax	 # this_10(D)->_M_w, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:312: 	  _M_w._M_notify(_M_addr, __all, __bare);
	.loc 8 312 18
	movq	%rax, %r10	 # _2, _3
	movzbl	32(%rbp), %ecx	 # __bare, _4
	movzbl	24(%rbp), %edx	 # __all, _5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:312: 	  _M_w._M_notify(_M_addr, __all, __bare);
	.loc 8 312 19
	movq	16(%rbp), %rax	 # this, tmp96
	movq	8(%rax), %rax	 # this_10(D)->_M_addr, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:312: 	  _M_w._M_notify(_M_addr, __all, __bare);
	.loc 8 312 18
	movl	%ecx, %r9d	 # _4,
	movl	%edx, %r8d	 # _5,
	movq	%rax, %rdx	 # _6,
	movq	%r10, %rcx	 # _3,
	call	_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:313: 	}
	.loc 8 313 2
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI398:
	ret	
.LFE11366:
	.seh_endproc
	.section	.text$_ZNSt13__atomic_baseIbEaSEb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13__atomic_baseIbEaSEb
	.def	_ZNSt13__atomic_baseIbEaSEb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13__atomic_baseIbEaSEb
_ZNSt13__atomic_baseIbEaSEb:
.LFB11369:
	.loc 9 354 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI399:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI400:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __i, tmp93
	movb	%al, 24(%rbp)	 # tmp94, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:356: 	store(__i);
	.loc 9 356 7
	movzbl	24(%rbp), %eax	 # __i, _1
	movq	16(%rbp), %rdx	 # this, tmp95
	movq	%rdx, -8(%rbp)	 # tmp95, this
	movb	%al, -9(%rbp)	 # _1, __i
	andb	$1, -9(%rbp)	 #, __i
	movl	$5, -16(%rbp)	 #, __m
.LBB230:
.LBB231:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:459: 	  = __m & __memory_order_mask;
	.loc 9 459 10
	movl	-16(%rbp), %eax	 # __m, tmp96
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp96,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, -20(%rbp)	 # tmp97, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:460: 	__glibcxx_assert(__b != memory_order_acquire);
	.loc 9 460 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _10
	je	.L420	 #,
	cmpl	$2, -20(%rbp)	 #, __b
	jne	.L420	 #,
	movl	$1, %eax	 #, iftmp.182_11
	jmp	.L421	 #
.L420:
	movl	$0, %eax	 #, iftmp.182_11
.L421:
	testb	%al, %al	 # iftmp.182_11
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:461: 	__glibcxx_assert(__b != memory_order_acq_rel);
	.loc 9 461 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _15
	je	.L423	 #,
	cmpl	$4, -20(%rbp)	 #, __b
	jne	.L423	 #,
	movl	$1, %eax	 #, iftmp.184_16
	jmp	.L424	 #
.L423:
	movl	$0, %eax	 #, iftmp.184_16
.L424:
	testb	%al, %al	 # iftmp.184_16
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:462: 	__glibcxx_assert(__b != memory_order_consume);
	.loc 9 462 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _20
	je	.L426	 #,
	cmpl	$1, -20(%rbp)	 #, __b
	jne	.L426	 #,
	movl	$1, %eax	 #, iftmp.186_21
	jmp	.L427	 #
.L426:
	movl	$0, %eax	 #, iftmp.186_21
.L427:
	testb	%al, %al	 # iftmp.186_21
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 9 464 18
	movzbl	-9(%rbp), %edx	 # __i, _25
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 9 464 19
	movq	-8(%rbp), %rax	 # this, _26
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 9 464 18
	xchgb	(%rax), %dl	 #,* _26, tmp99
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:465:       }
	.loc 9 465 7
	nop	
.LBE231:
.LBE230:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:357: 	return __i;
	.loc 9 357 9
	movzbl	24(%rbp), %eax	 # __i, _5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:358:       }
	.loc 9 358 7
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI401:
	ret	
.LFE11369:
	.seh_endproc
	.section	.text$_ZNSt13__atomic_baseIxEC1Ex,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13__atomic_baseIxEC1Ex
	.def	_ZNSt13__atomic_baseIxEC1Ex;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13__atomic_baseIxEC1Ex
_ZNSt13__atomic_baseIxEC1Ex:
.LFB11420:
	.loc 9 345 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI402:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI403:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
.LBB232:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:345:       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
	.loc 9 345 58
	movq	16(%rbp), %rax	 # this, tmp82
	movq	24(%rbp), %rdx	 # __i, tmp83
	movq	%rdx, (%rax)	 # tmp83, this_2(D)->_M_i
.LBE232:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:345:       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
	.loc 9 345 71
	nop	
	popq	%rbp	 #
.LCFI404:
	ret	
.LFE11420:
	.seh_endproc
	.section	.text$_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_,"x"
	.linkonce discard
	.globl	_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_
	.def	_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_
_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_:
.LFB11445:
	.file 18 "C:/msys64/mingw64/include/c++/12.2.0/bits/move.h"
	.loc 18 196 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI405:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI406:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:204:       _Tp __tmp = _GLIBCXX_MOVE(__a);
	.loc 18 204 19
	movq	16(%rbp), %rax	 # __a, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:204:       _Tp __tmp = _GLIBCXX_MOVE(__a);
	.loc 18 204 11
	movq	(%rax), %rax	 # MEM[(struct id &)_1], tmp86
	movq	%rax, -8(%rbp)	 # tmp86, __tmp
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:205:       __a = _GLIBCXX_MOVE(__b);
	.loc 18 205 13
	movq	24(%rbp), %rax	 # __b, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:205:       __a = _GLIBCXX_MOVE(__b);
	.loc 18 205 7
	movq	16(%rbp), %rdx	 # __a, tmp88
	movq	(%rax), %rax	 # MEM[(struct id &)_2], tmp89
	movq	%rax, (%rdx)	 # tmp89, *__a_5(D)
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:206:       __b = _GLIBCXX_MOVE(__tmp);
	.loc 18 206 13
	leaq	-8(%rbp), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:206:       __b = _GLIBCXX_MOVE(__tmp);
	.loc 18 206 7
	movq	24(%rbp), %rdx	 # __b, tmp91
	movq	(%rax), %rax	 # MEM[(struct id &)_3], tmp92
	movq	%rax, (%rdx)	 # tmp92, *__b_8(D)
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:207:     }
	.loc 18 207 5
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI407:
	ret	
.LFE11445:
	.seh_endproc
	.section	.text$_ZNSt10_Hash_impl4hashIyEEyRKT_,"x"
	.linkonce discard
	.globl	_ZNSt10_Hash_impl4hashIyEEyRKT_
	.def	_ZNSt10_Hash_impl4hashIyEEyRKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Hash_impl4hashIyEEyRKT_
_ZNSt10_Hash_impl4hashIyEEyRKT_:
.LFB11446:
	.loc 5 210 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI408:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI409:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __val, __val
 # C:/msys64/mingw64/include/c++/12.2.0/bits/functional_hash.h:211:       { return hash(&__val, sizeof(__val)); }
	.loc 5 211 20
	movq	16(%rbp), %rax	 # __val, tmp84
	movl	$3339675911, %r8d	 #,
	movl	$8, %edx	 #,
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt10_Hash_impl4hashEPKvyy	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/functional_hash.h:211:       { return hash(&__val, sizeof(__val)); }
	.loc 5 211 45
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI410:
	ret	
.LFE11446:
	.seh_endproc
	.section	.text$_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv
	.def	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv
_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv:
.LFB11447:
	.loc 12 882 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI411:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI412:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:883: 	{ return __d; }
	.loc 12 883 11
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->__d, D.236592
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:883: 	{ return __d; }
	.loc 12 883 16
	popq	%rbp	 #
.LCFI413:
	ret	
.LFE11447:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE:
.LFB11448:
	.loc 12 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI414:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI415:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 12 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 12 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI416:
	ret	
.LFE11448:
	.seh_endproc
	.section	.text$_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv
	.def	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv
_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv:
.LFB11449:
	.loc 12 521 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI417:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI418:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 12 522 11
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->__r, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 12 522 16
	popq	%rbp	 #
.LCFI419:
	ret	
.LFE11449:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE:
.LFB11476:
	.loc 12 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI420:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI421:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 12 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 12 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI422:
	ret	
.LFE11476:
	.seh_endproc
	.section	.text$_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv
	.def	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv
_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv:
.LFB11480:
	.loc 12 521 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI423:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI424:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 12 522 11
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->__r, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:522: 	{ return __r; }
	.loc 12 522 16
	popq	%rbp	 #
.LCFI425:
	ret	
.LFE11480:
	.seh_endproc
	.section	.text$_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE
	.def	_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE
_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE:
.LFB11479:
	.loc 12 770 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI426:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI427:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI428:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI429:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 9
	movq	32(%rbp), %rax	 # __lhs, tmp86
	movq	(%rax), %rax	 # *__lhs_3(D), tmp87
	movq	%rax, -16(%rbp)	 # tmp87, D.221059
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 26
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
	movq	%rax, %rbx	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 33
	movq	40(%rbp), %rax	 # __rhs, tmp89
	movq	(%rax), %rax	 # *__rhs_7(D), tmp90
	movq	%rax, -8(%rbp)	 # tmp90, D.221060
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 50
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51
	cmpq	%rax, %rbx	 # _10, _6
	je	.L445	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 is_stmt 0 discriminator 1
	cmpq	%rax, %rbx	 # _10, _6
	jge	.L446	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 discriminator 3
	movl	$-1, %eax	 #, D.236820
	jmp	.L448	 #
.L446:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 discriminator 4
	movl	$1, %eax	 #, D.236820
	jmp	.L448	 #
.L445:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:775: 	return __ct(__lhs).count() <=> __ct(__rhs).count();
	.loc 12 775 51 discriminator 2
	movl	$0, %eax	 #, D.236820
.L448:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:776:       }
	.loc 12 776 7 is_stmt 1 discriminator 6
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI430:
	popq	%rbp	 #
.LCFI431:
	ret	
.LFE11479:
	.seh_endproc
	.section	.text$_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE
	.def	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE
_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE:
.LFB11478:
	.file 19 "C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h"
	.loc 19 68 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI432:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI433:
	subq	$96, %rsp	 #,
	.seh_stackalloc	96
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __rtime, __rtime
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 19 70 14
	leaq	-17(%rbp), %rax	 #, tmp91
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt9__cmp_cat8__unspecC1EPS0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 19 70 29
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv	 #
	movq	%rax, -16(%rbp)	 # tmp93, D.221032
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 19 70 14
	leaq	-16(%rbp), %rdx	 #, tmp94
	movq	16(%rbp), %rax	 # __rtime, tmp95
	movq	%rax, %rcx	 # tmp95,
	call	_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE	 #
	movl	%eax, %ecx	 #, D.236798
	movzbl	-17(%rbp), %eax	 # D.221074, tmp96
	movl	%eax, %edx	 # tmp96,
	call	_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 19 70 2
	testb	%al, %al	 # retval.187_20
	jne	.L455	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:72: 	auto __s = chrono::duration_cast<chrono::seconds>(__rtime);
	.loc 19 72 51
	movq	16(%rbp), %rax	 # __rtime, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -32(%rbp)	 # tmp99, __s
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:73: 	auto __ns = chrono::duration_cast<chrono::nanoseconds>(__rtime - __s);
	.loc 19 73 65
	leaq	-32(%rbp), %rdx	 #, tmp100
	movq	16(%rbp), %rax	 # __rtime, tmp101
	movq	%rax, %rcx	 # tmp101,
	call	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_	 #
	movq	%rax, -8(%rbp)	 # tmp103, D.221100
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:73: 	auto __ns = chrono::duration_cast<chrono::nanoseconds>(__rtime - __s);
	.loc 19 73 56
	leaq	-8(%rbp), %rax	 #, tmp104
	movq	%rax, %rcx	 # tmp104,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -40(%rbp)	 # tmp106, __ns
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:77: 	    static_cast<std::time_t>(__s.count()),
	.loc 19 77 40
	leaq	-32(%rbp), %rax	 #, tmp107
	movq	%rax, %rcx	 # tmp107,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:75: 	struct ::timespec __ts =
	.loc 19 75 20
	movq	%rax, -64(%rbp)	 # _1, __ts.tv_sec
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:78: 	    static_cast<long>(__ns.count())
	.loc 19 78 34
	leaq	-40(%rbp), %rax	 #, tmp108
	movq	%rax, %rcx	 # tmp108,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:75: 	struct ::timespec __ts =
	.loc 19 75 20
	movl	%eax, -56(%rbp)	 # _3, __ts.tv_nsec
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 2
	nop	
.L454:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 20 discriminator 9
	leaq	-64(%rbp), %rdx	 #, tmp109
	leaq	-64(%rbp), %rax	 #, tmp110
	movq	%rax, %rcx	 # tmp110,
	call	nanosleep	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 41 discriminator 9
	cmpl	$-1, %eax	 #, _4
	jne	.L452	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 44 discriminator 2
	movq	__imp__errno(%rip), %rax	 #, tmp111
	call	*%rax	 # tmp111
.LVL54:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 50 discriminator 2
	movl	(%rax), %eax	 # *_5, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 41 discriminator 2
	cmpl	$4, %eax	 #, _6
	jne	.L452	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 41 is_stmt 0 discriminator 5
	movl	$1, %eax	 #, iftmp.189_7
	jmp	.L453	 #
.L452:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 41 discriminator 6
	movl	$0, %eax	 #, iftmp.189_7
.L453:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 41 discriminator 8
	testb	%al, %al	 # iftmp.189_7
	jne	.L454	 #,
	jmp	.L449	 #
.L455:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:71: 	  return;
	.loc 19 71 4 is_stmt 1
	nop	
.L449:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:85:       }
	.loc 19 85 7
	addq	$96, %rsp	 #,
	popq	%rbp	 #
.LCFI434:
	ret	
.LFE11478:
	.seh_endproc
	.section	.text$_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE
	.def	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE
_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE:
.LFB11484:
	.loc 19 68 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI435:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI436:
	subq	$96, %rsp	 #,
	.seh_stackalloc	96
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __rtime, __rtime
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 19 70 14
	leaq	-17(%rbp), %rax	 #, tmp91
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt9__cmp_cat8__unspecC1EPS0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 19 70 29
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv	 #
	movq	%rax, -16(%rbp)	 # tmp93, D.221179
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 19 70 14
	leaq	-16(%rbp), %rdx	 #, tmp94
	movq	16(%rbp), %rax	 # __rtime, tmp95
	movq	%rax, %rcx	 # tmp95,
	call	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE	 #
	movl	%eax, %ecx	 #, D.236637
	movzbl	-17(%rbp), %eax	 # D.221181, tmp96
	movl	%eax, %edx	 # tmp96,
	call	_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:70: 	if (__rtime <= __rtime.zero())
	.loc 19 70 2
	testb	%al, %al	 # retval.170_20
	jne	.L462	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:72: 	auto __s = chrono::duration_cast<chrono::seconds>(__rtime);
	.loc 19 72 51
	movq	16(%rbp), %rax	 # __rtime, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -32(%rbp)	 # tmp99, __s
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:73: 	auto __ns = chrono::duration_cast<chrono::nanoseconds>(__rtime - __s);
	.loc 19 73 65
	leaq	-32(%rbp), %rdx	 #, tmp100
	movq	16(%rbp), %rax	 # __rtime, tmp101
	movq	%rax, %rcx	 # tmp101,
	call	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_	 #
	movq	%rax, -8(%rbp)	 # tmp103, D.221189
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:73: 	auto __ns = chrono::duration_cast<chrono::nanoseconds>(__rtime - __s);
	.loc 19 73 56
	leaq	-8(%rbp), %rax	 #, tmp104
	movq	%rax, %rcx	 # tmp104,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -40(%rbp)	 # tmp106, __ns
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:77: 	    static_cast<std::time_t>(__s.count()),
	.loc 19 77 40
	leaq	-32(%rbp), %rax	 #, tmp107
	movq	%rax, %rcx	 # tmp107,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:75: 	struct ::timespec __ts =
	.loc 19 75 20
	movq	%rax, -64(%rbp)	 # _1, __ts.tv_sec
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:78: 	    static_cast<long>(__ns.count())
	.loc 19 78 34
	leaq	-40(%rbp), %rax	 #, tmp108
	movq	%rax, %rcx	 # tmp108,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:75: 	struct ::timespec __ts =
	.loc 19 75 20
	movl	%eax, -56(%rbp)	 # _3, __ts.tv_nsec
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 2
	nop	
.L461:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 20 discriminator 9
	leaq	-64(%rbp), %rdx	 #, tmp109
	leaq	-64(%rbp), %rax	 #, tmp110
	movq	%rax, %rcx	 # tmp110,
	call	nanosleep	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 41 discriminator 9
	cmpl	$-1, %eax	 #, _4
	jne	.L459	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 44 discriminator 2
	movq	__imp__errno(%rip), %rax	 #, tmp111
	call	*%rax	 # tmp111
.LVL55:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 50 discriminator 2
	movl	(%rax), %eax	 # *_5, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 41 discriminator 2
	cmpl	$4, %eax	 #, _6
	jne	.L459	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 41 is_stmt 0 discriminator 5
	movl	$1, %eax	 #, iftmp.172_7
	jmp	.L460	 #
.L459:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 41 discriminator 6
	movl	$0, %eax	 #, iftmp.172_7
.L460:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:80: 	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
	.loc 19 80 41 discriminator 8
	testb	%al, %al	 # iftmp.172_7
	jne	.L461	 #,
	jmp	.L456	 #
.L462:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:71: 	  return;
	.loc 19 71 4 is_stmt 1
	nop	
.L456:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/this_thread_sleep.h:85:       }
	.loc 19 85 7
	addq	$96, %rsp	 #,
	popq	%rbp	 #
.LCFI437:
	ret	
.LFE11484:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE:
.LFB11488:
	.loc 12 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI438:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI439:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 12 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 12 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI440:
	ret	
.LFE11488:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_
	.def	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_
_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_:
.LFB11553:
	.loc 15 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI441:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI442:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.207784, D.207784
.LBB233:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 15 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.207784, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_	 #
.LBE233:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI443:
	ret	
.LFE11553:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_
	.def	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_
_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_:
.LFB11555:
	.loc 15 598 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI444:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI445:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
.LBB234:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:599: 	: _M_t(__p)
	.loc 15 599 4
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __p, tmp83
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_	 #
.LBE234:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:600:         { }
	.loc 15 600 11
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI446:
	ret	
.LFE11555:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev
	.def	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev
_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev:
.LFB11558:
	.loc 15 665 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI447:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI448:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB235:
.LBB236:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:667: 	auto& __ptr = _M_t._M_ptr();
	.loc 15 667 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
	movq	%rax, -8(%rbp)	 # tmp86, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 15 668 12
	movq	-8(%rbp), %rax	 # __ptr, tmp87
	movq	(%rax), %rax	 # *__ptr_9, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 15 668 2
	testq	%rax, %rax	 # _2
	je	.L468	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 15 669 15
	movq	16(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv	 #
	movq	%rax, %rcx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 15 669 17
	movq	-8(%rbp), %rax	 # __ptr, tmp89
	movq	(%rax), %rax	 # *__ptr_9, _4
	movq	%rax, %rdx	 # _4,
	call	_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_	 #
.L468:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:670: 	__ptr = pointer();
	.loc 15 670 8
	movq	-8(%rbp), %rax	 # __ptr, tmp90
	movq	$0, (%rax)	 #, *__ptr_9
.LBE236:
.LBE235:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:671:       }
	.loc 15 671 7
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI449:
	ret	
.LFE11558:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_:
.LFB11559:
	.loc 15 181 24
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI450:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI451:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __u, __u
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:183: 	reset(__u.release());
	.loc 15 183 7
	movq	24(%rbp), %rax	 # __u, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv	 #
	movq	%rax, %rdx	 #, _1
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 15 184 49
	movq	24(%rbp), %rax	 # __u, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 15 184 34
	movq	%rax, %rcx	 # _2,
	call	_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 15 184 12
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:185: 	return *this;
	.loc 15 185 10
	movq	16(%rbp), %rax	 # this, _11
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:186:       }
	.loc 15 186 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI452:
	ret	
.LFE11559:
	.seh_endproc
	.section	.text$_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy
	.def	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy
_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy:
.LFB11560:
	.loc 15 717 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI453:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI454:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _1
	je	.L472	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 is_stmt 0 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv	 #
	testq	%rax, %rax	 # _2
	jne	.L472	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 discriminator 3
	movl	$1, %eax	 #, iftmp.76_5
	jmp	.L473	 #
.L472:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 discriminator 4
	movl	$0, %eax	 #, iftmp.76_5
.L473:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 discriminator 6
	testb	%al, %al	 # iftmp.76_5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 15 720 12 is_stmt 1 discriminator 6
	movq	16(%rbp), %rax	 # this, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv	 #
	movq	%rax, %rcx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 15 720 14 discriminator 6
	movq	24(%rbp), %rdx	 # __i, tmp91
	movq	%rdx, %rax	 # tmp91, tmp92
	salq	$2, %rax	 #, tmp92
	addq	%rdx, %rax	 # tmp91, tmp92
	salq	$3, %rax	 #, tmp93
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 15 720 18 discriminator 6
	addq	%rcx, %rax	 # _3, _17
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:721:       }
	.loc 15 721 7 discriminator 6
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI455:
	ret	
.LFE11560:
	.seh_endproc
	.section	.text$_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_,"x"
	.linkonce discard
	.globl	_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_
	.def	_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_
_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_:
.LFB11561:
	.loc 18 196 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI456:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI457:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:204:       _Tp __tmp = _GLIBCXX_MOVE(__a);
	.loc 18 204 19
	movq	16(%rbp), %rax	 # __a, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:204:       _Tp __tmp = _GLIBCXX_MOVE(__a);
	.loc 18 204 11
	movq	(%rax), %rax	 # *_1, _2
	movq	%rax, -8(%rbp)	 # _2, __tmp
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:205:       __a = _GLIBCXX_MOVE(__b);
	.loc 18 205 13
	movq	24(%rbp), %rax	 # __b, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:205:       __a = _GLIBCXX_MOVE(__b);
	.loc 18 205 11
	movq	(%rax), %rdx	 # *_3, _4
	movq	16(%rbp), %rax	 # __a, tmp90
	movq	%rdx, (%rax)	 # _4, *__a_8(D)
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:206:       __b = _GLIBCXX_MOVE(__tmp);
	.loc 18 206 13
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:206:       __b = _GLIBCXX_MOVE(__tmp);
	.loc 18 206 11
	movq	(%rax), %rdx	 # *_5, _6
	movq	24(%rbp), %rax	 # __b, tmp92
	movq	%rdx, (%rax)	 # _6, *__b_11(D)
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:207:     }
	.loc 18 207 5
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI458:
	ret	
.LFE11561:
	.seh_endproc
	.section	.text$_Z10swprintf_sILy512EEiRAT__wPKwz,"x"
	.linkonce discard
	.globl	_Z10swprintf_sILy512EEiRAT__wPKwz
	.def	_Z10swprintf_sILy512EEiRAT__wPKwz;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z10swprintf_sILy512EEiRAT__wPKwz
_Z10swprintf_sILy512EEiRAT__wPKwz:
.LFB11562:
	.file 20 "C:/msys64/mingw64/include/sec_api/stdio_s.h"
	.loc 20 821 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI459:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI460:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # _Dst, _Dst
	movq	%rdx, 24(%rbp)	 # _Format, _Format
	movq	%r8, 32(%rbp)	 #,
	movq	%r9, 40(%rbp)	 #,
 # C:/msys64/mingw64/include/sec_api/stdio_s.h:821:   __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(int,swprintf_s,vswprintf_s,wchar_t,_Dst,const wchar_t*,_Format)
	.loc 20 821 3
	leaq	32(%rbp), %rax	 #, tmp86
	movq	%rax, -16(%rbp)	 # tmp86, MEM[(char * *)&__vaargs]
	movq	-16(%rbp), %rcx	 # __vaargs, __vaargs.28_1
	movq	24(%rbp), %rdx	 # _Format, tmp87
	movq	16(%rbp), %rax	 # _Dst, tmp88
	movq	%rcx, %r9	 # __vaargs.28_1,
	movq	%rdx, %r8	 # tmp87,
	movl	$512, %edx	 #,
	movq	%rax, %rcx	 # tmp88,
	call	vswprintf_s	 #
	movl	%eax, -4(%rbp)	 # _7, __retval
	movl	-4(%rbp), %eax	 # __retval, _10
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI461:
	ret	
.LFE11562:
	.seh_endproc
	.section	.text$_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_,"x"
	.linkonce discard
	.globl	_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_
	.def	_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_
_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_:
.LFB11563:
	.loc 13 2520 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI462:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI463:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # factoryType, factoryType
	movq	%rdx, 24(%rbp)	 # factory, factory
 # C:/msys64/mingw64/include/d2d1.h:2521:     return D2D1CreateFactory(factoryType, __uuidof(Factory), reinterpret_cast<void**>(factory));
	.loc 13 2521 43
	call	_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv	 #
	movq	%rax, %rdx	 #, _1
 # C:/msys64/mingw64/include/d2d1.h:2521:     return D2D1CreateFactory(factoryType, __uuidof(Factory), reinterpret_cast<void**>(factory));
	.loc 13 2521 29
	movq	24(%rbp), %rcx	 # factory, tmp85
	movl	16(%rbp), %eax	 # factoryType, tmp86
	movq	%rcx, %r8	 # tmp85,
	movl	%eax, %ecx	 # tmp86,
	call	_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv	 #
 # C:/msys64/mingw64/include/d2d1.h:2522: }
	.loc 13 2522 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI464:
	ret	
.LFE11563:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev:
.LFB11568:
	.loc 15 166 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI465:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI466:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB237:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:166:       __uniq_ptr_impl() = default;
	.loc 15 166 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv	 #
.LBE237:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI467:
	ret	
.LFE11568:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv
	.def	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv
_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv:
.LFB11571:
	.loc 15 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI468:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI469:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB238:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 15 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev	 #
.LBE238:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI470:
	ret	
.LFE11571:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv
	.def	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv
_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv:
.LFB11573:
	.loc 15 580 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI471:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI472:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB239:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:581: 	: _M_t()
	.loc 15 581 4
	movq	16(%rbp), %rax	 # this, tmp83
	movq	$0, (%rax)	 #, this_3(D)->_M_t
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv	 #
.LBE239:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:582: 	{ }
	.loc 15 582 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI473:
	ret	
.LFE11573:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_
	.def	_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_
_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_:
.LFB11577:
	.loc 15 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI474:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI475:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.212124, D.212124
.LBB240:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 15 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.212124, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_	 #
.LBE240:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI476:
	ret	
.LFE11577:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_
	.def	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_
_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_:
.LFB11579:
	.loc 15 598 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI477:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI478:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
.LBB241:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:599: 	: _M_t(__p)
	.loc 15 599 4
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __p, tmp83
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_	 #
.LBE241:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:600:         { }
	.loc 15 600 11
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI479:
	ret	
.LFE11579:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev
	.def	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev
_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev:
.LFB11582:
	.loc 15 665 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI480:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI481:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB242:
.LBB243:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:667: 	auto& __ptr = _M_t._M_ptr();
	.loc 15 667 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv	 #
	movq	%rax, -8(%rbp)	 # tmp86, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 15 668 12
	movq	-8(%rbp), %rax	 # __ptr, tmp87
	movq	(%rax), %rax	 # *__ptr_9, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 15 668 2
	testq	%rax, %rax	 # _2
	je	.L487	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 15 669 15
	movq	16(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv	 #
	movq	%rax, %rcx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 15 669 17
	movq	-8(%rbp), %rax	 # __ptr, tmp89
	movq	(%rax), %rax	 # *__ptr_9, _4
	movq	%rax, %rdx	 # _4,
	call	_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_	 #
.L487:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:670: 	__ptr = pointer();
	.loc 15 670 8
	movq	-8(%rbp), %rax	 # __ptr, tmp90
	movq	$0, (%rax)	 #, *__ptr_9
.LBE243:
.LBE242:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:671:       }
	.loc 15 671 7
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI482:
	ret	
.LFE11582:
	.seh_endproc
	.section	.text$_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_,"x"
	.linkonce discard
	.globl	_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
	.def	_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_:
.LFB11583:
	.file 21 "C:/msys64/mingw64/include/c++/12.2.0/cmath"
	.loc 21 1280 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI483:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI484:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # __x, __x
 # C:/msys64/mingw64/include/c++/12.2.0/cmath:1281:     { return __builtin_cbrt(__x); }
	.loc 21 1281 28
	movl	16(%rbp), %eax	 # __x, tmp85
	testq	%rax, %rax	 # tmp85
	js	.L489	 #,
	pxor	%xmm1, %xmm1	 # _1
	cvtsi2sdq	%rax, %xmm1	 # tmp85, _1
	movq	%xmm1, %rax	 # _1, _1
	jmp	.L490	 #
.L489:
	movq	%rax, %rdx	 # tmp85, tmp87
	shrq	%rdx	 # tmp87
	andl	$1, %eax	 #, tmp88
	orq	%rax, %rdx	 # tmp88, tmp87
	pxor	%xmm0, %xmm0	 # tmp86
	cvtsi2sdq	%rdx, %xmm0	 # tmp87, tmp86
	addsd	%xmm0, %xmm0	 # tmp86, tmp86
	movq	%xmm0, %rax	 # tmp86, _1
.L490:
	movq	%rax, %xmm0	 # _1,
	call	cbrt	 #
	movq	%xmm0, %rax	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/cmath:1281:     { return __builtin_cbrt(__x); }
	.loc 21 1281 35
	movq	%rax, %xmm0	 # <retval>,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI485:
	ret	
.LFE11583:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt7barrierIZ7WinMainEUlvE_EC2ExS0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt7barrierIZ7WinMainEUlvE_EC2ExS0_
_ZNSt7barrierIZ7WinMainEUlvE_EC2ExS0_:
.LFB11585:
	.loc 17 231 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI486:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI487:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI488:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
.LCFI489:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI490:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __count, __count
	movq	%r8, %rsi	 #, tmp85
.LBB244:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:232:       : _M_b(__count, std::move(__completion))
	.loc 17 232 9
	movq	32(%rbp), %rbx	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:232:       : _M_b(__count, std::move(__completion))
	.loc 17 232 32
	movq	%rsi, %rcx	 # tmp85,
	call	_ZSt4moveIRZ7WinMainEUlvE_EONSt16remove_referenceIT_E4typeEOS3_	 #
	movq	%rax, %rcx	 #, _2
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:232:       : _M_b(__count, std::move(__completion))
	.loc 17 232 9
	movq	(%rcx), %rax	 # MEM[(struct ._anon_609 &)_2], tmp86
	movq	8(%rcx), %rdx	 # MEM[(struct ._anon_609 &)_2],
	movq	%rax, -32(%rbp)	 # tmp86,
	movq	%rdx, -24(%rbp)	 #,
	movq	16(%rcx), %rax	 # MEM[(struct ._anon_609 &)_2], tmp87
	movq	%rax, -16(%rbp)	 # tmp87,
	leaq	-32(%rbp), %rdx	 #, tmp88
	movq	40(%rbp), %rax	 # __count, tmp89
	movq	%rdx, %r8	 # tmp88,
	movq	%rax, %rdx	 # tmp89,
	movq	%rbx, %rcx	 # _1,
	call	_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC1ExS0_	 #
.LBE244:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:233:       { }
	.loc 17 233 9
	nop	
	addq	$64, %rsp	 #,
	popq	%rbx	 #
.LCFI491:
	popq	%rsi	 #
.LCFI492:
	popq	%rbp	 #
.LCFI493:
	ret	
.LFE11585:
	.seh_endproc
	.def	_ZNSt7barrierIZ7WinMainEUlvE_EC1ExS0_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt7barrierIZ7WinMainEUlvE_EC1ExS0_,_ZNSt7barrierIZ7WinMainEUlvE_EC2ExS0_
	.align 2
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED2Ev
_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED2Ev:
.LFB11588:
	.loc 15 665 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI494:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI495:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB245:
.LBB246:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:667: 	auto& __ptr = _M_t._M_ptr();
	.loc 15 667 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
	movq	%rax, -8(%rbp)	 # tmp86, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 15 668 12
	movq	-8(%rbp), %rax	 # __ptr, tmp87
	movq	(%rax), %rax	 # *__ptr_9, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:668: 	if (__ptr != nullptr)
	.loc 15 668 2
	testq	%rax, %rax	 # _2
	je	.L494	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 15 669 15
	movq	16(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE11get_deleterEv	 #
	movq	%rax, %rcx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:669: 	  get_deleter()(__ptr);
	.loc 15 669 17
	movq	-8(%rbp), %rax	 # __ptr, tmp89
	movq	(%rax), %rax	 # *__ptr_9, _4
	movq	%rax, %rdx	 # _4,
	call	_ZNKSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEclIS3_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS4_E5valueEvE4typeEPS9_	 #
.L494:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:670: 	__ptr = pointer();
	.loc 15 670 8
	movq	-8(%rbp), %rax	 # __ptr, tmp90
	movq	$0, (%rax)	 #, *__ptr_9
.LBE246:
.LBE245:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:671:       }
	.loc 15 671 7
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI496:
	ret	
.LFE11588:
	.seh_endproc
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED1Ev;	.scl	3;	.type	32;	.endef
	.set	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED1Ev,_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED2Ev
	.section	.text$_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy
	.def	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy
_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy:
.LFB11590:
	.loc 15 717 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI497:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI498:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _1
	je	.L496	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 is_stmt 0 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv	 #
	testq	%rax, %rax	 # _2
	jne	.L496	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 discriminator 3
	movl	$1, %eax	 #, iftmp.191_5
	jmp	.L497	 #
.L496:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 discriminator 4
	movl	$0, %eax	 #, iftmp.191_5
.L497:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 discriminator 6
	testb	%al, %al	 # iftmp.191_5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 15 720 12 is_stmt 1 discriminator 6
	movq	16(%rbp), %rax	 # this, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 15 720 14 discriminator 6
	movq	24(%rbp), %rdx	 # __i, tmp91
	salq	$3, %rdx	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 15 720 18 discriminator 6
	addq	%rdx, %rax	 # _4, _17
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:721:       }
	.loc 15 721 7 discriminator 6
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI499:
	ret	
.LFE11590:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_:
.LFB11594:
	.loc 12 505 23
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI500:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI501:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __rep, __rep
.LBB247:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 10
	movq	24(%rbp), %rax	 # __rep, tmp84
	movl	(%rax), %eax	 # *__rep_6(D), _1
	movslq	%eax, %rdx	 # _1, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 6
	movq	16(%rbp), %rax	 # this, tmp85
	movq	%rdx, (%rax)	 # _2, this_4(D)->__r
.LBE247:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 37
	nop	
	popq	%rbp	 #
.LCFI502:
	ret	
.LFE11594:
	.seh_endproc
	.section	.text$_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE
	.def	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE
_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE:
.LFB11595:
	.loc 12 1026 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI503:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI504:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __lhs, __lhs
	movq	%rdx, 24(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:1028:       { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
	.loc 12 1028 65
	movq	24(%rbp), %rax	 # __rhs, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv	 #
	movq	%rax, -16(%rbp)	 # tmp86, D.222198
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:1028:       { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
	.loc 12 1028 38
	movq	16(%rbp), %rax	 # __lhs, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv	 #
	movq	%rax, -8(%rbp)	 # tmp89, D.222197
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:1028:       { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
	.loc 12 1028 41
	leaq	-16(%rbp), %rdx	 #, tmp90
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:1028:       { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
	.loc 12 1028 69
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI505:
	ret	
.LFE11595:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC62:
	.ascii "Thread[%d] - Updated [(%d, %d, %d),(%d, %d, %d)]\12\0"
	.text
	.align 2
	.def	_ZN6MATRIX21UpdateSimulationStateIZ7WinMainEUlvE_EEvP6HWND__RSt7barrierIT_EPSt6atomicIbESA_SA_RS9_jjjjjj;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZN6MATRIX21UpdateSimulationStateIZ7WinMainEUlvE_EEvP6HWND__RSt7barrierIT_EPSt6atomicIbESA_SA_RS9_jjjjjj
_ZN6MATRIX21UpdateSimulationStateIZ7WinMainEUlvE_EEvP6HWND__RSt7barrierIT_EPSt6atomicIbESA_SA_RS9_jjjjjj:
.LFB11591:
	.loc 14 279 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI506:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI507:
	addq	$-128, %rsp	 #,
	.seh_stackalloc	128
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # hwnd, hwnd
	movq	%r8, 32(%rbp)	 # SyncPoint, SyncPoint
	movq	%r9, 40(%rbp)	 # pressed, pressed
 # src\main.cpp:281: 		const auto FrameDuration = std::chrono::milliseconds(1000 / TARGET_FPS);
	.loc 14 281 14
	movq	$16, -40(%rbp)	 #, FrameDuration.__r
 # src\main.cpp:283: 		while(running)
	.loc 14 283 3
	jmp	.L504	 #
.L515:
.LBB248:
 # src\main.cpp:286: 			auto frameStart = std::chrono::high_resolution_clock::now();
	.loc 14 286 61
	call	_ZNSt6chrono3_V212system_clock3nowEv	 #
	movq	%rax, -48(%rbp)	 # tmp92, frameStart
 # src\main.cpp:288: 			FlushMatrix(running, x1, x2, y1, y2, z1, z2);
	.loc 14 288 15
	movl	80(%rbp), %r9d	 # x2, tmp93
	movl	72(%rbp), %r8d	 # x1, tmp94
	movq	64(%rbp), %rdx	 # running, tmp95
	movq	16(%rbp), %rax	 # this, tmp96
	movl	112(%rbp), %ecx	 # z2, tmp97
	movl	%ecx, 56(%rsp)	 # tmp97,
	movl	104(%rbp), %ecx	 # z1, tmp98
	movl	%ecx, 48(%rsp)	 # tmp98,
	movl	96(%rbp), %ecx	 # y2, tmp99
	movl	%ecx, 40(%rsp)	 # tmp99,
	movl	88(%rbp), %ecx	 # y1, tmp100
	movl	%ecx, 32(%rsp)	 # tmp100,
	movq	%rax, %rcx	 # tmp96,
	call	_ZN6MATRIX11FlushMatrixERSt6atomicIbEjjjjjj	 #
.LBB249:
 # src\main.cpp:293: 			for(uint32_t z=z1; z<=z2; ++z)
	.loc 14 293 17
	movl	104(%rbp), %eax	 # z1, tmp101
	movl	%eax, -4(%rbp)	 # tmp101, z
 # src\main.cpp:293: 			for(uint32_t z=z1; z<=z2; ++z)
	.loc 14 293 4
	jmp	.L505	 #
.L512:
.LBB250:
 # src\main.cpp:295: 				if(!running) break;
	.loc 14 295 8
	movq	64(%rbp), %rax	 # running, tmp102
	movq	%rax, %rcx	 # tmp102,
	call	_ZNKSt6atomicIbEcvbEv	 #
	xorl	$1, %eax	 #, retval.115_31
 # src\main.cpp:295: 				if(!running) break;
	.loc 14 295 5
	testb	%al, %al	 # retval.115_31
	jne	.L516	 #,
.LBB251:
 # src\main.cpp:297: 				for(uint32_t y=y1; y<=y2; ++y)
	.loc 14 297 18
	movl	88(%rbp), %eax	 # y1, tmp103
	movl	%eax, -8(%rbp)	 # tmp103, y
 # src\main.cpp:297: 				for(uint32_t y=y1; y<=y2; ++y)
	.loc 14 297 5
	jmp	.L508	 #
.L511:
.LBB252:
.LBB253:
 # src\main.cpp:299: 					for(uint32_t x=x1; x<=x2; ++x)
	.loc 14 299 19
	movl	72(%rbp), %eax	 # x1, tmp104
	movl	%eax, -12(%rbp)	 # tmp104, x
 # src\main.cpp:299: 					for(uint32_t x=x1; x<=x2; ++x)
	.loc 14 299 6
	jmp	.L509	 #
.L510:
 # src\main.cpp:299: 					for(uint32_t x=x1; x<=x2; ++x)
	.loc 14 299 6 is_stmt 0 discriminator 3
	addl	$1, -12(%rbp)	 #, x
.L509:
 # src\main.cpp:299: 					for(uint32_t x=x1; x<=x2; ++x)
	.loc 14 299 26 is_stmt 1 discriminator 1
	movl	-12(%rbp), %eax	 # x, tmp105
	cmpl	%eax, 80(%rbp)	 # tmp105, x2
	jnb	.L510	 #,
.LBE253:
.LBE252:
 # src\main.cpp:297: 				for(uint32_t y=y1; y<=y2; ++y)
	.loc 14 297 5 discriminator 2
	addl	$1, -8(%rbp)	 #, y
.L508:
 # src\main.cpp:297: 				for(uint32_t y=y1; y<=y2; ++y)
	.loc 14 297 25 discriminator 1
	movl	-8(%rbp), %eax	 # y, tmp106
	cmpl	%eax, 96(%rbp)	 # tmp106, y2
	jnb	.L511	 #,
.LBE251:
.LBE250:
 # src\main.cpp:293: 			for(uint32_t z=z1; z<=z2; ++z)
	.loc 14 293 4 discriminator 2
	addl	$1, -4(%rbp)	 #, z
.L505:
 # src\main.cpp:293: 			for(uint32_t z=z1; z<=z2; ++z)
	.loc 14 293 24 discriminator 1
	movl	-4(%rbp), %eax	 # z, tmp107
	cmpl	%eax, 112(%rbp)	 # tmp107, z2
	jnb	.L512	 #,
	jmp	.L507	 #
.L516:
.LBB254:
 # src\main.cpp:295: 				if(!running) break;
	.loc 14 295 18
	nop	
.L507:
.LBE254:
.LBE249:
 # src\main.cpp:306: 			if(held[VK_SPACE])
	.loc 14 306 20
	movq	48(%rbp), %rax	 # held, held.117_2
	addq	$32, %rax	 #, _3
	movq	%rax, %rcx	 # _3,
	call	_ZNKSt6atomicIbEcvbEv	 #
 # src\main.cpp:306: 			if(held[VK_SPACE])
	.loc 14 306 4
	testb	%al, %al	 # retval.116_38
	je	.L513	 #,
 # src\main.cpp:308: 				printf("Thread[%d] - Updated [(%d, %d, %d),(%d, %d, %d)]\n", std::this_thread::get_id(), x1, y1, z1, x2, y2, z2);
	.loc 14 308 11
	call	_ZNSt11this_thread6get_idEv	 #
	movq	%rax, %rdx	 #, D.236272
	movl	88(%rbp), %r8d	 # y1, tmp108
	movl	72(%rbp), %ecx	 # x1, tmp109
	movl	112(%rbp), %eax	 # z2, tmp110
	movl	%eax, 56(%rsp)	 # tmp110,
	movl	96(%rbp), %eax	 # y2, tmp111
	movl	%eax, 48(%rsp)	 # tmp111,
	movl	80(%rbp), %eax	 # x2, tmp112
	movl	%eax, 40(%rsp)	 # tmp112,
	movl	104(%rbp), %eax	 # z1, tmp113
	movl	%eax, 32(%rsp)	 # tmp113,
	movl	%r8d, %r9d	 # tmp108,
	movl	%ecx, %r8d	 # tmp109,
	leaq	.LC62(%rip), %rax	 #, tmp114
	movq	%rax, %rcx	 # tmp114,
	call	_Z6printfPKcz	 #
.L513:
 # src\main.cpp:311: 			SyncPoint.arrive_and_wait();
	.loc 14 311 29
	movq	32(%rbp), %rax	 # SyncPoint, tmp115
	movq	%rax, %rcx	 # tmp115,
	call	_ZNSt7barrierIZ7WinMainEUlvE_E15arrive_and_waitEv	 #
 # src\main.cpp:313: 			auto frameEnd = std::chrono::high_resolution_clock::now();
	.loc 14 313 59
	call	_ZNSt6chrono3_V212system_clock3nowEv	 #
	movq	%rax, -56(%rbp)	 # tmp117, frameEnd
 # src\main.cpp:314:     		auto elapsed = frameEnd - frameStart;
	.loc 14 314 31
	leaq	-48(%rbp), %rdx	 #, tmp118
	leaq	-56(%rbp), %rax	 #, tmp119
	movq	%rax, %rcx	 # tmp119,
	call	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE	 #
	movq	%rax, -64(%rbp)	 # tmp121, elapsed
 # src\main.cpp:318: 			if (elapsed < FrameDuration)
	.loc 14 318 16
	leaq	-25(%rbp), %rax	 #, tmp122
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp122,
	call	_ZNSt9__cmp_cat8__unspecC1EPS0_	 #
	leaq	-40(%rbp), %rdx	 #, tmp123
	leaq	-64(%rbp), %rax	 #, tmp124
	movq	%rax, %rcx	 # tmp124,
	call	_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE	 #
	movl	%eax, %ecx	 #, D.236275
	movzbl	-25(%rbp), %eax	 # D.222207, tmp125
	movl	%eax, %edx	 # tmp125,
	call	_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE	 #
 # src\main.cpp:318: 			if (elapsed < FrameDuration)
	.loc 14 318 4
	testb	%al, %al	 # retval.118_48
	je	.L504	 #,
 # src\main.cpp:320:         		std::this_thread::sleep_for(FrameDuration - elapsed);
	.loc 14 320 53
	leaq	-64(%rbp), %rdx	 #, tmp126
	leaq	-40(%rbp), %rax	 #, tmp127
	movq	%rax, %rcx	 # tmp127,
	call	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_	 #
	movq	%rax, -24(%rbp)	 # tmp129, D.222209
 # src\main.cpp:320:         		std::this_thread::sleep_for(FrameDuration - elapsed);
	.loc 14 320 38
	leaq	-24(%rbp), %rax	 #, tmp130
	movq	%rax, %rcx	 # tmp130,
	call	_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE	 #
.L504:
.LBE248:
 # src\main.cpp:283: 		while(running)
	.loc 14 283 3
	movq	64(%rbp), %rax	 # running, tmp131
	movq	%rax, %rcx	 # tmp131,
	call	_ZNKSt6atomicIbEcvbEv	 #
	testb	%al, %al	 # retval.119_18
	jne	.L515	 #,
 # src\main.cpp:324: 	}
	.loc 14 324 2
	nop	
	nop	
	subq	$-128, %rsp	 #,
	popq	%rbp	 #
.LCFI508:
	ret	
.LFE11591:
	.seh_endproc
	.align 2
	.def	_ZNSt6threadC2IZ7WinMainEUlvE0_JEvEEOT_DpOT0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6threadC2IZ7WinMainEUlvE0_JEvEEOT_DpOT0_
_ZNSt6threadC2IZ7WinMainEUlvE0_JEvEEOT_DpOT0_:
.LFB11611:
	.loc 11 126 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI509:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI510:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI511:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI512:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI513:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI514:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # this, this
	movq	%rdx, 56(%rbp)	 # __f, __f
.LBB255:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:127:       {
	.loc 11 127 7
	movq	48(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6thread2idC1Ev	 #
.LBB256:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:137: 	auto __depend = nullptr;
	.loc 11 137 7
	movq	$0, -8(%rbp)	 #, __depend
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 11 142 29
	movl	$88, %ecx	 #,
.LEHB14:
	call	_Znwy	 #
.LEHE14:
	movq	%rax, %rbx	 # tmp87, _14
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 11 142 18
	movl	$1, %edi	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 11 142 29
	movq	56(%rbp), %rax	 # __f, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _3,
	movq	%rbx, %rcx	 # _14,
.LEHB15:
	call	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC1IJS3_EEEDpOT_	 #
.LEHE15:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 11 142 18 discriminator 4
	movl	$0, %edi	 #, _4
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rbx, %rdx	 # _14,
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 11 142 17 discriminator 4
	leaq	-16(%rbp), %rdx	 #, tmp90
	movq	48(%rbp), %rax	 # this, tmp91
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp91,
.LEHB16:
	call	_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE	 #
.LEHE16:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 11 142 18 discriminator 6
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev	 #
.LBE256:
.LBE255:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:145:       }
	.loc 11 145 7 discriminator 6
	jmp	.L523	 #
.L522:
.LBB258:
.LBB257:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 11 142 18
	movq	%rax, %rsi	 #, tmp95
	leaq	-16(%rbp), %rax	 #, tmp93
	movq	%rax, %rcx	 # tmp93,
	call	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev	 #
	jmp	.L519	 #
.L521:
	movq	%rax, %rsi	 #, tmp94
.L519:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 11 142 18 is_stmt 0 discriminator 3
	testb	%dil, %dil	 # _4
	je	.L520	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:142: 	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
	.loc 11 142 29 is_stmt 1 discriminator 7
	movl	$88, %edx	 #,
	movq	%rbx, %rcx	 # _14,
	call	_ZdlPvy	 #
.L520:
	movq	%rsi, %rax	 # tmp94, D.237891
	movq	%rax, %rcx	 # D.237891,
.LEHB17:
	call	_Unwind_Resume	 #
	nop	
.LEHE17:
.L523:
.LBE257:
.LBE258:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:145:       }
	.loc 11 145 7
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI515:
	popq	%rsi	 #
.LCFI516:
	popq	%rdi	 #
.LCFI517:
	popq	%rbp	 #
.LCFI518:
	ret	
.LFE11611:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA11611:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE11611-.LLSDACSB11611
.LLSDACSB11611:
	.uleb128 .LEHB14-.LFB11611
	.uleb128 .LEHE14-.LEHB14
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB15-.LFB11611
	.uleb128 .LEHE15-.LEHB15
	.uleb128 .L521-.LFB11611
	.uleb128 0
	.uleb128 .LEHB16-.LFB11611
	.uleb128 .LEHE16-.LEHB16
	.uleb128 .L522-.LFB11611
	.uleb128 0
	.uleb128 .LEHB17-.LFB11611
	.uleb128 .LEHE17-.LEHB17
	.uleb128 0
	.uleb128 0
.LLSDACSE11611:
	.text
	.seh_endproc
	.def	_ZNSt6threadC1IZ7WinMainEUlvE0_JEvEEOT_DpOT0_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt6threadC1IZ7WinMainEUlvE0_JEvEEOT_DpOT0_,_ZNSt6threadC2IZ7WinMainEUlvE0_JEvEEOT_DpOT0_
	.section	.text$_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv
	.def	_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv
_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv:
.LFB11783:
	.loc 8 301 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI519:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI520:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:302: 	{ return _M_addr == &_M_w._M_ver; }
	.loc 8 302 11
	movq	16(%rbp), %rax	 # this, tmp87
	movq	8(%rax), %rdx	 # this_5(D)->_M_addr, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:302: 	{ return _M_addr == &_M_w._M_ver; }
	.loc 8 302 23
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rax	 # this_5(D)->_M_w, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:302: 	{ return _M_addr == &_M_w._M_ver; }
	.loc 8 302 22
	addq	$64, %rax	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:302: 	{ return _M_addr == &_M_w._M_ver; }
	.loc 8 302 28
	cmpq	%rax, %rdx	 # _3, _1
	sete	%al	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:302: 	{ return _M_addr == &_M_w._M_ver; }
	.loc 8 302 36
	popq	%rbp	 #
.LCFI521:
	ret	
.LFE11783:
	.seh_endproc
	.section	.text$_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev
	.def	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev
_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev:
.LFB11789:
	.loc 8 378 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI522:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI523:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB259:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:381: 	    _M_w._M_leave_wait();
	.loc 8 381 6
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_4(D)->D.158324._M_w, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:381: 	    _M_w._M_leave_wait();
	.loc 8 381 24
	movq	%rax, %rcx	 # _2,
	call	_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv	 #
.LBE259:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:382: 	}
	.loc 8 382 2
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI524:
	ret	
.LFE11789:
	.seh_endproc
	.section	.text$_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_,"x"
	.linkonce discard
	.globl	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_
	.def	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_
_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_:
.LFB11795:
	.loc 18 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI525:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI526:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 77
	popq	%rbp	 #
.LCFI527:
	ret	
.LFE11795:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE:
.LFB11796:
	.loc 12 208 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI528:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI529:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 12 212 34
	movq	16(%rbp), %rax	 # __d, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rcx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 12 212 38
	movabsq	$1237940039285380275, %rdx	 #, tmp88
	movq	%rcx, %rax	 # _1, tmp94
	imulq	%rdx	 # tmp88
	movq	%rdx, %rax	 # tmp87, tmp87
	sarq	$26, %rax	 #, tmp87
	sarq	$63, %rcx	 #, _1
	movq	%rcx, %rdx	 # _1, tmp90
	subq	%rdx, %rax	 # tmp90, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:211: 	    return _ToDur(static_cast<__to_rep>(
	.loc 12 211 20
	movq	%rax, -8(%rbp)	 # _2, D.230499
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:211: 	    return _ToDur(static_cast<__to_rep>(
	.loc 12 211 13
	leaq	-8(%rbp), %rdx	 #, tmp91
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 12 212 67
	movq	-16(%rbp), %rax	 # D.230500, D.236677
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:213: 	  }
	.loc 12 213 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI530:
	ret	
.LFE11796:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE:
.LFB11797:
	.loc 12 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI531:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI532:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 12 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 12 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI533:
	ret	
.LFE11797:
	.seh_endproc
	.section	.text$_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_,"x"
	.linkonce discard
	.globl	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_
	.def	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_
_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_:
.LFB11805:
	.loc 12 644 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI534:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI535:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI536:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI537:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 14
	movq	32(%rbp), %rax	 # __lhs, tmp87
	movq	(%rax), %rax	 # *__lhs_5(D), tmp88
	movq	%rax, -16(%rbp)	 # tmp88, D.230596
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 31
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rbx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 36
	movq	40(%rbp), %rax	 # __rhs, tmp90
	movq	(%rax), %rax	 # *__rhs_8(D), tmp91
	movq	%rax, -8(%rbp)	 # tmp91, D.230597
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 53
	leaq	-8(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 34
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
	movq	%rdx, -24(%rbp)	 # _3, D.230598
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 9
	leaq	-24(%rbp), %rdx	 #, tmp93
	leaq	-32(%rbp), %rax	 #, tmp94
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 55
	movq	-32(%rbp), %rax	 # D.230599, D.236594
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:651:       }
	.loc 12 651 7
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI538:
	popq	%rbp	 #
.LCFI539:
	ret	
.LFE11805:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE:
.LFB11807:
	.loc 12 221 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI540:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI541:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 12 225 34
	movq	16(%rbp), %rax	 # __d, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 12 225 38
	imulq	$1000000, %rax, %rax	 #, _1, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 12 224 20
	movq	%rax, -8(%rbp)	 # _2, D.230758
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 12 224 13
	leaq	-8(%rbp), %rdx	 #, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 12 225 67
	movq	-16(%rbp), %rax	 # D.230759, D.236619
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:226: 	  }
	.loc 12 226 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI542:
	ret	
.LFE11807:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv,"x"
	.linkonce discard
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv:
.LFB11809:
	.loc 12 607 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI543:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI544:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 12 608 46
	call	_ZNSt6chrono15duration_valuesIxE4zeroEv	 #
	movq	%rax, -8(%rbp)	 # _1, D.230884
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 12 608 11
	leaq	-8(%rbp), %rdx	 #, tmp85
	leaq	-16(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 12 608 48
	movq	-16(%rbp), %rax	 # D.230885, D.236816
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:608: 	{ return duration(duration_values<rep>::zero()); }
	.loc 12 608 51
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI545:
	ret	
.LFE11809:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE:
.LFB11810:
	.loc 12 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI546:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI547:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 12 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 12 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI548:
	ret	
.LFE11810:
	.seh_endproc
	.section	.text$_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_,"x"
	.linkonce discard
	.globl	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
	.def	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_:
.LFB11811:
	.loc 12 644 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI549:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI550:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI551:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI552:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 14
	movq	32(%rbp), %rax	 # __lhs, tmp87
	movq	(%rax), %rax	 # *__lhs_5(D), tmp88
	movq	%rax, -16(%rbp)	 # tmp88, D.230947
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 31
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
	movq	%rax, %rbx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 36
	movq	40(%rbp), %rdx	 # __rhs, tmp90
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 53
	leaq	-8(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 34
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
	movq	%rdx, -24(%rbp)	 # _3, D.230973
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 9
	leaq	-24(%rbp), %rdx	 #, tmp93
	leaq	-32(%rbp), %rax	 #, tmp94
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 55
	movq	-32(%rbp), %rax	 # D.230974, D.236838
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:651:       }
	.loc 12 651 7
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI553:
	popq	%rbp	 #
.LCFI554:
	ret	
.LFE11811:
	.seh_endproc
	.section	.text$_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_,"x"
	.linkonce discard
	.globl	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
	.def	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_:
.LFB11815:
	.loc 12 644 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI555:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI556:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI557:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI558:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 14
	movq	32(%rbp), %rax	 # __lhs, tmp87
	movq	(%rax), %rax	 # *__lhs_5(D), tmp88
	movq	%rax, -16(%rbp)	 # tmp88, D.231018
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 31
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rbx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 36
	movq	40(%rbp), %rdx	 # __rhs, tmp90
	leaq	-8(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 53
	leaq	-8(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 34
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
	movq	%rdx, -24(%rbp)	 # _3, D.231033
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 9
	leaq	-24(%rbp), %rdx	 #, tmp93
	leaq	-32(%rbp), %rax	 #, tmp94
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 55
	movq	-32(%rbp), %rax	 # D.231034, D.236681
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:651:       }
	.loc 12 651 7
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI559:
	popq	%rbp	 #
.LCFI560:
	ret	
.LFE11815:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE:
.LFB11817:
	.loc 12 196 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI561:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI562:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:199: 	    return _ToDur(static_cast<__to_rep>(__d.count()));
	.loc 12 199 51
	movq	16(%rbp), %rax	 # __d, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:199: 	    return _ToDur(static_cast<__to_rep>(__d.count()));
	.loc 12 199 20
	movq	%rax, -8(%rbp)	 # _1, D.231071
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:199: 	    return _ToDur(static_cast<__to_rep>(__d.count()));
	.loc 12 199 13
	leaq	-8(%rbp), %rdx	 #, tmp86
	leaq	-16(%rbp), %rax	 #, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:199: 	    return _ToDur(static_cast<__to_rep>(__d.count()));
	.loc 12 199 54
	movq	-16(%rbp), %rax	 # D.231072, D.236700
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:200: 	  }
	.loc 12 200 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI563:
	ret	
.LFE11817:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_:
.LFB11836:
	.loc 15 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI564:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI565:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI566:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI567:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
.LBB260:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 38
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 56
	movq	40(%rbp), %rbx	 # __p, __p.102_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 53
	movq	32(%rbp), %rax	 # this, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 56
	movq	%rbx, (%rax)	 # __p.102_2, *_3
.LBE260:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 63
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI568:
	popq	%rbp	 #
.LCFI569:
	ret	
.LFE11836:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv:
.LFB11838:
	.loc 15 189 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI570:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI571:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 57
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 56
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 64
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI572:
	ret	
.LFE11838:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv
	.def	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv
_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv:
.LFB11839:
	.loc 15 732 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI573:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI574:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 15 733 31
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 15 733 35
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI575:
	ret	
.LFE11839:
	.seh_endproc
	.section	.text$_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_
	.def	_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_
_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_:
.LFB11840:
	.loc 15 128 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI576:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI577:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __ptr, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 15 132 4
	cmpq	$0, 24(%rbp)	 #, __ptr
	je	.L554	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 15 132 4 is_stmt 0 discriminator 1
	movq	24(%rbp), %rax	 # __ptr, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZdaPv	 #
.L554:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:133: 	}
	.loc 15 133 2 is_stmt 1
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI578:
	ret	
.LFE11840:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_:
.LFB11841:
	.loc 15 198 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI579:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI580:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI581:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI582:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:200: 	const pointer __old_p = _M_ptr();
	.loc 15 200 32
	movq	32(%rbp), %rax	 # this, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:200: 	const pointer __old_p = _M_ptr();
	.loc 15 200 16
	movq	(%rax), %rax	 # *_1, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __old_p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 15 201 11
	movq	40(%rbp), %rbx	 # __p, __p.103_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 15 201 8
	movq	32(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 15 201 11
	movq	%rbx, (%rax)	 # __p.103_2, *_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:202: 	if (__old_p)
	.loc 15 202 2
	cmpq	$0, -8(%rbp)	 #, __old_p
	je	.L557	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:203: 	  _M_deleter()(__old_p);
	.loc 15 203 14
	movq	32(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv	 #
	movq	%rax, %rcx	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:203: 	  _M_deleter()(__old_p);
	.loc 15 203 16
	movq	-8(%rbp), %rax	 # __old_p, tmp90
	movq	%rax, %rdx	 # tmp90,
	call	_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_	 #
.L557:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:204:       }
	.loc 15 204 7
	nop	
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI583:
	popq	%rbp	 #
.LCFI584:
	ret	
.LFE11841:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv:
.LFB11842:
	.loc 15 207 15
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI585:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI586:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:209: 	pointer __p = _M_ptr();
	.loc 15 209 22
	movq	16(%rbp), %rax	 # this, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:209: 	pointer __p = _M_ptr();
	.loc 15 209 10
	movq	(%rax), %rax	 # *_1, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:210: 	_M_ptr() = nullptr;
	.loc 15 210 8
	movq	16(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:210: 	_M_ptr() = nullptr;
	.loc 15 210 11
	movq	$0, (%rax)	 #, *_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:211: 	return __p;
	.loc 15 211 9
	movq	-8(%rbp), %rax	 # __p, _9
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:212:       }
	.loc 15 212 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI587:
	ret	
.LFE11842:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv
	.def	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv
_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv:
.LFB11843:
	.loc 15 193 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI588:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI589:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 61
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 60
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 68
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI590:
	ret	
.LFE11843:
	.seh_endproc
	.section	.text$_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE,"x"
	.linkonce discard
	.globl	_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE
	.def	_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE
_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE:
.LFB11844:
	.loc 18 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI591:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI592:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 18 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 18 78 39
	popq	%rbp	 #
.LCFI593:
	ret	
.LFE11844:
	.seh_endproc
	.section	.text$_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv
	.def	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv
_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv:
.LFB11845:
	.loc 15 726 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI594:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI595:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 15 727 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 15 727 31
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI596:
	ret	
.LFE11845:
	.seh_endproc
	.section	.text$_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_,"x"
	.linkonce discard
	.globl	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_
	.def	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_
_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_:
.LFB11846:
	.loc 18 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI597:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI598:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 77
	popq	%rbp	 #
.LCFI599:
	ret	
.LFE11846:
	.seh_endproc
	.section	.text$_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv
	.def	_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv
_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv:
.LFB11849:
	.file 22 "C:/msys64/mingw64/include/c++/12.2.0/tuple"
	.loc 22 1049 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI600:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI601:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB261:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 22 1051 15
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev	 #
.LBE261:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 22 1051 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI602:
	ret	
.LFE11849:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA11849:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE11849-.LLSDACSB11849
.LLSDACSB11849:
.LLSDACSE11849:
	.section	.text$_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_
	.def	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_
_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_:
.LFB11852:
	.loc 15 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI603:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI604:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI605:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI606:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
.LBB262:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 38
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 56
	movq	40(%rbp), %rbx	 # __p, __p.109_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 53
	movq	32(%rbp), %rax	 # this, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 56
	movq	%rbx, (%rax)	 # __p.109_2, *_3
.LBE262:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 63
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI607:
	popq	%rbp	 #
.LCFI608:
	ret	
.LFE11852:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv
	.def	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv
_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv:
.LFB11854:
	.loc 15 189 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI609:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI610:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 57
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 56
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 64
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI611:
	ret	
.LFE11854:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv
	.def	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv
_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv:
.LFB11855:
	.loc 15 732 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI612:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI613:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 15 733 31
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 15 733 35
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI614:
	ret	
.LFE11855:
	.seh_endproc
	.section	.text$_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_
	.def	_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_
_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_:
.LFB11856:
	.loc 15 128 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI615:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI616:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI617:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI618:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __ptr, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 15 132 4
	cmpq	$0, 40(%rbp)	 #, __ptr
	je	.L578	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 15 132 4 is_stmt 0 discriminator 1
	movq	40(%rbp), %rax	 # __ptr, tmp91
	subq	$8, %rax	 #, _1
	movq	(%rax), %rax	 # *_1, _2
	leaq	0(,%rax,8), %rdx	 #, _3
	movq	40(%rbp), %rax	 # __ptr, tmp92
	leaq	(%rdx,%rax), %rbx	 #, _9
.L577:
	cmpq	40(%rbp), %rbx	 # __ptr, _9
	je	.L576	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 15 132 4
	subq	$8, %rbx	 #, _9
	movq	%rbx, %rcx	 # _9,
	call	_ZNSt6threadD1Ev	 #
	jmp	.L577	 #
.L576:
	movq	40(%rbp), %rax	 # __ptr, tmp93
	subq	$8, %rax	 #, _4
	movq	(%rax), %rax	 # *_4, _5
	addq	$1, %rax	 #, _6
	leaq	0(,%rax,8), %rdx	 #, _7
	movq	40(%rbp), %rax	 # __ptr, tmp94
	subq	$8, %rax	 #, _8
	movq	%rax, %rcx	 # _8,
	call	_ZdaPvy	 #
.L578:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:133: 	}
	.loc 15 133 2 is_stmt 1
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI619:
	popq	%rbp	 #
.LCFI620:
	ret	
.LFE11856:
	.seh_endproc
	.text
	.def	_ZSt4moveIRZ7WinMainEUlvE_EONSt16remove_referenceIT_E4typeEOS3_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRZ7WinMainEUlvE_EONSt16remove_referenceIT_E4typeEOS3_
_ZSt4moveIRZ7WinMainEUlvE_EONSt16remove_referenceIT_E4typeEOS3_:
.LFB11857:
	.loc 18 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI621:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI622:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 77
	popq	%rbp	 #
.LCFI623:
	ret	
.LFE11857:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EEaSEOS7_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EEaSEOS7_
_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EEaSEOS7_:
.LFB11860:
	.loc 15 235 24
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI624:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI625:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.215370, D.215370
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:235:       __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
	.loc 15 235 24
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.215370, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEaSEOS7_	 #
	movq	16(%rbp), %rax	 # this, _7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI626:
	ret	
.LFE11860:
	.seh_endproc
	.align 2
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEaSEOS7_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEaSEOS7_
_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEaSEOS7_:
.LFB11859:
	.loc 15 680 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI627:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI628:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.215591, D.215591
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:680:       operator=(unique_ptr&&) = default;
	.loc 15 680 7
	movq	24(%rbp), %rdx	 # D.215591, _1
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EEaSEOS7_	 #
	movq	16(%rbp), %rax	 # this, _7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI629:
	ret	
.LFE11859:
	.seh_endproc
	.align 2
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC2ExS0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC2ExS0_
_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC2ExS0_:
.LFB11861:
	.loc 17 151 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI630:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI631:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI632:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI633:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __expected, __expected
	movq	%r8, %rbx	 #, tmp91
.LBB263:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:152: 	  : _M_expected(__expected), _M_expected_adjustment(0),
	.loc 17 152 6
	movq	32(%rbp), %rax	 # this, tmp92
	movq	40(%rbp), %rdx	 # __expected, tmp93
	movq	%rdx, (%rax)	 # tmp93, this_10(D)->_M_expected
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:154: 	    _M_phase(static_cast<__barrier_phase_t>(0))
	.loc 17 154 48
	movq	32(%rbp), %rax	 # this, tmp94
	addq	$8, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IS6_vEEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:152: 	  : _M_expected(__expected), _M_expected_adjustment(0),
	.loc 17 152 31
	movq	32(%rbp), %rax	 # this, tmp95
	addq	$16, %rax	 #, _2
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _2,
	call	_ZNSt13__atomic_baseIxEC1Ex	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:153: 	    _M_completion(move(__completion)),
	.loc 17 153 24
	movq	%rbx, %rcx	 # tmp91,
	call	_ZSt4moveIRZ7WinMainEUlvE_EONSt16remove_referenceIT_E4typeEOS3_	 #
	movq	%rax, %rcx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:153: 	    _M_completion(move(__completion)),
	.loc 17 153 6
	movq	32(%rbp), %r8	 # this, tmp96
	movq	(%rcx), %rax	 # MEM[(struct ._anon_609 &)_3], tmp97
	movq	8(%rcx), %rdx	 # MEM[(struct ._anon_609 &)_3],
	movq	%rax, 24(%r8)	 # tmp97, this_10(D)->_M_completion
	movq	%rdx, 32(%r8)	 #, this_10(D)->_M_completion
	movq	16(%rcx), %rax	 # MEM[(struct ._anon_609 &)_3], tmp98
	movq	%rax, 40(%r8)	 # tmp98, this_10(D)->_M_completion
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:154: 	    _M_phase(static_cast<__barrier_phase_t>(0))
	.loc 17 154 6
	movq	32(%rbp), %rax	 # this, tmp99
	movb	$0, 48(%rax)	 #, this_10(D)->_M_phase
.LBB264:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:156: 	size_t const __count = (_M_expected + 1) >> 1;
	.loc 17 156 26
	movq	32(%rbp), %rax	 # this, tmp100
	movq	(%rax), %rax	 # this_10(D)->_M_expected, _4
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:156: 	size_t const __count = (_M_expected + 1) >> 1;
	.loc 17 156 38
	addq	$1, %rax	 #, _5
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:156: 	size_t const __count = (_M_expected + 1) >> 1;
	.loc 17 156 43
	sarq	%rax	 # _6
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:156: 	size_t const __count = (_M_expected + 1) >> 1;
	.loc 17 156 15
	movq	%rax, -8(%rbp)	 # _6, __count
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:158: 	_M_state = std::make_unique<__state_t[]>(__count);
	.loc 17 158 11
	leaq	-16(%rbp), %rax	 #, tmp101
	movq	-8(%rbp), %rdx	 # __count, tmp102
	movq	%rax, %rcx	 # tmp101,
.LEHB18:
	call	_ZSt11make_uniqueIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEENSt8__detail9_MakeUniqIT_E7__arrayEy	 #
.LEHE18:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:158: 	_M_state = std::make_unique<__state_t[]>(__count);
	.loc 17 158 11 is_stmt 0 discriminator 2
	movq	32(%rbp), %rax	 # this, tmp103
	leaq	8(%rax), %rcx	 #, _7
	leaq	-16(%rbp), %rax	 #, tmp104
	movq	%rax, %rdx	 # tmp104,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEaSEOS7_	 #
	leaq	-16(%rbp), %rax	 #, tmp105
	movq	%rax, %rcx	 # tmp105,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED1Ev	 #
.LBE264:
.LBE263:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:159:       }
	.loc 17 159 7 is_stmt 1 discriminator 2
	jmp	.L588	 #
.L587:
.LBB265:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:159:       }
	.loc 17 159 7 is_stmt 0
	movq	%rax, %rbx	 #, tmp107
	movq	32(%rbp), %rax	 # this, tmp106
	addq	$8, %rax	 #, _8
	movq	%rax, %rcx	 # _8,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EED1Ev	 #
	movq	%rbx, %rax	 # tmp107, D.237892
	movq	%rax, %rcx	 # D.237892,
.LEHB19:
	call	_Unwind_Resume	 #
	nop	
.LEHE19:
.L588:
.LBE265:
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI634:
	popq	%rbp	 #
.LCFI635:
	ret	
.LFE11861:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA11861:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE11861-.LLSDACSB11861
.LLSDACSB11861:
	.uleb128 .LEHB18-.LFB11861
	.uleb128 .LEHE18-.LEHB18
	.uleb128 .L587-.LFB11861
	.uleb128 0
	.uleb128 .LEHB19-.LFB11861
	.uleb128 .LEHE19-.LEHB19
	.uleb128 0
	.uleb128 0
.LLSDACSE11861:
	.text
	.seh_endproc
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC1ExS0_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC1ExS0_,_ZNSt14__tree_barrierIZ7WinMainEUlvE_EC2ExS0_
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv:
.LFB11863:
	.loc 15 189 18 is_stmt 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI636:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI637:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 57
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 56
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 64
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI638:
	ret	
.LFE11863:
	.seh_endproc
	.align 2
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE11get_deleterEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE11get_deleterEv
_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE11get_deleterEv:
.LFB11864:
	.loc 15 732 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI639:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI640:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 15 733 31
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:733:       { return _M_t._M_deleter(); }
	.loc 15 733 35
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI641:
	ret	
.LFE11864:
	.seh_endproc
	.align 2
	.def	_ZNKSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEclIS3_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS4_E5valueEvE4typeEPS9_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEclIS3_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS4_E5valueEvE4typeEPS9_
_ZNKSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEclIS3_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS4_E5valueEvE4typeEPS9_:
.LFB11865:
	.loc 15 128 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI642:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI643:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __ptr, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 15 132 4
	cmpq	$0, 24(%rbp)	 #, __ptr
	je	.L595	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:132: 	  delete [] __ptr;
	.loc 15 132 4 is_stmt 0 discriminator 1
	movq	24(%rbp), %rax	 # __ptr, tmp82
	movl	$64, %edx	 #,
	movq	%rax, %rcx	 # tmp82,
	call	_ZdaPvSt11align_val_t	 #
.L595:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:133: 	}
	.loc 15 133 2 is_stmt 1
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI644:
	ret	
.LFE11865:
	.seh_endproc
	.section	.text$_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv
	.def	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv
_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv:
.LFB11866:
	.loc 15 726 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI645:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI646:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 15 727 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 15 727 31
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI647:
	ret	
.LFE11866:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt7barrierIZ7WinMainEUlvE_E15arrive_and_waitEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt7barrierIZ7WinMainEUlvE_E15arrive_and_waitEv
_ZNSt7barrierIZ7WinMainEUlvE_E15arrive_and_waitEv:
.LFB11867:
	.loc 17 247 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI648:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI649:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:248:       { wait(arrive()); }
	.loc 17 248 20
	movq	16(%rbp), %rax	 # this, tmp82
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt7barrierIZ7WinMainEUlvE_E6arriveEx	 #
	movb	%al, -1(%rbp)	 # tmp84, D.231584
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:248:       { wait(arrive()); }
	.loc 17 248 13
	leaq	-1(%rbp), %rdx	 #, tmp85
	movq	16(%rbp), %rax	 # this, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt7barrierIZ7WinMainEUlvE_E4waitEONS1_13arrival_tokenE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:248:       { wait(arrive()); }
	.loc 17 248 25
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI650:
	ret	
.LFE11867:
	.seh_endproc
	.section	.text$_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_,"x"
	.linkonce discard
	.globl	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
	.def	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_:
.LFB11868:
	.loc 12 644 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI651:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI652:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI653:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI654:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 14
	movq	32(%rbp), %rdx	 # __lhs, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 31
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
	movq	%rax, %rbx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 36
	movq	40(%rbp), %rax	 # __rhs, tmp90
	movq	(%rax), %rax	 # *__rhs_8(D), tmp91
	movq	%rax, -8(%rbp)	 # tmp91, D.231596
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 53
	leaq	-8(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 34
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
	movq	%rdx, -24(%rbp)	 # _3, D.231597
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 9
	leaq	-24(%rbp), %rdx	 #, tmp93
	leaq	-32(%rbp), %rax	 #, tmp94
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:650: 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
	.loc 12 650 55
	movq	-32(%rbp), %rax	 # D.231598, D.236627
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:651:       }
	.loc 12 651 7
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI655:
	popq	%rbp	 #
.LCFI656:
	ret	
.LFE11868:
	.seh_endproc
	.text
	.def	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE
_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE:
.LFB11869:
	.loc 18 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI657:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI658:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 18 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 18 78 39
	popq	%rbp	 #
.LCFI659:
	ret	
.LFE11869:
	.seh_endproc
	.section	.text$_ZNSt6thread6_StateC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6thread6_StateC2Ev
	.def	_ZNSt6thread6_StateC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6thread6_StateC2Ev
_ZNSt6thread6_StateC2Ev:
.LFB11872:
	.loc 11 67 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI660:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI661:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB266:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:67:     struct _State
	.loc 11 67 12
	movq	.refptr._ZTVNSt6thread6_StateE(%rip), %rax	 #, tmp83
	leaq	16(%rax), %rdx	 #, _1
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->_vptr._State
.LBE266:
	nop	
	popq	%rbp	 #
.LCFI662:
	ret	
.LFE11872:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC2IJS3_EEEDpOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC2IJS3_EEEDpOT_
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC2IJS3_EEEDpOT_:
.LFB11880:
	.loc 11 205 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI663:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI664:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI665:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI666:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __args#0, __args#0
.LBB267:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:206: 	  : _M_func{{std::forward<_Args>(__args)...}}
	.loc 11 206 46
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6thread6_StateC2Ev	 #
	leaq	16+_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE(%rip), %rdx	 #, _2
	movq	32(%rbp), %rax	 # this, tmp87
	movq	%rdx, (%rax)	 # _2, this_7(D)->D.223776._vptr._State
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:206: 	  : _M_func{{std::forward<_Args>(__args)...}}
	.loc 11 206 6
	movq	32(%rbp), %rax	 # this, tmp88
	leaq	8(%rax), %rbx	 #, _3
	movq	40(%rbp), %rax	 # __args#0, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _4,
	movq	%rbx, %rcx	 # _3,
	call	_ZNSt5tupleIJZ7WinMainEUlvE0_EEC1IJS0_ELb1ELb1EEEDpOT_	 #
.LBE267:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:207: 	  { }
	.loc 11 207 6
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI667:
	popq	%rbp	 #
.LCFI668:
	ret	
.LFE11880:
	.seh_endproc
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC1IJS3_EEEDpOT_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC1IJS3_EEEDpOT_,_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEC2IJS3_EEEDpOT_
	.section	.text$_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_
	.def	_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_
_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_:
.LFB11885:
	.loc 15 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI669:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI670:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.226785, D.226785
.LBB268:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 15 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.226785, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_	 #
.LBE268:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI671:
	ret	
.LFE11885:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_
	.def	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_
_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_:
.LFB11887:
	.loc 15 309 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI672:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI673:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
.LBB269:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:310: 	: _M_t(__p)
	.loc 15 310 4
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __p, tmp83
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_	 #
.LBE269:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:311:         { }
	.loc 15 311 11
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI674:
	ret	
.LFE11887:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev
	.def	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev
_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev:
.LFB11890:
	.loc 15 390 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI675:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI676:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI677:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI678:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
.LBB270:
.LBB271:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:394: 	auto& __ptr = _M_t._M_ptr();
	.loc 15 394 27
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv	 #
	movq	%rax, -8(%rbp)	 # tmp87, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:395: 	if (__ptr != nullptr)
	.loc 15 395 12
	movq	-8(%rbp), %rax	 # __ptr, tmp88
	movq	(%rax), %rax	 # *__ptr_10, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:395: 	if (__ptr != nullptr)
	.loc 15 395 2
	testq	%rax, %rax	 # _2
	je	.L608	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:396: 	  get_deleter()(std::move(__ptr));
	.loc 15 396 15
	movq	32(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv	 #
	movq	%rax, %rbx	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:396: 	  get_deleter()(std::move(__ptr));
	.loc 15 396 27
	movq	-8(%rbp), %rax	 # __ptr, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:396: 	  get_deleter()(std::move(__ptr));
	.loc 15 396 17
	movq	(%rax), %rax	 # *_4, _5
	movq	%rax, %rdx	 # _5,
	movq	%rbx, %rcx	 # _3,
	call	_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_	 #
.L608:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:397: 	__ptr = pointer();
	.loc 15 397 8
	movq	-8(%rbp), %rax	 # __ptr, tmp91
	movq	$0, (%rax)	 #, *__ptr_10
.LBE271:
.LBE270:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:398:       }
	.loc 15 398 7
	nop	
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI679:
	popq	%rbp	 #
.LCFI680:
	ret	
.LFE11890:
	.seh_endproc
	.section	.text$_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv,"x"
	.linkonce discard
	.globl	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv:
.LFB12007:
	.loc 8 287 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI681:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI682:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __addr, __addr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:290: 	  auto& res = __waiter_pool_base::_S_for(__addr);
	.loc 8 290 42
	movq	16(%rbp), %rax	 # __addr, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt8__detail18__waiter_pool_base6_S_forEPKv	 #
	movq	%rax, -8(%rbp)	 # tmp85, res
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:291: 	  return reinterpret_cast<__waiter_type&>(res);
	.loc 8 291 47
	movq	-8(%rbp), %rax	 # res, _5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:292: 	}
	.loc 8 292 2
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI683:
	ret	
.LFE12007:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE:
.LFB12015:
	.loc 12 221 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI684:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI685:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 12 225 34
	movq	16(%rbp), %rax	 # __d, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 12 225 38
	imulq	$1000000000, %rax, %rax	 #, _1, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 12 224 20
	movq	%rax, -8(%rbp)	 # _2, D.233043
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 12 224 13
	leaq	-8(%rbp), %rdx	 #, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 12 225 67
	movq	-16(%rbp), %rax	 # D.233044, D.236694
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:226: 	  }
	.loc 12 226 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI686:
	ret	
.LFE12015:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_:
.LFB12019:
	.loc 12 505 23
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI687:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI688:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __rep, __rep
.LBB272:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 10
	movq	24(%rbp), %rax	 # __rep, tmp83
	movq	(%rax), %rdx	 # *__rep_5(D), _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 6
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->__r
.LBE272:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:506: 	  : __r(static_cast<rep>(__rep)) { }
	.loc 12 506 37
	nop	
	popq	%rbp	 #
.LCFI689:
	ret	
.LFE12019:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE:
.LFB12020:
	.loc 12 208 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI690:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI691:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 12 212 34
	movq	16(%rbp), %rax	 # __d, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
	movq	%rax, %rcx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 12 212 38
	movabsq	$2361183241434822607, %rdx	 #, tmp88
	movq	%rcx, %rax	 # _1, tmp94
	imulq	%rdx	 # tmp88
	movq	%rdx, %rax	 # tmp87, tmp87
	sarq	$7, %rax	 #, tmp87
	sarq	$63, %rcx	 #, _1
	movq	%rcx, %rdx	 # _1, tmp90
	subq	%rdx, %rax	 # tmp90, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:211: 	    return _ToDur(static_cast<__to_rep>(
	.loc 12 211 20
	movq	%rax, -8(%rbp)	 # _2, D.233065
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:211: 	    return _ToDur(static_cast<__to_rep>(
	.loc 12 211 13
	leaq	-8(%rbp), %rdx	 #, tmp91
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:212: 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
	.loc 12 212 67
	movq	-16(%rbp), %rax	 # D.233066, D.236834
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:213: 	  }
	.loc 12 213 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI692:
	ret	
.LFE12020:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE:
.LFB12023:
	.loc 12 513 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI693:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI694:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __d, __d
.LBB273:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 33
	movq	24(%rbp), %rax	 # __d, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -8(%rbp)	 # tmp85, D.233096
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 44
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 6
	movq	16(%rbp), %rdx	 # this, tmp87
	movq	%rax, (%rdx)	 # _1, this_3(D)->__r
.LBE273:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 50
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI695:
	ret	
.LFE12023:
	.seh_endproc
	.section	.text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE
	.def	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE
_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE:
.LFB12030:
	.loc 12 513 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI696:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI697:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __d, __d
.LBB274:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 33
	movq	24(%rbp), %rax	 # __d, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE	 #
	movq	%rax, -8(%rbp)	 # tmp85, D.233118
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 44
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 6
	movq	16(%rbp), %rdx	 # this, tmp87
	movq	%rax, (%rdx)	 # _1, this_3(D)->__r
.LBE274:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:514: 	  : __r(duration_cast<duration>(__d).count()) { }
	.loc 12 514 50
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI698:
	ret	
.LFE12030:
	.seh_endproc
	.section	.text$_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_,"x"
	.linkonce discard
	.globl	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_
	.def	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_
_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_:
.LFB12033:
	.loc 22 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI699:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI700:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI701:
	ret	
.LFE12033:
	.seh_endproc
	.section	.text$_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_,"x"
	.linkonce discard
	.globl	_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_
	.def	_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_
_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_:
.LFB12034:
	.loc 22 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI702:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI703:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 36
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI704:
	ret	
.LFE12034:
	.seh_endproc
	.section	.text$_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv
	.def	_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv
_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv:
.LFB12035:
	.loc 15 191 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI705:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI706:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 63
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 62
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 67
	movq	(%rax), %rax	 # *_2, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 70
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI707:
	ret	
.LFE12035:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev
	.def	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev
_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev:
.LFB12037:
	.loc 22 279 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI708:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI709:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB275:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 22 280 29
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev	 #
.LBE275:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 22 280 33
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI710:
	ret	
.LFE12037:
	.seh_endproc
	.section	.text$_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv
	.def	_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv
_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv:
.LFB12041:
	.loc 22 1049 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI711:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI712:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB276:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 22 1051 15
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev	 #
.LBE276:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 22 1051 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI713:
	ret	
.LFE12041:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA12041:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE12041-.LLSDACSB12041
.LLSDACSB12041:
.LLSDACSE12041:
	.section	.text$_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"x"
	.linkonce discard
	.globl	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.def	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_:
.LFB12042:
	.loc 22 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI714:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI715:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI716:
	ret	
.LFE12042:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv
	.def	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv
_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv:
.LFB12043:
	.loc 15 193 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI717:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI718:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 61
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 60
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 68
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI719:
	ret	
.LFE12043:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2Ev
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2Ev:
.LFB12048:
	.loc 15 166 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI720:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI721:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB277:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:166:       __uniq_ptr_impl() = default;
	.loc 15 166 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC1ILb1ELb1EEEv	 #
.LBE277:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI722:
	ret	
.LFE12048:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEv
_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEv:
.LFB12050:
	.loc 15 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI723:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI724:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB278:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 15 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2Ev	 #
.LBE278:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI725:
	ret	
.LFE12050:
	.seh_endproc
	.def	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEv;	.scl	3;	.type	32;	.endef
	.set	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEv,_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEv
	.align 2
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IS6_vEEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IS6_vEEv
_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IS6_vEEv:
.LFB12052:
	.loc 15 580 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI726:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI727:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB279:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:581: 	: _M_t()
	.loc 15 581 4
	movq	16(%rbp), %rax	 # this, tmp83
	movq	$0, (%rax)	 #, this_3(D)->_M_t
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEv	 #
.LBE279:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:582: 	{ }
	.loc 15 582 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI728:
	ret	
.LFE12052:
	.seh_endproc
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IS6_vEEv;	.scl	3;	.type	32;	.endef
	.set	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IS6_vEEv,_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IS6_vEEv
	.def	_ZSt11make_uniqueIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEENSt8__detail9_MakeUniqIT_E7__arrayEy;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt11make_uniqueIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEENSt8__detail9_MakeUniqIT_E7__arrayEy
_ZSt11make_uniqueIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEENSt8__detail9_MakeUniqIT_E7__arrayEy:
.LFB12054:
	.loc 15 1079 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI729:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI730:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI731:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI732:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 40(%rbp)	 # __num, __num
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 15 1080 55
	movq	40(%rbp), %rbx	 # __num, __num.111_6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 15 1080 63
	movabsq	$144115188075855871, %rax	 #, tmp91
	cmpq	%rbx, %rax	 # __num.111_6, tmp91
	jb	.L634	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 15 1080 63 is_stmt 0 discriminator 1
	movq	%rbx, %rax	 # __num.111_6, iftmp.110_9
	salq	$6, %rax	 #, iftmp.110_9
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 15 1080 30 is_stmt 1 discriminator 1
	movl	$64, %edx	 #,
	movq	%rax, %rcx	 # iftmp.110_9,
	call	_ZnaySt11align_val_t	 #
	movq	%rax, %rcx	 # tmp92, _12
	movq	%rcx, %rax	 # _12, _2
	leaq	-1(%rbx), %rdx	 #, _1
	jmp	.L636	 #
.L634:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 15 1080 30 is_stmt 0 discriminator 2
	call	__cxa_throw_bad_array_new_length	 #
.L637:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 15 1080 30 discriminator 6
	pxor	%xmm0, %xmm0	 # tmp93
	movups	%xmm0, (%rax)	 # tmp93, *_2
	movups	%xmm0, 16(%rax)	 # tmp93, *_2
	movups	%xmm0, 32(%rax)	 # tmp93, *_2
	movups	%xmm0, 48(%rax)	 # tmp93, *_2
	subq	$1, %rdx	 #, _3
	addq	$64, %rax	 #, _2
.L636:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 15 1080 30 discriminator 4
	testq	%rdx, %rdx	 # _3
	jns	.L637	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 15 1080 63 is_stmt 1 discriminator 7
	movq	32(%rbp), %rax	 # <retval>, tmp94
	movq	%rcx, %rdx	 # _12,
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IPS3_S6_vbEET_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:1080:     { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }
	.loc 15 1080 66 discriminator 7
	movq	32(%rbp), %rax	 # <retval>,
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI733:
	popq	%rbp	 #
.LCFI734:
	ret	
.LFE12054:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEaSEOS7_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEaSEOS7_
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEaSEOS7_:
.LFB12055:
	.loc 15 181 24
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI735:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI736:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __u, __u
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:183: 	reset(__u.release());
	.loc 15 183 7
	movq	24(%rbp), %rax	 # __u, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE7releaseEv	 #
	movq	%rax, %rdx	 #, _1
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE5resetEPS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 15 184 49
	movq	24(%rbp), %rax	 # __u, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 15 184 34
	movq	%rax, %rcx	 # _2,
	call	_ZSt7forwardISt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEOT_RNSt16remove_referenceIS7_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:184: 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
	.loc 15 184 12
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:185: 	return *this;
	.loc 15 185 10
	movq	16(%rbp), %rax	 # this, _11
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:186:       }
	.loc 15 186 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI737:
	ret	
.LFE12055:
	.seh_endproc
	.def	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_
_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_:
.LFB12056:
	.loc 22 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI738:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI739:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI740:
	ret	
.LFE12056:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv:
.LFB12057:
	.loc 15 193 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI741:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI742:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 61
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 60
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy1EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 68
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI743:
	ret	
.LFE12057:
	.seh_endproc
	.section	.text$_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv
	.def	_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv
_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv:
.LFB12058:
	.loc 15 191 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI744:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI745:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 63
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 62
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 67
	movq	(%rax), %rax	 # *_2, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 70
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI746:
	ret	
.LFE12058:
	.seh_endproc
	.text
	.align 2
	.def	_ZNKSt7barrierIZ7WinMainEUlvE_E4waitEONS1_13arrival_tokenE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt7barrierIZ7WinMainEUlvE_E4waitEONS1_13arrival_tokenE
_ZNKSt7barrierIZ7WinMainEUlvE_E4waitEONS1_13arrival_tokenE:
.LFB12059:
	.loc 17 243 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI747:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI748:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI749:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI750:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __phase, __phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:244:       { _M_b.wait(std::move(__phase._M_tok)); }
	.loc 17 244 18
	movq	32(%rbp), %rbx	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:244:       { _M_b.wait(std::move(__phase._M_tok)); }
	.loc 17 244 37
	movq	40(%rbp), %rax	 # __phase, _2
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:244:       { _M_b.wait(std::move(__phase._M_tok)); }
	.loc 17 244 28
	movq	%rax, %rcx	 # _2,
	call	_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:244:       { _M_b.wait(std::move(__phase._M_tok)); }
	.loc 17 244 18
	movq	%rax, %rdx	 # _3,
	movq	%rbx, %rcx	 # _1,
	call	_ZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_t	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:244:       { _M_b.wait(std::move(__phase._M_tok)); }
	.loc 17 244 47
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI751:
	popq	%rbp	 #
.LCFI752:
	ret	
.LFE12059:
	.seh_endproc
	.align 2
	.def	_ZNSt7barrierIZ7WinMainEUlvE_E6arriveEx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt7barrierIZ7WinMainEUlvE_E6arriveEx
_ZNSt7barrierIZ7WinMainEUlvE_E6arriveEx:
.LFB12060:
	.loc 17 239 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI753:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI754:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __update, __update
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:240:       { return arrival_token{_M_b.arrive(__update)}; }
	.loc 17 240 51
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __update, tmp86
	movq	%rax, %rcx	 # _1,
	call	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E6arriveEx	 #
	movl	%eax, %edx	 #, _2
	leaq	-1(%rbp), %rax	 #, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC1ESt17__barrier_phase_t	 #
	movzbl	-1(%rbp), %eax	 # D.233466, D.236310
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:240:       { return arrival_token{_M_b.arrive(__update)}; }
	.loc 17 240 54
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI755:
	ret	
.LFE12060:
	.seh_endproc
	.align 2
	.def	_ZNSt5tupleIJZ7WinMainEUlvE0_EEC2IJS0_ELb1ELb1EEEDpOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt5tupleIJZ7WinMainEUlvE0_EEC2IJS0_ELb1ELb1EEEDpOT_
_ZNSt5tupleIJZ7WinMainEUlvE0_EEC2IJS0_ELb1ELb1EEEDpOT_:
.LFB12062:
	.loc 22 742 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI756:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI757:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI758:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI759:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __elements#0, __elements#0
.LBB280:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:744: 	: _Inherited(std::forward<_UElements>(__elements)...) { }
	.loc 22 744 54
	movq	32(%rbp), %rbx	 # this, _1
	movq	40(%rbp), %rax	 # __elements#0, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _2,
	movq	%rbx, %rcx	 # _1,
	call	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EEC2IS0_EEOT_	 #
.LBE280:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:744: 	: _Inherited(std::forward<_UElements>(__elements)...) { }
	.loc 22 744 58
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI760:
	popq	%rbp	 #
.LCFI761:
	ret	
.LFE12062:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA12062:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE12062-.LLSDACSB12062
.LLSDACSB12062:
.LLSDACSE12062:
	.text
	.seh_endproc
	.def	_ZNSt5tupleIJZ7WinMainEUlvE0_EEC1IJS0_ELb1ELb1EEEDpOT_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt5tupleIJZ7WinMainEUlvE0_EEC1IJS0_ELb1ELb1EEEDpOT_,_ZNSt5tupleIJZ7WinMainEUlvE0_EEC2IJS0_ELb1ELb1EEEDpOT_
	.section	.text$_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_
	.def	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_
_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_:
.LFB12066:
	.loc 15 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI762:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI763:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI764:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI765:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
.LBB281:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 38
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 56
	movq	40(%rbp), %rbx	 # __p, __p.173_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 53
	movq	32(%rbp), %rax	 # this, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 56
	movq	%rbx, (%rax)	 # __p.173_2, *_3
.LBE281:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 63
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI766:
	popq	%rbp	 #
.LCFI767:
	ret	
.LFE12066:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv
	.def	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv
_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv:
.LFB12068:
	.loc 15 189 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI768:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI769:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 57
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 56
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:189:       pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
	.loc 15 189 64
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI770:
	ret	
.LFE12068:
	.seh_endproc
	.section	.text$_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv
	.def	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv
_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv:
.LFB12069:
	.loc 15 467 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI771:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI772:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:468:       { return _M_t._M_deleter(); }
	.loc 15 468 31
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:468:       { return _M_t._M_deleter(); }
	.loc 15 468 35
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI773:
	ret	
.LFE12069:
	.seh_endproc
	.section	.text$_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_,"x"
	.linkonce discard
	.globl	_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_
	.def	_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_
_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_:
.LFB12070:
	.loc 18 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI774:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI775:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 77
	popq	%rbp	 #
.LCFI776:
	ret	
.LFE12070:
	.seh_endproc
	.section	.text$_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_
	.def	_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_
_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_:
.LFB12071:
	.loc 15 89 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI777:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI778:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __ptr, __ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:95: 	delete __ptr;
	.loc 15 95 9
	movq	24(%rbp), %rax	 # __ptr, __ptr.174_6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:95: 	delete __ptr;
	.loc 15 95 2
	testq	%rax, %rax	 # __ptr.174_6
	je	.L660	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:95: 	delete __ptr;
	.loc 15 95 2 is_stmt 0 discriminator 1
	movq	(%rax), %rdx	 # __ptr.174_6->_vptr._State, _1
	addq	$8, %rdx	 #, _2
	movq	(%rdx), %rdx	 # *_2, _3
	movq	%rax, %rcx	 # __ptr.174_6,
	call	*%rdx	 # _3
.LVL56:
.L660:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:96:       }
	.loc 15 96 7 is_stmt 1
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI779:
	ret	
.LFE12071:
	.seh_endproc
	.section	.text$_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
	.def	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE
_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE:
.LFB12158:
	.loc 12 252 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI780:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI781:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:260: 	return __dc::__cast(__d);
	.loc 12 260 21
	movq	16(%rbp), %rax	 # __d, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:261:       }
	.loc 12 261 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI782:
	ret	
.LFE12158:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE
	.def	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE
_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE:
.LFB12161:
	.loc 22 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI783:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI784:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI785:
	ret	
.LFE12161:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	.def	_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE:
.LFB12162:
	.loc 22 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI786:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI787:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI788:
	ret	
.LFE12162:
	.seh_endproc
	.section	.text$_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_,"x"
	.linkonce discard
	.globl	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_
	.def	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_
_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_:
.LFB12163:
	.loc 22 1386 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI789:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI790:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 22 1387 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 22 1387 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI791:
	ret	
.LFE12163:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev:
.LFB12165:
	.loc 22 430 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI792:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI793:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB282:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 22 431 15
	movq	16(%rbp), %rax	 # this, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev	 #
.LBE282:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 22 431 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI794:
	ret	
.LFE12165:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev
	.def	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev
_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev:
.LFB12168:
	.loc 22 189 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI795:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI796:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB283:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 22 190 9
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_head_impl
.LBE283:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 22 190 26
	nop	
	popq	%rbp	 #
.LCFI797:
	ret	
.LFE12168:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev
	.def	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev
_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev:
.LFB12171:
	.loc 22 279 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI798:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI799:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB284:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 22 280 29
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev	 #
.LBE284:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 22 280 33
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI800:
	ret	
.LFE12171:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	.def	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE:
.LFB12173:
	.loc 22 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI801:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI802:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI803:
	ret	
.LFE12173:
	.seh_endproc
	.section	.text$_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"x"
	.linkonce discard
	.globl	_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.def	_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_:
.LFB12174:
	.loc 22 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI804:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI805:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 36
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI806:
	ret	
.LFE12174:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2ILb1ELb1EEEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2ILb1ELb1EEEv
_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2ILb1ELb1EEEv:
.LFB12176:
	.loc 22 1049 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI807:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI808:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB285:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 22 1051 15
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2Ev	 #
.LBE285:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 22 1051 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI809:
	ret	
.LFE12176:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA12176:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE12176-.LLSDACSB12176
.LLSDACSB12176:
.LLSDACSE12176:
	.text
	.seh_endproc
	.def	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC1ILb1ELb1EEEv;	.scl	3;	.type	32;	.endef
	.set	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC1ILb1ELb1EEEv,_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2ILb1ELb1EEEv
	.align 2
	.def	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEPS3_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEPS3_
_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEPS3_:
.LFB12180:
	.loc 15 233 40
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI810:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI811:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.215414, D.215414
.LBB286:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:233:       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
	.loc 15 233 40
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # D.215414, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2EPS3_	 #
.LBE286:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI812:
	ret	
.LFE12180:
	.seh_endproc
	.def	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEPS3_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEPS3_,_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI2St15__uniq_ptr_implIS3_S6_EEPS3_
	.align 2
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IPS3_S6_vbEET_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IPS3_S6_vbEET_
_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IPS3_S6_vbEET_:
.LFB12182:
	.loc 15 598 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI813:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI814:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
.LBB287:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:599: 	: _M_t(__p)
	.loc 15 599 4
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __p, tmp83
	movq	%rax, %rcx	 # _1,
	call	_ZNSt15__uniq_ptr_dataINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_ELb1ELb1EECI1St15__uniq_ptr_implIS3_S6_EEPS3_	 #
.LBE287:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:600:         { }
	.loc 15 600 11
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI815:
	ret	
.LFE12182:
	.seh_endproc
	.def	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IPS3_S6_vbEET_;	.scl	3;	.type	32;	.endef
	.set	_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC1IPS3_S6_vbEET_,_ZNSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEC2IPS3_S6_vbEET_
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE5resetEPS3_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE5resetEPS3_
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE5resetEPS3_:
.LFB12184:
	.loc 15 198 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI816:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI817:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI818:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI819:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:200: 	const pointer __old_p = _M_ptr();
	.loc 15 200 32
	movq	32(%rbp), %rax	 # this, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:200: 	const pointer __old_p = _M_ptr();
	.loc 15 200 16
	movq	(%rax), %rax	 # *_1, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __old_p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 15 201 11
	movq	40(%rbp), %rbx	 # __p, __p.114_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 15 201 8
	movq	32(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:201: 	_M_ptr() = __p;
	.loc 15 201 11
	movq	%rbx, (%rax)	 # __p.114_2, *_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:202: 	if (__old_p)
	.loc 15 202 2
	cmpq	$0, -8(%rbp)	 #, __old_p
	je	.L681	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:203: 	  _M_deleter()(__old_p);
	.loc 15 203 14
	movq	32(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE10_M_deleterEv	 #
	movq	%rax, %rcx	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:203: 	  _M_deleter()(__old_p);
	.loc 15 203 16
	movq	-8(%rbp), %rax	 # __old_p, tmp90
	movq	%rax, %rdx	 # tmp90,
	call	_ZNKSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEclIS3_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS4_E5valueEvE4typeEPS9_	 #
.L681:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:204:       }
	.loc 15 204 7
	nop	
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI820:
	popq	%rbp	 #
.LCFI821:
	ret	
.LFE12184:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE7releaseEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE7releaseEv
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE7releaseEv:
.LFB12185:
	.loc 15 207 15
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI822:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI823:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:209: 	pointer __p = _M_ptr();
	.loc 15 209 22
	movq	16(%rbp), %rax	 # this, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:209: 	pointer __p = _M_ptr();
	.loc 15 209 10
	movq	(%rax), %rax	 # *_1, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __p
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:210: 	_M_ptr() = nullptr;
	.loc 15 210 8
	movq	16(%rbp), %rax	 # this, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:210: 	_M_ptr() = nullptr;
	.loc 15 210 11
	movq	$0, (%rax)	 #, *_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:211: 	return __p;
	.loc 15 211 9
	movq	-8(%rbp), %rax	 # __p, _9
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:212:       }
	.loc 15 212 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI824:
	ret	
.LFE12185:
	.seh_endproc
	.def	_ZSt7forwardISt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEOT_RNSt16remove_referenceIS7_E4typeE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt7forwardISt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEOT_RNSt16remove_referenceIS7_E4typeE
_ZSt7forwardISt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEOT_RNSt16remove_referenceIS7_E4typeE:
.LFB12186:
	.loc 18 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI825:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI826:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 18 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 18 78 39
	popq	%rbp	 #
.LCFI827:
	ret	
.LFE12186:
	.seh_endproc
	.def	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE
_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE:
.LFB12187:
	.loc 22 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI828:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI829:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERS8_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI830:
	ret	
.LFE12187:
	.seh_endproc
	.def	_ZSt3getILy1EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt3getILy1EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_
_ZSt3getILy1EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_:
.LFB12188:
	.loc 22 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI831:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI832:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 36
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt12__get_helperILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI833:
	ret	
.LFE12188:
	.seh_endproc
	.section	.text$_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,"x"
	.linkonce discard
	.globl	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
	.def	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_:
.LFB12189:
	.loc 22 1386 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI834:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI835:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 22 1387 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 22 1387 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI836:
	ret	
.LFE12189:
	.seh_endproc
	.section	.text$_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_,"x"
	.linkonce discard
	.globl	_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_
	.def	_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_
_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_:
.LFB12190:
	.loc 18 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI837:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI838:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 77
	popq	%rbp	 #
.LCFI839:
	ret	
.LFE12190:
	.seh_endproc
	.text
	.align 2
	.def	_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv
_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv:
.LFB12192:
	.loc 17 188 25
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI840:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI841:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __closure, __closure
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:190: 	    return __phase.load(memory_order_acquire) != __old_phase;
	.loc 17 190 25
	movq	16(%rbp), %rax	 # __closure, _1
	movl	$2, %edx	 #,
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:188: 	auto const __test_fn = [=]
	.loc 17 188 25
	movq	16(%rbp), %rdx	 # __closure, tmp87
	movzbl	8(%rdx), %edx	 # __closure_4(D)->____old_phase, _3
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:190: 	    return __phase.load(memory_order_acquire) != __old_phase;
	.loc 17 190 51
	cmpb	%dl, %al	 # _3, _2
	setne	%al	 #, _7
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:188: 	auto const __test_fn = [=]
	.loc 17 188 25
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI842:
	ret	
.LFE12192:
	.seh_endproc
	.align 2
	.def	_ZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_t;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_t
_ZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_t:
.LFB12191:
	.loc 17 185 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI843:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI844:
	subq	$80, %rsp	 #,
	.seh_stackalloc	80
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __old_phase, __old_phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:187: 	__atomic_phase_const_ref_t __phase(_M_phase);
	.loc 17 187 37
	movq	16(%rbp), %rax	 # this, tmp85
	leaq	48(%rax), %rdx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:187: 	__atomic_phase_const_ref_t __phase(_M_phase);
	.loc 17 187 29
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:188: 	auto const __test_fn = [=]
	.loc 17 188 13
	movq	-8(%rbp), %rax	 # __phase, tmp87
	movq	%rax, -32(%rbp)	 # tmp87, __test_fn.____phase
	movq	24(%rbp), %rax	 # __old_phase, tmp88
	movzbl	(%rax), %eax	 # *__old_phase_8(D), _2
	movb	%al, -24(%rbp)	 # _2, __test_fn.____old_phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:192: 	std::__atomic_wait_address(&_M_phase, __test_fn);
	.loc 17 192 28
	movq	16(%rbp), %rax	 # this, tmp89
	leaq	48(%rax), %rcx	 #, _3
	movq	-32(%rbp), %rax	 # __test_fn, tmp90
	movq	-24(%rbp), %rdx	 # __test_fn,
	movq	%rax, -48(%rbp)	 # tmp90,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %rax	 #, tmp91
	movq	%rax, %rdx	 # tmp91,
	call	_ZSt21__atomic_wait_addressISt17__barrier_phase_tZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOS0_EUlvE_EvPKT_T0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:193:       }
	.loc 17 193 7
	nop	
	addq	$80, %rsp	 #,
	popq	%rbp	 #
.LCFI845:
	ret	
.LFE12191:
	.seh_endproc
	.align 2
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E6arriveEx;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E6arriveEx
_ZNSt14__tree_barrierIZ7WinMainEUlvE_E6arriveEx:
.LFB12193:
	.loc 17 162 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI846:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI847:
	addq	$-128, %rsp	 #,
	.seh_stackalloc	128
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __update, __update
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:165: 	size_t __current = __hasher(std::this_thread::get_id());
	.loc 17 165 54
	call	_ZNSt11this_thread6get_idEv	 #
	movq	%rax, -72(%rbp)	 # tmp108, D.234507
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:165: 	size_t __current = __hasher(std::this_thread::get_id());
	.loc 17 165 29
	leaq	-72(%rbp), %rdx	 #, tmp109
	leaq	-73(%rbp), %rax	 #, tmp110
	movq	%rax, %rcx	 # tmp110,
	call	_ZNKSt4hashINSt6thread2idEEclERKS1_	 #
	movq	%rax, -8(%rbp)	 # tmp111, __current
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:166: 	__atomic_phase_ref_t __phase(_M_phase);
	.loc 17 166 31
	movq	16(%rbp), %rax	 # this, tmp112
	leaq	48(%rax), %rdx	 #, _1
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:166: 	__atomic_phase_ref_t __phase(_M_phase);
	.loc 17 166 23
	leaq	-88(%rbp), %rax	 #, tmp113
	movq	%rax, %rcx	 # tmp113,
	call	_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:167: 	const auto __old_phase = __phase.load(memory_order_relaxed);
	.loc 17 167 39
	leaq	-88(%rbp), %rax	 #, tmp114
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp114,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order	 #
	movb	%al, -9(%rbp)	 # tmp115, __old_phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:168: 	const auto __cur = static_cast<unsigned char>(__old_phase);
	.loc 17 168 13
	movzbl	-9(%rbp), %eax	 # __old_phase, tmp116
	movb	%al, -10(%rbp)	 # tmp116, __cur
.LBB288:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:169: 	for(; __update; --__update)
	.loc 17 169 2
	jmp	.L698	 #
.L716:
.LBB289:
.LBB290:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:171: 	    if(_M_arrive(__old_phase, __current))
	.loc 17 171 18
	movq	-8(%rbp), %rcx	 # __current, tmp117
	movzbl	-9(%rbp), %edx	 # __old_phase, tmp118
	movq	16(%rbp), %rax	 # this, tmp119
	movq	%rcx, %r8	 # tmp117,
	movq	%rax, %rcx	 # tmp119,
	call	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E9_M_arriveESt17__barrier_phase_ty	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:171: 	    if(_M_arrive(__old_phase, __current))
	.loc 17 171 6
	testb	%al, %al	 # _26
	je	.L699	 #,
.LBB291:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:173: 		_M_completion();
	.loc 17 173 16
	movq	16(%rbp), %rax	 # this, tmp120
	addq	$24, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
	call	_ZZ7WinMainENKUlvE_clEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:174: 		_M_expected += _M_expected_adjustment.load(memory_order_relaxed);
	.loc 17 174 45
	movq	16(%rbp), %rax	 # this, tmp121
	addq	$16, %rax	 #, _3
	movq	%rax, -56(%rbp)	 # _3, this
	movl	$0, -60(%rbp)	 #, __m
.LBB292:
.LBB293:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:484: 	  = __m & __memory_order_mask;
	.loc 9 484 10
	movl	-60(%rbp), %eax	 # __m, tmp122
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp122,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, -64(%rbp)	 # tmp123, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:485: 	__glibcxx_assert(__b != memory_order_release);
	.loc 9 485 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _62
	je	.L700	 #,
	cmpl	$3, -64(%rbp)	 #, __b
	jne	.L700	 #,
	movl	$1, %eax	 #, iftmp.143_63
	jmp	.L701	 #
.L700:
	movl	$0, %eax	 #, iftmp.143_63
.L701:
	testb	%al, %al	 # iftmp.143_63
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:486: 	__glibcxx_assert(__b != memory_order_acq_rel);
	.loc 9 486 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _67
	je	.L703	 #,
	cmpl	$4, -64(%rbp)	 #, __b
	jne	.L703	 #,
	movl	$1, %eax	 #, iftmp.145_68
	jmp	.L704	 #
.L703:
	movl	$0, %eax	 #, iftmp.145_68
.L704:
	testb	%al, %al	 # iftmp.145_68
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 9 488 25
	movq	-56(%rbp), %rax	 # this, _72
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 9 488 24
	movq	(%rax), %rax	 #* _72, _73
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:488: 	return __atomic_load_n(&_M_i, int(__m));
	.loc 9 488 40
	movq	%rax, %rdx	 # _73, D.237802
.LBE293:
.LBE292:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:174: 		_M_expected += _M_expected_adjustment.load(memory_order_relaxed);
	.loc 17 174 3
	movq	16(%rbp), %rax	 # this, tmp124
	movq	(%rax), %rax	 # this_16(D)->_M_expected, _4
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:174: 		_M_expected += _M_expected_adjustment.load(memory_order_relaxed);
	.loc 17 174 15
	addq	%rax, %rdx	 # _4, _5
	movq	16(%rbp), %rax	 # this, tmp125
	movq	%rdx, (%rax)	 # _5, this_16(D)->_M_expected
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:175: 		_M_expected_adjustment.store(0, memory_order_relaxed);
	.loc 17 175 31
	movq	16(%rbp), %rax	 # this, tmp126
	addq	$16, %rax	 #, _6
	movq	%rax, -32(%rbp)	 # _6, this
	movq	$0, -40(%rbp)	 #, __i
	movl	$0, -44(%rbp)	 #, __m
.LBB294:
.LBB295:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:459: 	  = __m & __memory_order_mask;
	.loc 9 459 10
	movl	-44(%rbp), %eax	 # __m, tmp127
	movl	$65535, %edx	 #,
	movl	%eax, %ecx	 # tmp127,
	call	_ZStanSt12memory_orderSt23__memory_order_modifier	 #
	movl	%eax, -48(%rbp)	 # tmp128, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:460: 	__glibcxx_assert(__b != memory_order_acquire);
	.loc 9 460 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _42
	je	.L707	 #,
	cmpl	$2, -48(%rbp)	 #, __b
	jne	.L707	 #,
	movl	$1, %eax	 #, iftmp.147_43
	jmp	.L708	 #
.L707:
	movl	$0, %eax	 #, iftmp.147_43
.L708:
	testb	%al, %al	 # iftmp.147_43
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:461: 	__glibcxx_assert(__b != memory_order_acq_rel);
	.loc 9 461 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _47
	je	.L710	 #,
	cmpl	$4, -48(%rbp)	 #, __b
	jne	.L710	 #,
	movl	$1, %eax	 #, iftmp.149_48
	jmp	.L711	 #
.L710:
	movl	$0, %eax	 #, iftmp.149_48
.L711:
	testb	%al, %al	 # iftmp.149_48
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:462: 	__glibcxx_assert(__b != memory_order_consume);
	.loc 9 462 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _52
	je	.L713	 #,
	cmpl	$1, -48(%rbp)	 #, __b
	jne	.L713	 #,
	movl	$1, %eax	 #, iftmp.151_53
	jmp	.L714	 #
.L713:
	movl	$0, %eax	 #, iftmp.151_53
.L714:
	testb	%al, %al	 # iftmp.151_53
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 9 464 18
	movq	-40(%rbp), %rdx	 # __i, __i.152_57
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 9 464 19
	movq	-32(%rbp), %rax	 # this, _58
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:464: 	__atomic_store_n(&_M_i, __i, int(__m));
	.loc 9 464 18
	xchgq	(%rax), %rdx	 #,* _58, tmp129
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:465:       }
	.loc 9 465 7
	nop	
.LBE295:
.LBE294:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:176: 		auto __new_phase = static_cast<__barrier_phase_t>(__cur + 2);
	.loc 17 176 8
	movzbl	-10(%rbp), %eax	 # __cur, tmp133
	addl	$2, %eax	 #, tmp132
	movb	%al, -11(%rbp)	 # tmp132, __new_phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:177: 		__phase.store(__new_phase, memory_order_release);
	.loc 17 177 16
	movzbl	-11(%rbp), %edx	 # __new_phase, tmp134
	leaq	-88(%rbp), %rax	 #, tmp135
	movl	$3, %r8d	 #,
	movq	%rax, %rcx	 # tmp135,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order	 #
.LBB296:
.LBB297:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1462:       { __atomic_impl::notify_all(_M_ptr); }
	.loc 9 1462 35
	movq	-88(%rbp), %rax	 # __phase._M_ptr, _36
	movq	%rax, -24(%rbp)	 # _36, __ptr
.LBB298:
.LBB299:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1032:       { std::__atomic_notify_address(__ptr, true); }
	.loc 9 1032 37
	movq	-24(%rbp), %rax	 # __ptr, tmp136
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # tmp136,
	call	_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1032:       { std::__atomic_notify_address(__ptr, true); }
	.loc 9 1032 52
	nop	
.LBE299:
.LBE298:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1462:       { __atomic_impl::notify_all(_M_ptr); }
	.loc 9 1462 44
	nop	
.L699:
.LBE297:
.LBE296:
.LBE291:
.LBE290:
.LBE289:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:169: 	for(; __update; --__update)
	.loc 17 169 2
	subq	$1, 24(%rbp)	 #, __update
.L698:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:169: 	for(; __update; --__update)
	.loc 17 169 8 discriminator 1
	cmpq	$0, 24(%rbp)	 #, __update
	jne	.L716	 #,
.LBE288:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:181: 	return __old_phase;
	.loc 17 181 9
	movzbl	-9(%rbp), %eax	 # __old_phase, _22
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:182:       }
	.loc 17 182 7
	subq	$-128, %rsp	 #,
	popq	%rbp	 #
.LCFI848:
	ret	
.LFE12193:
	.seh_endproc
	.align 2
	.def	_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC2ESt17__barrier_phase_t;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC2ESt17__barrier_phase_t
_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC2ESt17__barrier_phase_t:
.LFB12195:
	.loc 17 222 11
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI849:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI850:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __tok, tmp82
	movb	%al, 24(%rbp)	 # tmp83, __tok
.LBB300:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:222: 	explicit arrival_token(__token __tok) noexcept : _M_tok(__tok) { }
	.loc 17 222 51
	movq	16(%rbp), %rax	 # this, tmp84
	movzbl	24(%rbp), %edx	 # __tok, tmp85
	movb	%dl, (%rax)	 # tmp85, this_2(D)->_M_tok
.LBE300:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:222: 	explicit arrival_token(__token __tok) noexcept : _M_tok(__tok) { }
	.loc 17 222 67
	nop	
	popq	%rbp	 #
.LCFI851:
	ret	
.LFE12195:
	.seh_endproc
	.def	_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC1ESt17__barrier_phase_t;	.scl	3;	.type	32;	.endef
	.set	_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC1ESt17__barrier_phase_t,_ZNSt7barrierIZ7WinMainEUlvE_E13arrival_tokenC2ESt17__barrier_phase_t
	.align 2
	.def	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EEC2IS0_EEOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EEC2IS0_EEOT_
_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EEC2IS0_EEOT_:
.LFB12198:
	.loc 22 440 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI852:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI853:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI854:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI855:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __head, __head
.LBB301:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:441: 	: _Base(std::forward<_UHead>(__head))
	.loc 22 441 38
	movq	32(%rbp), %rbx	 # this, _1
	movq	40(%rbp), %rax	 # __head, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _2,
	movq	%rbx, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EEC2IS0_EEOT_	 #
.LBE301:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:442: 	{ }
	.loc 22 442 4
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI856:
	popq	%rbp	 #
.LCFI857:
	ret	
.LFE12198:
	.seh_endproc
	.section	.text$_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv
	.def	_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv
_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv:
.LFB12202:
	.loc 22 1049 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI858:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI859:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB302:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 22 1051 15
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev	 #
.LBE302:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1051: 	: _Inherited() { }
	.loc 22 1051 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI860:
	ret	
.LFE12202:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA12202:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE12202-.LLSDACSB12202
.LLSDACSB12202:
.LLSDACSE12202:
	.section	.text$_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"x"
	.linkonce discard
	.globl	_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.def	_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_:
.LFB12203:
	.loc 22 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI861:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI862:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI863:
	ret	
.LFE12203:
	.seh_endproc
	.section	.text$_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv
	.def	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv
_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv:
.LFB12204:
	.loc 15 193 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI864:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI865:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 61
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 60
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:193:       _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
	.loc 15 193 68
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI866:
	ret	
.LFE12204:
	.seh_endproc
	.section	.text$_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE,"x"
	.linkonce discard
	.globl	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE
	.def	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE
_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE:
.LFB12241:
	.loc 12 221 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI867:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI868:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __d, __d
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 12 225 34
	movq	16(%rbp), %rax	 # __d, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 12 225 38
	imulq	$1000, %rax, %rax	 #, _1, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 12 224 20
	movq	%rax, -8(%rbp)	 # _2, D.234905
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:224: 	    return _ToDur(static_cast<__to_rep>(
	.loc 12 224 13
	leaq	-8(%rbp), %rdx	 #, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:225: 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
	.loc 12 225 67
	movq	-16(%rbp), %rax	 # D.234906, D.236851
 # C:/msys64/mingw64/include/c++/12.2.0/bits/chrono.h:226: 	  }
	.loc 12 226 4
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI869:
	ret	
.LFE12241:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_
	.def	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_
_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_:
.LFB12243:
	.loc 22 268 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI870:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI871:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 268 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 268 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI872:
	ret	
.LFE12243:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_:
.LFB12244:
	.loc 22 424 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI873:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI874:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 424 65
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 424 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI875:
	ret	
.LFE12244:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE
	.def	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE
_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE:
.LFB12245:
	.loc 22 1369 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI876:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI877:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1370 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1370 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI878:
	ret	
.LFE12245:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev
_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev:
.LFB12247:
	.loc 22 80 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI879:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI880:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:81:       : _M_head_impl() { }
	.loc 22 81 26
	nop	
	popq	%rbp	 #
.LCFI881:
	ret	
.LFE12247:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev:
.LFB12250:
	.loc 22 430 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI882:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI883:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB303:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 22 431 15
	movq	16(%rbp), %rax	 # this, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev	 #
.LBE303:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 22 431 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI884:
	ret	
.LFE12250:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev
	.def	_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev
_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev:
.LFB12253:
	.loc 22 189 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI885:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI886:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB304:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 22 190 9
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_head_impl
.LBE304:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 22 190 26
	nop	
	popq	%rbp	 #
.LCFI887:
	ret	
.LFE12253:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_
	.def	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_
_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_:
.LFB12255:
	.loc 22 268 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI888:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI889:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 268 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 268 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI890:
	ret	
.LFE12255:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	.def	_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE:
.LFB12256:
	.loc 22 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI891:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI892:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI893:
	ret	
.LFE12256:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2Ev
_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC2Ev:
.LFB12258:
	.loc 22 279 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI894:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI895:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB305:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 22 280 29
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EEC2Ev	 #
.LBE305:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 22 280 33
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI896:
	ret	
.LFE12258:
	.seh_endproc
	.align 2
	.def	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2EPS3_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2EPS3_
_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEC2EPS3_:
.LFB12261:
	.loc 15 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI897:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI898:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI899:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI900:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __p, __p
.LBB306:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 38
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt5tupleIJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEEC1ILb1ELb1EEEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 56
	movq	40(%rbp), %rbx	 # __p, __p.113_2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 53
	movq	32(%rbp), %rax	 # this, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 56
	movq	%rbx, (%rax)	 # __p.113_2, *_3
.LBE306:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:168:       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
	.loc 15 168 63
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI901:
	popq	%rbp	 #
.LCFI902:
	ret	
.LFE12261:
	.seh_endproc
	.def	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERS8_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERS8_
_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERS8_:
.LFB12263:
	.loc 22 268 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI903:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI904:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 268 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 268 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI905:
	ret	
.LFE12263:
	.seh_endproc
	.def	_ZSt12__get_helperILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE
_ZSt12__get_helperILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE:
.LFB12264:
	.loc 22 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI906:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI907:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEE7_M_headERS7_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI908:
	ret	
.LFE12264:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	.def	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE:
.LFB12265:
	.loc 22 1369 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI909:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI910:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1370 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1370 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI911:
	ret	
.LFE12265:
	.seh_endproc
	.section	.text$_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_
	.def	_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_
_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_:
.LFB12268:
	.loc 9 1378 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI912:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI913:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __t, __t
.LBB307:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1378:       __atomic_ref(_Tp& __t) : _M_ptr(std::__addressof(__t))
	.loc 9 1378 55
	movq	24(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1378:       __atomic_ref(_Tp& __t) : _M_ptr(std::__addressof(__t))
	.loc 9 1378 32
	movq	16(%rbp), %rdx	 # this, tmp85
	movq	%rax, (%rdx)	 # _1, this_3(D)->_M_ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1379:       { __glibcxx_assert(((uintptr_t)_M_ptr % required_alignment) == 0); }
	.loc 9 1379 9
	call	__is_constant_evaluated	 #
	movl	$0, %eax	 #, retval.169_9
	testb	%al, %al	 # retval.169_9
.LBE307:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1379:       { __glibcxx_assert(((uintptr_t)_M_ptr % required_alignment) == 0); }
	.loc 9 1379 74
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI914:
	ret	
.LFE12268:
	.seh_endproc
	.section	.text$_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order
	.def	_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order
_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order:
.LFB12269:
	.loc 9 1401 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI915:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI916:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, 24(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1402:       { return __atomic_impl::load(_M_ptr, __m); }
	.loc 9 1402 36
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rax	 # this_3(D)->_M_ptr, _1
	movq	%rax, -8(%rbp)	 # _1, __ptr
	movl	24(%rbp), %eax	 # __m, tmp87
	movl	%eax, -12(%rbp)	 # tmp87, __m
.LBB308:
.LBB309:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:969: 	auto* __dest = reinterpret_cast<_Val<_Tp>*>(__buf);
	.loc 9 969 8
	leaq	-25(%rbp), %rax	 #, tmp88
	movq	%rax, -24(%rbp)	 # tmp88, __dest
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:970: 	__atomic_load(__ptr, __dest, int(__m));
	.loc 9 970 15
	movq	-8(%rbp), %rax	 # __ptr, tmp89
	movzbl	(%rax), %edx	 #, _9
	movq	-24(%rbp), %rax	 # __dest, tmp90
	movb	%dl, (%rax)	 # _9, *__dest_8
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:971: 	return *__dest;
	.loc 9 971 10
	movq	-24(%rbp), %rax	 # __dest, tmp91
	movzbl	(%rax), %eax	 # *__dest_8, D.237723
.LBE309:
.LBE308:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1402:       { return __atomic_impl::load(_M_ptr, __m); }
	.loc 9 1402 50
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI917:
	ret	
.LFE12269:
	.seh_endproc
	.text
	.def	_ZSt21__atomic_wait_addressISt17__barrier_phase_tZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOS0_EUlvE_EvPKT_T0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt21__atomic_wait_addressISt17__barrier_phase_tZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOS0_EUlvE_EvPKT_T0_
_ZSt21__atomic_wait_addressISt17__barrier_phase_tZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOS0_EUlvE_EvPKT_T0_:
.LFB12270:
	.loc 8 428 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI918:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI919:
	subq	$88, %rsp	 #,
	.seh_stackalloc	88
.LCFI920:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI921:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __addr, __addr
	movq	%rdx, %rbx	 #, tmp82
	movq	(%rbx), %rax	 # __pred, tmp83
	movq	8(%rbx), %rdx	 # __pred,
	movq	%rax, -32(%rbp)	 # tmp83, __pred
	movq	%rdx, -24(%rbp)	 #, __pred
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:430:       __detail::__enters_wait __w(__addr);
	.loc 8 430 31
	movq	32(%rbp), %rdx	 # __addr, tmp84
	leaq	-16(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:431:       __w._M_do_wait(__pred);
	.loc 8 431 21
	movq	-32(%rbp), %rax	 # __pred, tmp86
	movq	-24(%rbp), %rdx	 # __pred,
	movq	%rax, -48(%rbp)	 # tmp86,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %rdx	 #, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEE10_M_do_waitIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_EEvT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:432:     }
	.loc 8 432 5
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev	 #
	nop	
	addq	$88, %rsp	 #,
	popq	%rbx	 #
.LCFI922:
	popq	%rbp	 #
.LCFI923:
	ret	
.LFE12270:
	.seh_endproc
	.section	.text$_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_
	.def	_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_
_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_:
.LFB12273:
	.loc 9 1378 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI924:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI925:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __t, __t
.LBB310:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1378:       __atomic_ref(_Tp& __t) : _M_ptr(std::__addressof(__t))
	.loc 9 1378 55
	movq	24(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1378:       __atomic_ref(_Tp& __t) : _M_ptr(std::__addressof(__t))
	.loc 9 1378 32
	movq	16(%rbp), %rdx	 # this, tmp85
	movq	%rax, (%rdx)	 # _1, this_3(D)->_M_ptr
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1379:       { __glibcxx_assert(((uintptr_t)_M_ptr % required_alignment) == 0); }
	.loc 9 1379 9
	call	__is_constant_evaluated	 #
	movl	$0, %eax	 #, retval.123_9
	testb	%al, %al	 # retval.123_9
.LBE310:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1379:       { __glibcxx_assert(((uintptr_t)_M_ptr % required_alignment) == 0); }
	.loc 9 1379 74
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI926:
	ret	
.LFE12273:
	.seh_endproc
	.section	.text$_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order
	.def	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order
_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order:
.LFB12274:
	.loc 9 1401 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI927:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI928:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, 24(%rbp)	 # __m, __m
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1402:       { return __atomic_impl::load(_M_ptr, __m); }
	.loc 9 1402 36
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rax	 # this_3(D)->_M_ptr, _1
	movq	%rax, -8(%rbp)	 # _1, __ptr
	movl	24(%rbp), %eax	 # __m, tmp87
	movl	%eax, -12(%rbp)	 # tmp87, __m
.LBB311:
.LBB312:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:969: 	auto* __dest = reinterpret_cast<_Val<_Tp>*>(__buf);
	.loc 9 969 8
	leaq	-25(%rbp), %rax	 #, tmp88
	movq	%rax, -24(%rbp)	 # tmp88, __dest
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:970: 	__atomic_load(__ptr, __dest, int(__m));
	.loc 9 970 15
	movq	-8(%rbp), %rax	 # __ptr, tmp89
	movzbl	(%rax), %edx	 #, _9
	movq	-24(%rbp), %rax	 # __dest, tmp90
	movb	%dl, (%rax)	 # _9, *__dest_8
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:971: 	return *__dest;
	.loc 9 971 10
	movq	-24(%rbp), %rax	 # __dest, tmp91
	movzbl	(%rax), %eax	 # *__dest_8, D.237716
.LBE312:
.LBE311:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1402:       { return __atomic_impl::load(_M_ptr, __m); }
	.loc 9 1402 50
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI929:
	ret	
.LFE12274:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E9_M_arriveESt17__barrier_phase_ty;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt14__tree_barrierIZ7WinMainEUlvE_E9_M_arriveESt17__barrier_phase_ty
_ZNSt14__tree_barrierIZ7WinMainEUlvE_E9_M_arriveESt17__barrier_phase_ty:
.LFB12275:
	.loc 17 97 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI930:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI931:
	subq	$80, %rsp	 #,
	.seh_stackalloc	80
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __old_phase, tmp100
	movq	%r8, 32(%rbp)	 # __current, __current
	movb	%al, 24(%rbp)	 # tmp101, __old_phase
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:99: 	const auto __old_phase_val = static_cast<unsigned char>(__old_phase);
	.loc 17 99 13
	movzbl	24(%rbp), %eax	 # __old_phase, tmp102
	movb	%al, -13(%rbp)	 # tmp102, __old_phase_val
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:100: 	const auto __half_step =
	.loc 17 100 13
	movzbl	-13(%rbp), %eax	 # __old_phase_val, tmp106
	addl	$1, %eax	 #, tmp105
	movb	%al, -14(%rbp)	 # tmp105, __half_step
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:102: 	const auto __full_step =
	.loc 17 102 13
	movzbl	-13(%rbp), %eax	 # __old_phase_val, tmp110
	addl	$2, %eax	 #, tmp109
	movb	%al, -15(%rbp)	 # tmp109, __full_step
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:105: 	size_t __current_expected = _M_expected;
	.loc 17 105 30
	movq	16(%rbp), %rax	 # this, tmp111
	movq	(%rax), %rax	 # this_30(D)->_M_expected, _1
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:105: 	size_t __current_expected = _M_expected;
	.loc 17 105 9
	movq	%rax, -8(%rbp)	 # _1, __current_expected
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:106: 	__current %= ((_M_expected + 1) >> 1);
	.loc 17 106 17
	movq	16(%rbp), %rax	 # this, tmp112
	movq	(%rax), %rax	 # this_30(D)->_M_expected, _2
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:106: 	__current %= ((_M_expected + 1) >> 1);
	.loc 17 106 29
	addq	$1, %rax	 #, _3
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:106: 	__current %= ((_M_expected + 1) >> 1);
	.loc 17 106 34
	sarq	%rax	 # _4
	movq	%rax, %rcx	 # _4, _5
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:106: 	__current %= ((_M_expected + 1) >> 1);
	.loc 17 106 12
	movq	32(%rbp), %rax	 # __current, tmp114
	movl	$0, %edx	 #, tmp115
	divq	%rcx	 # _5
	movq	%rdx, 32(%rbp)	 # tmp115, __current
.LBB313:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:108: 	for (int __round = 0; ; ++__round)
	.loc 17 108 11
	movl	$0, -12(%rbp)	 #, __round
.L769:
.LBB314:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:110: 	    if (__current_expected <= 1)
	.loc 17 110 6
	cmpq	$1, -8(%rbp)	 #, __current_expected
	ja	.L760	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:111: 		return true;
	.loc 17 111 10
	movl	$1, %eax	 #, _19
	jmp	.L761	 #
.L760:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:112: 	    size_t const __end_node = ((__current_expected + 1) >> 1),
	.loc 17 112 53
	movq	-8(%rbp), %rax	 # __current_expected, tmp117
	addq	$1, %rax	 #, _6
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:112: 	    size_t const __end_node = ((__current_expected + 1) >> 1),
	.loc 17 112 19
	shrq	%rax	 # tmp118
	movq	%rax, -24(%rbp)	 # tmp118, __end_node
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:113: 			 __last_node = __end_node - 1;
	.loc 17 113 5
	movq	-24(%rbp), %rax	 # __end_node, tmp122
	subq	$1, %rax	 #, tmp121
	movq	%rax, -32(%rbp)	 # tmp121, __last_node
.L768:
.LBB315:
.LBB316:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:116: 		if (__current == __end_node)
	.loc 17 116 3
	movq	32(%rbp), %rax	 # __current, tmp123
	cmpq	-24(%rbp), %rax	 # __end_node, tmp123
	jne	.L762	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:117: 		  __current = 0;
	.loc 17 117 15
	movq	$0, 32(%rbp)	 #, __current
.L762:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:118: 		auto __expect = __old_phase;
	.loc 17 118 8
	movzbl	24(%rbp), %eax	 # __old_phase, tmp124
	movb	%al, -33(%rbp)	 # tmp124, __expect
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:119: 		__atomic_phase_ref_t __phase(_M_state[__current]
	.loc 17 119 40
	movq	16(%rbp), %rax	 # this, tmp125
	leaq	8(%rax), %rcx	 #, _7
	movq	32(%rbp), %rax	 # __current, tmp126
	movq	%rax, %rdx	 # tmp126,
	call	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEixEy	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:120: 						.__tickets[__round]);
	.loc 17 120 17
	movq	%rax, %rcx	 # _8, _9
	movl	-12(%rbp), %eax	 # __round, tmp127
	cltq
	movq	%rax, %rdx	 # _10,
	call	_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy	 #
	movq	%rax, %rdx	 #, _11
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:119: 		__atomic_phase_ref_t __phase(_M_state[__current]
	.loc 17 119 24
	leaq	-48(%rbp), %rax	 #, tmp128
	movq	%rax, %rcx	 # tmp128,
	call	_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:121: 		if (__current == __last_node && (__current_expected & 1))
	.loc 17 121 3
	movq	32(%rbp), %rax	 # __current, tmp129
	cmpq	-32(%rbp), %rax	 # __last_node, tmp129
	jne	.L763	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:121: 		if (__current == __last_node && (__current_expected & 1))
	.loc 17 121 55 discriminator 1
	movq	-8(%rbp), %rax	 # __current_expected, tmp130
	andl	$1, %eax	 #, _12
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:121: 		if (__current == __last_node && (__current_expected & 1))
	.loc 17 121 32 discriminator 1
	testq	%rax, %rax	 # _12
	je	.L763	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:123: 		    if (__phase.compare_exchange_strong(__expect, __full_step,
	.loc 17 123 42
	movzbl	-15(%rbp), %ecx	 # __full_step, tmp131
	leaq	-33(%rbp), %rdx	 #, tmp132
	leaq	-48(%rbp), %rax	 #, tmp133
	movl	$4, %r9d	 #,
	movl	%ecx, %r8d	 # tmp131,
	movq	%rax, %rcx	 # tmp133,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:123: 		    if (__phase.compare_exchange_strong(__expect, __full_step,
	.loc 17 123 7
	testb	%al, %al	 # retval.124_43
	je	.L766	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:125: 		      break;     // I'm 1 in 1, go to next __round
	.loc 17 125 9
	jmp	.L765	 #
.L763:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:127: 		else if (__phase.compare_exchange_strong(__expect, __half_step,
	.loc 17 127 43
	movzbl	-14(%rbp), %ecx	 # __half_step, tmp134
	leaq	-33(%rbp), %rdx	 #, tmp135
	leaq	-48(%rbp), %rax	 #, tmp136
	movl	$4, %r9d	 #,
	movl	%ecx, %r8d	 # tmp134,
	movq	%rax, %rcx	 # tmp136,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:127: 		else if (__phase.compare_exchange_strong(__expect, __half_step,
	.loc 17 127 8
	testb	%al, %al	 # retval.125_45
	je	.L767	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:130: 		    return false; // I'm 1 in 2, done with arrival
	.loc 17 130 14
	movl	$0, %eax	 #, _19
	jmp	.L761	 #
.L767:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:132: 		else if (__expect == __half_step)
	.loc 17 132 21
	movzbl	-33(%rbp), %eax	 # __expect, __expect.126_13
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:132: 		else if (__expect == __half_step)
	.loc 17 132 8
	cmpb	%al, -14(%rbp)	 # __expect.126_13, __half_step
	jne	.L766	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:134: 		    if (__phase.compare_exchange_strong(__expect, __full_step,
	.loc 17 134 42
	movzbl	-15(%rbp), %ecx	 # __full_step, tmp137
	leaq	-33(%rbp), %rdx	 #, tmp138
	leaq	-48(%rbp), %rax	 #, tmp139
	movl	$4, %r9d	 #,
	movl	%ecx, %r8d	 # tmp137,
	movq	%rax, %rcx	 # tmp139,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order	 #
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:134: 		    if (__phase.compare_exchange_strong(__expect, __full_step,
	.loc 17 134 7
	testb	%al, %al	 # retval.127_47
	jne	.L770	 #,
.L766:
.LBE316:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:114: 	    for ( ; ; ++__current)
	.loc 17 114 6 discriminator 1
	addq	$1, 32(%rbp)	 #, __current
	jmp	.L768	 #
.L770:
.LBB317:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:136: 		      break;    // I'm 2 in 2, go to next __round
	.loc 17 136 9
	nop	
.L765:
.LBE317:
.LBE315:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:139: 	    __current_expected = __last_node + 1;
	.loc 17 139 25
	movq	-32(%rbp), %rax	 # __last_node, tmp143
	addq	$1, %rax	 #, tmp142
	movq	%rax, -8(%rbp)	 # tmp142, __current_expected
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:140: 	    __current >>= 1;
	.loc 17 140 16
	shrq	32(%rbp)	 # __current
.LBE314:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:108: 	for (int __round = 0; ; ++__round)
	.loc 17 108 2
	addl	$1, -12(%rbp)	 #, __round
	jmp	.L769	 #
.L761:
.LBE313:
 # C:/msys64/mingw64/include/c++/12.2.0/barrier:142:       }
	.loc 17 142 7
	addq	$80, %rsp	 #,
	popq	%rbp	 #
.LCFI932:
	ret	
.LFE12275:
	.seh_endproc
	.section	.text$_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order
	.def	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order
_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order:
.LFB12278:
	.loc 9 1397 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI933:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI934:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __t, tmp86
	movl	%r8d, 32(%rbp)	 # __m, __m
	movb	%al, 24(%rbp)	 # tmp87, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1398:       { __atomic_impl::store(_M_ptr, __t, __m); }
	.loc 9 1398 30
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rax	 # this_3(D)->_M_ptr, _1
	movq	%rax, -8(%rbp)	 # _1, __ptr
	movzbl	24(%rbp), %eax	 # __t, tmp89
	movb	%al, -13(%rbp)	 # tmp89, __t
	movl	32(%rbp), %eax	 # __m, tmp90
	movl	%eax, -12(%rbp)	 # tmp90, __m
.LBB318:
.LBB319:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:962:       { __atomic_store(__ptr, std::__addressof(__t), int(__m)); }
	.loc 9 962 47
	leaq	-13(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:962:       { __atomic_store(__ptr, std::__addressof(__t), int(__m)); }
	.loc 9 962 23
	movzbl	(%rax), %eax	 # *_8, _9
	movzbl	%al, %edx	 # _9, _10
	movq	-8(%rbp), %rax	 # __ptr, tmp92
	xchgb	(%rax), %dl	 #,, tmp94
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:962:       { __atomic_store(__ptr, std::__addressof(__t), int(__m)); }
	.loc 9 962 65
	nop	
.LBE319:
.LBE318:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1398:       { __atomic_impl::store(_M_ptr, __t, __m); }
	.loc 9 1398 49
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI935:
	ret	
.LFE12278:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EEC2IS0_EEOT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EEC2IS0_EEOT_
_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EEC2IS0_EEOT_:
.LFB12281:
	.loc 22 199 19
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI936:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI937:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI938:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI939:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __h, __h
.LBB320:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:200: 	: _M_head_impl(std::forward<_UHead>(__h)) { }
	.loc 22 200 37
	movq	40(%rbp), %rax	 # __h, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:200: 	: _M_head_impl(std::forward<_UHead>(__h)) { }
	.loc 22 200 4
	movq	32(%rbp), %rdx	 # this, tmp84
	movq	(%rax), %rcx	 # *_1, tmp85
	movq	8(%rax), %rbx	 # *_1,
	movq	%rcx, (%rdx)	 # tmp85, this_3(D)->_M_head_impl
	movq	%rbx, 8(%rdx)	 #, this_3(D)->_M_head_impl
	movq	16(%rax), %rcx	 # *_1, tmp86
	movq	24(%rax), %rbx	 # *_1,
	movq	%rcx, 16(%rdx)	 # tmp86, this_3(D)->_M_head_impl
	movq	%rbx, 24(%rdx)	 #, this_3(D)->_M_head_impl
	movq	32(%rax), %rcx	 # *_1, tmp87
	movq	40(%rax), %rbx	 # *_1,
	movq	%rcx, 32(%rdx)	 # tmp87, this_3(D)->_M_head_impl
	movq	%rbx, 40(%rdx)	 #, this_3(D)->_M_head_impl
	movq	48(%rax), %rcx	 # *_1, tmp88
	movq	56(%rax), %rbx	 # *_1,
	movq	%rcx, 48(%rdx)	 # tmp88, this_3(D)->_M_head_impl
	movq	%rbx, 56(%rdx)	 #, this_3(D)->_M_head_impl
	movq	64(%rax), %rcx	 # *_1, tmp89
	movq	72(%rax), %rbx	 # *_1,
	movq	%rcx, 64(%rdx)	 # tmp89, this_3(D)->_M_head_impl
	movq	%rbx, 72(%rdx)	 #, this_3(D)->_M_head_impl
.LBE320:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:200: 	: _M_head_impl(std::forward<_UHead>(__h)) { }
	.loc 22 200 46
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI940:
	popq	%rbp	 #
.LCFI941:
	ret	
.LFE12281:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev
	.def	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev
_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev:
.LFB12284:
	.loc 22 279 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI942:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI943:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB321:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 22 280 29
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev	 #
.LBE321:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:280:       : _Inherited(), _Base() { }
	.loc 22 280 33
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI944:
	ret	
.LFE12284:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	.def	_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE:
.LFB12286:
	.loc 22 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI945:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI946:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI947:
	ret	
.LFE12286:
	.seh_endproc
	.section	.text$_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"x"
	.linkonce discard
	.globl	_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.def	_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_:
.LFB12287:
	.loc 22 1380 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI948:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI949:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 36
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1381:     { return std::__get_helper<__i>(__t); }
	.loc 22 1381 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI950:
	ret	
.LFE12287:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_
	.def	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_
_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_:
.LFB12305:
	.loc 22 233 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI951:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI952:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 233 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 233 68
	popq	%rbp	 #
.LCFI953:
	ret	
.LFE12305:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_
_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_:
.LFB12306:
	.loc 22 124 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI954:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI955:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 124 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 124 68
	popq	%rbp	 #
.LCFI956:
	ret	
.LFE12306:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_
	.def	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_
_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_:
.LFB12307:
	.loc 22 271 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI957:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI958:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 271 71
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 271 78
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI959:
	ret	
.LFE12307:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev
_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev:
.LFB12309:
	.loc 22 80 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI960:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI961:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:81:       : _M_head_impl() { }
	.loc 22 81 26
	nop	
	popq	%rbp	 #
.LCFI962:
	ret	
.LFE12309:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_
	.def	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_
_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_:
.LFB12311:
	.loc 22 233 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI963:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI964:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 233 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 233 68
	popq	%rbp	 #
.LCFI965:
	ret	
.LFE12311:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_:
.LFB12312:
	.loc 22 424 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI966:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI967:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 424 65
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 424 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI968:
	ret	
.LFE12312:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEEC2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEEC2Ev
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEEC2Ev:
.LFB12314:
	.loc 22 430 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI969:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI970:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB322:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 22 431 15
	movq	16(%rbp), %rax	 # this, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EEC2Ev	 #
.LBE322:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 22 431 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI971:
	ret	
.LFE12314:
	.seh_endproc
	.align 2
	.def	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EEC2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EEC2Ev
_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EEC2Ev:
.LFB12317:
	.loc 22 189 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI972:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI973:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB323:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 22 190 9
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_head_impl
.LBE323:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 22 190 26
	nop	
	popq	%rbp	 #
.LCFI974:
	ret	
.LFE12317:
	.seh_endproc
	.def	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERS5_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERS5_
_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERS5_:
.LFB12319:
	.loc 22 233 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI975:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI976:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 233 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 233 68
	popq	%rbp	 #
.LCFI977:
	ret	
.LFE12319:
	.seh_endproc
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEE7_M_headERS7_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEE7_M_headERS7_
_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEEEE7_M_headERS7_:
.LFB12320:
	.loc 22 424 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI978:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI979:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 424 65
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EE7_M_headERS7_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 424 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI980:
	ret	
.LFE12320:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_
	.def	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_
_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_:
.LFB12321:
	.loc 22 271 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI981:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI982:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 271 71
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 271 78
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI983:
	ret	
.LFE12321:
	.seh_endproc
	.section	.text$_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_,"x"
	.linkonce discard
	.globl	_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_
	.def	_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_
_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_:
.LFB12322:
	.loc 18 49 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI984:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI985:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __r, __r
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:50:     { return __builtin_addressof(__r); }
	.loc 18 50 37
	movq	16(%rbp), %rax	 # __r, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:50:     { return __builtin_addressof(__r); }
	.loc 18 50 40
	popq	%rbp	 #
.LCFI986:
	ret	
.LFE12322:
	.seh_endproc
	.section	.text$_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_
	.def	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_
_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_:
.LFB12326:
	.loc 8 371 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI987:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI988:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __addr, __addr
.LBB324:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:372: 	    : __base_type(__addr)
	.loc 8 372 26
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __addr, tmp85
	movq	%rax, %rcx	 # _1,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:375: 	      _M_w._M_enter_wait();
	.loc 8 375 8
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rax	 # this_5(D)->D.158324._M_w, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:375: 	      _M_w._M_enter_wait();
	.loc 8 375 26
	movq	%rax, %rcx	 # _3,
	call	_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv	 #
.LBE324:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:376: 	  }
	.loc 8 376 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI989:
	ret	
.LFE12326:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEE10_M_do_waitIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_EEvT_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEE10_M_do_waitIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_EEvT_
_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEE10_M_do_waitIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_EEvT_:
.LFB12327:
	.loc 8 400 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI990:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI991:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI992:
	subq	$80, %rsp	 #,
	.seh_stackalloc	80
.LCFI993:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI994:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, %rbx	 #, tmp90
	movq	(%rbx), %rax	 # __pred, tmp91
	movq	8(%rbx), %rdx	 # __pred,
	movq	%rax, -32(%rbp)	 # tmp91, __pred
	movq	%rdx, -24(%rbp)	 #, __pred
.L803:
.LBB325:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:405: 		if (__base_type::_M_do_spin(__pred, __val))
	.loc 8 405 30
	movq	32(%rbp), %rcx	 # this, _1
	movq	-32(%rbp), %rax	 # __pred, tmp92
	movq	-24(%rbp), %rdx	 # __pred,
	movq	%rax, -48(%rbp)	 # tmp92,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-8(%rbp), %rdx	 #, tmp93
	leaq	-48(%rbp), %rax	 #, tmp94
	movl	%esi, %r9d	 # D.236904,
	movq	%rdx, %r8	 # tmp93,
	movq	%rax, %rdx	 # tmp94,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_M_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbT_RyT0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:405: 		if (__base_type::_M_do_spin(__pred, __val))
	.loc 8 405 3
	testb	%al, %al	 # _11
	jne	.L804	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:407: 		__base_type::_M_w._M_do_wait(__base_type::_M_addr, __val);
	.loc 8 407 16
	movq	32(%rbp), %rax	 # this, tmp95
	movq	(%rax), %rax	 # this_9(D)->D.158324._M_w, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:407: 		__base_type::_M_w._M_do_wait(__base_type::_M_addr, __val);
	.loc 8 407 31
	movq	-8(%rbp), %rcx	 # __val, __val.193_3
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:407: 		__base_type::_M_w._M_do_wait(__base_type::_M_addr, __val);
	.loc 8 407 45
	movq	32(%rbp), %rdx	 # this, tmp96
	movq	8(%rdx), %rdx	 # this_9(D)->D.158324._M_addr, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:407: 		__base_type::_M_w._M_do_wait(__base_type::_M_addr, __val);
	.loc 8 407 31
	movq	%rcx, %r8	 # __val.193_3,
	movq	%rax, %rcx	 # _2,
	call	_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy	 #
.LBE325:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:409: 	    while (!__pred());
	.loc 8 409 20
	leaq	-32(%rbp), %rax	 #, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv	 #
	xorl	$1, %eax	 #, retval.194_16
	testb	%al, %al	 # retval.194_16
	jne	.L803	 #,
	jmp	.L800	 #
.L804:
.LBB326:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:406: 		  return;
	.loc 8 406 5
	nop	
.L800:
.LBE326:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:410: 	  }
	.loc 8 410 4
	addq	$80, %rsp	 #,
	popq	%rbx	 #
.LCFI995:
	popq	%rsi	 #
.LCFI996:
	popq	%rbp	 #
.LCFI997:
	ret	
.LFE12327:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA12327:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE12327-.LLSDACSB12327
.LLSDACSB12327:
.LLSDACSE12327:
	.text
	.seh_endproc
	.section	.text$_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_,"x"
	.linkonce discard
	.globl	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_
	.def	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_
_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_:
.LFB12328:
	.loc 18 49 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI998:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI999:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __r, __r
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:50:     { return __builtin_addressof(__r); }
	.loc 18 50 37
	movq	16(%rbp), %rax	 # __r, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:50:     { return __builtin_addressof(__r); }
	.loc 18 50 40
	popq	%rbp	 #
.LCFI1000:
	ret	
.LFE12328:
	.seh_endproc
	.text
	.align 2
	.def	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEixEy;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEixEy
_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EEixEy:
.LFB12329:
	.loc 15 717 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1001:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1002:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _1
	je	.L808	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 is_stmt 0 discriminator 1
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE3getEv	 #
	testq	%rax, %rax	 # _2
	jne	.L808	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 discriminator 3
	movl	$1, %eax	 #, iftmp.129_5
	jmp	.L809	 #
.L808:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 discriminator 4
	movl	$0, %eax	 #, iftmp.129_5
.L809:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:719: 	__glibcxx_assert(get() != pointer());
	.loc 15 719 2 discriminator 6
	testb	%al, %al	 # iftmp.129_5
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 15 720 12 is_stmt 1 discriminator 6
	movq	16(%rbp), %rax	 # this, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE3getEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 15 720 14 discriminator 6
	movq	24(%rbp), %rdx	 # __i, tmp91
	salq	$6, %rdx	 #, _4
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:720: 	return get()[__i];
	.loc 15 720 18 discriminator 6
	addq	%rdx, %rax	 # _4, _17
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:721:       }
	.loc 15 721 7 discriminator 6
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1003:
	ret	
.LFE12329:
	.seh_endproc
	.section	.text$_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy
	.def	_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy
_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy:
.LFB12330:
	.file 23 "C:/msys64/mingw64/include/c++/12.2.0/array"
	.loc 23 206 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1004:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1005:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # C:/msys64/mingw64/include/c++/12.2.0/array:209: 	return _AT_Type::_S_ref(_M_elems, __n);
	.loc 23 209 26
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/array:209: 	return _AT_Type::_S_ref(_M_elems, __n);
	.loc 23 209 25
	movq	24(%rbp), %rdx	 # __n, tmp85
	movq	%rax, %rcx	 # _1,
	call	_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y	 #
 # C:/msys64/mingw64/include/c++/12.2.0/array:210:       }
	.loc 23 210 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1006:
	ret	
.LFE12330:
	.seh_endproc
	.section	.text$_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order
	.def	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order
_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order:
.LFB12331:
	.loc 9 1439 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1007:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1008:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __expected, __expected
	movl	%r8d, %eax	 # __desired, tmp85
	movl	%r9d, 40(%rbp)	 # __order, __order
	movb	%al, 32(%rbp)	 # tmp86, __desired
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1443: 	return compare_exchange_strong(__expected, __desired, __order,
	.loc 9 1443 32
	movl	40(%rbp), %eax	 # __order, tmp87
	movl	%eax, %ecx	 # tmp87,
	call	_ZSt23__cmpexch_failure_orderSt12memory_order	 #
	movl	%eax, %ecx	 #, _1
	movl	40(%rbp), %r9d	 # __order, tmp88
	movzbl	32(%rbp), %r8d	 # __desired, tmp89
	movq	24(%rbp), %rdx	 # __expected, tmp90
	movq	16(%rbp), %rax	 # this, tmp91
	movl	%ecx, 32(%rsp)	 # _1,
	movq	%rax, %rcx	 # tmp91,
	call	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1445:       }
	.loc 9 1445 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1009:
	ret	
.LFE12331:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev
_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev:
.LFB12335:
	.loc 22 430 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1010:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1011:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB327:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 22 431 15
	movq	16(%rbp), %rax	 # this, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev	 #
.LBE327:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:431:       : _Base() { }
	.loc 22 431 19
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1012:
	ret	
.LFE12335:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev
	.def	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev
_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev:
.LFB12338:
	.loc 22 189 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1013:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1014:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB328:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 22 190 9
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_head_impl
.LBE328:
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:190:       : _M_head_impl() { }
	.loc 22 190 26
	nop	
	popq	%rbp	 #
.LCFI1015:
	ret	
.LFE12338:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_
	.def	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_
_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_:
.LFB12340:
	.loc 22 268 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1016:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1017:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 268 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:268:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 268 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1018:
	ret	
.LFE12340:
	.seh_endproc
	.section	.text$_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,"x"
	.linkonce discard
	.globl	_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	.def	_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE:
.LFB12341:
	.loc 22 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1019:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1020:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1021:
	ret	
.LFE12341:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_
	.def	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_
_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_:
.LFB12351:
	.loc 22 236 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1022:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1023:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 236 60
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 236 74
	popq	%rbp	 #
.LCFI1024:
	ret	
.LFE12351:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_
_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_:
.LFB12352:
	.loc 22 124 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1025:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1026:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 124 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 124 68
	popq	%rbp	 #
.LCFI1027:
	ret	
.LFE12352:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EEC2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EEC2Ev
_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EEC2Ev:
.LFB12354:
	.loc 22 80 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1028:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1029:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:81:       : _M_head_impl() { }
	.loc 22 81 26
	nop	
	popq	%rbp	 #
.LCFI1030:
	ret	
.LFE12354:
	.seh_endproc
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EE7_M_headERS7_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EE7_M_headERS7_
_ZNSt10_Head_baseILy1ESt14default_deleteIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEELb1EE7_M_headERS7_:
.LFB12356:
	.loc 22 124 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1031:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1032:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 124 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 124 68
	popq	%rbp	 #
.LCFI1033:
	ret	
.LFE12356:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_
	.def	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_
_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_:
.LFB12357:
	.loc 22 236 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1034:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1035:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 236 60
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 236 74
	popq	%rbp	 #
.LCFI1036:
	ret	
.LFE12357:
	.seh_endproc
	.section	.text$_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_:
.LFB12359:
	.loc 8 295 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1037:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1038:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __addr, __addr
.LBB329:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:296: 	    : _M_w(_S_for(__addr))
	.loc 8 296 19
	movq	24(%rbp), %rax	 # __addr, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:296: 	    : _M_w(_S_for(__addr))
	.loc 8 296 8
	movq	16(%rbp), %rdx	 # this, tmp87
	movq	%rax, (%rdx)	 # _1, this_6(D)->_M_w
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:297: 	    , _M_addr(_S_wait_addr(__addr, &_M_w._M_ver))
	.loc 8 297 38
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rax	 # this_6(D)->_M_w, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:297: 	    , _M_addr(_S_wait_addr(__addr, &_M_w._M_ver))
	.loc 8 297 28
	leaq	64(%rax), %rdx	 #, _3
	movq	24(%rbp), %rax	 # __addr, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:297: 	    , _M_addr(_S_wait_addr(__addr, &_M_w._M_ver))
	.loc 8 297 8
	movq	16(%rbp), %rdx	 # this, tmp90
	movq	%rax, 8(%rdx)	 # _4, this_6(D)->_M_addr
.LBE329:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:298: 	  { }
	.loc 8 298 6
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1039:
	ret	
.LFE12359:
	.seh_endproc
	.text
	.align 2
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_M_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbT_RyT0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_M_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbT_RyT0_
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_M_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbT_RyT0_:
.LFB12361:
	.loc 8 360 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1040:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1041:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI1042:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI1043:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, %rbx	 #, tmp86
	movq	(%rbx), %rax	 # __pred, tmp87
	movq	8(%rbx), %rdx	 # __pred,
	movq	%rax, -16(%rbp)	 # tmp87, __pred
	movq	%rdx, -8(%rbp)	 #, __pred
	movq	%r8, 48(%rbp)	 # __val, __val
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:362: 	  { return _S_do_spin(_M_addr, __pred, __val, __spin); }
	.loc 8 362 24
	movq	32(%rbp), %rax	 # this, tmp88
	movq	8(%rax), %rcx	 # this_3(D)->_M_addr, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:362: 	  { return _S_do_spin(_M_addr, __pred, __val, __spin); }
	.loc 8 362 23
	movq	-16(%rbp), %rax	 # __pred, tmp89
	movq	-8(%rbp), %rdx	 # __pred,
	movq	%rax, -32(%rbp)	 # tmp89,
	movq	%rdx, -24(%rbp)	 #,
	movq	48(%rbp), %rdx	 # __val, tmp90
	leaq	-32(%rbp), %rax	 #, tmp91
	movq	%rdx, %r8	 # tmp90,
	movq	%rax, %rdx	 # tmp91,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_S_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbPKyT_RyT0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:362: 	  { return _S_do_spin(_M_addr, __pred, __val, __spin); }
	.loc 8 362 57
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI1044:
	popq	%rbp	 #
.LCFI1045:
	ret	
.LFE12361:
	.seh_endproc
	.align 2
	.def	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE3getEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE3getEv
_ZNKSt10unique_ptrIA_NSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIS4_EE3getEv:
.LFB12362:
	.loc 15 726 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1046:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1047:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 15 727 27
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:727:       { return _M_t._M_ptr(); }
	.loc 15 727 31
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1048:
	ret	
.LFE12362:
	.seh_endproc
	.section	.text$_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y,"x"
	.linkonce discard
	.globl	_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y
	.def	_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y
_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y:
.LFB12363:
	.loc 23 60 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1049:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1050:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
	movq	%rdx, 24(%rbp)	 # __n, __n
 # C:/msys64/mingw64/include/c++/12.2.0/array:61:       { return const_cast<_Tp&>(__t[__n]); }
	.loc 23 61 41
	movq	16(%rbp), %rdx	 # __t, tmp84
	movq	24(%rbp), %rax	 # __n, tmp85
	addq	%rdx, %rax	 # tmp84, _3
 # C:/msys64/mingw64/include/c++/12.2.0/array:61:       { return const_cast<_Tp&>(__t[__n]); }
	.loc 23 61 44
	popq	%rbp	 #
.LCFI1051:
	ret	
.LFE12363:
	.seh_endproc
	.section	.text$_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_
	.def	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_
_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_:
.LFB12364:
	.loc 9 1420 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1052:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1053:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI1054:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI1055:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __expected, __expected
	movl	%r8d, %eax	 # __desired, tmp93
	movl	%r9d, 56(%rbp)	 # __success, __success
	movb	%al, 48(%rbp)	 # tmp94, __desired
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1424: 	return __atomic_impl::compare_exchange_strong(_M_ptr,
	.loc 9 1424 48
	movq	32(%rbp), %rax	 # this, tmp95
	movq	(%rax), %rax	 # this_3(D)->_M_ptr, _1
	movq	%rax, -8(%rbp)	 # _1, __ptr
	movq	40(%rbp), %rax	 # __expected, tmp96
	movq	%rax, -16(%rbp)	 # tmp96, __expected
	movzbl	48(%rbp), %eax	 # __desired, tmp97
	movb	%al, -25(%rbp)	 # tmp97, __desired
	movl	56(%rbp), %eax	 # __success, tmp98
	movl	%eax, -20(%rbp)	 # tmp98, __success
	movl	64(%rbp), %eax	 # __failure, tmp99
	movl	%eax, -24(%rbp)	 # tmp99, __failure
.LBB330:
.LBB331:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1003: 	__glibcxx_assert(__is_valid_cmpexch_failure_order(__failure));
	.loc 9 1003 2
	call	__is_constant_evaluated	 #
	testb	%al, %al	 # _13
	je	.L839	 #,
	movl	-24(%rbp), %eax	 # __failure, tmp100
	movl	%eax, %ecx	 # tmp100,
	call	_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order	 #
	xorl	$1, %eax	 #, _15
	testb	%al, %al	 # _15
	je	.L839	 #,
	movl	$1, %eax	 #, iftmp.138_16
	jmp	.L840	 #
.L839:
	movl	$0, %eax	 #, iftmp.138_16
.L840:
	testb	%al, %al	 # iftmp.138_16
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1006: 					 std::__addressof(__desired), false,
	.loc 9 1006 23
	leaq	-25(%rbp), %rax	 #, tmp101
	movq	%rax, %rcx	 # tmp101,
	call	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1005: 	return __atomic_compare_exchange(__ptr, std::__addressof(__expected),
	.loc 9 1005 34
	movzbl	(%rax), %eax	 # *_20, _21
	movzbl	%al, %ebx	 # _21, _22
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1005: 	return __atomic_compare_exchange(__ptr, std::__addressof(__expected),
	.loc 9 1005 58
	movq	-16(%rbp), %rax	 # __expected, tmp102
	movq	%rax, %rcx	 # tmp102,
	call	_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_	 #
	movq	%rax, %rdx	 #, _23
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1005: 	return __atomic_compare_exchange(__ptr, std::__addressof(__expected),
	.loc 9 1005 34
	movq	-8(%rbp), %r8	 # __ptr, tmp103
	movzbl	(%rdx), %eax	 #* _23, tmp104
	lock cmpxchgb	%bl, (%r8)	 #, _22,
	movl	%eax, %ecx	 # tmp104, tmp105
	sete	%al	 #, D.237782
	testb	%al, %al	 # D.237782
	jne	.L846	 #,
	movb	%cl, (%rdx)	 # tmp105,* _23
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1007: 					 int(__success), int(__failure));
	.loc 9 1007 37
	nop	
.L846:
	nop	
.LBE331:
.LBE330:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_base.h:1427:       }
	.loc 9 1427 7
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI1056:
	popq	%rbp	 #
.LCFI1057:
	ret	
.LFE12364:
	.seh_endproc
	.section	.text$_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b,"x"
	.linkonce discard
	.globl	_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b
	.def	_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b
_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b:
.LFB12365:
	.loc 8 457 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1058:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1059:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __addr, __addr
	movl	%edx, %eax	 # __all, tmp83
	movb	%al, 24(%rbp)	 # tmp84, __all
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:459:       __detail::__bare_wait __w(__addr);
	.loc 8 459 29
	movq	16(%rbp), %rdx	 # __addr, tmp85
	leaq	-16(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:460:       __w._M_notify(__all);
	.loc 8 460 20
	movzbl	24(%rbp), %edx	 # __all, _1
	leaq	-16(%rbp), %rax	 #, tmp87
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp87,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:461:     }
	.loc 8 461 5
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev	 #
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1060:
	ret	
.LFE12365:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev
_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev:
.LFB12367:
	.loc 22 80 17
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1061:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1062:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:81:       : _M_head_impl() { }
	.loc 22 81 26
	nop	
	popq	%rbp	 #
.LCFI1063:
	ret	
.LFE12367:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_
	.def	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_
_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_:
.LFB12369:
	.loc 22 233 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1064:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1065:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 233 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 233 68
	popq	%rbp	 #
.LCFI1066:
	ret	
.LFE12369:
	.seh_endproc
	.section	.text$_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_,"x"
	.linkonce discard
	.globl	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_
	.def	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_
_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_:
.LFB12370:
	.loc 22 424 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1067:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1068:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 424 65
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 424 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1069:
	ret	
.LFE12370:
	.seh_endproc
	.section	.text$_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_,"x"
	.linkonce discard
	.globl	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_:
.LFB12371:
	.loc 8 278 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1070:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1071:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:283: 	      return __b;
	.loc 8 283 15
	movq	24(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:284: 	  }
	.loc 8 284 4
	popq	%rbp	 #
.LCFI1072:
	ret	
.LFE12371:
	.seh_endproc
	.text
	.def	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_S_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbPKyT_RyT0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_S_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbPKyT_RyT0_
_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE10_S_do_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbPKyT_RyT0_:
.LFB12372:
	.loc 8 348 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1073:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1074:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI1075:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1076:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __addr, __addr
	movq	%rdx, %rbx	 #, tmp86
	movq	(%rbx), %rax	 # __pred, tmp87
	movq	8(%rbx), %rdx	 # __pred,
	movq	%rax, -16(%rbp)	 # tmp87, __pred
	movq	%rdx, -8(%rbp)	 #, __pred
	movq	%r8, 48(%rbp)	 # __val, __val
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:353: 	    __atomic_load(__addr, &__val, __ATOMIC_ACQUIRE);
	.loc 8 353 19
	movq	32(%rbp), %rax	 # __addr, tmp88
	movq	(%rax), %rdx	 #, _1
	movq	48(%rbp), %rax	 # __val, tmp89
	movq	%rdx, (%rax)	 # _1, *__val_5(D)
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:354: 	    return __atomic_spin(__pred, __spin);
	.loc 8 354 26
	leaq	-16(%rbp), %rax	 #, tmp90
	movl	%r9d, %edx	 # D.236916,
	movq	%rax, %rcx	 # tmp90,
	call	_ZNSt8__detail13__atomic_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbRT_T0_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:355: 	  }
	.loc 8 355 4
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI1077:
	popq	%rbp	 #
.LCFI1078:
	ret	
.LFE12372:
	.seh_endproc
	.align 2
	.def	_ZNKSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNKSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv
_ZNKSt15__uniq_ptr_implINSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EE6_M_ptrEv:
.LFB12373:
	.loc 15 191 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1079:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1080:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 63
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 62
	movq	%rax, %rcx	 # _1,
	call	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSC_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 67
	movq	(%rax), %rax	 # *_2, _6
 # C:/msys64/mingw64/include/c++/12.2.0/bits/unique_ptr.h:191:       pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
	.loc 15 191 70
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1081:
	ret	
.LFE12373:
	.seh_endproc
	.section	.text$_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_
	.def	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_
_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_:
.LFB12377:
	.loc 8 371 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1082:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1083:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __addr, __addr
.LBB332:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:372: 	    : __base_type(__addr)
	.loc 8 372 26
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __addr, tmp83
	movq	%rax, %rcx	 # _1,
	call	_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_	 #
.LBE332:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:376: 	  }
	.loc 8 376 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1084:
	ret	
.LFE12377:
	.seh_endproc
	.section	.text$_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_,"x"
	.linkonce discard
	.globl	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_
	.def	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_
_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_:
.LFB12378:
	.loc 22 124 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1085:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1086:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 124 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:124:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 124 68
	popq	%rbp	 #
.LCFI1087:
	ret	
.LFE12378:
	.seh_endproc
	.text
	.def	_ZNSt8__detail13__atomic_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbRT_T0_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt8__detail13__atomic_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbRT_T0_
_ZNSt8__detail13__atomic_spinIZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tEUlvE_NS_21__default_spin_policyEEEbRT_T0_:
.LFB12379:
	.loc 8 158 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1088:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1089:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __pred, __pred
.LBB333:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:160: 	for (auto __i = 0; __i < __atomic_spin_count; ++__i)
	.loc 8 160 12
	movl	$0, -4(%rbp)	 #, __i
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:160: 	for (auto __i = 0; __i < __atomic_spin_count; ++__i)
	.loc 8 160 2
	jmp	.L863	 #
.L868:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:162: 	    if (__pred())
	.loc 8 162 16
	movq	16(%rbp), %rax	 # __pred, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:162: 	    if (__pred())
	.loc 8 162 6
	testb	%al, %al	 # retval.200_17
	je	.L864	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:163: 	      return true;
	.loc 8 163 15
	movl	$1, %eax	 #, _2
	jmp	.L865	 #
.L864:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:165: 	    if (__i < __atomic_spin_count_relax)
	.loc 8 165 6
	cmpl	$11, -4(%rbp)	 #, __i
	jg	.L866	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:166: 	      __detail::__thread_relax();
	.loc 8 166 32
	call	_ZNSt8__detail14__thread_relaxEv	 #
	jmp	.L867	 #
.L866:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:168: 	      __detail::__thread_yield();
	.loc 8 168 32
	call	_ZNSt8__detail14__thread_yieldEv	 #
.L867:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:160: 	for (auto __i = 0; __i < __atomic_spin_count; ++__i)
	.loc 8 160 2 discriminator 2
	addl	$1, -4(%rbp)	 #, __i
.L863:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:160: 	for (auto __i = 0; __i < __atomic_spin_count; ++__i)
	.loc 8 160 25 discriminator 1
	cmpl	$15, -4(%rbp)	 #, __i
	jle	.L868	 #,
.LBE333:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:171: 	while (__spin())
	.loc 8 171 2
	jmp	.L869	 #
.L870:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:173: 	    if (__pred())
	.loc 8 173 16
	movq	16(%rbp), %rax	 # __pred, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZZNKSt14__tree_barrierIZ7WinMainEUlvE_E4waitEOSt17__barrier_phase_tENKUlvE_clEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:173: 	    if (__pred())
	.loc 8 173 6
	testb	%al, %al	 # retval.201_14
	je	.L869	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:174: 	      return true;
	.loc 8 174 15
	movl	$1, %eax	 #, _2
	jmp	.L865	 #
.L869:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:171: 	while (__spin())
	.loc 8 171 15
	leaq	24(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt8__detail21__default_spin_policyclEv	 #
	testb	%al, %al	 # retval.202_10
	jne	.L870	 #,
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:177: 	return false;
	.loc 8 177 9
	movl	$0, %eax	 #, _2
.L865:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/atomic_wait.h:178:       }
	.loc 8 178 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1090:
	ret	
.LFE12379:
	.seh_endproc
	.def	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSC_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSC_
_ZSt3getILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSC_:
.LFB12380:
	.loc 22 1386 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1091:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1092:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 22 1387 36
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERKT0_RKSt11_Tuple_implIXT_EJS8_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1387:     { return std::__get_helper<__i>(__t); }
	.loc 22 1387 43
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1093:
	ret	
.LFE12380:
	.seh_endproc
	.def	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERKT0_RKSt11_Tuple_implIXT_EJS8_DpT1_EE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERKT0_RKSt11_Tuple_implIXT_EJS8_DpT1_EE
_ZSt12__get_helperILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tEJSt14default_deleteIA_S3_EEERKT0_RKSt11_Tuple_implIXT_EJS8_DpT1_EE:
.LFB12381:
	.loc 22 1369 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1094:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1095:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1370 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERKS8_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1370:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1370 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1096:
	ret	
.LFE12381:
	.seh_endproc
	.def	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERKS8_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERKS8_
_ZNSt11_Tuple_implILy0EJPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tESt14default_deleteIA_S3_EEE7_M_headERKS8_:
.LFB12382:
	.loc 22 271 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1097:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1098:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 271 71
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERKS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:271:       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 271 78
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1099:
	ret	
.LFE12382:
	.seh_endproc
	.def	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERKS5_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERKS5_
_ZNSt10_Head_baseILy0EPNSt14__tree_barrierIZ7WinMainEUlvE_E9__state_tELb0EE7_M_headERKS5_:
.LFB12383:
	.loc 22 236 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1100:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1101:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 236 60
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:236:       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 236 74
	popq	%rbp	 #
.LCFI1102:
	ret	
.LFE12383:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE:
	.quad	0
	.quad	_ZTINSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE
	.quad	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED1Ev
	.quad	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED0Ev
	.quad	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEE6_M_runEv
	.text
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED2Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED2Ev
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED2Ev:
.LFB12385:
	.loc 11 200 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1103:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1104:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB334:
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:200:       struct _State_impl : public _State
	.loc 11 200 14
	leaq	16+_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE(%rip), %rdx	 #, _1
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_4(D)->D.223776._vptr._State
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6thread6_StateD2Ev	 #
.LBE334:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1105:
	ret	
.LFE12385:
	.seh_endproc
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED1Ev;	.scl	3;	.type	32;	.endef
	.set	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED1Ev,_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED2Ev
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED0Ev;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED0Ev
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED0Ev:
.LFB12387:
	.loc 11 200 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1106:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1107:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:200:       struct _State_impl : public _State
	.loc 11 200 14
	movq	16(%rbp), %rax	 # this, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEED1Ev	 #
	movq	16(%rbp), %rax	 # this, tmp83
	movl	$88, %edx	 #,
	movq	%rax, %rcx	 # tmp83,
	call	_ZdlPvy	 #
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1108:
	ret	
.LFE12387:
	.seh_endproc
	.section .rdata,"dr"
	.align 32
_ZTSNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE:
	.ascii "*NSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE\0"
	.align 8
_ZTINSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE:
 # <anonymous>:
 # <anonymous>:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 # <anonymous>:
	.quad	_ZTSNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEEE
 # <anonymous>:
	.quad	_ZTINSt6thread6_StateE
	.globl	_ZTINSt6thread6_StateE
	.section	.rdata$_ZTINSt6thread6_StateE,"dr"
	.linkonce same_size
	.align 8
_ZTINSt6thread6_StateE:
 # <anonymous>:
 # <anonymous>:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 # <anonymous>:
	.quad	_ZTSNSt6thread6_StateE
	.globl	_ZTSNSt6thread6_StateE
	.section	.rdata$_ZTSNSt6thread6_StateE,"dr"
	.linkonce same_size
	.align 16
_ZTSNSt6thread6_StateE:
	.ascii "NSt6thread6_StateE\0"
	.text
	.align 2
	.def	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEE6_M_runEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEE6_M_runEv
_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEEE6_M_runEv:
.LFB12404:
	.loc 11 210 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1109:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1110:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:210: 	_M_run() { _M_func(); }
	.loc 11 210 20
	movq	16(%rbp), %rax	 # this, tmp83
	addq	$8, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEclEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:210: 	_M_run() { _M_func(); }
	.loc 11 210 24
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1111:
	ret	
.LFE12404:
	.seh_endproc
	.align 2
	.def	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEclEv;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEclEv
_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEEclEv:
.LFB12405:
	.loc 11 255 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1112:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1113:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:259: 	  return _M_invoke(_Indices());
	.loc 11 259 20
	movq	16(%rbp), %rax	 # this, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:259: 	  return _M_invoke(_Indices());
	.loc 11 259 31
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:260: 	}
	.loc 11 260 2
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1114:
	ret	
.LFE12405:
	.seh_endproc
	.align 2
	.def	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE
_ZNSt6thread8_InvokerISt5tupleIJZ7WinMainEUlvE0_EEE9_M_invokeIJLy0EEEEvSt12_Index_tupleIJXspT_EEE:
.LFB12406:
	.loc 11 251 4
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1115:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1116:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 11 252 52
	movq	16(%rbp), %rax	 # this, _1
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 11 252 51
	movq	%rax, %rcx	 # _1,
	call	_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE0_EEEONSt16remove_referenceIT_E4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 11 252 41
	movq	%rax, %rcx	 # _2,
	call	_ZSt3getILy0EJZ7WinMainEUlvE0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 11 252 26
	movq	%rax, %rcx	 # _3,
	call	_ZSt8__invokeIZ7WinMainEUlvE0_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 11 252 61
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/std_thread.h:252: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
	.loc 11 252 64
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1117:
	ret	
.LFE12406:
	.seh_endproc
	.def	_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE0_EEEONSt16remove_referenceIT_E4typeEOS5_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE0_EEEONSt16remove_referenceIT_E4typeEOS5_
_ZSt4moveIRSt5tupleIJZ7WinMainEUlvE0_EEEONSt16remove_referenceIT_E4typeEOS5_:
.LFB12408:
	.loc 18 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1118:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1119:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # C:/msys64/mingw64/include/c++/12.2.0/bits/move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 18 105 77
	popq	%rbp	 #
.LCFI1120:
	ret	
.LFE12408:
	.seh_endproc
	.def	_ZSt3getILy0EJZ7WinMainEUlvE0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt3getILy0EJZ7WinMainEUlvE0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_
_ZSt3getILy0EJZ7WinMainEUlvE0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS5_:
.LFB12409:
	.loc 22 1392 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1121:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1122:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1395:       return std::forward<__element_type>(std::__get_helper<__i>(__t));
	.loc 22 1395 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZSt12__get_helperILy0EZ7WinMainEUlvE0_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1395:       return std::forward<__element_type>(std::__get_helper<__i>(__t));
	.loc 22 1395 42
	movq	%rax, %rcx	 # _2,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1396:     }
	.loc 22 1396 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1123:
	ret	
.LFE12409:
	.seh_endproc
	.def	_ZSt8__invokeIZ7WinMainEUlvE0_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt8__invokeIZ7WinMainEUlvE0_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_
_ZSt8__invokeIZ7WinMainEUlvE0_JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS2_DpOS3_:
.LFB12410:
	.file 24 "C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h"
	.loc 24 90 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1124:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1125:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1126:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1127:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __fn, __fn
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:96:       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
	.loc 24 96 40
	movq	32(%rbp), %rax	 # __fn, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 # _1,
	movl	%ebx, %ecx	 # D.236263,
	call	_ZSt13__invoke_implIvZ7WinMainEUlvE0_JEET_St14__invoke_otherOT0_DpOT1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:97: 					std::forward<_Args>(__args)...);
	.loc 24 97 36
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:98:     }
	.loc 24 98 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1128:
	popq	%rbp	 #
.LCFI1129:
	ret	
.LFE12410:
	.seh_endproc
	.def	_ZSt12__get_helperILy0EZ7WinMainEUlvE0_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt12__get_helperILy0EZ7WinMainEUlvE0_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE
_ZSt12__get_helperILy0EZ7WinMainEUlvE0_JEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE:
.LFB12411:
	.loc 22 1364 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1130:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1131:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 56
	movq	16(%rbp), %rax	 # __t, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EE7_M_headERS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:1365:     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
	.loc 22 1365 63
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1132:
	ret	
.LFE12411:
	.seh_endproc
	.def	_ZSt13__invoke_implIvZ7WinMainEUlvE0_JEET_St14__invoke_otherOT0_DpOT1_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZSt13__invoke_implIvZ7WinMainEUlvE0_JEET_St14__invoke_otherOT0_DpOT1_
_ZSt13__invoke_implIvZ7WinMainEUlvE0_JEET_St14__invoke_otherOT0_DpOT1_:
.LFB12412:
	.loc 24 60 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1133:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1134:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)	 # __f, __f
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 24 61 31
	movq	16(%rbp), %rax	 # __f, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZSt7forwardIZ7WinMainEUlvE0_EOT_RNSt16remove_referenceIS1_E4typeE	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 24 61 36
	movq	%rax, %rcx	 # _1,
	call	_ZZ7WinMainENKUlvE0_clEv	 #
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 24 61 67
	nop	
 # C:/msys64/mingw64/include/c++/12.2.0/bits/invoke.h:61:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
	.loc 24 61 70
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1135:
	ret	
.LFE12412:
	.seh_endproc
	.def	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EE7_M_headERS1_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EE7_M_headERS1_
_ZNSt11_Tuple_implILy0EJZ7WinMainEUlvE0_EE7_M_headERS1_:
.LFB12413:
	.loc 22 424 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1136:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1137:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 424 65
	movq	16(%rbp), %rax	 # __t, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EE7_M_headERS1_	 #
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:424:       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
	.loc 22 424 72
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1138:
	ret	
.LFE12413:
	.seh_endproc
	.def	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EE7_M_headERS1_;	.scl	3;	.type	32;	.endef
	.seh_proc	_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EE7_M_headERS1_
_ZNSt10_Head_baseILy0EZ7WinMainEUlvE0_Lb0EE7_M_headERS1_:
.LFB12414:
	.loc 22 233 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1139:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1140:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __b, __b
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 233 54
	movq	16(%rbp), %rax	 # __b, _2
 # C:/msys64/mingw64/include/c++/12.2.0/tuple:233:       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
	.loc 22 233 68
	popq	%rbp	 #
.LCFI1141:
	ret	
.LFE12414:
	.seh_endproc
	.section .rdata,"dr"
	.align 4
.LC11:
	.long	1067240653
	.align 4
.LC12:
	.long	1148846080
	.align 4
.LC13:
	.long	1143930880
	.align 4
.LC14:
	.long	1173602304
	.align 4
.LC16:
	.long	1017370378
	.align 4
.LC17:
	.long	1036831949
	.align 4
.LC18:
	.long	1053609165
	.align 4
.LC19:
	.long	1058642330
	.align 4
.LC21:
	.long	1020054733
	.align 4
.LC22:
	.long	1039516303
	.align 4
.LC23:
	.long	1137180672
	.align 4
.LC25:
	.long	1148928000
	.align 4
.LC26:
	.long	1166200832
	.align 4
.LC27:
	.long	1159069696
	.align 4
.LC28:
	.long	1138819072
	.align 4
.LC30:
	.long	1050253722
	.align 4
.LC31:
	.long	1063675494
	.align 4
.LC33:
	.long	1176256512
	.align 4
.LC36:
	.long	1119092736
	.align 4
.LC39:
	.long	1065353216
	.align 4
.LC40:
	.long	1132396544
	.align 4
.LC42:
	.long	1119879168
	.align 4
.LC46:
	.long	1145569280
	.align 4
.LC47:
	.long	1142292480
	.section	.debug_frame,"dr"
.Lframe0:
	.long	.LECIE0-.LSCIE0
.LSCIE0:
	.long	0xffffffff
	.byte	0x3
	.ascii "\0"
	.uleb128 0x1
	.sleb128 -8
	.uleb128 0x10
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x1
	.align 8
.LECIE0:
.LSFDE0:
	.long	.LEFDE0-.LASFDE0
.LASFDE0:
	.secrel32	.Lframe0
	.quad	.LFB404
	.quad	.LFE404-.LFB404
	.byte	0x4
	.long	.LCFI0-.LFB404
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1-.LCFI0
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI2-.LCFI1
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE0:
.LSFDE2:
	.long	.LEFDE2-.LASFDE2
.LASFDE2:
	.secrel32	.Lframe0
	.quad	.LFB5616
	.quad	.LFE5616-.LFB5616
	.byte	0x4
	.long	.LCFI3-.LFB5616
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI4-.LCFI3
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI5-.LCFI4
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI6-.LCFI5
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI7-.LCFI6
	.byte	0xc3
	.byte	0x4
	.long	.LCFI8-.LCFI7
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE2:
.LSFDE4:
	.long	.LEFDE4-.LASFDE4
.LASFDE4:
	.secrel32	.Lframe0
	.quad	.LFB5910
	.quad	.LFE5910-.LFB5910
	.byte	0x4
	.long	.LCFI9-.LFB5910
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI10-.LCFI9
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI11-.LCFI10
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE4:
.LSFDE6:
	.long	.LEFDE6-.LASFDE6
.LASFDE6:
	.secrel32	.Lframe0
	.quad	.LFB5949
	.quad	.LFE5949-.LFB5949
	.byte	0x4
	.long	.LCFI12-.LFB5949
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI13-.LCFI12
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI14-.LCFI13
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE6:
.LSFDE8:
	.long	.LEFDE8-.LASFDE8
.LASFDE8:
	.secrel32	.Lframe0
	.quad	.LFB5951
	.quad	.LFE5951-.LFB5951
	.byte	0x4
	.long	.LCFI15-.LFB5951
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI16-.LCFI15
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI17-.LCFI16
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE8:
.LSFDE10:
	.long	.LEFDE10-.LASFDE10
.LASFDE10:
	.secrel32	.Lframe0
	.quad	.LFB6076
	.quad	.LFE6076-.LFB6076
	.byte	0x4
	.long	.LCFI18-.LFB6076
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI19-.LCFI18
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI20-.LCFI19
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE10:
.LSFDE12:
	.long	.LEFDE12-.LASFDE12
.LASFDE12:
	.secrel32	.Lframe0
	.quad	.LFB7262
	.quad	.LFE7262-.LFB7262
	.byte	0x4
	.long	.LCFI21-.LFB7262
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI22-.LCFI21
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI23-.LCFI22
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE12:
.LSFDE14:
	.long	.LEFDE14-.LASFDE14
.LASFDE14:
	.secrel32	.Lframe0
	.quad	.LFB7436
	.quad	.LFE7436-.LFB7436
	.byte	0x4
	.long	.LCFI24-.LFB7436
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI25-.LCFI24
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI26-.LCFI25
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE14:
.LSFDE16:
	.long	.LEFDE16-.LASFDE16
.LASFDE16:
	.secrel32	.Lframe0
	.quad	.LFB7441
	.quad	.LFE7441-.LFB7441
	.byte	0x4
	.long	.LCFI27-.LFB7441
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI28-.LCFI27
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI29-.LCFI28
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE16:
.LSFDE18:
	.long	.LEFDE18-.LASFDE18
.LASFDE18:
	.secrel32	.Lframe0
	.quad	.LFB7442
	.quad	.LFE7442-.LFB7442
	.byte	0x4
	.long	.LCFI30-.LFB7442
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI31-.LCFI30
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI32-.LCFI31
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE18:
.LSFDE20:
	.long	.LEFDE20-.LASFDE20
.LASFDE20:
	.secrel32	.Lframe0
	.quad	.LFB7448
	.quad	.LFE7448-.LFB7448
	.byte	0x4
	.long	.LCFI33-.LFB7448
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI34-.LCFI33
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI35-.LCFI34
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE20:
.LSFDE22:
	.long	.LEFDE22-.LASFDE22
.LASFDE22:
	.secrel32	.Lframe0
	.quad	.LFB7449
	.quad	.LFE7449-.LFB7449
	.byte	0x4
	.long	.LCFI36-.LFB7449
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI37-.LCFI36
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI38-.LCFI37
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE22:
.LSFDE24:
	.long	.LEFDE24-.LASFDE24
.LASFDE24:
	.secrel32	.Lframe0
	.quad	.LFB7450
	.quad	.LFE7450-.LFB7450
	.byte	0x4
	.long	.LCFI39-.LFB7450
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI40-.LCFI39
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI41-.LCFI40
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE24:
.LSFDE26:
	.long	.LEFDE26-.LASFDE26
.LASFDE26:
	.secrel32	.Lframe0
	.quad	.LFB7453
	.quad	.LFE7453-.LFB7453
	.byte	0x4
	.long	.LCFI42-.LFB7453
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI43-.LCFI42
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI44-.LCFI43
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE26:
.LSFDE28:
	.long	.LEFDE28-.LASFDE28
.LASFDE28:
	.secrel32	.Lframe0
	.quad	.LFB7460
	.quad	.LFE7460-.LFB7460
	.byte	0x4
	.long	.LCFI45-.LFB7460
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI46-.LCFI45
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI47-.LCFI46
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE28:
.LSFDE30:
	.long	.LEFDE30-.LASFDE30
.LASFDE30:
	.secrel32	.Lframe0
	.quad	.LFB7461
	.quad	.LFE7461-.LFB7461
	.byte	0x4
	.long	.LCFI48-.LFB7461
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI49-.LCFI48
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI50-.LCFI49
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE30:
.LSFDE32:
	.long	.LEFDE32-.LASFDE32
.LASFDE32:
	.secrel32	.Lframe0
	.quad	.LFB7462
	.quad	.LFE7462-.LFB7462
	.byte	0x4
	.long	.LCFI51-.LFB7462
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI52-.LCFI51
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI53-.LCFI52
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE32:
.LSFDE34:
	.long	.LEFDE34-.LASFDE34
.LASFDE34:
	.secrel32	.Lframe0
	.quad	.LFB7465
	.quad	.LFE7465-.LFB7465
	.byte	0x4
	.long	.LCFI54-.LFB7465
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI55-.LCFI54
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI56-.LCFI55
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE34:
.LSFDE36:
	.long	.LEFDE36-.LASFDE36
.LASFDE36:
	.secrel32	.Lframe0
	.quad	.LFB8921
	.quad	.LFE8921-.LFB8921
	.byte	0x4
	.long	.LCFI57-.LFB8921
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI58-.LCFI57
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI59-.LCFI58
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE36:
.LSFDE38:
	.long	.LEFDE38-.LASFDE38
.LASFDE38:
	.secrel32	.Lframe0
	.quad	.LFB8924
	.quad	.LFE8924-.LFB8924
	.byte	0x4
	.long	.LCFI60-.LFB8924
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI61-.LCFI60
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI62-.LCFI61
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE38:
.LSFDE40:
	.long	.LEFDE40-.LASFDE40
.LASFDE40:
	.secrel32	.Lframe0
	.quad	.LFB8926
	.quad	.LFE8926-.LFB8926
	.byte	0x4
	.long	.LCFI63-.LFB8926
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI64-.LCFI63
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI65-.LCFI64
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE40:
.LSFDE42:
	.long	.LEFDE42-.LASFDE42
.LASFDE42:
	.secrel32	.Lframe0
	.quad	.LFB8928
	.quad	.LFE8928-.LFB8928
	.byte	0x4
	.long	.LCFI66-.LFB8928
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI67-.LCFI66
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI68-.LCFI67
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE42:
.LSFDE44:
	.long	.LEFDE44-.LASFDE44
.LASFDE44:
	.secrel32	.Lframe0
	.quad	.LFB8929
	.quad	.LFE8929-.LFB8929
	.byte	0x4
	.long	.LCFI69-.LFB8929
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI70-.LCFI69
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI71-.LCFI70
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE44:
.LSFDE46:
	.long	.LEFDE46-.LASFDE46
.LASFDE46:
	.secrel32	.Lframe0
	.quad	.LFB8932
	.quad	.LFE8932-.LFB8932
	.byte	0x4
	.long	.LCFI72-.LFB8932
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI73-.LCFI72
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI74-.LCFI73
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE46:
.LSFDE48:
	.long	.LEFDE48-.LASFDE48
.LASFDE48:
	.secrel32	.Lframe0
	.quad	.LFB8935
	.quad	.LFE8935-.LFB8935
	.byte	0x4
	.long	.LCFI75-.LFB8935
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI76-.LCFI75
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI77-.LCFI76
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE48:
.LSFDE50:
	.long	.LEFDE50-.LASFDE50
.LASFDE50:
	.secrel32	.Lframe0
	.quad	.LFB8937
	.quad	.LFE8937-.LFB8937
	.byte	0x4
	.long	.LCFI78-.LFB8937
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI79-.LCFI78
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI80-.LCFI79
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE50:
.LSFDE52:
	.long	.LEFDE52-.LASFDE52
.LASFDE52:
	.secrel32	.Lframe0
	.quad	.LFB8939
	.quad	.LFE8939-.LFB8939
	.byte	0x4
	.long	.LCFI81-.LFB8939
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI82-.LCFI81
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI83-.LCFI82
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE52:
.LSFDE54:
	.long	.LEFDE54-.LASFDE54
.LASFDE54:
	.secrel32	.Lframe0
	.quad	.LFB8940
	.quad	.LFE8940-.LFB8940
	.byte	0x4
	.long	.LCFI84-.LFB8940
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI85-.LCFI84
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI86-.LCFI85
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE54:
.LSFDE56:
	.long	.LEFDE56-.LASFDE56
.LASFDE56:
	.secrel32	.Lframe0
	.quad	.LFB8944
	.quad	.LFE8944-.LFB8944
	.byte	0x4
	.long	.LCFI87-.LFB8944
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI88-.LCFI87
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI89-.LCFI88
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE56:
.LSFDE58:
	.long	.LEFDE58-.LASFDE58
.LASFDE58:
	.secrel32	.Lframe0
	.quad	.LFB8945
	.quad	.LFE8945-.LFB8945
	.byte	0x4
	.long	.LCFI90-.LFB8945
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI91-.LCFI90
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI92-.LCFI91
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE58:
.LSFDE60:
	.long	.LEFDE60-.LASFDE60
.LASFDE60:
	.secrel32	.Lframe0
	.quad	.LFB8946
	.quad	.LFE8946-.LFB8946
	.byte	0x4
	.long	.LCFI93-.LFB8946
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI94-.LCFI93
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI95-.LCFI94
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE60:
.LSFDE62:
	.long	.LEFDE62-.LASFDE62
.LASFDE62:
	.secrel32	.Lframe0
	.quad	.LFB8949
	.quad	.LFE8949-.LFB8949
	.byte	0x4
	.long	.LCFI96-.LFB8949
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI97-.LCFI96
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI98-.LCFI97
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE62:
.LSFDE64:
	.long	.LEFDE64-.LASFDE64
.LASFDE64:
	.secrel32	.Lframe0
	.quad	.LFB8950
	.quad	.LFE8950-.LFB8950
	.byte	0x4
	.long	.LCFI99-.LFB8950
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI100-.LCFI99
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI101-.LCFI100
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE64:
.LSFDE66:
	.long	.LEFDE66-.LASFDE66
.LASFDE66:
	.secrel32	.Lframe0
	.quad	.LFB8951
	.quad	.LFE8951-.LFB8951
	.byte	0x4
	.long	.LCFI102-.LFB8951
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI103-.LCFI102
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI104-.LCFI103
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE66:
.LSFDE68:
	.long	.LEFDE68-.LASFDE68
.LASFDE68:
	.secrel32	.Lframe0
	.quad	.LFB8952
	.quad	.LFE8952-.LFB8952
	.byte	0x4
	.long	.LCFI105-.LFB8952
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI106-.LCFI105
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI107-.LCFI106
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE68:
.LSFDE70:
	.long	.LEFDE70-.LASFDE70
.LASFDE70:
	.secrel32	.Lframe0
	.quad	.LFB8957
	.quad	.LFE8957-.LFB8957
	.byte	0x4
	.long	.LCFI108-.LFB8957
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI109-.LCFI108
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI110-.LCFI109
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE70:
.LSFDE72:
	.long	.LEFDE72-.LASFDE72
.LASFDE72:
	.secrel32	.Lframe0
	.quad	.LFB8959
	.quad	.LFE8959-.LFB8959
	.byte	0x4
	.long	.LCFI111-.LFB8959
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI112-.LCFI111
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI113-.LCFI112
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE72:
.LSFDE74:
	.long	.LEFDE74-.LASFDE74
.LASFDE74:
	.secrel32	.Lframe0
	.quad	.LFB8963
	.quad	.LFE8963-.LFB8963
	.byte	0x4
	.long	.LCFI114-.LFB8963
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI115-.LCFI114
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI116-.LCFI115
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE74:
.LSFDE76:
	.long	.LEFDE76-.LASFDE76
.LASFDE76:
	.secrel32	.Lframe0
	.quad	.LFB8965
	.quad	.LFE8965-.LFB8965
	.byte	0x4
	.long	.LCFI117-.LFB8965
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI118-.LCFI117
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI119-.LCFI118
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE76:
.LSFDE78:
	.long	.LEFDE78-.LASFDE78
.LASFDE78:
	.secrel32	.Lframe0
	.quad	.LFB8966
	.quad	.LFE8966-.LFB8966
	.byte	0x4
	.long	.LCFI120-.LFB8966
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI121-.LCFI120
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI122-.LCFI121
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI123-.LCFI122
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI124-.LCFI123
	.byte	0xc3
	.byte	0x4
	.long	.LCFI125-.LCFI124
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE78:
.LSFDE80:
	.long	.LEFDE80-.LASFDE80
.LASFDE80:
	.secrel32	.Lframe0
	.quad	.LFB8953
	.quad	.LFE8953-.LFB8953
	.byte	0x4
	.long	.LCFI126-.LFB8953
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI127-.LCFI126
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI128-.LCFI127
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI129-.LCFI128
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI130-.LCFI129
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI131-.LCFI130
	.byte	0xc3
	.byte	0x4
	.long	.LCFI132-.LCFI131
	.byte	0xc4
	.byte	0x4
	.long	.LCFI133-.LCFI132
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE80:
.LSFDE82:
	.long	.LEFDE82-.LASFDE82
.LASFDE82:
	.secrel32	.Lframe0
	.quad	.LFB8967
	.quad	.LFE8967-.LFB8967
	.byte	0x4
	.long	.LCFI134-.LFB8967
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI135-.LCFI134
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI136-.LCFI135
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE82:
.LSFDE84:
	.long	.LEFDE84-.LASFDE84
.LASFDE84:
	.secrel32	.Lframe0
	.quad	.LFB8987
	.quad	.LFE8987-.LFB8987
	.byte	0x4
	.long	.LCFI137-.LFB8987
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI138-.LCFI137
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI139-.LCFI138
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE84:
.LSFDE86:
	.long	.LEFDE86-.LASFDE86
.LASFDE86:
	.secrel32	.Lframe0
	.quad	.LFB8988
	.quad	.LFE8988-.LFB8988
	.byte	0x4
	.long	.LCFI140-.LFB8988
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI141-.LCFI140
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI142-.LCFI141
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE86:
.LSFDE88:
	.long	.LEFDE88-.LASFDE88
.LASFDE88:
	.secrel32	.Lframe0
	.quad	.LFB8989
	.quad	.LFE8989-.LFB8989
	.byte	0x4
	.long	.LCFI143-.LFB8989
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI144-.LCFI143
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI145-.LCFI144
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE88:
.LSFDE90:
	.long	.LEFDE90-.LASFDE90
.LASFDE90:
	.secrel32	.Lframe0
	.quad	.LFB8990
	.quad	.LFE8990-.LFB8990
	.byte	0x4
	.long	.LCFI146-.LFB8990
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI147-.LCFI146
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI148-.LCFI147
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI149-.LCFI148
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI150-.LCFI149
	.byte	0xc3
	.byte	0x4
	.long	.LCFI151-.LCFI150
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE90:
.LSFDE92:
	.long	.LEFDE92-.LASFDE92
.LASFDE92:
	.secrel32	.Lframe0
	.quad	.LFB8991
	.quad	.LFE8991-.LFB8991
	.byte	0x4
	.long	.LCFI152-.LFB8991
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI153-.LCFI152
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI154-.LCFI153
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE92:
.LSFDE94:
	.long	.LEFDE94-.LASFDE94
.LASFDE94:
	.secrel32	.Lframe0
	.quad	.LFB9402
	.quad	.LFE9402-.LFB9402
	.byte	0x4
	.long	.LCFI155-.LFB9402
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI156-.LCFI155
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI157-.LCFI156
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE94:
.LSFDE96:
	.long	.LEFDE96-.LASFDE96
.LASFDE96:
	.secrel32	.Lframe0
	.quad	.LFB9404
	.quad	.LFE9404-.LFB9404
	.byte	0x4
	.long	.LCFI158-.LFB9404
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI159-.LCFI158
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI160-.LCFI159
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE96:
.LSFDE98:
	.long	.LEFDE98-.LASFDE98
.LASFDE98:
	.secrel32	.Lframe0
	.quad	.LFB9603
	.quad	.LFE9603-.LFB9603
	.byte	0x4
	.long	.LCFI161-.LFB9603
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI162-.LCFI161
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI163-.LCFI162
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE98:
.LSFDE100:
	.long	.LEFDE100-.LASFDE100
.LASFDE100:
	.secrel32	.Lframe0
	.quad	.LFB9606
	.quad	.LFE9606-.LFB9606
	.byte	0x4
	.long	.LCFI164-.LFB9606
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI165-.LCFI164
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI166-.LCFI165
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE100:
.LSFDE102:
	.long	.LEFDE102-.LASFDE102
.LASFDE102:
	.secrel32	.Lframe0
	.quad	.LFB9610
	.quad	.LFE9610-.LFB9610
	.byte	0x4
	.long	.LCFI167-.LFB9610
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI168-.LCFI167
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI169-.LCFI168
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE102:
.LSFDE104:
	.long	.LEFDE104-.LASFDE104
.LASFDE104:
	.secrel32	.Lframe0
	.quad	.LFB9614
	.quad	.LFE9614-.LFB9614
	.byte	0x4
	.long	.LCFI170-.LFB9614
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI171-.LCFI170
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI172-.LCFI171
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE104:
.LSFDE106:
	.long	.LEFDE106-.LASFDE106
.LASFDE106:
	.secrel32	.Lframe0
	.quad	.LFB9615
	.quad	.LFE9615-.LFB9615
	.byte	0x4
	.long	.LCFI173-.LFB9615
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI174-.LCFI173
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI175-.LCFI174
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE106:
.LSFDE108:
	.long	.LEFDE108-.LASFDE108
.LASFDE108:
	.secrel32	.Lframe0
	.quad	.LFB9617
	.quad	.LFE9617-.LFB9617
	.byte	0x4
	.long	.LCFI176-.LFB9617
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI177-.LCFI176
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI178-.LCFI177
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE108:
.LSFDE110:
	.long	.LEFDE110-.LASFDE110
.LASFDE110:
	.secrel32	.Lframe0
	.quad	.LFB9618
	.quad	.LFE9618-.LFB9618
	.byte	0x4
	.long	.LCFI179-.LFB9618
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI180-.LCFI179
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI181-.LCFI180
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE110:
.LSFDE112:
	.long	.LEFDE112-.LASFDE112
.LASFDE112:
	.secrel32	.Lframe0
	.quad	.LFB9625
	.quad	.LFE9625-.LFB9625
	.byte	0x4
	.long	.LCFI182-.LFB9625
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI183-.LCFI182
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI184-.LCFI183
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE112:
.LSFDE114:
	.long	.LEFDE114-.LASFDE114
.LASFDE114:
	.secrel32	.Lframe0
	.quad	.LFB9626
	.quad	.LFE9626-.LFB9626
	.byte	0x4
	.long	.LCFI185-.LFB9626
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI186-.LCFI185
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI187-.LCFI186
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE114:
.LSFDE116:
	.long	.LEFDE116-.LASFDE116
.LASFDE116:
	.secrel32	.Lframe0
	.quad	.LFB9627
	.quad	.LFE9627-.LFB9627
	.byte	0x4
	.long	.LCFI188-.LFB9627
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI189-.LCFI188
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI190-.LCFI189
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE116:
.LSFDE118:
	.long	.LEFDE118-.LASFDE118
.LASFDE118:
	.secrel32	.Lframe0
	.quad	.LFB9701
	.quad	.LFE9701-.LFB9701
	.byte	0x4
	.long	.LCFI191-.LFB9701
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI192-.LCFI191
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI193-.LCFI192
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE118:
.LSFDE120:
	.long	.LEFDE120-.LASFDE120
.LASFDE120:
	.secrel32	.Lframe0
	.quad	.LFB9700
	.quad	.LFE9700-.LFB9700
	.byte	0x4
	.long	.LCFI194-.LFB9700
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI195-.LCFI194
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI196-.LCFI195
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI197-.LCFI196
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI198-.LCFI197
	.byte	0xc3
	.byte	0x4
	.long	.LCFI199-.LCFI198
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE120:
.LSFDE122:
	.long	.LEFDE122-.LASFDE122
.LASFDE122:
	.secrel32	.Lframe0
	.quad	.LFB9703
	.quad	.LFE9703-.LFB9703
	.byte	0x4
	.long	.LCFI200-.LFB9703
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI201-.LCFI200
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI202-.LCFI201
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE122:
.LSFDE124:
	.long	.LEFDE124-.LASFDE124
.LASFDE124:
	.secrel32	.Lframe0
	.quad	.LFB9707
	.quad	.LFE9707-.LFB9707
	.byte	0x4
	.long	.LCFI203-.LFB9707
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI204-.LCFI203
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI205-.LCFI204
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE124:
.LSFDE126:
	.long	.LEFDE126-.LASFDE126
.LASFDE126:
	.secrel32	.Lframe0
	.quad	.LFB9708
	.quad	.LFE9708-.LFB9708
	.byte	0x4
	.long	.LCFI206-.LFB9708
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI207-.LCFI206
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI208-.LCFI207
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE126:
.LSFDE128:
	.long	.LEFDE128-.LASFDE128
.LASFDE128:
	.secrel32	.Lframe0
	.quad	.LFB9727
	.quad	.LFE9727-.LFB9727
	.byte	0x4
	.long	.LCFI209-.LFB9727
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI210-.LCFI209
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI211-.LCFI210
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE128:
.LSFDE130:
	.long	.LEFDE130-.LASFDE130
.LASFDE130:
	.secrel32	.Lframe0
	.quad	.LFB9747
	.quad	.LFE9747-.LFB9747
	.byte	0x4
	.long	.LCFI212-.LFB9747
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI213-.LCFI212
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI214-.LCFI213
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE130:
.LSFDE132:
	.long	.LEFDE132-.LASFDE132
.LASFDE132:
	.secrel32	.Lframe0
	.quad	.LFB9743
	.quad	.LFE9743-.LFB9743
	.byte	0x4
	.long	.LCFI215-.LFB9743
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI216-.LCFI215
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI217-.LCFI216
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI218-.LCFI217
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI219-.LCFI218
	.byte	0xc3
	.byte	0x4
	.long	.LCFI220-.LCFI219
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE132:
.LSFDE134:
	.long	.LEFDE134-.LASFDE134
.LASFDE134:
	.secrel32	.Lframe0
	.quad	.LFB9886
	.quad	.LFE9886-.LFB9886
	.byte	0x4
	.long	.LCFI221-.LFB9886
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI222-.LCFI221
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI223-.LCFI222
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE134:
.LSFDE136:
	.long	.LEFDE136-.LASFDE136
.LASFDE136:
	.secrel32	.Lframe0
	.quad	.LFB10616
	.quad	.LFE10616-.LFB10616
	.byte	0x4
	.long	.LCFI224-.LFB10616
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI225-.LCFI224
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI226-.LCFI225
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE136:
.LSFDE138:
	.long	.LEFDE138-.LASFDE138
.LASFDE138:
	.secrel32	.Lframe0
	.quad	.LFB10623
	.quad	.LFE10623-.LFB10623
	.byte	0x4
	.long	.LCFI227-.LFB10623
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI228-.LCFI227
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI229-.LCFI228
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE138:
.LSFDE140:
	.long	.LEFDE140-.LASFDE140
.LASFDE140:
	.secrel32	.Lframe0
	.quad	.LFB10637
	.quad	.LFE10637-.LFB10637
	.byte	0x4
	.long	.LCFI230-.LFB10637
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI231-.LCFI230
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI232-.LCFI231
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE140:
.LSFDE142:
	.long	.LEFDE142-.LASFDE142
.LASFDE142:
	.secrel32	.Lframe0
	.quad	.LFB10642
	.quad	.LFE10642-.LFB10642
	.byte	0x4
	.long	.LCFI233-.LFB10642
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI234-.LCFI233
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI235-.LCFI234
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE142:
.LSFDE144:
	.long	.LEFDE144-.LASFDE144
.LASFDE144:
	.secrel32	.Lframe0
	.quad	.LFB10691
	.quad	.LFE10691-.LFB10691
	.byte	0x4
	.long	.LCFI236-.LFB10691
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI237-.LCFI236
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI238-.LCFI237
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE144:
.LSFDE146:
	.long	.LEFDE146-.LASFDE146
.LASFDE146:
	.secrel32	.Lframe0
	.quad	.LFB10696
	.quad	.LFE10696-.LFB10696
	.byte	0x4
	.long	.LCFI239-.LFB10696
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI240-.LCFI239
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI241-.LCFI240
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE146:
.LSFDE148:
	.long	.LEFDE148-.LASFDE148
.LASFDE148:
	.secrel32	.Lframe0
	.quad	.LFB10722
	.quad	.LFE10722-.LFB10722
	.byte	0x4
	.long	.LCFI242-.LFB10722
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI243-.LCFI242
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI244-.LCFI243
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE148:
.LSFDE150:
	.long	.LEFDE150-.LASFDE150
.LASFDE150:
	.secrel32	.Lframe0
	.quad	.LFB10823
	.quad	.LFE10823-.LFB10823
	.byte	0x4
	.long	.LCFI245-.LFB10823
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI246-.LCFI245
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI247-.LCFI246
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE150:
.LSFDE152:
	.long	.LEFDE152-.LASFDE152
.LASFDE152:
	.secrel32	.Lframe0
	.quad	.LFB10889
	.quad	.LFE10889-.LFB10889
	.byte	0x4
	.long	.LCFI248-.LFB10889
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI249-.LCFI248
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI250-.LCFI249
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE152:
.LSFDE154:
	.long	.LEFDE154-.LASFDE154
.LASFDE154:
	.secrel32	.Lframe0
	.quad	.LFB10904
	.quad	.LFE10904-.LFB10904
	.byte	0x4
	.long	.LCFI251-.LFB10904
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI252-.LCFI251
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI253-.LCFI252
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE154:
.LSFDE156:
	.long	.LEFDE156-.LASFDE156
.LASFDE156:
	.secrel32	.Lframe0
	.quad	.LFB10916
	.quad	.LFE10916-.LFB10916
	.byte	0x4
	.long	.LCFI254-.LFB10916
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI255-.LCFI254
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI256-.LCFI255
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE156:
.LSFDE158:
	.long	.LEFDE158-.LASFDE158
.LASFDE158:
	.secrel32	.Lframe0
	.quad	.LFB10920
	.quad	.LFE10920-.LFB10920
	.byte	0x4
	.long	.LCFI257-.LFB10920
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI258-.LCFI257
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI259-.LCFI258
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE158:
.LSFDE160:
	.long	.LEFDE160-.LASFDE160
.LASFDE160:
	.secrel32	.Lframe0
	.quad	.LFB10922
	.quad	.LFE10922-.LFB10922
	.byte	0x4
	.long	.LCFI260-.LFB10922
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI261-.LCFI260
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI262-.LCFI261
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE160:
.LSFDE162:
	.long	.LEFDE162-.LASFDE162
.LASFDE162:
	.secrel32	.Lframe0
	.quad	.LFB10921
	.quad	.LFE10921-.LFB10921
	.byte	0x4
	.long	.LCFI263-.LFB10921
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI264-.LCFI263
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI265-.LCFI264
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE162:
.LSFDE164:
	.long	.LEFDE164-.LASFDE164
.LASFDE164:
	.secrel32	.Lframe0
	.quad	.LFB10917
	.quad	.LFE10917-.LFB10917
	.byte	0x4
	.long	.LCFI266-.LFB10917
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI267-.LCFI266
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI268-.LCFI267
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI269-.LCFI268
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI270-.LCFI269
	.byte	0xe
	.uleb128 0x140
	.byte	0x4
	.long	.LCFI271-.LCFI270
	.byte	0xc
	.uleb128 0x6
	.uleb128 0xc0
	.byte	0x4
	.long	.LCFI272-.LCFI271
	.byte	0xc3
	.byte	0x4
	.long	.LCFI273-.LCFI272
	.byte	0xc4
	.byte	0x4
	.long	.LCFI274-.LCFI273
	.byte	0xc5
	.byte	0x4
	.long	.LCFI275-.LCFI274
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 31
	.align 8
.LEFDE164:
.LSFDE166:
	.long	.LEFDE166-.LASFDE166
.LASFDE166:
	.secrel32	.Lframe0
	.quad	.LFB10923
	.quad	.LFE10923-.LFB10923
	.byte	0x4
	.long	.LCFI276-.LFB10923
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI277-.LCFI276
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI278-.LCFI277
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI279-.LCFI278
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI280-.LCFI279
	.byte	0xc3
	.byte	0x4
	.long	.LCFI281-.LCFI280
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE166:
.LSFDE168:
	.long	.LEFDE168-.LASFDE168
.LASFDE168:
	.secrel32	.Lframe0
	.quad	.LFB10924
	.quad	.LFE10924-.LFB10924
	.byte	0x4
	.long	.LCFI282-.LFB10924
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI283-.LCFI282
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI284-.LCFI283
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI285-.LCFI284
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI286-.LCFI285
	.byte	0xc3
	.byte	0x4
	.long	.LCFI287-.LCFI286
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE168:
.LSFDE170:
	.long	.LEFDE170-.LASFDE170
.LASFDE170:
	.secrel32	.Lframe0
	.quad	.LFB10925
	.quad	.LFE10925-.LFB10925
	.byte	0x4
	.long	.LCFI288-.LFB10925
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI289-.LCFI288
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI290-.LCFI289
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE170:
.LSFDE172:
	.long	.LEFDE172-.LASFDE172
.LASFDE172:
	.secrel32	.Lframe0
	.quad	.LFB10927
	.quad	.LFE10927-.LFB10927
	.byte	0x4
	.long	.LCFI291-.LFB10927
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI292-.LCFI291
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI293-.LCFI292
	.byte	0xe
	.uleb128 0x130
	.byte	0x4
	.long	.LCFI294-.LCFI293
	.byte	0xc
	.uleb128 0x6
	.uleb128 0xb0
	.byte	0x4
	.long	.LCFI295-.LCFI294
	.byte	0xc3
	.byte	0x4
	.long	.LCFI296-.LCFI295
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 33
	.align 8
.LEFDE172:
.LSFDE174:
	.long	.LEFDE174-.LASFDE174
.LASFDE174:
	.secrel32	.Lframe0
	.quad	.LFB10930
	.quad	.LFE10930-.LFB10930
	.byte	0x4
	.long	.LCFI297-.LFB10930
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI298-.LCFI297
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI299-.LCFI298
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE174:
.LSFDE176:
	.long	.LEFDE176-.LASFDE176
.LASFDE176:
	.secrel32	.Lframe0
	.quad	.LFB10931
	.quad	.LFE10931-.LFB10931
	.byte	0x4
	.long	.LCFI300-.LFB10931
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI301-.LCFI300
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI302-.LCFI301
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI303-.LCFI302
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI304-.LCFI303
	.byte	0xc3
	.byte	0x4
	.long	.LCFI305-.LCFI304
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE176:
.LSFDE178:
	.long	.LEFDE178-.LASFDE178
.LASFDE178:
	.secrel32	.Lframe0
	.quad	.LFB10935
	.quad	.LFE10935-.LFB10935
	.byte	0x4
	.long	.LCFI306-.LFB10935
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI307-.LCFI306
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI308-.LCFI307
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE178:
.LSFDE180:
	.long	.LEFDE180-.LASFDE180
.LASFDE180:
	.secrel32	.Lframe0
	.quad	.LFB10941
	.quad	.LFE10941-.LFB10941
	.byte	0x4
	.long	.LCFI309-.LFB10941
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI310-.LCFI309
	.byte	0xe
	.uleb128 0x430
	.byte	0x4
	.long	.LCFI311-.LCFI310
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x3b0
	.byte	0x4
	.long	.LCFI312-.LCFI311
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 131
	.align 8
.LEFDE180:
.LSFDE182:
	.long	.LEFDE182-.LASFDE182
.LASFDE182:
	.secrel32	.Lframe0
	.quad	.LFB10942
	.quad	.LFE10942-.LFB10942
	.byte	0x4
	.long	.LCFI313-.LFB10942
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI314-.LCFI313
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI315-.LCFI314
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE182:
.LSFDE184:
	.long	.LEFDE184-.LASFDE184
.LASFDE184:
	.secrel32	.Lframe0
	.quad	.LFB10943
	.quad	.LFE10943-.LFB10943
	.byte	0x4
	.long	.LCFI316-.LFB10943
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI317-.LCFI316
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI318-.LCFI317
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE184:
.LSFDE186:
	.long	.LEFDE186-.LASFDE186
.LASFDE186:
	.secrel32	.Lframe0
	.quad	.LFB10944
	.quad	.LFE10944-.LFB10944
	.byte	0x4
	.long	.LCFI319-.LFB10944
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI320-.LCFI319
	.byte	0xe
	.uleb128 0x18
	.byte	0x8c
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI321-.LCFI320
	.byte	0xe
	.uleb128 0x20
	.byte	0x85
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI322-.LCFI321
	.byte	0xe
	.uleb128 0x28
	.byte	0x84
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI323-.LCFI322
	.byte	0xe
	.uleb128 0x30
	.byte	0x83
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI324-.LCFI323
	.byte	0xe
	.uleb128 0xc0
	.byte	0x4
	.long	.LCFI325-.LCFI324
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI326-.LCFI325
	.byte	0xc3
	.byte	0x4
	.long	.LCFI327-.LCFI326
	.byte	0xc4
	.byte	0x4
	.long	.LCFI328-.LCFI327
	.byte	0xc5
	.byte	0x4
	.long	.LCFI329-.LCFI328
	.byte	0xcc
	.byte	0x4
	.long	.LCFI330-.LCFI329
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 13
	.align 8
.LEFDE186:
.LSFDE188:
	.long	.LEFDE188-.LASFDE188
.LASFDE188:
	.secrel32	.Lframe0
	.quad	.LFB10948
	.quad	.LFE10948-.LFB10948
	.byte	0x4
	.long	.LCFI331-.LFB10948
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI332-.LCFI331
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI333-.LCFI332
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE188:
.LSFDE190:
	.long	.LEFDE190-.LASFDE190
.LASFDE190:
	.secrel32	.Lframe0
	.quad	.LFB10951
	.quad	.LFE10951-.LFB10951
	.byte	0x4
	.long	.LCFI334-.LFB10951
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI335-.LCFI334
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI336-.LCFI335
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE190:
.LSFDE192:
	.long	.LEFDE192-.LASFDE192
.LASFDE192:
	.secrel32	.Lframe0
	.quad	.LFB10945
	.quad	.LFE10945-.LFB10945
	.byte	0x4
	.long	.LCFI337-.LFB10945
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI338-.LCFI337
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI339-.LCFI338
	.byte	0xe
	.uleb128 0x6b0
	.byte	0x4
	.long	.LCFI340-.LCFI339
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x630
	.byte	0x4
	.long	.LCFI341-.LCFI340
	.byte	0xc3
	.byte	0x4
	.long	.LCFI342-.LCFI341
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 209
	.align 8
.LEFDE192:
.LSFDE194:
	.long	.LEFDE194-.LASFDE194
.LASFDE194:
	.secrel32	.Lframe0
	.quad	.LFB10952
	.quad	.LFE10952-.LFB10952
	.byte	0x4
	.long	.LCFI343-.LFB10952
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI344-.LCFI343
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI345-.LCFI344
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE194:
.LSFDE196:
	.long	.LEFDE196-.LASFDE196
.LASFDE196:
	.secrel32	.Lframe0
	.quad	.LFB10953
	.quad	.LFE10953-.LFB10953
	.byte	0x4
	.long	.LCFI346-.LFB10953
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI347-.LCFI346
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI348-.LCFI347
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE196:
.LSFDE198:
	.long	.LEFDE198-.LASFDE198
.LASFDE198:
	.secrel32	.Lframe0
	.quad	.LFB10957
	.quad	.LFE10957-.LFB10957
	.byte	0x4
	.long	.LCFI349-.LFB10957
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI350-.LCFI349
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI351-.LCFI350
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE198:
.LSFDE200:
	.long	.LEFDE200-.LASFDE200
.LASFDE200:
	.secrel32	.Lframe0
	.quad	.LFB10975
	.quad	.LFE10975-.LFB10975
	.byte	0x4
	.long	.LCFI352-.LFB10975
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI353-.LCFI352
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI354-.LCFI353
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE200:
.LSFDE202:
	.long	.LEFDE202-.LASFDE202
.LASFDE202:
	.secrel32	.Lframe0
	.quad	.LFB10986
	.quad	.LFE10986-.LFB10986
	.byte	0x4
	.long	.LCFI355-.LFB10986
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI356-.LCFI355
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI357-.LCFI356
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE202:
.LSFDE204:
	.long	.LEFDE204-.LASFDE204
.LASFDE204:
	.secrel32	.Lframe0
	.quad	.LFB10988
	.quad	.LFE10988-.LFB10988
	.byte	0x4
	.long	.LCFI358-.LFB10988
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI359-.LCFI358
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI360-.LCFI359
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE204:
.LSFDE206:
	.long	.LEFDE206-.LASFDE206
.LASFDE206:
	.secrel32	.Lframe0
	.quad	.LFB10990
	.quad	.LFE10990-.LFB10990
	.byte	0x4
	.long	.LCFI361-.LFB10990
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI362-.LCFI361
	.byte	0xe
	.uleb128 0x18
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI363-.LCFI362
	.byte	0xe
	.uleb128 0x20
	.byte	0x8d
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI364-.LCFI363
	.byte	0xe
	.uleb128 0x28
	.byte	0x8c
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI365-.LCFI364
	.byte	0xe
	.uleb128 0x30
	.byte	0x85
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI366-.LCFI365
	.byte	0xe
	.uleb128 0x38
	.byte	0x84
	.uleb128 0x7
	.byte	0x4
	.long	.LCFI367-.LCFI366
	.byte	0xe
	.uleb128 0x40
	.byte	0x83
	.uleb128 0x8
	.byte	0x4
	.long	.LCFI368-.LCFI367
	.byte	0xe
	.uleb128 0xb0
	.byte	0x4
	.long	.LCFI369-.LCFI368
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI370-.LCFI369
	.byte	0xc3
	.byte	0x4
	.long	.LCFI371-.LCFI370
	.byte	0xc4
	.byte	0x4
	.long	.LCFI372-.LCFI371
	.byte	0xc5
	.byte	0x4
	.long	.LCFI373-.LCFI372
	.byte	0xcc
	.byte	0x4
	.long	.LCFI374-.LCFI373
	.byte	0xcd
	.byte	0x4
	.long	.LCFI375-.LCFI374
	.byte	0xce
	.byte	0x4
	.long	.LCFI376-.LCFI375
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE206:
.LSFDE208:
	.long	.LEFDE208-.LASFDE208
.LASFDE208:
	.secrel32	.Lframe0
	.quad	.LFB10954
	.quad	.LFE10954-.LFB10954
	.byte	0x4
	.long	.LCFI377-.LFB10954
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI378-.LCFI377
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI379-.LCFI378
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI380-.LCFI379
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI381-.LCFI380
	.byte	0xe
	.uleb128 0x610
	.byte	0x4
	.long	.LCFI382-.LCFI381
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x590
	.byte	0x4
	.long	.LCFI383-.LCFI382
	.byte	0xc3
	.byte	0x4
	.long	.LCFI384-.LCFI383
	.byte	0xc4
	.byte	0x4
	.long	.LCFI385-.LCFI384
	.byte	0xc5
	.byte	0x4
	.long	.LCFI386-.LCFI385
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 185
	.align 8
.LEFDE208:
.LSFDE210:
	.long	.LEFDE210-.LASFDE210
.LASFDE210:
	.secrel32	.Lframe0
	.quad	.LFB11356
	.quad	.LFE11356-.LFB11356
	.byte	0x4
	.long	.LCFI387-.LFB11356
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI388-.LCFI387
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI389-.LCFI388
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE210:
.LSFDE212:
	.long	.LEFDE212-.LASFDE212
.LASFDE212:
	.secrel32	.Lframe0
	.quad	.LFB11359
	.quad	.LFE11359-.LFB11359
	.byte	0x4
	.long	.LCFI390-.LFB11359
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI391-.LCFI390
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI392-.LCFI391
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE212:
.LSFDE214:
	.long	.LEFDE214-.LASFDE214
.LASFDE214:
	.secrel32	.Lframe0
	.quad	.LFB11365
	.quad	.LFE11365-.LFB11365
	.byte	0x4
	.long	.LCFI393-.LFB11365
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI394-.LCFI393
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI395-.LCFI394
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE214:
.LSFDE216:
	.long	.LEFDE216-.LASFDE216
.LASFDE216:
	.secrel32	.Lframe0
	.quad	.LFB11366
	.quad	.LFE11366-.LFB11366
	.byte	0x4
	.long	.LCFI396-.LFB11366
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI397-.LCFI396
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI398-.LCFI397
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE216:
.LSFDE218:
	.long	.LEFDE218-.LASFDE218
.LASFDE218:
	.secrel32	.Lframe0
	.quad	.LFB11369
	.quad	.LFE11369-.LFB11369
	.byte	0x4
	.long	.LCFI399-.LFB11369
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI400-.LCFI399
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI401-.LCFI400
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE218:
.LSFDE220:
	.long	.LEFDE220-.LASFDE220
.LASFDE220:
	.secrel32	.Lframe0
	.quad	.LFB11420
	.quad	.LFE11420-.LFB11420
	.byte	0x4
	.long	.LCFI402-.LFB11420
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI403-.LCFI402
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI404-.LCFI403
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE220:
.LSFDE222:
	.long	.LEFDE222-.LASFDE222
.LASFDE222:
	.secrel32	.Lframe0
	.quad	.LFB11445
	.quad	.LFE11445-.LFB11445
	.byte	0x4
	.long	.LCFI405-.LFB11445
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI406-.LCFI405
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI407-.LCFI406
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE222:
.LSFDE224:
	.long	.LEFDE224-.LASFDE224
.LASFDE224:
	.secrel32	.Lframe0
	.quad	.LFB11446
	.quad	.LFE11446-.LFB11446
	.byte	0x4
	.long	.LCFI408-.LFB11446
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI409-.LCFI408
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI410-.LCFI409
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE224:
.LSFDE226:
	.long	.LEFDE226-.LASFDE226
.LASFDE226:
	.secrel32	.Lframe0
	.quad	.LFB11447
	.quad	.LFE11447-.LFB11447
	.byte	0x4
	.long	.LCFI411-.LFB11447
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI412-.LCFI411
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI413-.LCFI412
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE226:
.LSFDE228:
	.long	.LEFDE228-.LASFDE228
.LASFDE228:
	.secrel32	.Lframe0
	.quad	.LFB11448
	.quad	.LFE11448-.LFB11448
	.byte	0x4
	.long	.LCFI414-.LFB11448
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI415-.LCFI414
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI416-.LCFI415
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE228:
.LSFDE230:
	.long	.LEFDE230-.LASFDE230
.LASFDE230:
	.secrel32	.Lframe0
	.quad	.LFB11449
	.quad	.LFE11449-.LFB11449
	.byte	0x4
	.long	.LCFI417-.LFB11449
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI418-.LCFI417
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI419-.LCFI418
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE230:
.LSFDE232:
	.long	.LEFDE232-.LASFDE232
.LASFDE232:
	.secrel32	.Lframe0
	.quad	.LFB11476
	.quad	.LFE11476-.LFB11476
	.byte	0x4
	.long	.LCFI420-.LFB11476
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI421-.LCFI420
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI422-.LCFI421
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE232:
.LSFDE234:
	.long	.LEFDE234-.LASFDE234
.LASFDE234:
	.secrel32	.Lframe0
	.quad	.LFB11480
	.quad	.LFE11480-.LFB11480
	.byte	0x4
	.long	.LCFI423-.LFB11480
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI424-.LCFI423
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI425-.LCFI424
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE234:
.LSFDE236:
	.long	.LEFDE236-.LASFDE236
.LASFDE236:
	.secrel32	.Lframe0
	.quad	.LFB11479
	.quad	.LFE11479-.LFB11479
	.byte	0x4
	.long	.LCFI426-.LFB11479
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI427-.LCFI426
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI428-.LCFI427
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI429-.LCFI428
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI430-.LCFI429
	.byte	0xc3
	.byte	0x4
	.long	.LCFI431-.LCFI430
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE236:
.LSFDE238:
	.long	.LEFDE238-.LASFDE238
.LASFDE238:
	.secrel32	.Lframe0
	.quad	.LFB11478
	.quad	.LFE11478-.LFB11478
	.byte	0x4
	.long	.LCFI432-.LFB11478
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI433-.LCFI432
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI434-.LCFI433
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE238:
.LSFDE240:
	.long	.LEFDE240-.LASFDE240
.LASFDE240:
	.secrel32	.Lframe0
	.quad	.LFB11484
	.quad	.LFE11484-.LFB11484
	.byte	0x4
	.long	.LCFI435-.LFB11484
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI436-.LCFI435
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI437-.LCFI436
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE240:
.LSFDE242:
	.long	.LEFDE242-.LASFDE242
.LASFDE242:
	.secrel32	.Lframe0
	.quad	.LFB11488
	.quad	.LFE11488-.LFB11488
	.byte	0x4
	.long	.LCFI438-.LFB11488
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI439-.LCFI438
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI440-.LCFI439
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE242:
.LSFDE244:
	.long	.LEFDE244-.LASFDE244
.LASFDE244:
	.secrel32	.Lframe0
	.quad	.LFB11553
	.quad	.LFE11553-.LFB11553
	.byte	0x4
	.long	.LCFI441-.LFB11553
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI442-.LCFI441
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI443-.LCFI442
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE244:
.LSFDE246:
	.long	.LEFDE246-.LASFDE246
.LASFDE246:
	.secrel32	.Lframe0
	.quad	.LFB11555
	.quad	.LFE11555-.LFB11555
	.byte	0x4
	.long	.LCFI444-.LFB11555
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI445-.LCFI444
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI446-.LCFI445
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE246:
.LSFDE248:
	.long	.LEFDE248-.LASFDE248
.LASFDE248:
	.secrel32	.Lframe0
	.quad	.LFB11558
	.quad	.LFE11558-.LFB11558
	.byte	0x4
	.long	.LCFI447-.LFB11558
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI448-.LCFI447
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI449-.LCFI448
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE248:
.LSFDE250:
	.long	.LEFDE250-.LASFDE250
.LASFDE250:
	.secrel32	.Lframe0
	.quad	.LFB11559
	.quad	.LFE11559-.LFB11559
	.byte	0x4
	.long	.LCFI450-.LFB11559
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI451-.LCFI450
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI452-.LCFI451
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE250:
.LSFDE252:
	.long	.LEFDE252-.LASFDE252
.LASFDE252:
	.secrel32	.Lframe0
	.quad	.LFB11560
	.quad	.LFE11560-.LFB11560
	.byte	0x4
	.long	.LCFI453-.LFB11560
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI454-.LCFI453
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI455-.LCFI454
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE252:
.LSFDE254:
	.long	.LEFDE254-.LASFDE254
.LASFDE254:
	.secrel32	.Lframe0
	.quad	.LFB11561
	.quad	.LFE11561-.LFB11561
	.byte	0x4
	.long	.LCFI456-.LFB11561
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI457-.LCFI456
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI458-.LCFI457
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE254:
.LSFDE256:
	.long	.LEFDE256-.LASFDE256
.LASFDE256:
	.secrel32	.Lframe0
	.quad	.LFB11562
	.quad	.LFE11562-.LFB11562
	.byte	0x4
	.long	.LCFI459-.LFB11562
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI460-.LCFI459
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI461-.LCFI460
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE256:
.LSFDE258:
	.long	.LEFDE258-.LASFDE258
.LASFDE258:
	.secrel32	.Lframe0
	.quad	.LFB11563
	.quad	.LFE11563-.LFB11563
	.byte	0x4
	.long	.LCFI462-.LFB11563
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI463-.LCFI462
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI464-.LCFI463
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE258:
.LSFDE260:
	.long	.LEFDE260-.LASFDE260
.LASFDE260:
	.secrel32	.Lframe0
	.quad	.LFB11568
	.quad	.LFE11568-.LFB11568
	.byte	0x4
	.long	.LCFI465-.LFB11568
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI466-.LCFI465
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI467-.LCFI466
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE260:
.LSFDE262:
	.long	.LEFDE262-.LASFDE262
.LASFDE262:
	.secrel32	.Lframe0
	.quad	.LFB11571
	.quad	.LFE11571-.LFB11571
	.byte	0x4
	.long	.LCFI468-.LFB11571
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI469-.LCFI468
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI470-.LCFI469
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE262:
.LSFDE264:
	.long	.LEFDE264-.LASFDE264
.LASFDE264:
	.secrel32	.Lframe0
	.quad	.LFB11573
	.quad	.LFE11573-.LFB11573
	.byte	0x4
	.long	.LCFI471-.LFB11573
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI472-.LCFI471
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI473-.LCFI472
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE264:
.LSFDE266:
	.long	.LEFDE266-.LASFDE266
.LASFDE266:
	.secrel32	.Lframe0
	.quad	.LFB11577
	.quad	.LFE11577-.LFB11577
	.byte	0x4
	.long	.LCFI474-.LFB11577
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI475-.LCFI474
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI476-.LCFI475
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE266:
.LSFDE268:
	.long	.LEFDE268-.LASFDE268
.LASFDE268:
	.secrel32	.Lframe0
	.quad	.LFB11579
	.quad	.LFE11579-.LFB11579
	.byte	0x4
	.long	.LCFI477-.LFB11579
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI478-.LCFI477
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI479-.LCFI478
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE268:
.LSFDE270:
	.long	.LEFDE270-.LASFDE270
.LASFDE270:
	.secrel32	.Lframe0
	.quad	.LFB11582
	.quad	.LFE11582-.LFB11582
	.byte	0x4
	.long	.LCFI480-.LFB11582
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI481-.LCFI480
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI482-.LCFI481
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE270:
.LSFDE272:
	.long	.LEFDE272-.LASFDE272
.LASFDE272:
	.secrel32	.Lframe0
	.quad	.LFB11583
	.quad	.LFE11583-.LFB11583
	.byte	0x4
	.long	.LCFI483-.LFB11583
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI484-.LCFI483
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI485-.LCFI484
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE272:
.LSFDE274:
	.long	.LEFDE274-.LASFDE274
.LASFDE274:
	.secrel32	.Lframe0
	.quad	.LFB11585
	.quad	.LFE11585-.LFB11585
	.byte	0x4
	.long	.LCFI486-.LFB11585
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI487-.LCFI486
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI488-.LCFI487
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI489-.LCFI488
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI490-.LCFI489
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI491-.LCFI490
	.byte	0xc3
	.byte	0x4
	.long	.LCFI492-.LCFI491
	.byte	0xc4
	.byte	0x4
	.long	.LCFI493-.LCFI492
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE274:
.LSFDE276:
	.long	.LEFDE276-.LASFDE276
.LASFDE276:
	.secrel32	.Lframe0
	.quad	.LFB11588
	.quad	.LFE11588-.LFB11588
	.byte	0x4
	.long	.LCFI494-.LFB11588
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI495-.LCFI494
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI496-.LCFI495
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE276:
.LSFDE278:
	.long	.LEFDE278-.LASFDE278
.LASFDE278:
	.secrel32	.Lframe0
	.quad	.LFB11590
	.quad	.LFE11590-.LFB11590
	.byte	0x4
	.long	.LCFI497-.LFB11590
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI498-.LCFI497
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI499-.LCFI498
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE278:
.LSFDE280:
	.long	.LEFDE280-.LASFDE280
.LASFDE280:
	.secrel32	.Lframe0
	.quad	.LFB11594
	.quad	.LFE11594-.LFB11594
	.byte	0x4
	.long	.LCFI500-.LFB11594
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI501-.LCFI500
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI502-.LCFI501
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE280:
.LSFDE282:
	.long	.LEFDE282-.LASFDE282
.LASFDE282:
	.secrel32	.Lframe0
	.quad	.LFB11595
	.quad	.LFE11595-.LFB11595
	.byte	0x4
	.long	.LCFI503-.LFB11595
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI504-.LCFI503
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI505-.LCFI504
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE282:
.LSFDE284:
	.long	.LEFDE284-.LASFDE284
.LASFDE284:
	.secrel32	.Lframe0
	.quad	.LFB11591
	.quad	.LFE11591-.LFB11591
	.byte	0x4
	.long	.LCFI506-.LFB11591
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI507-.LCFI506
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI508-.LCFI507
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE284:
.LSFDE286:
	.long	.LEFDE286-.LASFDE286
.LASFDE286:
	.secrel32	.Lframe0
	.quad	.LFB11611
	.quad	.LFE11611-.LFB11611
	.byte	0x4
	.long	.LCFI509-.LFB11611
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI510-.LCFI509
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI511-.LCFI510
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI512-.LCFI511
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI513-.LCFI512
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI514-.LCFI513
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI515-.LCFI514
	.byte	0xc3
	.byte	0x4
	.long	.LCFI516-.LCFI515
	.byte	0xc4
	.byte	0x4
	.long	.LCFI517-.LCFI516
	.byte	0xc5
	.byte	0x4
	.long	.LCFI518-.LCFI517
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE286:
.LSFDE288:
	.long	.LEFDE288-.LASFDE288
.LASFDE288:
	.secrel32	.Lframe0
	.quad	.LFB11783
	.quad	.LFE11783-.LFB11783
	.byte	0x4
	.long	.LCFI519-.LFB11783
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI520-.LCFI519
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI521-.LCFI520
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE288:
.LSFDE290:
	.long	.LEFDE290-.LASFDE290
.LASFDE290:
	.secrel32	.Lframe0
	.quad	.LFB11789
	.quad	.LFE11789-.LFB11789
	.byte	0x4
	.long	.LCFI522-.LFB11789
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI523-.LCFI522
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI524-.LCFI523
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE290:
.LSFDE292:
	.long	.LEFDE292-.LASFDE292
.LASFDE292:
	.secrel32	.Lframe0
	.quad	.LFB11795
	.quad	.LFE11795-.LFB11795
	.byte	0x4
	.long	.LCFI525-.LFB11795
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI526-.LCFI525
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI527-.LCFI526
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE292:
.LSFDE294:
	.long	.LEFDE294-.LASFDE294
.LASFDE294:
	.secrel32	.Lframe0
	.quad	.LFB11796
	.quad	.LFE11796-.LFB11796
	.byte	0x4
	.long	.LCFI528-.LFB11796
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI529-.LCFI528
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI530-.LCFI529
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE294:
.LSFDE296:
	.long	.LEFDE296-.LASFDE296
.LASFDE296:
	.secrel32	.Lframe0
	.quad	.LFB11797
	.quad	.LFE11797-.LFB11797
	.byte	0x4
	.long	.LCFI531-.LFB11797
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI532-.LCFI531
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI533-.LCFI532
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE296:
.LSFDE298:
	.long	.LEFDE298-.LASFDE298
.LASFDE298:
	.secrel32	.Lframe0
	.quad	.LFB11805
	.quad	.LFE11805-.LFB11805
	.byte	0x4
	.long	.LCFI534-.LFB11805
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI535-.LCFI534
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI536-.LCFI535
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI537-.LCFI536
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI538-.LCFI537
	.byte	0xc3
	.byte	0x4
	.long	.LCFI539-.LCFI538
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE298:
.LSFDE300:
	.long	.LEFDE300-.LASFDE300
.LASFDE300:
	.secrel32	.Lframe0
	.quad	.LFB11807
	.quad	.LFE11807-.LFB11807
	.byte	0x4
	.long	.LCFI540-.LFB11807
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI541-.LCFI540
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI542-.LCFI541
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE300:
.LSFDE302:
	.long	.LEFDE302-.LASFDE302
.LASFDE302:
	.secrel32	.Lframe0
	.quad	.LFB11809
	.quad	.LFE11809-.LFB11809
	.byte	0x4
	.long	.LCFI543-.LFB11809
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI544-.LCFI543
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI545-.LCFI544
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE302:
.LSFDE304:
	.long	.LEFDE304-.LASFDE304
.LASFDE304:
	.secrel32	.Lframe0
	.quad	.LFB11810
	.quad	.LFE11810-.LFB11810
	.byte	0x4
	.long	.LCFI546-.LFB11810
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI547-.LCFI546
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI548-.LCFI547
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE304:
.LSFDE306:
	.long	.LEFDE306-.LASFDE306
.LASFDE306:
	.secrel32	.Lframe0
	.quad	.LFB11811
	.quad	.LFE11811-.LFB11811
	.byte	0x4
	.long	.LCFI549-.LFB11811
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI550-.LCFI549
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI551-.LCFI550
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI552-.LCFI551
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI553-.LCFI552
	.byte	0xc3
	.byte	0x4
	.long	.LCFI554-.LCFI553
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE306:
.LSFDE308:
	.long	.LEFDE308-.LASFDE308
.LASFDE308:
	.secrel32	.Lframe0
	.quad	.LFB11815
	.quad	.LFE11815-.LFB11815
	.byte	0x4
	.long	.LCFI555-.LFB11815
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI556-.LCFI555
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI557-.LCFI556
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI558-.LCFI557
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI559-.LCFI558
	.byte	0xc3
	.byte	0x4
	.long	.LCFI560-.LCFI559
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE308:
.LSFDE310:
	.long	.LEFDE310-.LASFDE310
.LASFDE310:
	.secrel32	.Lframe0
	.quad	.LFB11817
	.quad	.LFE11817-.LFB11817
	.byte	0x4
	.long	.LCFI561-.LFB11817
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI562-.LCFI561
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI563-.LCFI562
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE310:
.LSFDE312:
	.long	.LEFDE312-.LASFDE312
.LASFDE312:
	.secrel32	.Lframe0
	.quad	.LFB11836
	.quad	.LFE11836-.LFB11836
	.byte	0x4
	.long	.LCFI564-.LFB11836
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI565-.LCFI564
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI566-.LCFI565
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI567-.LCFI566
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI568-.LCFI567
	.byte	0xc3
	.byte	0x4
	.long	.LCFI569-.LCFI568
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE312:
.LSFDE314:
	.long	.LEFDE314-.LASFDE314
.LASFDE314:
	.secrel32	.Lframe0
	.quad	.LFB11838
	.quad	.LFE11838-.LFB11838
	.byte	0x4
	.long	.LCFI570-.LFB11838
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI571-.LCFI570
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI572-.LCFI571
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE314:
.LSFDE316:
	.long	.LEFDE316-.LASFDE316
.LASFDE316:
	.secrel32	.Lframe0
	.quad	.LFB11839
	.quad	.LFE11839-.LFB11839
	.byte	0x4
	.long	.LCFI573-.LFB11839
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI574-.LCFI573
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI575-.LCFI574
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE316:
.LSFDE318:
	.long	.LEFDE318-.LASFDE318
.LASFDE318:
	.secrel32	.Lframe0
	.quad	.LFB11840
	.quad	.LFE11840-.LFB11840
	.byte	0x4
	.long	.LCFI576-.LFB11840
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI577-.LCFI576
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI578-.LCFI577
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE318:
.LSFDE320:
	.long	.LEFDE320-.LASFDE320
.LASFDE320:
	.secrel32	.Lframe0
	.quad	.LFB11841
	.quad	.LFE11841-.LFB11841
	.byte	0x4
	.long	.LCFI579-.LFB11841
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI580-.LCFI579
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI581-.LCFI580
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI582-.LCFI581
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI583-.LCFI582
	.byte	0xc3
	.byte	0x4
	.long	.LCFI584-.LCFI583
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE320:
.LSFDE322:
	.long	.LEFDE322-.LASFDE322
.LASFDE322:
	.secrel32	.Lframe0
	.quad	.LFB11842
	.quad	.LFE11842-.LFB11842
	.byte	0x4
	.long	.LCFI585-.LFB11842
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI586-.LCFI585
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI587-.LCFI586
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE322:
.LSFDE324:
	.long	.LEFDE324-.LASFDE324
.LASFDE324:
	.secrel32	.Lframe0
	.quad	.LFB11843
	.quad	.LFE11843-.LFB11843
	.byte	0x4
	.long	.LCFI588-.LFB11843
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI589-.LCFI588
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI590-.LCFI589
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE324:
.LSFDE326:
	.long	.LEFDE326-.LASFDE326
.LASFDE326:
	.secrel32	.Lframe0
	.quad	.LFB11844
	.quad	.LFE11844-.LFB11844
	.byte	0x4
	.long	.LCFI591-.LFB11844
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI592-.LCFI591
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI593-.LCFI592
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE326:
.LSFDE328:
	.long	.LEFDE328-.LASFDE328
.LASFDE328:
	.secrel32	.Lframe0
	.quad	.LFB11845
	.quad	.LFE11845-.LFB11845
	.byte	0x4
	.long	.LCFI594-.LFB11845
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI595-.LCFI594
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI596-.LCFI595
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE328:
.LSFDE330:
	.long	.LEFDE330-.LASFDE330
.LASFDE330:
	.secrel32	.Lframe0
	.quad	.LFB11846
	.quad	.LFE11846-.LFB11846
	.byte	0x4
	.long	.LCFI597-.LFB11846
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI598-.LCFI597
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI599-.LCFI598
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE330:
.LSFDE332:
	.long	.LEFDE332-.LASFDE332
.LASFDE332:
	.secrel32	.Lframe0
	.quad	.LFB11849
	.quad	.LFE11849-.LFB11849
	.byte	0x4
	.long	.LCFI600-.LFB11849
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI601-.LCFI600
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI602-.LCFI601
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE332:
.LSFDE334:
	.long	.LEFDE334-.LASFDE334
.LASFDE334:
	.secrel32	.Lframe0
	.quad	.LFB11852
	.quad	.LFE11852-.LFB11852
	.byte	0x4
	.long	.LCFI603-.LFB11852
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI604-.LCFI603
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI605-.LCFI604
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI606-.LCFI605
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI607-.LCFI606
	.byte	0xc3
	.byte	0x4
	.long	.LCFI608-.LCFI607
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE334:
.LSFDE336:
	.long	.LEFDE336-.LASFDE336
.LASFDE336:
	.secrel32	.Lframe0
	.quad	.LFB11854
	.quad	.LFE11854-.LFB11854
	.byte	0x4
	.long	.LCFI609-.LFB11854
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI610-.LCFI609
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI611-.LCFI610
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE336:
.LSFDE338:
	.long	.LEFDE338-.LASFDE338
.LASFDE338:
	.secrel32	.Lframe0
	.quad	.LFB11855
	.quad	.LFE11855-.LFB11855
	.byte	0x4
	.long	.LCFI612-.LFB11855
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI613-.LCFI612
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI614-.LCFI613
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE338:
.LSFDE340:
	.long	.LEFDE340-.LASFDE340
.LASFDE340:
	.secrel32	.Lframe0
	.quad	.LFB11856
	.quad	.LFE11856-.LFB11856
	.byte	0x4
	.long	.LCFI615-.LFB11856
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI616-.LCFI615
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI617-.LCFI616
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI618-.LCFI617
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI619-.LCFI618
	.byte	0xc3
	.byte	0x4
	.long	.LCFI620-.LCFI619
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE340:
.LSFDE342:
	.long	.LEFDE342-.LASFDE342
.LASFDE342:
	.secrel32	.Lframe0
	.quad	.LFB11857
	.quad	.LFE11857-.LFB11857
	.byte	0x4
	.long	.LCFI621-.LFB11857
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI622-.LCFI621
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI623-.LCFI622
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE342:
.LSFDE344:
	.long	.LEFDE344-.LASFDE344
.LASFDE344:
	.secrel32	.Lframe0
	.quad	.LFB11860
	.quad	.LFE11860-.LFB11860
	.byte	0x4
	.long	.LCFI624-.LFB11860
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI625-.LCFI624
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI626-.LCFI625
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE344:
.LSFDE346:
	.long	.LEFDE346-.LASFDE346
.LASFDE346:
	.secrel32	.Lframe0
	.quad	.LFB11859
	.quad	.LFE11859-.LFB11859
	.byte	0x4
	.long	.LCFI627-.LFB11859
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI628-.LCFI627
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI629-.LCFI628
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE346:
.LSFDE348:
	.long	.LEFDE348-.LASFDE348
.LASFDE348:
	.secrel32	.Lframe0
	.quad	.LFB11861
	.quad	.LFE11861-.LFB11861
	.byte	0x4
	.long	.LCFI630-.LFB11861
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI631-.LCFI630
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI632-.LCFI631
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI633-.LCFI632
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI634-.LCFI633
	.byte	0xc3
	.byte	0x4
	.long	.LCFI635-.LCFI634
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE348:
.LSFDE350:
	.long	.LEFDE350-.LASFDE350
.LASFDE350:
	.secrel32	.Lframe0
	.quad	.LFB11863
	.quad	.LFE11863-.LFB11863
	.byte	0x4
	.long	.LCFI636-.LFB11863
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI637-.LCFI636
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI638-.LCFI637
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE350:
.LSFDE352:
	.long	.LEFDE352-.LASFDE352
.LASFDE352:
	.secrel32	.Lframe0
	.quad	.LFB11864
	.quad	.LFE11864-.LFB11864
	.byte	0x4
	.long	.LCFI639-.LFB11864
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI640-.LCFI639
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI641-.LCFI640
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE352:
.LSFDE354:
	.long	.LEFDE354-.LASFDE354
.LASFDE354:
	.secrel32	.Lframe0
	.quad	.LFB11865
	.quad	.LFE11865-.LFB11865
	.byte	0x4
	.long	.LCFI642-.LFB11865
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI643-.LCFI642
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI644-.LCFI643
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE354:
.LSFDE356:
	.long	.LEFDE356-.LASFDE356
.LASFDE356:
	.secrel32	.Lframe0
	.quad	.LFB11866
	.quad	.LFE11866-.LFB11866
	.byte	0x4
	.long	.LCFI645-.LFB11866
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI646-.LCFI645
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI647-.LCFI646
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE356:
.LSFDE358:
	.long	.LEFDE358-.LASFDE358
.LASFDE358:
	.secrel32	.Lframe0
	.quad	.LFB11867
	.quad	.LFE11867-.LFB11867
	.byte	0x4
	.long	.LCFI648-.LFB11867
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI649-.LCFI648
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI650-.LCFI649
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE358:
.LSFDE360:
	.long	.LEFDE360-.LASFDE360
.LASFDE360:
	.secrel32	.Lframe0
	.quad	.LFB11868
	.quad	.LFE11868-.LFB11868
	.byte	0x4
	.long	.LCFI651-.LFB11868
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI652-.LCFI651
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI653-.LCFI652
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI654-.LCFI653
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI655-.LCFI654
	.byte	0xc3
	.byte	0x4
	.long	.LCFI656-.LCFI655
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE360:
.LSFDE362:
	.long	.LEFDE362-.LASFDE362
.LASFDE362:
	.secrel32	.Lframe0
	.quad	.LFB11869
	.quad	.LFE11869-.LFB11869
	.byte	0x4
	.long	.LCFI657-.LFB11869
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI658-.LCFI657
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI659-.LCFI658
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE362:
.LSFDE364:
	.long	.LEFDE364-.LASFDE364
.LASFDE364:
	.secrel32	.Lframe0
	.quad	.LFB11872
	.quad	.LFE11872-.LFB11872
	.byte	0x4
	.long	.LCFI660-.LFB11872
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI661-.LCFI660
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI662-.LCFI661
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE364:
.LSFDE366:
	.long	.LEFDE366-.LASFDE366
.LASFDE366:
	.secrel32	.Lframe0
	.quad	.LFB11880
	.quad	.LFE11880-.LFB11880
	.byte	0x4
	.long	.LCFI663-.LFB11880
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI664-.LCFI663
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI665-.LCFI664
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI666-.LCFI665
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI667-.LCFI666
	.byte	0xc3
	.byte	0x4
	.long	.LCFI668-.LCFI667
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE366:
.LSFDE368:
	.long	.LEFDE368-.LASFDE368
.LASFDE368:
	.secrel32	.Lframe0
	.quad	.LFB11885
	.quad	.LFE11885-.LFB11885
	.byte	0x4
	.long	.LCFI669-.LFB11885
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI670-.LCFI669
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI671-.LCFI670
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE368:
.LSFDE370:
	.long	.LEFDE370-.LASFDE370
.LASFDE370:
	.secrel32	.Lframe0
	.quad	.LFB11887
	.quad	.LFE11887-.LFB11887
	.byte	0x4
	.long	.LCFI672-.LFB11887
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI673-.LCFI672
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI674-.LCFI673
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE370:
.LSFDE372:
	.long	.LEFDE372-.LASFDE372
.LASFDE372:
	.secrel32	.Lframe0
	.quad	.LFB11890
	.quad	.LFE11890-.LFB11890
	.byte	0x4
	.long	.LCFI675-.LFB11890
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI676-.LCFI675
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI677-.LCFI676
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI678-.LCFI677
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI679-.LCFI678
	.byte	0xc3
	.byte	0x4
	.long	.LCFI680-.LCFI679
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE372:
.LSFDE374:
	.long	.LEFDE374-.LASFDE374
.LASFDE374:
	.secrel32	.Lframe0
	.quad	.LFB12007
	.quad	.LFE12007-.LFB12007
	.byte	0x4
	.long	.LCFI681-.LFB12007
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI682-.LCFI681
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI683-.LCFI682
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE374:
.LSFDE376:
	.long	.LEFDE376-.LASFDE376
.LASFDE376:
	.secrel32	.Lframe0
	.quad	.LFB12015
	.quad	.LFE12015-.LFB12015
	.byte	0x4
	.long	.LCFI684-.LFB12015
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI685-.LCFI684
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI686-.LCFI685
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE376:
.LSFDE378:
	.long	.LEFDE378-.LASFDE378
.LASFDE378:
	.secrel32	.Lframe0
	.quad	.LFB12019
	.quad	.LFE12019-.LFB12019
	.byte	0x4
	.long	.LCFI687-.LFB12019
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI688-.LCFI687
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI689-.LCFI688
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE378:
.LSFDE380:
	.long	.LEFDE380-.LASFDE380
.LASFDE380:
	.secrel32	.Lframe0
	.quad	.LFB12020
	.quad	.LFE12020-.LFB12020
	.byte	0x4
	.long	.LCFI690-.LFB12020
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI691-.LCFI690
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI692-.LCFI691
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE380:
.LSFDE382:
	.long	.LEFDE382-.LASFDE382
.LASFDE382:
	.secrel32	.Lframe0
	.quad	.LFB12023
	.quad	.LFE12023-.LFB12023
	.byte	0x4
	.long	.LCFI693-.LFB12023
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI694-.LCFI693
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI695-.LCFI694
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE382:
.LSFDE384:
	.long	.LEFDE384-.LASFDE384
.LASFDE384:
	.secrel32	.Lframe0
	.quad	.LFB12030
	.quad	.LFE12030-.LFB12030
	.byte	0x4
	.long	.LCFI696-.LFB12030
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI697-.LCFI696
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI698-.LCFI697
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE384:
.LSFDE386:
	.long	.LEFDE386-.LASFDE386
.LASFDE386:
	.secrel32	.Lframe0
	.quad	.LFB12033
	.quad	.LFE12033-.LFB12033
	.byte	0x4
	.long	.LCFI699-.LFB12033
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI700-.LCFI699
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI701-.LCFI700
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE386:
.LSFDE388:
	.long	.LEFDE388-.LASFDE388
.LASFDE388:
	.secrel32	.Lframe0
	.quad	.LFB12034
	.quad	.LFE12034-.LFB12034
	.byte	0x4
	.long	.LCFI702-.LFB12034
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI703-.LCFI702
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI704-.LCFI703
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE388:
.LSFDE390:
	.long	.LEFDE390-.LASFDE390
.LASFDE390:
	.secrel32	.Lframe0
	.quad	.LFB12035
	.quad	.LFE12035-.LFB12035
	.byte	0x4
	.long	.LCFI705-.LFB12035
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI706-.LCFI705
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI707-.LCFI706
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE390:
.LSFDE392:
	.long	.LEFDE392-.LASFDE392
.LASFDE392:
	.secrel32	.Lframe0
	.quad	.LFB12037
	.quad	.LFE12037-.LFB12037
	.byte	0x4
	.long	.LCFI708-.LFB12037
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI709-.LCFI708
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI710-.LCFI709
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE392:
.LSFDE394:
	.long	.LEFDE394-.LASFDE394
.LASFDE394:
	.secrel32	.Lframe0
	.quad	.LFB12041
	.quad	.LFE12041-.LFB12041
	.byte	0x4
	.long	.LCFI711-.LFB12041
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI712-.LCFI711
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI713-.LCFI712
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE394:
.LSFDE396:
	.long	.LEFDE396-.LASFDE396
.LASFDE396:
	.secrel32	.Lframe0
	.quad	.LFB12042
	.quad	.LFE12042-.LFB12042
	.byte	0x4
	.long	.LCFI714-.LFB12042
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI715-.LCFI714
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI716-.LCFI715
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE396:
.LSFDE398:
	.long	.LEFDE398-.LASFDE398
.LASFDE398:
	.secrel32	.Lframe0
	.quad	.LFB12043
	.quad	.LFE12043-.LFB12043
	.byte	0x4
	.long	.LCFI717-.LFB12043
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI718-.LCFI717
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI719-.LCFI718
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE398:
.LSFDE400:
	.long	.LEFDE400-.LASFDE400
.LASFDE400:
	.secrel32	.Lframe0
	.quad	.LFB12048
	.quad	.LFE12048-.LFB12048
	.byte	0x4
	.long	.LCFI720-.LFB12048
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI721-.LCFI720
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI722-.LCFI721
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE400:
.LSFDE402:
	.long	.LEFDE402-.LASFDE402
.LASFDE402:
	.secrel32	.Lframe0
	.quad	.LFB12050
	.quad	.LFE12050-.LFB12050
	.byte	0x4
	.long	.LCFI723-.LFB12050
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI724-.LCFI723
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI725-.LCFI724
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE402:
.LSFDE404:
	.long	.LEFDE404-.LASFDE404
.LASFDE404:
	.secrel32	.Lframe0
	.quad	.LFB12052
	.quad	.LFE12052-.LFB12052
	.byte	0x4
	.long	.LCFI726-.LFB12052
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI727-.LCFI726
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI728-.LCFI727
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE404:
.LSFDE406:
	.long	.LEFDE406-.LASFDE406
.LASFDE406:
	.secrel32	.Lframe0
	.quad	.LFB12054
	.quad	.LFE12054-.LFB12054
	.byte	0x4
	.long	.LCFI729-.LFB12054
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI730-.LCFI729
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI731-.LCFI730
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI732-.LCFI731
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI733-.LCFI732
	.byte	0xc3
	.byte	0x4
	.long	.LCFI734-.LCFI733
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE406:
.LSFDE408:
	.long	.LEFDE408-.LASFDE408
.LASFDE408:
	.secrel32	.Lframe0
	.quad	.LFB12055
	.quad	.LFE12055-.LFB12055
	.byte	0x4
	.long	.LCFI735-.LFB12055
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI736-.LCFI735
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI737-.LCFI736
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE408:
.LSFDE410:
	.long	.LEFDE410-.LASFDE410
.LASFDE410:
	.secrel32	.Lframe0
	.quad	.LFB12056
	.quad	.LFE12056-.LFB12056
	.byte	0x4
	.long	.LCFI738-.LFB12056
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI739-.LCFI738
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI740-.LCFI739
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE410:
.LSFDE412:
	.long	.LEFDE412-.LASFDE412
.LASFDE412:
	.secrel32	.Lframe0
	.quad	.LFB12057
	.quad	.LFE12057-.LFB12057
	.byte	0x4
	.long	.LCFI741-.LFB12057
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI742-.LCFI741
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI743-.LCFI742
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE412:
.LSFDE414:
	.long	.LEFDE414-.LASFDE414
.LASFDE414:
	.secrel32	.Lframe0
	.quad	.LFB12058
	.quad	.LFE12058-.LFB12058
	.byte	0x4
	.long	.LCFI744-.LFB12058
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI745-.LCFI744
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI746-.LCFI745
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE414:
.LSFDE416:
	.long	.LEFDE416-.LASFDE416
.LASFDE416:
	.secrel32	.Lframe0
	.quad	.LFB12059
	.quad	.LFE12059-.LFB12059
	.byte	0x4
	.long	.LCFI747-.LFB12059
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI748-.LCFI747
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI749-.LCFI748
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI750-.LCFI749
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI751-.LCFI750
	.byte	0xc3
	.byte	0x4
	.long	.LCFI752-.LCFI751
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE416:
.LSFDE418:
	.long	.LEFDE418-.LASFDE418
.LASFDE418:
	.secrel32	.Lframe0
	.quad	.LFB12060
	.quad	.LFE12060-.LFB12060
	.byte	0x4
	.long	.LCFI753-.LFB12060
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI754-.LCFI753
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI755-.LCFI754
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE418:
.LSFDE420:
	.long	.LEFDE420-.LASFDE420
.LASFDE420:
	.secrel32	.Lframe0
	.quad	.LFB12062
	.quad	.LFE12062-.LFB12062
	.byte	0x4
	.long	.LCFI756-.LFB12062
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI757-.LCFI756
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI758-.LCFI757
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI759-.LCFI758
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI760-.LCFI759
	.byte	0xc3
	.byte	0x4
	.long	.LCFI761-.LCFI760
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE420:
.LSFDE422:
	.long	.LEFDE422-.LASFDE422
.LASFDE422:
	.secrel32	.Lframe0
	.quad	.LFB12066
	.quad	.LFE12066-.LFB12066
	.byte	0x4
	.long	.LCFI762-.LFB12066
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI763-.LCFI762
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI764-.LCFI763
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI765-.LCFI764
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI766-.LCFI765
	.byte	0xc3
	.byte	0x4
	.long	.LCFI767-.LCFI766
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE422:
.LSFDE424:
	.long	.LEFDE424-.LASFDE424
.LASFDE424:
	.secrel32	.Lframe0
	.quad	.LFB12068
	.quad	.LFE12068-.LFB12068
	.byte	0x4
	.long	.LCFI768-.LFB12068
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI769-.LCFI768
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI770-.LCFI769
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE424:
.LSFDE426:
	.long	.LEFDE426-.LASFDE426
.LASFDE426:
	.secrel32	.Lframe0
	.quad	.LFB12069
	.quad	.LFE12069-.LFB12069
	.byte	0x4
	.long	.LCFI771-.LFB12069
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI772-.LCFI771
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI773-.LCFI772
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE426:
.LSFDE428:
	.long	.LEFDE428-.LASFDE428
.LASFDE428:
	.secrel32	.Lframe0
	.quad	.LFB12070
	.quad	.LFE12070-.LFB12070
	.byte	0x4
	.long	.LCFI774-.LFB12070
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI775-.LCFI774
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI776-.LCFI775
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE428:
.LSFDE430:
	.long	.LEFDE430-.LASFDE430
.LASFDE430:
	.secrel32	.Lframe0
	.quad	.LFB12071
	.quad	.LFE12071-.LFB12071
	.byte	0x4
	.long	.LCFI777-.LFB12071
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI778-.LCFI777
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI779-.LCFI778
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE430:
.LSFDE432:
	.long	.LEFDE432-.LASFDE432
.LASFDE432:
	.secrel32	.Lframe0
	.quad	.LFB12158
	.quad	.LFE12158-.LFB12158
	.byte	0x4
	.long	.LCFI780-.LFB12158
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI781-.LCFI780
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI782-.LCFI781
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE432:
.LSFDE434:
	.long	.LEFDE434-.LASFDE434
.LASFDE434:
	.secrel32	.Lframe0
	.quad	.LFB12161
	.quad	.LFE12161-.LFB12161
	.byte	0x4
	.long	.LCFI783-.LFB12161
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI784-.LCFI783
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI785-.LCFI784
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE434:
.LSFDE436:
	.long	.LEFDE436-.LASFDE436
.LASFDE436:
	.secrel32	.Lframe0
	.quad	.LFB12162
	.quad	.LFE12162-.LFB12162
	.byte	0x4
	.long	.LCFI786-.LFB12162
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI787-.LCFI786
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI788-.LCFI787
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE436:
.LSFDE438:
	.long	.LEFDE438-.LASFDE438
.LASFDE438:
	.secrel32	.Lframe0
	.quad	.LFB12163
	.quad	.LFE12163-.LFB12163
	.byte	0x4
	.long	.LCFI789-.LFB12163
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI790-.LCFI789
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI791-.LCFI790
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE438:
.LSFDE440:
	.long	.LEFDE440-.LASFDE440
.LASFDE440:
	.secrel32	.Lframe0
	.quad	.LFB12165
	.quad	.LFE12165-.LFB12165
	.byte	0x4
	.long	.LCFI792-.LFB12165
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI793-.LCFI792
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI794-.LCFI793
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE440:
.LSFDE442:
	.long	.LEFDE442-.LASFDE442
.LASFDE442:
	.secrel32	.Lframe0
	.quad	.LFB12168
	.quad	.LFE12168-.LFB12168
	.byte	0x4
	.long	.LCFI795-.LFB12168
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI796-.LCFI795
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI797-.LCFI796
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE442:
.LSFDE444:
	.long	.LEFDE444-.LASFDE444
.LASFDE444:
	.secrel32	.Lframe0
	.quad	.LFB12171
	.quad	.LFE12171-.LFB12171
	.byte	0x4
	.long	.LCFI798-.LFB12171
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI799-.LCFI798
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI800-.LCFI799
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE444:
.LSFDE446:
	.long	.LEFDE446-.LASFDE446
.LASFDE446:
	.secrel32	.Lframe0
	.quad	.LFB12173
	.quad	.LFE12173-.LFB12173
	.byte	0x4
	.long	.LCFI801-.LFB12173
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI802-.LCFI801
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI803-.LCFI802
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE446:
.LSFDE448:
	.long	.LEFDE448-.LASFDE448
.LASFDE448:
	.secrel32	.Lframe0
	.quad	.LFB12174
	.quad	.LFE12174-.LFB12174
	.byte	0x4
	.long	.LCFI804-.LFB12174
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI805-.LCFI804
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI806-.LCFI805
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE448:
.LSFDE450:
	.long	.LEFDE450-.LASFDE450
.LASFDE450:
	.secrel32	.Lframe0
	.quad	.LFB12176
	.quad	.LFE12176-.LFB12176
	.byte	0x4
	.long	.LCFI807-.LFB12176
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI808-.LCFI807
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI809-.LCFI808
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE450:
.LSFDE452:
	.long	.LEFDE452-.LASFDE452
.LASFDE452:
	.secrel32	.Lframe0
	.quad	.LFB12180
	.quad	.LFE12180-.LFB12180
	.byte	0x4
	.long	.LCFI810-.LFB12180
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI811-.LCFI810
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI812-.LCFI811
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE452:
.LSFDE454:
	.long	.LEFDE454-.LASFDE454
.LASFDE454:
	.secrel32	.Lframe0
	.quad	.LFB12182
	.quad	.LFE12182-.LFB12182
	.byte	0x4
	.long	.LCFI813-.LFB12182
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI814-.LCFI813
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI815-.LCFI814
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE454:
.LSFDE456:
	.long	.LEFDE456-.LASFDE456
.LASFDE456:
	.secrel32	.Lframe0
	.quad	.LFB12184
	.quad	.LFE12184-.LFB12184
	.byte	0x4
	.long	.LCFI816-.LFB12184
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI817-.LCFI816
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI818-.LCFI817
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI819-.LCFI818
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI820-.LCFI819
	.byte	0xc3
	.byte	0x4
	.long	.LCFI821-.LCFI820
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE456:
.LSFDE458:
	.long	.LEFDE458-.LASFDE458
.LASFDE458:
	.secrel32	.Lframe0
	.quad	.LFB12185
	.quad	.LFE12185-.LFB12185
	.byte	0x4
	.long	.LCFI822-.LFB12185
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI823-.LCFI822
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI824-.LCFI823
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE458:
.LSFDE460:
	.long	.LEFDE460-.LASFDE460
.LASFDE460:
	.secrel32	.Lframe0
	.quad	.LFB12186
	.quad	.LFE12186-.LFB12186
	.byte	0x4
	.long	.LCFI825-.LFB12186
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI826-.LCFI825
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI827-.LCFI826
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE460:
.LSFDE462:
	.long	.LEFDE462-.LASFDE462
.LASFDE462:
	.secrel32	.Lframe0
	.quad	.LFB12187
	.quad	.LFE12187-.LFB12187
	.byte	0x4
	.long	.LCFI828-.LFB12187
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI829-.LCFI828
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI830-.LCFI829
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE462:
.LSFDE464:
	.long	.LEFDE464-.LASFDE464
.LASFDE464:
	.secrel32	.Lframe0
	.quad	.LFB12188
	.quad	.LFE12188-.LFB12188
	.byte	0x4
	.long	.LCFI831-.LFB12188
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI832-.LCFI831
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI833-.LCFI832
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE464:
.LSFDE466:
	.long	.LEFDE466-.LASFDE466
.LASFDE466:
	.secrel32	.Lframe0
	.quad	.LFB12189
	.quad	.LFE12189-.LFB12189
	.byte	0x4
	.long	.LCFI834-.LFB12189
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI835-.LCFI834
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI836-.LCFI835
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE466:
.LSFDE468:
	.long	.LEFDE468-.LASFDE468
.LASFDE468:
	.secrel32	.Lframe0
	.quad	.LFB12190
	.quad	.LFE12190-.LFB12190
	.byte	0x4
	.long	.LCFI837-.LFB12190
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI838-.LCFI837
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI839-.LCFI838
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE468:
.LSFDE470:
	.long	.LEFDE470-.LASFDE470
.LASFDE470:
	.secrel32	.Lframe0
	.quad	.LFB12192
	.quad	.LFE12192-.LFB12192
	.byte	0x4
	.long	.LCFI840-.LFB12192
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI841-.LCFI840
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI842-.LCFI841
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE470:
.LSFDE472:
	.long	.LEFDE472-.LASFDE472
.LASFDE472:
	.secrel32	.Lframe0
	.quad	.LFB12191
	.quad	.LFE12191-.LFB12191
	.byte	0x4
	.long	.LCFI843-.LFB12191
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI844-.LCFI843
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI845-.LCFI844
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE472:
.LSFDE474:
	.long	.LEFDE474-.LASFDE474
.LASFDE474:
	.secrel32	.Lframe0
	.quad	.LFB12193
	.quad	.LFE12193-.LFB12193
	.byte	0x4
	.long	.LCFI846-.LFB12193
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI847-.LCFI846
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI848-.LCFI847
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE474:
.LSFDE476:
	.long	.LEFDE476-.LASFDE476
.LASFDE476:
	.secrel32	.Lframe0
	.quad	.LFB12195
	.quad	.LFE12195-.LFB12195
	.byte	0x4
	.long	.LCFI849-.LFB12195
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI850-.LCFI849
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI851-.LCFI850
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE476:
.LSFDE478:
	.long	.LEFDE478-.LASFDE478
.LASFDE478:
	.secrel32	.Lframe0
	.quad	.LFB12198
	.quad	.LFE12198-.LFB12198
	.byte	0x4
	.long	.LCFI852-.LFB12198
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI853-.LCFI852
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI854-.LCFI853
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI855-.LCFI854
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI856-.LCFI855
	.byte	0xc3
	.byte	0x4
	.long	.LCFI857-.LCFI856
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE478:
.LSFDE480:
	.long	.LEFDE480-.LASFDE480
.LASFDE480:
	.secrel32	.Lframe0
	.quad	.LFB12202
	.quad	.LFE12202-.LFB12202
	.byte	0x4
	.long	.LCFI858-.LFB12202
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI859-.LCFI858
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI860-.LCFI859
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE480:
.LSFDE482:
	.long	.LEFDE482-.LASFDE482
.LASFDE482:
	.secrel32	.Lframe0
	.quad	.LFB12203
	.quad	.LFE12203-.LFB12203
	.byte	0x4
	.long	.LCFI861-.LFB12203
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI862-.LCFI861
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI863-.LCFI862
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE482:
.LSFDE484:
	.long	.LEFDE484-.LASFDE484
.LASFDE484:
	.secrel32	.Lframe0
	.quad	.LFB12204
	.quad	.LFE12204-.LFB12204
	.byte	0x4
	.long	.LCFI864-.LFB12204
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI865-.LCFI864
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI866-.LCFI865
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE484:
.LSFDE486:
	.long	.LEFDE486-.LASFDE486
.LASFDE486:
	.secrel32	.Lframe0
	.quad	.LFB12241
	.quad	.LFE12241-.LFB12241
	.byte	0x4
	.long	.LCFI867-.LFB12241
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI868-.LCFI867
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI869-.LCFI868
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE486:
.LSFDE488:
	.long	.LEFDE488-.LASFDE488
.LASFDE488:
	.secrel32	.Lframe0
	.quad	.LFB12243
	.quad	.LFE12243-.LFB12243
	.byte	0x4
	.long	.LCFI870-.LFB12243
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI871-.LCFI870
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI872-.LCFI871
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE488:
.LSFDE490:
	.long	.LEFDE490-.LASFDE490
.LASFDE490:
	.secrel32	.Lframe0
	.quad	.LFB12244
	.quad	.LFE12244-.LFB12244
	.byte	0x4
	.long	.LCFI873-.LFB12244
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI874-.LCFI873
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI875-.LCFI874
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE490:
.LSFDE492:
	.long	.LEFDE492-.LASFDE492
.LASFDE492:
	.secrel32	.Lframe0
	.quad	.LFB12245
	.quad	.LFE12245-.LFB12245
	.byte	0x4
	.long	.LCFI876-.LFB12245
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI877-.LCFI876
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI878-.LCFI877
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE492:
.LSFDE494:
	.long	.LEFDE494-.LASFDE494
.LASFDE494:
	.secrel32	.Lframe0
	.quad	.LFB12247
	.quad	.LFE12247-.LFB12247
	.byte	0x4
	.long	.LCFI879-.LFB12247
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI880-.LCFI879
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI881-.LCFI880
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE494:
.LSFDE496:
	.long	.LEFDE496-.LASFDE496
.LASFDE496:
	.secrel32	.Lframe0
	.quad	.LFB12250
	.quad	.LFE12250-.LFB12250
	.byte	0x4
	.long	.LCFI882-.LFB12250
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI883-.LCFI882
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI884-.LCFI883
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE496:
.LSFDE498:
	.long	.LEFDE498-.LASFDE498
.LASFDE498:
	.secrel32	.Lframe0
	.quad	.LFB12253
	.quad	.LFE12253-.LFB12253
	.byte	0x4
	.long	.LCFI885-.LFB12253
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI886-.LCFI885
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI887-.LCFI886
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE498:
.LSFDE500:
	.long	.LEFDE500-.LASFDE500
.LASFDE500:
	.secrel32	.Lframe0
	.quad	.LFB12255
	.quad	.LFE12255-.LFB12255
	.byte	0x4
	.long	.LCFI888-.LFB12255
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI889-.LCFI888
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI890-.LCFI889
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE500:
.LSFDE502:
	.long	.LEFDE502-.LASFDE502
.LASFDE502:
	.secrel32	.Lframe0
	.quad	.LFB12256
	.quad	.LFE12256-.LFB12256
	.byte	0x4
	.long	.LCFI891-.LFB12256
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI892-.LCFI891
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI893-.LCFI892
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE502:
.LSFDE504:
	.long	.LEFDE504-.LASFDE504
.LASFDE504:
	.secrel32	.Lframe0
	.quad	.LFB12258
	.quad	.LFE12258-.LFB12258
	.byte	0x4
	.long	.LCFI894-.LFB12258
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI895-.LCFI894
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI896-.LCFI895
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE504:
.LSFDE506:
	.long	.LEFDE506-.LASFDE506
.LASFDE506:
	.secrel32	.Lframe0
	.quad	.LFB12261
	.quad	.LFE12261-.LFB12261
	.byte	0x4
	.long	.LCFI897-.LFB12261
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI898-.LCFI897
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI899-.LCFI898
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI900-.LCFI899
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI901-.LCFI900
	.byte	0xc3
	.byte	0x4
	.long	.LCFI902-.LCFI901
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE506:
.LSFDE508:
	.long	.LEFDE508-.LASFDE508
.LASFDE508:
	.secrel32	.Lframe0
	.quad	.LFB12263
	.quad	.LFE12263-.LFB12263
	.byte	0x4
	.long	.LCFI903-.LFB12263
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI904-.LCFI903
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI905-.LCFI904
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE508:
.LSFDE510:
	.long	.LEFDE510-.LASFDE510
.LASFDE510:
	.secrel32	.Lframe0
	.quad	.LFB12264
	.quad	.LFE12264-.LFB12264
	.byte	0x4
	.long	.LCFI906-.LFB12264
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI907-.LCFI906
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI908-.LCFI907
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE510:
.LSFDE512:
	.long	.LEFDE512-.LASFDE512
.LASFDE512:
	.secrel32	.Lframe0
	.quad	.LFB12265
	.quad	.LFE12265-.LFB12265
	.byte	0x4
	.long	.LCFI909-.LFB12265
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI910-.LCFI909
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI911-.LCFI910
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE512:
.LSFDE514:
	.long	.LEFDE514-.LASFDE514
.LASFDE514:
	.secrel32	.Lframe0
	.quad	.LFB12268
	.quad	.LFE12268-.LFB12268
	.byte	0x4
	.long	.LCFI912-.LFB12268
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI913-.LCFI912
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI914-.LCFI913
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE514:
.LSFDE516:
	.long	.LEFDE516-.LASFDE516
.LASFDE516:
	.secrel32	.Lframe0
	.quad	.LFB12269
	.quad	.LFE12269-.LFB12269
	.byte	0x4
	.long	.LCFI915-.LFB12269
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI916-.LCFI915
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI917-.LCFI916
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE516:
.LSFDE518:
	.long	.LEFDE518-.LASFDE518
.LASFDE518:
	.secrel32	.Lframe0
	.quad	.LFB12270
	.quad	.LFE12270-.LFB12270
	.byte	0x4
	.long	.LCFI918-.LFB12270
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI919-.LCFI918
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI920-.LCFI919
	.byte	0xe
	.uleb128 0x70
	.byte	0x4
	.long	.LCFI921-.LCFI920
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI922-.LCFI921
	.byte	0xc3
	.byte	0x4
	.long	.LCFI923-.LCFI922
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 9
	.align 8
.LEFDE518:
.LSFDE520:
	.long	.LEFDE520-.LASFDE520
.LASFDE520:
	.secrel32	.Lframe0
	.quad	.LFB12273
	.quad	.LFE12273-.LFB12273
	.byte	0x4
	.long	.LCFI924-.LFB12273
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI925-.LCFI924
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI926-.LCFI925
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE520:
.LSFDE522:
	.long	.LEFDE522-.LASFDE522
.LASFDE522:
	.secrel32	.Lframe0
	.quad	.LFB12274
	.quad	.LFE12274-.LFB12274
	.byte	0x4
	.long	.LCFI927-.LFB12274
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI928-.LCFI927
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI929-.LCFI928
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE522:
.LSFDE524:
	.long	.LEFDE524-.LASFDE524
.LASFDE524:
	.secrel32	.Lframe0
	.quad	.LFB12275
	.quad	.LFE12275-.LFB12275
	.byte	0x4
	.long	.LCFI930-.LFB12275
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI931-.LCFI930
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI932-.LCFI931
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE524:
.LSFDE526:
	.long	.LEFDE526-.LASFDE526
.LASFDE526:
	.secrel32	.Lframe0
	.quad	.LFB12278
	.quad	.LFE12278-.LFB12278
	.byte	0x4
	.long	.LCFI933-.LFB12278
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI934-.LCFI933
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI935-.LCFI934
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE526:
.LSFDE528:
	.long	.LEFDE528-.LASFDE528
.LASFDE528:
	.secrel32	.Lframe0
	.quad	.LFB12281
	.quad	.LFE12281-.LFB12281
	.byte	0x4
	.long	.LCFI936-.LFB12281
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI937-.LCFI936
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI938-.LCFI937
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI939-.LCFI938
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI940-.LCFI939
	.byte	0xc3
	.byte	0x4
	.long	.LCFI941-.LCFI940
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE528:
.LSFDE530:
	.long	.LEFDE530-.LASFDE530
.LASFDE530:
	.secrel32	.Lframe0
	.quad	.LFB12284
	.quad	.LFE12284-.LFB12284
	.byte	0x4
	.long	.LCFI942-.LFB12284
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI943-.LCFI942
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI944-.LCFI943
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE530:
.LSFDE532:
	.long	.LEFDE532-.LASFDE532
.LASFDE532:
	.secrel32	.Lframe0
	.quad	.LFB12286
	.quad	.LFE12286-.LFB12286
	.byte	0x4
	.long	.LCFI945-.LFB12286
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI946-.LCFI945
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI947-.LCFI946
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE532:
.LSFDE534:
	.long	.LEFDE534-.LASFDE534
.LASFDE534:
	.secrel32	.Lframe0
	.quad	.LFB12287
	.quad	.LFE12287-.LFB12287
	.byte	0x4
	.long	.LCFI948-.LFB12287
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI949-.LCFI948
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI950-.LCFI949
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE534:
.LSFDE536:
	.long	.LEFDE536-.LASFDE536
.LASFDE536:
	.secrel32	.Lframe0
	.quad	.LFB12305
	.quad	.LFE12305-.LFB12305
	.byte	0x4
	.long	.LCFI951-.LFB12305
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI952-.LCFI951
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI953-.LCFI952
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE536:
.LSFDE538:
	.long	.LEFDE538-.LASFDE538
.LASFDE538:
	.secrel32	.Lframe0
	.quad	.LFB12306
	.quad	.LFE12306-.LFB12306
	.byte	0x4
	.long	.LCFI954-.LFB12306
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI955-.LCFI954
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI956-.LCFI955
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE538:
.LSFDE540:
	.long	.LEFDE540-.LASFDE540
.LASFDE540:
	.secrel32	.Lframe0
	.quad	.LFB12307
	.quad	.LFE12307-.LFB12307
	.byte	0x4
	.long	.LCFI957-.LFB12307
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI958-.LCFI957
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI959-.LCFI958
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE540:
.LSFDE542:
	.long	.LEFDE542-.LASFDE542
.LASFDE542:
	.secrel32	.Lframe0
	.quad	.LFB12309
	.quad	.LFE12309-.LFB12309
	.byte	0x4
	.long	.LCFI960-.LFB12309
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI961-.LCFI960
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI962-.LCFI961
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE542:
.LSFDE544:
	.long	.LEFDE544-.LASFDE544
.LASFDE544:
	.secrel32	.Lframe0
	.quad	.LFB12311
	.quad	.LFE12311-.LFB12311
	.byte	0x4
	.long	.LCFI963-.LFB12311
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI964-.LCFI963
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI965-.LCFI964
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE544:
.LSFDE546:
	.long	.LEFDE546-.LASFDE546
.LASFDE546:
	.secrel32	.Lframe0
	.quad	.LFB12312
	.quad	.LFE12312-.LFB12312
	.byte	0x4
	.long	.LCFI966-.LFB12312
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI967-.LCFI966
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI968-.LCFI967
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE546:
.LSFDE548:
	.long	.LEFDE548-.LASFDE548
.LASFDE548:
	.secrel32	.Lframe0
	.quad	.LFB12314
	.quad	.LFE12314-.LFB12314
	.byte	0x4
	.long	.LCFI969-.LFB12314
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI970-.LCFI969
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI971-.LCFI970
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE548:
.LSFDE550:
	.long	.LEFDE550-.LASFDE550
.LASFDE550:
	.secrel32	.Lframe0
	.quad	.LFB12317
	.quad	.LFE12317-.LFB12317
	.byte	0x4
	.long	.LCFI972-.LFB12317
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI973-.LCFI972
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI974-.LCFI973
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE550:
.LSFDE552:
	.long	.LEFDE552-.LASFDE552
.LASFDE552:
	.secrel32	.Lframe0
	.quad	.LFB12319
	.quad	.LFE12319-.LFB12319
	.byte	0x4
	.long	.LCFI975-.LFB12319
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI976-.LCFI975
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI977-.LCFI976
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE552:
.LSFDE554:
	.long	.LEFDE554-.LASFDE554
.LASFDE554:
	.secrel32	.Lframe0
	.quad	.LFB12320
	.quad	.LFE12320-.LFB12320
	.byte	0x4
	.long	.LCFI978-.LFB12320
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI979-.LCFI978
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI980-.LCFI979
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE554:
.LSFDE556:
	.long	.LEFDE556-.LASFDE556
.LASFDE556:
	.secrel32	.Lframe0
	.quad	.LFB12321
	.quad	.LFE12321-.LFB12321
	.byte	0x4
	.long	.LCFI981-.LFB12321
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI982-.LCFI981
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI983-.LCFI982
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE556:
.LSFDE558:
	.long	.LEFDE558-.LASFDE558
.LASFDE558:
	.secrel32	.Lframe0
	.quad	.LFB12322
	.quad	.LFE12322-.LFB12322
	.byte	0x4
	.long	.LCFI984-.LFB12322
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI985-.LCFI984
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI986-.LCFI985
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE558:
.LSFDE560:
	.long	.LEFDE560-.LASFDE560
.LASFDE560:
	.secrel32	.Lframe0
	.quad	.LFB12326
	.quad	.LFE12326-.LFB12326
	.byte	0x4
	.long	.LCFI987-.LFB12326
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI988-.LCFI987
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI989-.LCFI988
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE560:
.LSFDE562:
	.long	.LEFDE562-.LASFDE562
.LASFDE562:
	.secrel32	.Lframe0
	.quad	.LFB12327
	.quad	.LFE12327-.LFB12327
	.byte	0x4
	.long	.LCFI990-.LFB12327
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI991-.LCFI990
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI992-.LCFI991
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI993-.LCFI992
	.byte	0xe
	.uleb128 0x70
	.byte	0x4
	.long	.LCFI994-.LCFI993
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI995-.LCFI994
	.byte	0xc3
	.byte	0x4
	.long	.LCFI996-.LCFI995
	.byte	0xc4
	.byte	0x4
	.long	.LCFI997-.LCFI996
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE562:
.LSFDE564:
	.long	.LEFDE564-.LASFDE564
.LASFDE564:
	.secrel32	.Lframe0
	.quad	.LFB12328
	.quad	.LFE12328-.LFB12328
	.byte	0x4
	.long	.LCFI998-.LFB12328
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI999-.LCFI998
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1000-.LCFI999
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE564:
.LSFDE566:
	.long	.LEFDE566-.LASFDE566
.LASFDE566:
	.secrel32	.Lframe0
	.quad	.LFB12329
	.quad	.LFE12329-.LFB12329
	.byte	0x4
	.long	.LCFI1001-.LFB12329
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1002-.LCFI1001
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1003-.LCFI1002
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE566:
.LSFDE568:
	.long	.LEFDE568-.LASFDE568
.LASFDE568:
	.secrel32	.Lframe0
	.quad	.LFB12330
	.quad	.LFE12330-.LFB12330
	.byte	0x4
	.long	.LCFI1004-.LFB12330
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1005-.LCFI1004
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1006-.LCFI1005
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE568:
.LSFDE570:
	.long	.LEFDE570-.LASFDE570
.LASFDE570:
	.secrel32	.Lframe0
	.quad	.LFB12331
	.quad	.LFE12331-.LFB12331
	.byte	0x4
	.long	.LCFI1007-.LFB12331
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1008-.LCFI1007
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1009-.LCFI1008
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE570:
.LSFDE572:
	.long	.LEFDE572-.LASFDE572
.LASFDE572:
	.secrel32	.Lframe0
	.quad	.LFB12335
	.quad	.LFE12335-.LFB12335
	.byte	0x4
	.long	.LCFI1010-.LFB12335
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1011-.LCFI1010
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1012-.LCFI1011
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE572:
.LSFDE574:
	.long	.LEFDE574-.LASFDE574
.LASFDE574:
	.secrel32	.Lframe0
	.quad	.LFB12338
	.quad	.LFE12338-.LFB12338
	.byte	0x4
	.long	.LCFI1013-.LFB12338
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1014-.LCFI1013
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1015-.LCFI1014
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE574:
.LSFDE576:
	.long	.LEFDE576-.LASFDE576
.LASFDE576:
	.secrel32	.Lframe0
	.quad	.LFB12340
	.quad	.LFE12340-.LFB12340
	.byte	0x4
	.long	.LCFI1016-.LFB12340
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1017-.LCFI1016
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1018-.LCFI1017
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE576:
.LSFDE578:
	.long	.LEFDE578-.LASFDE578
.LASFDE578:
	.secrel32	.Lframe0
	.quad	.LFB12341
	.quad	.LFE12341-.LFB12341
	.byte	0x4
	.long	.LCFI1019-.LFB12341
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1020-.LCFI1019
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1021-.LCFI1020
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE578:
.LSFDE580:
	.long	.LEFDE580-.LASFDE580
.LASFDE580:
	.secrel32	.Lframe0
	.quad	.LFB12351
	.quad	.LFE12351-.LFB12351
	.byte	0x4
	.long	.LCFI1022-.LFB12351
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1023-.LCFI1022
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1024-.LCFI1023
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE580:
.LSFDE582:
	.long	.LEFDE582-.LASFDE582
.LASFDE582:
	.secrel32	.Lframe0
	.quad	.LFB12352
	.quad	.LFE12352-.LFB12352
	.byte	0x4
	.long	.LCFI1025-.LFB12352
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1026-.LCFI1025
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1027-.LCFI1026
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE582:
.LSFDE584:
	.long	.LEFDE584-.LASFDE584
.LASFDE584:
	.secrel32	.Lframe0
	.quad	.LFB12354
	.quad	.LFE12354-.LFB12354
	.byte	0x4
	.long	.LCFI1028-.LFB12354
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1029-.LCFI1028
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1030-.LCFI1029
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE584:
.LSFDE586:
	.long	.LEFDE586-.LASFDE586
.LASFDE586:
	.secrel32	.Lframe0
	.quad	.LFB12356
	.quad	.LFE12356-.LFB12356
	.byte	0x4
	.long	.LCFI1031-.LFB12356
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1032-.LCFI1031
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1033-.LCFI1032
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE586:
.LSFDE588:
	.long	.LEFDE588-.LASFDE588
.LASFDE588:
	.secrel32	.Lframe0
	.quad	.LFB12357
	.quad	.LFE12357-.LFB12357
	.byte	0x4
	.long	.LCFI1034-.LFB12357
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1035-.LCFI1034
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1036-.LCFI1035
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE588:
.LSFDE590:
	.long	.LEFDE590-.LASFDE590
.LASFDE590:
	.secrel32	.Lframe0
	.quad	.LFB12359
	.quad	.LFE12359-.LFB12359
	.byte	0x4
	.long	.LCFI1037-.LFB12359
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1038-.LCFI1037
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1039-.LCFI1038
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE590:
.LSFDE592:
	.long	.LEFDE592-.LASFDE592
.LASFDE592:
	.secrel32	.Lframe0
	.quad	.LFB12361
	.quad	.LFE12361-.LFB12361
	.byte	0x4
	.long	.LCFI1040-.LFB12361
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1041-.LCFI1040
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1042-.LCFI1041
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI1043-.LCFI1042
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1044-.LCFI1043
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1045-.LCFI1044
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE592:
.LSFDE594:
	.long	.LEFDE594-.LASFDE594
.LASFDE594:
	.secrel32	.Lframe0
	.quad	.LFB12362
	.quad	.LFE12362-.LFB12362
	.byte	0x4
	.long	.LCFI1046-.LFB12362
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1047-.LCFI1046
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1048-.LCFI1047
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE594:
.LSFDE596:
	.long	.LEFDE596-.LASFDE596
.LASFDE596:
	.secrel32	.Lframe0
	.quad	.LFB12363
	.quad	.LFE12363-.LFB12363
	.byte	0x4
	.long	.LCFI1049-.LFB12363
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1050-.LCFI1049
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1051-.LCFI1050
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE596:
.LSFDE598:
	.long	.LEFDE598-.LASFDE598
.LASFDE598:
	.secrel32	.Lframe0
	.quad	.LFB12364
	.quad	.LFE12364-.LFB12364
	.byte	0x4
	.long	.LCFI1052-.LFB12364
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1053-.LCFI1052
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1054-.LCFI1053
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI1055-.LCFI1054
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1056-.LCFI1055
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1057-.LCFI1056
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE598:
.LSFDE600:
	.long	.LEFDE600-.LASFDE600
.LASFDE600:
	.secrel32	.Lframe0
	.quad	.LFB12365
	.quad	.LFE12365-.LFB12365
	.byte	0x4
	.long	.LCFI1058-.LFB12365
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1059-.LCFI1058
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1060-.LCFI1059
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE600:
.LSFDE602:
	.long	.LEFDE602-.LASFDE602
.LASFDE602:
	.secrel32	.Lframe0
	.quad	.LFB12367
	.quad	.LFE12367-.LFB12367
	.byte	0x4
	.long	.LCFI1061-.LFB12367
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1062-.LCFI1061
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1063-.LCFI1062
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE602:
.LSFDE604:
	.long	.LEFDE604-.LASFDE604
.LASFDE604:
	.secrel32	.Lframe0
	.quad	.LFB12369
	.quad	.LFE12369-.LFB12369
	.byte	0x4
	.long	.LCFI1064-.LFB12369
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1065-.LCFI1064
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1066-.LCFI1065
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE604:
.LSFDE606:
	.long	.LEFDE606-.LASFDE606
.LASFDE606:
	.secrel32	.Lframe0
	.quad	.LFB12370
	.quad	.LFE12370-.LFB12370
	.byte	0x4
	.long	.LCFI1067-.LFB12370
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1068-.LCFI1067
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1069-.LCFI1068
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE606:
.LSFDE608:
	.long	.LEFDE608-.LASFDE608
.LASFDE608:
	.secrel32	.Lframe0
	.quad	.LFB12371
	.quad	.LFE12371-.LFB12371
	.byte	0x4
	.long	.LCFI1070-.LFB12371
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1071-.LCFI1070
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1072-.LCFI1071
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE608:
.LSFDE610:
	.long	.LEFDE610-.LASFDE610
.LASFDE610:
	.secrel32	.Lframe0
	.quad	.LFB12372
	.quad	.LFE12372-.LFB12372
	.byte	0x4
	.long	.LCFI1073-.LFB12372
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1074-.LCFI1073
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1075-.LCFI1074
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1076-.LCFI1075
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1077-.LCFI1076
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1078-.LCFI1077
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE610:
.LSFDE612:
	.long	.LEFDE612-.LASFDE612
.LASFDE612:
	.secrel32	.Lframe0
	.quad	.LFB12373
	.quad	.LFE12373-.LFB12373
	.byte	0x4
	.long	.LCFI1079-.LFB12373
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1080-.LCFI1079
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1081-.LCFI1080
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE612:
.LSFDE614:
	.long	.LEFDE614-.LASFDE614
.LASFDE614:
	.secrel32	.Lframe0
	.quad	.LFB12377
	.quad	.LFE12377-.LFB12377
	.byte	0x4
	.long	.LCFI1082-.LFB12377
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1083-.LCFI1082
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1084-.LCFI1083
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE614:
.LSFDE616:
	.long	.LEFDE616-.LASFDE616
.LASFDE616:
	.secrel32	.Lframe0
	.quad	.LFB12378
	.quad	.LFE12378-.LFB12378
	.byte	0x4
	.long	.LCFI1085-.LFB12378
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1086-.LCFI1085
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1087-.LCFI1086
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE616:
.LSFDE618:
	.long	.LEFDE618-.LASFDE618
.LASFDE618:
	.secrel32	.Lframe0
	.quad	.LFB12379
	.quad	.LFE12379-.LFB12379
	.byte	0x4
	.long	.LCFI1088-.LFB12379
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1089-.LCFI1088
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1090-.LCFI1089
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE618:
.LSFDE620:
	.long	.LEFDE620-.LASFDE620
.LASFDE620:
	.secrel32	.Lframe0
	.quad	.LFB12380
	.quad	.LFE12380-.LFB12380
	.byte	0x4
	.long	.LCFI1091-.LFB12380
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1092-.LCFI1091
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1093-.LCFI1092
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE620:
.LSFDE622:
	.long	.LEFDE622-.LASFDE622
.LASFDE622:
	.secrel32	.Lframe0
	.quad	.LFB12381
	.quad	.LFE12381-.LFB12381
	.byte	0x4
	.long	.LCFI1094-.LFB12381
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1095-.LCFI1094
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1096-.LCFI1095
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE622:
.LSFDE624:
	.long	.LEFDE624-.LASFDE624
.LASFDE624:
	.secrel32	.Lframe0
	.quad	.LFB12382
	.quad	.LFE12382-.LFB12382
	.byte	0x4
	.long	.LCFI1097-.LFB12382
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1098-.LCFI1097
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1099-.LCFI1098
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE624:
.LSFDE626:
	.long	.LEFDE626-.LASFDE626
.LASFDE626:
	.secrel32	.Lframe0
	.quad	.LFB12383
	.quad	.LFE12383-.LFB12383
	.byte	0x4
	.long	.LCFI1100-.LFB12383
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1101-.LCFI1100
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1102-.LCFI1101
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE626:
.LSFDE628:
	.long	.LEFDE628-.LASFDE628
.LASFDE628:
	.secrel32	.Lframe0
	.quad	.LFB12385
	.quad	.LFE12385-.LFB12385
	.byte	0x4
	.long	.LCFI1103-.LFB12385
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1104-.LCFI1103
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1105-.LCFI1104
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE628:
.LSFDE630:
	.long	.LEFDE630-.LASFDE630
.LASFDE630:
	.secrel32	.Lframe0
	.quad	.LFB12387
	.quad	.LFE12387-.LFB12387
	.byte	0x4
	.long	.LCFI1106-.LFB12387
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1107-.LCFI1106
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1108-.LCFI1107
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE630:
.LSFDE632:
	.long	.LEFDE632-.LASFDE632
.LASFDE632:
	.secrel32	.Lframe0
	.quad	.LFB12404
	.quad	.LFE12404-.LFB12404
	.byte	0x4
	.long	.LCFI1109-.LFB12404
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1110-.LCFI1109
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1111-.LCFI1110
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE632:
.LSFDE634:
	.long	.LEFDE634-.LASFDE634
.LASFDE634:
	.secrel32	.Lframe0
	.quad	.LFB12405
	.quad	.LFE12405-.LFB12405
	.byte	0x4
	.long	.LCFI1112-.LFB12405
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1113-.LCFI1112
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1114-.LCFI1113
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE634:
.LSFDE636:
	.long	.LEFDE636-.LASFDE636
.LASFDE636:
	.secrel32	.Lframe0
	.quad	.LFB12406
	.quad	.LFE12406-.LFB12406
	.byte	0x4
	.long	.LCFI1115-.LFB12406
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1116-.LCFI1115
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1117-.LCFI1116
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE636:
.LSFDE638:
	.long	.LEFDE638-.LASFDE638
.LASFDE638:
	.secrel32	.Lframe0
	.quad	.LFB12408
	.quad	.LFE12408-.LFB12408
	.byte	0x4
	.long	.LCFI1118-.LFB12408
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1119-.LCFI1118
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1120-.LCFI1119
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE638:
.LSFDE640:
	.long	.LEFDE640-.LASFDE640
.LASFDE640:
	.secrel32	.Lframe0
	.quad	.LFB12409
	.quad	.LFE12409-.LFB12409
	.byte	0x4
	.long	.LCFI1121-.LFB12409
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1122-.LCFI1121
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1123-.LCFI1122
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE640:
.LSFDE642:
	.long	.LEFDE642-.LASFDE642
.LASFDE642:
	.secrel32	.Lframe0
	.quad	.LFB12410
	.quad	.LFE12410-.LFB12410
	.byte	0x4
	.long	.LCFI1124-.LFB12410
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1125-.LCFI1124
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1126-.LCFI1125
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1127-.LCFI1126
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1128-.LCFI1127
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1129-.LCFI1128
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE642:
.LSFDE644:
	.long	.LEFDE644-.LASFDE644
.LASFDE644:
	.secrel32	.Lframe0
	.quad	.LFB12411
	.quad	.LFE12411-.LFB12411
	.byte	0x4
	.long	.LCFI1130-.LFB12411
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1131-.LCFI1130
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1132-.LCFI1131
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE644:
.LSFDE646:
	.long	.LEFDE646-.LASFDE646
.LASFDE646:
	.secrel32	.Lframe0
	.quad	.LFB12412
	.quad	.LFE12412-.LFB12412
	.byte	0x4
	.long	.LCFI1133-.LFB12412
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1134-.LCFI1133
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1135-.LCFI1134
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE646:
.LSFDE648:
	.long	.LEFDE648-.LASFDE648
.LASFDE648:
	.secrel32	.Lframe0
	.quad	.LFB12413
	.quad	.LFE12413-.LFB12413
	.byte	0x4
	.long	.LCFI1136-.LFB12413
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1137-.LCFI1136
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1138-.LCFI1137
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE648:
.LSFDE650:
	.long	.LEFDE650-.LASFDE650
.LASFDE650:
	.secrel32	.Lframe0
	.quad	.LFB12414
	.quad	.LFE12414-.LFB12414
	.byte	0x4
	.long	.LCFI1139-.LFB12414
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1140-.LCFI1139
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1141-.LCFI1140
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE650:
	.text
.Letext0:
	.file 25 "C:/msys64/mingw64/include/vadefs.h"
	.file 26 "C:/msys64/mingw64/include/corecrt.h"
	.file 27 "C:/msys64/mingw64/include/locale.h"
	.file 28 "C:/msys64/mingw64/include/minwindef.h"
	.file 29 "C:/msys64/mingw64/include/basetsd.h"
	.file 30 "C:/msys64/mingw64/include/winnt.h"
	.file 31 "C:/msys64/mingw64/include/guiddef.h"
	.file 32 "C:/msys64/mingw64/include/stdlib.h"
	.file 33 "C:/msys64/mingw64/include/c++/12.2.0/cstdlib"
	.file 34 "C:/msys64/mingw64/include/c++/12.2.0/bits/std_abs.h"
	.file 35 "C:/msys64/mingw64/include/c++/12.2.0/cstdio"
	.file 36 "C:/msys64/mingw64/include/c++/12.2.0/cstdint"
	.file 37 "C:/msys64/mingw64/include/c++/12.2.0/type_traits"
	.file 38 "C:/msys64/mingw64/include/c++/12.2.0/concepts"
	.file 39 "C:/msys64/mingw64/include/c++/12.2.0/bits/iterator_concepts.h"
	.file 40 "C:/msys64/mingw64/include/c++/12.2.0/debug/debug.h"
	.file 41 "C:/msys64/mingw64/include/c++/12.2.0/bits/uses_allocator.h"
	.file 42 "C:/msys64/mingw64/include/c++/12.2.0/cwchar"
	.file 43 "C:/msys64/mingw64/include/c++/12.2.0/bits/exception_ptr.h"
	.file 44 "C:/msys64/mingw64/include/c++/12.2.0/clocale"
	.file 45 "C:/msys64/mingw64/include/c++/12.2.0/numbers"
	.file 46 "C:/msys64/mingw64/include/c++/12.2.0/system_error"
	.file 47 "C:/msys64/mingw64/include/c++/12.2.0/cwctype"
	.file 48 "C:/msys64/mingw64/include/c++/12.2.0/bits/shared_ptr_base.h"
	.file 49 "C:/msys64/mingw64/include/c++/12.2.0/ctime"
	.file 50 "C:/msys64/mingw64/include/c++/12.2.0/ratio"
	.file 51 "C:/msys64/mingw64/include/c++/12.2.0/bits/ranges_cmp.h"
	.file 52 "C:/msys64/mingw64/include/c++/12.2.0/string_view"
	.file 53 "C:/msys64/mingw64/include/c++/12.2.0/bits/parse_numbers.h"
	.file 54 "C:/msys64/mingw64/include/c++/12.2.0/bits/utility.h"
	.file 55 "C:/msys64/mingw64/include/c++/12.2.0/bits/functexcept.h"
	.file 56 "C:/msys64/mingw64/include/c++/12.2.0/exception"
	.file 57 "C:/msys64/mingw64/include/c++/12.2.0/bits/hash_bytes.h"
	.file 58 "C:/msys64/mingw64/include/c++/12.2.0/bits/predefined_ops.h"
	.file 59 "C:/msys64/mingw64/include/c++/12.2.0/ext/concurrence.h"
	.file 60 "C:/msys64/mingw64/include/c++/12.2.0/ext/type_traits.h"
	.file 61 "C:/msys64/mingw64/include/c++/12.2.0/stdlib.h"
	.file 62 "C:/msys64/mingw64/include/windef.h"
	.file 63 "C:/msys64/mingw64/include/winuser.h"
	.file 64 "C:/msys64/mingw64/include/stdint.h"
	.file 65 "C:/msys64/mingw64/include/math.h"
	.file 66 "C:/msys64/mingw64/include/c++/12.2.0/bits/ptr_traits.h"
	.file 67 "C:/msys64/mingw64/include/wchar.h"
	.file 68 "C:/msys64/mingw64/include/swprintf.inl"
	.file 69 "C:/msys64/mingw64/include/string.h"
	.file 70 "C:/msys64/mingw64/include/sys/types.h"
	.file 71 "C:/msys64/mingw64/include/time.h"
	.file 72 "C:/msys64/mingw64/include/pthread.h"
	.file 73 "C:/msys64/mingw64/include/wctype.h"
	.file 74 "C:/msys64/mingw64/include/ctype.h"
	.file 75 "C:/msys64/mingw64/include/c++/12.2.0/pstl/execution_defs.h"
	.file 76 "C:/msys64/mingw64/include/dxgiformat.h"
	.file 77 "C:/msys64/mingw64/include/dcommon.h"
	.file 78 "C:/msys64/mingw64/include/dxgitype.h"
	.file 79 "C:/msys64/mingw64/include/d2dbasetypes.h"
	.file 80 "C:/msys64/mingw64/include/stddef.h"
	.file 81 "C:/msys64/mingw64/include/pthread_time.h"
	.file 82 "C:/msys64/mingw64/include/winbase.h"
	.file 83 "C:/msys64/mingw64/include/errhandlingapi.h"
	.file 84 "C:/msys64/mingw64/include/libloaderapi.h"
	.file 85 "C:/msys64/mingw64/include/stringapiset.h"
	.section	.debug_info,"dr"
.Ldebug_info0:
	.long	0x25ecf
	.word	0x5
	.byte	0x1
	.byte	0x8
	.secrel32	.Ldebug_abbrev0
	.uleb128 0xec
	.ascii "GNU C++20 12.2.0 -mtune=generic -march=x86-64 -g -O0 -std=c++20 -fstack-usage -fno-inline -fno-omit-frame-pointer\0"
	.byte	0x21
	.secrel32	.LASF0
	.secrel32	.LASF1
	.secrel32	.LLRL16
	.quad	0
	.secrel32	.Ldebug_line0
	.uleb128 0xf
	.ascii "__gnuc_va_list\0"
	.byte	0x19
	.byte	0x18
	.byte	0x1d
	.long	0xb0
	.uleb128 0xed
	.byte	0x8
	.ascii "__builtin_va_list\0"
	.long	0xc9
	.uleb128 0x37
	.byte	0x1
	.byte	0x6
	.ascii "char\0"
	.uleb128 0x4
	.long	0xc9
	.uleb128 0xf
	.ascii "va_list\0"
	.byte	0x19
	.byte	0x1f
	.byte	0x1a
	.long	0x99
	.uleb128 0xf
	.ascii "size_t\0"
	.byte	0x1a
	.byte	0x23
	.byte	0x2c
	.long	0xf5
	.uleb128 0x37
	.byte	0x8
	.byte	0x7
	.ascii "long long unsigned int\0"
	.uleb128 0x4
	.long	0xf5
	.uleb128 0x37
	.byte	0x8
	.byte	0x5
	.ascii "long long int\0"
	.uleb128 0x4
	.long	0x114
	.uleb128 0xf
	.ascii "intptr_t\0"
	.byte	0x1a
	.byte	0x3e
	.byte	0x23
	.long	0x114
	.uleb128 0xf
	.ascii "uintptr_t\0"
	.byte	0x1a
	.byte	0x4b
	.byte	0x2c
	.long	0xf5
	.uleb128 0x4
	.long	0x13b
	.uleb128 0xf
	.ascii "wint_t\0"
	.byte	0x1a
	.byte	0x6a
	.byte	0x18
	.long	0x161
	.uleb128 0x37
	.byte	0x2
	.byte	0x7
	.ascii "short unsigned int\0"
	.uleb128 0xf
	.ascii "wctype_t\0"
	.byte	0x1a
	.byte	0x6b
	.byte	0x18
	.long	0x161
	.uleb128 0x37
	.byte	0x4
	.byte	0x5
	.ascii "int\0"
	.uleb128 0x4
	.long	0x188
	.uleb128 0x37
	.byte	0x4
	.byte	0x5
	.ascii "long int\0"
	.uleb128 0xf
	.ascii "__time64_t\0"
	.byte	0x1a
	.byte	0x7b
	.byte	0x23
	.long	0x114
	.uleb128 0xf
	.ascii "time_t\0"
	.byte	0x1a
	.byte	0x8a
	.byte	0x14
	.long	0x1a0
	.uleb128 0x4
	.long	0x1b3
	.uleb128 0x6
	.long	0xc9
	.uleb128 0x6
	.long	0x1d1
	.uleb128 0x37
	.byte	0x2
	.byte	0x7
	.ascii "wchar_t\0"
	.uleb128 0x4
	.long	0x1d1
	.uleb128 0x6
	.long	0x188
	.uleb128 0x37
	.byte	0x4
	.byte	0x7
	.ascii "unsigned int\0"
	.uleb128 0x37
	.byte	0x4
	.byte	0x7
	.ascii "long unsigned int\0"
	.uleb128 0x19
	.ascii "lconv\0"
	.byte	0x98
	.byte	0x1b
	.byte	0x2d
	.byte	0xa
	.long	0x499
	.uleb128 0x13
	.ascii "decimal_point\0"
	.byte	0x1b
	.byte	0x2e
	.byte	0xb
	.long	0x1c7
	.byte	0
	.uleb128 0x13
	.ascii "thousands_sep\0"
	.byte	0x1b
	.byte	0x2f
	.byte	0xb
	.long	0x1c7
	.byte	0x8
	.uleb128 0x13
	.ascii "grouping\0"
	.byte	0x1b
	.byte	0x30
	.byte	0xb
	.long	0x1c7
	.byte	0x10
	.uleb128 0x13
	.ascii "int_curr_symbol\0"
	.byte	0x1b
	.byte	0x31
	.byte	0xb
	.long	0x1c7
	.byte	0x18
	.uleb128 0x13
	.ascii "currency_symbol\0"
	.byte	0x1b
	.byte	0x32
	.byte	0xb
	.long	0x1c7
	.byte	0x20
	.uleb128 0x13
	.ascii "mon_decimal_point\0"
	.byte	0x1b
	.byte	0x33
	.byte	0xb
	.long	0x1c7
	.byte	0x28
	.uleb128 0x13
	.ascii "mon_thousands_sep\0"
	.byte	0x1b
	.byte	0x34
	.byte	0xb
	.long	0x1c7
	.byte	0x30
	.uleb128 0x13
	.ascii "mon_grouping\0"
	.byte	0x1b
	.byte	0x35
	.byte	0xb
	.long	0x1c7
	.byte	0x38
	.uleb128 0x13
	.ascii "positive_sign\0"
	.byte	0x1b
	.byte	0x36
	.byte	0xb
	.long	0x1c7
	.byte	0x40
	.uleb128 0x13
	.ascii "negative_sign\0"
	.byte	0x1b
	.byte	0x37
	.byte	0xb
	.long	0x1c7
	.byte	0x48
	.uleb128 0x13
	.ascii "int_frac_digits\0"
	.byte	0x1b
	.byte	0x38
	.byte	0xa
	.long	0xc9
	.byte	0x50
	.uleb128 0x13
	.ascii "frac_digits\0"
	.byte	0x1b
	.byte	0x39
	.byte	0xa
	.long	0xc9
	.byte	0x51
	.uleb128 0x13
	.ascii "p_cs_precedes\0"
	.byte	0x1b
	.byte	0x3a
	.byte	0xa
	.long	0xc9
	.byte	0x52
	.uleb128 0x13
	.ascii "p_sep_by_space\0"
	.byte	0x1b
	.byte	0x3b
	.byte	0xa
	.long	0xc9
	.byte	0x53
	.uleb128 0x13
	.ascii "n_cs_precedes\0"
	.byte	0x1b
	.byte	0x3c
	.byte	0xa
	.long	0xc9
	.byte	0x54
	.uleb128 0x13
	.ascii "n_sep_by_space\0"
	.byte	0x1b
	.byte	0x3d
	.byte	0xa
	.long	0xc9
	.byte	0x55
	.uleb128 0x13
	.ascii "p_sign_posn\0"
	.byte	0x1b
	.byte	0x3e
	.byte	0xa
	.long	0xc9
	.byte	0x56
	.uleb128 0x13
	.ascii "n_sign_posn\0"
	.byte	0x1b
	.byte	0x3f
	.byte	0xa
	.long	0xc9
	.byte	0x57
	.uleb128 0x13
	.ascii "_W_decimal_point\0"
	.byte	0x1b
	.byte	0x41
	.byte	0xe
	.long	0x1cc
	.byte	0x58
	.uleb128 0x13
	.ascii "_W_thousands_sep\0"
	.byte	0x1b
	.byte	0x42
	.byte	0xe
	.long	0x1cc
	.byte	0x60
	.uleb128 0x13
	.ascii "_W_int_curr_symbol\0"
	.byte	0x1b
	.byte	0x43
	.byte	0xe
	.long	0x1cc
	.byte	0x68
	.uleb128 0x13
	.ascii "_W_currency_symbol\0"
	.byte	0x1b
	.byte	0x44
	.byte	0xe
	.long	0x1cc
	.byte	0x70
	.uleb128 0x13
	.ascii "_W_mon_decimal_point\0"
	.byte	0x1b
	.byte	0x45
	.byte	0xe
	.long	0x1cc
	.byte	0x78
	.uleb128 0x13
	.ascii "_W_mon_thousands_sep\0"
	.byte	0x1b
	.byte	0x46
	.byte	0xe
	.long	0x1cc
	.byte	0x80
	.uleb128 0x13
	.ascii "_W_positive_sign\0"
	.byte	0x1b
	.byte	0x47
	.byte	0xe
	.long	0x1cc
	.byte	0x88
	.uleb128 0x13
	.ascii "_W_negative_sign\0"
	.byte	0x1b
	.byte	0x48
	.byte	0xe
	.long	0x1cc
	.byte	0x90
	.byte	0
	.uleb128 0x6
	.long	0x20b
	.uleb128 0x37
	.byte	0x1
	.byte	0x8
	.ascii "unsigned char\0"
	.uleb128 0x4
	.long	0x49e
	.uleb128 0xee
	.byte	0x8
	.uleb128 0xf
	.ascii "WINBOOL\0"
	.byte	0x1c
	.byte	0x7f
	.byte	0xd
	.long	0x188
	.uleb128 0xf
	.ascii "BYTE\0"
	.byte	0x1c
	.byte	0x8b
	.byte	0x19
	.long	0x49e
	.uleb128 0xf
	.ascii "WORD\0"
	.byte	0x1c
	.byte	0x8c
	.byte	0x1a
	.long	0x161
	.uleb128 0xf
	.ascii "DWORD\0"
	.byte	0x1c
	.byte	0x8d
	.byte	0x1d
	.long	0x1f6
	.uleb128 0xf
	.ascii "FLOAT\0"
	.byte	0x1c
	.byte	0x8e
	.byte	0x11
	.long	0x4fd
	.uleb128 0x37
	.byte	0x4
	.byte	0x4
	.ascii "float\0"
	.uleb128 0xf
	.ascii "LPVOID\0"
	.byte	0x1c
	.byte	0x99
	.byte	0x11
	.long	0x4b4
	.uleb128 0xf
	.ascii "LPCVOID\0"
	.byte	0x1c
	.byte	0x9c
	.byte	0x17
	.long	0x525
	.uleb128 0x6
	.long	0x52a
	.uleb128 0xef
	.uleb128 0xf
	.ascii "INT\0"
	.byte	0x1c
	.byte	0x9e
	.byte	0xf
	.long	0x188
	.uleb128 0xf
	.ascii "UINT\0"
	.byte	0x1c
	.byte	0x9f
	.byte	0x18
	.long	0x1e6
	.uleb128 0x37
	.byte	0x1
	.byte	0x6
	.ascii "signed char\0"
	.uleb128 0x37
	.byte	0x2
	.byte	0x5
	.ascii "short int\0"
	.uleb128 0x6
	.long	0x114
	.uleb128 0xf
	.ascii "UINT32\0"
	.byte	0x1d
	.byte	0x23
	.byte	0x18
	.long	0x1e6
	.uleb128 0xf
	.ascii "UINT_PTR\0"
	.byte	0x1d
	.byte	0x2f
	.byte	0x2e
	.long	0xf5
	.uleb128 0xf
	.ascii "LONG_PTR\0"
	.byte	0x1d
	.byte	0x30
	.byte	0x25
	.long	0x114
	.uleb128 0xf
	.ascii "ULONG_PTR\0"
	.byte	0x1d
	.byte	0x31
	.byte	0x2e
	.long	0xf5
	.uleb128 0xf
	.ascii "DWORD_PTR\0"
	.byte	0x1d
	.byte	0xbf
	.byte	0x27
	.long	0x597
	.uleb128 0x21
	.ascii "CHAR\0"
	.byte	0x1e
	.word	0x127
	.byte	0x10
	.long	0xc9
	.uleb128 0x4
	.long	0x5bb
	.uleb128 0x21
	.ascii "SHORT\0"
	.byte	0x1e
	.word	0x128
	.byte	0x11
	.long	0x554
	.uleb128 0x21
	.ascii "LONG\0"
	.byte	0x1e
	.word	0x129
	.byte	0x14
	.long	0x194
	.uleb128 0x21
	.ascii "WCHAR\0"
	.byte	0x1e
	.word	0x131
	.byte	0x13
	.long	0x1d1
	.uleb128 0x4
	.long	0x5eb
	.uleb128 0x6
	.long	0x5eb
	.uleb128 0x6
	.long	0x5fa
	.uleb128 0x21
	.ascii "LPWSTR\0"
	.byte	0x1e
	.word	0x135
	.byte	0x1a
	.long	0x5ff
	.uleb128 0x21
	.ascii "LPCWSTR\0"
	.byte	0x1e
	.word	0x139
	.byte	0x18
	.long	0x604
	.uleb128 0x6
	.long	0x5bb
	.uleb128 0x21
	.ascii "LPCCH\0"
	.byte	0x1e
	.word	0x159
	.byte	0x17
	.long	0x63e
	.uleb128 0x6
	.long	0x5c9
	.uleb128 0x21
	.ascii "LPSTR\0"
	.byte	0x1e
	.word	0x15a
	.byte	0x18
	.long	0x62a
	.uleb128 0x21
	.ascii "LPTSTR\0"
	.byte	0x1e
	.word	0x16c
	.byte	0x18
	.long	0x609
	.uleb128 0x21
	.ascii "HANDLE\0"
	.byte	0x1e
	.word	0x19f
	.byte	0x11
	.long	0x4b4
	.uleb128 0x21
	.ascii "HRESULT\0"
	.byte	0x1e
	.word	0x1ad
	.byte	0x10
	.long	0x5dd
	.uleb128 0x19
	.ascii "_GUID\0"
	.byte	0x10
	.byte	0x1f
	.byte	0x13
	.byte	0x10
	.long	0x6cf
	.uleb128 0x13
	.ascii "Data1\0"
	.byte	0x1f
	.byte	0x14
	.byte	0x15
	.long	0x1f6
	.byte	0
	.uleb128 0x13
	.ascii "Data2\0"
	.byte	0x1f
	.byte	0x15
	.byte	0x12
	.long	0x161
	.byte	0x4
	.uleb128 0x13
	.ascii "Data3\0"
	.byte	0x1f
	.byte	0x16
	.byte	0x12
	.long	0x161
	.byte	0x6
	.uleb128 0x13
	.ascii "Data4\0"
	.byte	0x1f
	.byte	0x17
	.byte	0x11
	.long	0x6cf
	.byte	0x8
	.byte	0
	.uleb128 0x70
	.long	0x49e
	.long	0x6e0
	.uleb128 0x84
	.long	0xf5
	.byte	0x7
	.byte	0
	.uleb128 0xf
	.ascii "GUID\0"
	.byte	0x1f
	.byte	0x18
	.byte	0x3
	.long	0x683
	.uleb128 0x4
	.long	0x6e0
	.uleb128 0xf
	.ascii "IID\0"
	.byte	0x1f
	.byte	0x58
	.byte	0xe
	.long	0x6e0
	.uleb128 0x4
	.long	0x6f2
	.uleb128 0x37
	.byte	0x10
	.byte	0x4
	.ascii "long double\0"
	.uleb128 0x19
	.ascii "_div_t\0"
	.byte	0x8
	.byte	0x20
	.byte	0x3c
	.byte	0x12
	.long	0x73e
	.uleb128 0x13
	.ascii "quot\0"
	.byte	0x20
	.byte	0x3d
	.byte	0x9
	.long	0x188
	.byte	0
	.uleb128 0x13
	.ascii "rem\0"
	.byte	0x20
	.byte	0x3e
	.byte	0x9
	.long	0x188
	.byte	0x4
	.byte	0
	.uleb128 0xf
	.ascii "div_t\0"
	.byte	0x20
	.byte	0x3f
	.byte	0x5
	.long	0x712
	.uleb128 0x19
	.ascii "_ldiv_t\0"
	.byte	0x8
	.byte	0x20
	.byte	0x41
	.byte	0x12
	.long	0x779
	.uleb128 0x13
	.ascii "quot\0"
	.byte	0x20
	.byte	0x42
	.byte	0xa
	.long	0x194
	.byte	0
	.uleb128 0x13
	.ascii "rem\0"
	.byte	0x20
	.byte	0x43
	.byte	0xa
	.long	0x194
	.byte	0x4
	.byte	0
	.uleb128 0xf
	.ascii "ldiv_t\0"
	.byte	0x20
	.byte	0x44
	.byte	0x5
	.long	0x74c
	.uleb128 0x37
	.byte	0x8
	.byte	0x4
	.ascii "double\0"
	.uleb128 0x6
	.long	0x797
	.uleb128 0xf0
	.uleb128 0x6
	.long	0x1dc
	.uleb128 0x6
	.long	0x1c7
	.uleb128 0x6
	.long	0x1cc
	.uleb128 0xf1
	.byte	0x10
	.byte	0x20
	.word	0x2d8
	.byte	0x12
	.ascii "7lldiv_t\0"
	.long	0x7da
	.uleb128 0x1c
	.ascii "quot\0"
	.byte	0x20
	.word	0x2d8
	.byte	0x30
	.long	0x114
	.byte	0
	.uleb128 0x1c
	.ascii "rem\0"
	.byte	0x20
	.word	0x2d8
	.byte	0x36
	.long	0x114
	.byte	0x8
	.byte	0
	.uleb128 0x21
	.ascii "lldiv_t\0"
	.byte	0x20
	.word	0x2d8
	.byte	0x3d
	.long	0x7a8
	.uleb128 0x85
	.ascii "std\0"
	.byte	0x1
	.word	0x128
	.byte	0xb
	.long	0x1710a
	.uleb128 0x5
	.byte	0x21
	.byte	0x7f
	.byte	0xb
	.long	0x73e
	.uleb128 0x5
	.byte	0x21
	.byte	0x80
	.byte	0xb
	.long	0x779
	.uleb128 0x5
	.byte	0x21
	.byte	0x86
	.byte	0xb
	.long	0x1710a
	.uleb128 0x5
	.byte	0x21
	.byte	0x8c
	.byte	0xb
	.long	0x17124
	.uleb128 0x5
	.byte	0x21
	.byte	0x8d
	.byte	0xb
	.long	0x17141
	.uleb128 0x5
	.byte	0x21
	.byte	0x8e
	.byte	0xb
	.long	0x17159
	.uleb128 0x5
	.byte	0x21
	.byte	0x8f
	.byte	0xb
	.long	0x17171
	.uleb128 0x5
	.byte	0x21
	.byte	0x91
	.byte	0xb
	.long	0x171ba
	.uleb128 0x5
	.byte	0x21
	.byte	0x94
	.byte	0xb
	.long	0x171d6
	.uleb128 0x5
	.byte	0x21
	.byte	0x96
	.byte	0xb
	.long	0x171f0
	.uleb128 0x5
	.byte	0x21
	.byte	0x99
	.byte	0xb
	.long	0x1720d
	.uleb128 0x5
	.byte	0x21
	.byte	0x9a
	.byte	0xb
	.long	0x1722b
	.uleb128 0x5
	.byte	0x21
	.byte	0x9b
	.byte	0xb
	.long	0x17251
	.uleb128 0x5
	.byte	0x21
	.byte	0x9d
	.byte	0xb
	.long	0x17275
	.uleb128 0x5
	.byte	0x21
	.byte	0xa3
	.byte	0xb
	.long	0x17299
	.uleb128 0x5
	.byte	0x21
	.byte	0xa5
	.byte	0xb
	.long	0x172a7
	.uleb128 0x5
	.byte	0x21
	.byte	0xa6
	.byte	0xb
	.long	0x172bc
	.uleb128 0x5
	.byte	0x21
	.byte	0xa7
	.byte	0xb
	.long	0x172db
	.uleb128 0x5
	.byte	0x21
	.byte	0xa8
	.byte	0xb
	.long	0x172ff
	.uleb128 0x5
	.byte	0x21
	.byte	0xa9
	.byte	0xb
	.long	0x17324
	.uleb128 0x5
	.byte	0x21
	.byte	0xab
	.byte	0xb
	.long	0x1733e
	.uleb128 0x5
	.byte	0x21
	.byte	0xac
	.byte	0xb
	.long	0x17364
	.uleb128 0x5
	.byte	0x21
	.byte	0xf0
	.byte	0x16
	.long	0x7da
	.uleb128 0x5
	.byte	0x21
	.byte	0xf5
	.byte	0x16
	.long	0x173cf
	.uleb128 0x5
	.byte	0x21
	.byte	0xf6
	.byte	0x16
	.long	0x174df
	.uleb128 0x5
	.byte	0x21
	.byte	0xf8
	.byte	0x16
	.long	0x174fd
	.uleb128 0x5
	.byte	0x21
	.byte	0xf9
	.byte	0x16
	.long	0x17561
	.uleb128 0x5
	.byte	0x21
	.byte	0xfa
	.byte	0x16
	.long	0x17516
	.uleb128 0x5
	.byte	0x21
	.byte	0xfb
	.byte	0x16
	.long	0x1753b
	.uleb128 0x5
	.byte	0x21
	.byte	0xfc
	.byte	0x16
	.long	0x17580
	.uleb128 0x29
	.ascii "abs\0"
	.byte	0x22
	.byte	0x4f
	.byte	0x3
	.ascii "_ZSt3abse\0"
	.long	0x703
	.long	0x909
	.uleb128 0x1
	.long	0x703
	.byte	0
	.uleb128 0x29
	.ascii "abs\0"
	.byte	0x22
	.byte	0x4b
	.byte	0x3
	.ascii "_ZSt3absf\0"
	.long	0x4fd
	.long	0x929
	.uleb128 0x1
	.long	0x4fd
	.byte	0
	.uleb128 0x29
	.ascii "abs\0"
	.byte	0x22
	.byte	0x47
	.byte	0x3
	.ascii "_ZSt3absd\0"
	.long	0x788
	.long	0x949
	.uleb128 0x1
	.long	0x788
	.byte	0
	.uleb128 0x29
	.ascii "abs\0"
	.byte	0x22
	.byte	0x3d
	.byte	0x3
	.ascii "_ZSt3absx\0"
	.long	0x114
	.long	0x969
	.uleb128 0x1
	.long	0x114
	.byte	0
	.uleb128 0x29
	.ascii "abs\0"
	.byte	0x22
	.byte	0x38
	.byte	0x3
	.ascii "_ZSt3absl\0"
	.long	0x194
	.long	0x989
	.uleb128 0x1
	.long	0x194
	.byte	0
	.uleb128 0x29
	.ascii "div\0"
	.byte	0x21
	.byte	0xb1
	.byte	0x3
	.ascii "_ZSt3divll\0"
	.long	0x779
	.long	0x9af
	.uleb128 0x1
	.long	0x194
	.uleb128 0x1
	.long	0x194
	.byte	0
	.uleb128 0x5
	.byte	0x23
	.byte	0x62
	.byte	0xb
	.long	0x17c67
	.uleb128 0x5
	.byte	0x23
	.byte	0x63
	.byte	0xb
	.long	0x17c74
	.uleb128 0x5
	.byte	0x23
	.byte	0x65
	.byte	0xb
	.long	0x17c88
	.uleb128 0x5
	.byte	0x23
	.byte	0x66
	.byte	0xb
	.long	0x17ca5
	.uleb128 0x5
	.byte	0x23
	.byte	0x67
	.byte	0xb
	.long	0x17cbf
	.uleb128 0x5
	.byte	0x23
	.byte	0x68
	.byte	0xb
	.long	0x17cd7
	.uleb128 0x5
	.byte	0x23
	.byte	0x69
	.byte	0xb
	.long	0x17cf1
	.uleb128 0x5
	.byte	0x23
	.byte	0x6a
	.byte	0xb
	.long	0x17d0b
	.uleb128 0x5
	.byte	0x23
	.byte	0x6b
	.byte	0xb
	.long	0x17d24
	.uleb128 0x5
	.byte	0x23
	.byte	0x6c
	.byte	0xb
	.long	0x17d49
	.uleb128 0x5
	.byte	0x23
	.byte	0x6d
	.byte	0xb
	.long	0x17d6c
	.uleb128 0x5
	.byte	0x23
	.byte	0x6e
	.byte	0xb
	.long	0x17d8a
	.uleb128 0x5
	.byte	0x23
	.byte	0x71
	.byte	0xb
	.long	0x17dc2
	.uleb128 0x5
	.byte	0x23
	.byte	0x72
	.byte	0xb
	.long	0x17dea
	.uleb128 0x5
	.byte	0x23
	.byte	0x73
	.byte	0xb
	.long	0x17e0f
	.uleb128 0x5
	.byte	0x23
	.byte	0x74
	.byte	0xb
	.long	0x17e45
	.uleb128 0x5
	.byte	0x23
	.byte	0x75
	.byte	0xb
	.long	0x17e68
	.uleb128 0x5
	.byte	0x23
	.byte	0x76
	.byte	0xb
	.long	0x17e8d
	.uleb128 0x5
	.byte	0x23
	.byte	0x78
	.byte	0xb
	.long	0x17ea6
	.uleb128 0x5
	.byte	0x23
	.byte	0x79
	.byte	0xb
	.long	0x17ebe
	.uleb128 0x5
	.byte	0x23
	.byte	0x7e
	.byte	0xb
	.long	0x17ecf
	.uleb128 0x5
	.byte	0x23
	.byte	0x7f
	.byte	0xb
	.long	0x17ee5
	.uleb128 0x5
	.byte	0x23
	.byte	0x83
	.byte	0xb
	.long	0x17f68
	.uleb128 0x5
	.byte	0x23
	.byte	0x84
	.byte	0xb
	.long	0x17f82
	.uleb128 0x5
	.byte	0x23
	.byte	0x85
	.byte	0xb
	.long	0x17fa1
	.uleb128 0x5
	.byte	0x23
	.byte	0x86
	.byte	0xb
	.long	0x17fb7
	.uleb128 0x5
	.byte	0x23
	.byte	0x87
	.byte	0xb
	.long	0x17fde
	.uleb128 0x5
	.byte	0x23
	.byte	0x88
	.byte	0xb
	.long	0x17ff9
	.uleb128 0x5
	.byte	0x23
	.byte	0x89
	.byte	0xb
	.long	0x18023
	.uleb128 0x5
	.byte	0x23
	.byte	0x8a
	.byte	0xb
	.long	0x18055
	.uleb128 0x5
	.byte	0x23
	.byte	0x8b
	.byte	0xb
	.long	0x18086
	.uleb128 0x5
	.byte	0x23
	.byte	0x8d
	.byte	0xb
	.long	0x18097
	.uleb128 0x5
	.byte	0x23
	.byte	0x8f
	.byte	0xb
	.long	0x180b1
	.uleb128 0x5
	.byte	0x23
	.byte	0x90
	.byte	0xb
	.long	0x180d0
	.uleb128 0x5
	.byte	0x23
	.byte	0x91
	.byte	0xb
	.long	0x1810f
	.uleb128 0x5
	.byte	0x23
	.byte	0x92
	.byte	0xb
	.long	0x1813f
	.uleb128 0x5
	.byte	0x23
	.byte	0xb9
	.byte	0x16
	.long	0x18178
	.uleb128 0x5
	.byte	0x23
	.byte	0xba
	.byte	0x16
	.long	0x181b2
	.uleb128 0x5
	.byte	0x23
	.byte	0xbb
	.byte	0x16
	.long	0x181ef
	.uleb128 0x5
	.byte	0x23
	.byte	0xbc
	.byte	0x16
	.long	0x1821d
	.uleb128 0x5
	.byte	0x23
	.byte	0xbd
	.byte	0x16
	.long	0x1825e
	.uleb128 0x5
	.byte	0x24
	.byte	0x2f
	.byte	0xb
	.long	0x18296
	.uleb128 0x5
	.byte	0x24
	.byte	0x30
	.byte	0xb
	.long	0x182b5
	.uleb128 0x5
	.byte	0x24
	.byte	0x31
	.byte	0xb
	.long	0x182d6
	.uleb128 0x5
	.byte	0x24
	.byte	0x32
	.byte	0xb
	.long	0x182fc
	.uleb128 0x5
	.byte	0x24
	.byte	0x34
	.byte	0xb
	.long	0x183cf
	.uleb128 0x5
	.byte	0x24
	.byte	0x35
	.byte	0xb
	.long	0x183f8
	.uleb128 0x5
	.byte	0x24
	.byte	0x36
	.byte	0xb
	.long	0x18423
	.uleb128 0x5
	.byte	0x24
	.byte	0x37
	.byte	0xb
	.long	0x1844e
	.uleb128 0x5
	.byte	0x24
	.byte	0x39
	.byte	0xb
	.long	0x1831d
	.uleb128 0x5
	.byte	0x24
	.byte	0x3a
	.byte	0xb
	.long	0x18348
	.uleb128 0x5
	.byte	0x24
	.byte	0x3b
	.byte	0xb
	.long	0x18375
	.uleb128 0x5
	.byte	0x24
	.byte	0x3c
	.byte	0xb
	.long	0x183a2
	.uleb128 0x5
	.byte	0x24
	.byte	0x3e
	.byte	0xb
	.long	0x18479
	.uleb128 0x5
	.byte	0x24
	.byte	0x3f
	.byte	0xb
	.long	0x12a
	.uleb128 0x5
	.byte	0x24
	.byte	0x41
	.byte	0xb
	.long	0x182a5
	.uleb128 0x5
	.byte	0x24
	.byte	0x42
	.byte	0xb
	.long	0x182c5
	.uleb128 0x5
	.byte	0x24
	.byte	0x43
	.byte	0xb
	.long	0x182e6
	.uleb128 0x5
	.byte	0x24
	.byte	0x44
	.byte	0xb
	.long	0x1830c
	.uleb128 0x5
	.byte	0x24
	.byte	0x46
	.byte	0xb
	.long	0x183e3
	.uleb128 0x5
	.byte	0x24
	.byte	0x47
	.byte	0xb
	.long	0x1840d
	.uleb128 0x5
	.byte	0x24
	.byte	0x48
	.byte	0xb
	.long	0x18438
	.uleb128 0x5
	.byte	0x24
	.byte	0x49
	.byte	0xb
	.long	0x18463
	.uleb128 0x5
	.byte	0x24
	.byte	0x4b
	.byte	0xb
	.long	0x18332
	.uleb128 0x5
	.byte	0x24
	.byte	0x4c
	.byte	0xb
	.long	0x1835e
	.uleb128 0x5
	.byte	0x24
	.byte	0x4d
	.byte	0xb
	.long	0x1838b
	.uleb128 0x5
	.byte	0x24
	.byte	0x4e
	.byte	0xb
	.long	0x183b8
	.uleb128 0x5
	.byte	0x24
	.byte	0x50
	.byte	0xb
	.long	0x1848f
	.uleb128 0x5
	.byte	0x24
	.byte	0x51
	.byte	0xb
	.long	0x13b
	.uleb128 0x4e
	.byte	0x15
	.word	0x429
	.byte	0xb
	.long	0x184bf
	.uleb128 0x4e
	.byte	0x15
	.word	0x42a
	.byte	0xb
	.long	0x184ae
	.uleb128 0x19
	.ascii "__conditional<false>\0"
	.byte	0x1
	.byte	0x25
	.byte	0x6f
	.byte	0xc
	.long	0xc20
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x25
	.byte	0x72
	.byte	0x8
	.long	0x18503
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x25
	.byte	0x72
	.byte	0x8
	.long	0x1cde2
	.byte	0
	.uleb128 0x19
	.ascii "integral_constant<bool, false>\0"
	.byte	0x1
	.byte	0x25
	.byte	0x3e
	.byte	0xc
	.long	0xd1c
	.uleb128 0x1a
	.secrel32	.LASF3
	.byte	0x25
	.byte	0x41
	.byte	0x2d
	.long	0x184a1
	.uleb128 0x2e
	.ascii "operator std::integral_constant<bool, false>::value_type\0"
	.byte	0x25
	.byte	0x43
	.byte	0x11
	.ascii "_ZNKSt17integral_constantIbLb0EEcvbEv\0"
	.long	0xc48
	.long	0xcc3
	.long	0xcc9
	.uleb128 0x2
	.long	0x184d1
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF4
	.byte	0x25
	.byte	0x48
	.byte	0x1c
	.ascii "_ZNKSt17integral_constantIbLb0EEclEv\0"
	.long	0xc48
	.long	0xd02
	.long	0xd08
	.uleb128 0x2
	.long	0x184d1
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x184a1
	.uleb128 0x1b
	.ascii "__v\0"
	.long	0x184a1
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0xc20
	.uleb128 0x19
	.ascii "integral_constant<bool, true>\0"
	.byte	0x1
	.byte	0x25
	.byte	0x3e
	.byte	0xc
	.long	0xe1b
	.uleb128 0x1a
	.secrel32	.LASF3
	.byte	0x25
	.byte	0x41
	.byte	0x2d
	.long	0x184a1
	.uleb128 0x2e
	.ascii "operator std::integral_constant<bool, true>::value_type\0"
	.byte	0x25
	.byte	0x43
	.byte	0x11
	.ascii "_ZNKSt17integral_constantIbLb1EEcvbEv\0"
	.long	0xd48
	.long	0xdc2
	.long	0xdc8
	.uleb128 0x2
	.long	0x184d6
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF4
	.byte	0x25
	.byte	0x48
	.byte	0x1c
	.ascii "_ZNKSt17integral_constantIbLb1EEclEv\0"
	.long	0xd48
	.long	0xe01
	.long	0xe07
	.uleb128 0x2
	.long	0x184d6
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x184a1
	.uleb128 0x1b
	.ascii "__v\0"
	.long	0x184a1
	.byte	0x1
	.byte	0
	.uleb128 0x4
	.long	0xd21
	.uleb128 0xf
	.ascii "false_type\0"
	.byte	0x25
	.byte	0x55
	.byte	0x9
	.long	0xc20
	.uleb128 0x21
	.ascii "size_t\0"
	.byte	0x1
	.word	0x12a
	.byte	0x1a
	.long	0xf5
	.uleb128 0x4
	.long	0xe33
	.uleb128 0xc1
	.ascii "__invoke_other\0"
	.word	0x96d
	.uleb128 0x86
	.ascii "__swappable_details\0"
	.byte	0x25
	.word	0xa9f
	.byte	0xd
	.uleb128 0x86
	.ascii "__swappable_with_details\0"
	.byte	0x25
	.word	0xaf5
	.byte	0xd
	.uleb128 0xc1
	.ascii "__nonesuchbase\0"
	.word	0xbc0
	.uleb128 0x87
	.secrel32	.LASF5
	.byte	0x1
	.byte	0x25
	.word	0xbc1
	.byte	0xa
	.long	0xf60
	.uleb128 0x44
	.long	0xe94
	.byte	0x3
	.uleb128 0xf2
	.ascii "~__nonesuch\0"
	.byte	0x25
	.word	0xbc2
	.byte	0x5
	.ascii "_ZNSt10__nonesuchD4Ev\0"
	.long	0xeec
	.long	0xef7
	.uleb128 0x2
	.long	0x184fe
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x9f
	.secrel32	.LASF5
	.byte	0x25
	.word	0xbc3
	.byte	0x5
	.ascii "_ZNSt10__nonesuchC4ERKS_\0"
	.long	0xf22
	.long	0xf2d
	.uleb128 0x2
	.long	0x184fe
	.uleb128 0x1
	.long	0x18503
	.byte	0
	.uleb128 0xf3
	.secrel32	.LASF6
	.byte	0x25
	.word	0xbc4
	.byte	0xa
	.ascii "_ZNSt10__nonesuchaSERKS_\0"
	.long	0xf54
	.uleb128 0x2
	.long	0x184fe
	.uleb128 0x1
	.long	0x18503
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0xea7
	.uleb128 0x71
	.ascii "ranges\0"
	.byte	0x26
	.byte	0xa3
	.byte	0xd
	.long	0xfd2
	.uleb128 0x72
	.ascii "__cust_swap\0"
	.byte	0x26
	.byte	0xa5
	.byte	0xf
	.uleb128 0xc2
	.ascii "__cust\0"
	.byte	0x26
	.byte	0xe1
	.byte	0x16
	.uleb128 0x72
	.ascii "__cust_imove\0"
	.byte	0x27
	.byte	0x50
	.byte	0xf
	.uleb128 0x86
	.ascii "__cust_iswap\0"
	.byte	0x27
	.word	0x320
	.byte	0xd
	.uleb128 0x86
	.ascii "__cust_access\0"
	.byte	0x27
	.word	0x3a3
	.byte	0x15
	.uleb128 0xf4
	.secrel32	.LASF7
	.byte	0x33
	.byte	0x40
	.byte	0xd
	.byte	0
	.uleb128 0x71
	.ascii "__cmp_cat\0"
	.byte	0x3
	.byte	0x31
	.byte	0xd
	.long	0x1089
	.uleb128 0xa0
	.ascii "_Ord\0"
	.byte	0x1
	.long	0x1017
	.byte	0x3
	.byte	0x35
	.byte	0x10
	.long	0x1017
	.uleb128 0xa
	.ascii "equivalent\0"
	.byte	0
	.uleb128 0xf5
	.ascii "less\0"
	.sleb128 -1
	.uleb128 0xa
	.ascii "greater\0"
	.byte	0x1
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x3
	.byte	0x33
	.byte	0xb
	.long	0x545
	.uleb128 0xa0
	.ascii "_Ncmp\0"
	.byte	0x1
	.long	0x1017
	.byte	0x3
	.byte	0x37
	.byte	0x10
	.long	0x1045
	.uleb128 0xa
	.ascii "_Unordered\0"
	.byte	0x2
	.byte	0
	.uleb128 0xf6
	.secrel32	.LASF15
	.byte	0x1
	.byte	0x3
	.byte	0x39
	.byte	0xc
	.uleb128 0xc3
	.secrel32	.LASF15
	.byte	0x3
	.byte	0x3b
	.byte	0x11
	.ascii "_ZNSt9__cmp_cat8__unspecC4EPS0_\0"
	.long	0x107c
	.uleb128 0x2
	.long	0x18508
	.uleb128 0x1
	.long	0x18508
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x73
	.secrel32	.LASF9
	.byte	0x1
	.byte	0x3
	.byte	0x3f
	.byte	0x9
	.long	0x1135
	.uleb128 0x2c
	.secrel32	.LASF8
	.byte	0x3
	.byte	0x42
	.byte	0x15
	.long	0x1017
	.byte	0
	.uleb128 0xa1
	.secrel32	.LASF9
	.byte	0x3
	.byte	0x45
	.byte	0x5
	.ascii "_ZNSt16partial_orderingC4ENSt9__cmp_cat4_OrdE\0"
	.long	0x10e2
	.long	0x10ed
	.uleb128 0x2
	.long	0x18512
	.uleb128 0x1
	.long	0xfe4
	.byte	0
	.uleb128 0xf7
	.secrel32	.LASF9
	.byte	0x3
	.byte	0x4a
	.byte	0x5
	.ascii "_ZNSt16partial_orderingC4ENSt9__cmp_cat5_NcmpE\0"
	.long	0x1129
	.uleb128 0x2
	.long	0x18512
	.uleb128 0x1
	.long	0x1023
	.byte	0
	.byte	0
	.uleb128 0x73
	.secrel32	.LASF10
	.byte	0x1
	.byte	0x3
	.byte	0xa7
	.byte	0x9
	.long	0x11dc
	.uleb128 0x2c
	.secrel32	.LASF8
	.byte	0x3
	.byte	0xa9
	.byte	0x15
	.long	0x1017
	.byte	0
	.uleb128 0xa1
	.secrel32	.LASF10
	.byte	0x3
	.byte	0xac
	.byte	0x5
	.ascii "_ZNSt13weak_orderingC4ENSt9__cmp_cat4_OrdE\0"
	.long	0x118b
	.long	0x1196
	.uleb128 0x2
	.long	0x18517
	.uleb128 0x1
	.long	0xfe4
	.byte	0
	.uleb128 0xc4
	.secrel32	.LASF11
	.byte	0x3
	.byte	0xb8
	.byte	0xf
	.ascii "_ZNKSt13weak_orderingcvSt16partial_orderingEv\0"
	.long	0x1089
	.long	0x11d5
	.uleb128 0x2
	.long	0x1851c
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x1135
	.uleb128 0xc5
	.secrel32	.LASF12
	.byte	0x1
	.byte	0x3
	.word	0x102
	.byte	0x9
	.long	0x12f1
	.uleb128 0x3e
	.secrel32	.LASF8
	.byte	0x3
	.word	0x104
	.byte	0x15
	.long	0x1017
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF12
	.byte	0x3
	.word	0x107
	.byte	0x5
	.ascii "_ZNSt15strong_orderingC4ENSt9__cmp_cat4_OrdE\0"
	.long	0x123c
	.long	0x1247
	.uleb128 0x2
	.long	0x18521
	.uleb128 0x1
	.long	0xfe4
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF11
	.byte	0x3
	.word	0x113
	.byte	0xf
	.ascii "_ZNKSt15strong_orderingcvSt16partial_orderingEv\0"
	.long	0x1089
	.long	0x128c
	.long	0x1292
	.uleb128 0x2
	.long	0x18526
	.byte	0
	.uleb128 0xf8
	.ascii "operator std::weak_ordering\0"
	.byte	0x3
	.word	0x117
	.byte	0xf
	.ascii "_ZNKSt15strong_orderingcvSt13weak_orderingEv\0"
	.long	0x1135
	.byte	0x1
	.long	0x12ea
	.uleb128 0x2
	.long	0x18526
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x11e1
	.uleb128 0xf9
	.secrel32	.LASF7
	.byte	0x26
	.byte	0x36
	.byte	0xd
	.long	0x2074
	.uleb128 0xa2
	.ascii "__platform_wait_alignment\0"
	.byte	0x44
	.byte	0x1d
	.long	0xe43
	.byte	0x8
	.uleb128 0xa2
	.ascii "__atomic_spin_count_relax\0"
	.byte	0x91
	.byte	0x14
	.long	0x18f
	.byte	0xc
	.uleb128 0xa2
	.ascii "__atomic_spin_count\0"
	.byte	0x92
	.byte	0x14
	.long	0x18f
	.byte	0x10
	.uleb128 0x19
	.ascii "__default_spin_policy\0"
	.byte	0x1
	.byte	0x8
	.byte	0x94
	.byte	0xc
	.long	0x13c8
	.uleb128 0xfa
	.secrel32	.LASF4
	.byte	0x8
	.byte	0x97
	.byte	0x7
	.ascii "_ZNKSt8__detail21__default_spin_policyclEv\0"
	.long	0x184a1
	.long	0x13c1
	.uleb128 0x2
	.long	0x19091
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x1366
	.uleb128 0xfb
	.secrel32	.LASF13
	.byte	0x80
	.byte	0x40
	.byte	0x8
	.byte	0xbc
	.byte	0xc
	.long	0x1682
	.uleb128 0xc6
	.ascii "_S_align\0"
	.byte	0x8
	.byte	0xc0
	.byte	0x1d
	.ascii "_ZNSt8__detail18__waiter_pool_base8_S_alignE\0"
	.long	0x18f
	.byte	0x40
	.uleb128 0x7c
	.ascii "_M_wait\0"
	.byte	0x8
	.byte	0xc2
	.byte	0x2b
	.long	0x1687
	.byte	0x40
	.byte	0
	.uleb128 0x13
	.ascii "_M_mtx\0"
	.byte	0x8
	.byte	0xc5
	.byte	0xd
	.long	0x2bc5
	.byte	0x8
	.uleb128 0x7c
	.ascii "_M_ver\0"
	.byte	0x8
	.byte	0xc8
	.byte	0x2b
	.long	0x1687
	.byte	0x40
	.byte	0x40
	.uleb128 0x13
	.ascii "_M_cv\0"
	.byte	0x8
	.byte	0xcb
	.byte	0x11
	.long	0x2d68
	.byte	0x48
	.uleb128 0x3a
	.secrel32	.LASF13
	.byte	0x8
	.byte	0xcd
	.byte	0x7
	.ascii "_ZNSt8__detail18__waiter_pool_baseC4Ev\0"
	.long	0x1495
	.long	0x149b
	.uleb128 0x2
	.long	0x1909b
	.byte	0
	.uleb128 0x5a
	.ascii "_M_enter_wait\0"
	.byte	0x8
	.byte	0xd0
	.byte	0x7
	.ascii "_ZNSt8__detail18__waiter_pool_base13_M_enter_waitEv\0"
	.long	0x14e9
	.long	0x14ef
	.uleb128 0x2
	.long	0x1909b
	.byte	0
	.uleb128 0x5a
	.ascii "_M_leave_wait\0"
	.byte	0x8
	.byte	0xd4
	.byte	0x7
	.ascii "_ZNSt8__detail18__waiter_pool_base13_M_leave_waitEv\0"
	.long	0x153d
	.long	0x1543
	.uleb128 0x2
	.long	0x1909b
	.byte	0
	.uleb128 0x2e
	.ascii "_M_waiting\0"
	.byte	0x8
	.byte	0xd8
	.byte	0x7
	.ascii "_ZNKSt8__detail18__waiter_pool_base10_M_waitingEv\0"
	.long	0x184a1
	.long	0x1590
	.long	0x1596
	.uleb128 0x2
	.long	0x190a5
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF14
	.byte	0x8
	.byte	0xe0
	.byte	0x7
	.ascii "_ZNSt8__detail18__waiter_pool_base9_M_notifyEPKybb\0"
	.long	0x15d9
	.long	0x15ee
	.uleb128 0x2
	.long	0x1909b
	.uleb128 0x1
	.long	0x190af
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x184a1
	.byte	0
	.uleb128 0x29
	.ascii "_S_for\0"
	.byte	0x8
	.byte	0xf0
	.byte	0x7
	.ascii "_ZNSt8__detail18__waiter_pool_base6_S_forEPKv\0"
	.long	0x190b4
	.long	0x1635
	.uleb128 0x1
	.long	0x525
	.byte	0
	.uleb128 0xa3
	.ascii "~__waiter_pool_base\0"
	.ascii "_ZNSt8__detail18__waiter_pool_baseD4Ev\0"
	.long	0x1676
	.uleb128 0x2
	.long	0x1909b
	.uleb128 0x2
	.long	0x188
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x13cd
	.uleb128 0xf
	.ascii "__platform_wait_t\0"
	.byte	0x8
	.byte	0x43
	.byte	0xb
	.long	0x1830c
	.uleb128 0x4
	.long	0x1687
	.uleb128 0xa4
	.ascii "__waiter_pool\0"
	.byte	0x80
	.byte	0x40
	.byte	0x8
	.byte	0xf9
	.byte	0xc
	.long	0x1718
	.uleb128 0x45
	.long	0x13cd
	.uleb128 0xfc
	.ascii "_M_do_wait\0"
	.byte	0x8
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt8__detail13__waiter_pool10_M_do_waitEPKyy\0"
	.long	0x1707
	.uleb128 0x2
	.long	0x190b9
	.uleb128 0x1
	.long	0x190af
	.uleb128 0x1
	.long	0x1687
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "__waiter_base<std::__detail::__waiter_pool>\0"
	.byte	0x10
	.byte	0x8
	.word	0x10d
	.byte	0xe
	.long	0x1b8a
	.uleb128 0xfd
	.ascii "__waiter_type\0"
	.byte	0x8
	.word	0x10f
	.byte	0x8
	.long	0x16a6
	.byte	0x40
	.uleb128 0x1c
	.ascii "_M_w\0"
	.byte	0x8
	.word	0x111
	.byte	0x11
	.long	0x190dc
	.byte	0
	.uleb128 0x1c
	.ascii "_M_addr\0"
	.byte	0x8
	.word	0x112
	.byte	0x15
	.long	0x190e1
	.byte	0x8
	.uleb128 0x25
	.ascii "_S_for\0"
	.byte	0x8
	.word	0x11f
	.byte	0x2
	.ascii "_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE6_S_forEPKv\0"
	.long	0x190dc
	.long	0x17e0
	.uleb128 0x1
	.long	0x525
	.byte	0
	.uleb128 0x46
	.ascii "_M_laundered\0"
	.byte	0x8
	.word	0x12d
	.byte	0x2
	.ascii "_ZNKSt8__detail13__waiter_baseINS_13__waiter_poolEE12_M_launderedEv\0"
	.long	0x184a1
	.long	0x1842
	.long	0x1848
	.uleb128 0x2
	.long	0x190e6
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF14
	.byte	0x8
	.word	0x131
	.byte	0x2
	.ascii "_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE9_M_notifyEbb\0"
	.long	0x1899
	.long	0x18a9
	.uleb128 0x2
	.long	0x190f0
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x184a1
	.byte	0
	.uleb128 0x54
	.ascii "_S_do_spin<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::wait(arrival_token&&) const::<lambda()>, std::__detail::__default_spin_policy>\0"
	.byte	0x8
	.word	0x15c
	.byte	0x4
	.long	0x184a1
	.long	0x1984
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x1f68f
	.uleb128 0x3
	.secrel32	.LASF17
	.long	0x1366
	.uleb128 0x1
	.long	0x190af
	.uleb128 0x1
	.long	0x1f68f
	.uleb128 0x1
	.long	0x1dca1
	.uleb128 0x1
	.long	0x1366
	.byte	0
	.uleb128 0x25
	.ascii "_S_wait_addr<std::__barrier_phase_t>\0"
	.byte	0x8
	.word	0x116
	.byte	0x4
	.ascii "_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEE12_S_wait_addrISt17__barrier_phase_tEEPyPKT_S5_\0"
	.long	0x190e1
	.long	0x1a2c
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0xaa56
	.uleb128 0x1
	.long	0x1bd9e
	.uleb128 0x1
	.long	0x190e1
	.byte	0
	.uleb128 0xfe
	.ascii "_M_do_spin<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::wait(arrival_token&&) const::<lambda()> >\0"
	.byte	0x8
	.word	0x168
	.byte	0x4
	.long	0x184a1
	.long	0x1ad2
	.long	0x1ae7
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x1f68f
	.uleb128 0x55
	.secrel32	.LASF17
	.long	0x1366
	.uleb128 0x2
	.long	0x190f0
	.uleb128 0x1
	.long	0x1f68f
	.uleb128 0x1
	.long	0x1dca1
	.uleb128 0x1
	.long	0x1366
	.byte	0
	.uleb128 0xc7
	.ascii "__waiter_base<std::__barrier_phase_t>\0"
	.byte	0x8
	.word	0x127
	.byte	0xd
	.ascii "_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC4ISt17__barrier_phase_tEEPKT_\0"
	.long	0x1b75
	.long	0x1b80
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0xaa56
	.uleb128 0x2
	.long	0x190f0
	.uleb128 0x1
	.long	0x1bd9e
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x16a6
	.byte	0
	.uleb128 0x4
	.long	0x1718
	.uleb128 0x1d
	.ascii "__waiter<std::integral_constant<bool, true> >\0"
	.byte	0x10
	.byte	0x8
	.word	0x16e
	.byte	0xe
	.long	0x1d49
	.uleb128 0x45
	.long	0x1718
	.uleb128 0x27
	.secrel32	.LASF18
	.byte	0x8
	.word	0x17a
	.byte	0x2
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED4Ev\0"
	.long	0x1c17
	.long	0x1c22
	.uleb128 0x2
	.long	0x190fa
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0xc8
	.ascii "_M_do_wait<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::wait(arrival_token&&) const::<lambda()> >\0"
	.byte	0x8
	.word	0x190
	.byte	0x4
	.long	0x1cbb
	.long	0x1cc6
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x1f68f
	.uleb128 0x2
	.long	0x190fa
	.uleb128 0x1
	.long	0x1f68f
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF19
	.byte	0x8
	.word	0x173
	.byte	0xd
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC4ISt17__barrier_phase_tEEPKT_\0"
	.long	0x1d34
	.long	0x1d3f
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x2
	.long	0x190fa
	.uleb128 0x1
	.long	0x1bd9e
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF20
	.long	0xd21
	.byte	0
	.uleb128 0x1d
	.ascii "__waiter<std::integral_constant<bool, false> >\0"
	.byte	0x10
	.byte	0x8
	.word	0x16e
	.byte	0xe
	.long	0x1e60
	.uleb128 0x45
	.long	0x1718
	.uleb128 0x27
	.secrel32	.LASF18
	.byte	0x8
	.word	0x17a
	.byte	0x2
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED4Ev\0"
	.long	0x1dd2
	.long	0x1ddd
	.uleb128 0x2
	.long	0x19104
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF19
	.byte	0x8
	.word	0x173
	.byte	0xd
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC4ISt17__barrier_phase_tEEPKT_\0"
	.long	0x1e4b
	.long	0x1e56
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x2
	.long	0x19104
	.uleb128 0x1
	.long	0x1bd9e
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF20
	.long	0xc20
	.byte	0
	.uleb128 0x1d
	.ascii "_MakeUniq<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>\0"
	.byte	0x1
	.byte	0xf
	.word	0x40e
	.byte	0xc
	.long	0x1eea
	.uleb128 0x21
	.ascii "__array\0"
	.byte	0xf
	.word	0x40f
	.byte	0x21
	.long	0x11a79
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cd81
	.byte	0
	.uleb128 0x88
	.ascii "__atomic_spin<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::wait(arrival_token&&) const::<lambda()>, std::__detail::__default_spin_policy>\0"
	.byte	0x8
	.byte	0x9e
	.byte	0x7
	.long	0x184a1
	.long	0x1fc3
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x1f68f
	.uleb128 0x3
	.secrel32	.LASF17
	.long	0x1366
	.uleb128 0x1
	.long	0x1fb8
	.uleb128 0x7
	.long	0x1f68f
	.uleb128 0x1
	.long	0x1366
	.byte	0
	.uleb128 0x21
	.ascii "__bare_wait\0"
	.byte	0x8
	.word	0x19e
	.byte	0xb
	.long	0x1d49
	.uleb128 0x21
	.ascii "__enters_wait\0"
	.byte	0x8
	.word	0x19d
	.byte	0xb
	.long	0x1b8f
	.uleb128 0x21
	.ascii "__unique_ptr_array_t\0"
	.byte	0xf
	.word	0x418
	.byte	0xb
	.long	0x1ecf
	.uleb128 0xc9
	.ascii "__thread_relax\0"
	.byte	0x88
	.ascii "_ZNSt8__detail14__thread_relaxEv\0"
	.uleb128 0xc9
	.ascii "__thread_yield\0"
	.byte	0x80
	.ascii "_ZNSt8__detail14__thread_yieldEv\0"
	.byte	0
	.uleb128 0x86
	.ascii "__cmp_cust\0"
	.byte	0x3
	.word	0x23b
	.byte	0xd
	.uleb128 0xa5
	.ascii "__cmp_alg\0"
	.byte	0x3
	.word	0x497
	.byte	0x14
	.uleb128 0xca
	.ascii "align_val_t\0"
	.byte	0x8
	.long	0xf5
	.byte	0x4
	.byte	0x59
	.uleb128 0x72
	.ascii "__debug\0"
	.byte	0x28
	.byte	0x32
	.byte	0xd
	.uleb128 0x21
	.ascii "ptrdiff_t\0"
	.byte	0x1
	.word	0x12b
	.byte	0x1c
	.long	0x114
	.uleb128 0xf
	.ascii "true_type\0"
	.byte	0x25
	.byte	0x52
	.byte	0x9
	.long	0xd21
	.uleb128 0x74
	.secrel32	.LASF21
	.byte	0x1
	.byte	0x29
	.byte	0x33
	.byte	0xa
	.long	0x2117
	.uleb128 0xcb
	.secrel32	.LASF21
	.byte	0x29
	.byte	0x33
	.byte	0x25
	.ascii "_ZNSt15allocator_arg_tC4Ev\0"
	.long	0x2110
	.uleb128 0x2
	.long	0x1856a
	.byte	0
	.byte	0
	.uleb128 0xff
	.ascii "__uses_alloc_base\0"
	.byte	0x1
	.byte	0x29
	.byte	0x48
	.byte	0xa
	.uleb128 0x19
	.ascii "__uses_alloc0\0"
	.byte	0x1
	.byte	0x29
	.byte	0x4a
	.byte	0xa
	.long	0x21a3
	.uleb128 0x19
	.ascii "_Sink\0"
	.byte	0x1
	.byte	0x29
	.byte	0x4c
	.byte	0xc
	.long	0x218f
	.uleb128 0xc3
	.secrel32	.LASF6
	.byte	0x29
	.byte	0x4c
	.byte	0x2e
	.ascii "_ZNSt13__uses_alloc05_SinkaSEPKv\0"
	.long	0x2183
	.uleb128 0x2
	.long	0x1856f
	.uleb128 0x1
	.long	0x525
	.byte	0
	.byte	0
	.uleb128 0x45
	.long	0x2117
	.uleb128 0x13
	.ascii "_M_a\0"
	.byte	0x29
	.byte	0x4c
	.byte	0x4b
	.long	0x2146
	.byte	0
	.byte	0
	.uleb128 0x19
	.ascii "_Hash_impl\0"
	.byte	0x1
	.byte	0x5
	.byte	0xc9
	.byte	0xa
	.long	0x224b
	.uleb128 0x29
	.ascii "hash\0"
	.byte	0x5
	.byte	0xcc
	.byte	0x5
	.ascii "_ZNSt10_Hash_impl4hashEPKvyy\0"
	.long	0xe33
	.long	0x21f5
	.uleb128 0x1
	.long	0x525
	.uleb128 0x1
	.long	0xe33
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0xcc
	.ascii "hash<long long unsigned int>\0"
	.byte	0x5
	.byte	0xd2
	.byte	0x7
	.ascii "_ZNSt10_Hash_impl4hashIyEEyRKT_\0"
	.long	0xe33
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xf5
	.uleb128 0x1
	.long	0x226d0
	.byte	0
	.byte	0
	.uleb128 0x21
	.ascii "nullptr_t\0"
	.byte	0x1
	.word	0x12e
	.byte	0x1d
	.long	0x18574
	.uleb128 0x5
	.byte	0x2a
	.byte	0x40
	.byte	0xb
	.long	0x1863b
	.uleb128 0x5
	.byte	0x2a
	.byte	0x8d
	.byte	0xb
	.long	0x152
	.uleb128 0x5
	.byte	0x2a
	.byte	0x8f
	.byte	0xb
	.long	0x18653
	.uleb128 0x5
	.byte	0x2a
	.byte	0x90
	.byte	0xb
	.long	0x1866c
	.uleb128 0x5
	.byte	0x2a
	.byte	0x91
	.byte	0xb
	.long	0x18686
	.uleb128 0x5
	.byte	0x2a
	.byte	0x92
	.byte	0xb
	.long	0x186aa
	.uleb128 0x5
	.byte	0x2a
	.byte	0x93
	.byte	0xb
	.long	0x186c9
	.uleb128 0x5
	.byte	0x2a
	.byte	0x94
	.byte	0xb
	.long	0x186e8
	.uleb128 0x5
	.byte	0x2a
	.byte	0x95
	.byte	0xb
	.long	0x18706
	.uleb128 0x5
	.byte	0x2a
	.byte	0x96
	.byte	0xb
	.long	0x18728
	.uleb128 0x5
	.byte	0x2a
	.byte	0x97
	.byte	0xb
	.long	0x18749
	.uleb128 0x5
	.byte	0x2a
	.byte	0x98
	.byte	0xb
	.long	0x18762
	.uleb128 0x5
	.byte	0x2a
	.byte	0x99
	.byte	0xb
	.long	0x18774
	.uleb128 0x5
	.byte	0x2a
	.byte	0x9a
	.byte	0xb
	.long	0x1879d
	.uleb128 0x5
	.byte	0x2a
	.byte	0x9b
	.byte	0xb
	.long	0x187c7
	.uleb128 0x5
	.byte	0x2a
	.byte	0x9c
	.byte	0xb
	.long	0x187e7
	.uleb128 0x5
	.byte	0x2a
	.byte	0x9d
	.byte	0xb
	.long	0x18818
	.uleb128 0x5
	.byte	0x2a
	.byte	0x9e
	.byte	0xb
	.long	0x18836
	.uleb128 0x5
	.byte	0x2a
	.byte	0xa0
	.byte	0xb
	.long	0x18852
	.uleb128 0x5
	.byte	0x2a
	.byte	0xa0
	.byte	0xb
	.long	0x1886e
	.uleb128 0x5
	.byte	0x2a
	.byte	0xa2
	.byte	0xb
	.long	0x1888f
	.uleb128 0x5
	.byte	0x2a
	.byte	0xa3
	.byte	0xb
	.long	0x188b0
	.uleb128 0x5
	.byte	0x2a
	.byte	0xa4
	.byte	0xb
	.long	0x188d0
	.uleb128 0x5
	.byte	0x2a
	.byte	0xa6
	.byte	0xb
	.long	0x188f7
	.uleb128 0x5
	.byte	0x2a
	.byte	0xa9
	.byte	0xb
	.long	0x1891d
	.uleb128 0x5
	.byte	0x2a
	.byte	0xa9
	.byte	0xb
	.long	0x1893d
	.uleb128 0x5
	.byte	0x2a
	.byte	0xac
	.byte	0xb
	.long	0x18962
	.uleb128 0x5
	.byte	0x2a
	.byte	0xae
	.byte	0xb
	.long	0x18988
	.uleb128 0x5
	.byte	0x2a
	.byte	0xb0
	.byte	0xb
	.long	0x189a9
	.uleb128 0x5
	.byte	0x2a
	.byte	0xb2
	.byte	0xb
	.long	0x189c9
	.uleb128 0x5
	.byte	0x2a
	.byte	0xb3
	.byte	0xb
	.long	0x189ee
	.uleb128 0x5
	.byte	0x2a
	.byte	0xb4
	.byte	0xb
	.long	0x18a0c
	.uleb128 0x5
	.byte	0x2a
	.byte	0xb5
	.byte	0xb
	.long	0x18a2a
	.uleb128 0x5
	.byte	0x2a
	.byte	0xb6
	.byte	0xb
	.long	0x18a49
	.uleb128 0x5
	.byte	0x2a
	.byte	0xb7
	.byte	0xb
	.long	0x18a67
	.uleb128 0x5
	.byte	0x2a
	.byte	0xb8
	.byte	0xb
	.long	0x18a86
	.uleb128 0x5
	.byte	0x2a
	.byte	0xb9
	.byte	0xb
	.long	0x18ab6
	.uleb128 0x5
	.byte	0x2a
	.byte	0xba
	.byte	0xb
	.long	0x18acf
	.uleb128 0x5
	.byte	0x2a
	.byte	0xbb
	.byte	0xb
	.long	0x18af3
	.uleb128 0x5
	.byte	0x2a
	.byte	0xbc
	.byte	0xb
	.long	0x18b17
	.uleb128 0x5
	.byte	0x2a
	.byte	0xbd
	.byte	0xb
	.long	0x18b3b
	.uleb128 0x5
	.byte	0x2a
	.byte	0xbe
	.byte	0xb
	.long	0x18b6c
	.uleb128 0x5
	.byte	0x2a
	.byte	0xbf
	.byte	0xb
	.long	0x18b8a
	.uleb128 0x5
	.byte	0x2a
	.byte	0xc1
	.byte	0xb
	.long	0x18ba9
	.uleb128 0x5
	.byte	0x2a
	.byte	0xc3
	.byte	0xb
	.long	0x18bc8
	.uleb128 0x5
	.byte	0x2a
	.byte	0xc4
	.byte	0xb
	.long	0x18be6
	.uleb128 0x5
	.byte	0x2a
	.byte	0xc5
	.byte	0xb
	.long	0x18c0a
	.uleb128 0x5
	.byte	0x2a
	.byte	0xc6
	.byte	0xb
	.long	0x18c2f
	.uleb128 0x5
	.byte	0x2a
	.byte	0xc7
	.byte	0xb
	.long	0x18c53
	.uleb128 0x5
	.byte	0x2a
	.byte	0xc8
	.byte	0xb
	.long	0x18c6c
	.uleb128 0x5
	.byte	0x2a
	.byte	0xc9
	.byte	0xb
	.long	0x18c91
	.uleb128 0x5
	.byte	0x2a
	.byte	0xca
	.byte	0xb
	.long	0x18cb6
	.uleb128 0x5
	.byte	0x2a
	.byte	0xcb
	.byte	0xb
	.long	0x18cdc
	.uleb128 0x5
	.byte	0x2a
	.byte	0xcc
	.byte	0xb
	.long	0x18d01
	.uleb128 0x5
	.byte	0x2a
	.byte	0xcd
	.byte	0xb
	.long	0x18d1d
	.uleb128 0x5
	.byte	0x2a
	.byte	0xce
	.byte	0xb
	.long	0x18d38
	.uleb128 0x5
	.byte	0x2a
	.byte	0xcf
	.byte	0xb
	.long	0x18d56
	.uleb128 0x5
	.byte	0x2a
	.byte	0xd0
	.byte	0xb
	.long	0x18d75
	.uleb128 0x5
	.byte	0x2a
	.byte	0xd1
	.byte	0xb
	.long	0x18d94
	.uleb128 0x5
	.byte	0x2a
	.byte	0xd2
	.byte	0xb
	.long	0x18db2
	.uleb128 0x4e
	.byte	0x2a
	.word	0x10b
	.byte	0x16
	.long	0x18dd7
	.uleb128 0x4e
	.byte	0x2a
	.word	0x10c
	.byte	0x16
	.long	0x18df7
	.uleb128 0x4e
	.byte	0x2a
	.word	0x10d
	.byte	0x16
	.long	0x18e1c
	.uleb128 0x4e
	.byte	0x2a
	.word	0x11b
	.byte	0xe
	.long	0x18ba9
	.uleb128 0x4e
	.byte	0x2a
	.word	0x11e
	.byte	0xe
	.long	0x188f7
	.uleb128 0x4e
	.byte	0x2a
	.word	0x121
	.byte	0xe
	.long	0x18962
	.uleb128 0x4e
	.byte	0x2a
	.word	0x124
	.byte	0xe
	.long	0x189a9
	.uleb128 0x4e
	.byte	0x2a
	.word	0x128
	.byte	0xe
	.long	0x18dd7
	.uleb128 0x4e
	.byte	0x2a
	.word	0x129
	.byte	0xe
	.long	0x18df7
	.uleb128 0x4e
	.byte	0x2a
	.word	0x12a
	.byte	0xe
	.long	0x18e1c
	.uleb128 0x71
	.ascii "__exception_ptr\0"
	.byte	0x2b
	.byte	0x3f
	.byte	0xd
	.long	0x291d
	.uleb128 0x73
	.secrel32	.LASF22
	.byte	0x8
	.byte	0x2b
	.byte	0x5a
	.byte	0xb
	.long	0x290f
	.uleb128 0x13
	.ascii "_M_exception_object\0"
	.byte	0x2b
	.byte	0x5c
	.byte	0xd
	.long	0x4b4
	.byte	0
	.uleb128 0xa1
	.secrel32	.LASF22
	.byte	0x2b
	.byte	0x5e
	.byte	0x10
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EPv\0"
	.long	0x2516
	.long	0x2521
	.uleb128 0x2
	.long	0x18e42
	.uleb128 0x1
	.long	0x4b4
	.byte	0
	.uleb128 0x5a
	.ascii "_M_addref\0"
	.byte	0x2b
	.byte	0x60
	.byte	0xc
	.ascii "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv\0"
	.long	0x2569
	.long	0x256f
	.uleb128 0x2
	.long	0x18e42
	.byte	0
	.uleb128 0x5a
	.ascii "_M_release\0"
	.byte	0x2b
	.byte	0x61
	.byte	0xc
	.ascii "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv\0"
	.long	0x25ba
	.long	0x25c0
	.uleb128 0x2
	.long	0x18e42
	.byte	0
	.uleb128 0x2e
	.ascii "_M_get\0"
	.byte	0x2b
	.byte	0x63
	.byte	0xd
	.ascii "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv\0"
	.long	0x4b4
	.long	0x2607
	.long	0x260d
	.uleb128 0x2
	.long	0x18e47
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF22
	.byte	0x2b
	.byte	0x6b
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4Ev\0"
	.byte	0x1
	.long	0x2648
	.long	0x264e
	.uleb128 0x2
	.long	0x18e42
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF22
	.byte	0x2b
	.byte	0x6d
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4ERKS0_\0"
	.byte	0x1
	.long	0x268d
	.long	0x2698
	.uleb128 0x2
	.long	0x18e42
	.uleb128 0x1
	.long	0x18e4c
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF22
	.byte	0x2b
	.byte	0x70
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EDn\0"
	.byte	0x1
	.long	0x26d4
	.long	0x26df
	.uleb128 0x2
	.long	0x18e42
	.uleb128 0x1
	.long	0x224b
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF22
	.byte	0x2b
	.byte	0x74
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EOS0_\0"
	.byte	0x1
	.long	0x271d
	.long	0x2728
	.uleb128 0x2
	.long	0x18e42
	.uleb128 0x1
	.long	0x18e51
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF6
	.byte	0x2b
	.byte	0x81
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptraSERKS0_\0"
	.long	0x18e56
	.long	0x276a
	.long	0x2775
	.uleb128 0x2
	.long	0x18e42
	.uleb128 0x1
	.long	0x18e4c
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF6
	.byte	0x2b
	.byte	0x85
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptraSEOS0_\0"
	.long	0x18e56
	.long	0x27b6
	.long	0x27c1
	.uleb128 0x2
	.long	0x18e42
	.uleb128 0x1
	.long	0x18e51
	.byte	0
	.uleb128 0x5b
	.ascii "~exception_ptr\0"
	.byte	0x2b
	.byte	0x8c
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrD4Ev\0"
	.byte	0x1
	.long	0x2807
	.long	0x2812
	.uleb128 0x2
	.long	0x18e42
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF23
	.byte	0x2b
	.byte	0x8f
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptr4swapERS0_\0"
	.byte	0x1
	.long	0x2853
	.long	0x285e
	.uleb128 0x2
	.long	0x18e42
	.uleb128 0x1
	.long	0x18e56
	.byte	0
	.uleb128 0x100
	.secrel32	.LASF25
	.byte	0x2b
	.byte	0x9b
	.byte	0x10
	.ascii "_ZNKSt15__exception_ptr13exception_ptrcvbEv\0"
	.long	0x184a1
	.byte	0x1
	.long	0x28a0
	.long	0x28a6
	.uleb128 0x2
	.long	0x18e47
	.byte	0
	.uleb128 0x101
	.ascii "__cxa_exception_type\0"
	.byte	0x2b
	.byte	0xb0
	.byte	0x7
	.ascii "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv\0"
	.long	0x18e5b
	.byte	0x1
	.long	0x2908
	.uleb128 0x2
	.long	0x18e47
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x24b0
	.uleb128 0x5
	.byte	0x2b
	.byte	0x54
	.byte	0x10
	.long	0x2925
	.byte	0
	.uleb128 0x5
	.byte	0x2b
	.byte	0x44
	.byte	0x1a
	.long	0x24b0
	.uleb128 0xcd
	.ascii "rethrow_exception\0"
	.byte	0x2b
	.byte	0x50
	.byte	0x8
	.ascii "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE\0"
	.long	0x2982
	.uleb128 0x1
	.long	0x24b0
	.byte	0
	.uleb128 0xa6
	.ascii "type_info\0"
	.uleb128 0x4
	.long	0x2982
	.uleb128 0x5
	.byte	0x2c
	.byte	0x35
	.byte	0xb
	.long	0x20b
	.uleb128 0x5
	.byte	0x2c
	.byte	0x36
	.byte	0xb
	.long	0x18e60
	.uleb128 0x5
	.byte	0x2c
	.byte	0x37
	.byte	0xb
	.long	0x18e81
	.uleb128 0x72
	.ascii "numbers\0"
	.byte	0x2d
	.byte	0x30
	.byte	0xb
	.uleb128 0xa5
	.ascii "__cxx11\0"
	.byte	0x1
	.word	0x14b
	.byte	0x41
	.uleb128 0xc2
	.ascii "_V2\0"
	.byte	0x2e
	.byte	0x50
	.byte	0x14
	.uleb128 0x19
	.ascii "__conditional<true>\0"
	.byte	0x1
	.byte	0x25
	.byte	0x68
	.byte	0xc
	.long	0x2a4c
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x25
	.byte	0x6b
	.byte	0x8
	.long	0x1c7dc
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x25
	.byte	0x6b
	.byte	0x8
	.long	0x1c7e1
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x25
	.byte	0x6b
	.byte	0x8
	.long	0x1cb6c
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x25
	.byte	0x6b
	.byte	0x8
	.long	0x1cb71
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x25
	.byte	0x6b
	.byte	0x8
	.long	0x1cc7a
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x25
	.byte	0x6b
	.byte	0x8
	.long	0x1cc7f
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x25
	.byte	0x6b
	.byte	0x8
	.long	0x1ce96
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x25
	.byte	0x6b
	.byte	0x8
	.long	0x1ce9b
	.byte	0
	.uleb128 0x5
	.byte	0x2f
	.byte	0x52
	.byte	0xb
	.long	0x18f9d
	.uleb128 0x5
	.byte	0x2f
	.byte	0x53
	.byte	0xb
	.long	0x177
	.uleb128 0x5
	.byte	0x2f
	.byte	0x54
	.byte	0xb
	.long	0x152
	.uleb128 0x5
	.byte	0x2f
	.byte	0x5c
	.byte	0xb
	.long	0x18faf
	.uleb128 0x5
	.byte	0x2f
	.byte	0x65
	.byte	0xb
	.long	0x18fcf
	.uleb128 0x5
	.byte	0x2f
	.byte	0x68
	.byte	0xb
	.long	0x18ff0
	.uleb128 0x5
	.byte	0x2f
	.byte	0x69
	.byte	0xb
	.long	0x1900a
	.uleb128 0x5
	.byte	0x30
	.byte	0x62
	.byte	0x14
	.long	0x1744b
	.uleb128 0x5
	.byte	0x30
	.byte	0x63
	.byte	0x14
	.long	0x19028
	.uleb128 0x5
	.byte	0x30
	.byte	0x64
	.byte	0x14
	.long	0x17465
	.uleb128 0x5
	.byte	0x30
	.byte	0x65
	.byte	0x14
	.long	0x17471
	.uleb128 0x5
	.byte	0x30
	.byte	0x66
	.byte	0x14
	.long	0x1747c
	.uleb128 0x73
	.secrel32	.LASF24
	.byte	0x8
	.byte	0x7
	.byte	0x39
	.byte	0x9
	.long	0x2bc0
	.uleb128 0xa7
	.ascii "__native_type\0"
	.byte	0x7
	.byte	0x3c
	.byte	0x21
	.long	0x18f51
	.byte	0x2
	.uleb128 0xce
	.ascii "_M_mutex\0"
	.byte	0x43
	.byte	0x14
	.long	0x2ab9
	.uleb128 0x31
	.secrel32	.LASF24
	.byte	0x7
	.byte	0x45
	.byte	0x5
	.ascii "_ZNSt12__mutex_baseC4Ev\0"
	.byte	0x2
	.long	0x2b0b
	.long	0x2b11
	.uleb128 0x2
	.long	0x19032
	.byte	0
	.uleb128 0x5b
	.ascii "~__mutex_base\0"
	.byte	0x7
	.byte	0x4b
	.byte	0x5
	.ascii "_ZNSt12__mutex_baseD4Ev\0"
	.byte	0x2
	.long	0x2b44
	.long	0x2b4f
	.uleb128 0x2
	.long	0x19032
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x93
	.secrel32	.LASF24
	.byte	0x7
	.byte	0x4e
	.byte	0x5
	.ascii "_ZNSt12__mutex_baseC4ERKS_\0"
	.byte	0x2
	.long	0x2b7c
	.long	0x2b87
	.uleb128 0x2
	.long	0x19032
	.uleb128 0x1
	.long	0x1903c
	.byte	0
	.uleb128 0x102
	.secrel32	.LASF6
	.byte	0x7
	.byte	0x4f
	.byte	0x13
	.ascii "_ZNSt12__mutex_baseaSERKS_\0"
	.long	0x19041
	.byte	0x2
	.long	0x2bb4
	.uleb128 0x2
	.long	0x19032
	.uleb128 0x1
	.long	0x1903c
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x2aac
	.uleb128 0x5f
	.ascii "mutex\0"
	.byte	0x8
	.byte	0x7
	.byte	0x53
	.byte	0x9
	.long	0x2d63
	.uleb128 0x45
	.long	0x2aac
	.uleb128 0xcf
	.ascii "mutex\0"
	.byte	0x5b
	.ascii "_ZNSt5mutexC4Ev\0"
	.long	0x2bfa
	.long	0x2c00
	.uleb128 0x2
	.long	0x19046
	.byte	0
	.uleb128 0xcf
	.ascii "~mutex\0"
	.byte	0x5c
	.ascii "_ZNSt5mutexD4Ev\0"
	.long	0x2c22
	.long	0x2c2d
	.uleb128 0x2
	.long	0x19046
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x103
	.ascii "mutex\0"
	.byte	0x7
	.byte	0x5e
	.byte	0x5
	.ascii "_ZNSt5mutexC4ERKS_\0"
	.byte	0x1
	.long	0x2c54
	.long	0x2c5f
	.uleb128 0x2
	.long	0x19046
	.uleb128 0x1
	.long	0x19050
	.byte	0
	.uleb128 0x94
	.secrel32	.LASF6
	.byte	0x7
	.byte	0x5f
	.byte	0xc
	.ascii "_ZNSt5mutexaSERKS_\0"
	.long	0x19055
	.long	0x2c87
	.long	0x2c92
	.uleb128 0x2
	.long	0x19046
	.uleb128 0x1
	.long	0x19050
	.byte	0
	.uleb128 0x5b
	.ascii "lock\0"
	.byte	0x7
	.byte	0x62
	.byte	0x5
	.ascii "_ZNSt5mutex4lockEv\0"
	.byte	0x1
	.long	0x2cb7
	.long	0x2cbd
	.uleb128 0x2
	.long	0x19046
	.byte	0
	.uleb128 0xa8
	.ascii "try_lock\0"
	.byte	0x7
	.byte	0x6c
	.ascii "_ZNSt5mutex8try_lockEv\0"
	.long	0x184a1
	.long	0x2ced
	.long	0x2cf3
	.uleb128 0x2
	.long	0x19046
	.byte	0
	.uleb128 0x5b
	.ascii "unlock\0"
	.byte	0x7
	.byte	0x73
	.byte	0x5
	.ascii "_ZNSt5mutex6unlockEv\0"
	.byte	0x1
	.long	0x2d1c
	.long	0x2d22
	.uleb128 0x2
	.long	0x19046
	.byte	0
	.uleb128 0x75
	.secrel32	.LASF26
	.byte	0x7
	.byte	0x56
	.byte	0x1f
	.long	0x1905a
	.uleb128 0xc4
	.secrel32	.LASF27
	.byte	0x7
	.byte	0x7a
	.byte	0x5
	.ascii "_ZNSt5mutex13native_handleEv\0"
	.long	0x2d22
	.long	0x2d5c
	.uleb128 0x2
	.long	0x19046
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x2bc5
	.uleb128 0x73
	.secrel32	.LASF28
	.byte	0x8
	.byte	0x7
	.byte	0x7f
	.byte	0x9
	.long	0x2f97
	.uleb128 0x31
	.secrel32	.LASF28
	.byte	0x7
	.byte	0x84
	.byte	0x5
	.ascii "_ZNSt9__condvarC4Ev\0"
	.byte	0x1
	.long	0x2d9a
	.long	0x2da0
	.uleb128 0x2
	.long	0x1905f
	.byte	0
	.uleb128 0x5b
	.ascii "~__condvar\0"
	.byte	0x7
	.byte	0x8b
	.byte	0x5
	.ascii "_ZNSt9__condvarD4Ev\0"
	.byte	0x1
	.long	0x2dcc
	.long	0x2dd7
	.uleb128 0x2
	.long	0x1905f
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x93
	.secrel32	.LASF28
	.byte	0x7
	.byte	0x91
	.byte	0x5
	.ascii "_ZNSt9__condvarC4ERKS_\0"
	.byte	0x1
	.long	0x2e00
	.long	0x2e0b
	.uleb128 0x2
	.long	0x1905f
	.uleb128 0x1
	.long	0x19069
	.byte	0
	.uleb128 0x94
	.secrel32	.LASF6
	.byte	0x7
	.byte	0x92
	.byte	0x10
	.ascii "_ZNSt9__condvaraSERKS_\0"
	.long	0x1906e
	.long	0x2e37
	.long	0x2e42
	.uleb128 0x2
	.long	0x1905f
	.uleb128 0x1
	.long	0x19069
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF27
	.byte	0x7
	.byte	0x94
	.byte	0x17
	.ascii "_ZNSt9__condvar13native_handleEv\0"
	.long	0x19073
	.long	0x2e77
	.long	0x2e7d
	.uleb128 0x2
	.long	0x1905f
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF29
	.byte	0x7
	.byte	0x98
	.byte	0x5
	.ascii "_ZNSt9__condvar4waitERSt5mutex\0"
	.byte	0x1
	.long	0x2ead
	.long	0x2eb8
	.uleb128 0x2
	.long	0x1905f
	.uleb128 0x1
	.long	0x19055
	.byte	0
	.uleb128 0x5b
	.ascii "wait_until\0"
	.byte	0x7
	.byte	0xa0
	.byte	0x5
	.ascii "_ZNSt9__condvar10wait_untilERSt5mutexR8timespec\0"
	.byte	0x1
	.long	0x2f00
	.long	0x2f10
	.uleb128 0x2
	.long	0x1905f
	.uleb128 0x1
	.long	0x19055
	.uleb128 0x1
	.long	0x19078
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF30
	.byte	0x7
	.byte	0x81
	.byte	0xb
	.long	0x18f84
	.uleb128 0x31
	.secrel32	.LASF31
	.byte	0x7
	.byte	0xaf
	.byte	0x5
	.ascii "_ZNSt9__condvar10notify_oneEv\0"
	.byte	0x1
	.long	0x2f4b
	.long	0x2f51
	.uleb128 0x2
	.long	0x1905f
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF32
	.byte	0x7
	.byte	0xb6
	.byte	0x5
	.ascii "_ZNSt9__condvar10notify_allEv\0"
	.byte	0x1
	.long	0x2f80
	.long	0x2f86
	.uleb128 0x2
	.long	0x1905f
	.byte	0
	.uleb128 0xce
	.ascii "_M_cond\0"
	.byte	0xbe
	.byte	0x16
	.long	0x18f6b
	.byte	0
	.uleb128 0x4
	.long	0x2d68
	.uleb128 0x74
	.secrel32	.LASF33
	.byte	0x1
	.byte	0x7
	.byte	0xce
	.byte	0xa
	.long	0x2fd5
	.uleb128 0xcb
	.secrel32	.LASF33
	.byte	0x7
	.byte	0xce
	.byte	0x22
	.ascii "_ZNSt12adopt_lock_tC4Ev\0"
	.long	0x2fce
	.uleb128 0x2
	.long	0x1907d
	.byte	0
	.byte	0
	.uleb128 0x5f
	.ascii "lock_guard<std::mutex>\0"
	.byte	0x8
	.byte	0x7
	.byte	0xdf
	.byte	0xb
	.long	0x3187
	.uleb128 0x104
	.secrel32	.LASF34
	.byte	0x7
	.byte	0xe4
	.byte	0x10
	.ascii "_ZNSt10lock_guardISt5mutexEC4ERS0_\0"
	.byte	0x1
	.long	0x302a
	.long	0x3035
	.uleb128 0x2
	.long	0x190c3
	.uleb128 0x1
	.long	0x190cd
	.byte	0
	.uleb128 0xa7
	.ascii "mutex_type\0"
	.byte	0x7
	.byte	0xe2
	.byte	0x16
	.long	0x2bc5
	.byte	0x1
	.uleb128 0x31
	.secrel32	.LASF34
	.byte	0x7
	.byte	0xe7
	.byte	0x7
	.ascii "_ZNSt10lock_guardISt5mutexEC4ERS0_St12adopt_lock_t\0"
	.byte	0x1
	.long	0x308e
	.long	0x309e
	.uleb128 0x2
	.long	0x190c3
	.uleb128 0x1
	.long	0x190cd
	.uleb128 0x1
	.long	0x2f9c
	.byte	0
	.uleb128 0x5b
	.ascii "~lock_guard\0"
	.byte	0x7
	.byte	0xea
	.byte	0x7
	.ascii "_ZNSt10lock_guardISt5mutexED4Ev\0"
	.byte	0x1
	.long	0x30d7
	.long	0x30e2
	.uleb128 0x2
	.long	0x190c3
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x93
	.secrel32	.LASF34
	.byte	0x7
	.byte	0xed
	.byte	0x7
	.ascii "_ZNSt10lock_guardISt5mutexEC4ERKS1_\0"
	.byte	0x1
	.long	0x3118
	.long	0x3123
	.uleb128 0x2
	.long	0x190c3
	.uleb128 0x1
	.long	0x190d2
	.byte	0
	.uleb128 0x94
	.secrel32	.LASF6
	.byte	0x7
	.byte	0xee
	.byte	0x13
	.ascii "_ZNSt10lock_guardISt5mutexEaSERKS1_\0"
	.long	0x190d7
	.long	0x315c
	.long	0x3167
	.uleb128 0x2
	.long	0x190c3
	.uleb128 0x1
	.long	0x190d2
	.byte	0
	.uleb128 0x13
	.ascii "_M_device\0"
	.byte	0x7
	.byte	0xf1
	.byte	0x14
	.long	0x190cd
	.byte	0
	.uleb128 0x9
	.ascii "_Mutex\0"
	.long	0x2bc5
	.byte	0
	.uleb128 0x4
	.long	0x2fd5
	.uleb128 0xa0
	.ascii "memory_order\0"
	.byte	0x4
	.long	0x188
	.byte	0x9
	.byte	0x3d
	.byte	0xe
	.long	0x31e1
	.uleb128 0xa
	.ascii "relaxed\0"
	.byte	0
	.uleb128 0xa
	.ascii "consume\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "acquire\0"
	.byte	0x2
	.uleb128 0x105
	.secrel32	.LASF35
	.byte	0x3
	.uleb128 0xa
	.ascii "acq_rel\0"
	.byte	0x4
	.uleb128 0xa
	.ascii "seq_cst\0"
	.byte	0x5
	.byte	0
	.uleb128 0x95
	.ascii "__memory_order_modifier\0"
	.long	0x1e6
	.byte	0x9
	.byte	0x59
	.byte	0x8
	.long	0x3280
	.uleb128 0x4f
	.ascii "__memory_order_mask\0"
	.word	0xffff
	.uleb128 0xc
	.ascii "__memory_order_modifier_mask\0"
	.long	0xffff0000
	.uleb128 0xc
	.ascii "__memory_order_hle_acquire\0"
	.long	0x10000
	.uleb128 0xc
	.ascii "__memory_order_hle_release\0"
	.long	0x20000
	.byte	0
	.uleb128 0xd0
	.ascii "__atomic_base<bool>\0"
	.byte	0x1
	.byte	0x1
	.long	0x43c7
	.uleb128 0xd1
	.secrel32	.LASF59
	.ascii "_ZNSt13__atomic_baseIbE12_S_alignmentE\0"
	.long	0x18f
	.byte	0x1
	.uleb128 0x60
	.secrel32	.LASF36
	.byte	0x9
	.word	0x14a
	.byte	0x15
	.long	0x184a1
	.byte	0x3
	.uleb128 0xd2
	.ascii "_M_i\0"
	.long	0x32ce
	.byte	0x1
	.uleb128 0x34
	.secrel32	.LASF37
	.byte	0x9
	.word	0x152
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEC4Ev\0"
	.long	0x3315
	.long	0x331b
	.uleb128 0x2
	.long	0x1959f
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF38
	.byte	0x9
	.word	0x153
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbED4Ev\0"
	.long	0x3348
	.long	0x3353
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x9f
	.secrel32	.LASF37
	.byte	0x9
	.word	0x154
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEC4ERKS0_\0"
	.long	0x3385
	.long	0x3390
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x195a9
	.byte	0
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x9
	.word	0x155
	.byte	0x16
	.ascii "_ZNSt13__atomic_baseIbEaSERKS0_\0"
	.long	0x195ae
	.long	0x33c5
	.long	0x33d0
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x195a9
	.byte	0
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x9
	.word	0x156
	.byte	0x16
	.ascii "_ZNVSt13__atomic_baseIbEaSERKS0_\0"
	.long	0x195ae
	.long	0x3406
	.long	0x3411
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x195a9
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF37
	.byte	0x9
	.word	0x159
	.byte	0x11
	.ascii "_ZNSt13__atomic_baseIbEC4Eb\0"
	.long	0x343e
	.long	0x3449
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF39
	.byte	0x9
	.word	0x15b
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIbEcvbEv\0"
	.long	0x32ce
	.long	0x347c
	.long	0x3482
	.uleb128 0x2
	.long	0x195b8
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF39
	.byte	0x9
	.word	0x15e
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIbEcvbEv\0"
	.long	0x32ce
	.long	0x34b6
	.long	0x34bc
	.uleb128 0x2
	.long	0x195c2
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF6
	.byte	0x9
	.word	0x162
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEaSEb\0"
	.long	0x32ce
	.long	0x34ed
	.long	0x34f8
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF6
	.byte	0x9
	.word	0x169
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEaSEb\0"
	.long	0x32ce
	.long	0x352a
	.long	0x3535
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0x9
	.word	0x170
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEppEi\0"
	.long	0x32ce
	.long	0x3566
	.long	0x3571
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0x9
	.word	0x174
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEppEi\0"
	.long	0x32ce
	.long	0x35a3
	.long	0x35ae
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0x9
	.word	0x178
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEmmEi\0"
	.long	0x32ce
	.long	0x35df
	.long	0x35ea
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0x9
	.word	0x17c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEmmEi\0"
	.long	0x32ce
	.long	0x361c
	.long	0x3627
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0x9
	.word	0x180
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEppEv\0"
	.long	0x32ce
	.long	0x3658
	.long	0x365e
	.uleb128 0x2
	.long	0x1959f
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0x9
	.word	0x184
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEppEv\0"
	.long	0x32ce
	.long	0x3690
	.long	0x3696
	.uleb128 0x2
	.long	0x195b3
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0x9
	.word	0x188
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEmmEv\0"
	.long	0x32ce
	.long	0x36c7
	.long	0x36cd
	.uleb128 0x2
	.long	0x1959f
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0x9
	.word	0x18c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEmmEv\0"
	.long	0x32ce
	.long	0x36ff
	.long	0x3705
	.uleb128 0x2
	.long	0x195b3
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF42
	.byte	0x9
	.word	0x190
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEpLEb\0"
	.long	0x32ce
	.long	0x3736
	.long	0x3741
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF42
	.byte	0x9
	.word	0x194
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEpLEb\0"
	.long	0x32ce
	.long	0x3773
	.long	0x377e
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF43
	.byte	0x9
	.word	0x198
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEmIEb\0"
	.long	0x32ce
	.long	0x37af
	.long	0x37ba
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF43
	.byte	0x9
	.word	0x19c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEmIEb\0"
	.long	0x32ce
	.long	0x37ec
	.long	0x37f7
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF44
	.byte	0x9
	.word	0x1a0
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEaNEb\0"
	.long	0x32ce
	.long	0x3828
	.long	0x3833
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF44
	.byte	0x9
	.word	0x1a4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEaNEb\0"
	.long	0x32ce
	.long	0x3865
	.long	0x3870
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF45
	.byte	0x9
	.word	0x1a8
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEoREb\0"
	.long	0x32ce
	.long	0x38a1
	.long	0x38ac
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF45
	.byte	0x9
	.word	0x1ac
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEoREb\0"
	.long	0x32ce
	.long	0x38de
	.long	0x38e9
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF46
	.byte	0x9
	.word	0x1b0
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbEeOEb\0"
	.long	0x32ce
	.long	0x391a
	.long	0x3925
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF46
	.byte	0x9
	.word	0x1b4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbEeOEb\0"
	.long	0x32ce
	.long	0x3957
	.long	0x3962
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF47
	.byte	0x9
	.word	0x1b8
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIbE12is_lock_freeEv\0"
	.long	0x184a1
	.long	0x39a0
	.long	0x39a6
	.uleb128 0x2
	.long	0x195b8
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF47
	.byte	0x9
	.word	0x1c0
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIbE12is_lock_freeEv\0"
	.long	0x184a1
	.long	0x39e5
	.long	0x39eb
	.uleb128 0x2
	.long	0x195c2
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF48
	.byte	0x9
	.word	0x1c8
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE5storeEbSt12memory_order\0"
	.long	0x3a2c
	.long	0x3a3c
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF48
	.byte	0x9
	.word	0x1d4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE5storeEbSt12memory_order\0"
	.long	0x3a7e
	.long	0x3a8e
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF49
	.byte	0x9
	.word	0x1e1
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIbE4loadESt12memory_order\0"
	.long	0x32ce
	.long	0x3ad2
	.long	0x3add
	.uleb128 0x2
	.long	0x195b8
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF49
	.byte	0x9
	.word	0x1ec
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIbE4loadESt12memory_order\0"
	.long	0x32ce
	.long	0x3b22
	.long	0x3b2d
	.uleb128 0x2
	.long	0x195c2
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF50
	.byte	0x9
	.word	0x1f7
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE8exchangeEbSt12memory_order\0"
	.long	0x32ce
	.long	0x3b75
	.long	0x3b85
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF50
	.byte	0x9
	.word	0x1ff
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE8exchangeEbSt12memory_order\0"
	.long	0x32ce
	.long	0x3bce
	.long	0x3bde
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x206
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x3c39
	.long	0x3c53
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x195c7
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x210
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x3caf
	.long	0x3cc9
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x195c7
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x21b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_order\0"
	.long	0x184a1
	.long	0x3d21
	.long	0x3d36
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x195c7
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x223
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_order\0"
	.long	0x184a1
	.long	0x3d8f
	.long	0x3da4
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x195c7
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x22b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x3e01
	.long	0x3e1b
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x195c7
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x235
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x3e79
	.long	0x3e93
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x195c7
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x240
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_order\0"
	.long	0x184a1
	.long	0x3eed
	.long	0x3f02
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x195c7
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x248
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_order\0"
	.long	0x184a1
	.long	0x3f5d
	.long	0x3f72
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x195c7
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF29
	.byte	0x9
	.word	0x251
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIbE4waitEbSt12memory_order\0"
	.long	0x3fb3
	.long	0x3fc3
	.uleb128 0x2
	.long	0x195b8
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF31
	.byte	0x9
	.word	0x25b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE10notify_oneEv\0"
	.long	0x3ffa
	.long	0x4000
	.uleb128 0x2
	.long	0x1959f
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF32
	.byte	0x9
	.word	0x261
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE10notify_allEv\0"
	.long	0x4037
	.long	0x403d
	.uleb128 0x2
	.long	0x1959f
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF53
	.byte	0x9
	.word	0x268
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE9fetch_addEbSt12memory_order\0"
	.long	0x32ce
	.long	0x4086
	.long	0x4096
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF53
	.byte	0x9
	.word	0x26d
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE9fetch_addEbSt12memory_order\0"
	.long	0x32ce
	.long	0x40e0
	.long	0x40f0
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF54
	.byte	0x9
	.word	0x272
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE9fetch_subEbSt12memory_order\0"
	.long	0x32ce
	.long	0x4139
	.long	0x4149
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF54
	.byte	0x9
	.word	0x277
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE9fetch_subEbSt12memory_order\0"
	.long	0x32ce
	.long	0x4193
	.long	0x41a3
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF55
	.byte	0x9
	.word	0x27c
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE9fetch_andEbSt12memory_order\0"
	.long	0x32ce
	.long	0x41ec
	.long	0x41fc
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF55
	.byte	0x9
	.word	0x281
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE9fetch_andEbSt12memory_order\0"
	.long	0x32ce
	.long	0x4246
	.long	0x4256
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF56
	.byte	0x9
	.word	0x286
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE8fetch_orEbSt12memory_order\0"
	.long	0x32ce
	.long	0x429e
	.long	0x42ae
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF56
	.byte	0x9
	.word	0x28b
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE8fetch_orEbSt12memory_order\0"
	.long	0x32ce
	.long	0x42f7
	.long	0x4307
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF57
	.byte	0x9
	.word	0x290
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIbE9fetch_xorEbSt12memory_order\0"
	.long	0x32ce
	.long	0x4350
	.long	0x4360
	.uleb128 0x2
	.long	0x1959f
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF57
	.byte	0x9
	.word	0x295
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIbE9fetch_xorEbSt12memory_order\0"
	.long	0x32ce
	.long	0x43aa
	.long	0x43ba
	.uleb128 0x2
	.long	0x195b3
	.uleb128 0x1
	.long	0x32ce
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x9
	.ascii "_IntTp\0"
	.long	0x184a1
	.byte	0
	.uleb128 0x4
	.long	0x3280
	.uleb128 0x96
	.long	0x3280
	.uleb128 0x4
	.long	0x43cc
	.uleb128 0xa4
	.ascii "atomic<bool>\0"
	.byte	0x1
	.byte	0x1
	.byte	0xa
	.byte	0x3e
	.byte	0xa
	.long	0x4c78
	.uleb128 0x106
	.ascii "_M_base\0"
	.byte	0xa
	.byte	0x43
	.byte	0x19
	.long	0x3280
	.byte	0x1
	.byte	0
	.byte	0x3
	.uleb128 0x3a
	.secrel32	.LASF58
	.byte	0xa
	.byte	0x46
	.byte	0x5
	.ascii "_ZNSt6atomicIbEC4Ev\0"
	.long	0x4427
	.long	0x442d
	.uleb128 0x2
	.long	0x195cc
	.byte	0
	.uleb128 0x107
	.ascii "~atomic\0"
	.byte	0xa
	.byte	0x47
	.byte	0x5
	.ascii "_ZNSt6atomicIbED4Ev\0"
	.byte	0x1
	.long	0x4457
	.long	0x4462
	.uleb128 0x2
	.long	0x195cc
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x108
	.secrel32	.LASF58
	.byte	0xa
	.byte	0x48
	.byte	0x5
	.ascii "_ZNSt6atomicIbEC4ERKS0_\0"
	.long	0x448b
	.long	0x4496
	.uleb128 0x2
	.long	0x195cc
	.uleb128 0x1
	.long	0x195d6
	.byte	0
	.uleb128 0xd3
	.secrel32	.LASF6
	.byte	0x49
	.ascii "_ZNSt6atomicIbEaSERKS0_\0"
	.long	0x195db
	.long	0x44c1
	.long	0x44cc
	.uleb128 0x2
	.long	0x195cc
	.uleb128 0x1
	.long	0x195d6
	.byte	0
	.uleb128 0xd3
	.secrel32	.LASF6
	.byte	0x4a
	.ascii "_ZNVSt6atomicIbEaSERKS0_\0"
	.long	0x195db
	.long	0x44f8
	.long	0x4503
	.uleb128 0x2
	.long	0x195e0
	.uleb128 0x1
	.long	0x195d6
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF58
	.byte	0xa
	.byte	0x4c
	.byte	0xf
	.ascii "_ZNSt6atomicIbEC4Eb\0"
	.long	0x4527
	.long	0x4532
	.uleb128 0x2
	.long	0x195cc
	.uleb128 0x1
	.long	0x184a1
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF6
	.byte	0xa
	.byte	0x4f
	.byte	0x5
	.ascii "_ZNSt6atomicIbEaSEb\0"
	.long	0x184a1
	.long	0x455a
	.long	0x4565
	.uleb128 0x2
	.long	0x195cc
	.uleb128 0x1
	.long	0x184a1
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF6
	.byte	0xa
	.byte	0x53
	.byte	0x5
	.ascii "_ZNVSt6atomicIbEaSEb\0"
	.long	0x184a1
	.long	0x458e
	.long	0x4599
	.uleb128 0x2
	.long	0x195e0
	.uleb128 0x1
	.long	0x184a1
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF25
	.byte	0xa
	.byte	0x56
	.byte	0x5
	.ascii "_ZNKSt6atomicIbEcvbEv\0"
	.long	0x184a1
	.long	0x45c3
	.long	0x45c9
	.uleb128 0x2
	.long	0x195e5
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF25
	.byte	0xa
	.byte	0x59
	.byte	0x5
	.ascii "_ZNVKSt6atomicIbEcvbEv\0"
	.long	0x184a1
	.long	0x45f4
	.long	0x45fa
	.uleb128 0x2
	.long	0x195ef
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF47
	.byte	0xa
	.byte	0x5d
	.byte	0x5
	.ascii "_ZNKSt6atomicIbE12is_lock_freeEv\0"
	.long	0x184a1
	.long	0x462f
	.long	0x4635
	.uleb128 0x2
	.long	0x195e5
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF47
	.byte	0xa
	.byte	0x60
	.byte	0x5
	.ascii "_ZNVKSt6atomicIbE12is_lock_freeEv\0"
	.long	0x184a1
	.long	0x466b
	.long	0x4671
	.uleb128 0x2
	.long	0x195ef
	.byte	0
	.uleb128 0xc6
	.ascii "is_always_lock_free\0"
	.byte	0xa
	.byte	0x63
	.byte	0x1b
	.ascii "_ZNSt6atomicIbE19is_always_lock_freeE\0"
	.long	0x184a9
	.byte	0x1
	.uleb128 0x2b
	.secrel32	.LASF48
	.byte	0xa
	.byte	0x67
	.byte	0x5
	.ascii "_ZNSt6atomicIbE5storeEbSt12memory_order\0"
	.long	0x46ed
	.long	0x46fd
	.uleb128 0x2
	.long	0x195cc
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF48
	.byte	0xa
	.byte	0x6b
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE5storeEbSt12memory_order\0"
	.long	0x4736
	.long	0x4746
	.uleb128 0x2
	.long	0x195e0
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF49
	.byte	0xa
	.byte	0x6f
	.byte	0x5
	.ascii "_ZNKSt6atomicIbE4loadESt12memory_order\0"
	.long	0x184a1
	.long	0x4781
	.long	0x478c
	.uleb128 0x2
	.long	0x195e5
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF49
	.byte	0xa
	.byte	0x73
	.byte	0x5
	.ascii "_ZNVKSt6atomicIbE4loadESt12memory_order\0"
	.long	0x184a1
	.long	0x47c8
	.long	0x47d3
	.uleb128 0x2
	.long	0x195ef
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF50
	.byte	0xa
	.byte	0x77
	.byte	0x5
	.ascii "_ZNSt6atomicIbE8exchangeEbSt12memory_order\0"
	.long	0x184a1
	.long	0x4812
	.long	0x4822
	.uleb128 0x2
	.long	0x195cc
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF50
	.byte	0xa
	.byte	0x7b
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE8exchangeEbSt12memory_order\0"
	.long	0x184a1
	.long	0x4862
	.long	0x4872
	.uleb128 0x2
	.long	0x195e0
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF51
	.byte	0xa
	.byte	0x80
	.byte	0x5
	.ascii "_ZNSt6atomicIbE21compare_exchange_weakERbbSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x48c4
	.long	0x48de
	.uleb128 0x2
	.long	0x195cc
	.uleb128 0x1
	.long	0x195f4
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF51
	.byte	0xa
	.byte	0x85
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE21compare_exchange_weakERbbSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x4931
	.long	0x494b
	.uleb128 0x2
	.long	0x195e0
	.uleb128 0x1
	.long	0x195f4
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF51
	.byte	0xa
	.byte	0x8a
	.byte	0x5
	.ascii "_ZNSt6atomicIbE21compare_exchange_weakERbbSt12memory_order\0"
	.long	0x184a1
	.long	0x499a
	.long	0x49af
	.uleb128 0x2
	.long	0x195cc
	.uleb128 0x1
	.long	0x195f4
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF51
	.byte	0xa
	.byte	0x8f
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE21compare_exchange_weakERbbSt12memory_order\0"
	.long	0x184a1
	.long	0x49ff
	.long	0x4a14
	.uleb128 0x2
	.long	0x195e0
	.uleb128 0x1
	.long	0x195f4
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF52
	.byte	0xa
	.byte	0x94
	.byte	0x5
	.ascii "_ZNSt6atomicIbE23compare_exchange_strongERbbSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x4a68
	.long	0x4a82
	.uleb128 0x2
	.long	0x195cc
	.uleb128 0x1
	.long	0x195f4
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF52
	.byte	0xa
	.byte	0x99
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE23compare_exchange_strongERbbSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x4ad7
	.long	0x4af1
	.uleb128 0x2
	.long	0x195e0
	.uleb128 0x1
	.long	0x195f4
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF52
	.byte	0xa
	.byte	0x9e
	.byte	0x5
	.ascii "_ZNSt6atomicIbE23compare_exchange_strongERbbSt12memory_order\0"
	.long	0x184a1
	.long	0x4b42
	.long	0x4b57
	.uleb128 0x2
	.long	0x195cc
	.uleb128 0x1
	.long	0x195f4
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF52
	.byte	0xa
	.byte	0xa3
	.byte	0x5
	.ascii "_ZNVSt6atomicIbE23compare_exchange_strongERbbSt12memory_order\0"
	.long	0x184a1
	.long	0x4ba9
	.long	0x4bbe
	.uleb128 0x2
	.long	0x195e0
	.uleb128 0x1
	.long	0x195f4
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF29
	.byte	0xa
	.byte	0xa9
	.byte	0x5
	.ascii "_ZNKSt6atomicIbE4waitEbSt12memory_order\0"
	.long	0x4bf6
	.long	0x4c06
	.uleb128 0x2
	.long	0x195e5
	.uleb128 0x1
	.long	0x184a1
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF31
	.byte	0xa
	.byte	0xaf
	.byte	0x5
	.ascii "_ZNSt6atomicIbE10notify_oneEv\0"
	.long	0x4c34
	.long	0x4c3a
	.uleb128 0x2
	.long	0x195cc
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF32
	.byte	0xa
	.byte	0xb3
	.byte	0x5
	.ascii "_ZNSt6atomicIbE10notify_allEv\0"
	.long	0x4c68
	.long	0x4c6e
	.uleb128 0x2
	.long	0x195cc
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x184a1
	.byte	0
	.uleb128 0x4
	.long	0x43d7
	.uleb128 0x96
	.long	0x43d7
	.uleb128 0x96
	.long	0x4c78
	.uleb128 0xd0
	.ascii "__atomic_base<long long int>\0"
	.byte	0x8
	.byte	0x8
	.long	0x5dd9
	.uleb128 0xd1
	.secrel32	.LASF59
	.ascii "_ZNSt13__atomic_baseIxE12_S_alignmentE\0"
	.long	0x18f
	.byte	0x8
	.uleb128 0x60
	.secrel32	.LASF36
	.byte	0x9
	.word	0x14a
	.byte	0x15
	.long	0x114
	.byte	0x3
	.uleb128 0xd2
	.ascii "_M_i\0"
	.long	0x4ce0
	.byte	0x8
	.uleb128 0x34
	.secrel32	.LASF37
	.byte	0x9
	.word	0x152
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEC4Ev\0"
	.long	0x4d27
	.long	0x4d2d
	.uleb128 0x2
	.long	0x195f9
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF38
	.byte	0x9
	.word	0x153
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxED4Ev\0"
	.long	0x4d5a
	.long	0x4d65
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x9f
	.secrel32	.LASF37
	.byte	0x9
	.word	0x154
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEC4ERKS0_\0"
	.long	0x4d97
	.long	0x4da2
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x19603
	.byte	0
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x9
	.word	0x155
	.byte	0x16
	.ascii "_ZNSt13__atomic_baseIxEaSERKS0_\0"
	.long	0x19608
	.long	0x4dd7
	.long	0x4de2
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x19603
	.byte	0
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x9
	.word	0x156
	.byte	0x16
	.ascii "_ZNVSt13__atomic_baseIxEaSERKS0_\0"
	.long	0x19608
	.long	0x4e18
	.long	0x4e23
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x19603
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF37
	.byte	0x9
	.word	0x159
	.byte	0x11
	.ascii "_ZNSt13__atomic_baseIxEC4Ex\0"
	.long	0x4e50
	.long	0x4e5b
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF60
	.byte	0x9
	.word	0x15b
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIxEcvxEv\0"
	.long	0x4ce0
	.long	0x4e8e
	.long	0x4e94
	.uleb128 0x2
	.long	0x19612
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF60
	.byte	0x9
	.word	0x15e
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIxEcvxEv\0"
	.long	0x4ce0
	.long	0x4ec8
	.long	0x4ece
	.uleb128 0x2
	.long	0x1961c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF6
	.byte	0x9
	.word	0x162
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEaSEx\0"
	.long	0x4ce0
	.long	0x4eff
	.long	0x4f0a
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF6
	.byte	0x9
	.word	0x169
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEaSEx\0"
	.long	0x4ce0
	.long	0x4f3c
	.long	0x4f47
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0x9
	.word	0x170
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEppEi\0"
	.long	0x4ce0
	.long	0x4f78
	.long	0x4f83
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0x9
	.word	0x174
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEppEi\0"
	.long	0x4ce0
	.long	0x4fb5
	.long	0x4fc0
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0x9
	.word	0x178
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEmmEi\0"
	.long	0x4ce0
	.long	0x4ff1
	.long	0x4ffc
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0x9
	.word	0x17c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEmmEi\0"
	.long	0x4ce0
	.long	0x502e
	.long	0x5039
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0x9
	.word	0x180
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEppEv\0"
	.long	0x4ce0
	.long	0x506a
	.long	0x5070
	.uleb128 0x2
	.long	0x195f9
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0x9
	.word	0x184
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEppEv\0"
	.long	0x4ce0
	.long	0x50a2
	.long	0x50a8
	.uleb128 0x2
	.long	0x1960d
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0x9
	.word	0x188
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEmmEv\0"
	.long	0x4ce0
	.long	0x50d9
	.long	0x50df
	.uleb128 0x2
	.long	0x195f9
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0x9
	.word	0x18c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEmmEv\0"
	.long	0x4ce0
	.long	0x5111
	.long	0x5117
	.uleb128 0x2
	.long	0x1960d
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF42
	.byte	0x9
	.word	0x190
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEpLEx\0"
	.long	0x4ce0
	.long	0x5148
	.long	0x5153
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF42
	.byte	0x9
	.word	0x194
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEpLEx\0"
	.long	0x4ce0
	.long	0x5185
	.long	0x5190
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF43
	.byte	0x9
	.word	0x198
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEmIEx\0"
	.long	0x4ce0
	.long	0x51c1
	.long	0x51cc
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF43
	.byte	0x9
	.word	0x19c
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEmIEx\0"
	.long	0x4ce0
	.long	0x51fe
	.long	0x5209
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF44
	.byte	0x9
	.word	0x1a0
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEaNEx\0"
	.long	0x4ce0
	.long	0x523a
	.long	0x5245
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF44
	.byte	0x9
	.word	0x1a4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEaNEx\0"
	.long	0x4ce0
	.long	0x5277
	.long	0x5282
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF45
	.byte	0x9
	.word	0x1a8
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEoREx\0"
	.long	0x4ce0
	.long	0x52b3
	.long	0x52be
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF45
	.byte	0x9
	.word	0x1ac
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEoREx\0"
	.long	0x4ce0
	.long	0x52f0
	.long	0x52fb
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF46
	.byte	0x9
	.word	0x1b0
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxEeOEx\0"
	.long	0x4ce0
	.long	0x532c
	.long	0x5337
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF46
	.byte	0x9
	.word	0x1b4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxEeOEx\0"
	.long	0x4ce0
	.long	0x5369
	.long	0x5374
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF47
	.byte	0x9
	.word	0x1b8
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIxE12is_lock_freeEv\0"
	.long	0x184a1
	.long	0x53b2
	.long	0x53b8
	.uleb128 0x2
	.long	0x19612
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF47
	.byte	0x9
	.word	0x1c0
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIxE12is_lock_freeEv\0"
	.long	0x184a1
	.long	0x53f7
	.long	0x53fd
	.uleb128 0x2
	.long	0x1961c
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF48
	.byte	0x9
	.word	0x1c8
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE5storeExSt12memory_order\0"
	.long	0x543e
	.long	0x544e
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF48
	.byte	0x9
	.word	0x1d4
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE5storeExSt12memory_order\0"
	.long	0x5490
	.long	0x54a0
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF49
	.byte	0x9
	.word	0x1e1
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIxE4loadESt12memory_order\0"
	.long	0x4ce0
	.long	0x54e4
	.long	0x54ef
	.uleb128 0x2
	.long	0x19612
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF49
	.byte	0x9
	.word	0x1ec
	.byte	0x7
	.ascii "_ZNVKSt13__atomic_baseIxE4loadESt12memory_order\0"
	.long	0x4ce0
	.long	0x5534
	.long	0x553f
	.uleb128 0x2
	.long	0x1961c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF50
	.byte	0x9
	.word	0x1f7
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE8exchangeExSt12memory_order\0"
	.long	0x4ce0
	.long	0x5587
	.long	0x5597
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF50
	.byte	0x9
	.word	0x1ff
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE8exchangeExSt12memory_order\0"
	.long	0x4ce0
	.long	0x55e0
	.long	0x55f0
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x206
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x564b
	.long	0x5665
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x19621
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x210
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x56c1
	.long	0x56db
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x19621
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x21b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_order\0"
	.long	0x184a1
	.long	0x5733
	.long	0x5748
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x19621
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x223
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_order\0"
	.long	0x184a1
	.long	0x57a1
	.long	0x57b6
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x19621
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x22b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x5813
	.long	0x582d
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x19621
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x235
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_orderS2_\0"
	.long	0x184a1
	.long	0x588b
	.long	0x58a5
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x19621
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x240
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_order\0"
	.long	0x184a1
	.long	0x58ff
	.long	0x5914
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x19621
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x248
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_order\0"
	.long	0x184a1
	.long	0x596f
	.long	0x5984
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x19621
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF29
	.byte	0x9
	.word	0x251
	.byte	0x7
	.ascii "_ZNKSt13__atomic_baseIxE4waitExSt12memory_order\0"
	.long	0x59c5
	.long	0x59d5
	.uleb128 0x2
	.long	0x19612
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF31
	.byte	0x9
	.word	0x25b
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE10notify_oneEv\0"
	.long	0x5a0c
	.long	0x5a12
	.uleb128 0x2
	.long	0x195f9
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF32
	.byte	0x9
	.word	0x261
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE10notify_allEv\0"
	.long	0x5a49
	.long	0x5a4f
	.uleb128 0x2
	.long	0x195f9
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF53
	.byte	0x9
	.word	0x268
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE9fetch_addExSt12memory_order\0"
	.long	0x4ce0
	.long	0x5a98
	.long	0x5aa8
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF53
	.byte	0x9
	.word	0x26d
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE9fetch_addExSt12memory_order\0"
	.long	0x4ce0
	.long	0x5af2
	.long	0x5b02
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF54
	.byte	0x9
	.word	0x272
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE9fetch_subExSt12memory_order\0"
	.long	0x4ce0
	.long	0x5b4b
	.long	0x5b5b
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF54
	.byte	0x9
	.word	0x277
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE9fetch_subExSt12memory_order\0"
	.long	0x4ce0
	.long	0x5ba5
	.long	0x5bb5
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF55
	.byte	0x9
	.word	0x27c
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE9fetch_andExSt12memory_order\0"
	.long	0x4ce0
	.long	0x5bfe
	.long	0x5c0e
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF55
	.byte	0x9
	.word	0x281
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE9fetch_andExSt12memory_order\0"
	.long	0x4ce0
	.long	0x5c58
	.long	0x5c68
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF56
	.byte	0x9
	.word	0x286
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE8fetch_orExSt12memory_order\0"
	.long	0x4ce0
	.long	0x5cb0
	.long	0x5cc0
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF56
	.byte	0x9
	.word	0x28b
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE8fetch_orExSt12memory_order\0"
	.long	0x4ce0
	.long	0x5d09
	.long	0x5d19
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF57
	.byte	0x9
	.word	0x290
	.byte	0x7
	.ascii "_ZNSt13__atomic_baseIxE9fetch_xorExSt12memory_order\0"
	.long	0x4ce0
	.long	0x5d62
	.long	0x5d72
	.uleb128 0x2
	.long	0x195f9
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF57
	.byte	0x9
	.word	0x295
	.byte	0x7
	.ascii "_ZNVSt13__atomic_baseIxE9fetch_xorExSt12memory_order\0"
	.long	0x4ce0
	.long	0x5dbc
	.long	0x5dcc
	.uleb128 0x2
	.long	0x1960d
	.uleb128 0x1
	.long	0x4ce0
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x9
	.ascii "_IntTp\0"
	.long	0x114
	.byte	0
	.uleb128 0x4
	.long	0x4c89
	.uleb128 0x96
	.long	0x4c89
	.uleb128 0x4
	.long	0x5dde
	.uleb128 0x73
	.secrel32	.LASF61
	.byte	0x8
	.byte	0xb
	.byte	0x3d
	.byte	0x9
	.long	0x64d3
	.uleb128 0x109
	.ascii "id\0"
	.byte	0x8
	.byte	0xb
	.byte	0x50
	.byte	0xb
	.byte	0x1
	.long	0x5e6e
	.uleb128 0x13
	.ascii "_M_thread\0"
	.byte	0xb
	.byte	0x52
	.byte	0x1a
	.long	0x5e73
	.byte	0
	.uleb128 0x5b
	.ascii "id\0"
	.byte	0xb
	.byte	0x55
	.byte	0x7
	.ascii "_ZNSt6thread2idC4Ev\0"
	.byte	0x1
	.long	0x5e3b
	.long	0x5e41
	.uleb128 0x2
	.long	0x19626
	.byte	0
	.uleb128 0x10a
	.ascii "id\0"
	.byte	0xb
	.byte	0x58
	.byte	0x7
	.ascii "_ZNSt6thread2idC4Ey\0"
	.byte	0x1
	.long	0x5e62
	.uleb128 0x2
	.long	0x19626
	.uleb128 0x1
	.long	0x5e73
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x5df6
	.uleb128 0x75
	.secrel32	.LASF26
	.byte	0xb
	.byte	0x4a
	.byte	0xb
	.long	0x18f3d
	.uleb128 0x13
	.ascii "_M_id\0"
	.byte	0xb
	.byte	0x6f
	.byte	0xb
	.long	0x5df6
	.byte	0
	.uleb128 0x97
	.secrel32	.LASF61
	.byte	0xb
	.byte	0x78
	.byte	0x5
	.ascii "_ZNSt6threadC4Ev\0"
	.long	0x5eb0
	.long	0x5eb6
	.uleb128 0x2
	.long	0x19630
	.byte	0
	.uleb128 0x5b
	.ascii "~thread\0"
	.byte	0xb
	.byte	0x94
	.byte	0x5
	.ascii "_ZNSt6threadD4Ev\0"
	.byte	0x1
	.long	0x5edc
	.long	0x5ee7
	.uleb128 0x2
	.long	0x19630
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x93
	.secrel32	.LASF61
	.byte	0xb
	.byte	0x9a
	.byte	0x5
	.ascii "_ZNSt6threadC4ERKS_\0"
	.byte	0x1
	.long	0x5f0d
	.long	0x5f18
	.uleb128 0x2
	.long	0x19630
	.uleb128 0x1
	.long	0x1963a
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF61
	.byte	0xb
	.byte	0x9c
	.byte	0x5
	.ascii "_ZNSt6threadC4EOS_\0"
	.byte	0x1
	.long	0x5f3c
	.long	0x5f47
	.uleb128 0x2
	.long	0x19630
	.uleb128 0x1
	.long	0x1963f
	.byte	0
	.uleb128 0x94
	.secrel32	.LASF6
	.byte	0xb
	.byte	0x9f
	.byte	0xd
	.ascii "_ZNSt6threadaSERKS_\0"
	.long	0x19644
	.long	0x5f70
	.long	0x5f7b
	.uleb128 0x2
	.long	0x19630
	.uleb128 0x1
	.long	0x1963a
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF6
	.byte	0xb
	.byte	0xa1
	.byte	0xd
	.ascii "_ZNSt6threadaSEOS_\0"
	.long	0x19644
	.long	0x5fa2
	.long	0x5fad
	.uleb128 0x2
	.long	0x19630
	.uleb128 0x1
	.long	0x1963f
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF23
	.byte	0xb
	.byte	0xaa
	.byte	0x5
	.ascii "_ZNSt6thread4swapERS_\0"
	.byte	0x1
	.long	0x5fd4
	.long	0x5fdf
	.uleb128 0x2
	.long	0x19630
	.uleb128 0x1
	.long	0x19644
	.byte	0
	.uleb128 0xa8
	.ascii "joinable\0"
	.byte	0xb
	.byte	0xae
	.ascii "_ZNKSt6thread8joinableEv\0"
	.long	0x184a1
	.long	0x6011
	.long	0x6017
	.uleb128 0x2
	.long	0x19649
	.byte	0
	.uleb128 0x5b
	.ascii "join\0"
	.byte	0xb
	.byte	0xb2
	.byte	0x5
	.ascii "_ZNSt6thread4joinEv\0"
	.byte	0x1
	.long	0x603d
	.long	0x6043
	.uleb128 0x2
	.long	0x19630
	.byte	0
	.uleb128 0x5b
	.ascii "detach\0"
	.byte	0xb
	.byte	0xb5
	.byte	0x5
	.ascii "_ZNSt6thread6detachEv\0"
	.byte	0x1
	.long	0x606d
	.long	0x6073
	.uleb128 0x2
	.long	0x19630
	.byte	0
	.uleb128 0xa8
	.ascii "get_id\0"
	.byte	0xb
	.byte	0xb8
	.ascii "_ZNKSt6thread6get_idEv\0"
	.long	0x5df6
	.long	0x60a1
	.long	0x60a7
	.uleb128 0x2
	.long	0x19649
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF27
	.byte	0xb
	.byte	0xbe
	.byte	0x5
	.ascii "_ZNSt6thread13native_handleEv\0"
	.long	0x5e73
	.long	0x60d9
	.long	0x60df
	.uleb128 0x2
	.long	0x19630
	.byte	0
	.uleb128 0x10b
	.ascii "hardware_concurrency\0"
	.byte	0xb
	.byte	0xc3
	.byte	0x5
	.ascii "_ZNSt6thread20hardware_concurrencyEv\0"
	.long	0x1e6
	.byte	0x1
	.uleb128 0x5a
	.ascii "_M_start_thread\0"
	.byte	0xb
	.byte	0xd6
	.byte	0x5
	.ascii "_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE\0"
	.long	0x6195
	.long	0x61a5
	.uleb128 0x2
	.long	0x19630
	.uleb128 0x1
	.long	0x61a5
	.uleb128 0x1
	.long	0x792
	.byte	0
	.uleb128 0xa7
	.ascii "_State_ptr\0"
	.byte	0xb
	.byte	0x48
	.byte	0xb
	.long	0x64d8
	.byte	0x1
	.uleb128 0xd4
	.ascii "_State\0"
	.long	0x6231
	.uleb128 0x10c
	.ascii "~_State\0"
	.byte	0xb
	.byte	0x45
	.byte	0xf
	.ascii "_ZNSt6thread6_StateD4Ev\0"
	.byte	0x1
	.long	0x61ba
	.long	0x61fa
	.byte	0
	.long	0x6205
	.uleb128 0x2
	.long	0x1ce00
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0xa3
	.ascii "_State\0"
	.ascii "_ZNSt6thread6_StateC4Ev\0"
	.long	0x622a
	.uleb128 0x2
	.long	0x1ce00
	.byte	0
	.byte	0
	.uleb128 0x19
	.ascii "_Invoker<std::tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> > >\0"
	.byte	0x50
	.byte	0xb
	.byte	0xee
	.byte	0xe
	.long	0x62f0
	.uleb128 0x2c
	.secrel32	.LASF62
	.byte	0xb
	.byte	0xf0
	.byte	0x9
	.long	0x126a6
	.byte	0
	.uleb128 0x61
	.secrel32	.LASF4
	.byte	0xb
	.byte	0xff
	.byte	0x2
	.long	0x62a5
	.long	0x62ab
	.uleb128 0x2
	.long	0x1cde7
	.byte	0
	.uleb128 0x98
	.ascii "_M_invoke<0>\0"
	.byte	0xb
	.byte	0xfb
	.byte	0x4
	.long	0x62d8
	.long	0x62e3
	.uleb128 0xd5
	.ascii "_Ind\0"
	.byte	0xf9
	.long	0x62d8
	.uleb128 0xa9
	.long	0xf5
	.byte	0
	.uleb128 0x2
	.long	0x1cde7
	.uleb128 0x1
	.long	0x14d30
	.byte	0
	.uleb128 0x9
	.ascii "_Tuple\0"
	.long	0x126a6
	.byte	0
	.uleb128 0x10d
	.ascii "_State_impl<std::thread::_Invoker<std::tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> > > >\0"
	.byte	0x58
	.byte	0xb
	.byte	0xc8
	.byte	0xe
	.long	0x61ba
	.long	0x646b
	.uleb128 0x45
	.long	0x61ba
	.uleb128 0x5c
	.secrel32	.LASF63
	.long	0x6379
	.long	0x6384
	.uleb128 0x2
	.long	0x1cf13
	.uleb128 0x1
	.long	0x1cf1d
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF63
	.long	0x6391
	.long	0x639c
	.uleb128 0x2
	.long	0x1cf13
	.uleb128 0x1
	.long	0x1cf22
	.byte	0
	.uleb128 0x13
	.ascii "_M_func\0"
	.byte	0xb
	.byte	0xca
	.byte	0xd
	.long	0x6231
	.byte	0x8
	.uleb128 0x10e
	.ascii "_M_run\0"
	.byte	0xb
	.byte	0xd2
	.byte	0x2
	.byte	0x1
	.uleb128 0x2
	.byte	0x10
	.uleb128 0x2
	.long	0x62f0
	.long	0x63c9
	.long	0x63cf
	.uleb128 0x2
	.long	0x1cf13
	.byte	0
	.uleb128 0x10f
	.ascii "~_State_impl\0"
	.byte	0x1
	.long	0x62f0
	.long	0x63eb
	.long	0x63f6
	.uleb128 0x2
	.long	0x1cf13
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x98
	.ascii "_State_impl<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0xb
	.byte	0xcd
	.byte	0x4
	.long	0x6456
	.long	0x6461
	.uleb128 0x22
	.secrel32	.LASF128
	.long	0x6456
	.uleb128 0x10
	.long	0x22e56
	.byte	0
	.uleb128 0x2
	.long	0x1cf13
	.uleb128 0x1
	.long	0x14fc5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF64
	.long	0x6231
	.byte	0
	.uleb128 0x4
	.long	0x62f0
	.uleb128 0x110
	.ascii "thread<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0xb
	.byte	0x7e
	.byte	0x7
	.byte	0x1
	.long	0x64c7
	.uleb128 0x3
	.secrel32	.LASF64
	.long	0x22e56
	.uleb128 0x43
	.secrel32	.LASF128
	.uleb128 0x2
	.long	0x19630
	.uleb128 0x1
	.long	0x14fc5
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x5de9
	.uleb128 0x6a
	.ascii "unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >\0"
	.byte	0xf
	.word	0x10d
	.long	0x6b9f
	.uleb128 0x3e
	.secrel32	.LASF62
	.byte	0xf
	.word	0x113
	.byte	0x21
	.long	0x13f3b
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF65
	.byte	0xf
	.word	0x166
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC4EOS4_\0"
	.long	0x658e
	.long	0x6599
	.uleb128 0x2
	.long	0x1cedc
	.uleb128 0x1
	.long	0x1cee6
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF66
	.byte	0xf
	.word	0x186
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED4Ev\0"
	.byte	0x1
	.long	0x65ec
	.long	0x65f7
	.uleb128 0x2
	.long	0x1cedc
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0xaa
	.secrel32	.LASF6
	.word	0x196
	.byte	0x13
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEaSEOS4_\0"
	.long	0x1ceeb
	.long	0x6650
	.long	0x665b
	.uleb128 0x2
	.long	0x1cedc
	.uleb128 0x1
	.long	0x1cee6
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF6
	.byte	0xf
	.word	0x1b0
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEaSEDn\0"
	.long	0x1ceeb
	.long	0x66b2
	.long	0x66bd
	.uleb128 0x2
	.long	0x1cedc
	.uleb128 0x1
	.long	0x224b
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF67
	.byte	0xf
	.word	0x1bb
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEdeEv\0"
	.long	0x1415a
	.long	0x6714
	.long	0x671a
	.uleb128 0x2
	.long	0x1cef0
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF68
	.byte	0xf
	.word	0x116
	.byte	0xd
	.long	0x129ff
	.byte	0x1
	.uleb128 0x7d
	.ascii "operator->\0"
	.byte	0xf
	.word	0x1c4
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEptEv\0"
	.long	0x671a
	.byte	0x1
	.long	0x6787
	.long	0x678d
	.uleb128 0x2
	.long	0x1cef0
	.byte	0
	.uleb128 0x7d
	.ascii "get\0"
	.byte	0xf
	.word	0x1cd
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE3getEv\0"
	.long	0x671a
	.byte	0x1
	.long	0x67e7
	.long	0x67ed
	.uleb128 0x2
	.long	0x1cef0
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF69
	.byte	0xf
	.word	0x118
	.byte	0xd
	.long	0x127a5
	.byte	0x1
	.uleb128 0x4
	.long	0x67ed
	.uleb128 0x38
	.secrel32	.LASF70
	.byte	0xf
	.word	0x1d3
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv\0"
	.long	0x1cef5
	.long	0x6861
	.long	0x6867
	.uleb128 0x2
	.long	0x1cedc
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF70
	.byte	0xf
	.word	0x1d9
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv\0"
	.long	0x1cefa
	.long	0x68c9
	.long	0x68cf
	.uleb128 0x2
	.long	0x1cef0
	.byte	0
	.uleb128 0xab
	.secrel32	.LASF25
	.word	0x1de
	.ascii "_ZNKSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEcvbEv\0"
	.long	0x184a1
	.long	0x6926
	.long	0x692c
	.uleb128 0x2
	.long	0x1cef0
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF35
	.byte	0xf
	.word	0x1e6
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE7releaseEv\0"
	.long	0x671a
	.long	0x6988
	.long	0x698e
	.uleb128 0x2
	.long	0x1cedc
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF71
	.byte	0xf
	.word	0x1f1
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE5resetEPS1_\0"
	.byte	0x1
	.long	0x69e8
	.long	0x69f3
	.uleb128 0x2
	.long	0x1cedc
	.uleb128 0x1
	.long	0x671a
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF23
	.byte	0xf
	.word	0x1fb
	.byte	0x7
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE4swapERS4_\0"
	.byte	0x1
	.long	0x6a4c
	.long	0x6a57
	.uleb128 0x2
	.long	0x1cedc
	.uleb128 0x1
	.long	0x1ceeb
	.byte	0
	.uleb128 0xac
	.secrel32	.LASF65
	.word	0x202
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC4ERKS4_\0"
	.long	0x6aac
	.long	0x6ab7
	.uleb128 0x2
	.long	0x1cedc
	.uleb128 0x1
	.long	0x1ceff
	.byte	0
	.uleb128 0xad
	.secrel32	.LASF6
	.word	0x203
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEaSERKS4_\0"
	.long	0x1ceeb
	.long	0x6b10
	.long	0x6b1b
	.uleb128 0x2
	.long	0x1cedc
	.uleb128 0x1
	.long	0x1ceff
	.byte	0
	.uleb128 0x111
	.secrel32	.LASF72
	.byte	0xf
	.word	0x135
	.byte	0x2
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC4IS3_vEEPS1_\0"
	.byte	0x1
	.long	0x6b81
	.long	0x6b8c
	.uleb128 0x55
	.secrel32	.LASF73
	.long	0x127a5
	.uleb128 0x2
	.long	0x1cedc
	.uleb128 0x1
	.long	0x671a
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x61ba
	.uleb128 0x57
	.ascii "_Dp\0"
	.long	0x127a5
	.byte	0
	.uleb128 0x4
	.long	0x64d8
	.uleb128 0x19
	.ascii "__hash_base<long long unsigned int, std::thread::id>\0"
	.byte	0x1
	.byte	0x5
	.byte	0x33
	.byte	0xc
	.long	0x6bfa
	.uleb128 0x9
	.ascii "_Result\0"
	.long	0xf5
	.uleb128 0x9
	.ascii "_Arg\0"
	.long	0x5df6
	.byte	0
	.uleb128 0x1d
	.ascii "hash<std::thread::id>\0"
	.byte	0x1
	.byte	0xb
	.word	0x126
	.byte	0xc
	.long	0x6c6d
	.uleb128 0x45
	.long	0x6ba4
	.uleb128 0xb
	.secrel32	.LASF4
	.byte	0xb
	.word	0x12a
	.byte	0x7
	.ascii "_ZNKSt4hashINSt6thread2idEEclERKS1_\0"
	.long	0xe33
	.long	0x6c58
	.long	0x6c63
	.uleb128 0x2
	.long	0x19653
	.uleb128 0x1
	.long	0x1965d
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x5df6
	.byte	0
	.uleb128 0x4
	.long	0x6bfa
	.uleb128 0x5
	.byte	0x31
	.byte	0x3c
	.byte	0xb
	.long	0x18ec9
	.uleb128 0x5
	.byte	0x31
	.byte	0x3d
	.byte	0xb
	.long	0x1b3
	.uleb128 0x5
	.byte	0x31
	.byte	0x3e
	.byte	0xb
	.long	0x18588
	.uleb128 0x5
	.byte	0x31
	.byte	0x40
	.byte	0xb
	.long	0x19662
	.uleb128 0x5
	.byte	0x31
	.byte	0x41
	.byte	0xb
	.long	0x19671
	.uleb128 0x5
	.byte	0x31
	.byte	0x42
	.byte	0xb
	.long	0x19692
	.uleb128 0x5
	.byte	0x31
	.byte	0x43
	.byte	0xb
	.long	0x196b1
	.uleb128 0x5
	.byte	0x31
	.byte	0x44
	.byte	0xb
	.long	0x196ce
	.uleb128 0x5
	.byte	0x31
	.byte	0x45
	.byte	0xb
	.long	0x196e8
	.uleb128 0x5
	.byte	0x31
	.byte	0x46
	.byte	0xb
	.long	0x19706
	.uleb128 0x5
	.byte	0x31
	.byte	0x47
	.byte	0xb
	.long	0x19720
	.uleb128 0x1d
	.ascii "ratio<1, 1000000000>\0"
	.byte	0x1
	.byte	0x32
	.word	0x10a
	.byte	0xc
	.long	0x6d68
	.uleb128 0x6b
	.ascii "num\0"
	.byte	0x32
	.word	0x111
	.byte	0x21
	.ascii "_ZNSt5ratioILx1ELx1000000000EE3numE\0"
	.long	0x1848a
	.byte	0x1
	.uleb128 0xae
	.ascii "den\0"
	.word	0x114
	.ascii "_ZNSt5ratioILx1ELx1000000000EE3denE\0"
	.long	0x1848a
	.long	0x3b9aca00
	.uleb128 0x28
	.secrel32	.LASF74
	.long	0x114
	.byte	0x1
	.uleb128 0xaf
	.secrel32	.LASF75
	.long	0x114
	.long	0x3b9aca00
	.byte	0
	.uleb128 0x71
	.ascii "chrono\0"
	.byte	0xc
	.byte	0x37
	.byte	0xd
	.long	0xa487
	.uleb128 0x1d
	.ascii "duration<long long int, std::ratio<1, 1000000000> >\0"
	.byte	0x8
	.byte	0xc
	.word	0x1bb
	.byte	0xe
	.long	0x759e
	.uleb128 0xb0
	.secrel32	.LASF76
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE6_S_gcdExx\0"
	.long	0x18479
	.long	0x6e0c
	.uleb128 0x1
	.long	0x18479
	.uleb128 0x1
	.long	0x18479
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF77
	.byte	0xc
	.word	0x1f0
	.byte	0xc
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC4Ev\0"
	.long	0x6e55
	.long	0x6e5b
	.uleb128 0x2
	.long	0x1973d
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF77
	.byte	0xc
	.word	0x1f2
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC4ERKS3_\0"
	.long	0x6ea8
	.long	0x6eb3
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF78
	.byte	0xc
	.word	0x204
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEED4Ev\0"
	.long	0x6efc
	.long	0x6f07
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0xb1
	.secrel32	.LASF6
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEaSERKS3_\0"
	.long	0x1974c
	.long	0x6f55
	.long	0x6f60
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.uleb128 0x21
	.ascii "rep\0"
	.byte	0xc
	.word	0x1e7
	.byte	0x8
	.long	0x114
	.uleb128 0x4
	.long	0x6f60
	.uleb128 0x46
	.ascii "count\0"
	.byte	0xc
	.word	0x209
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv\0"
	.long	0x6f60
	.long	0x6fc6
	.long	0x6fcc
	.uleb128 0x2
	.long	0x19751
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF79
	.byte	0xc
	.word	0x20f
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEpsEv\0"
	.long	0x6d77
	.long	0x701a
	.long	0x7020
	.uleb128 0x2
	.long	0x19751
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF80
	.byte	0xc
	.word	0x213
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEngEv\0"
	.long	0x6d77
	.long	0x706e
	.long	0x7074
	.uleb128 0x2
	.long	0x19751
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0xc
	.word	0x217
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEppEv\0"
	.long	0x1974c
	.long	0x70c1
	.long	0x70c7
	.uleb128 0x2
	.long	0x1973d
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0xc
	.word	0x21e
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEppEi\0"
	.long	0x6d77
	.long	0x7114
	.long	0x711f
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0xc
	.word	0x222
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEmmEv\0"
	.long	0x1974c
	.long	0x716c
	.long	0x7172
	.uleb128 0x2
	.long	0x1973d
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0xc
	.word	0x229
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEmmEi\0"
	.long	0x6d77
	.long	0x71bf
	.long	0x71ca
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF42
	.byte	0xc
	.word	0x22d
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEpLERKS3_\0"
	.long	0x1974c
	.long	0x721b
	.long	0x7226
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF43
	.byte	0xc
	.word	0x234
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEmIERKS3_\0"
	.long	0x1974c
	.long	0x7277
	.long	0x7282
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF81
	.byte	0xc
	.word	0x23b
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEmLERKx\0"
	.long	0x1974c
	.long	0x72d1
	.long	0x72dc
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x1
	.long	0x1975b
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF82
	.byte	0xc
	.word	0x242
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEdVERKx\0"
	.long	0x1974c
	.long	0x732b
	.long	0x7336
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x1
	.long	0x1975b
	.byte	0
	.uleb128 0x47
	.ascii "zero\0"
	.byte	0xc
	.word	0x25f
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE4zeroEv\0"
	.long	0x6d77
	.uleb128 0x47
	.ascii "min\0"
	.byte	0xc
	.word	0x263
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE3minEv\0"
	.long	0x6d77
	.uleb128 0x47
	.ascii "max\0"
	.byte	0xc
	.word	0x267
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE3maxEv\0"
	.long	0x6d77
	.uleb128 0x52
	.ascii "__r\0"
	.byte	0xc
	.word	0x26b
	.byte	0x6
	.long	0x6f60
	.byte	0
	.byte	0x3
	.uleb128 0x27
	.secrel32	.LASF83
	.byte	0xc
	.word	0x201
	.byte	0xe
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC4IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE\0"
	.long	0x7495
	.long	0x74a0
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF86
	.byte	0xc
	.word	0x201
	.byte	0xe
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC4IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE\0"
	.long	0x751c
	.long	0x7527
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa6a3
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF87
	.byte	0xc
	.word	0x1f9
	.byte	0x17
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC4IxvEERKT_\0"
	.long	0x7580
	.long	0x758b
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x2
	.long	0x1973d
	.uleb128 0x1
	.long	0x19760
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0x6cca
	.byte	0
	.uleb128 0x4
	.long	0x6d77
	.uleb128 0x1d
	.ascii "duration_values<long long int>\0"
	.byte	0x1
	.byte	0xc
	.word	0x19d
	.byte	0xe
	.long	0x7674
	.uleb128 0x47
	.ascii "zero\0"
	.byte	0xc
	.word	0x1a0
	.byte	0x2
	.ascii "_ZNSt6chrono15duration_valuesIxE4zeroEv\0"
	.long	0x114
	.uleb128 0x47
	.ascii "max\0"
	.byte	0xc
	.word	0x1a4
	.byte	0x2
	.ascii "_ZNSt6chrono15duration_valuesIxE3maxEv\0"
	.long	0x114
	.uleb128 0x47
	.ascii "min\0"
	.byte	0xc
	.word	0x1a8
	.byte	0x2
	.ascii "_ZNSt6chrono15duration_valuesIxE3minEv\0"
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.byte	0
	.uleb128 0xd6
	.ascii "_V2\0"
	.byte	0xc
	.word	0x44e
	.byte	0x16
	.long	0x77ec
	.uleb128 0x112
	.ascii "system_clock\0"
	.byte	0x1
	.byte	0xc
	.word	0x456
	.byte	0xc
	.uleb128 0x6b
	.ascii "is_steady\0"
	.byte	0xc
	.word	0x461
	.byte	0x1d
	.ascii "_ZNSt6chrono3_V212system_clock9is_steadyE\0"
	.long	0x184a9
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF90
	.byte	0xc
	.word	0x45b
	.byte	0x3b
	.long	0x77ec
	.uleb128 0x4
	.long	0x76d4
	.uleb128 0x47
	.ascii "now\0"
	.byte	0xc
	.word	0x464
	.byte	0x7
	.ascii "_ZNSt6chrono3_V212system_clock3nowEv\0"
	.long	0x76d4
	.uleb128 0x25
	.ascii "to_time_t\0"
	.byte	0xc
	.word	0x468
	.byte	0x7
	.ascii "_ZNSt6chrono3_V212system_clock9to_time_tERKNS_10time_pointIS1_NS_8durationIxSt5ratioILx1ELx1000000000EEEEEE\0"
	.long	0x1b3
	.long	0x77a1
	.uleb128 0x1
	.long	0x19765
	.byte	0
	.uleb128 0xb2
	.ascii "from_time_t\0"
	.byte	0xc
	.word	0x46f
	.ascii "_ZNSt6chrono3_V212system_clock11from_time_tEx\0"
	.long	0x76d4
	.uleb128 0x1
	.long	0x1b3
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "time_point<std::chrono::_V2::system_clock, std::chrono::duration<long long int, std::ratio<1, 1000000000> > >\0"
	.byte	0x8
	.byte	0xc
	.word	0x358
	.byte	0xe
	.long	0x7e05
	.uleb128 0x27
	.secrel32	.LASF90
	.byte	0xc
	.word	0x362
	.byte	0xc
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEC4Ev\0"
	.long	0x78d5
	.long	0x78db
	.uleb128 0x2
	.long	0x1976a
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF90
	.byte	0xc
	.word	0x365
	.byte	0x15
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEC4ERKS6_\0"
	.long	0x7950
	.long	0x795b
	.uleb128 0x2
	.long	0x1976a
	.uleb128 0x1
	.long	0x1976f
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF77
	.byte	0xc
	.word	0x35e
	.byte	0x14
	.long	0x6d77
	.uleb128 0x4
	.long	0x795b
	.uleb128 0x46
	.ascii "time_since_epoch\0"
	.byte	0xc
	.word	0x372
	.byte	0x2
	.ascii "_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv\0"
	.long	0x795b
	.long	0x7a00
	.long	0x7a06
	.uleb128 0x2
	.long	0x19774
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0xc
	.word	0x377
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEppEv\0"
	.long	0x1977e
	.long	0x7a7b
	.long	0x7a81
	.uleb128 0x2
	.long	0x1976a
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0xc
	.word	0x37e
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEppEi\0"
	.long	0x77ec
	.long	0x7af6
	.long	0x7b01
	.uleb128 0x2
	.long	0x1976a
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0xc
	.word	0x382
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEmmEv\0"
	.long	0x1977e
	.long	0x7b76
	.long	0x7b7c
	.uleb128 0x2
	.long	0x1976a
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0xc
	.word	0x389
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEmmEi\0"
	.long	0x77ec
	.long	0x7bf1
	.long	0x7bfc
	.uleb128 0x2
	.long	0x1976a
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF42
	.byte	0xc
	.word	0x38f
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEpLERKS6_\0"
	.long	0x1977e
	.long	0x7c75
	.long	0x7c80
	.uleb128 0x2
	.long	0x1976a
	.uleb128 0x1
	.long	0x1976f
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF43
	.byte	0xc
	.word	0x396
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEEmIERKS6_\0"
	.long	0x1977e
	.long	0x7cf9
	.long	0x7d04
	.uleb128 0x2
	.long	0x1976a
	.uleb128 0x1
	.long	0x1976f
	.byte	0
	.uleb128 0x47
	.ascii "min\0"
	.byte	0xc
	.word	0x39e
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE3minEv\0"
	.long	0x77ec
	.uleb128 0x47
	.ascii "max\0"
	.byte	0xc
	.word	0x3a2
	.byte	0x2
	.ascii "_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE3maxEv\0"
	.long	0x77ec
	.uleb128 0x52
	.ascii "__d\0"
	.byte	0xc
	.word	0x3a6
	.byte	0xb
	.long	0x795b
	.byte	0
	.byte	0x3
	.uleb128 0x3
	.secrel32	.LASF91
	.long	0x7682
	.uleb128 0x9
	.ascii "_Dur\0"
	.long	0x6d77
	.byte	0
	.uleb128 0x4
	.long	0x77ec
	.uleb128 0x1d
	.ascii "duration<long long int, std::ratio<1, 1> >\0"
	.byte	0x8
	.byte	0xc
	.word	0x1bb
	.byte	0xe
	.long	0x8469
	.uleb128 0xb0
	.secrel32	.LASF76
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEE6_S_gcdExx\0"
	.long	0x18479
	.long	0x7e8d
	.uleb128 0x1
	.long	0x18479
	.uleb128 0x1
	.long	0x18479
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF77
	.byte	0xc
	.word	0x1f0
	.byte	0xc
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC4Ev\0"
	.long	0x7ecd
	.long	0x7ed3
	.uleb128 0x2
	.long	0x19783
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF77
	.byte	0xc
	.word	0x1f2
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC4ERKS3_\0"
	.long	0x7f17
	.long	0x7f22
	.uleb128 0x2
	.long	0x19783
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF78
	.byte	0xc
	.word	0x204
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEED4Ev\0"
	.long	0x7f62
	.long	0x7f6d
	.uleb128 0x2
	.long	0x19783
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0xb1
	.secrel32	.LASF6
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEaSERKS3_\0"
	.long	0x19792
	.long	0x7fb2
	.long	0x7fbd
	.uleb128 0x2
	.long	0x19783
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0x21
	.ascii "rep\0"
	.byte	0xc
	.word	0x1e7
	.byte	0x8
	.long	0x114
	.uleb128 0x4
	.long	0x7fbd
	.uleb128 0x46
	.ascii "count\0"
	.byte	0xc
	.word	0x209
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEE5countEv\0"
	.long	0x7fbd
	.long	0x801a
	.long	0x8020
	.uleb128 0x2
	.long	0x19797
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF79
	.byte	0xc
	.word	0x20f
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEEpsEv\0"
	.long	0x7e0a
	.long	0x8065
	.long	0x806b
	.uleb128 0x2
	.long	0x19797
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF80
	.byte	0xc
	.word	0x213
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1EEEngEv\0"
	.long	0x7e0a
	.long	0x80b0
	.long	0x80b6
	.uleb128 0x2
	.long	0x19797
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0xc
	.word	0x217
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEppEv\0"
	.long	0x19792
	.long	0x80fa
	.long	0x8100
	.uleb128 0x2
	.long	0x19783
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0xc
	.word	0x21e
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEppEi\0"
	.long	0x7e0a
	.long	0x8144
	.long	0x814f
	.uleb128 0x2
	.long	0x19783
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0xc
	.word	0x222
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEmmEv\0"
	.long	0x19792
	.long	0x8193
	.long	0x8199
	.uleb128 0x2
	.long	0x19783
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0xc
	.word	0x229
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEmmEi\0"
	.long	0x7e0a
	.long	0x81dd
	.long	0x81e8
	.uleb128 0x2
	.long	0x19783
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF42
	.byte	0xc
	.word	0x22d
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEpLERKS3_\0"
	.long	0x19792
	.long	0x8230
	.long	0x823b
	.uleb128 0x2
	.long	0x19783
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF43
	.byte	0xc
	.word	0x234
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEmIERKS3_\0"
	.long	0x19792
	.long	0x8283
	.long	0x828e
	.uleb128 0x2
	.long	0x19783
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF81
	.byte	0xc
	.word	0x23b
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEmLERKx\0"
	.long	0x19792
	.long	0x82d4
	.long	0x82df
	.uleb128 0x2
	.long	0x19783
	.uleb128 0x1
	.long	0x197a1
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF82
	.byte	0xc
	.word	0x242
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEdVERKx\0"
	.long	0x19792
	.long	0x8325
	.long	0x8330
	.uleb128 0x2
	.long	0x19783
	.uleb128 0x1
	.long	0x197a1
	.byte	0
	.uleb128 0x47
	.ascii "zero\0"
	.byte	0xc
	.word	0x25f
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEE4zeroEv\0"
	.long	0x7e0a
	.uleb128 0x47
	.ascii "min\0"
	.byte	0xc
	.word	0x263
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEE3minEv\0"
	.long	0x7e0a
	.uleb128 0x47
	.ascii "max\0"
	.byte	0xc
	.word	0x267
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEE3maxEv\0"
	.long	0x7e0a
	.uleb128 0x52
	.ascii "__r\0"
	.byte	0xc
	.word	0x26b
	.byte	0x6
	.long	0x7fbd
	.byte	0
	.byte	0x3
	.uleb128 0x4b
	.secrel32	.LASF87
	.byte	0xc
	.word	0x1f9
	.byte	0x17
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC4IxvEERKT_\0"
	.long	0x844b
	.long	0x8456
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x2
	.long	0x19783
	.uleb128 0x1
	.long	0x19760
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x55
	.secrel32	.LASF89
	.long	0xa627
	.byte	0
	.uleb128 0x4
	.long	0x7e0a
	.uleb128 0x87
	.secrel32	.LASF86
	.byte	0x8
	.byte	0xc
	.word	0x1bb
	.byte	0xe
	.long	0x8bca
	.uleb128 0xb0
	.secrel32	.LASF76
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE6_S_gcdExx\0"
	.long	0x18479
	.long	0x84ce
	.uleb128 0x1
	.long	0x18479
	.uleb128 0x1
	.long	0x18479
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF77
	.byte	0xc
	.word	0x1f0
	.byte	0xc
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC4Ev\0"
	.long	0x8511
	.long	0x8517
	.uleb128 0x2
	.long	0x197a6
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF77
	.byte	0xc
	.word	0x1f2
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC4ERKS3_\0"
	.long	0x855e
	.long	0x8569
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF78
	.byte	0xc
	.word	0x204
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEED4Ev\0"
	.long	0x85ac
	.long	0x85b7
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0xb1
	.secrel32	.LASF6
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEaSERKS3_\0"
	.long	0x197b5
	.long	0x85ff
	.long	0x860a
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0x21
	.ascii "rep\0"
	.byte	0xc
	.word	0x1e7
	.byte	0x8
	.long	0x114
	.uleb128 0x4
	.long	0x860a
	.uleb128 0x46
	.ascii "count\0"
	.byte	0xc
	.word	0x209
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEE5countEv\0"
	.long	0x860a
	.long	0x866a
	.long	0x8670
	.uleb128 0x2
	.long	0x197ba
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF79
	.byte	0xc
	.word	0x20f
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEEpsEv\0"
	.long	0x846e
	.long	0x86b8
	.long	0x86be
	.uleb128 0x2
	.long	0x197ba
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF80
	.byte	0xc
	.word	0x213
	.byte	0x2
	.ascii "_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000EEEngEv\0"
	.long	0x846e
	.long	0x8706
	.long	0x870c
	.uleb128 0x2
	.long	0x197ba
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0xc
	.word	0x217
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEppEv\0"
	.long	0x197b5
	.long	0x8753
	.long	0x8759
	.uleb128 0x2
	.long	0x197a6
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF40
	.byte	0xc
	.word	0x21e
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEppEi\0"
	.long	0x846e
	.long	0x87a0
	.long	0x87ab
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0xc
	.word	0x222
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEmmEv\0"
	.long	0x197b5
	.long	0x87f2
	.long	0x87f8
	.uleb128 0x2
	.long	0x197a6
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF41
	.byte	0xc
	.word	0x229
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEmmEi\0"
	.long	0x846e
	.long	0x883f
	.long	0x884a
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF42
	.byte	0xc
	.word	0x22d
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEpLERKS3_\0"
	.long	0x197b5
	.long	0x8895
	.long	0x88a0
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF43
	.byte	0xc
	.word	0x234
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEmIERKS3_\0"
	.long	0x197b5
	.long	0x88eb
	.long	0x88f6
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF81
	.byte	0xc
	.word	0x23b
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEmLERKx\0"
	.long	0x197b5
	.long	0x893f
	.long	0x894a
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x1
	.long	0x197c4
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF82
	.byte	0xc
	.word	0x242
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEdVERKx\0"
	.long	0x197b5
	.long	0x8993
	.long	0x899e
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x1
	.long	0x197c4
	.byte	0
	.uleb128 0x47
	.ascii "zero\0"
	.byte	0xc
	.word	0x25f
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE4zeroEv\0"
	.long	0x846e
	.uleb128 0x47
	.ascii "min\0"
	.byte	0xc
	.word	0x263
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE3minEv\0"
	.long	0x846e
	.uleb128 0x47
	.ascii "max\0"
	.byte	0xc
	.word	0x267
	.byte	0x2
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEE3maxEv\0"
	.long	0x846e
	.uleb128 0x52
	.ascii "__r\0"
	.byte	0xc
	.word	0x26b
	.byte	0x6
	.long	0x860a
	.byte	0
	.byte	0x3
	.uleb128 0x27
	.secrel32	.LASF83
	.byte	0xc
	.word	0x201
	.byte	0xe
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC4IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE\0"
	.long	0x8ae5
	.long	0x8af0
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF87
	.byte	0xc
	.word	0x1f9
	.byte	0x17
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC4IxvEERKT_\0"
	.long	0x8b43
	.long	0x8b4e
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x1
	.long	0x19760
	.byte	0
	.uleb128 0xc7
	.ascii "duration<int>\0"
	.byte	0xc
	.word	0x1f9
	.byte	0x17
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC4IivEERKT_\0"
	.long	0x8bac
	.long	0x8bb7
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x188
	.uleb128 0x2
	.long	0x197a6
	.uleb128 0x1
	.long	0x19023
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa6a3
	.byte	0
	.uleb128 0x4
	.long	0x846e
	.uleb128 0x113
	.byte	0xc
	.word	0x529
	.byte	0x1f
	.long	0xa73a
	.uleb128 0x114
	.secrel32	.LASF7
	.byte	0xc
	.word	0x181
	.byte	0xf
	.uleb128 0x19
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1> >, std::ratio<1, 1000000000>, long long int, true, false>\0"
	.byte	0x1
	.byte	0xc
	.byte	0xcc
	.byte	0xe
	.long	0x8d4e
	.uleb128 0x3b
	.secrel32	.LASF92
	.byte	0xc
	.byte	0xd0
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000000000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE\0"
	.long	0x7e0a
	.long	0x8d1e
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0x6cca
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x7e0a
	.uleb128 0x9
	.ascii "_CF\0"
	.long	0x6cca
	.uleb128 0x9
	.ascii "_CR\0"
	.long	0x114
	.uleb128 0x28
	.secrel32	.LASF94
	.long	0x184a1
	.byte	0x1
	.uleb128 0x28
	.secrel32	.LASF95
	.long	0x184a1
	.byte	0
	.byte	0
	.uleb128 0x19
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, std::ratio<1000000, 1>, long long int, false, true>\0"
	.byte	0x1
	.byte	0xc
	.byte	0xd9
	.byte	0xe
	.long	0x8ed2
	.uleb128 0x3b
	.secrel32	.LASF96
	.byte	0xc
	.byte	0xdd
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1000EEEES4_RKNS1_IT_T0_EE\0"
	.long	0x6d77
	.long	0x8ea2
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa6a3
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x6d77
	.uleb128 0x9
	.ascii "_CF\0"
	.long	0xa80e
	.uleb128 0x9
	.ascii "_CR\0"
	.long	0x114
	.uleb128 0x28
	.secrel32	.LASF94
	.long	0x184a1
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF95
	.long	0x184a1
	.byte	0x1
	.byte	0
	.uleb128 0x19
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, std::ratio<1, 1>, long long int, true, true>\0"
	.byte	0x1
	.byte	0xc
	.byte	0xc0
	.byte	0xe
	.long	0x903c
	.uleb128 0x3b
	.secrel32	.LASF92
	.byte	0xc
	.byte	0xc4
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EExLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE\0"
	.long	0x6d77
	.long	0x900c
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0x6cca
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x6d77
	.uleb128 0x9
	.ascii "_CF\0"
	.long	0xa627
	.uleb128 0x9
	.ascii "_CR\0"
	.long	0x114
	.uleb128 0x28
	.secrel32	.LASF94
	.long	0x184a1
	.byte	0x1
	.uleb128 0x28
	.secrel32	.LASF95
	.long	0x184a1
	.byte	0x1
	.byte	0
	.uleb128 0x19
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, std::ratio<1000000000, 1>, long long int, false, true>\0"
	.byte	0x1
	.byte	0xc
	.byte	0xd9
	.byte	0xe
	.long	0x91c3
	.uleb128 0x3b
	.secrel32	.LASF97
	.byte	0xc
	.byte	0xdd
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000000000EEEES2_ILx1000000000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE\0"
	.long	0x6d77
	.long	0x9193
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa627
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x6d77
	.uleb128 0x9
	.ascii "_CF\0"
	.long	0x120cf
	.uleb128 0x9
	.ascii "_CR\0"
	.long	0x114
	.uleb128 0x28
	.secrel32	.LASF94
	.long	0x184a1
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF95
	.long	0x184a1
	.byte	0x1
	.byte	0
	.uleb128 0x19
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1> >, std::ratio<1, 1000>, long long int, true, false>\0"
	.byte	0x1
	.byte	0xc
	.byte	0xcc
	.byte	0xe
	.long	0x9322
	.uleb128 0x3b
	.secrel32	.LASF96
	.byte	0xc
	.byte	0xd0
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1EEEES2_ILx1ELx1000EExLb1ELb0EE6__castIxS5_EES4_RKNS1_IT_T0_EE\0"
	.long	0x7e0a
	.long	0x92f2
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa6a3
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x7e0a
	.uleb128 0x9
	.ascii "_CF\0"
	.long	0xa6a3
	.uleb128 0x9
	.ascii "_CR\0"
	.long	0x114
	.uleb128 0x28
	.secrel32	.LASF94
	.long	0x184a1
	.byte	0x1
	.uleb128 0x28
	.secrel32	.LASF95
	.long	0x184a1
	.byte	0
	.byte	0
	.uleb128 0x19
	.ascii "__duration_cast_impl<std::chrono::duration<long long int, std::ratio<1, 1000> >, std::ratio<1000, 1>, long long int, false, true>\0"
	.byte	0x1
	.byte	0xc
	.byte	0xd9
	.byte	0xe
	.long	0x9491
	.uleb128 0x3b
	.secrel32	.LASF97
	.byte	0xc
	.byte	0xdd
	.byte	0x4
	.ascii "_ZNSt6chrono20__duration_cast_implINS_8durationIxSt5ratioILx1ELx1000EEEES2_ILx1000ELx1EExLb0ELb1EE6__castIxS2_ILx1ELx1EEEES4_RKNS1_IT_T0_EE\0"
	.long	0x846e
	.long	0x9461
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa627
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x846e
	.uleb128 0x9
	.ascii "_CF\0"
	.long	0xa917
	.uleb128 0x9
	.ascii "_CR\0"
	.long	0x114
	.uleb128 0x28
	.secrel32	.LASF94
	.long	0x184a1
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF95
	.long	0x184a1
	.byte	0x1
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF98
	.byte	0xc
	.byte	0xf0
	.byte	0xd
	.long	0x1476d
	.uleb128 0x29
	.ascii "duration_cast<std::chrono::duration<long long int, std::ratio<1, 1000> >, long long int, std::ratio<1> >\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE\0"
	.long	0x9491
	.long	0x95cd
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x846e
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa627
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0x25
	.ascii "operator-<long long int, std::ratio<1, 1000>, long long int, std::ratio<1, 1000000000> >\0"
	.byte	0xc
	.word	0x284
	.byte	0x7
	.ascii "_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1000000000EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_\0"
	.long	0xea9b
	.long	0x96e6
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0xa6a3
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0x6cca
	.uleb128 0x1
	.long	0x197b0
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.uleb128 0x25
	.ascii "operator-<long long int, std::ratio<1, 1000000000>, long long int, std::ratio<1> >\0"
	.byte	0xc
	.word	0x284
	.byte	0x7
	.ascii "_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_\0"
	.long	0xaa1e
	.long	0x97f6
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x6cca
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.uleb128 0x1
	.long	0x19747
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0x25
	.ascii "operator-<long long int, std::ratio<1, 1000>, long long int, std::ratio<1> >\0"
	.byte	0xc
	.word	0x284
	.byte	0x7
	.ascii "_ZNSt6chronomiIxSt5ratioILx1ELx1000EExS1_ILx1ELx1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_\0"
	.long	0x12296
	.long	0x98fa
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0xa6a3
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.uleb128 0x1
	.long	0x197b0
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF98
	.byte	0xc
	.byte	0xf0
	.byte	0xd
	.long	0xa610
	.uleb128 0x29
	.ascii "duration_cast<std::chrono::duration<long long int>, long long int, std::ratio<1, 1000> >\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE\0"
	.long	0x98fa
	.long	0x9a26
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x7e0a
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa6a3
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0x25
	.ascii "operator-<long long int, std::ratio<1, 1000000000>, long long int, std::ratio<1, 1000000000> >\0"
	.byte	0xc
	.word	0x284
	.byte	0x7
	.ascii "_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_\0"
	.long	0xa59e
	.long	0x9b38
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x6cca
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0x6cca
	.uleb128 0x1
	.long	0x19747
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF98
	.byte	0xc
	.byte	0xf0
	.byte	0xd
	.long	0xa900
	.uleb128 0x29
	.ascii "duration_cast<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, long long int, std::ratio<1> >\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE\0"
	.long	0x9b38
	.long	0x9c80
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x6d77
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa627
	.uleb128 0x1
	.long	0x1978d
	.byte	0
	.uleb128 0x25
	.ascii "operator-<std::chrono::_V2::system_clock, std::chrono::duration<long long int, std::ratio<1, 1000000000> >, std::chrono::duration<long long int, std::ratio<1, 1000000000> > >\0"
	.byte	0xc
	.word	0x402
	.byte	0x7
	.ascii "_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE\0"
	.long	0xa59e
	.long	0x9e04
	.uleb128 0x3
	.secrel32	.LASF91
	.long	0x7682
	.uleb128 0x9
	.ascii "_Dur1\0"
	.long	0x6d77
	.uleb128 0x9
	.ascii "_Dur2\0"
	.long	0x6d77
	.uleb128 0x1
	.long	0x197c9
	.uleb128 0x1
	.long	0x197c9
	.byte	0
	.uleb128 0x29
	.ascii "duration_cast<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, long long int, std::ratio<1, 1000000000> >\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE\0"
	.long	0x9b38
	.long	0x9f42
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x6d77
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0x6cca
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.uleb128 0x25
	.ascii "operator<=><long long int, std::ratio<1, 1000>, long long int, std::ratio<1, 1000> >\0"
	.byte	0xc
	.word	0x302
	.byte	0x7
	.ascii "_ZNSt6chronossIxSt5ratioILx1ELx1000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE\0"
	.long	0x11e1
	.long	0xa026
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0xa6a3
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa6a3
	.uleb128 0x1
	.long	0x197b0
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0x29
	.ascii "duration_cast<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, long long int, std::ratio<1, 1000> >\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1000000000EEEExS2_ILx1ELx1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE\0"
	.long	0x9b38
	.long	0xa16b
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x6d77
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa6a3
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0x29
	.ascii "duration_cast<std::chrono::duration<long long int>, long long int, std::ratio<1, 1000000000> >\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x7
	.ascii "_ZNSt6chrono13duration_castINS_8durationIxSt5ratioILx1ELx1EEEExS2_ILx1ELx1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE\0"
	.long	0x98fa
	.long	0xa297
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x7e0a
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0x6cca
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.uleb128 0x25
	.ascii "operator<=><long long int, std::ratio<1, 1000000000>, long long int, std::ratio<1, 1000> >\0"
	.byte	0xc
	.word	0x302
	.byte	0x7
	.ascii "_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS1_ILx1ELx1000EEEEDaRKNS_8durationIT_T0_EERKNS4_IT1_T2_EE\0"
	.long	0x11e1
	.long	0xa394
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x6cca
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa6a3
	.uleb128 0x1
	.long	0x19747
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0xb2
	.ascii "operator<=><long long int, std::ratio<1, 1000000000>, long long int, std::ratio<1, 1000000000> >\0"
	.byte	0xc
	.word	0x302
	.ascii "_ZNSt6chronossIxSt5ratioILx1ELx1000000000EExS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE\0"
	.long	0x11e1
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x6cca
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0x6cca
	.uleb128 0x1
	.long	0x19747
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "__success_type<long long int>\0"
	.byte	0x1
	.byte	0x25
	.word	0x106
	.byte	0xc
	.long	0xa4b9
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x114
	.byte	0
	.uleb128 0x1d
	.ascii "common_type<long long int, long long int>\0"
	.byte	0x1
	.byte	0x25
	.word	0x91b
	.byte	0xc
	.long	0xa504
	.uleb128 0x45
	.long	0xa487
	.uleb128 0xb3
	.ascii "_Tp\0"
	.uleb128 0x10
	.long	0x114
	.uleb128 0x10
	.long	0x114
	.byte	0
	.byte	0
	.uleb128 0x19
	.ascii "common_type<std::chrono::duration<long long int, std::ratio<1, 1000000000> >, std::chrono::duration<long long int, std::ratio<1, 1000000000> > >\0"
	.byte	0x1
	.byte	0xc
	.byte	0x70
	.byte	0xc
	.long	0xa5bc
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0xc
	.byte	0x73
	.byte	0xd
	.long	0x6d77
	.uleb128 0xb3
	.ascii "_Tp\0"
	.uleb128 0x10
	.long	0x6d77
	.uleb128 0x10
	.long	0x6d77
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "enable_if<true, std::chrono::duration<long long int, std::ratio<1, 1> > >\0"
	.byte	0x1
	.byte	0x25
	.word	0x8b9
	.byte	0xc
	.long	0xa627
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x8ba
	.byte	0x13
	.long	0x7e0a
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x7e0a
	.byte	0
	.uleb128 0x1d
	.ascii "ratio<1, 1>\0"
	.byte	0x1
	.byte	0x32
	.word	0x10a
	.byte	0xc
	.long	0xa6a3
	.uleb128 0x6b
	.ascii "num\0"
	.byte	0x32
	.word	0x111
	.byte	0x21
	.ascii "_ZNSt5ratioILx1ELx1EE3numE\0"
	.long	0x1848a
	.byte	0x1
	.uleb128 0x6b
	.ascii "den\0"
	.byte	0x32
	.word	0x114
	.byte	0x21
	.ascii "_ZNSt5ratioILx1ELx1EE3denE\0"
	.long	0x1848a
	.byte	0x1
	.uleb128 0x28
	.secrel32	.LASF74
	.long	0x114
	.byte	0x1
	.uleb128 0x48
	.secrel32	.LASF75
	.long	0x114
	.byte	0
	.uleb128 0x1d
	.ascii "ratio<1, 1000>\0"
	.byte	0x1
	.byte	0x32
	.word	0x10a
	.byte	0xc
	.long	0xa727
	.uleb128 0x6b
	.ascii "num\0"
	.byte	0x32
	.word	0x111
	.byte	0x21
	.ascii "_ZNSt5ratioILx1ELx1000EE3numE\0"
	.long	0x1848a
	.byte	0x1
	.uleb128 0xd7
	.ascii "den\0"
	.word	0x114
	.ascii "_ZNSt5ratioILx1ELx1000EE3denE\0"
	.long	0x1848a
	.uleb128 0x28
	.secrel32	.LASF74
	.long	0x114
	.byte	0x1
	.uleb128 0xd8
	.secrel32	.LASF75
	.long	0x114
	.byte	0
	.uleb128 0xd6
	.ascii "literals\0"
	.byte	0x34
	.word	0x2fa
	.byte	0x14
	.long	0xa751
	.uleb128 0xa5
	.ascii "chrono_literals\0"
	.byte	0xc
	.word	0x4cd
	.byte	0x14
	.byte	0
	.uleb128 0x72
	.ascii "filesystem\0"
	.byte	0xc
	.byte	0x34
	.byte	0xd
	.uleb128 0x19
	.ascii "__duration_common_type<std::common_type<long long int, long long int>, std::ratio<1, 1000000000>, std::ratio<1, 1000>, void>\0"
	.byte	0x1
	.byte	0xc
	.byte	0x52
	.byte	0xc
	.long	0xa80e
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0xc
	.byte	0x5d
	.byte	0xd
	.long	0x6d77
	.uleb128 0x9
	.ascii "_CT\0"
	.long	0xa4b9
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x6cca
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa6a3
	.byte	0
	.uleb128 0x1d
	.ascii "ratio<1000000, 1>\0"
	.byte	0x1
	.byte	0x32
	.word	0x10a
	.byte	0xc
	.long	0xa8a3
	.uleb128 0xae
	.ascii "num\0"
	.word	0x111
	.ascii "_ZNSt5ratioILx1000000ELx1EE3numE\0"
	.long	0x1848a
	.long	0xf4240
	.uleb128 0x6b
	.ascii "den\0"
	.byte	0x32
	.word	0x114
	.byte	0x21
	.ascii "_ZNSt5ratioILx1000000ELx1EE3denE\0"
	.long	0x1848a
	.byte	0x1
	.uleb128 0xaf
	.secrel32	.LASF74
	.long	0x114
	.long	0xf4240
	.uleb128 0x28
	.secrel32	.LASF75
	.long	0x114
	.byte	0x1
	.byte	0
	.uleb128 0x1d
	.ascii "enable_if<true, std::chrono::duration<long long int, std::ratio<1, 1000000000> > >\0"
	.byte	0x1
	.byte	0x25
	.word	0x8b9
	.byte	0xc
	.long	0xa917
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x8ba
	.byte	0x13
	.long	0x6d77
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x6d77
	.byte	0
	.uleb128 0x1d
	.ascii "ratio<1000, 1>\0"
	.byte	0x1
	.byte	0x32
	.word	0x10a
	.byte	0xc
	.long	0xa99b
	.uleb128 0xd7
	.ascii "num\0"
	.word	0x111
	.ascii "_ZNSt5ratioILx1000ELx1EE3numE\0"
	.long	0x1848a
	.uleb128 0x6b
	.ascii "den\0"
	.byte	0x32
	.word	0x114
	.byte	0x21
	.ascii "_ZNSt5ratioILx1000ELx1EE3denE\0"
	.long	0x1848a
	.byte	0x1
	.uleb128 0xd8
	.secrel32	.LASF74
	.long	0x114
	.uleb128 0x28
	.secrel32	.LASF75
	.long	0x114
	.byte	0x1
	.byte	0
	.uleb128 0x19
	.ascii "__duration_common_type<std::common_type<long long int, long long int>, std::ratio<1, 1000000000>, std::ratio<1, 1>, void>\0"
	.byte	0x1
	.byte	0xc
	.byte	0x52
	.byte	0xc
	.long	0xaa46
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0xc
	.byte	0x5d
	.byte	0xd
	.long	0x6d77
	.uleb128 0x9
	.ascii "_CT\0"
	.long	0xa4b9
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x6cca
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.byte	0
	.uleb128 0x72
	.ascii "__parse_int\0"
	.byte	0x35
	.byte	0x2e
	.byte	0xb
	.uleb128 0xca
	.ascii "__barrier_phase_t\0"
	.byte	0x1
	.long	0x49e
	.byte	0x11
	.byte	0x49
	.uleb128 0x4
	.long	0xaa56
	.uleb128 0x1d
	.ascii "__atomic_ref<std::__barrier_phase_t, false, false>\0"
	.byte	0x8
	.byte	0x9
	.word	0x54d
	.byte	0xc
	.long	0xb1b7
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x9
	.word	0x55f
	.byte	0x15
	.ascii "_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEaSERKS1_\0"
	.long	0x1bd15
	.long	0xab03
	.long	0xab0e
	.uleb128 0x2
	.long	0x1bd1a
	.uleb128 0x1
	.long	0x1bd24
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF101
	.byte	0x9
	.word	0x562
	.byte	0x7
	.ascii "_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC4ERS0_\0"
	.long	0xab59
	.long	0xab64
	.uleb128 0x2
	.long	0x1bd1a
	.uleb128 0x1
	.long	0x1bd29
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF101
	.byte	0x9
	.word	0x565
	.byte	0x7
	.ascii "_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC4ERKS1_\0"
	.long	0xabb0
	.long	0xabbb
	.uleb128 0x2
	.long	0x1bd1a
	.uleb128 0x1
	.long	0x1bd24
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF6
	.byte	0x9
	.word	0x568
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEaSES0_\0"
	.long	0xaa56
	.long	0xac0a
	.long	0xac15
	.uleb128 0x2
	.long	0x1bd2e
	.uleb128 0x1
	.long	0xaa56
	.byte	0
	.uleb128 0x46
	.ascii "operator std::__barrier_phase_t\0"
	.byte	0x9
	.word	0x56e
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEcvS0_Ev\0"
	.long	0xaa56
	.long	0xac81
	.long	0xac87
	.uleb128 0x2
	.long	0x1bd2e
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF47
	.byte	0x9
	.word	0x571
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE12is_lock_freeEv\0"
	.long	0x184a1
	.long	0xace0
	.long	0xace6
	.uleb128 0x2
	.long	0x1bd2e
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF48
	.byte	0x9
	.word	0x575
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order\0"
	.long	0xad45
	.long	0xad55
	.uleb128 0x2
	.long	0x1bd2e
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF49
	.byte	0x9
	.word	0x579
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order\0"
	.long	0xaa56
	.long	0xadb4
	.long	0xadbf
	.uleb128 0x2
	.long	0x1bd2e
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF50
	.byte	0x9
	.word	0x57d
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE8exchangeES0_St12memory_order\0"
	.long	0xaa56
	.long	0xae25
	.long	0xae35
	.uleb128 0x2
	.long	0x1bd2e
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x582
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE21compare_exchange_weakERS0_S0_St12memory_orderS3_\0"
	.long	0x184a1
	.long	0xaeb0
	.long	0xaeca
	.uleb128 0x2
	.long	0x1bd2e
	.uleb128 0x1
	.long	0x1bd29
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x58c
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_orderS3_\0"
	.long	0x184a1
	.long	0xaf47
	.long	0xaf61
	.uleb128 0x2
	.long	0x1bd2e
	.uleb128 0x1
	.long	0x1bd29
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x596
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE21compare_exchange_weakERS0_S0_St12memory_order\0"
	.long	0x184a1
	.long	0xafd9
	.long	0xafee
	.uleb128 0x2
	.long	0x1bd2e
	.uleb128 0x1
	.long	0x1bd29
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x59f
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS0_S0_St12memory_order\0"
	.long	0x184a1
	.long	0xb068
	.long	0xb07d
	.uleb128 0x2
	.long	0x1bd2e
	.uleb128 0x1
	.long	0x1bd29
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF29
	.byte	0x9
	.word	0x5a9
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE4waitES0_St12memory_order\0"
	.long	0xb0db
	.long	0xb0eb
	.uleb128 0x2
	.long	0x1bd2e
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF31
	.byte	0x9
	.word	0x5af
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE10notify_oneEv\0"
	.long	0xb13e
	.long	0xb144
	.uleb128 0x2
	.long	0x1bd2e
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF32
	.byte	0x9
	.word	0x5b5
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refISt17__barrier_phase_tLb0ELb0EE10notify_allEv\0"
	.long	0xb197
	.long	0xb19d
	.uleb128 0x2
	.long	0x1bd2e
	.byte	0
	.uleb128 0xb4
	.secrel32	.LASF102
	.byte	0x9
	.word	0x5bc
	.byte	0xc
	.long	0x1bd38
	.byte	0
	.byte	0x3
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.byte	0
	.uleb128 0x4
	.long	0xaa76
	.uleb128 0x19
	.ascii "__array_traits<std::__barrier_phase_t, 64>\0"
	.byte	0x1
	.byte	0x17
	.byte	0x35
	.byte	0xc
	.long	0xb2d0
	.uleb128 0x29
	.ascii "_S_ref\0"
	.byte	0x17
	.byte	0x3c
	.byte	0x7
	.ascii "_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_refERA64_KS0_y\0"
	.long	0x1bd29
	.long	0xb252
	.uleb128 0x1
	.long	0x1bd3d
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0xf
	.ascii "_Type\0"
	.byte	0x17
	.byte	0x37
	.byte	0x13
	.long	0x1bd42
	.uleb128 0x29
	.ascii "_S_ptr\0"
	.byte	0x17
	.byte	0x40
	.byte	0x7
	.ascii "_ZNSt14__array_traitsISt17__barrier_phase_tLy64EE6_S_ptrERA64_KS0_\0"
	.long	0x1bd38
	.long	0xb2bc
	.uleb128 0x1
	.long	0x1bd3d
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x1b
	.ascii "_Nm\0"
	.long	0xf5
	.byte	0x40
	.byte	0
	.uleb128 0x19
	.ascii "array<std::__barrier_phase_t, 64>\0"
	.byte	0x40
	.byte	0x17
	.byte	0x63
	.byte	0xc
	.long	0xbc00
	.uleb128 0x13
	.ascii "_M_elems\0"
	.byte	0x17
	.byte	0x73
	.byte	0x38
	.long	0xb252
	.byte	0
	.uleb128 0x5a
	.ascii "fill\0"
	.byte	0x17
	.byte	0x79
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE4fillERKS0_\0"
	.long	0xb351
	.long	0xb35c
	.uleb128 0x2
	.long	0x1bd53
	.uleb128 0x1
	.long	0x1bd5d
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF3
	.byte	0x17
	.byte	0x65
	.byte	0x21
	.long	0xaa56
	.uleb128 0x4
	.long	0xb35c
	.uleb128 0x2b
	.secrel32	.LASF23
	.byte	0x17
	.byte	0x7d
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE4swapERS1_\0"
	.long	0xb3af
	.long	0xb3ba
	.uleb128 0x2
	.long	0x1bd53
	.uleb128 0x1
	.long	0x1bd62
	.byte	0
	.uleb128 0xf
	.ascii "iterator\0"
	.byte	0x17
	.byte	0x6a
	.byte	0x2c
	.long	0x1bd67
	.uleb128 0x2e
	.ascii "begin\0"
	.byte	0x17
	.byte	0x84
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE5beginEv\0"
	.long	0xb3ba
	.long	0xb411
	.long	0xb417
	.uleb128 0x2
	.long	0x1bd53
	.byte	0
	.uleb128 0xf
	.ascii "const_iterator\0"
	.byte	0x17
	.byte	0x6b
	.byte	0x29
	.long	0x1bd6c
	.uleb128 0x2e
	.ascii "begin\0"
	.byte	0x17
	.byte	0x89
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE5beginEv\0"
	.long	0xb417
	.long	0xb475
	.long	0xb47b
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0x2e
	.ascii "end\0"
	.byte	0x17
	.byte	0x8e
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE3endEv\0"
	.long	0xb3ba
	.long	0xb4bd
	.long	0xb4c3
	.uleb128 0x2
	.long	0x1bd53
	.byte	0
	.uleb128 0x2e
	.ascii "end\0"
	.byte	0x17
	.byte	0x93
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE3endEv\0"
	.long	0xb417
	.long	0xb506
	.long	0xb50c
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0xf
	.ascii "reverse_iterator\0"
	.byte	0x17
	.byte	0x6e
	.byte	0x35
	.long	0xbc05
	.uleb128 0x2e
	.ascii "rbegin\0"
	.byte	0x17
	.byte	0x98
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE6rbeginEv\0"
	.long	0xb50c
	.long	0xb56d
	.long	0xb573
	.uleb128 0x2
	.long	0x1bd53
	.byte	0
	.uleb128 0xf
	.ascii "const_reverse_iterator\0"
	.byte	0x17
	.byte	0x6f
	.byte	0x37
	.long	0xbc31
	.uleb128 0x2e
	.ascii "rbegin\0"
	.byte	0x17
	.byte	0x9d
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE6rbeginEv\0"
	.long	0xb573
	.long	0xb5db
	.long	0xb5e1
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0x2e
	.ascii "rend\0"
	.byte	0x17
	.byte	0xa2
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE4rendEv\0"
	.long	0xb50c
	.long	0xb625
	.long	0xb62b
	.uleb128 0x2
	.long	0x1bd53
	.byte	0
	.uleb128 0x2e
	.ascii "rend\0"
	.byte	0x17
	.byte	0xa7
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE4rendEv\0"
	.long	0xb573
	.long	0xb670
	.long	0xb676
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0x2e
	.ascii "cbegin\0"
	.byte	0x17
	.byte	0xac
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE6cbeginEv\0"
	.long	0xb417
	.long	0xb6bf
	.long	0xb6c5
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0x2e
	.ascii "cend\0"
	.byte	0x17
	.byte	0xb1
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE4cendEv\0"
	.long	0xb417
	.long	0xb70a
	.long	0xb710
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0x2e
	.ascii "crbegin\0"
	.byte	0x17
	.byte	0xb6
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE7crbeginEv\0"
	.long	0xb573
	.long	0xb75b
	.long	0xb761
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0x2e
	.ascii "crend\0"
	.byte	0x17
	.byte	0xbb
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE5crendEv\0"
	.long	0xb573
	.long	0xb7a8
	.long	0xb7ae
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0xf
	.ascii "size_type\0"
	.byte	0x17
	.byte	0x6c
	.byte	0x35
	.long	0xe33
	.uleb128 0x2e
	.ascii "size\0"
	.byte	0x17
	.byte	0xc1
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE4sizeEv\0"
	.long	0xb7ae
	.long	0xb805
	.long	0xb80b
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0x2e
	.ascii "max_size\0"
	.byte	0x17
	.byte	0xc5
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE8max_sizeEv\0"
	.long	0xb7ae
	.long	0xb858
	.long	0xb85e
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0x2e
	.ascii "empty\0"
	.byte	0x17
	.byte	0xc9
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE5emptyEv\0"
	.long	0x184a1
	.long	0xb8a5
	.long	0xb8ab
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0xf
	.ascii "reference\0"
	.byte	0x17
	.byte	0x68
	.byte	0x34
	.long	0x1bd76
	.uleb128 0x30
	.secrel32	.LASF103
	.byte	0x17
	.byte	0xce
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EEixEy\0"
	.long	0xb8ab
	.long	0xb8fd
	.long	0xb908
	.uleb128 0x2
	.long	0x1bd53
	.uleb128 0x1
	.long	0xb7ae
	.byte	0
	.uleb128 0xf
	.ascii "const_reference\0"
	.byte	0x17
	.byte	0x69
	.byte	0x34
	.long	0x1bd5d
	.uleb128 0x30
	.secrel32	.LASF103
	.byte	0x17
	.byte	0xd6
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EEixEy\0"
	.long	0xb908
	.long	0xb961
	.long	0xb96c
	.uleb128 0x2
	.long	0x1bd71
	.uleb128 0x1
	.long	0xb7ae
	.byte	0
	.uleb128 0x2e
	.ascii "at\0"
	.byte	0x17
	.byte	0xdf
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE2atEy\0"
	.long	0xb8ab
	.long	0xb9ac
	.long	0xb9b7
	.uleb128 0x2
	.long	0x1bd53
	.uleb128 0x1
	.long	0xb7ae
	.byte	0
	.uleb128 0x2e
	.ascii "at\0"
	.byte	0x17
	.byte	0xe9
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE2atEy\0"
	.long	0xb908
	.long	0xb9f8
	.long	0xba03
	.uleb128 0x2
	.long	0x1bd71
	.uleb128 0x1
	.long	0xb7ae
	.byte	0
	.uleb128 0x2e
	.ascii "front\0"
	.byte	0x17
	.byte	0xf6
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE5frontEv\0"
	.long	0xb8ab
	.long	0xba49
	.long	0xba4f
	.uleb128 0x2
	.long	0x1bd53
	.byte	0
	.uleb128 0x2e
	.ascii "front\0"
	.byte	0x17
	.byte	0xfe
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE5frontEv\0"
	.long	0xb908
	.long	0xba96
	.long	0xba9c
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0x46
	.ascii "back\0"
	.byte	0x17
	.word	0x108
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE4backEv\0"
	.long	0xb8ab
	.long	0xbae1
	.long	0xbae7
	.uleb128 0x2
	.long	0x1bd53
	.byte	0
	.uleb128 0x46
	.ascii "back\0"
	.byte	0x17
	.word	0x110
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE4backEv\0"
	.long	0xb908
	.long	0xbb2d
	.long	0xbb33
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF68
	.byte	0x17
	.byte	0x66
	.byte	0x23
	.long	0x1bd67
	.uleb128 0x46
	.ascii "data\0"
	.byte	0x17
	.word	0x11b
	.byte	0x7
	.ascii "_ZNSt5arrayISt17__barrier_phase_tLy64EE4dataEv\0"
	.long	0xbb33
	.long	0xbb84
	.long	0xbb8a
	.uleb128 0x2
	.long	0x1bd53
	.byte	0
	.uleb128 0xf
	.ascii "const_pointer\0"
	.byte	0x17
	.byte	0x67
	.byte	0x37
	.long	0x1bd6c
	.uleb128 0x46
	.ascii "data\0"
	.byte	0x17
	.word	0x120
	.byte	0x7
	.ascii "_ZNKSt5arrayISt17__barrier_phase_tLy64EE4dataEv\0"
	.long	0xbb8a
	.long	0xbbe6
	.long	0xbbec
	.uleb128 0x2
	.long	0x1bd71
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x1b
	.ascii "_Nm\0"
	.long	0xf5
	.byte	0x40
	.byte	0
	.uleb128 0x4
	.long	0xb2d0
	.uleb128 0xa6
	.ascii "reverse_iterator<std::__barrier_phase_t*>\0"
	.uleb128 0xa6
	.ascii "reverse_iterator<const std::__barrier_phase_t*>\0"
	.uleb128 0x1d
	.ascii "__atomic_ref<const std::__barrier_phase_t, false, false>\0"
	.byte	0x8
	.byte	0x9
	.word	0x54d
	.byte	0xc
	.long	0xc3c0
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x9
	.word	0x55f
	.byte	0x15
	.ascii "_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEaSERKS2_\0"
	.long	0x1bd7b
	.long	0xbcf7
	.long	0xbd02
	.uleb128 0x2
	.long	0x1bd80
	.uleb128 0x1
	.long	0x1bd8a
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF101
	.byte	0x9
	.word	0x562
	.byte	0x7
	.ascii "_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC4ERS1_\0"
	.long	0xbd4e
	.long	0xbd59
	.uleb128 0x2
	.long	0x1bd80
	.uleb128 0x1
	.long	0x1bd8f
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF101
	.byte	0x9
	.word	0x565
	.byte	0x7
	.ascii "_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC4ERKS2_\0"
	.long	0xbda6
	.long	0xbdb1
	.uleb128 0x2
	.long	0x1bd80
	.uleb128 0x1
	.long	0x1bd8a
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF6
	.byte	0x9
	.word	0x568
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEaSES0_\0"
	.long	0xaa71
	.long	0xbe01
	.long	0xbe0c
	.uleb128 0x2
	.long	0x1bd94
	.uleb128 0x1
	.long	0xaa56
	.byte	0
	.uleb128 0x46
	.ascii "operator const std::__barrier_phase_t\0"
	.byte	0x9
	.word	0x56e
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEcvS1_Ev\0"
	.long	0xaa71
	.long	0xbe7f
	.long	0xbe85
	.uleb128 0x2
	.long	0x1bd94
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF47
	.byte	0x9
	.word	0x571
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE12is_lock_freeEv\0"
	.long	0x184a1
	.long	0xbedf
	.long	0xbee5
	.uleb128 0x2
	.long	0x1bd94
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF48
	.byte	0x9
	.word	0x575
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE5storeES0_St12memory_order\0"
	.long	0xbf45
	.long	0xbf55
	.uleb128 0x2
	.long	0x1bd94
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF49
	.byte	0x9
	.word	0x579
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4loadESt12memory_order\0"
	.long	0xaa71
	.long	0xbfb5
	.long	0xbfc0
	.uleb128 0x2
	.long	0x1bd94
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF50
	.byte	0x9
	.word	0x57d
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE8exchangeES0_St12memory_order\0"
	.long	0xaa71
	.long	0xc027
	.long	0xc037
	.uleb128 0x2
	.long	0x1bd94
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x582
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE21compare_exchange_weakERS1_S0_St12memory_orderS4_\0"
	.long	0x184a1
	.long	0xc0b3
	.long	0xc0cd
	.uleb128 0x2
	.long	0x1bd94
	.uleb128 0x1
	.long	0x1bd8f
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x58c
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS1_S0_St12memory_orderS4_\0"
	.long	0x184a1
	.long	0xc14b
	.long	0xc165
	.uleb128 0x2
	.long	0x1bd94
	.uleb128 0x1
	.long	0x1bd8f
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF51
	.byte	0x9
	.word	0x596
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE21compare_exchange_weakERS1_S0_St12memory_order\0"
	.long	0x184a1
	.long	0xc1de
	.long	0xc1f3
	.uleb128 0x2
	.long	0x1bd94
	.uleb128 0x1
	.long	0x1bd8f
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF52
	.byte	0x9
	.word	0x59f
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE23compare_exchange_strongERS1_S0_St12memory_order\0"
	.long	0x184a1
	.long	0xc26e
	.long	0xc283
	.uleb128 0x2
	.long	0x1bd94
	.uleb128 0x1
	.long	0x1bd8f
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF29
	.byte	0x9
	.word	0x5a9
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE4waitES0_St12memory_order\0"
	.long	0xc2e2
	.long	0xc2f2
	.uleb128 0x2
	.long	0x1bd94
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF31
	.byte	0x9
	.word	0x5af
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE10notify_oneEv\0"
	.long	0xc346
	.long	0xc34c
	.uleb128 0x2
	.long	0x1bd94
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF32
	.byte	0x9
	.word	0x5b5
	.byte	0x7
	.ascii "_ZNKSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EE10notify_allEv\0"
	.long	0xc3a0
	.long	0xc3a6
	.uleb128 0x2
	.long	0x1bd94
	.byte	0
	.uleb128 0xb4
	.secrel32	.LASF102
	.byte	0x9
	.word	0x5bc
	.byte	0xc
	.long	0x1bd9e
	.byte	0
	.byte	0x3
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa71
	.byte	0
	.uleb128 0x4
	.long	0xbc63
	.uleb128 0x19
	.ascii "default_delete<MATRIX::MaterialAttributes []>\0"
	.byte	0x1
	.byte	0xf
	.byte	0x68
	.byte	0xc
	.long	0xc51f
	.uleb128 0x3a
	.secrel32	.LASF104
	.byte	0xf
	.byte	0x6c
	.byte	0x11
	.ascii "_ZNSt14default_deleteIA_N6MATRIX18MaterialAttributesEEC4Ev\0"
	.long	0xc447
	.long	0xc44d
	.uleb128 0x2
	.long	0x1c741
	.byte	0
	.uleb128 0x5a
	.ascii "operator()<MATRIX::MaterialAttributes>\0"
	.byte	0xf
	.byte	0x80
	.byte	0x2
	.ascii "_ZNKSt14default_deleteIA_N6MATRIX18MaterialAttributesEEclIS1_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS2_E5valueEvE4typeEPS7_\0"
	.long	0xc50a
	.long	0xc515
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x1c002
	.uleb128 0x2
	.long	0x210d1
	.uleb128 0x1
	.long	0x1c746
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cd69
	.byte	0
	.uleb128 0x4
	.long	0xc3c5
	.uleb128 0x1d
	.ascii "remove_reference<std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x1
	.byte	0x25
	.word	0x65c
	.byte	0xc
	.long	0xc58b
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x65d
	.byte	0x15
	.long	0xc3c5
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xc3c5
	.byte	0
	.uleb128 0x5f
	.ascii "__uniq_ptr_impl<MATRIX::MaterialAttributes, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x8
	.byte	0xf
	.byte	0x8c
	.byte	0xb
	.long	0xcb9e
	.uleb128 0x19
	.ascii "_Ptr<MATRIX::MaterialAttributes, std::default_delete<MATRIX::MaterialAttributes []>, void>\0"
	.byte	0x1
	.byte	0xf
	.byte	0x8f
	.byte	0x9
	.long	0xc678
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0xf
	.byte	0x91
	.byte	0xa
	.long	0x1c746
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x1c002
	.uleb128 0x9
	.ascii "_Ep\0"
	.long	0xc3c5
	.byte	0
	.uleb128 0x97
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xa6
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC4Ev\0"
	.long	0xc6dc
	.long	0xc6e2
	.uleb128 0x2
	.long	0x1c7eb
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xa8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC4EPS1_\0"
	.byte	0x1
	.long	0xc749
	.long	0xc754
	.uleb128 0x2
	.long	0x1c7eb
	.uleb128 0x1
	.long	0xc754
	.byte	0
	.uleb128 0x75
	.secrel32	.LASF68
	.byte	0xf
	.byte	0xa0
	.byte	0xd
	.long	0xc659
	.uleb128 0x4
	.long	0xc754
	.uleb128 0x31
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xb0
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC4EOS5_\0"
	.byte	0x1
	.long	0xc7cc
	.long	0xc7d7
	.uleb128 0x2
	.long	0x1c7eb
	.uleb128 0x1
	.long	0x1c7f5
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF6
	.byte	0xf
	.byte	0xb5
	.byte	0x18
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEaSEOS5_\0"
	.long	0x1c7fa
	.long	0xc841
	.long	0xc84c
	.uleb128 0x2
	.long	0x1c7eb
	.uleb128 0x1
	.long	0x1c7f5
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF102
	.byte	0xf
	.byte	0xbd
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv\0"
	.long	0x1c7ff
	.long	0xc8b8
	.long	0xc8be
	.uleb128 0x2
	.long	0x1c7eb
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF102
	.byte	0xf
	.byte	0xbf
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE6_M_ptrEv\0"
	.long	0xc754
	.long	0xc92b
	.long	0xc931
	.uleb128 0x2
	.long	0x1c804
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF106
	.byte	0xf
	.byte	0xc1
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv\0"
	.long	0x1c769
	.long	0xc9a2
	.long	0xc9a8
	.uleb128 0x2
	.long	0x1c7eb
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF106
	.byte	0xf
	.byte	0xc3
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE10_M_deleterEv\0"
	.long	0x1c75a
	.long	0xca1a
	.long	0xca20
	.uleb128 0x2
	.long	0x1c804
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF71
	.byte	0xf
	.byte	0xc6
	.byte	0xc
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE5resetEPS1_\0"
	.byte	0x1
	.long	0xca8b
	.long	0xca96
	.uleb128 0x2
	.long	0x1c7eb
	.uleb128 0x1
	.long	0xc754
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF35
	.byte	0xf
	.byte	0xcf
	.byte	0xf
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE7releaseEv\0"
	.long	0xc754
	.long	0xcb03
	.long	0xcb09
	.uleb128 0x2
	.long	0x1c7eb
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF23
	.byte	0xf
	.byte	0xd8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EE4swapERS5_\0"
	.byte	0x1
	.long	0xcb73
	.long	0xcb7e
	.uleb128 0x2
	.long	0x1c7eb
	.uleb128 0x1
	.long	0x1c7fa
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF62
	.byte	0xf
	.byte	0xe0
	.byte	0x1b
	.long	0xdba4
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1c002
	.uleb128 0x9
	.ascii "_Dp\0"
	.long	0xc3c5
	.byte	0
	.uleb128 0x4
	.long	0xc58b
	.uleb128 0x19
	.ascii "_Head_base<1, std::default_delete<MATRIX::MaterialAttributes []>, true>\0"
	.byte	0x1
	.byte	0x16
	.byte	0x4e
	.byte	0xc
	.long	0xcf4e
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x50
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC4Ev\0"
	.long	0xcc57
	.long	0xcc5d
	.uleb128 0x2
	.long	0x1c750
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x53
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC4ERKS4_\0"
	.long	0xccc4
	.long	0xcccf
	.uleb128 0x2
	.long	0x1c750
	.uleb128 0x1
	.long	0x1c75a
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x56
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC4ERKS5_\0"
	.long	0xcd36
	.long	0xcd41
	.uleb128 0x2
	.long	0x1c750
	.uleb128 0x1
	.long	0x1c75f
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x57
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC4EOS5_\0"
	.long	0xcda7
	.long	0xcdb2
	.uleb128 0x2
	.long	0x1c750
	.uleb128 0x1
	.long	0x1c764
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x5e
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0xce38
	.long	0xce48
	.uleb128 0x2
	.long	0x1c750
	.uleb128 0x1
	.long	0x20db
	.uleb128 0x1
	.long	0x212f
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0x7c
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERS5_\0"
	.long	0x1c769
	.long	0xceba
	.uleb128 0x1
	.long	0x1c76e
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0x7f
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EE7_M_headERKS5_\0"
	.long	0x1c75a
	.long	0xcf2d
	.uleb128 0x1
	.long	0x1c75f
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF109
	.byte	0x16
	.byte	0x81
	.byte	0x27
	.long	0xc3c5
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0xc3c5
	.byte	0
	.uleb128 0x4
	.long	0xcba3
	.uleb128 0x1d
	.ascii "_Tuple_impl<1, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x1
	.byte	0x16
	.word	0x1a0
	.byte	0xc
	.long	0xd34c
	.uleb128 0x44
	.long	0xcba3
	.byte	0x3
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x1a8
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERS5_\0"
	.long	0x1c769
	.long	0xd018
	.uleb128 0x1
	.long	0x1c773
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x1ab
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_headERKS5_\0"
	.long	0x1c75a
	.long	0xd08a
	.uleb128 0x1
	.long	0x1c778
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1ae
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC4Ev\0"
	.long	0xd0ed
	.long	0xd0f3
	.uleb128 0x2
	.long	0x1c77d
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1b2
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC4ERKS4_\0"
	.long	0xd15a
	.long	0xd165
	.uleb128 0x2
	.long	0x1c77d
	.uleb128 0x1
	.long	0x1c75a
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1bc
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC4ERKS5_\0"
	.long	0xd1cc
	.long	0xd1d7
	.uleb128 0x2
	.long	0x1c77d
	.uleb128 0x1
	.long	0x1c778
	.byte	0
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x16
	.word	0x1c0
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEaSERKS5_\0"
	.long	0x1c773
	.long	0xd242
	.long	0xd24d
	.uleb128 0x2
	.long	0x1c77d
	.uleb128 0x1
	.long	0x1c778
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1c6
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC4EOS5_\0"
	.long	0xd2b3
	.long	0xd2be
	.uleb128 0x2
	.long	0x1c77d
	.uleb128 0x1
	.long	0x1c787
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF113
	.byte	0x16
	.word	0x220
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEE7_M_swapERS5_\0"
	.byte	0x2
	.long	0xd32b
	.long	0xd336
	.uleb128 0x2
	.long	0x1c77d
	.uleb128 0x1
	.long	0x1c773
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0x1
	.uleb128 0x41
	.secrel32	.LASF114
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0xcf53
	.uleb128 0x19
	.ascii "_Head_base<0, MATRIX::MaterialAttributes*, false>\0"
	.byte	0x8
	.byte	0x16
	.byte	0xbb
	.byte	0xc
	.long	0xd653
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xbd
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC4Ev\0"
	.long	0xd3da
	.long	0xd3e0
	.uleb128 0x2
	.long	0x1c78c
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc0
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC4ERKS2_\0"
	.long	0xd432
	.long	0xd43d
	.uleb128 0x2
	.long	0x1c78c
	.uleb128 0x1
	.long	0x1c796
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc3
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC4ERKS3_\0"
	.long	0xd48f
	.long	0xd49a
	.uleb128 0x2
	.long	0x1c78c
	.uleb128 0x1
	.long	0x1c79b
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc4
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC4EOS3_\0"
	.long	0xd4eb
	.long	0xd4f6
	.uleb128 0x2
	.long	0x1c78c
	.uleb128 0x1
	.long	0x1c7a0
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xcb
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0xd567
	.long	0xd577
	.uleb128 0x2
	.long	0x1c78c
	.uleb128 0x1
	.long	0x20db
	.uleb128 0x1
	.long	0x212f
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0xe9
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERS3_\0"
	.long	0x1c7a5
	.long	0xd5d4
	.uleb128 0x1
	.long	0x1c7aa
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0xec
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EE7_M_headERKS3_\0"
	.long	0x1c796
	.long	0xd632
	.uleb128 0x1
	.long	0x1c79b
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF109
	.byte	0x16
	.byte	0xee
	.byte	0xd
	.long	0x1c746
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1c746
	.byte	0
	.uleb128 0x4
	.long	0xd351
	.uleb128 0x1d
	.ascii "_Tuple_impl<0, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x8
	.byte	0x16
	.word	0x102
	.byte	0xc
	.long	0xdb9f
	.uleb128 0x45
	.long	0xcf53
	.uleb128 0x44
	.long	0xd351
	.byte	0x3
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x10c
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERS6_\0"
	.long	0x1c7a5
	.long	0xd743
	.uleb128 0x1
	.long	0x1c7af
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x10f
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_headERKS6_\0"
	.long	0x1c796
	.long	0xd7b9
	.uleb128 0x1
	.long	0x1c7b4
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF115
	.byte	0x16
	.word	0x108
	.byte	0x2f
	.long	0xcf53
	.uleb128 0x4
	.long	0xd7b9
	.uleb128 0x2f
	.secrel32	.LASF116
	.word	0x112
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_tailERS6_\0"
	.long	0x1c7b9
	.long	0xd840
	.uleb128 0x1
	.long	0x1c7af
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF116
	.word	0x115
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_tailERKS6_\0"
	.long	0x1c7be
	.long	0xd8b6
	.uleb128 0x1
	.long	0x1c7b4
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF112
	.byte	0x16
	.word	0x117
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4Ev\0"
	.long	0xd91d
	.long	0xd923
	.uleb128 0x2
	.long	0x1c7c3
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF112
	.byte	0x16
	.word	0x11b
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4ERKS2_RKS5_\0"
	.long	0xd993
	.long	0xd9a3
	.uleb128 0x2
	.long	0x1c7c3
	.uleb128 0x1
	.long	0x1c796
	.uleb128 0x1
	.long	0x1c75a
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF112
	.byte	0x16
	.word	0x127
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4ERKS6_\0"
	.long	0xda0e
	.long	0xda19
	.uleb128 0x2
	.long	0x1c7c3
	.uleb128 0x1
	.long	0x1c7b4
	.byte	0
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x16
	.word	0x12b
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEaSERKS6_\0"
	.long	0x1c7af
	.long	0xda88
	.long	0xda93
	.uleb128 0x2
	.long	0x1c7c3
	.uleb128 0x1
	.long	0x1c7b4
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF112
	.byte	0x16
	.word	0x12d
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4EOS6_\0"
	.long	0xdafd
	.long	0xdb08
	.uleb128 0x2
	.long	0x1c7c3
	.uleb128 0x1
	.long	0x1c7cd
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF113
	.byte	0x16
	.word	0x196
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE7_M_swapERS6_\0"
	.byte	0x2
	.long	0xdb79
	.long	0xdb84
	.uleb128 0x2
	.long	0x1c7c3
	.uleb128 0x1
	.long	0x1c7af
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF114
	.uleb128 0x10
	.long	0x1c746
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0xd658
	.uleb128 0x6a
	.ascii "tuple<MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x16
	.word	0x3d5
	.long	0xdf17
	.uleb128 0x44
	.long	0xd658
	.byte	0x1
	.uleb128 0xb5
	.secrel32	.LASF117
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE31__nothrow_default_constructibleEv\0"
	.long	0x184a1
	.uleb128 0x67
	.secrel32	.LASF118
	.byte	0x16
	.word	0x440
	.byte	0x11
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4ERKS6_\0"
	.long	0xdcde
	.long	0xdce9
	.uleb128 0x2
	.long	0x1c7d2
	.uleb128 0x1
	.long	0x1c7dc
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF118
	.byte	0x16
	.word	0x442
	.byte	0x11
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4EOS6_\0"
	.long	0xdd48
	.long	0xdd53
	.uleb128 0x2
	.long	0x1c7d2
	.uleb128 0x1
	.long	0x1c7e1
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF6
	.byte	0x16
	.word	0x4f3
	.byte	0x7
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEaSERKS6_\0"
	.long	0x1c7e6
	.long	0xddb7
	.long	0xddc2
	.uleb128 0x2
	.long	0x1c7d2
	.uleb128 0x1
	.long	0xdf1c
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF6
	.byte	0x16
	.word	0x4fe
	.byte	0x7
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEaSEOS6_\0"
	.long	0x1c7e6
	.long	0xde25
	.long	0xde30
	.uleb128 0x2
	.long	0x1c7d2
	.uleb128 0x1
	.long	0xdf28
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF23
	.byte	0x16
	.word	0x533
	.byte	0x7
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEE4swapERS6_\0"
	.byte	0x1
	.long	0xde93
	.long	0xde9e
	.uleb128 0x2
	.long	0x1c7d2
	.uleb128 0x1
	.long	0x1c7e6
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF119
	.byte	0x16
	.word	0x419
	.byte	0x2
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC4ILb1ELb1EEEv\0"
	.byte	0x1
	.long	0xdf0e
	.long	0xdf14
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0x2
	.long	0x1c7d2
	.byte	0
	.uleb128 0x89
	.byte	0
	.uleb128 0x4
	.long	0xdba4
	.uleb128 0x1a
	.secrel32	.LASF121
	.byte	0x25
	.byte	0x77
	.byte	0xb
	.long	0x29eb
	.uleb128 0x1a
	.secrel32	.LASF121
	.byte	0x25
	.byte	0x77
	.byte	0xb
	.long	0x29f7
	.uleb128 0x19
	.ascii "__uniq_ptr_data<MATRIX::MaterialAttributes, std::default_delete<MATRIX::MaterialAttributes []>, true, true>\0"
	.byte	0x8
	.byte	0xf
	.byte	0xe7
	.byte	0xc
	.long	0xe1d3
	.uleb128 0x45
	.long	0xc58b
	.uleb128 0x3a
	.secrel32	.LASF122
	.byte	0xf
	.byte	0xea
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEC4EOS5_\0"
	.long	0xe01c
	.long	0xe027
	.uleb128 0x2
	.long	0x1c80e
	.uleb128 0x1
	.long	0x1c818
	.byte	0
	.uleb128 0xb6
	.secrel32	.LASF6
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EEaSEOS5_\0"
	.long	0x1c81d
	.long	0xe097
	.long	0xe0a2
	.uleb128 0x2
	.long	0x1c80e
	.uleb128 0x1
	.long	0x1c818
	.byte	0
	.uleb128 0x99
	.secrel32	.LASF122
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI4St15__uniq_ptr_implIS1_S4_EEv\0"
	.long	0xe127
	.long	0xe12d
	.uleb128 0x2
	.long	0x1c80e
	.byte	0
	.uleb128 0x99
	.secrel32	.LASF122
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI4St15__uniq_ptr_implIS1_S4_EEPS1_\0"
	.long	0xe1b5
	.long	0xe1c0
	.uleb128 0x2
	.long	0x1c80e
	.uleb128 0x1
	.long	0xc754
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1c002
	.uleb128 0x9
	.ascii "_Dp\0"
	.long	0xc3c5
	.byte	0
	.uleb128 0x1d
	.ascii "__add_lvalue_reference_helper<MATRIX::MaterialAttributes, true>\0"
	.byte	0x1
	.byte	0x25
	.word	0x66c
	.byte	0xc
	.long	0xe234
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x66d
	.byte	0x16
	.long	0x1c822
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1c002
	.byte	0
	.uleb128 0x6a
	.ascii "unique_ptr<MATRIX::MaterialAttributes [], std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0xf
	.word	0x20f
	.long	0xea10
	.uleb128 0x3e
	.secrel32	.LASF62
	.byte	0xf
	.word	0x215
	.byte	0x21
	.long	0xdf34
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF65
	.byte	0xf
	.word	0x283
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC4EOS5_\0"
	.long	0xe30b
	.long	0xe316
	.uleb128 0x2
	.long	0x1c827
	.uleb128 0x1
	.long	0x1c831
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF66
	.byte	0xf
	.word	0x299
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED4Ev\0"
	.byte	0x1
	.long	0xe376
	.long	0xe381
	.uleb128 0x2
	.long	0x1c827
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0xaa
	.secrel32	.LASF6
	.word	0x2a8
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEOS5_\0"
	.long	0x1c836
	.long	0xe3e7
	.long	0xe3f2
	.uleb128 0x2
	.long	0x1c827
	.uleb128 0x1
	.long	0x1c831
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF6
	.byte	0xf
	.word	0x2c2
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSEDn\0"
	.long	0x1c836
	.long	0xe456
	.long	0xe461
	.uleb128 0x2
	.long	0x1c827
	.uleb128 0x1
	.long	0x224b
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF103
	.byte	0xf
	.word	0x2cd
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEixEy\0"
	.long	0xe21d
	.long	0xe4c5
	.long	0xe4d0
	.uleb128 0x2
	.long	0x1c83b
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF68
	.byte	0xf
	.word	0x221
	.byte	0xd
	.long	0xc754
	.byte	0x1
	.uleb128 0x7d
	.ascii "get\0"
	.byte	0xf
	.word	0x2d6
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE3getEv\0"
	.long	0xe4d0
	.byte	0x1
	.long	0xe545
	.long	0xe54b
	.uleb128 0x2
	.long	0x1c83b
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF69
	.byte	0xf
	.word	0x223
	.byte	0xd
	.long	0xc3c5
	.byte	0x1
	.uleb128 0x4
	.long	0xe54b
	.uleb128 0x38
	.secrel32	.LASF70
	.byte	0xf
	.word	0x2dc
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv\0"
	.long	0x1c845
	.long	0xe5cc
	.long	0xe5d2
	.uleb128 0x2
	.long	0x1c827
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF70
	.byte	0xf
	.word	0x2e2
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE11get_deleterEv\0"
	.long	0x1c84a
	.long	0xe641
	.long	0xe647
	.uleb128 0x2
	.long	0x1c83b
	.byte	0
	.uleb128 0xab
	.secrel32	.LASF25
	.word	0x2e7
	.ascii "_ZNKSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEcvbEv\0"
	.long	0x184a1
	.long	0xe6ab
	.long	0xe6b1
	.uleb128 0x2
	.long	0x1c83b
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF35
	.byte	0xf
	.word	0x2ef
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE7releaseEv\0"
	.long	0xe4d0
	.long	0xe71a
	.long	0xe720
	.uleb128 0x2
	.long	0x1c827
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF71
	.byte	0xf
	.word	0x30a
	.byte	0xc
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE5resetEDn\0"
	.byte	0x1
	.long	0xe785
	.long	0xe790
	.uleb128 0x2
	.long	0x1c827
	.uleb128 0x1
	.long	0x224b
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF23
	.byte	0xf
	.word	0x310
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EE4swapERS5_\0"
	.byte	0x1
	.long	0xe7f6
	.long	0xe801
	.uleb128 0x2
	.long	0x1c827
	.uleb128 0x1
	.long	0x1c836
	.byte	0
	.uleb128 0xac
	.secrel32	.LASF65
	.word	0x317
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC4ERKS5_\0"
	.long	0xe863
	.long	0xe86e
	.uleb128 0x2
	.long	0x1c827
	.uleb128 0x1
	.long	0x1c84f
	.byte	0
	.uleb128 0xad
	.secrel32	.LASF6
	.word	0x318
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEaSERKS5_\0"
	.long	0x1c836
	.long	0xe8d4
	.long	0xe8df
	.uleb128 0x2
	.long	0x1c827
	.uleb128 0x1
	.long	0x1c84f
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF72
	.byte	0xf
	.word	0x244
	.byte	0xc
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC4IS4_vEEv\0"
	.byte	0x1
	.long	0xe94e
	.long	0xe954
	.uleb128 0x55
	.secrel32	.LASF73
	.long	0xc3c5
	.uleb128 0x2
	.long	0x1c827
	.byte	0
	.uleb128 0xd9
	.ascii "unique_ptr<MATRIX::MaterialAttributes*>\0"
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC4IPS1_S4_vbEET_\0"
	.long	0xe9f2
	.long	0xe9fd
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x1c746
	.uleb128 0x57
	.ascii "_Vp\0"
	.long	0xc3c5
	.uleb128 0x2
	.long	0x1c827
	.uleb128 0x1
	.long	0x1c746
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cd69
	.uleb128 0x57
	.ascii "_Dp\0"
	.long	0xc3c5
	.byte	0
	.uleb128 0x4
	.long	0xe234
	.uleb128 0x19
	.ascii "__duration_common_type<std::common_type<long long int, long long int>, std::ratio<1, 1000>, std::ratio<1, 1000000000>, void>\0"
	.byte	0x1
	.byte	0xc
	.byte	0x52
	.byte	0xc
	.long	0xeac3
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0xc
	.byte	0x5d
	.byte	0xd
	.long	0x6d77
	.uleb128 0x9
	.ascii "_CT\0"
	.long	0xa4b9
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0xa6a3
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0x6cca
	.byte	0
	.uleb128 0x19
	.ascii "default_delete<std::thread []>\0"
	.byte	0x1
	.byte	0xf
	.byte	0x68
	.byte	0xc
	.long	0xebd7
	.uleb128 0x3a
	.secrel32	.LASF104
	.byte	0xf
	.byte	0x6c
	.byte	0x11
	.ascii "_ZNSt14default_deleteIA_St6threadEC4Ev\0"
	.long	0xeb22
	.long	0xeb28
	.uleb128 0x2
	.long	0x1cadb
	.byte	0
	.uleb128 0x5a
	.ascii "operator()<std::thread>\0"
	.byte	0xf
	.byte	0x80
	.byte	0x2
	.ascii "_ZNKSt14default_deleteIA_St6threadEclIS0_EENSt9enable_ifIXsrSt14is_convertibleIPA_T_PS1_E5valueEvE4typeEPS6_\0"
	.long	0xebc2
	.long	0xebcd
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x5de9
	.uleb128 0x2
	.long	0x20d91
	.uleb128 0x1
	.long	0x19630
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cd75
	.byte	0
	.uleb128 0x4
	.long	0xeac3
	.uleb128 0x5f
	.ascii "__uniq_ptr_impl<std::thread, std::default_delete<std::thread []> >\0"
	.byte	0x8
	.byte	0xf
	.byte	0x8c
	.byte	0xb
	.long	0xf0d2
	.uleb128 0x19
	.ascii "_Ptr<std::thread, std::default_delete<std::thread []>, void>\0"
	.byte	0x1
	.byte	0xf
	.byte	0x8f
	.byte	0x9
	.long	0xec8d
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0xf
	.byte	0x91
	.byte	0xa
	.long	0x19630
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x5de9
	.uleb128 0x9
	.ascii "_Ep\0"
	.long	0xeac3
	.byte	0
	.uleb128 0x97
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xa6
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC4Ev\0"
	.long	0xecdd
	.long	0xece3
	.uleb128 0x2
	.long	0x1cb7b
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xa8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC4EPS0_\0"
	.byte	0x1
	.long	0xed36
	.long	0xed41
	.uleb128 0x2
	.long	0x1cb7b
	.uleb128 0x1
	.long	0xed41
	.byte	0
	.uleb128 0x75
	.secrel32	.LASF68
	.byte	0xf
	.byte	0xa0
	.byte	0xd
	.long	0xec6e
	.uleb128 0x31
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xb0
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC4EOS4_\0"
	.byte	0x1
	.long	0xeda0
	.long	0xedab
	.uleb128 0x2
	.long	0x1cb7b
	.uleb128 0x1
	.long	0x1cb85
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF6
	.byte	0xf
	.byte	0xb5
	.byte	0x18
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEaSEOS4_\0"
	.long	0x1cb8a
	.long	0xee01
	.long	0xee0c
	.uleb128 0x2
	.long	0x1cb7b
	.uleb128 0x1
	.long	0x1cb85
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF102
	.byte	0xf
	.byte	0xbd
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv\0"
	.long	0x1cb8f
	.long	0xee64
	.long	0xee6a
	.uleb128 0x2
	.long	0x1cb7b
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF102
	.byte	0xf
	.byte	0xbf
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE6_M_ptrEv\0"
	.long	0xed41
	.long	0xeec3
	.long	0xeec9
	.uleb128 0x2
	.long	0x1cb94
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF106
	.byte	0xf
	.byte	0xc1
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv\0"
	.long	0x1caf9
	.long	0xef26
	.long	0xef2c
	.uleb128 0x2
	.long	0x1cb7b
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF106
	.byte	0xf
	.byte	0xc3
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE10_M_deleterEv\0"
	.long	0x1caea
	.long	0xef8a
	.long	0xef90
	.uleb128 0x2
	.long	0x1cb94
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF71
	.byte	0xf
	.byte	0xc6
	.byte	0xc
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE5resetEPS0_\0"
	.byte	0x1
	.long	0xefe7
	.long	0xeff2
	.uleb128 0x2
	.long	0x1cb7b
	.uleb128 0x1
	.long	0xed41
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF35
	.byte	0xf
	.byte	0xcf
	.byte	0xf
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE7releaseEv\0"
	.long	0xed41
	.long	0xf04b
	.long	0xf051
	.uleb128 0x2
	.long	0x1cb7b
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF23
	.byte	0xf
	.byte	0xd8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EE4swapERS4_\0"
	.byte	0x1
	.long	0xf0a7
	.long	0xf0b2
	.uleb128 0x2
	.long	0x1cb7b
	.uleb128 0x1
	.long	0x1cb8a
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF62
	.byte	0xf
	.byte	0xe0
	.byte	0x1b
	.long	0xfe0d
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x5de9
	.uleb128 0x9
	.ascii "_Dp\0"
	.long	0xeac3
	.byte	0
	.uleb128 0x4
	.long	0xebdc
	.uleb128 0x19
	.ascii "_Head_base<1, std::default_delete<std::thread []>, true>\0"
	.byte	0x1
	.byte	0x16
	.byte	0x4e
	.byte	0xc
	.long	0xf3e7
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x50
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC4Ev\0"
	.long	0xf168
	.long	0xf16e
	.uleb128 0x2
	.long	0x1cae0
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x53
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC4ERKS3_\0"
	.long	0xf1c1
	.long	0xf1cc
	.uleb128 0x2
	.long	0x1cae0
	.uleb128 0x1
	.long	0x1caea
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x56
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC4ERKS4_\0"
	.long	0xf21f
	.long	0xf22a
	.uleb128 0x2
	.long	0x1cae0
	.uleb128 0x1
	.long	0x1caef
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x57
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC4EOS4_\0"
	.long	0xf27c
	.long	0xf287
	.uleb128 0x2
	.long	0x1cae0
	.uleb128 0x1
	.long	0x1caf4
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x5e
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0xf2f9
	.long	0xf309
	.uleb128 0x2
	.long	0x1cae0
	.uleb128 0x1
	.long	0x20db
	.uleb128 0x1
	.long	0x212f
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0x7c
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERS4_\0"
	.long	0x1caf9
	.long	0xf367
	.uleb128 0x1
	.long	0x1cafe
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0x7f
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EE7_M_headERKS4_\0"
	.long	0x1caea
	.long	0xf3c6
	.uleb128 0x1
	.long	0x1caef
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF109
	.byte	0x16
	.byte	0x81
	.byte	0x27
	.long	0xeac3
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0xeac3
	.byte	0
	.uleb128 0x4
	.long	0xf0d7
	.uleb128 0x1d
	.ascii "_Tuple_impl<1, std::default_delete<std::thread []> >\0"
	.byte	0x1
	.byte	0x16
	.word	0x1a0
	.byte	0xc
	.long	0xf736
	.uleb128 0x44
	.long	0xf0d7
	.byte	0x3
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x1a8
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERS4_\0"
	.long	0x1caf9
	.long	0xf48e
	.uleb128 0x1
	.long	0x1cb03
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x1ab
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_headERKS4_\0"
	.long	0x1caea
	.long	0xf4ec
	.uleb128 0x1
	.long	0x1cb08
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1ae
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC4Ev\0"
	.long	0xf53b
	.long	0xf541
	.uleb128 0x2
	.long	0x1cb0d
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1b2
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC4ERKS3_\0"
	.long	0xf594
	.long	0xf59f
	.uleb128 0x2
	.long	0x1cb0d
	.uleb128 0x1
	.long	0x1caea
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1bc
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC4ERKS4_\0"
	.long	0xf5f2
	.long	0xf5fd
	.uleb128 0x2
	.long	0x1cb0d
	.uleb128 0x1
	.long	0x1cb08
	.byte	0
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x16
	.word	0x1c0
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEaSERKS4_\0"
	.long	0x1cb03
	.long	0xf654
	.long	0xf65f
	.uleb128 0x2
	.long	0x1cb0d
	.uleb128 0x1
	.long	0x1cb08
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1c6
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC4EOS4_\0"
	.long	0xf6b1
	.long	0xf6bc
	.uleb128 0x2
	.long	0x1cb0d
	.uleb128 0x1
	.long	0x1cb17
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF113
	.byte	0x16
	.word	0x220
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEE7_M_swapERS4_\0"
	.byte	0x2
	.long	0xf715
	.long	0xf720
	.uleb128 0x2
	.long	0x1cb0d
	.uleb128 0x1
	.long	0x1cb03
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0x1
	.uleb128 0x41
	.secrel32	.LASF114
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0xf3ec
	.uleb128 0x19
	.ascii "_Head_base<0, std::thread*, false>\0"
	.byte	0x8
	.byte	0x16
	.byte	0xbb
	.byte	0xc
	.long	0xf9a2
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xbd
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC4Ev\0"
	.long	0xf7a1
	.long	0xf7a7
	.uleb128 0x2
	.long	0x1cb1c
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc0
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC4ERKS1_\0"
	.long	0xf7e5
	.long	0xf7f0
	.uleb128 0x2
	.long	0x1cb1c
	.uleb128 0x1
	.long	0x1cb26
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc3
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC4ERKS2_\0"
	.long	0xf82e
	.long	0xf839
	.uleb128 0x2
	.long	0x1cb1c
	.uleb128 0x1
	.long	0x1cb2b
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc4
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC4EOS2_\0"
	.long	0xf876
	.long	0xf881
	.uleb128 0x2
	.long	0x1cb1c
	.uleb128 0x1
	.long	0x1cb30
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xcb
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0xf8de
	.long	0xf8ee
	.uleb128 0x2
	.long	0x1cb1c
	.uleb128 0x1
	.long	0x20db
	.uleb128 0x1
	.long	0x212f
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0xe9
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERS2_\0"
	.long	0x1cb35
	.long	0xf937
	.uleb128 0x1
	.long	0x1cb3a
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0xec
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EE7_M_headERKS2_\0"
	.long	0x1cb26
	.long	0xf981
	.uleb128 0x1
	.long	0x1cb2b
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF109
	.byte	0x16
	.byte	0xee
	.byte	0xd
	.long	0x19630
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x19630
	.byte	0
	.uleb128 0x4
	.long	0xf73b
	.uleb128 0x1d
	.ascii "_Tuple_impl<0, std::thread*, std::default_delete<std::thread []> >\0"
	.byte	0x8
	.byte	0x16
	.word	0x102
	.byte	0xc
	.long	0xfe08
	.uleb128 0x45
	.long	0xf3ec
	.uleb128 0x44
	.long	0xf73b
	.byte	0x3
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x10c
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERS5_\0"
	.long	0x1cb35
	.long	0xfa60
	.uleb128 0x1
	.long	0x1cb3f
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x10f
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_headERKS5_\0"
	.long	0x1cb26
	.long	0xfac2
	.uleb128 0x1
	.long	0x1cb44
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF115
	.byte	0x16
	.word	0x108
	.byte	0x2f
	.long	0xf3ec
	.uleb128 0x4
	.long	0xfac2
	.uleb128 0x2f
	.secrel32	.LASF116
	.word	0x112
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_tailERS5_\0"
	.long	0x1cb49
	.long	0xfb35
	.uleb128 0x1
	.long	0x1cb3f
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF116
	.word	0x115
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_tailERKS5_\0"
	.long	0x1cb4e
	.long	0xfb97
	.uleb128 0x1
	.long	0x1cb44
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF112
	.byte	0x16
	.word	0x117
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC4Ev\0"
	.long	0xfbea
	.long	0xfbf0
	.uleb128 0x2
	.long	0x1cb53
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF112
	.byte	0x16
	.word	0x11b
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC4ERKS1_RKS4_\0"
	.long	0xfc4c
	.long	0xfc5c
	.uleb128 0x2
	.long	0x1cb53
	.uleb128 0x1
	.long	0x1cb26
	.uleb128 0x1
	.long	0x1caea
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF112
	.byte	0x16
	.word	0x127
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC4ERKS5_\0"
	.long	0xfcb3
	.long	0xfcbe
	.uleb128 0x2
	.long	0x1cb53
	.uleb128 0x1
	.long	0x1cb44
	.byte	0
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x16
	.word	0x12b
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEaSERKS5_\0"
	.long	0x1cb3f
	.long	0xfd19
	.long	0xfd24
	.uleb128 0x2
	.long	0x1cb53
	.uleb128 0x1
	.long	0x1cb44
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF112
	.byte	0x16
	.word	0x12d
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC4EOS5_\0"
	.long	0xfd7a
	.long	0xfd85
	.uleb128 0x2
	.long	0x1cb53
	.uleb128 0x1
	.long	0x1cb5d
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF113
	.byte	0x16
	.word	0x196
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEE7_M_swapERS5_\0"
	.byte	0x2
	.long	0xfde2
	.long	0xfded
	.uleb128 0x2
	.long	0x1cb53
	.uleb128 0x1
	.long	0x1cb3f
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF114
	.uleb128 0x10
	.long	0x19630
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0xf9a7
	.uleb128 0x6a
	.ascii "tuple<std::thread*, std::default_delete<std::thread []> >\0"
	.byte	0x16
	.word	0x3d5
	.long	0x100d6
	.uleb128 0x44
	.long	0xf9a7
	.byte	0x1
	.uleb128 0xb5
	.secrel32	.LASF117
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEE31__nothrow_default_constructibleEv\0"
	.long	0x184a1
	.uleb128 0x67
	.secrel32	.LASF118
	.byte	0x16
	.word	0x440
	.byte	0x11
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC4ERKS5_\0"
	.long	0xff01
	.long	0xff0c
	.uleb128 0x2
	.long	0x1cb62
	.uleb128 0x1
	.long	0x1cb6c
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF118
	.byte	0x16
	.word	0x442
	.byte	0x11
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC4EOS5_\0"
	.long	0xff57
	.long	0xff62
	.uleb128 0x2
	.long	0x1cb62
	.uleb128 0x1
	.long	0x1cb71
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF6
	.byte	0x16
	.word	0x4f3
	.byte	0x7
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEaSERKS5_\0"
	.long	0x1cb76
	.long	0xffb2
	.long	0xffbd
	.uleb128 0x2
	.long	0x1cb62
	.uleb128 0x1
	.long	0x100db
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF6
	.byte	0x16
	.word	0x4fe
	.byte	0x7
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEaSEOS5_\0"
	.long	0x1cb76
	.long	0x1000c
	.long	0x10017
	.uleb128 0x2
	.long	0x1cb62
	.uleb128 0x1
	.long	0x100e7
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF23
	.byte	0x16
	.word	0x533
	.byte	0x7
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEE4swapERS5_\0"
	.byte	0x1
	.long	0x10066
	.long	0x10071
	.uleb128 0x2
	.long	0x1cb62
	.uleb128 0x1
	.long	0x1cb76
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF119
	.byte	0x16
	.word	0x419
	.byte	0x2
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC4ILb1ELb1EEEv\0"
	.byte	0x1
	.long	0x100cd
	.long	0x100d3
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0x2
	.long	0x1cb62
	.byte	0
	.uleb128 0x89
	.byte	0
	.uleb128 0x4
	.long	0xfe0d
	.uleb128 0x1a
	.secrel32	.LASF121
	.byte	0x25
	.byte	0x77
	.byte	0xb
	.long	0x2a03
	.uleb128 0x1a
	.secrel32	.LASF121
	.byte	0x25
	.byte	0x77
	.byte	0xb
	.long	0x2a0f
	.uleb128 0x19
	.ascii "__uniq_ptr_data<std::thread, std::default_delete<std::thread []>, true, true>\0"
	.byte	0x8
	.byte	0xf
	.byte	0xe7
	.byte	0xc
	.long	0x102ad
	.uleb128 0x45
	.long	0xebdc
	.uleb128 0x3a
	.secrel32	.LASF122
	.byte	0xf
	.byte	0xea
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EEC4EOS4_\0"
	.long	0x101a9
	.long	0x101b4
	.uleb128 0x2
	.long	0x1cb9e
	.uleb128 0x1
	.long	0x1cba8
	.byte	0
	.uleb128 0xb6
	.secrel32	.LASF6
	.ascii "_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EEaSEOS4_\0"
	.long	0x1cbad
	.long	0x10210
	.long	0x1021b
	.uleb128 0x2
	.long	0x1cb9e
	.uleb128 0x1
	.long	0x1cba8
	.byte	0
	.uleb128 0x99
	.secrel32	.LASF122
	.ascii "_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI4St15__uniq_ptr_implIS0_S3_EEPS0_\0"
	.long	0x1028f
	.long	0x1029a
	.uleb128 0x2
	.long	0x1cb9e
	.uleb128 0x1
	.long	0xed41
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x5de9
	.uleb128 0x9
	.ascii "_Dp\0"
	.long	0xeac3
	.byte	0
	.uleb128 0x1d
	.ascii "__add_lvalue_reference_helper<std::thread, true>\0"
	.byte	0x1
	.byte	0x25
	.word	0x66c
	.byte	0xc
	.long	0x102ff
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x66d
	.byte	0x16
	.long	0x19644
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x5de9
	.byte	0
	.uleb128 0x6a
	.ascii "unique_ptr<std::thread [], std::default_delete<std::thread []> >\0"
	.byte	0xf
	.word	0x20f
	.long	0x1090d
	.uleb128 0x3e
	.secrel32	.LASF62
	.byte	0xf
	.word	0x215
	.byte	0x21
	.long	0x100f3
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF65
	.byte	0xf
	.word	0x283
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC4EOS4_\0"
	.long	0x103a4
	.long	0x103af
	.uleb128 0x2
	.long	0x1cbb2
	.uleb128 0x1
	.long	0x1cbbc
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF66
	.byte	0xf
	.word	0x299
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED4Ev\0"
	.byte	0x1
	.long	0x103fb
	.long	0x10406
	.uleb128 0x2
	.long	0x1cbb2
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0xaa
	.secrel32	.LASF6
	.word	0x2a8
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEaSEOS4_\0"
	.long	0x1cbc1
	.long	0x10458
	.long	0x10463
	.uleb128 0x2
	.long	0x1cbb2
	.uleb128 0x1
	.long	0x1cbbc
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF6
	.byte	0xf
	.word	0x2c2
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEaSEDn\0"
	.long	0x1cbc1
	.long	0x104b3
	.long	0x104be
	.uleb128 0x2
	.long	0x1cbb2
	.uleb128 0x1
	.long	0x224b
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF103
	.byte	0xf
	.word	0x2cd
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEixEy\0"
	.long	0x102e8
	.long	0x1050e
	.long	0x10519
	.uleb128 0x2
	.long	0x1cbc6
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF68
	.byte	0xf
	.word	0x221
	.byte	0xd
	.long	0xed41
	.byte	0x1
	.uleb128 0x7d
	.ascii "get\0"
	.byte	0xf
	.word	0x2d6
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE3getEv\0"
	.long	0x10519
	.byte	0x1
	.long	0x1057a
	.long	0x10580
	.uleb128 0x2
	.long	0x1cbc6
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF69
	.byte	0xf
	.word	0x223
	.byte	0xd
	.long	0xeac3
	.byte	0x1
	.uleb128 0x4
	.long	0x10580
	.uleb128 0x38
	.secrel32	.LASF70
	.byte	0xf
	.word	0x2dc
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv\0"
	.long	0x1cbd0
	.long	0x105ed
	.long	0x105f3
	.uleb128 0x2
	.long	0x1cbb2
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF70
	.byte	0xf
	.word	0x2e2
	.byte	0x7
	.ascii "_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE11get_deleterEv\0"
	.long	0x1cbd5
	.long	0x1064e
	.long	0x10654
	.uleb128 0x2
	.long	0x1cbc6
	.byte	0
	.uleb128 0xab
	.secrel32	.LASF25
	.word	0x2e7
	.ascii "_ZNKSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEcvbEv\0"
	.long	0x184a1
	.long	0x106a4
	.long	0x106aa
	.uleb128 0x2
	.long	0x1cbc6
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF35
	.byte	0xf
	.word	0x2ef
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE7releaseEv\0"
	.long	0x10519
	.long	0x106ff
	.long	0x10705
	.uleb128 0x2
	.long	0x1cbb2
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF71
	.byte	0xf
	.word	0x30a
	.byte	0xc
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE5resetEDn\0"
	.byte	0x1
	.long	0x10756
	.long	0x10761
	.uleb128 0x2
	.long	0x1cbb2
	.uleb128 0x1
	.long	0x224b
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF23
	.byte	0xf
	.word	0x310
	.byte	0x7
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EE4swapERS4_\0"
	.byte	0x1
	.long	0x107b3
	.long	0x107be
	.uleb128 0x2
	.long	0x1cbb2
	.uleb128 0x1
	.long	0x1cbc1
	.byte	0
	.uleb128 0xac
	.secrel32	.LASF65
	.word	0x317
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC4ERKS4_\0"
	.long	0x1080c
	.long	0x10817
	.uleb128 0x2
	.long	0x1cbb2
	.uleb128 0x1
	.long	0x1cbda
	.byte	0
	.uleb128 0xad
	.secrel32	.LASF6
	.word	0x318
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEaSERKS4_\0"
	.long	0x1cbc1
	.long	0x10869
	.long	0x10874
	.uleb128 0x2
	.long	0x1cbb2
	.uleb128 0x1
	.long	0x1cbda
	.byte	0
	.uleb128 0xd9
	.ascii "unique_ptr<std::thread*>\0"
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC4IPS0_S3_vbEET_\0"
	.long	0x108ef
	.long	0x108fa
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x19630
	.uleb128 0x57
	.ascii "_Vp\0"
	.long	0xeac3
	.uleb128 0x2
	.long	0x1cbb2
	.uleb128 0x1
	.long	0x19630
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cd75
	.uleb128 0x57
	.ascii "_Dp\0"
	.long	0xeac3
	.byte	0
	.uleb128 0x4
	.long	0x102ff
	.uleb128 0x19
	.ascii "default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>\0"
	.byte	0x1
	.byte	0xf
	.byte	0x68
	.byte	0xc
	.long	0x10a29
	.uleb128 0x6c
	.secrel32	.LASF104
	.byte	0xf
	.byte	0x6c
	.byte	0x11
	.long	0x10995
	.long	0x1099b
	.uleb128 0x2
	.long	0x1cbdf
	.byte	0
	.uleb128 0x98
	.ascii "operator()<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t>\0"
	.byte	0xf
	.byte	0x80
	.byte	0x2
	.long	0x10a14
	.long	0x10a1f
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x10e50
	.uleb128 0x2
	.long	0x20ba2
	.uleb128 0x1
	.long	0x1cbe4
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cd81
	.byte	0
	.uleb128 0x4
	.long	0x10912
	.uleb128 0x1d
	.ascii "remove_reference<std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x1
	.byte	0x25
	.word	0x65c
	.byte	0xc
	.long	0x10ad1
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x65d
	.byte	0x15
	.long	0x10912
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x10912
	.byte	0
	.uleb128 0x5f
	.ascii "__uniq_ptr_impl<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x8
	.byte	0xf
	.byte	0x8c
	.byte	0xb
	.long	0x10dfd
	.uleb128 0x19
	.ascii "_Ptr<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>, void>\0"
	.byte	0x1
	.byte	0xf
	.byte	0x8f
	.byte	0x9
	.long	0x10cae
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0xf
	.byte	0x91
	.byte	0xa
	.long	0x1cbe4
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x10e50
	.uleb128 0x9
	.ascii "_Ep\0"
	.long	0x10912
	.byte	0
	.uleb128 0xda
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xa6
	.byte	0x7
	.long	0x10cbf
	.long	0x10cc5
	.uleb128 0x2
	.long	0x1cc89
	.byte	0
	.uleb128 0x6d
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xa8
	.byte	0x7
	.long	0x10cd5
	.long	0x10ce0
	.uleb128 0x2
	.long	0x1cc89
	.uleb128 0x1
	.long	0x10ce0
	.byte	0
	.uleb128 0x75
	.secrel32	.LASF68
	.byte	0xf
	.byte	0xa0
	.byte	0xd
	.long	0x10c8f
	.uleb128 0x4
	.long	0x10ce0
	.uleb128 0x6d
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xb0
	.byte	0x7
	.long	0x10d01
	.long	0x10d0c
	.uleb128 0x2
	.long	0x1cc89
	.uleb128 0x1
	.long	0x1cc93
	.byte	0
	.uleb128 0x7e
	.secrel32	.LASF6
	.byte	0xb5
	.byte	0x18
	.long	0x1cc98
	.long	0x10d1f
	.long	0x10d2a
	.uleb128 0x2
	.long	0x1cc89
	.uleb128 0x1
	.long	0x1cc93
	.byte	0
	.uleb128 0x7e
	.secrel32	.LASF102
	.byte	0xbd
	.byte	0x12
	.long	0x1cc9d
	.long	0x10d3d
	.long	0x10d43
	.uleb128 0x2
	.long	0x1cc89
	.byte	0
	.uleb128 0x7e
	.secrel32	.LASF102
	.byte	0xbf
	.byte	0x12
	.long	0x10ce0
	.long	0x10d56
	.long	0x10d5c
	.uleb128 0x2
	.long	0x1cca2
	.byte	0
	.uleb128 0x7e
	.secrel32	.LASF106
	.byte	0xc1
	.byte	0x12
	.long	0x1cc07
	.long	0x10d6f
	.long	0x10d75
	.uleb128 0x2
	.long	0x1cc89
	.byte	0
	.uleb128 0x7e
	.secrel32	.LASF106
	.byte	0xc3
	.byte	0x12
	.long	0x1cbf8
	.long	0x10d88
	.long	0x10d8e
	.uleb128 0x2
	.long	0x1cca2
	.byte	0
	.uleb128 0x6d
	.secrel32	.LASF71
	.byte	0xf
	.byte	0xc6
	.byte	0xc
	.long	0x10d9e
	.long	0x10da9
	.uleb128 0x2
	.long	0x1cc89
	.uleb128 0x1
	.long	0x10ce0
	.byte	0
	.uleb128 0x7e
	.secrel32	.LASF35
	.byte	0xcf
	.byte	0xf
	.long	0x10ce0
	.long	0x10dbc
	.long	0x10dc2
	.uleb128 0x2
	.long	0x1cc89
	.byte	0
	.uleb128 0x6d
	.secrel32	.LASF23
	.byte	0xf
	.byte	0xd8
	.byte	0x7
	.long	0x10dd2
	.long	0x10ddd
	.uleb128 0x2
	.long	0x1cc89
	.uleb128 0x1
	.long	0x1cc98
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF62
	.byte	0xf
	.byte	0xe0
	.byte	0x1b
	.long	0x116ae
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x10e50
	.uleb128 0x9
	.ascii "_Dp\0"
	.long	0x10912
	.byte	0
	.uleb128 0x4
	.long	0x10ad1
	.uleb128 0xdb
	.ascii "__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x4c
	.long	0x11053
	.uleb128 0xa4
	.ascii "__state_t\0"
	.byte	0x40
	.byte	0x40
	.byte	0x11
	.byte	0x54
	.byte	0x3f
	.long	0x10e7a
	.uleb128 0x7c
	.ascii "__tickets\0"
	.byte	0x11
	.byte	0x56
	.byte	0x29
	.long	0x11010
	.byte	0x1
	.byte	0
	.byte	0
	.uleb128 0x115
	.ascii "__phase_alignment\0"
	.byte	0x11
	.byte	0x50
	.byte	0x1d
	.long	0x10f
	.byte	0x1
	.uleb128 0x13
	.ascii "_M_expected\0"
	.byte	0x11
	.byte	0x59
	.byte	0x11
	.long	0x20b6
	.byte	0
	.uleb128 0x13
	.ascii "_M_state\0"
	.byte	0x11
	.byte	0x5a
	.byte	0x1f
	.long	0x11a79
	.byte	0x8
	.uleb128 0x7c
	.ascii "_M_expected_adjustment\0"
	.byte	0x11
	.byte	0x5b
	.byte	0x20
	.long	0x4c89
	.byte	0x8
	.byte	0x10
	.uleb128 0x13
	.ascii "_M_completion\0"
	.byte	0x11
	.byte	0x5c
	.byte	0x14
	.long	0x22c1f
	.byte	0x18
	.uleb128 0x7c
	.ascii "_M_phase\0"
	.byte	0x11
	.byte	0x5e
	.byte	0x35
	.long	0xaa56
	.byte	0x1
	.byte	0x30
	.uleb128 0x116
	.ascii "_M_arrive\0"
	.byte	0x11
	.byte	0x61
	.byte	0x7
	.long	0x184a1
	.long	0x10f23
	.long	0x10f33
	.uleb128 0x2
	.long	0x1cd0b
	.uleb128 0x1
	.long	0xaa56
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0xdc
	.ascii "max\0"
	.byte	0x94
	.long	0x20b6
	.uleb128 0xdd
	.ascii "__tree_barrier\0"
	.byte	0x97
	.long	0x10f58
	.long	0x10f68
	.uleb128 0x2
	.long	0x1cd0b
	.uleb128 0x1
	.long	0x20b6
	.uleb128 0x1
	.long	0x22c1f
	.byte	0
	.uleb128 0x75
	.secrel32	.LASF123
	.byte	0x11
	.byte	0x91
	.byte	0xd
	.long	0xaa56
	.uleb128 0x4
	.long	0x10f68
	.uleb128 0xde
	.ascii "arrive\0"
	.byte	0xa2
	.long	0x10f68
	.long	0x10f8f
	.long	0x10f9a
	.uleb128 0x2
	.long	0x1cd0b
	.uleb128 0x1
	.long	0x20b6
	.byte	0
	.uleb128 0x6d
	.secrel32	.LASF29
	.byte	0x11
	.byte	0xb9
	.byte	0x7
	.long	0x10faa
	.long	0x10fb5
	.uleb128 0x2
	.long	0x1cd15
	.uleb128 0x1
	.long	0x1cd1f
	.byte	0
	.uleb128 0x6d
	.secrel32	.LASF124
	.byte	0x11
	.byte	0xc4
	.byte	0x7
	.long	0x10fc5
	.long	0x10fcb
	.uleb128 0x2
	.long	0x1cd0b
	.byte	0
	.uleb128 0xf
	.ascii "__atomic_phase_ref_t\0"
	.byte	0x11
	.byte	0x4e
	.byte	0xd
	.long	0xaa76
	.uleb128 0xf
	.ascii "__atomic_phase_const_ref_t\0"
	.byte	0x11
	.byte	0x4f
	.byte	0xd
	.long	0xbc63
	.uleb128 0x4
	.long	0x10fe8
	.uleb128 0xf
	.ascii "__tickets_t\0"
	.byte	0x11
	.byte	0x53
	.byte	0xd
	.long	0xb2d0
	.uleb128 0xdf
	.ascii "~__tree_barrier\0"
	.long	0x1103e
	.long	0x11049
	.uleb128 0x2
	.long	0x1cd0b
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF125
	.long	0x22c1f
	.byte	0
	.uleb128 0x4
	.long	0x10e02
	.uleb128 0x19
	.ascii "_Head_base<1, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>, true>\0"
	.byte	0x1
	.byte	0x16
	.byte	0x4e
	.byte	0xc
	.long	0x111b9
	.uleb128 0x61
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x50
	.byte	0x11
	.long	0x110f5
	.long	0x110fb
	.uleb128 0x2
	.long	0x1cbee
	.byte	0
	.uleb128 0x61
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x53
	.byte	0x11
	.long	0x1110b
	.long	0x11116
	.uleb128 0x2
	.long	0x1cbee
	.uleb128 0x1
	.long	0x1cbf8
	.byte	0
	.uleb128 0x6c
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x56
	.byte	0x11
	.long	0x11126
	.long	0x11131
	.uleb128 0x2
	.long	0x1cbee
	.uleb128 0x1
	.long	0x1cbfd
	.byte	0
	.uleb128 0x6c
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x57
	.byte	0x11
	.long	0x11141
	.long	0x1114c
	.uleb128 0x2
	.long	0x1cbee
	.uleb128 0x1
	.long	0x1cc02
	.byte	0
	.uleb128 0x61
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x5e
	.byte	0x7
	.long	0x1115c
	.long	0x1116c
	.uleb128 0x2
	.long	0x1cbee
	.uleb128 0x1
	.long	0x20db
	.uleb128 0x1
	.long	0x212f
	.byte	0
	.uleb128 0x62
	.secrel32	.LASF108
	.byte	0x16
	.byte	0x7c
	.byte	0x7
	.long	0x1cc07
	.long	0x11182
	.uleb128 0x1
	.long	0x1cc0c
	.byte	0
	.uleb128 0x62
	.secrel32	.LASF108
	.byte	0x16
	.byte	0x7f
	.byte	0x7
	.long	0x1cbf8
	.long	0x11198
	.uleb128 0x1
	.long	0x1cbfd
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF109
	.byte	0x16
	.byte	0x81
	.byte	0x27
	.long	0x10912
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x10912
	.byte	0
	.uleb128 0x4
	.long	0x11058
	.uleb128 0x1d
	.ascii "_Tuple_impl<1, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x1
	.byte	0x16
	.word	0x1a0
	.byte	0xc
	.long	0x11336
	.uleb128 0x44
	.long	0x11058
	.byte	0x3
	.uleb128 0x58
	.secrel32	.LASF108
	.word	0x1a8
	.byte	0x7
	.long	0x1cc07
	.long	0x11264
	.uleb128 0x1
	.long	0x1cc11
	.byte	0
	.uleb128 0x58
	.secrel32	.LASF108
	.word	0x1ab
	.byte	0x7
	.long	0x1cbf8
	.long	0x1127a
	.uleb128 0x1
	.long	0x1cc16
	.byte	0
	.uleb128 0x8a
	.secrel32	.LASF112
	.word	0x1ae
	.byte	0x7
	.long	0x1128b
	.long	0x11291
	.uleb128 0x2
	.long	0x1cc1b
	.byte	0
	.uleb128 0xb7
	.secrel32	.LASF112
	.word	0x1b2
	.long	0x112a1
	.long	0x112ac
	.uleb128 0x2
	.long	0x1cc1b
	.uleb128 0x1
	.long	0x1cbf8
	.byte	0
	.uleb128 0x9a
	.secrel32	.LASF112
	.word	0x1bc
	.byte	0x11
	.long	0x112bd
	.long	0x112c8
	.uleb128 0x2
	.long	0x1cc1b
	.uleb128 0x1
	.long	0x1cc16
	.byte	0
	.uleb128 0xb8
	.secrel32	.LASF6
	.word	0x1c0
	.long	0x1cc11
	.long	0x112dc
	.long	0x112e7
	.uleb128 0x2
	.long	0x1cc1b
	.uleb128 0x1
	.long	0x1cc16
	.byte	0
	.uleb128 0x8a
	.secrel32	.LASF112
	.word	0x1c6
	.byte	0x7
	.long	0x112f8
	.long	0x11303
	.uleb128 0x2
	.long	0x1cc1b
	.uleb128 0x1
	.long	0x1cc25
	.byte	0
	.uleb128 0x5d
	.secrel32	.LASF113
	.byte	0x16
	.word	0x220
	.byte	0x7
	.byte	0x2
	.long	0x11315
	.long	0x11320
	.uleb128 0x2
	.long	0x1cc1b
	.uleb128 0x1
	.long	0x1cc11
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0x1
	.uleb128 0x41
	.secrel32	.LASF114
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x111be
	.uleb128 0x19
	.ascii "_Head_base<0, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, false>\0"
	.byte	0x8
	.byte	0x16
	.byte	0xbb
	.byte	0xc
	.long	0x11486
	.uleb128 0x61
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xbd
	.byte	0x11
	.long	0x113c2
	.long	0x113c8
	.uleb128 0x2
	.long	0x1cc2a
	.byte	0
	.uleb128 0x61
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc0
	.byte	0x11
	.long	0x113d8
	.long	0x113e3
	.uleb128 0x2
	.long	0x1cc2a
	.uleb128 0x1
	.long	0x1cc34
	.byte	0
	.uleb128 0x6c
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc3
	.byte	0x11
	.long	0x113f3
	.long	0x113fe
	.uleb128 0x2
	.long	0x1cc2a
	.uleb128 0x1
	.long	0x1cc39
	.byte	0
	.uleb128 0x6c
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc4
	.byte	0x11
	.long	0x1140e
	.long	0x11419
	.uleb128 0x2
	.long	0x1cc2a
	.uleb128 0x1
	.long	0x1cc3e
	.byte	0
	.uleb128 0x61
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xcb
	.byte	0x7
	.long	0x11429
	.long	0x11439
	.uleb128 0x2
	.long	0x1cc2a
	.uleb128 0x1
	.long	0x20db
	.uleb128 0x1
	.long	0x212f
	.byte	0
	.uleb128 0x62
	.secrel32	.LASF108
	.byte	0x16
	.byte	0xe9
	.byte	0x7
	.long	0x1cc43
	.long	0x1144f
	.uleb128 0x1
	.long	0x1cc48
	.byte	0
	.uleb128 0x62
	.secrel32	.LASF108
	.byte	0x16
	.byte	0xec
	.byte	0x7
	.long	0x1cc34
	.long	0x11465
	.uleb128 0x1
	.long	0x1cc39
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF109
	.byte	0x16
	.byte	0xee
	.byte	0xd
	.long	0x1cbe4
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1cbe4
	.byte	0
	.uleb128 0x4
	.long	0x1133b
	.uleb128 0x1d
	.ascii "_Tuple_impl<0, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x8
	.byte	0x16
	.word	0x102
	.byte	0xc
	.long	0x116a9
	.uleb128 0x45
	.long	0x111be
	.uleb128 0x44
	.long	0x1133b
	.byte	0x3
	.uleb128 0x58
	.secrel32	.LASF108
	.word	0x10c
	.byte	0x7
	.long	0x1cc43
	.long	0x1158f
	.uleb128 0x1
	.long	0x1cc4d
	.byte	0
	.uleb128 0x58
	.secrel32	.LASF108
	.word	0x10f
	.byte	0x7
	.long	0x1cc34
	.long	0x115a5
	.uleb128 0x1
	.long	0x1cc52
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF115
	.byte	0x16
	.word	0x108
	.byte	0x2f
	.long	0x111be
	.uleb128 0x4
	.long	0x115a5
	.uleb128 0x58
	.secrel32	.LASF116
	.word	0x112
	.byte	0x7
	.long	0x1cc57
	.long	0x115cd
	.uleb128 0x1
	.long	0x1cc4d
	.byte	0
	.uleb128 0x58
	.secrel32	.LASF116
	.word	0x115
	.byte	0x7
	.long	0x1cc5c
	.long	0x115e3
	.uleb128 0x1
	.long	0x1cc52
	.byte	0
	.uleb128 0x8a
	.secrel32	.LASF112
	.word	0x117
	.byte	0x11
	.long	0x115f4
	.long	0x115fa
	.uleb128 0x2
	.long	0x1cc61
	.byte	0
	.uleb128 0xb7
	.secrel32	.LASF112
	.word	0x11b
	.long	0x1160a
	.long	0x1161a
	.uleb128 0x2
	.long	0x1cc61
	.uleb128 0x1
	.long	0x1cc34
	.uleb128 0x1
	.long	0x1cbf8
	.byte	0
	.uleb128 0x9a
	.secrel32	.LASF112
	.word	0x127
	.byte	0x11
	.long	0x1162b
	.long	0x11636
	.uleb128 0x2
	.long	0x1cc61
	.uleb128 0x1
	.long	0x1cc52
	.byte	0
	.uleb128 0xb8
	.secrel32	.LASF6
	.word	0x12b
	.long	0x1cc4d
	.long	0x1164a
	.long	0x11655
	.uleb128 0x2
	.long	0x1cc61
	.uleb128 0x1
	.long	0x1cc52
	.byte	0
	.uleb128 0x9a
	.secrel32	.LASF112
	.word	0x12d
	.byte	0x7
	.long	0x11666
	.long	0x11671
	.uleb128 0x2
	.long	0x1cc61
	.uleb128 0x1
	.long	0x1cc6b
	.byte	0
	.uleb128 0x5d
	.secrel32	.LASF113
	.byte	0x16
	.word	0x196
	.byte	0x7
	.byte	0x2
	.long	0x11683
	.long	0x1168e
	.uleb128 0x2
	.long	0x1cc61
	.uleb128 0x1
	.long	0x1cc4d
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF114
	.uleb128 0x10
	.long	0x1cbe4
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x1148b
	.uleb128 0x6a
	.ascii "tuple<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x16
	.word	0x3d5
	.long	0x11853
	.uleb128 0x44
	.long	0x1148b
	.byte	0x1
	.uleb128 0x117
	.secrel32	.LASF117
	.byte	0x16
	.word	0x40b
	.byte	0x1d
	.long	0x184a1
	.uleb128 0x8b
	.secrel32	.LASF118
	.byte	0x16
	.word	0x440
	.byte	0x11
	.long	0x117ac
	.long	0x117b7
	.uleb128 0x2
	.long	0x1cc70
	.uleb128 0x1
	.long	0x1cc7a
	.byte	0
	.uleb128 0x8b
	.secrel32	.LASF118
	.byte	0x16
	.word	0x442
	.byte	0x11
	.long	0x117c9
	.long	0x117d4
	.uleb128 0x2
	.long	0x1cc70
	.uleb128 0x1
	.long	0x1cc7f
	.byte	0
	.uleb128 0x68
	.secrel32	.LASF6
	.byte	0x16
	.word	0x4f3
	.long	0x1cc84
	.long	0x117e8
	.long	0x117f3
	.uleb128 0x2
	.long	0x1cc70
	.uleb128 0x1
	.long	0x11858
	.byte	0
	.uleb128 0x68
	.secrel32	.LASF6
	.byte	0x16
	.word	0x4fe
	.long	0x1cc84
	.long	0x11807
	.long	0x11812
	.uleb128 0x2
	.long	0x1cc70
	.uleb128 0x1
	.long	0x11864
	.byte	0
	.uleb128 0x5d
	.secrel32	.LASF23
	.byte	0x16
	.word	0x533
	.byte	0x7
	.byte	0x1
	.long	0x11824
	.long	0x1182f
	.uleb128 0x2
	.long	0x1cc70
	.uleb128 0x1
	.long	0x1cc84
	.byte	0
	.uleb128 0x5d
	.secrel32	.LASF119
	.byte	0x16
	.word	0x419
	.byte	0x2
	.byte	0x1
	.long	0x1184a
	.long	0x11850
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0x2
	.long	0x1cc70
	.byte	0
	.uleb128 0x89
	.byte	0
	.uleb128 0x4
	.long	0x116ae
	.uleb128 0x1a
	.secrel32	.LASF121
	.byte	0x25
	.byte	0x77
	.byte	0xb
	.long	0x2a1b
	.uleb128 0x1a
	.secrel32	.LASF121
	.byte	0x25
	.byte	0x77
	.byte	0xb
	.long	0x2a27
	.uleb128 0x19
	.ascii "__uniq_ptr_data<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>, true, true>\0"
	.byte	0x8
	.byte	0xf
	.byte	0xe7
	.byte	0xc
	.long	0x119dc
	.uleb128 0x45
	.long	0x10ad1
	.uleb128 0x6c
	.secrel32	.LASF122
	.byte	0xf
	.byte	0xea
	.byte	0x7
	.long	0x11972
	.long	0x1197d
	.uleb128 0x2
	.long	0x1ccac
	.uleb128 0x1
	.long	0x1ccb6
	.byte	0
	.uleb128 0x118
	.secrel32	.LASF6
	.byte	0xf
	.byte	0xeb
	.byte	0x18
	.long	0x1ccbb
	.byte	0x1
	.long	0x11993
	.long	0x1199e
	.uleb128 0x2
	.long	0x1ccac
	.uleb128 0x1
	.long	0x1ccb6
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF122
	.long	0x119ab
	.long	0x119b6
	.uleb128 0x2
	.long	0x1ccac
	.uleb128 0x1
	.long	0x10ce0
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF122
	.long	0x119c3
	.long	0x119c9
	.uleb128 0x2
	.long	0x1ccac
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x10e50
	.uleb128 0x9
	.ascii "_Dp\0"
	.long	0x10912
	.byte	0
	.uleb128 0x1d
	.ascii "__add_lvalue_reference_helper<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t, true>\0"
	.byte	0x1
	.byte	0x25
	.word	0x66c
	.byte	0xc
	.long	0x11a79
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x66d
	.byte	0x16
	.long	0x1ccc0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x10e50
	.byte	0
	.uleb128 0x6a
	.ascii "unique_ptr<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t [], std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0xf
	.word	0x20f
	.long	0x11de8
	.uleb128 0x3e
	.secrel32	.LASF62
	.byte	0xf
	.word	0x215
	.byte	0x21
	.long	0x11870
	.byte	0
	.uleb128 0x8b
	.secrel32	.LASF65
	.byte	0xf
	.word	0x283
	.byte	0x7
	.long	0x11b78
	.long	0x11b83
	.uleb128 0x2
	.long	0x1ccc5
	.uleb128 0x1
	.long	0x1cccf
	.byte	0
	.uleb128 0x5d
	.secrel32	.LASF66
	.byte	0xf
	.word	0x299
	.byte	0x7
	.byte	0x1
	.long	0x11b95
	.long	0x11ba0
	.uleb128 0x2
	.long	0x1ccc5
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x119
	.secrel32	.LASF6
	.byte	0xf
	.word	0x2a8
	.byte	0x7
	.long	0x1ccd4
	.byte	0x1
	.byte	0x1
	.long	0x11bb8
	.long	0x11bc3
	.uleb128 0x2
	.long	0x1ccc5
	.uleb128 0x1
	.long	0x1cccf
	.byte	0
	.uleb128 0x68
	.secrel32	.LASF6
	.byte	0xf
	.word	0x2c2
	.long	0x1ccd4
	.long	0x11bd7
	.long	0x11be2
	.uleb128 0x2
	.long	0x1ccc5
	.uleb128 0x1
	.long	0x224b
	.byte	0
	.uleb128 0x68
	.secrel32	.LASF103
	.byte	0xf
	.word	0x2cd
	.long	0x11a62
	.long	0x11bf6
	.long	0x11c01
	.uleb128 0x2
	.long	0x1ccd9
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF68
	.byte	0xf
	.word	0x221
	.byte	0xd
	.long	0x10ce0
	.byte	0x1
	.uleb128 0x11a
	.ascii "get\0"
	.byte	0xf
	.word	0x2d6
	.byte	0x7
	.long	0x11c01
	.byte	0x1
	.long	0x11c26
	.long	0x11c2c
	.uleb128 0x2
	.long	0x1ccd9
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF69
	.byte	0xf
	.word	0x223
	.byte	0xd
	.long	0x10912
	.byte	0x1
	.uleb128 0x4
	.long	0x11c2c
	.uleb128 0x68
	.secrel32	.LASF70
	.byte	0xf
	.word	0x2dc
	.long	0x1cce3
	.long	0x11c53
	.long	0x11c59
	.uleb128 0x2
	.long	0x1ccc5
	.byte	0
	.uleb128 0x68
	.secrel32	.LASF70
	.byte	0xf
	.word	0x2e2
	.long	0x1cce8
	.long	0x11c6d
	.long	0x11c73
	.uleb128 0x2
	.long	0x1ccd9
	.byte	0
	.uleb128 0x11b
	.secrel32	.LASF25
	.byte	0xf
	.word	0x2e7
	.byte	0x10
	.long	0x184a1
	.byte	0x1
	.long	0x11c8a
	.long	0x11c90
	.uleb128 0x2
	.long	0x1ccd9
	.byte	0
	.uleb128 0x68
	.secrel32	.LASF35
	.byte	0xf
	.word	0x2ef
	.long	0x11c01
	.long	0x11ca4
	.long	0x11caa
	.uleb128 0x2
	.long	0x1ccc5
	.byte	0
	.uleb128 0x5d
	.secrel32	.LASF71
	.byte	0xf
	.word	0x30a
	.byte	0xc
	.byte	0x1
	.long	0x11cbc
	.long	0x11cc7
	.uleb128 0x2
	.long	0x1ccc5
	.uleb128 0x1
	.long	0x224b
	.byte	0
	.uleb128 0x5d
	.secrel32	.LASF23
	.byte	0xf
	.word	0x310
	.byte	0x7
	.byte	0x1
	.long	0x11cd9
	.long	0x11ce4
	.uleb128 0x2
	.long	0x1ccc5
	.uleb128 0x1
	.long	0x1ccd4
	.byte	0
	.uleb128 0x11c
	.secrel32	.LASF65
	.byte	0xf
	.word	0x317
	.byte	0x7
	.byte	0x1
	.long	0x11cf7
	.long	0x11d02
	.uleb128 0x2
	.long	0x1ccc5
	.uleb128 0x1
	.long	0x1cced
	.byte	0
	.uleb128 0x11d
	.secrel32	.LASF6
	.byte	0xf
	.word	0x318
	.byte	0x13
	.long	0x1ccd4
	.byte	0x1
	.long	0x11d19
	.long	0x11d24
	.uleb128 0x2
	.long	0x1ccc5
	.uleb128 0x1
	.long	0x1cced
	.byte	0
	.uleb128 0x11e
	.ascii "unique_ptr<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*>\0"
	.byte	0xf
	.word	0x256
	.byte	0x2
	.byte	0x1
	.long	0x11da9
	.long	0x11db4
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x1cbe4
	.uleb128 0x57
	.ascii "_Vp\0"
	.long	0x10912
	.uleb128 0x2
	.long	0x1ccc5
	.uleb128 0x1
	.long	0x1cbe4
	.byte	0
	.uleb128 0x5d
	.secrel32	.LASF72
	.byte	0xf
	.word	0x244
	.byte	0xc
	.byte	0x1
	.long	0x11dcf
	.long	0x11dd5
	.uleb128 0x55
	.secrel32	.LASF73
	.long	0x10912
	.uleb128 0x2
	.long	0x1ccc5
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cd81
	.uleb128 0x9
	.ascii "_Dp\0"
	.long	0x10912
	.byte	0
	.uleb128 0x4
	.long	0x11a79
	.uleb128 0xdb
	.ascii "barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0xcc
	.long	0x1201c
	.uleb128 0x11f
	.ascii "__algorithm_t\0"
	.byte	0x11
	.byte	0xd0
	.byte	0xd
	.long	0x10e02
	.byte	0x8
	.uleb128 0x7c
	.ascii "_M_b\0"
	.byte	0x11
	.byte	0xd1
	.byte	0x15
	.long	0x11e34
	.byte	0x8
	.byte	0
	.uleb128 0xdc
	.ascii "max\0"
	.byte	0xe3
	.long	0x20b6
	.uleb128 0x120
	.ascii "barrier\0"
	.byte	0x11
	.byte	0xe7
	.byte	0x7
	.byte	0x1
	.long	0x11e7c
	.long	0x11e8c
	.uleb128 0x2
	.long	0x1cd24
	.uleb128 0x1
	.long	0x20b6
	.uleb128 0x1
	.long	0x22c1f
	.byte	0
	.uleb128 0x121
	.ascii "barrier\0"
	.byte	0x11
	.byte	0xeb
	.byte	0x7
	.byte	0x1
	.long	0x11ea2
	.long	0x11ead
	.uleb128 0x2
	.long	0x1cd24
	.uleb128 0x1
	.long	0x1cd2e
	.byte	0
	.uleb128 0x122
	.secrel32	.LASF6
	.byte	0x11
	.byte	0xec
	.byte	0x10
	.long	0x1cd33
	.byte	0x1
	.long	0x11ec3
	.long	0x11ece
	.uleb128 0x2
	.long	0x1cd24
	.uleb128 0x1
	.long	0x1cd2e
	.byte	0
	.uleb128 0x123
	.secrel32	.LASF123
	.byte	0x1
	.byte	0x11
	.byte	0xd4
	.byte	0xd
	.byte	0x1
	.long	0x11f81
	.uleb128 0xda
	.secrel32	.LASF123
	.byte	0x11
	.byte	0xd7
	.byte	0x2
	.long	0x11eee
	.long	0x11ef9
	.uleb128 0x2
	.long	0x1cf04
	.uleb128 0x1
	.long	0x1cd42
	.byte	0
	.uleb128 0x124
	.secrel32	.LASF6
	.byte	0x11
	.byte	0xd8
	.byte	0x11
	.long	0x1cf0e
	.byte	0x1
	.byte	0x1
	.long	0x11f10
	.long	0x11f1b
	.uleb128 0x2
	.long	0x1cf04
	.uleb128 0x1
	.long	0x1cd42
	.byte	0
	.uleb128 0x125
	.ascii "~arrival_token\0"
	.byte	0x11
	.byte	0xd9
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.long	0x11f39
	.long	0x11f44
	.uleb128 0x2
	.long	0x1cf04
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x126
	.secrel32	.LASF123
	.byte	0x11
	.byte	0xde
	.byte	0xb
	.long	0x11f55
	.long	0x11f60
	.uleb128 0x2
	.long	0x1cf04
	.uleb128 0x1
	.long	0x11f60
	.byte	0
	.uleb128 0xf
	.ascii "__token\0"
	.byte	0x11
	.byte	0xdd
	.byte	0x8
	.long	0x10f68
	.uleb128 0x13
	.ascii "_M_tok\0"
	.byte	0x11
	.byte	0xdf
	.byte	0xa
	.long	0x11f60
	.byte	0
	.byte	0
	.uleb128 0xde
	.ascii "arrive\0"
	.byte	0xef
	.long	0x11ece
	.long	0x11f97
	.long	0x11fa2
	.uleb128 0x2
	.long	0x1cd24
	.uleb128 0x1
	.long	0x20b6
	.byte	0
	.uleb128 0x6d
	.secrel32	.LASF29
	.byte	0x11
	.byte	0xf3
	.byte	0x7
	.long	0x11fb2
	.long	0x11fbd
	.uleb128 0x2
	.long	0x1cd38
	.uleb128 0x1
	.long	0x1cd42
	.byte	0
	.uleb128 0xdd
	.ascii "arrive_and_wait\0"
	.byte	0xf7
	.long	0x11fd8
	.long	0x11fde
	.uleb128 0x2
	.long	0x1cd24
	.byte	0
	.uleb128 0x6d
	.secrel32	.LASF124
	.byte	0x11
	.byte	0xfb
	.byte	0x7
	.long	0x11fee
	.long	0x11ff4
	.uleb128 0x2
	.long	0x1cd24
	.byte	0
	.uleb128 0xdf
	.ascii "~barrier\0"
	.long	0x12007
	.long	0x12012
	.uleb128 0x2
	.long	0x1cd24
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF125
	.long	0x22c1f
	.byte	0
	.uleb128 0x4
	.long	0x11ded
	.uleb128 0x1d
	.ascii "remove_reference<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x1
	.byte	0x25
	.word	0x65c
	.byte	0xc
	.long	0x1208b
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x65d
	.byte	0x15
	.long	0x22e56
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x22e56
	.byte	0
	.uleb128 0x1d
	.ascii "remove_reference<std::thread::id&>\0"
	.byte	0x1
	.byte	0x25
	.word	0x660
	.byte	0xc
	.long	0x120cf
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x661
	.byte	0x15
	.long	0x5df6
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x214ef
	.byte	0
	.uleb128 0x1d
	.ascii "ratio<1000000000, 1>\0"
	.byte	0x1
	.byte	0x32
	.word	0x10a
	.byte	0xc
	.long	0x1216d
	.uleb128 0xae
	.ascii "num\0"
	.word	0x111
	.ascii "_ZNSt5ratioILx1000000000ELx1EE3numE\0"
	.long	0x1848a
	.long	0x3b9aca00
	.uleb128 0x6b
	.ascii "den\0"
	.byte	0x32
	.word	0x114
	.byte	0x21
	.ascii "_ZNSt5ratioILx1000000000ELx1EE3denE\0"
	.long	0x1848a
	.byte	0x1
	.uleb128 0xaf
	.secrel32	.LASF74
	.long	0x114
	.long	0x3b9aca00
	.uleb128 0x28
	.secrel32	.LASF75
	.long	0x114
	.byte	0x1
	.byte	0
	.uleb128 0x19
	.ascii "common_type<std::chrono::duration<long long int, std::ratio<1, 1000> >, std::chrono::duration<long long int, std::ratio<1, 1000> > >\0"
	.byte	0x1
	.byte	0xc
	.byte	0x70
	.byte	0xc
	.long	0x12219
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0xc
	.byte	0x73
	.byte	0xd
	.long	0x846e
	.uleb128 0xb3
	.ascii "_Tp\0"
	.uleb128 0x10
	.long	0x846e
	.uleb128 0x10
	.long	0x846e
	.byte	0
	.byte	0
	.uleb128 0x19
	.ascii "__duration_common_type<std::common_type<long long int, long long int>, std::ratio<1, 1000>, std::ratio<1, 1>, void>\0"
	.byte	0x1
	.byte	0xc
	.byte	0x52
	.byte	0xc
	.long	0x122be
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0xc
	.byte	0x5d
	.byte	0xd
	.long	0x846e
	.uleb128 0x9
	.ascii "_CT\0"
	.long	0xa4b9
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0xa6a3
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.byte	0
	.uleb128 0x1d
	.ascii "remove_reference<MATRIX::cell*&>\0"
	.byte	0x1
	.byte	0x25
	.word	0x660
	.byte	0xc
	.long	0x12300
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x661
	.byte	0x15
	.long	0x1c737
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x20f79
	.byte	0
	.uleb128 0x1d
	.ascii "remove_reference<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()>&>\0"
	.byte	0x1
	.byte	0x25
	.word	0x660
	.byte	0xc
	.long	0x1236a
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x661
	.byte	0x15
	.long	0x22c1f
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1687e
	.byte	0
	.uleb128 0x19
	.ascii "_Head_base<0, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()>, false>\0"
	.byte	0x50
	.byte	0x16
	.byte	0xbb
	.byte	0xc
	.long	0x124f7
	.uleb128 0x61
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xbd
	.byte	0x11
	.long	0x123cf
	.long	0x123d5
	.uleb128 0x2
	.long	0x1cd8d
	.byte	0
	.uleb128 0x61
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc0
	.byte	0x11
	.long	0x123e5
	.long	0x123f0
	.uleb128 0x2
	.long	0x1cd8d
	.uleb128 0x1
	.long	0x1cd97
	.byte	0
	.uleb128 0x6c
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc3
	.byte	0x11
	.long	0x12400
	.long	0x1240b
	.uleb128 0x2
	.long	0x1cd8d
	.uleb128 0x1
	.long	0x1cd9c
	.byte	0
	.uleb128 0x6c
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc4
	.byte	0x11
	.long	0x1241b
	.long	0x12426
	.uleb128 0x2
	.long	0x1cd8d
	.uleb128 0x1
	.long	0x1cda1
	.byte	0
	.uleb128 0x61
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xcb
	.byte	0x7
	.long	0x12436
	.long	0x12446
	.uleb128 0x2
	.long	0x1cd8d
	.uleb128 0x1
	.long	0x20db
	.uleb128 0x1
	.long	0x212f
	.byte	0
	.uleb128 0x62
	.secrel32	.LASF108
	.byte	0x16
	.byte	0xe9
	.byte	0x7
	.long	0x1cda6
	.long	0x1245c
	.uleb128 0x1
	.long	0x1cdab
	.byte	0
	.uleb128 0x62
	.secrel32	.LASF108
	.byte	0x16
	.byte	0xec
	.byte	0x7
	.long	0x1cd97
	.long	0x12472
	.uleb128 0x1
	.long	0x1cd9c
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF109
	.byte	0x16
	.byte	0xee
	.byte	0xd
	.long	0x22e56
	.byte	0
	.uleb128 0x98
	.ascii "_Head_base<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x16
	.byte	0xc7
	.byte	0x13
	.long	0x124d8
	.long	0x124e3
	.uleb128 0x3
	.secrel32	.LASF126
	.long	0x22e56
	.uleb128 0x2
	.long	0x1cd8d
	.uleb128 0x1
	.long	0x14fc5
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x22e56
	.byte	0
	.uleb128 0x4
	.long	0x1236a
	.uleb128 0x1d
	.ascii "_Tuple_impl<0, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x50
	.byte	0x16
	.word	0x1a0
	.byte	0xc
	.long	0x126a1
	.uleb128 0x44
	.long	0x1236a
	.byte	0x3
	.uleb128 0x58
	.secrel32	.LASF108
	.word	0x1a8
	.byte	0x7
	.long	0x1cda6
	.long	0x12569
	.uleb128 0x1
	.long	0x1cdb0
	.byte	0
	.uleb128 0x58
	.secrel32	.LASF108
	.word	0x1ab
	.byte	0x7
	.long	0x1cd97
	.long	0x1257f
	.uleb128 0x1
	.long	0x1cdb5
	.byte	0
	.uleb128 0x8a
	.secrel32	.LASF112
	.word	0x1ae
	.byte	0x7
	.long	0x12590
	.long	0x12596
	.uleb128 0x2
	.long	0x1cdba
	.byte	0
	.uleb128 0xb7
	.secrel32	.LASF112
	.word	0x1b2
	.long	0x125a6
	.long	0x125b1
	.uleb128 0x2
	.long	0x1cdba
	.uleb128 0x1
	.long	0x1cd97
	.byte	0
	.uleb128 0x9a
	.secrel32	.LASF112
	.word	0x1bc
	.byte	0x11
	.long	0x125c2
	.long	0x125cd
	.uleb128 0x2
	.long	0x1cdba
	.uleb128 0x1
	.long	0x1cdb5
	.byte	0
	.uleb128 0xb8
	.secrel32	.LASF6
	.word	0x1c0
	.long	0x1cdb0
	.long	0x125e1
	.long	0x125ec
	.uleb128 0x2
	.long	0x1cdba
	.uleb128 0x1
	.long	0x1cdb5
	.byte	0
	.uleb128 0x8a
	.secrel32	.LASF112
	.word	0x1c6
	.byte	0x7
	.long	0x125fd
	.long	0x12608
	.uleb128 0x2
	.long	0x1cdba
	.uleb128 0x1
	.long	0x1cdc4
	.byte	0
	.uleb128 0x5d
	.secrel32	.LASF113
	.byte	0x16
	.word	0x220
	.byte	0x7
	.byte	0x2
	.long	0x1261a
	.long	0x12625
	.uleb128 0x2
	.long	0x1cdba
	.uleb128 0x1
	.long	0x1cdb0
	.byte	0
	.uleb128 0x127
	.ascii "_Tuple_impl<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x16
	.word	0x1b8
	.byte	0x2
	.long	0x12680
	.long	0x1268b
	.uleb128 0x3
	.secrel32	.LASF126
	.long	0x22e56
	.uleb128 0x2
	.long	0x1cdba
	.uleb128 0x1
	.long	0x14fc5
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF114
	.uleb128 0x10
	.long	0x22e56
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x124fc
	.uleb128 0xc5
	.secrel32	.LASF127
	.byte	0x50
	.byte	0x16
	.word	0x261
	.byte	0xb
	.long	0x12788
	.uleb128 0x44
	.long	0x124fc
	.byte	0x1
	.uleb128 0x8b
	.secrel32	.LASF118
	.byte	0x16
	.word	0x2f2
	.byte	0x11
	.long	0x126cd
	.long	0x126d8
	.uleb128 0x2
	.long	0x1cdc9
	.uleb128 0x1
	.long	0x1cdd3
	.byte	0
	.uleb128 0x8b
	.secrel32	.LASF118
	.byte	0x16
	.word	0x2f4
	.byte	0x11
	.long	0x126ea
	.long	0x126f5
	.uleb128 0x2
	.long	0x1cdc9
	.uleb128 0x1
	.long	0x1cdd8
	.byte	0
	.uleb128 0x68
	.secrel32	.LASF6
	.byte	0x16
	.word	0x382
	.long	0x1cddd
	.long	0x12709
	.long	0x12714
	.uleb128 0x2
	.long	0x1cdc9
	.uleb128 0x1
	.long	0x1278d
	.byte	0
	.uleb128 0x68
	.secrel32	.LASF6
	.byte	0x16
	.word	0x38d
	.long	0x1cddd
	.long	0x12728
	.long	0x12733
	.uleb128 0x2
	.long	0x1cdc9
	.uleb128 0x1
	.long	0x12799
	.byte	0
	.uleb128 0x5d
	.secrel32	.LASF23
	.byte	0x16
	.word	0x3ad
	.byte	0x7
	.byte	0x1
	.long	0x12745
	.long	0x12750
	.uleb128 0x2
	.long	0x1cdc9
	.uleb128 0x1
	.long	0x1cddd
	.byte	0
	.uleb128 0x5d
	.secrel32	.LASF127
	.byte	0x16
	.word	0x2e6
	.byte	0x2
	.byte	0x1
	.long	0x1277a
	.long	0x12785
	.uleb128 0x22
	.secrel32	.LASF129
	.long	0x12771
	.uleb128 0x10
	.long	0x22e56
	.byte	0
	.uleb128 0x48
	.secrel32	.LASF130
	.long	0x184a1
	.uleb128 0x2
	.long	0x1cdc9
	.uleb128 0x1
	.long	0x14fc5
	.byte	0
	.uleb128 0x89
	.byte	0
	.uleb128 0x4
	.long	0x126a6
	.uleb128 0x1a
	.secrel32	.LASF121
	.byte	0x25
	.byte	0x77
	.byte	0xb
	.long	0xc07
	.uleb128 0x1a
	.secrel32	.LASF121
	.byte	0x25
	.byte	0x77
	.byte	0xb
	.long	0xc13
	.uleb128 0x19
	.ascii "default_delete<std::thread::_State>\0"
	.byte	0x1
	.byte	0xf
	.byte	0x47
	.byte	0xc
	.long	0x1286d
	.uleb128 0x3a
	.secrel32	.LASF104
	.byte	0xf
	.byte	0x4a
	.byte	0x11
	.ascii "_ZNSt14default_deleteINSt6thread6_StateEEC4Ev\0"
	.long	0x12810
	.long	0x12816
	.uleb128 0x2
	.long	0x1cdf1
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF4
	.byte	0xf
	.byte	0x59
	.byte	0x7
	.ascii "_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_\0"
	.long	0x12858
	.long	0x12863
	.uleb128 0x2
	.long	0x1cdf6
	.uleb128 0x1
	.long	0x1ce00
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x61ba
	.byte	0
	.uleb128 0x4
	.long	0x127a5
	.uleb128 0x5f
	.ascii "__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >\0"
	.byte	0x8
	.byte	0xf
	.byte	0x8c
	.byte	0xb
	.long	0x12dcf
	.uleb128 0x19
	.ascii "_Ptr<std::thread::_State, std::default_delete<std::thread::_State>, void>\0"
	.byte	0x1
	.byte	0xf
	.byte	0x8f
	.byte	0x9
	.long	0x1293d
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0xf
	.byte	0x91
	.byte	0xa
	.long	0x1ce00
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x61ba
	.uleb128 0x9
	.ascii "_Ep\0"
	.long	0x127a5
	.byte	0
	.uleb128 0x97
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xa6
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC4Ev\0"
	.long	0x12994
	.long	0x1299a
	.uleb128 0x2
	.long	0x1cea5
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xa8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC4EPS1_\0"
	.byte	0x1
	.long	0x129f4
	.long	0x129ff
	.uleb128 0x2
	.long	0x1cea5
	.uleb128 0x1
	.long	0x129ff
	.byte	0
	.uleb128 0x75
	.secrel32	.LASF68
	.byte	0xf
	.byte	0xa0
	.byte	0xd
	.long	0x1291e
	.uleb128 0x31
	.secrel32	.LASF105
	.byte	0xf
	.byte	0xb0
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC4EOS4_\0"
	.byte	0x1
	.long	0x12a65
	.long	0x12a70
	.uleb128 0x2
	.long	0x1cea5
	.uleb128 0x1
	.long	0x1ceaf
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF6
	.byte	0xf
	.byte	0xb5
	.byte	0x18
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEaSEOS4_\0"
	.long	0x1ceb4
	.long	0x12acd
	.long	0x12ad8
	.uleb128 0x2
	.long	0x1cea5
	.uleb128 0x1
	.long	0x1ceaf
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF102
	.byte	0xf
	.byte	0xbd
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv\0"
	.long	0x1ceb9
	.long	0x12b37
	.long	0x12b3d
	.uleb128 0x2
	.long	0x1cea5
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF102
	.byte	0xf
	.byte	0xbf
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv\0"
	.long	0x129ff
	.long	0x12b9d
	.long	0x12ba3
	.uleb128 0x2
	.long	0x1cebe
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF106
	.byte	0xf
	.byte	0xc1
	.byte	0x12
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv\0"
	.long	0x1ce23
	.long	0x12c07
	.long	0x12c0d
	.uleb128 0x2
	.long	0x1cea5
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF106
	.byte	0xf
	.byte	0xc3
	.byte	0x12
	.ascii "_ZNKSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv\0"
	.long	0x1ce14
	.long	0x12c72
	.long	0x12c78
	.uleb128 0x2
	.long	0x1cebe
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF71
	.byte	0xf
	.byte	0xc6
	.byte	0xc
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE5resetEPS1_\0"
	.byte	0x1
	.long	0x12cd6
	.long	0x12ce1
	.uleb128 0x2
	.long	0x1cea5
	.uleb128 0x1
	.long	0x129ff
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF35
	.byte	0xf
	.byte	0xcf
	.byte	0xf
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE7releaseEv\0"
	.long	0x129ff
	.long	0x12d41
	.long	0x12d47
	.uleb128 0x2
	.long	0x1cea5
	.byte	0
	.uleb128 0x31
	.secrel32	.LASF23
	.byte	0xf
	.byte	0xd8
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE4swapERS4_\0"
	.byte	0x1
	.long	0x12da4
	.long	0x12daf
	.uleb128 0x2
	.long	0x1cea5
	.uleb128 0x1
	.long	0x1ceb4
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF62
	.byte	0xf
	.byte	0xe0
	.byte	0x1b
	.long	0x13c17
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x61ba
	.uleb128 0x9
	.ascii "_Dp\0"
	.long	0x127a5
	.byte	0
	.uleb128 0x4
	.long	0x12872
	.uleb128 0x19
	.ascii "_Head_base<1, std::default_delete<std::thread::_State>, true>\0"
	.byte	0x1
	.byte	0x16
	.byte	0x4e
	.byte	0xc
	.long	0x1311a
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x50
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC4Ev\0"
	.long	0x12e71
	.long	0x12e77
	.uleb128 0x2
	.long	0x1ce0a
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x53
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC4ERKS3_\0"
	.long	0x12ed1
	.long	0x12edc
	.uleb128 0x2
	.long	0x1ce0a
	.uleb128 0x1
	.long	0x1ce14
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x56
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC4ERKS4_\0"
	.long	0x12f36
	.long	0x12f41
	.uleb128 0x2
	.long	0x1ce0a
	.uleb128 0x1
	.long	0x1ce19
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x57
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC4EOS4_\0"
	.long	0x12f9a
	.long	0x12fa5
	.uleb128 0x2
	.long	0x1ce0a
	.uleb128 0x1
	.long	0x1ce1e
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0x5e
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0x1301e
	.long	0x1302e
	.uleb128 0x2
	.long	0x1ce0a
	.uleb128 0x1
	.long	0x20db
	.uleb128 0x1
	.long	0x212f
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0x7c
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_\0"
	.long	0x1ce23
	.long	0x13093
	.uleb128 0x1
	.long	0x1ce28
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0x7f
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERKS4_\0"
	.long	0x1ce14
	.long	0x130f9
	.uleb128 0x1
	.long	0x1ce19
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF109
	.byte	0x16
	.byte	0x81
	.byte	0x27
	.long	0x127a5
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x127a5
	.byte	0
	.uleb128 0x4
	.long	0x12dd4
	.uleb128 0x1d
	.ascii "_Tuple_impl<1, std::default_delete<std::thread::_State> >\0"
	.byte	0x1
	.byte	0x16
	.word	0x1a0
	.byte	0xc
	.long	0x134a6
	.uleb128 0x44
	.long	0x12dd4
	.byte	0x3
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x1a8
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_\0"
	.long	0x1ce23
	.long	0x131cd
	.uleb128 0x1
	.long	0x1ce2d
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x1ab
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERKS4_\0"
	.long	0x1ce14
	.long	0x13232
	.uleb128 0x1
	.long	0x1ce32
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1ae
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC4Ev\0"
	.long	0x13288
	.long	0x1328e
	.uleb128 0x2
	.long	0x1ce37
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1b2
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC4ERKS3_\0"
	.long	0x132e8
	.long	0x132f3
	.uleb128 0x2
	.long	0x1ce37
	.uleb128 0x1
	.long	0x1ce14
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1bc
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC4ERKS4_\0"
	.long	0x1334d
	.long	0x13358
	.uleb128 0x2
	.long	0x1ce37
	.uleb128 0x1
	.long	0x1ce32
	.byte	0
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x16
	.word	0x1c0
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEaSERKS4_\0"
	.long	0x1ce2d
	.long	0x133b6
	.long	0x133c1
	.uleb128 0x2
	.long	0x1ce37
	.uleb128 0x1
	.long	0x1ce32
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF112
	.byte	0x16
	.word	0x1c6
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC4EOS4_\0"
	.long	0x1341a
	.long	0x13425
	.uleb128 0x2
	.long	0x1ce37
	.uleb128 0x1
	.long	0x1ce41
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF113
	.byte	0x16
	.word	0x220
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEE7_M_swapERS4_\0"
	.byte	0x2
	.long	0x13485
	.long	0x13490
	.uleb128 0x2
	.long	0x1ce37
	.uleb128 0x1
	.long	0x1ce2d
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0x1
	.uleb128 0x41
	.secrel32	.LASF114
	.uleb128 0x10
	.long	0x127a5
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x1311f
	.uleb128 0x19
	.ascii "_Head_base<0, std::thread::_State*, false>\0"
	.byte	0x8
	.byte	0x16
	.byte	0xbb
	.byte	0xc
	.long	0x13759
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xbd
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC4Ev\0"
	.long	0x13522
	.long	0x13528
	.uleb128 0x2
	.long	0x1ce46
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc0
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC4ERKS2_\0"
	.long	0x1356f
	.long	0x1357a
	.uleb128 0x2
	.long	0x1ce46
	.uleb128 0x1
	.long	0x1ce50
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc3
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC4ERKS3_\0"
	.long	0x135c1
	.long	0x135cc
	.uleb128 0x2
	.long	0x1ce46
	.uleb128 0x1
	.long	0x1ce55
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xc4
	.byte	0x11
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC4EOS3_\0"
	.long	0x13612
	.long	0x1361d
	.uleb128 0x2
	.long	0x1ce46
	.uleb128 0x1
	.long	0x1ce5a
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF107
	.byte	0x16
	.byte	0xcb
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC4ESt15allocator_arg_tSt13__uses_alloc0\0"
	.long	0x13683
	.long	0x13693
	.uleb128 0x2
	.long	0x1ce46
	.uleb128 0x1
	.long	0x20db
	.uleb128 0x1
	.long	0x212f
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0xe9
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERS3_\0"
	.long	0x1ce5f
	.long	0x136e5
	.uleb128 0x1
	.long	0x1ce64
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF108
	.byte	0x16
	.byte	0xec
	.byte	0x7
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EE7_M_headERKS3_\0"
	.long	0x1ce50
	.long	0x13738
	.uleb128 0x1
	.long	0x1ce55
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF109
	.byte	0x16
	.byte	0xee
	.byte	0xd
	.long	0x1ce00
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1ce00
	.byte	0
	.uleb128 0x4
	.long	0x134ab
	.uleb128 0x1d
	.ascii "_Tuple_impl<0, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x8
	.byte	0x16
	.word	0x102
	.byte	0xc
	.long	0x13c12
	.uleb128 0x45
	.long	0x1311f
	.uleb128 0x44
	.long	0x134ab
	.byte	0x3
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x10c
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_\0"
	.long	0x1ce5f
	.long	0x1382b
	.uleb128 0x1
	.long	0x1ce69
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF108
	.word	0x10f
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERKS5_\0"
	.long	0x1ce50
	.long	0x13894
	.uleb128 0x1
	.long	0x1ce6e
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF115
	.byte	0x16
	.word	0x108
	.byte	0x2f
	.long	0x1311f
	.uleb128 0x4
	.long	0x13894
	.uleb128 0x2f
	.secrel32	.LASF116
	.word	0x112
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_tailERS5_\0"
	.long	0x1ce73
	.long	0x1390e
	.uleb128 0x1
	.long	0x1ce69
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF116
	.word	0x115
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_tailERKS5_\0"
	.long	0x1ce78
	.long	0x13977
	.uleb128 0x1
	.long	0x1ce6e
	.byte	0
	.uleb128 0x27
	.secrel32	.LASF112
	.byte	0x16
	.word	0x117
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC4Ev\0"
	.long	0x139d1
	.long	0x139d7
	.uleb128 0x2
	.long	0x1ce7d
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF112
	.byte	0x16
	.word	0x11b
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC4ERKS2_RKS4_\0"
	.long	0x13a3a
	.long	0x13a4a
	.uleb128 0x2
	.long	0x1ce7d
	.uleb128 0x1
	.long	0x1ce50
	.uleb128 0x1
	.long	0x1ce14
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF112
	.byte	0x16
	.word	0x127
	.byte	0x11
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC4ERKS5_\0"
	.long	0x13aa8
	.long	0x13ab3
	.uleb128 0x2
	.long	0x1ce7d
	.uleb128 0x1
	.long	0x1ce6e
	.byte	0
	.uleb128 0x56
	.secrel32	.LASF6
	.byte	0x16
	.word	0x12b
	.byte	0x14
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEaSERKS5_\0"
	.long	0x1ce69
	.long	0x13b15
	.long	0x13b20
	.uleb128 0x2
	.long	0x1ce7d
	.uleb128 0x1
	.long	0x1ce6e
	.byte	0
	.uleb128 0x34
	.secrel32	.LASF112
	.byte	0x16
	.word	0x12d
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC4EOS5_\0"
	.long	0x13b7d
	.long	0x13b88
	.uleb128 0x2
	.long	0x1ce7d
	.uleb128 0x1
	.long	0x1ce87
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF113
	.byte	0x16
	.word	0x196
	.byte	0x7
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_swapERS5_\0"
	.byte	0x2
	.long	0x13bec
	.long	0x13bf7
	.uleb128 0x2
	.long	0x1ce7d
	.uleb128 0x1
	.long	0x1ce69
	.byte	0
	.uleb128 0x28
	.secrel32	.LASF110
	.long	0xf5
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF114
	.uleb128 0x10
	.long	0x1ce00
	.uleb128 0x10
	.long	0x127a5
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x1375e
	.uleb128 0x6a
	.ascii "tuple<std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x16
	.word	0x3d5
	.long	0x13f1e
	.uleb128 0x44
	.long	0x1375e
	.byte	0x1
	.uleb128 0xb5
	.secrel32	.LASF117
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEE31__nothrow_default_constructibleEv\0"
	.long	0x184a1
	.uleb128 0x67
	.secrel32	.LASF118
	.byte	0x16
	.word	0x440
	.byte	0x11
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC4ERKS5_\0"
	.long	0x13d26
	.long	0x13d31
	.uleb128 0x2
	.long	0x1ce8c
	.uleb128 0x1
	.long	0x1ce96
	.byte	0
	.uleb128 0x67
	.secrel32	.LASF118
	.byte	0x16
	.word	0x442
	.byte	0x11
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC4EOS5_\0"
	.long	0x13d83
	.long	0x13d8e
	.uleb128 0x2
	.long	0x1ce8c
	.uleb128 0x1
	.long	0x1ce9b
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF6
	.byte	0x16
	.word	0x4f3
	.byte	0x7
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEaSERKS5_\0"
	.long	0x1cea0
	.long	0x13de5
	.long	0x13df0
	.uleb128 0x2
	.long	0x1ce8c
	.uleb128 0x1
	.long	0x13f23
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF6
	.byte	0x16
	.word	0x4fe
	.byte	0x7
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEaSEOS5_\0"
	.long	0x1cea0
	.long	0x13e46
	.long	0x13e51
	.uleb128 0x2
	.long	0x1ce8c
	.uleb128 0x1
	.long	0x13f2f
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF23
	.byte	0x16
	.word	0x533
	.byte	0x7
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEE4swapERS5_\0"
	.byte	0x1
	.long	0x13ea7
	.long	0x13eb2
	.uleb128 0x2
	.long	0x1ce8c
	.uleb128 0x1
	.long	0x1cea0
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF119
	.byte	0x16
	.word	0x419
	.byte	0x2
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC4ILb1ELb1EEEv\0"
	.byte	0x1
	.long	0x13f15
	.long	0x13f1b
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0x2
	.long	0x1ce8c
	.byte	0
	.uleb128 0x89
	.byte	0
	.uleb128 0x4
	.long	0x13c17
	.uleb128 0x1a
	.secrel32	.LASF121
	.byte	0x25
	.byte	0x77
	.byte	0xb
	.long	0x2a33
	.uleb128 0x1a
	.secrel32	.LASF121
	.byte	0x25
	.byte	0x77
	.byte	0xb
	.long	0x2a3f
	.uleb128 0x19
	.ascii "__uniq_ptr_data<std::thread::_State, std::default_delete<std::thread::_State>, true, true>\0"
	.byte	0x8
	.byte	0xf
	.byte	0xe7
	.byte	0xc
	.long	0x14117
	.uleb128 0x45
	.long	0x12872
	.uleb128 0x3a
	.secrel32	.LASF122
	.byte	0xf
	.byte	0xea
	.byte	0x7
	.ascii "_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EEC4EOS4_\0"
	.long	0x14005
	.long	0x14010
	.uleb128 0x2
	.long	0x1cec3
	.uleb128 0x1
	.long	0x1cecd
	.byte	0
	.uleb128 0xb6
	.secrel32	.LASF6
	.ascii "_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EEaSEOS4_\0"
	.long	0x1ced2
	.long	0x14073
	.long	0x1407e
	.uleb128 0x2
	.long	0x1cec3
	.uleb128 0x1
	.long	0x1cecd
	.byte	0
	.uleb128 0x99
	.secrel32	.LASF122
	.ascii "_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI4St15__uniq_ptr_implIS1_S3_EEPS1_\0"
	.long	0x140f9
	.long	0x14104
	.uleb128 0x2
	.long	0x1cec3
	.uleb128 0x1
	.long	0x129ff
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x61ba
	.uleb128 0x9
	.ascii "_Dp\0"
	.long	0x127a5
	.byte	0
	.uleb128 0x1d
	.ascii "__add_lvalue_reference_helper<std::thread::_State, true>\0"
	.byte	0x1
	.byte	0x25
	.word	0x66c
	.byte	0xc
	.long	0x14171
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x66d
	.byte	0x16
	.long	0x1ced7
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x61ba
	.byte	0
	.uleb128 0x19
	.ascii "_Nth_type<0, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x1
	.byte	0x36
	.byte	0xe8
	.byte	0xc
	.long	0x14200
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x36
	.byte	0xe9
	.byte	0xd
	.long	0x1c746
	.uleb128 0x1b
	.ascii "_Np\0"
	.long	0xf5
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF131
	.uleb128 0x10
	.long	0x1c746
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "tuple_element<0, std::tuple<MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> > >\0"
	.byte	0x1
	.byte	0x16
	.word	0x54b
	.byte	0xc
	.long	0x1429b
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x16
	.word	0x54f
	.byte	0xd
	.long	0x141d9
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xdba4
	.byte	0
	.uleb128 0x19
	.ascii "_Nth_type<1, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x1
	.byte	0x36
	.byte	0xec
	.byte	0xc
	.long	0x1432a
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x36
	.byte	0xed
	.byte	0xd
	.long	0xc3c5
	.uleb128 0x1b
	.ascii "_Np\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x41
	.secrel32	.LASF131
	.uleb128 0x10
	.long	0x1c746
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "tuple_element<1, std::tuple<MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> > >\0"
	.byte	0x1
	.byte	0x16
	.word	0x54b
	.byte	0xc
	.long	0x143c5
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x16
	.word	0x54f
	.byte	0xd
	.long	0x14303
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xdba4
	.byte	0
	.uleb128 0x19
	.ascii "_Nth_type<0, std::thread*, std::default_delete<std::thread []> >\0"
	.byte	0x1
	.byte	0x36
	.byte	0xe8
	.byte	0xc
	.long	0x14436
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x36
	.byte	0xe9
	.byte	0xd
	.long	0x19630
	.uleb128 0x1b
	.ascii "_Np\0"
	.long	0xf5
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF131
	.uleb128 0x10
	.long	0x19630
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "tuple_element<0, std::tuple<std::thread*, std::default_delete<std::thread []> > >\0"
	.byte	0x1
	.byte	0x16
	.word	0x54b
	.byte	0xc
	.long	0x144b3
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x16
	.word	0x54f
	.byte	0xd
	.long	0x1440f
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xfe0d
	.byte	0
	.uleb128 0x19
	.ascii "_Nth_type<0, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x1
	.byte	0x36
	.byte	0xe8
	.byte	0xc
	.long	0x145ba
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x36
	.byte	0xe9
	.byte	0xd
	.long	0x1cbe4
	.uleb128 0x1b
	.ascii "_Np\0"
	.long	0xf5
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF131
	.uleb128 0x10
	.long	0x1cbe4
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "tuple_element<0, std::tuple<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> > >\0"
	.byte	0x1
	.byte	0x16
	.word	0x54b
	.byte	0xc
	.long	0x146cd
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x16
	.word	0x54f
	.byte	0xd
	.long	0x14593
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x116ae
	.byte	0
	.uleb128 0x1d
	.ascii "remove_reference<std::thread::_State*&>\0"
	.byte	0x1
	.byte	0x25
	.word	0x660
	.byte	0xc
	.long	0x14716
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x661
	.byte	0x15
	.long	0x1ce00
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1ce5f
	.byte	0
	.uleb128 0x1d
	.ascii "enable_if<true, std::chrono::duration<long long int, std::ratio<1, 1000> > >\0"
	.byte	0x1
	.byte	0x25
	.word	0x8b9
	.byte	0xc
	.long	0x14784
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x8ba
	.byte	0x13
	.long	0x846e
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x846e
	.byte	0
	.uleb128 0x19
	.ascii "_Nth_type<1, std::thread*, std::default_delete<std::thread []> >\0"
	.byte	0x1
	.byte	0x36
	.byte	0xec
	.byte	0xc
	.long	0x147f5
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x36
	.byte	0xed
	.byte	0xd
	.long	0xeac3
	.uleb128 0x1b
	.ascii "_Np\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x41
	.secrel32	.LASF131
	.uleb128 0x10
	.long	0x19630
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "tuple_element<1, std::tuple<std::thread*, std::default_delete<std::thread []> > >\0"
	.byte	0x1
	.byte	0x16
	.word	0x54b
	.byte	0xc
	.long	0x14872
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x16
	.word	0x54f
	.byte	0xd
	.long	0x147ce
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xfe0d
	.byte	0
	.uleb128 0x19
	.ascii "_Nth_type<1, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x1
	.byte	0x36
	.byte	0xec
	.byte	0xc
	.long	0x14979
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x36
	.byte	0xed
	.byte	0xd
	.long	0x10912
	.uleb128 0x1b
	.ascii "_Np\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x41
	.secrel32	.LASF131
	.uleb128 0x10
	.long	0x1cbe4
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "tuple_element<1, std::tuple<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> > >\0"
	.byte	0x1
	.byte	0x16
	.word	0x54b
	.byte	0xc
	.long	0x14a8c
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x16
	.word	0x54f
	.byte	0xd
	.long	0x14952
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x116ae
	.byte	0
	.uleb128 0x1d
	.ascii "remove_reference<std::__barrier_phase_t&>\0"
	.byte	0x1
	.byte	0x25
	.word	0x660
	.byte	0xc
	.long	0x14ad7
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x661
	.byte	0x15
	.long	0xaa56
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1bd29
	.byte	0
	.uleb128 0x19
	.ascii "_Nth_type<0, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x1
	.byte	0x36
	.byte	0xe8
	.byte	0xc
	.long	0x14b55
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x36
	.byte	0xe9
	.byte	0xd
	.long	0x1ce00
	.uleb128 0x1b
	.ascii "_Np\0"
	.long	0xf5
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF131
	.uleb128 0x10
	.long	0x1ce00
	.uleb128 0x10
	.long	0x127a5
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "tuple_element<0, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >\0"
	.byte	0x1
	.byte	0x16
	.word	0x54b
	.byte	0xc
	.long	0x14bdf
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x16
	.word	0x54f
	.byte	0xd
	.long	0x14b2e
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x13c17
	.byte	0
	.uleb128 0x19
	.ascii "_Nth_type<1, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x1
	.byte	0x36
	.byte	0xec
	.byte	0xc
	.long	0x14c5d
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x36
	.byte	0xed
	.byte	0xd
	.long	0x127a5
	.uleb128 0x1b
	.ascii "_Np\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x41
	.secrel32	.LASF131
	.uleb128 0x10
	.long	0x1ce00
	.uleb128 0x10
	.long	0x127a5
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "tuple_element<1, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >\0"
	.byte	0x1
	.byte	0x16
	.word	0x54b
	.byte	0xc
	.long	0x14ce7
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x16
	.word	0x54f
	.byte	0xd
	.long	0x14c36
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x13c17
	.byte	0
	.uleb128 0x1d
	.ascii "remove_volatile<std::__barrier_phase_t>\0"
	.byte	0x1
	.byte	0x25
	.word	0x611
	.byte	0xc
	.long	0x14d30
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x612
	.byte	0x17
	.long	0xaa56
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.byte	0
	.uleb128 0x19
	.ascii "_Index_tuple<0>\0"
	.byte	0x1
	.byte	0x36
	.byte	0x8c
	.byte	0x27
	.long	0x14d5f
	.uleb128 0x128
	.ascii "_Indexes\0"
	.byte	0x36
	.byte	0x8c
	.byte	0x16
	.uleb128 0xa9
	.long	0xf5
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "remove_reference<std::tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >&>\0"
	.byte	0x1
	.byte	0x25
	.word	0x660
	.byte	0xc
	.long	0x14dd6
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x25
	.word	0x661
	.byte	0x15
	.long	0x126a6
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cddd
	.byte	0
	.uleb128 0x19
	.ascii "_Nth_type<0, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x1
	.byte	0x36
	.byte	0xe8
	.byte	0xc
	.long	0x14e46
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x36
	.byte	0xe9
	.byte	0xd
	.long	0x22e56
	.uleb128 0x1b
	.ascii "_Np\0"
	.long	0xf5
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF131
	.uleb128 0x10
	.long	0x22e56
	.byte	0
	.byte	0
	.uleb128 0x1d
	.ascii "tuple_element<0, std::tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> > >\0"
	.byte	0x1
	.byte	0x16
	.word	0x54b
	.byte	0xc
	.long	0x14ec7
	.uleb128 0x23
	.secrel32	.LASF2
	.byte	0x16
	.word	0x54f
	.byte	0xd
	.long	0x14e24
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x126a6
	.byte	0
	.uleb128 0xcd
	.ascii "__throw_system_error\0"
	.byte	0x37
	.byte	0x69
	.byte	0x3
	.ascii "_ZSt20__throw_system_errori\0"
	.long	0x14f07
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0x129
	.secrel32	.LASF132
	.byte	0x38
	.byte	0x50
	.byte	0x8
	.secrel32	.LASF222
	.uleb128 0x29
	.ascii "_Hash_bytes\0"
	.byte	0x39
	.byte	0x2f
	.byte	0x3
	.ascii "_ZSt11_Hash_bytesPKvyy\0"
	.long	0xe33
	.long	0x14f53
	.uleb128 0x1
	.long	0x525
	.uleb128 0x1
	.long	0xe33
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0xe0
	.ascii "__invoke_impl<void, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x3c
	.long	0x14fcb
	.uleb128 0xe1
	.ascii "_Res\0"
	.uleb128 0x9
	.ascii "_Fn\0"
	.long	0x22e56
	.uleb128 0x43
	.secrel32	.LASF128
	.uleb128 0x1
	.long	0xe48
	.uleb128 0x1
	.long	0x14fc5
	.uleb128 0x1f
	.long	0x22e56
	.byte	0
	.uleb128 0x54
	.ascii "__get_helper<0, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x16
	.word	0x554
	.byte	0x5
	.long	0x1cda6
	.long	0x1503e
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x22e56
	.uleb128 0x43
	.secrel32	.LASF133
	.uleb128 0x1
	.long	0x1cdb0
	.byte	0
	.uleb128 0xe0
	.ascii "__invoke<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x5a
	.long	0x1509a
	.uleb128 0x3
	.secrel32	.LASF64
	.long	0x22e56
	.uleb128 0x43
	.secrel32	.LASF128
	.uleb128 0x1
	.long	0x14fc5
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF134
	.byte	0x36
	.byte	0x54
	.byte	0xb
	.long	0x14ea6
	.uleb128 0x54
	.ascii "get<0, WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x16
	.word	0x570
	.byte	0x5
	.long	0x1d840
	.long	0x15111
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x1510b
	.uleb128 0x10
	.long	0x22e56
	.byte	0
	.uleb128 0x1
	.long	0x1cdd8
	.byte	0
	.uleb128 0x88
	.ascii "move<std::tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >&>\0"
	.byte	0x12
	.byte	0x68
	.byte	0x5
	.long	0x1d88a
	.long	0x15177
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cddd
	.uleb128 0x1
	.long	0x1cddd
	.byte	0
	.uleb128 0x58
	.secrel32	.LASF135
	.word	0x559
	.byte	0x5
	.long	0x1cc34
	.long	0x151af
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1cbe4
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x151a9
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.uleb128 0x1
	.long	0x1cc52
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF134
	.byte	0x36
	.byte	0x54
	.byte	0xb
	.long	0x146ac
	.uleb128 0x4
	.long	0x151af
	.uleb128 0x58
	.secrel32	.LASF136
	.word	0x56a
	.byte	0x5
	.long	0x1da7a
	.long	0x151f4
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x151ee
	.uleb128 0x10
	.long	0x1cbe4
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.uleb128 0x1
	.long	0x1cc7a
	.byte	0
	.uleb128 0x85
	.ascii "__atomic_impl\0"
	.byte	0x9
	.word	0x3ad
	.byte	0xd
	.long	0x154bb
	.uleb128 0x25
	.ascii "compare_exchange_strong<std::__barrier_phase_t>\0"
	.byte	0x9
	.word	0x3e7
	.byte	0x7
	.ascii "_ZNSt13__atomic_impl23compare_exchange_strongISt17__barrier_phase_tEEbPT_RNSt15remove_volatileIS2_E4typeES6_St12memory_orderS8_\0"
	.long	0x184a1
	.long	0x152ec
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x1
	.long	0x1bd38
	.uleb128 0x1
	.long	0x1dc1c
	.uleb128 0x1
	.long	0x152ec
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x21
	.ascii "_Val\0"
	.byte	0x9
	.word	0x3b1
	.byte	0xd
	.long	0x154bb
	.uleb128 0x8c
	.ascii "notify_all<std::__barrier_phase_t>\0"
	.byte	0x9
	.word	0x407
	.byte	0x7
	.ascii "_ZNSt13__atomic_impl10notify_allISt17__barrier_phase_tEEvPKT_\0"
	.long	0x15374
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x1
	.long	0x1bd9e
	.byte	0
	.uleb128 0x8c
	.ascii "store<std::__barrier_phase_t>\0"
	.byte	0x9
	.word	0x3c1
	.byte	0x7
	.ascii "_ZNSt13__atomic_impl5storeISt17__barrier_phase_tEEvPT_NSt15remove_volatileIS2_E4typeESt12memory_order\0"
	.long	0x1541b
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x1
	.long	0x1bd38
	.uleb128 0x1
	.long	0x152ec
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0xb2
	.ascii "load<std::__barrier_phase_t>\0"
	.byte	0x9
	.word	0x3c6
	.ascii "_ZNSt13__atomic_impl4loadISt17__barrier_phase_tEENSt15remove_volatileIT_E4typeEPKS3_St12memory_order\0"
	.long	0x152ec
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x1
	.long	0x1bd9e
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.byte	0
	.uleb128 0x21
	.ascii "remove_volatile_t\0"
	.byte	0x25
	.word	0x645
	.byte	0xb
	.long	0x14d19
	.uleb128 0x8c
	.ascii "__atomic_notify_address<std::__barrier_phase_t>\0"
	.byte	0x8
	.word	0x1c9
	.byte	0x5
	.ascii "_ZSt23__atomic_notify_addressISt17__barrier_phase_tEvPKT_b\0"
	.long	0x1555f
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x1
	.long	0x1bd9e
	.uleb128 0x1
	.long	0x184a1
	.byte	0
	.uleb128 0x25
	.ascii "__get_helper<1, std::default_delete<std::thread::_State> >\0"
	.byte	0x16
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE\0"
	.long	0x1ce23
	.long	0x1562a
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x127a5
	.uleb128 0x43
	.secrel32	.LASF133
	.uleb128 0x1
	.long	0x1ce2d
	.byte	0
	.uleb128 0x29
	.ascii "__addressof<std::__barrier_phase_t>\0"
	.byte	0x12
	.byte	0x31
	.byte	0x5
	.ascii "_ZSt11__addressofISt17__barrier_phase_tEPT_RS1_\0"
	.long	0x1bd38
	.long	0x15699
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x1
	.long	0x1bd29
	.byte	0
	.uleb128 0x29
	.ascii "__addressof<const std::__barrier_phase_t>\0"
	.byte	0x12
	.byte	0x31
	.byte	0x5
	.ascii "_ZSt11__addressofIKSt17__barrier_phase_tEPT_RS2_\0"
	.long	0x1bd9e
	.long	0x1570f
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa71
	.uleb128 0x1
	.long	0x1bd8f
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF134
	.byte	0x36
	.byte	0x54
	.byte	0xb
	.long	0x14cc6
	.uleb128 0x25
	.ascii "get<1, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x16
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_\0"
	.long	0x1e886
	.long	0x15803
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x157fd
	.uleb128 0x10
	.long	0x1ce00
	.uleb128 0x10
	.long	0x127a5
	.byte	0
	.uleb128 0x1
	.long	0x1cea0
	.byte	0
	.uleb128 0x25
	.ascii "__get_helper<0, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x16
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE\0"
	.long	0x1ce5f
	.long	0x158f2
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1ce00
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x158ec
	.uleb128 0x10
	.long	0x127a5
	.byte	0
	.uleb128 0x1
	.long	0x1ce69
	.byte	0
	.uleb128 0x12a
	.ascii "__atomic_wait_address<std::__barrier_phase_t, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::wait(arrival_token&&) const::<lambda()> >\0"
	.byte	0x8
	.word	0x1ac
	.byte	0x5
	.long	0x159be
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x1f68f
	.uleb128 0x1
	.long	0x1bd9e
	.uleb128 0x1
	.long	0x1f68f
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF137
	.word	0x559
	.byte	0x5
	.ascii "_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE\0"
	.long	0x1cb26
	.long	0x15a5a
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x19630
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x15a54
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.uleb128 0x1
	.long	0x1cb44
	.byte	0
	.uleb128 0x54
	.ascii "__get_helper<1, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x16
	.word	0x554
	.byte	0x5
	.long	0x1cc07
	.long	0x15b06
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x10912
	.uleb128 0x43
	.secrel32	.LASF133
	.uleb128 0x1
	.long	0x1cc11
	.byte	0
	.uleb128 0x25
	.ascii "__get_helper<1, std::default_delete<std::thread []> >\0"
	.byte	0x16
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy1ESt14default_deleteIA_St6threadEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE\0"
	.long	0x1caf9
	.long	0x15bc5
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0xeac3
	.uleb128 0x43
	.secrel32	.LASF133
	.uleb128 0x1
	.long	0x1cb03
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF138
	.word	0x559
	.byte	0x5
	.ascii "_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE\0"
	.long	0x1c796
	.long	0x15c75
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1c746
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x15c6f
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.uleb128 0x1
	.long	0x1c7b4
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF134
	.byte	0x36
	.byte	0x54
	.byte	0xb
	.long	0x14bbe
	.uleb128 0x25
	.ascii "get<0, std::thread::_State*, std::default_delete<std::thread::_State> >\0"
	.byte	0x16
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_\0"
	.long	0x1f318
	.long	0x15d69
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x15d63
	.uleb128 0x10
	.long	0x1ce00
	.uleb128 0x10
	.long	0x127a5
	.byte	0
	.uleb128 0x1
	.long	0x1cea0
	.byte	0
	.uleb128 0x29
	.ascii "move<std::__barrier_phase_t&>\0"
	.byte	0x12
	.byte	0x68
	.byte	0x5
	.ascii "_ZSt4moveIRSt17__barrier_phase_tEONSt16remove_referenceIT_E4typeEOS3_\0"
	.long	0x1f784
	.long	0x15de8
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1bd29
	.uleb128 0x1
	.long	0x1bd29
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF134
	.byte	0x36
	.byte	0x54
	.byte	0xb
	.long	0x14492
	.uleb128 0x4
	.long	0x15de8
	.uleb128 0x2f
	.secrel32	.LASF139
	.word	0x56a
	.byte	0x5
	.ascii "_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_\0"
	.long	0x1f7bd
	.long	0x15e97
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x15e91
	.uleb128 0x10
	.long	0x19630
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.uleb128 0x1
	.long	0x1cb6c
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF134
	.byte	0x36
	.byte	0x54
	.byte	0xb
	.long	0x14a6b
	.uleb128 0x54
	.ascii "get<1, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x16
	.word	0x564
	.byte	0x5
	.long	0x1f80c
	.long	0x15fa5
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x15f9f
	.uleb128 0x10
	.long	0x1cbe4
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.uleb128 0x1
	.long	0x1cc84
	.byte	0
	.uleb128 0x58
	.secrel32	.LASF135
	.word	0x554
	.byte	0x5
	.long	0x1cc43
	.long	0x15fdd
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1cbe4
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x15fd7
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.uleb128 0x1
	.long	0x1cc4d
	.byte	0
	.uleb128 0x88
	.ascii "forward<std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
	.byte	0x12
	.byte	0x4d
	.byte	0x5
	.long	0x1f8a9
	.long	0x16072
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x10912
	.uleb128 0x1
	.long	0x1f8ae
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF134
	.byte	0x36
	.byte	0x54
	.byte	0xb
	.long	0x14851
	.uleb128 0x25
	.ascii "get<1, std::thread*, std::default_delete<std::thread []> >\0"
	.byte	0x16
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy1EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_\0"
	.long	0x1fa8a
	.long	0x16152
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x1614c
	.uleb128 0x10
	.long	0x19630
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.uleb128 0x1
	.long	0x1cb76
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF137
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy0EPSt6threadJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE\0"
	.long	0x1cb35
	.long	0x161ec
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x19630
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x161e6
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.uleb128 0x1
	.long	0x1cb3f
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF134
	.byte	0x36
	.byte	0x54
	.byte	0xb
	.long	0x1427a
	.uleb128 0x4
	.long	0x161ec
	.uleb128 0x2f
	.secrel32	.LASF140
	.word	0x56a
	.byte	0x5
	.ascii "_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_\0"
	.long	0x1fcb9
	.long	0x162af
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x162a9
	.uleb128 0x10
	.long	0x1c746
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.uleb128 0x1
	.long	0x1c7dc
	.byte	0
	.uleb128 0x25
	.ascii "__get_helper<1, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x16
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE\0"
	.long	0x1c769
	.long	0x16391
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0xc3c5
	.uleb128 0x43
	.secrel32	.LASF133
	.uleb128 0x1
	.long	0x1c773
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF138
	.word	0x554
	.byte	0x5
	.ascii "_ZSt12__get_helperILy0EPN6MATRIX18MaterialAttributesEJSt14default_deleteIA_S1_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE\0"
	.long	0x1c7a5
	.long	0x1643f
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1c746
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x16439
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.uleb128 0x1
	.long	0x1c7af
	.byte	0
	.uleb128 0x29
	.ascii "move<std::thread::_State*&>\0"
	.byte	0x12
	.byte	0x68
	.byte	0x5
	.ascii "_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_\0"
	.long	0x1fe1b
	.long	0x164ba
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1ce5f
	.uleb128 0x1
	.long	0x1ce5f
	.byte	0
	.uleb128 0x58
	.secrel32	.LASF136
	.word	0x564
	.byte	0x5
	.long	0x2009a
	.long	0x164ee
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x164e8
	.uleb128 0x10
	.long	0x1cbe4
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.uleb128 0x1
	.long	0x1cc84
	.byte	0
	.uleb128 0x54
	.ascii "make_unique<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []>\0"
	.byte	0xf
	.word	0x437
	.byte	0x5
	.long	0x1fef
	.long	0x16571
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cd81
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF139
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy0EJPSt6threadSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_\0"
	.long	0x2025b
	.long	0x1660d
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x16607
	.uleb128 0x10
	.long	0x19630
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.uleb128 0x1
	.long	0x1cb76
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF134
	.byte	0x36
	.byte	0x54
	.byte	0xb
	.long	0x143a4
	.uleb128 0x25
	.ascii "get<1, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x16
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy1EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_\0"
	.long	0x203ff
	.long	0x1671f
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x16719
	.uleb128 0x10
	.long	0x1c746
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.uleb128 0x1
	.long	0x1c7e6
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF140
	.word	0x564
	.byte	0x5
	.ascii "_ZSt3getILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_\0"
	.long	0x2044e
	.long	0x167cf
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x167c9
	.uleb128 0x10
	.long	0x1c746
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.uleb128 0x1
	.long	0x1c7e6
	.byte	0
	.uleb128 0x88
	.ascii "forward<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0x12
	.byte	0x4d
	.byte	0x5
	.long	0x14fc5
	.long	0x1682b
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x22e56
	.uleb128 0x1
	.long	0x20aa3
	.byte	0
	.uleb128 0x88
	.ascii "move<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()>&>\0"
	.byte	0x12
	.byte	0x68
	.byte	0x5
	.long	0x20d58
	.long	0x16889
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1687e
	.uleb128 0x7
	.long	0x22c1f
	.uleb128 0x1
	.long	0x1687e
	.byte	0
	.uleb128 0x29
	.ascii "move<MATRIX::cell*&>\0"
	.byte	0x12
	.byte	0x68
	.byte	0x5
	.ascii "_ZSt4moveIRPN6MATRIX4cellEEONSt16remove_referenceIT_E4typeEOS5_\0"
	.long	0x20f74
	.long	0x168f9
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x20f79
	.uleb128 0x1
	.long	0x20f79
	.byte	0
	.uleb128 0x29
	.ascii "forward<std::default_delete<MATRIX::MaterialAttributes []> >\0"
	.byte	0x12
	.byte	0x4d
	.byte	0x5
	.ascii "_ZSt7forwardISt14default_deleteIA_N6MATRIX18MaterialAttributesEEEOT_RNSt16remove_referenceIS5_E4typeE\0"
	.long	0x20fde
	.long	0x169b7
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xc3c5
	.uleb128 0x1
	.long	0x20fe3
	.byte	0
	.uleb128 0x29
	.ascii "move<std::thread::id&>\0"
	.byte	0x12
	.byte	0x68
	.byte	0x5
	.ascii "_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_\0"
	.long	0x214ea
	.long	0x16a28
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x214ef
	.uleb128 0x1
	.long	0x214ef
	.byte	0
	.uleb128 0x25
	.ascii "cbrt<unsigned int>\0"
	.byte	0x15
	.word	0x500
	.byte	0x5
	.ascii "_ZSt4cbrtIjEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_\0"
	.long	0x174ce
	.long	0x16aaa
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1e6
	.uleb128 0x1
	.long	0x1e6
	.byte	0
	.uleb128 0x8d
	.ascii "swap<MATRIX::cell*>\0"
	.byte	0x12
	.byte	0xc4
	.byte	0x5
	.ascii "_ZSt4swapIPN6MATRIX4cellEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_\0"
	.long	0x16b85
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1c737
	.uleb128 0x1
	.long	0x20f79
	.uleb128 0x1
	.long	0x20f79
	.byte	0
	.uleb128 0x85
	.ascii "this_thread\0"
	.byte	0xb
	.word	0x12e
	.byte	0xd
	.long	0x16d1c
	.uleb128 0x8d
	.ascii "sleep_for<long long int, std::ratio<1, 1000000000> >\0"
	.byte	0x13
	.byte	0x44
	.byte	0x7
	.ascii "_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000000000EEEEvRKNSt6chrono8durationIT_T0_EE\0"
	.long	0x16c4b
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0x6cca
	.uleb128 0x1
	.long	0x19747
	.byte	0
	.uleb128 0x8d
	.ascii "sleep_for<long long int, std::ratio<1, 1000> >\0"
	.byte	0x13
	.byte	0x44
	.byte	0x7
	.ascii "_ZNSt11this_thread9sleep_forIxSt5ratioILx1ELx1000EEEEvRKNSt6chrono8durationIT_T0_EE\0"
	.long	0x16cef
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa6a3
	.uleb128 0x1
	.long	0x197b0
	.byte	0
	.uleb128 0x47
	.ascii "get_id\0"
	.byte	0xb
	.word	0x132
	.byte	0x5
	.ascii "_ZNSt11this_thread6get_idEv\0"
	.long	0x5df6
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF141
	.byte	0x25
	.word	0xa3e
	.byte	0xb
	.long	0x121fb
	.uleb128 0x8d
	.ascii "swap<std::thread::id>\0"
	.byte	0x12
	.byte	0xc4
	.byte	0x5
	.ascii "_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_\0"
	.long	0x16e05
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x5df6
	.uleb128 0x1
	.long	0x214ef
	.uleb128 0x1
	.long	0x214ef
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF141
	.byte	0x25
	.word	0xa3e
	.byte	0xb
	.long	0xa7e6
	.uleb128 0x23
	.secrel32	.LASF141
	.byte	0x25
	.word	0xa3e
	.byte	0xb
	.long	0xa59e
	.uleb128 0x25
	.ascii "operator==\0"
	.byte	0xb
	.word	0x118
	.byte	0x3
	.ascii "_ZSteqNSt6thread2idES0_\0"
	.long	0x184a1
	.long	0x16e5a
	.uleb128 0x1
	.long	0x5df6
	.uleb128 0x1
	.long	0x5df6
	.byte	0
	.uleb128 0x29
	.ascii "__is_valid_cmpexch_failure_order\0"
	.byte	0x9
	.byte	0x7d
	.byte	0x3
	.ascii "_ZSt32__is_valid_cmpexch_failure_orderSt12memory_order\0"
	.long	0x184a1
	.long	0x16ec4
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x29
	.ascii "__cmpexch_failure_order\0"
	.byte	0x9
	.byte	0x76
	.byte	0x3
	.ascii "_ZSt23__cmpexch_failure_orderSt12memory_order\0"
	.long	0x318c
	.long	0x16f1c
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x29
	.ascii "__cmpexch_failure_order2\0"
	.byte	0x9
	.byte	0x6f
	.byte	0x3
	.ascii "_ZSt24__cmpexch_failure_order2St12memory_order\0"
	.long	0x318c
	.long	0x16f76
	.uleb128 0x1
	.long	0x318c
	.byte	0
	.uleb128 0x29
	.ascii "operator&\0"
	.byte	0x9
	.byte	0x68
	.byte	0x3
	.ascii "_ZStanSt12memory_orderSt23__memory_order_modifier\0"
	.long	0x318c
	.long	0x16fc9
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x31e1
	.byte	0
	.uleb128 0x29
	.ascii "operator|\0"
	.byte	0x9
	.byte	0x62
	.byte	0x3
	.ascii "_ZStorSt12memory_orderSt23__memory_order_modifier\0"
	.long	0x318c
	.long	0x1701c
	.uleb128 0x1
	.long	0x318c
	.uleb128 0x1
	.long	0x31e1
	.byte	0
	.uleb128 0x25
	.ascii "operator<=\0"
	.byte	0x3
	.word	0x130
	.byte	0x5
	.ascii "_ZStleSt15strong_orderingNSt9__cmp_cat8__unspecE\0"
	.long	0x184a1
	.long	0x17070
	.uleb128 0x1
	.long	0x11e1
	.uleb128 0x1
	.long	0x1045
	.byte	0
	.uleb128 0x25
	.ascii "operator<\0"
	.byte	0x3
	.word	0x126
	.byte	0x5
	.ascii "_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE\0"
	.long	0x184a1
	.long	0x170c3
	.uleb128 0x1
	.long	0x11e1
	.uleb128 0x1
	.long	0x1045
	.byte	0
	.uleb128 0x7f
	.ascii "__is_constant_evaluated\0"
	.byte	0x1
	.word	0x204
	.byte	0x3
	.long	0x184a1
	.uleb128 0x12b
	.ascii "__terminate\0"
	.byte	0x1
	.word	0x135
	.byte	0xf
	.ascii "_ZSt11__terminatev\0"
	.byte	0
	.uleb128 0xe
	.ascii "atexit\0"
	.byte	0x20
	.word	0x1a9
	.byte	0xf
	.long	0x188
	.long	0x17124
	.uleb128 0x1
	.long	0x792
	.byte	0
	.uleb128 0xe
	.ascii "atof\0"
	.byte	0x20
	.word	0x1af
	.byte	0x12
	.long	0x788
	.long	0x1713c
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0x6
	.long	0xd1
	.uleb128 0xe
	.ascii "atoi\0"
	.byte	0x20
	.word	0x1b2
	.byte	0xf
	.long	0x188
	.long	0x17159
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0xe
	.ascii "atol\0"
	.byte	0x20
	.word	0x1b4
	.byte	0x10
	.long	0x194
	.long	0x17171
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0xe
	.ascii "bsearch\0"
	.byte	0x20
	.word	0x1b8
	.byte	0x11
	.long	0x4b4
	.long	0x171a0
	.uleb128 0x1
	.long	0x525
	.uleb128 0x1
	.long	0x525
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x171a0
	.byte	0
	.uleb128 0x6
	.long	0x171a5
	.uleb128 0xb9
	.long	0x188
	.long	0x171ba
	.uleb128 0x1
	.long	0x525
	.uleb128 0x1
	.long	0x525
	.byte	0
	.uleb128 0xe
	.ascii "div\0"
	.byte	0x20
	.word	0x1be
	.byte	0x11
	.long	0x73e
	.long	0x171d6
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "getenv\0"
	.byte	0x20
	.word	0x1bf
	.byte	0x11
	.long	0x1c7
	.long	0x171f0
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0xe
	.ascii "ldiv\0"
	.byte	0x20
	.word	0x1c9
	.byte	0x12
	.long	0x779
	.long	0x1720d
	.uleb128 0x1
	.long	0x194
	.uleb128 0x1
	.long	0x194
	.byte	0
	.uleb128 0xe
	.ascii "mblen\0"
	.byte	0x20
	.word	0x1cb
	.byte	0xf
	.long	0x188
	.long	0x1722b
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0xe
	.ascii "mbstowcs\0"
	.byte	0x20
	.word	0x1d3
	.byte	0x12
	.long	0xe6
	.long	0x17251
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0xe
	.ascii "mbtowc\0"
	.byte	0x20
	.word	0x1d1
	.byte	0xf
	.long	0x188
	.long	0x17275
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0x6e
	.ascii "qsort\0"
	.byte	0x20
	.word	0x1b9
	.byte	0x10
	.long	0x17299
	.uleb128 0x1
	.long	0x4b4
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x171a0
	.byte	0
	.uleb128 0x7f
	.ascii "rand\0"
	.byte	0x20
	.word	0x1d6
	.byte	0xf
	.long	0x188
	.uleb128 0x6e
	.ascii "srand\0"
	.byte	0x20
	.word	0x1d8
	.byte	0x10
	.long	0x172bc
	.uleb128 0x1
	.long	0x1e6
	.byte	0
	.uleb128 0xe
	.ascii "strtod\0"
	.byte	0x20
	.word	0x1e4
	.byte	0x20
	.long	0x788
	.long	0x172db
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x79e
	.byte	0
	.uleb128 0xe
	.ascii "strtol\0"
	.byte	0x20
	.word	0x208
	.byte	0x10
	.long	0x194
	.long	0x172ff
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x79e
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "strtoul\0"
	.byte	0x20
	.word	0x20a
	.byte	0x19
	.long	0x1f6
	.long	0x17324
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x79e
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "system\0"
	.byte	0x20
	.word	0x20e
	.byte	0xf
	.long	0x188
	.long	0x1733e
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0xe
	.ascii "wcstombs\0"
	.byte	0x20
	.word	0x213
	.byte	0x12
	.long	0xe6
	.long	0x17364
	.uleb128 0x1
	.long	0x1c7
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0xe
	.ascii "wctomb\0"
	.byte	0x20
	.word	0x211
	.byte	0xf
	.long	0x188
	.long	0x17383
	.uleb128 0x1
	.long	0x1c7
	.uleb128 0x1
	.long	0x1d1
	.byte	0
	.uleb128 0x85
	.ascii "__gnu_cxx\0"
	.byte	0x1
	.word	0x14d
	.byte	0xb
	.long	0x174df
	.uleb128 0x5
	.byte	0x21
	.byte	0xc8
	.byte	0xb
	.long	0x7da
	.uleb128 0x5
	.byte	0x21
	.byte	0xd8
	.byte	0xb
	.long	0x174df
	.uleb128 0x5
	.byte	0x21
	.byte	0xe3
	.byte	0xb
	.long	0x174fd
	.uleb128 0x5
	.byte	0x21
	.byte	0xe4
	.byte	0xb
	.long	0x17516
	.uleb128 0x5
	.byte	0x21
	.byte	0xe5
	.byte	0xb
	.long	0x1753b
	.uleb128 0x5
	.byte	0x21
	.byte	0xe7
	.byte	0xb
	.long	0x17561
	.uleb128 0x5
	.byte	0x21
	.byte	0xe8
	.byte	0xb
	.long	0x17580
	.uleb128 0x29
	.ascii "div\0"
	.byte	0x21
	.byte	0xd5
	.byte	0x3
	.ascii "_ZN9__gnu_cxx3divExx\0"
	.long	0x7da
	.long	0x173ff
	.uleb128 0x1
	.long	0x114
	.uleb128 0x1
	.long	0x114
	.byte	0
	.uleb128 0x5
	.byte	0x23
	.byte	0xaf
	.byte	0xb
	.long	0x18178
	.uleb128 0x5
	.byte	0x23
	.byte	0xb0
	.byte	0xb
	.long	0x181b2
	.uleb128 0x5
	.byte	0x23
	.byte	0xb1
	.byte	0xb
	.long	0x181ef
	.uleb128 0x5
	.byte	0x23
	.byte	0xb2
	.byte	0xb
	.long	0x1821d
	.uleb128 0x5
	.byte	0x23
	.byte	0xb3
	.byte	0xb
	.long	0x1825e
	.uleb128 0x72
	.ascii "__ops\0"
	.byte	0x3a
	.byte	0x25
	.byte	0xb
	.uleb128 0x5
	.byte	0x2a
	.byte	0xfb
	.byte	0xb
	.long	0x18dd7
	.uleb128 0x4e
	.byte	0x2a
	.word	0x104
	.byte	0xb
	.long	0x18df7
	.uleb128 0x4e
	.byte	0x2a
	.word	0x105
	.byte	0xb
	.long	0x18e1c
	.uleb128 0x95
	.ascii "_Lock_policy\0"
	.long	0x1e6
	.byte	0x3b
	.byte	0x31
	.byte	0x8
	.long	0x17489
	.uleb128 0xa
	.ascii "_S_single\0"
	.byte	0
	.uleb128 0xa
	.ascii "_S_mutex\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "_S_atomic\0"
	.byte	0x2
	.byte	0
	.uleb128 0x4
	.long	0x1744b
	.uleb128 0x12c
	.ascii "__default_lock_policy\0"
	.byte	0x3b
	.byte	0x35
	.byte	0x1d
	.long	0x17489
	.byte	0x2
	.uleb128 0x12d
	.ascii "__enable_if<true, double>\0"
	.byte	0x1
	.byte	0x3c
	.byte	0x31
	.byte	0xc
	.uleb128 0xf
	.ascii "__type\0"
	.byte	0x3c
	.byte	0x32
	.byte	0x13
	.long	0x788
	.byte	0
	.byte	0
	.uleb128 0xe
	.ascii "lldiv\0"
	.byte	0x20
	.word	0x2da
	.byte	0x25
	.long	0x7da
	.long	0x174fd
	.uleb128 0x1
	.long	0x114
	.uleb128 0x1
	.long	0x114
	.byte	0
	.uleb128 0xe
	.ascii "atoll\0"
	.byte	0x20
	.word	0x2e5
	.byte	0x28
	.long	0x114
	.long	0x17516
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0xe
	.ascii "strtoll\0"
	.byte	0x20
	.word	0x2e1
	.byte	0x28
	.long	0x114
	.long	0x1753b
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x79e
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "strtoull\0"
	.byte	0x20
	.word	0x2e2
	.byte	0x31
	.long	0xf5
	.long	0x17561
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x79e
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "strtof\0"
	.byte	0x20
	.word	0x1eb
	.byte	0x1f
	.long	0x4fd
	.long	0x17580
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x79e
	.byte	0
	.uleb128 0xe
	.ascii "strtold\0"
	.byte	0x20
	.word	0x1f6
	.byte	0x27
	.long	0x703
	.long	0x175a0
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x79e
	.byte	0
	.uleb128 0x5
	.byte	0x3d
	.byte	0x27
	.byte	0xc
	.long	0x1710a
	.uleb128 0x5
	.byte	0x3d
	.byte	0x33
	.byte	0xc
	.long	0x73e
	.uleb128 0x5
	.byte	0x3d
	.byte	0x34
	.byte	0xc
	.long	0x779
	.uleb128 0x5
	.byte	0x3d
	.byte	0x36
	.byte	0xc
	.long	0x8e9
	.uleb128 0x5
	.byte	0x3d
	.byte	0x36
	.byte	0xc
	.long	0x909
	.uleb128 0x5
	.byte	0x3d
	.byte	0x36
	.byte	0xc
	.long	0x929
	.uleb128 0x5
	.byte	0x3d
	.byte	0x36
	.byte	0xc
	.long	0x949
	.uleb128 0x5
	.byte	0x3d
	.byte	0x36
	.byte	0xc
	.long	0x969
	.uleb128 0x5
	.byte	0x3d
	.byte	0x37
	.byte	0xc
	.long	0x17124
	.uleb128 0x5
	.byte	0x3d
	.byte	0x38
	.byte	0xc
	.long	0x17141
	.uleb128 0x5
	.byte	0x3d
	.byte	0x39
	.byte	0xc
	.long	0x17159
	.uleb128 0x5
	.byte	0x3d
	.byte	0x3a
	.byte	0xc
	.long	0x17171
	.uleb128 0x5
	.byte	0x3d
	.byte	0x3c
	.byte	0xc
	.long	0x173cf
	.uleb128 0x5
	.byte	0x3d
	.byte	0x3c
	.byte	0xc
	.long	0x989
	.uleb128 0x5
	.byte	0x3d
	.byte	0x3c
	.byte	0xc
	.long	0x171ba
	.uleb128 0x5
	.byte	0x3d
	.byte	0x3e
	.byte	0xc
	.long	0x171d6
	.uleb128 0x5
	.byte	0x3d
	.byte	0x40
	.byte	0xc
	.long	0x171f0
	.uleb128 0x5
	.byte	0x3d
	.byte	0x43
	.byte	0xc
	.long	0x1720d
	.uleb128 0x5
	.byte	0x3d
	.byte	0x44
	.byte	0xc
	.long	0x1722b
	.uleb128 0x5
	.byte	0x3d
	.byte	0x45
	.byte	0xc
	.long	0x17251
	.uleb128 0x5
	.byte	0x3d
	.byte	0x47
	.byte	0xc
	.long	0x17275
	.uleb128 0x5
	.byte	0x3d
	.byte	0x48
	.byte	0xc
	.long	0x17299
	.uleb128 0x5
	.byte	0x3d
	.byte	0x4a
	.byte	0xc
	.long	0x172a7
	.uleb128 0x5
	.byte	0x3d
	.byte	0x4b
	.byte	0xc
	.long	0x172bc
	.uleb128 0x5
	.byte	0x3d
	.byte	0x4c
	.byte	0xc
	.long	0x172db
	.uleb128 0x5
	.byte	0x3d
	.byte	0x4d
	.byte	0xc
	.long	0x172ff
	.uleb128 0x5
	.byte	0x3d
	.byte	0x4e
	.byte	0xc
	.long	0x17324
	.uleb128 0x5
	.byte	0x3d
	.byte	0x50
	.byte	0xc
	.long	0x1733e
	.uleb128 0x5
	.byte	0x3d
	.byte	0x51
	.byte	0xc
	.long	0x17364
	.uleb128 0x37
	.byte	0x2
	.byte	0x4
	.ascii "_Float16\0"
	.uleb128 0xf
	.ascii "WPARAM\0"
	.byte	0x1c
	.byte	0xa6
	.byte	0x14
	.long	0x575
	.uleb128 0xf
	.ascii "LPARAM\0"
	.byte	0x1c
	.byte	0xa7
	.byte	0x14
	.long	0x586
	.uleb128 0xf
	.ascii "LRESULT\0"
	.byte	0x1c
	.byte	0xa8
	.byte	0x14
	.long	0x586
	.uleb128 0xf
	.ascii "HLOCAL\0"
	.byte	0x1c
	.byte	0xc0
	.byte	0x12
	.long	0x662
	.uleb128 0xf
	.ascii "ATOM\0"
	.byte	0x1c
	.byte	0xcd
	.byte	0x10
	.long	0x4d4
	.uleb128 0x19
	.ascii "HINSTANCE__\0"
	.byte	0x4
	.byte	0x1c
	.byte	0xd0
	.byte	0x3
	.long	0x17701
	.uleb128 0x2c
	.secrel32	.LASF142
	.byte	0x1c
	.byte	0xd0
	.byte	0x3
	.long	0x188
	.byte	0
	.byte	0
	.uleb128 0xf
	.ascii "HINSTANCE\0"
	.byte	0x1c
	.byte	0xd0
	.byte	0x3
	.long	0x17713
	.uleb128 0x6
	.long	0x176de
	.uleb128 0xf
	.ascii "HMODULE\0"
	.byte	0x1c
	.byte	0xd6
	.byte	0x15
	.long	0x17701
	.uleb128 0x19
	.ascii "HWND__\0"
	.byte	0x4
	.byte	0x3e
	.byte	0x1a
	.byte	0x1
	.long	0x17746
	.uleb128 0x2c
	.secrel32	.LASF142
	.byte	0x3e
	.byte	0x1a
	.byte	0x1
	.long	0x188
	.byte	0
	.byte	0
	.uleb128 0xf
	.ascii "HWND\0"
	.byte	0x3e
	.byte	0x1a
	.byte	0x1
	.long	0x17758
	.uleb128 0x4
	.long	0x17746
	.uleb128 0x6
	.long	0x17728
	.uleb128 0x19
	.ascii "HBRUSH__\0"
	.byte	0x4
	.byte	0x3e
	.byte	0x2d
	.byte	0x1
	.long	0x1777d
	.uleb128 0x2c
	.secrel32	.LASF142
	.byte	0x3e
	.byte	0x2d
	.byte	0x1
	.long	0x188
	.byte	0
	.byte	0
	.uleb128 0xf
	.ascii "HBRUSH\0"
	.byte	0x3e
	.byte	0x2d
	.byte	0x1
	.long	0x1778c
	.uleb128 0x6
	.long	0x1775d
	.uleb128 0x19
	.ascii "HICON__\0"
	.byte	0x4
	.byte	0x3e
	.byte	0x34
	.byte	0x1
	.long	0x177b0
	.uleb128 0x2c
	.secrel32	.LASF142
	.byte	0x3e
	.byte	0x34
	.byte	0x1
	.long	0x188
	.byte	0
	.byte	0
	.uleb128 0xf
	.ascii "HICON\0"
	.byte	0x3e
	.byte	0x34
	.byte	0x1
	.long	0x177be
	.uleb128 0x6
	.long	0x17791
	.uleb128 0x19
	.ascii "HMENU__\0"
	.byte	0x4
	.byte	0x3e
	.byte	0x35
	.byte	0x1
	.long	0x177e2
	.uleb128 0x2c
	.secrel32	.LASF142
	.byte	0x3e
	.byte	0x35
	.byte	0x1
	.long	0x188
	.byte	0
	.byte	0
	.uleb128 0xf
	.ascii "HMENU\0"
	.byte	0x3e
	.byte	0x35
	.byte	0x1
	.long	0x177f0
	.uleb128 0x6
	.long	0x177c3
	.uleb128 0xf
	.ascii "HCURSOR\0"
	.byte	0x3e
	.byte	0x3c
	.byte	0xf
	.long	0x177b0
	.uleb128 0xf
	.ascii "COLORREF\0"
	.byte	0x3e
	.byte	0x3d
	.byte	0xf
	.long	0x4e1
	.uleb128 0x19
	.ascii "tagRECT\0"
	.byte	0x10
	.byte	0x3e
	.byte	0x49
	.byte	0x10
	.long	0x1785d
	.uleb128 0x13
	.ascii "left\0"
	.byte	0x3e
	.byte	0x4a
	.byte	0x8
	.long	0x5dd
	.byte	0
	.uleb128 0x13
	.ascii "top\0"
	.byte	0x3e
	.byte	0x4b
	.byte	0x8
	.long	0x5dd
	.byte	0x4
	.uleb128 0x2c
	.secrel32	.LASF143
	.byte	0x3e
	.byte	0x4c
	.byte	0x8
	.long	0x5dd
	.byte	0x8
	.uleb128 0x2c
	.secrel32	.LASF144
	.byte	0x3e
	.byte	0x4d
	.byte	0x8
	.long	0x5dd
	.byte	0xc
	.byte	0
	.uleb128 0xf
	.ascii "RECT\0"
	.byte	0x3e
	.byte	0x4e
	.byte	0x3
	.long	0x17816
	.uleb128 0x4
	.long	0x1785d
	.uleb128 0x6
	.long	0x17816
	.uleb128 0xf
	.ascii "LPRECT\0"
	.byte	0x3e
	.byte	0x4e
	.byte	0x18
	.long	0x1786f
	.uleb128 0x6
	.long	0x1786a
	.uleb128 0x19
	.ascii "tagPOINT\0"
	.byte	0x8
	.byte	0x3e
	.byte	0x5b
	.byte	0x10
	.long	0x178b1
	.uleb128 0x13
	.ascii "x\0"
	.byte	0x3e
	.byte	0x5c
	.byte	0x8
	.long	0x5dd
	.byte	0
	.uleb128 0x13
	.ascii "y\0"
	.byte	0x3e
	.byte	0x5d
	.byte	0x8
	.long	0x5dd
	.byte	0x4
	.byte	0
	.uleb128 0xf
	.ascii "POINT\0"
	.byte	0x3e
	.byte	0x5e
	.byte	0x3
	.long	0x17888
	.uleb128 0xf
	.ascii "WNDPROC\0"
	.byte	0x3f
	.byte	0x29
	.byte	0x1e
	.long	0x178cf
	.uleb128 0x6
	.long	0x178d4
	.uleb128 0xb9
	.long	0x176b2
	.long	0x178f3
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x538
	.uleb128 0x1
	.long	0x17694
	.uleb128 0x1
	.long	0x176a3
	.byte	0
	.uleb128 0x1d
	.ascii "tagCREATESTRUCTW\0"
	.byte	0x50
	.byte	0x3f
	.word	0x737
	.byte	0x12
	.long	0x179d8
	.uleb128 0x1c
	.ascii "lpCreateParams\0"
	.byte	0x3f
	.word	0x738
	.byte	0xc
	.long	0x506
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF145
	.byte	0x3f
	.word	0x739
	.byte	0xf
	.long	0x17701
	.byte	0x8
	.uleb128 0x1c
	.ascii "hMenu\0"
	.byte	0x3f
	.word	0x73a
	.byte	0xb
	.long	0x177e2
	.byte	0x10
	.uleb128 0x1c
	.ascii "hwndParent\0"
	.byte	0x3f
	.word	0x73b
	.byte	0xa
	.long	0x17746
	.byte	0x18
	.uleb128 0x1c
	.ascii "cy\0"
	.byte	0x3f
	.word	0x73c
	.byte	0x9
	.long	0x188
	.byte	0x20
	.uleb128 0x1c
	.ascii "cx\0"
	.byte	0x3f
	.word	0x73d
	.byte	0x9
	.long	0x188
	.byte	0x24
	.uleb128 0x1c
	.ascii "y\0"
	.byte	0x3f
	.word	0x73e
	.byte	0x9
	.long	0x188
	.byte	0x28
	.uleb128 0x1c
	.ascii "x\0"
	.byte	0x3f
	.word	0x73f
	.byte	0x9
	.long	0x188
	.byte	0x2c
	.uleb128 0x1c
	.ascii "style\0"
	.byte	0x3f
	.word	0x740
	.byte	0xa
	.long	0x5dd
	.byte	0x30
	.uleb128 0x1c
	.ascii "lpszName\0"
	.byte	0x3f
	.word	0x741
	.byte	0xd
	.long	0x619
	.byte	0x38
	.uleb128 0x1c
	.ascii "lpszClass\0"
	.byte	0x3f
	.word	0x742
	.byte	0xd
	.long	0x619
	.byte	0x40
	.uleb128 0x1c
	.ascii "dwExStyle\0"
	.byte	0x3f
	.word	0x743
	.byte	0xb
	.long	0x4e1
	.byte	0x48
	.byte	0
	.uleb128 0x1d
	.ascii "tagWNDCLASSEXW\0"
	.byte	0x50
	.byte	0x3f
	.word	0x382
	.byte	0x12
	.long	0x17adc
	.uleb128 0x1c
	.ascii "cbSize\0"
	.byte	0x3f
	.word	0x383
	.byte	0xa
	.long	0x538
	.byte	0
	.uleb128 0x1c
	.ascii "style\0"
	.byte	0x3f
	.word	0x384
	.byte	0xa
	.long	0x538
	.byte	0x4
	.uleb128 0x1c
	.ascii "lpfnWndProc\0"
	.byte	0x3f
	.word	0x385
	.byte	0xd
	.long	0x178bf
	.byte	0x8
	.uleb128 0x1c
	.ascii "cbClsExtra\0"
	.byte	0x3f
	.word	0x386
	.byte	0x9
	.long	0x188
	.byte	0x10
	.uleb128 0x1c
	.ascii "cbWndExtra\0"
	.byte	0x3f
	.word	0x387
	.byte	0x9
	.long	0x188
	.byte	0x14
	.uleb128 0x3e
	.secrel32	.LASF145
	.byte	0x3f
	.word	0x388
	.byte	0xf
	.long	0x17701
	.byte	0x18
	.uleb128 0x1c
	.ascii "hIcon\0"
	.byte	0x3f
	.word	0x389
	.byte	0xb
	.long	0x177b0
	.byte	0x20
	.uleb128 0x1c
	.ascii "hCursor\0"
	.byte	0x3f
	.word	0x38a
	.byte	0xd
	.long	0x177f5
	.byte	0x28
	.uleb128 0x1c
	.ascii "hbrBackground\0"
	.byte	0x3f
	.word	0x38b
	.byte	0xc
	.long	0x1777d
	.byte	0x30
	.uleb128 0x1c
	.ascii "lpszMenuName\0"
	.byte	0x3f
	.word	0x38c
	.byte	0xd
	.long	0x619
	.byte	0x38
	.uleb128 0x1c
	.ascii "lpszClassName\0"
	.byte	0x3f
	.word	0x38d
	.byte	0xd
	.long	0x619
	.byte	0x40
	.uleb128 0x1c
	.ascii "hIconSm\0"
	.byte	0x3f
	.word	0x38e
	.byte	0xb
	.long	0x177b0
	.byte	0x48
	.byte	0
	.uleb128 0x21
	.ascii "WNDCLASSEXW\0"
	.byte	0x3f
	.word	0x38f
	.byte	0x5
	.long	0x179d8
	.uleb128 0x4
	.long	0x17adc
	.uleb128 0x21
	.ascii "WNDCLASSEX\0"
	.byte	0x3f
	.word	0x391
	.byte	0x3
	.long	0x17adc
	.uleb128 0x1d
	.ascii "tagMSG\0"
	.byte	0x30
	.byte	0x3f
	.word	0x3bb
	.byte	0x12
	.long	0x17b7a
	.uleb128 0x3e
	.secrel32	.LASF146
	.byte	0x3f
	.word	0x3bc
	.byte	0xa
	.long	0x17746
	.byte	0
	.uleb128 0x1c
	.ascii "message\0"
	.byte	0x3f
	.word	0x3bd
	.byte	0xa
	.long	0x538
	.byte	0x8
	.uleb128 0x1c
	.ascii "wParam\0"
	.byte	0x3f
	.word	0x3be
	.byte	0xc
	.long	0x17694
	.byte	0x10
	.uleb128 0x1c
	.ascii "lParam\0"
	.byte	0x3f
	.word	0x3bf
	.byte	0xc
	.long	0x176a3
	.byte	0x18
	.uleb128 0x1c
	.ascii "time\0"
	.byte	0x3f
	.word	0x3c0
	.byte	0xb
	.long	0x4e1
	.byte	0x20
	.uleb128 0x1c
	.ascii "pt\0"
	.byte	0x3f
	.word	0x3c1
	.byte	0xb
	.long	0x178b1
	.byte	0x24
	.byte	0
	.uleb128 0x21
	.ascii "MSG\0"
	.byte	0x3f
	.word	0x3c2
	.byte	0x5
	.long	0x17b0a
	.uleb128 0x4
	.long	0x17b7a
	.uleb128 0x6
	.long	0x17b0a
	.uleb128 0x21
	.ascii "LPMSG\0"
	.byte	0x3f
	.word	0x3c2
	.byte	0x17
	.long	0x17b8c
	.uleb128 0x21
	.ascii "CREATESTRUCTW\0"
	.byte	0x3f
	.word	0x744
	.byte	0x5
	.long	0x178f3
	.uleb128 0x21
	.ascii "CREATESTRUCT\0"
	.byte	0x3f
	.word	0x746
	.byte	0x3
	.long	0x17ba0
	.uleb128 0x6
	.long	0x4b4
	.uleb128 0x7
	.long	0x6fe
	.uleb128 0x19
	.ascii "_iobuf\0"
	.byte	0x30
	.byte	0x2
	.byte	0x21
	.byte	0xa
	.long	0x17c67
	.uleb128 0x13
	.ascii "_ptr\0"
	.byte	0x2
	.byte	0x25
	.byte	0xb
	.long	0x1c7
	.byte	0
	.uleb128 0x13
	.ascii "_cnt\0"
	.byte	0x2
	.byte	0x26
	.byte	0x9
	.long	0x188
	.byte	0x8
	.uleb128 0x13
	.ascii "_base\0"
	.byte	0x2
	.byte	0x27
	.byte	0xb
	.long	0x1c7
	.byte	0x10
	.uleb128 0x13
	.ascii "_flag\0"
	.byte	0x2
	.byte	0x28
	.byte	0x9
	.long	0x188
	.byte	0x18
	.uleb128 0x13
	.ascii "_file\0"
	.byte	0x2
	.byte	0x29
	.byte	0x9
	.long	0x188
	.byte	0x1c
	.uleb128 0x13
	.ascii "_charbuf\0"
	.byte	0x2
	.byte	0x2a
	.byte	0x9
	.long	0x188
	.byte	0x20
	.uleb128 0x13
	.ascii "_bufsiz\0"
	.byte	0x2
	.byte	0x2b
	.byte	0x9
	.long	0x188
	.byte	0x24
	.uleb128 0x13
	.ascii "_tmpfname\0"
	.byte	0x2
	.byte	0x2c
	.byte	0xb
	.long	0x1c7
	.byte	0x28
	.byte	0
	.uleb128 0xf
	.ascii "FILE\0"
	.byte	0x2
	.byte	0x2f
	.byte	0x19
	.long	0x17bd7
	.uleb128 0xf
	.ascii "fpos_t\0"
	.byte	0x2
	.byte	0x73
	.byte	0x25
	.long	0x114
	.uleb128 0x4
	.long	0x17c74
	.uleb128 0x6e
	.ascii "clearerr\0"
	.byte	0x2
	.word	0x266
	.byte	0x10
	.long	0x17ca0
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0x6
	.long	0x17c67
	.uleb128 0xe
	.ascii "fclose\0"
	.byte	0x2
	.word	0x267
	.byte	0xf
	.long	0x188
	.long	0x17cbf
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "feof\0"
	.byte	0x2
	.word	0x26e
	.byte	0xf
	.long	0x188
	.long	0x17cd7
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "ferror\0"
	.byte	0x2
	.word	0x26f
	.byte	0xf
	.long	0x188
	.long	0x17cf1
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "fflush\0"
	.byte	0x2
	.word	0x270
	.byte	0xf
	.long	0x188
	.long	0x17d0b
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "fgetc\0"
	.byte	0x2
	.word	0x271
	.byte	0xf
	.long	0x188
	.long	0x17d24
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "fgetpos\0"
	.byte	0x2
	.word	0x273
	.byte	0xf
	.long	0x188
	.long	0x17d44
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x17d44
	.byte	0
	.uleb128 0x6
	.long	0x17c74
	.uleb128 0xe
	.ascii "fgets\0"
	.byte	0x2
	.word	0x275
	.byte	0x11
	.long	0x1c7
	.long	0x17d6c
	.uleb128 0x1
	.long	0x1c7
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "fopen\0"
	.byte	0x2
	.word	0x27c
	.byte	0x11
	.long	0x17ca0
	.long	0x17d8a
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0x25
	.ascii "fprintf\0"
	.byte	0x2
	.word	0x165
	.byte	0x5
	.ascii "_Z7fprintfP6_iobufPKcz\0"
	.long	0x188
	.long	0x17dc2
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x49
	.byte	0
	.uleb128 0xe
	.ascii "fread\0"
	.byte	0x2
	.word	0x281
	.byte	0x12
	.long	0xe6
	.long	0x17dea
	.uleb128 0x1
	.long	0x4b4
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "freopen\0"
	.byte	0x2
	.word	0x282
	.byte	0x11
	.long	0x17ca0
	.long	0x17e0f
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0x25
	.ascii "fscanf\0"
	.byte	0x2
	.word	0x138
	.byte	0x5
	.ascii "_Z6fscanfP6_iobufPKcz\0"
	.long	0x188
	.long	0x17e45
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x49
	.byte	0
	.uleb128 0xe
	.ascii "fseek\0"
	.byte	0x2
	.word	0x285
	.byte	0xf
	.long	0x188
	.long	0x17e68
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x194
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "fsetpos\0"
	.byte	0x2
	.word	0x283
	.byte	0xf
	.long	0x188
	.long	0x17e88
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x17e88
	.byte	0
	.uleb128 0x6
	.long	0x17c83
	.uleb128 0xe
	.ascii "ftell\0"
	.byte	0x2
	.word	0x286
	.byte	0x10
	.long	0x194
	.long	0x17ea6
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "getc\0"
	.byte	0x2
	.word	0x2b0
	.byte	0xf
	.long	0x188
	.long	0x17ebe
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0x7f
	.ascii "getchar\0"
	.byte	0x2
	.word	0x2b1
	.byte	0xf
	.long	0x188
	.uleb128 0x6e
	.ascii "perror\0"
	.byte	0x20
	.word	0x28a
	.byte	0x10
	.long	0x17ee5
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0xba
	.ascii "printf\0"
	.byte	0x2
	.word	0x170
	.byte	0x5
	.ascii "_Z6printfPKcz\0"
	.long	0x188
	.quad	.LFB5616
	.quad	.LFE5616-.LFB5616
	.uleb128 0x1
	.byte	0x9c
	.long	0x17f68
	.uleb128 0x49
	.uleb128 0x11
	.ascii "__format\0"
	.byte	0x2
	.word	0x170
	.byte	0x19
	.long	0x1713c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x49
	.uleb128 0x33
	.secrel32	.LASF147
	.byte	0x2
	.word	0x172
	.byte	0x7
	.long	0x188
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x17
	.ascii "__local_argv\0"
	.byte	0x2
	.word	0x173
	.byte	0x15
	.long	0xb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x26
	.quad	.LVL0
	.long	0x1d6cd
	.byte	0
	.uleb128 0xe
	.ascii "remove\0"
	.byte	0x2
	.word	0x2c7
	.byte	0xf
	.long	0x188
	.long	0x17f82
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0xe
	.ascii "rename\0"
	.byte	0x2
	.word	0x2c8
	.byte	0xf
	.long	0x188
	.long	0x17fa1
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0x6e
	.ascii "rewind\0"
	.byte	0x2
	.word	0x2ce
	.byte	0x10
	.long	0x17fb7
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0x25
	.ascii "scanf\0"
	.byte	0x2
	.word	0x12d
	.byte	0x5
	.ascii "_Z5scanfPKcz\0"
	.long	0x188
	.long	0x17fde
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x49
	.byte	0
	.uleb128 0x6e
	.ascii "setbuf\0"
	.byte	0x2
	.word	0x2d0
	.byte	0x10
	.long	0x17ff9
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x1c7
	.byte	0
	.uleb128 0xe
	.ascii "setvbuf\0"
	.byte	0x2
	.word	0x2d4
	.byte	0xf
	.long	0x188
	.long	0x18023
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x1c7
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0x25
	.ascii "sprintf\0"
	.byte	0x2
	.word	0x18e
	.byte	0x5
	.ascii "_Z7sprintfPcPKcz\0"
	.long	0x188
	.long	0x18055
	.uleb128 0x1
	.long	0x1c7
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x49
	.byte	0
	.uleb128 0x25
	.ascii "sscanf\0"
	.byte	0x2
	.word	0x122
	.byte	0x5
	.ascii "_Z6sscanfPKcS0_z\0"
	.long	0x188
	.long	0x18086
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x49
	.byte	0
	.uleb128 0x7f
	.ascii "tmpfile\0"
	.byte	0x2
	.word	0x2f7
	.byte	0x11
	.long	0x17ca0
	.uleb128 0xe
	.ascii "tmpnam\0"
	.byte	0x2
	.word	0x2f8
	.byte	0x11
	.long	0x1c7
	.long	0x180b1
	.uleb128 0x1
	.long	0x1c7
	.byte	0
	.uleb128 0xe
	.ascii "ungetc\0"
	.byte	0x2
	.word	0x2f9
	.byte	0xf
	.long	0x188
	.long	0x180d0
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0x25
	.ascii "vfprintf\0"
	.byte	0x2
	.word	0x19b
	.byte	0x5
	.ascii "_Z8vfprintfP6_iobufPKcPc\0"
	.long	0x188
	.long	0x1810f
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0x25
	.ascii "vprintf\0"
	.byte	0x2
	.word	0x1a2
	.byte	0x5
	.ascii "_Z7vprintfPKcPc\0"
	.long	0x188
	.long	0x1813f
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0x25
	.ascii "vsprintf\0"
	.byte	0x2
	.word	0x1a9
	.byte	0x5
	.ascii "_Z8vsprintfPcPKcS_\0"
	.long	0x188
	.long	0x18178
	.uleb128 0x1
	.long	0x1c7
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0x25
	.ascii "snprintf\0"
	.byte	0x2
	.word	0x1c7
	.byte	0x5
	.ascii "_Z8snprintfPcyPKcz\0"
	.long	0x188
	.long	0x181b2
	.uleb128 0x1
	.long	0x1c7
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x49
	.byte	0
	.uleb128 0x25
	.ascii "vfscanf\0"
	.byte	0x2
	.word	0x157
	.byte	0x5
	.ascii "_Z7vfscanfP6_iobufPKcPc\0"
	.long	0x188
	.long	0x181ef
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0x25
	.ascii "vscanf\0"
	.byte	0x2
	.word	0x150
	.byte	0x5
	.ascii "_Z6vscanfPKcPc\0"
	.long	0x188
	.long	0x1821d
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0x25
	.ascii "vsnprintf\0"
	.byte	0x2
	.word	0x1d4
	.byte	0x5
	.ascii "_Z9vsnprintfPcyPKcS_\0"
	.long	0x188
	.long	0x1825e
	.uleb128 0x1
	.long	0x1c7
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0x25
	.ascii "vsscanf\0"
	.byte	0x2
	.word	0x149
	.byte	0x5
	.ascii "_Z7vsscanfPKcS0_Pc\0"
	.long	0x188
	.long	0x18296
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0xf
	.ascii "int8_t\0"
	.byte	0x40
	.byte	0x23
	.byte	0x15
	.long	0x545
	.uleb128 0xf
	.ascii "uint8_t\0"
	.byte	0x40
	.byte	0x24
	.byte	0x19
	.long	0x49e
	.uleb128 0xf
	.ascii "int16_t\0"
	.byte	0x40
	.byte	0x25
	.byte	0x10
	.long	0x554
	.uleb128 0xf
	.ascii "uint16_t\0"
	.byte	0x40
	.byte	0x26
	.byte	0x19
	.long	0x161
	.uleb128 0xf
	.ascii "int32_t\0"
	.byte	0x40
	.byte	0x27
	.byte	0xe
	.long	0x188
	.uleb128 0xf
	.ascii "uint32_t\0"
	.byte	0x40
	.byte	0x28
	.byte	0x14
	.long	0x1e6
	.uleb128 0x4
	.long	0x182e6
	.uleb128 0xf
	.ascii "int64_t\0"
	.byte	0x40
	.byte	0x29
	.byte	0x26
	.long	0x114
	.uleb128 0xf
	.ascii "uint64_t\0"
	.byte	0x40
	.byte	0x2a
	.byte	0x30
	.long	0xf5
	.uleb128 0xf
	.ascii "int_least8_t\0"
	.byte	0x40
	.byte	0x2d
	.byte	0x15
	.long	0x545
	.uleb128 0xf
	.ascii "uint_least8_t\0"
	.byte	0x40
	.byte	0x2e
	.byte	0x19
	.long	0x49e
	.uleb128 0xf
	.ascii "int_least16_t\0"
	.byte	0x40
	.byte	0x2f
	.byte	0x10
	.long	0x554
	.uleb128 0xf
	.ascii "uint_least16_t\0"
	.byte	0x40
	.byte	0x30
	.byte	0x19
	.long	0x161
	.uleb128 0xf
	.ascii "int_least32_t\0"
	.byte	0x40
	.byte	0x31
	.byte	0xe
	.long	0x188
	.uleb128 0xf
	.ascii "uint_least32_t\0"
	.byte	0x40
	.byte	0x32
	.byte	0x14
	.long	0x1e6
	.uleb128 0xf
	.ascii "int_least64_t\0"
	.byte	0x40
	.byte	0x33
	.byte	0x26
	.long	0x114
	.uleb128 0xf
	.ascii "uint_least64_t\0"
	.byte	0x40
	.byte	0x34
	.byte	0x30
	.long	0xf5
	.uleb128 0xf
	.ascii "int_fast8_t\0"
	.byte	0x40
	.byte	0x3a
	.byte	0x15
	.long	0x545
	.uleb128 0xf
	.ascii "uint_fast8_t\0"
	.byte	0x40
	.byte	0x3b
	.byte	0x17
	.long	0x49e
	.uleb128 0xf
	.ascii "int_fast16_t\0"
	.byte	0x40
	.byte	0x3c
	.byte	0x10
	.long	0x554
	.uleb128 0xf
	.ascii "uint_fast16_t\0"
	.byte	0x40
	.byte	0x3d
	.byte	0x19
	.long	0x161
	.uleb128 0xf
	.ascii "int_fast32_t\0"
	.byte	0x40
	.byte	0x3e
	.byte	0xe
	.long	0x188
	.uleb128 0xf
	.ascii "uint_fast32_t\0"
	.byte	0x40
	.byte	0x3f
	.byte	0x18
	.long	0x1e6
	.uleb128 0xf
	.ascii "int_fast64_t\0"
	.byte	0x40
	.byte	0x40
	.byte	0x26
	.long	0x114
	.uleb128 0xf
	.ascii "uint_fast64_t\0"
	.byte	0x40
	.byte	0x41
	.byte	0x30
	.long	0xf5
	.uleb128 0xf
	.ascii "intmax_t\0"
	.byte	0x40
	.byte	0x44
	.byte	0x26
	.long	0x114
	.uleb128 0x4
	.long	0x18479
	.uleb128 0xf
	.ascii "uintmax_t\0"
	.byte	0x40
	.byte	0x45
	.byte	0x30
	.long	0xf5
	.uleb128 0x37
	.byte	0x1
	.byte	0x2
	.ascii "bool\0"
	.uleb128 0x4
	.long	0x184a1
	.uleb128 0x21
	.ascii "float_t\0"
	.byte	0x41
	.word	0x16f
	.byte	0xf
	.long	0x4fd
	.uleb128 0x21
	.ascii "double_t\0"
	.byte	0x41
	.word	0x170
	.byte	0x10
	.long	0x788
	.uleb128 0x6
	.long	0xd1c
	.uleb128 0x6
	.long	0xe1b
	.uleb128 0x37
	.byte	0x1
	.byte	0x7
	.ascii "char8_t\0"
	.uleb128 0x37
	.byte	0x2
	.byte	0x10
	.ascii "char16_t\0"
	.uleb128 0x37
	.byte	0x4
	.byte	0x10
	.ascii "char32_t\0"
	.uleb128 0x6
	.long	0xea7
	.uleb128 0x7
	.long	0xf60
	.uleb128 0x6
	.long	0x1045
	.uleb128 0x4
	.long	0x18508
	.uleb128 0x6
	.long	0x1089
	.uleb128 0x6
	.long	0x1135
	.uleb128 0x6
	.long	0x11dc
	.uleb128 0x6
	.long	0x11e1
	.uleb128 0x6
	.long	0x12f1
	.uleb128 0x37
	.byte	0x10
	.byte	0x5
	.ascii "__int128\0"
	.uleb128 0x71
	.ascii "__gnu_debug\0"
	.byte	0x42
	.byte	0x2b
	.byte	0xb
	.long	0x18555
	.uleb128 0x12e
	.byte	0x28
	.byte	0x3a
	.byte	0x18
	.long	0x20aa
	.byte	0
	.uleb128 0x37
	.byte	0x10
	.byte	0x7
	.ascii "__int128 unsigned\0"
	.uleb128 0x6
	.long	0x20db
	.uleb128 0x6
	.long	0x2146
	.uleb128 0x12f
	.ascii "decltype(nullptr)\0"
	.uleb128 0x1d
	.ascii "tm\0"
	.byte	0x24
	.byte	0x43
	.word	0x567
	.byte	0xa
	.long	0x18636
	.uleb128 0x1c
	.ascii "tm_sec\0"
	.byte	0x43
	.word	0x568
	.byte	0x9
	.long	0x188
	.byte	0
	.uleb128 0x1c
	.ascii "tm_min\0"
	.byte	0x43
	.word	0x569
	.byte	0x9
	.long	0x188
	.byte	0x4
	.uleb128 0x1c
	.ascii "tm_hour\0"
	.byte	0x43
	.word	0x56a
	.byte	0x9
	.long	0x188
	.byte	0x8
	.uleb128 0x1c
	.ascii "tm_mday\0"
	.byte	0x43
	.word	0x56b
	.byte	0x9
	.long	0x188
	.byte	0xc
	.uleb128 0x1c
	.ascii "tm_mon\0"
	.byte	0x43
	.word	0x56c
	.byte	0x9
	.long	0x188
	.byte	0x10
	.uleb128 0x1c
	.ascii "tm_year\0"
	.byte	0x43
	.word	0x56d
	.byte	0x9
	.long	0x188
	.byte	0x14
	.uleb128 0x1c
	.ascii "tm_wday\0"
	.byte	0x43
	.word	0x56e
	.byte	0x9
	.long	0x188
	.byte	0x18
	.uleb128 0x1c
	.ascii "tm_yday\0"
	.byte	0x43
	.word	0x56f
	.byte	0x9
	.long	0x188
	.byte	0x1c
	.uleb128 0x1c
	.ascii "tm_isdst\0"
	.byte	0x43
	.word	0x570
	.byte	0x9
	.long	0x188
	.byte	0x20
	.byte	0
	.uleb128 0x4
	.long	0x18588
	.uleb128 0x21
	.ascii "mbstate_t\0"
	.byte	0x43
	.word	0x5a5
	.byte	0xf
	.long	0x188
	.uleb128 0x4
	.long	0x1863b
	.uleb128 0xe
	.ascii "btowc\0"
	.byte	0x43
	.word	0x5a9
	.byte	0x12
	.long	0x152
	.long	0x1866c
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "fgetwc\0"
	.byte	0x2
	.word	0x500
	.byte	0x12
	.long	0x152
	.long	0x18686
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "fgetws\0"
	.byte	0x2
	.word	0x509
	.byte	0x14
	.long	0x1cc
	.long	0x186aa
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "fputwc\0"
	.byte	0x2
	.word	0x502
	.byte	0x12
	.long	0x152
	.long	0x186c9
	.uleb128 0x1
	.long	0x1d1
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "fputws\0"
	.byte	0x2
	.word	0x50a
	.byte	0xf
	.long	0x188
	.long	0x186e8
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "fwide\0"
	.byte	0x43
	.word	0x5b8
	.byte	0xf
	.long	0x188
	.long	0x18706
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "fwprintf\0"
	.byte	0x2
	.word	0x432
	.byte	0x5
	.long	0x188
	.long	0x18728
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x799
	.uleb128 0x49
	.byte	0
	.uleb128 0xe
	.ascii "fwscanf\0"
	.byte	0x2
	.word	0x40e
	.byte	0x5
	.long	0x188
	.long	0x18749
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x799
	.uleb128 0x49
	.byte	0
	.uleb128 0xe
	.ascii "getwc\0"
	.byte	0x2
	.word	0x504
	.byte	0x12
	.long	0x152
	.long	0x18762
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0x7f
	.ascii "getwchar\0"
	.byte	0x2
	.word	0x505
	.byte	0x12
	.long	0x152
	.uleb128 0xe
	.ascii "mbrlen\0"
	.byte	0x43
	.word	0x5aa
	.byte	0x12
	.long	0xe6
	.long	0x18798
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x18798
	.byte	0
	.uleb128 0x6
	.long	0x1863b
	.uleb128 0xe
	.ascii "mbrtowc\0"
	.byte	0x43
	.word	0x5ab
	.byte	0x12
	.long	0xe6
	.long	0x187c7
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x18798
	.byte	0
	.uleb128 0xe
	.ascii "mbsinit\0"
	.byte	0x43
	.word	0x5bd
	.byte	0xf
	.long	0x188
	.long	0x187e2
	.uleb128 0x1
	.long	0x187e2
	.byte	0
	.uleb128 0x6
	.long	0x1864e
	.uleb128 0xe
	.ascii "mbsrtowcs\0"
	.byte	0x43
	.word	0x5ac
	.byte	0x12
	.long	0xe6
	.long	0x18813
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x18813
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x18798
	.byte	0
	.uleb128 0x6
	.long	0x1713c
	.uleb128 0xe
	.ascii "putwc\0"
	.byte	0x2
	.word	0x506
	.byte	0x12
	.long	0x152
	.long	0x18836
	.uleb128 0x1
	.long	0x1d1
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "putwchar\0"
	.byte	0x2
	.word	0x507
	.byte	0x12
	.long	0x152
	.long	0x18852
	.uleb128 0x1
	.long	0x1d1
	.byte	0
	.uleb128 0x62
	.secrel32	.LASF148
	.byte	0x44
	.byte	0x3e
	.byte	0x5
	.long	0x188
	.long	0x1886e
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x799
	.uleb128 0x49
	.byte	0
	.uleb128 0x62
	.secrel32	.LASF148
	.byte	0x44
	.byte	0x22
	.byte	0x5
	.long	0x188
	.long	0x1888f
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x799
	.uleb128 0x49
	.byte	0
	.uleb128 0xe
	.ascii "swscanf\0"
	.byte	0x2
	.word	0x3f8
	.byte	0x5
	.long	0x188
	.long	0x188b0
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x799
	.uleb128 0x49
	.byte	0
	.uleb128 0xe
	.ascii "ungetwc\0"
	.byte	0x2
	.word	0x508
	.byte	0x12
	.long	0x152
	.long	0x188d0
	.uleb128 0x1
	.long	0x152
	.uleb128 0x1
	.long	0x17ca0
	.byte	0
	.uleb128 0xe
	.ascii "vfwprintf\0"
	.byte	0x2
	.word	0x448
	.byte	0x5
	.long	0x188
	.long	0x188f7
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0xe
	.ascii "vfwscanf\0"
	.byte	0x2
	.word	0x428
	.byte	0x5
	.long	0x188
	.long	0x1891d
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0x62
	.secrel32	.LASF149
	.byte	0x44
	.byte	0x33
	.byte	0x5
	.long	0x188
	.long	0x1893d
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0x62
	.secrel32	.LASF149
	.byte	0x44
	.byte	0x1b
	.byte	0x5
	.long	0x188
	.long	0x18962
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0xe
	.ascii "vswscanf\0"
	.byte	0x2
	.word	0x41a
	.byte	0x5
	.long	0x188
	.long	0x18988
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0xe
	.ascii "vwprintf\0"
	.byte	0x2
	.word	0x44f
	.byte	0x5
	.long	0x188
	.long	0x189a9
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0xe
	.ascii "vwscanf\0"
	.byte	0x2
	.word	0x421
	.byte	0x5
	.long	0x188
	.long	0x189c9
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0xe
	.ascii "wcrtomb\0"
	.byte	0x43
	.word	0x5ad
	.byte	0x12
	.long	0xe6
	.long	0x189ee
	.uleb128 0x1
	.long	0x1c7
	.uleb128 0x1
	.long	0x1d1
	.uleb128 0x1
	.long	0x18798
	.byte	0
	.uleb128 0x2d
	.ascii "wcscat\0"
	.byte	0x45
	.byte	0x84
	.byte	0x14
	.long	0x1cc
	.long	0x18a0c
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x799
	.byte	0
	.uleb128 0x2d
	.ascii "wcscmp\0"
	.byte	0x45
	.byte	0x86
	.byte	0xf
	.long	0x188
	.long	0x18a2a
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x799
	.byte	0
	.uleb128 0x2d
	.ascii "wcscoll\0"
	.byte	0x45
	.byte	0xa3
	.byte	0xf
	.long	0x188
	.long	0x18a49
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x799
	.byte	0
	.uleb128 0x2d
	.ascii "wcscpy\0"
	.byte	0x45
	.byte	0x87
	.byte	0x14
	.long	0x1cc
	.long	0x18a67
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x799
	.byte	0
	.uleb128 0x2d
	.ascii "wcscspn\0"
	.byte	0x45
	.byte	0x88
	.byte	0x12
	.long	0xe6
	.long	0x18a86
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x799
	.byte	0
	.uleb128 0xe
	.ascii "wcsftime\0"
	.byte	0x43
	.word	0x57b
	.byte	0x12
	.long	0xe6
	.long	0x18ab1
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x18ab1
	.byte	0
	.uleb128 0x6
	.long	0x18636
	.uleb128 0x2d
	.ascii "wcslen\0"
	.byte	0x45
	.byte	0x89
	.byte	0x12
	.long	0xe6
	.long	0x18acf
	.uleb128 0x1
	.long	0x799
	.byte	0
	.uleb128 0x2d
	.ascii "wcsncat\0"
	.byte	0x45
	.byte	0x8b
	.byte	0xc
	.long	0x1cc
	.long	0x18af3
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0x2d
	.ascii "wcsncmp\0"
	.byte	0x45
	.byte	0x8c
	.byte	0xf
	.long	0x188
	.long	0x18b17
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0x2d
	.ascii "wcsncpy\0"
	.byte	0x45
	.byte	0x8d
	.byte	0xc
	.long	0x1cc
	.long	0x18b3b
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0xe
	.ascii "wcsrtombs\0"
	.byte	0x43
	.word	0x5ae
	.byte	0x12
	.long	0xe6
	.long	0x18b67
	.uleb128 0x1
	.long	0x1c7
	.uleb128 0x1
	.long	0x18b67
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x18798
	.byte	0
	.uleb128 0x6
	.long	0x799
	.uleb128 0x2d
	.ascii "wcsspn\0"
	.byte	0x45
	.byte	0x91
	.byte	0x12
	.long	0xe6
	.long	0x18b8a
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x799
	.byte	0
	.uleb128 0xe
	.ascii "wcstod\0"
	.byte	0x20
	.word	0x235
	.byte	0x12
	.long	0x788
	.long	0x18ba9
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x7a3
	.byte	0
	.uleb128 0xe
	.ascii "wcstof\0"
	.byte	0x20
	.word	0x239
	.byte	0x11
	.long	0x4fd
	.long	0x18bc8
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x7a3
	.byte	0
	.uleb128 0x2d
	.ascii "wcstok\0"
	.byte	0x45
	.byte	0x93
	.byte	0x14
	.long	0x1cc
	.long	0x18be6
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x799
	.byte	0
	.uleb128 0xe
	.ascii "wcstol\0"
	.byte	0x20
	.word	0x246
	.byte	0x10
	.long	0x194
	.long	0x18c0a
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x7a3
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "wcstoul\0"
	.byte	0x20
	.word	0x248
	.byte	0x19
	.long	0x1f6
	.long	0x18c2f
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x7a3
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0x2d
	.ascii "wcsxfrm\0"
	.byte	0x45
	.byte	0xa1
	.byte	0x12
	.long	0xe6
	.long	0x18c53
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0xe
	.ascii "wctob\0"
	.byte	0x43
	.word	0x5af
	.byte	0xf
	.long	0x188
	.long	0x18c6c
	.uleb128 0x1
	.long	0x152
	.byte	0
	.uleb128 0xe
	.ascii "wmemcmp\0"
	.byte	0x43
	.word	0x5b4
	.byte	0xf
	.long	0x188
	.long	0x18c91
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0xe
	.ascii "wmemcpy\0"
	.byte	0x43
	.word	0x5b5
	.byte	0x14
	.long	0x1cc
	.long	0x18cb6
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0xe
	.ascii "wmemmove\0"
	.byte	0x43
	.word	0x5b7
	.byte	0x14
	.long	0x1cc
	.long	0x18cdc
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0xe
	.ascii "wmemset\0"
	.byte	0x43
	.word	0x5b2
	.byte	0x14
	.long	0x1cc
	.long	0x18d01
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0x1d1
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0xe
	.ascii "wprintf\0"
	.byte	0x2
	.word	0x43d
	.byte	0x5
	.long	0x188
	.long	0x18d1d
	.uleb128 0x1
	.long	0x799
	.uleb128 0x49
	.byte	0
	.uleb128 0xe
	.ascii "wscanf\0"
	.byte	0x2
	.word	0x403
	.byte	0x5
	.long	0x188
	.long	0x18d38
	.uleb128 0x1
	.long	0x799
	.uleb128 0x49
	.byte	0
	.uleb128 0x2d
	.ascii "wcschr\0"
	.byte	0x45
	.byte	0x85
	.byte	0x22
	.long	0x1cc
	.long	0x18d56
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x1d1
	.byte	0
	.uleb128 0x2d
	.ascii "wcspbrk\0"
	.byte	0x45
	.byte	0x8f
	.byte	0x22
	.long	0x1cc
	.long	0x18d75
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x799
	.byte	0
	.uleb128 0x2d
	.ascii "wcsrchr\0"
	.byte	0x45
	.byte	0x90
	.byte	0x22
	.long	0x1cc
	.long	0x18d94
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x1d1
	.byte	0
	.uleb128 0x2d
	.ascii "wcsstr\0"
	.byte	0x45
	.byte	0x92
	.byte	0x22
	.long	0x1cc
	.long	0x18db2
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x799
	.byte	0
	.uleb128 0xe
	.ascii "wmemchr\0"
	.byte	0x43
	.word	0x5b3
	.byte	0x22
	.long	0x1cc
	.long	0x18dd7
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x1d1
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0xe
	.ascii "wcstold\0"
	.byte	0x20
	.word	0x242
	.byte	0x17
	.long	0x703
	.long	0x18df7
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x7a3
	.byte	0
	.uleb128 0xe
	.ascii "wcstoll\0"
	.byte	0x43
	.word	0x5bf
	.byte	0x27
	.long	0x114
	.long	0x18e1c
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x7a3
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "wcstoull\0"
	.byte	0x43
	.word	0x5c0
	.byte	0x30
	.long	0xf5
	.long	0x18e42
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0x7a3
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0x6
	.long	0x24b0
	.uleb128 0x6
	.long	0x290f
	.uleb128 0x7
	.long	0x290f
	.uleb128 0x1f
	.long	0x24b0
	.uleb128 0x7
	.long	0x24b0
	.uleb128 0x6
	.long	0x298e
	.uleb128 0x2d
	.ascii "setlocale\0"
	.byte	0x1b
	.byte	0x5a
	.byte	0x11
	.long	0x1c7
	.long	0x18e81
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0x8e
	.ascii "localeconv\0"
	.byte	0x1b
	.byte	0x5b
	.byte	0x21
	.long	0x499
	.uleb128 0x74
	.secrel32	.LASF30
	.byte	0x10
	.byte	0x46
	.byte	0x59
	.byte	0x8
	.long	0x18ec4
	.uleb128 0x13
	.ascii "tv_sec\0"
	.byte	0x46
	.byte	0x5a
	.byte	0xb
	.long	0x1b3
	.byte	0
	.uleb128 0x13
	.ascii "tv_nsec\0"
	.byte	0x46
	.byte	0x5b
	.byte	0xb
	.long	0x194
	.byte	0x8
	.byte	0
	.uleb128 0x4
	.long	0x18e95
	.uleb128 0xf
	.ascii "clock_t\0"
	.byte	0x47
	.byte	0x3f
	.byte	0x10
	.long	0x194
	.uleb128 0xf
	.ascii "pthread_mutexattr_t\0"
	.byte	0x48
	.byte	0xba
	.byte	0x12
	.long	0x1e6
	.uleb128 0x4
	.long	0x18ed9
	.uleb128 0xf
	.ascii "pthread_t\0"
	.byte	0x48
	.byte	0xc9
	.byte	0x13
	.long	0x13b
	.uleb128 0x21
	.ascii "pthread_mutex_t\0"
	.byte	0x48
	.word	0x104
	.byte	0x12
	.long	0x12a
	.uleb128 0x21
	.ascii "pthread_cond_t\0"
	.byte	0x48
	.word	0x105
	.byte	0x12
	.long	0x12a
	.uleb128 0xf
	.ascii "__gthread_t\0"
	.byte	0x6
	.byte	0x2f
	.byte	0x13
	.long	0x18efa
	.uleb128 0xf
	.ascii "__gthread_mutex_t\0"
	.byte	0x6
	.byte	0x32
	.byte	0x19
	.long	0x18f0c
	.uleb128 0xf
	.ascii "__gthread_cond_t\0"
	.byte	0x6
	.byte	0x34
	.byte	0x18
	.long	0x18f25
	.uleb128 0xf
	.ascii "__gthread_time_t\0"
	.byte	0x6
	.byte	0x35
	.byte	0x19
	.long	0x18e95
	.uleb128 0xf
	.ascii "wctrans_t\0"
	.byte	0x49
	.byte	0xb0
	.byte	0x13
	.long	0x1d1
	.uleb128 0x2d
	.ascii "iswctype\0"
	.byte	0x4a
	.byte	0xb6
	.byte	0xf
	.long	0x188
	.long	0x18fcf
	.uleb128 0x1
	.long	0x152
	.uleb128 0x1
	.long	0x177
	.byte	0
	.uleb128 0x2d
	.ascii "towctrans\0"
	.byte	0x49
	.byte	0xb1
	.byte	0x12
	.long	0x152
	.long	0x18ff0
	.uleb128 0x1
	.long	0x152
	.uleb128 0x1
	.long	0x18f9d
	.byte	0
	.uleb128 0x2d
	.ascii "wctrans\0"
	.byte	0x49
	.byte	0xb2
	.byte	0x15
	.long	0x18f9d
	.long	0x1900a
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0x2d
	.ascii "wctype\0"
	.byte	0x49
	.byte	0xb3
	.byte	0x14
	.long	0x177
	.long	0x19023
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0x7
	.long	0x18f
	.uleb128 0x63
	.long	0x1748e
	.uleb128 0x6
	.long	0x18f51
	.uleb128 0x6
	.long	0x2aac
	.uleb128 0x4
	.long	0x19032
	.uleb128 0x7
	.long	0x2bc0
	.uleb128 0x7
	.long	0x2aac
	.uleb128 0x6
	.long	0x2bc5
	.uleb128 0x4
	.long	0x19046
	.uleb128 0x7
	.long	0x2d63
	.uleb128 0x7
	.long	0x2bc5
	.uleb128 0x6
	.long	0x2ab9
	.uleb128 0x6
	.long	0x2d68
	.uleb128 0x4
	.long	0x1905f
	.uleb128 0x7
	.long	0x2f97
	.uleb128 0x7
	.long	0x2d68
	.uleb128 0x6
	.long	0x18f6b
	.uleb128 0x7
	.long	0x2f10
	.uleb128 0x6
	.long	0x2f9c
	.uleb128 0x63
	.long	0x1303
	.uleb128 0x63
	.long	0x1326
	.uleb128 0x63
	.long	0x1349
	.uleb128 0x6
	.long	0x13c8
	.uleb128 0x4
	.long	0x19091
	.uleb128 0x6
	.long	0x13cd
	.uleb128 0x4
	.long	0x1909b
	.uleb128 0x6
	.long	0x1682
	.uleb128 0x4
	.long	0x190a5
	.uleb128 0x6
	.long	0x16a1
	.uleb128 0x7
	.long	0x13cd
	.uleb128 0x6
	.long	0x16a6
	.uleb128 0x4
	.long	0x190b9
	.uleb128 0x6
	.long	0x2fd5
	.uleb128 0x4
	.long	0x190c3
	.uleb128 0x7
	.long	0x3035
	.uleb128 0x7
	.long	0x3187
	.uleb128 0x7
	.long	0x2fd5
	.uleb128 0x7
	.long	0x174e
	.uleb128 0x6
	.long	0x1687
	.uleb128 0x6
	.long	0x1b8a
	.uleb128 0x4
	.long	0x190e6
	.uleb128 0x6
	.long	0x1718
	.uleb128 0x4
	.long	0x190f0
	.uleb128 0x6
	.long	0x1b8f
	.uleb128 0x4
	.long	0x190fa
	.uleb128 0x6
	.long	0x1d49
	.uleb128 0x4
	.long	0x19104
	.uleb128 0x71
	.ascii "__pstl\0"
	.byte	0x4b
	.byte	0xf
	.byte	0xb
	.long	0x1958b
	.uleb128 0x130
	.ascii "execution\0"
	.byte	0x4b
	.byte	0x11
	.byte	0xb
	.uleb128 0x131
	.ascii "v1\0"
	.byte	0x4b
	.byte	0x13
	.byte	0x12
	.uleb128 0x5f
	.ascii "sequenced_policy\0"
	.byte	0x1
	.byte	0x4b
	.byte	0x17
	.byte	0x7
	.long	0x19228
	.uleb128 0x59
	.secrel32	.LASF150
	.byte	0x1c
	.ascii "_ZN6__pstl9execution2v116sequenced_policy19__allow_unsequencedEv\0"
	.long	0xe20
	.uleb128 0x59
	.secrel32	.LASF151
	.byte	0x21
	.ascii "_ZN6__pstl9execution2v116sequenced_policy14__allow_vectorEv\0"
	.long	0xe20
	.uleb128 0x59
	.secrel32	.LASF152
	.byte	0x26
	.ascii "_ZN6__pstl9execution2v116sequenced_policy16__allow_parallelEv\0"
	.long	0xe20
	.byte	0
	.uleb128 0x4
	.long	0x19134
	.uleb128 0x5f
	.ascii "parallel_policy\0"
	.byte	0x1
	.byte	0x4b
	.byte	0x2d
	.byte	0x7
	.long	0x1931d
	.uleb128 0x59
	.secrel32	.LASF150
	.byte	0x32
	.ascii "_ZN6__pstl9execution2v115parallel_policy19__allow_unsequencedEv\0"
	.long	0xe20
	.uleb128 0x59
	.secrel32	.LASF151
	.byte	0x37
	.ascii "_ZN6__pstl9execution2v115parallel_policy14__allow_vectorEv\0"
	.long	0xe20
	.uleb128 0x59
	.secrel32	.LASF152
	.byte	0x3c
	.ascii "_ZN6__pstl9execution2v115parallel_policy16__allow_parallelEv\0"
	.long	0x20c9
	.byte	0
	.uleb128 0x4
	.long	0x1922d
	.uleb128 0x5f
	.ascii "parallel_unsequenced_policy\0"
	.byte	0x1
	.byte	0x4b
	.byte	0x43
	.byte	0x7
	.long	0x19442
	.uleb128 0x59
	.secrel32	.LASF150
	.byte	0x48
	.ascii "_ZN6__pstl9execution2v127parallel_unsequenced_policy19__allow_unsequencedEv\0"
	.long	0x20c9
	.uleb128 0x59
	.secrel32	.LASF151
	.byte	0x4d
	.ascii "_ZN6__pstl9execution2v127parallel_unsequenced_policy14__allow_vectorEv\0"
	.long	0x20c9
	.uleb128 0x59
	.secrel32	.LASF152
	.byte	0x52
	.ascii "_ZN6__pstl9execution2v127parallel_unsequenced_policy16__allow_parallelEv\0"
	.long	0x20c9
	.byte	0
	.uleb128 0x4
	.long	0x19322
	.uleb128 0x5f
	.ascii "unsequenced_policy\0"
	.byte	0x1
	.byte	0x4b
	.byte	0x58
	.byte	0x7
	.long	0x19543
	.uleb128 0x59
	.secrel32	.LASF150
	.byte	0x5d
	.ascii "_ZN6__pstl9execution2v118unsequenced_policy19__allow_unsequencedEv\0"
	.long	0x20c9
	.uleb128 0x59
	.secrel32	.LASF151
	.byte	0x62
	.ascii "_ZN6__pstl9execution2v118unsequenced_policy14__allow_vectorEv\0"
	.long	0x20c9
	.uleb128 0x59
	.secrel32	.LASF152
	.byte	0x67
	.ascii "_ZN6__pstl9execution2v118unsequenced_policy16__allow_parallelEv\0"
	.long	0xe20
	.byte	0
	.uleb128 0x4
	.long	0x19447
	.uleb128 0x9b
	.ascii "seq\0"
	.byte	0x6e
	.byte	0x1c
	.long	0x19228
	.byte	0x1
	.byte	0
	.uleb128 0x9b
	.ascii "par\0"
	.byte	0x6f
	.byte	0x1b
	.long	0x1931d
	.byte	0x1
	.byte	0
	.uleb128 0x9b
	.ascii "par_unseq\0"
	.byte	0x70
	.byte	0x27
	.long	0x19442
	.byte	0x1
	.byte	0
	.uleb128 0x9b
	.ascii "unseq\0"
	.byte	0x71
	.byte	0x1e
	.long	0x19543
	.byte	0x1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x63
	.long	0x19548
	.uleb128 0x63
	.long	0x19556
	.uleb128 0x63
	.long	0x19564
	.uleb128 0x63
	.long	0x19578
	.uleb128 0x6
	.long	0x3280
	.uleb128 0x4
	.long	0x1959f
	.uleb128 0x7
	.long	0x43c7
	.uleb128 0x7
	.long	0x3280
	.uleb128 0x6
	.long	0x43cc
	.uleb128 0x6
	.long	0x43c7
	.uleb128 0x4
	.long	0x195b8
	.uleb128 0x6
	.long	0x43d2
	.uleb128 0x7
	.long	0x32ce
	.uleb128 0x6
	.long	0x43d7
	.uleb128 0x4
	.long	0x195cc
	.uleb128 0x7
	.long	0x4c78
	.uleb128 0x7
	.long	0x43d7
	.uleb128 0x6
	.long	0x4c7d
	.uleb128 0x6
	.long	0x4c78
	.uleb128 0x4
	.long	0x195e5
	.uleb128 0x6
	.long	0x4c83
	.uleb128 0x7
	.long	0x184a1
	.uleb128 0x6
	.long	0x4c89
	.uleb128 0x4
	.long	0x195f9
	.uleb128 0x7
	.long	0x5dd9
	.uleb128 0x7
	.long	0x4c89
	.uleb128 0x6
	.long	0x5dde
	.uleb128 0x6
	.long	0x5dd9
	.uleb128 0x4
	.long	0x19612
	.uleb128 0x6
	.long	0x5de4
	.uleb128 0x7
	.long	0x4ce0
	.uleb128 0x6
	.long	0x5df6
	.uleb128 0x4
	.long	0x19626
	.uleb128 0x6
	.long	0x5de9
	.uleb128 0x4
	.long	0x19630
	.uleb128 0x7
	.long	0x64d3
	.uleb128 0x1f
	.long	0x5de9
	.uleb128 0x7
	.long	0x5de9
	.uleb128 0x6
	.long	0x64d3
	.uleb128 0x4
	.long	0x19649
	.uleb128 0x6
	.long	0x6c6d
	.uleb128 0x4
	.long	0x19653
	.uleb128 0x7
	.long	0x5e6e
	.uleb128 0x8e
	.ascii "clock\0"
	.byte	0x47
	.byte	0x99
	.byte	0x13
	.long	0x18ec9
	.uleb128 0x54
	.ascii "difftime\0"
	.byte	0x47
	.word	0x104
	.byte	0x22
	.long	0x788
	.long	0x19692
	.uleb128 0x1
	.long	0x1b3
	.uleb128 0x1
	.long	0x1b3
	.byte	0
	.uleb128 0x54
	.ascii "mktime\0"
	.byte	0x47
	.word	0x10b
	.byte	0x22
	.long	0x1b3
	.long	0x196ac
	.uleb128 0x1
	.long	0x196ac
	.byte	0
	.uleb128 0x6
	.long	0x18588
	.uleb128 0x54
	.ascii "time\0"
	.byte	0x47
	.word	0x100
	.byte	0x22
	.long	0x1b3
	.long	0x196c9
	.uleb128 0x1
	.long	0x196c9
	.byte	0
	.uleb128 0x6
	.long	0x1b3
	.uleb128 0x2d
	.ascii "asctime\0"
	.byte	0x47
	.byte	0x95
	.byte	0x11
	.long	0x1c7
	.long	0x196e8
	.uleb128 0x1
	.long	0x18ab1
	.byte	0
	.uleb128 0x54
	.ascii "ctime\0"
	.byte	0x47
	.word	0x109
	.byte	0x21
	.long	0x1c7
	.long	0x19701
	.uleb128 0x1
	.long	0x19701
	.byte	0
	.uleb128 0x6
	.long	0x1c2
	.uleb128 0x54
	.ascii "gmtime\0"
	.byte	0x47
	.word	0x107
	.byte	0x26
	.long	0x196ac
	.long	0x19720
	.uleb128 0x1
	.long	0x19701
	.byte	0
	.uleb128 0x54
	.ascii "localtime\0"
	.byte	0x47
	.word	0x105
	.byte	0x26
	.long	0x196ac
	.long	0x1973d
	.uleb128 0x1
	.long	0x19701
	.byte	0
	.uleb128 0x6
	.long	0x6d77
	.uleb128 0x4
	.long	0x1973d
	.uleb128 0x7
	.long	0x759e
	.uleb128 0x7
	.long	0x6d77
	.uleb128 0x6
	.long	0x759e
	.uleb128 0x4
	.long	0x19751
	.uleb128 0x7
	.long	0x6f6d
	.uleb128 0x7
	.long	0x125
	.uleb128 0x7
	.long	0x76e1
	.uleb128 0x6
	.long	0x77ec
	.uleb128 0x7
	.long	0x7968
	.uleb128 0x6
	.long	0x7e05
	.uleb128 0x4
	.long	0x19774
	.uleb128 0x7
	.long	0x77ec
	.uleb128 0x6
	.long	0x7e0a
	.uleb128 0x4
	.long	0x19783
	.uleb128 0x7
	.long	0x8469
	.uleb128 0x7
	.long	0x7e0a
	.uleb128 0x6
	.long	0x8469
	.uleb128 0x4
	.long	0x19797
	.uleb128 0x7
	.long	0x7fca
	.uleb128 0x6
	.long	0x846e
	.uleb128 0x4
	.long	0x197a6
	.uleb128 0x7
	.long	0x8bca
	.uleb128 0x7
	.long	0x846e
	.uleb128 0x6
	.long	0x8bca
	.uleb128 0x4
	.long	0x197ba
	.uleb128 0x7
	.long	0x8617
	.uleb128 0x7
	.long	0x7e05
	.uleb128 0x6f
	.secrel32	.LASF153
	.long	0x1e6
	.byte	0x4c
	.byte	0x1e
	.long	0x1a484
	.uleb128 0xa
	.ascii "DXGI_FORMAT_UNKNOWN\0"
	.byte	0
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32B32A32_TYPELESS\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32B32A32_FLOAT\0"
	.byte	0x2
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32B32A32_UINT\0"
	.byte	0x3
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32B32A32_SINT\0"
	.byte	0x4
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32B32_TYPELESS\0"
	.byte	0x5
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32B32_FLOAT\0"
	.byte	0x6
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32B32_UINT\0"
	.byte	0x7
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32B32_SINT\0"
	.byte	0x8
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16B16A16_TYPELESS\0"
	.byte	0x9
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16B16A16_FLOAT\0"
	.byte	0xa
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16B16A16_UNORM\0"
	.byte	0xb
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16B16A16_UINT\0"
	.byte	0xc
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16B16A16_SNORM\0"
	.byte	0xd
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16B16A16_SINT\0"
	.byte	0xe
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32_TYPELESS\0"
	.byte	0xf
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32_FLOAT\0"
	.byte	0x10
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32_UINT\0"
	.byte	0x11
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G32_SINT\0"
	.byte	0x12
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32G8X24_TYPELESS\0"
	.byte	0x13
	.uleb128 0xa
	.ascii "DXGI_FORMAT_D32_FLOAT_S8X24_UINT\0"
	.byte	0x14
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS\0"
	.byte	0x15
	.uleb128 0xa
	.ascii "DXGI_FORMAT_X32_TYPELESS_G8X24_UINT\0"
	.byte	0x16
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R10G10B10A2_TYPELESS\0"
	.byte	0x17
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R10G10B10A2_UNORM\0"
	.byte	0x18
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R10G10B10A2_UINT\0"
	.byte	0x19
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R11G11B10_FLOAT\0"
	.byte	0x1a
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8B8A8_TYPELESS\0"
	.byte	0x1b
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8B8A8_UNORM\0"
	.byte	0x1c
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8B8A8_UNORM_SRGB\0"
	.byte	0x1d
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8B8A8_UINT\0"
	.byte	0x1e
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8B8A8_SNORM\0"
	.byte	0x1f
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8B8A8_SINT\0"
	.byte	0x20
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16_TYPELESS\0"
	.byte	0x21
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16_FLOAT\0"
	.byte	0x22
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16_UNORM\0"
	.byte	0x23
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16_UINT\0"
	.byte	0x24
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16_SNORM\0"
	.byte	0x25
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16G16_SINT\0"
	.byte	0x26
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32_TYPELESS\0"
	.byte	0x27
	.uleb128 0xa
	.ascii "DXGI_FORMAT_D32_FLOAT\0"
	.byte	0x28
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32_FLOAT\0"
	.byte	0x29
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32_UINT\0"
	.byte	0x2a
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R32_SINT\0"
	.byte	0x2b
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R24G8_TYPELESS\0"
	.byte	0x2c
	.uleb128 0xa
	.ascii "DXGI_FORMAT_D24_UNORM_S8_UINT\0"
	.byte	0x2d
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R24_UNORM_X8_TYPELESS\0"
	.byte	0x2e
	.uleb128 0xa
	.ascii "DXGI_FORMAT_X24_TYPELESS_G8_UINT\0"
	.byte	0x2f
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8_TYPELESS\0"
	.byte	0x30
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8_UNORM\0"
	.byte	0x31
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8_UINT\0"
	.byte	0x32
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8_SNORM\0"
	.byte	0x33
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8_SINT\0"
	.byte	0x34
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16_TYPELESS\0"
	.byte	0x35
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16_FLOAT\0"
	.byte	0x36
	.uleb128 0xa
	.ascii "DXGI_FORMAT_D16_UNORM\0"
	.byte	0x37
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16_UNORM\0"
	.byte	0x38
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16_UINT\0"
	.byte	0x39
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16_SNORM\0"
	.byte	0x3a
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R16_SINT\0"
	.byte	0x3b
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8_TYPELESS\0"
	.byte	0x3c
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8_UNORM\0"
	.byte	0x3d
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8_UINT\0"
	.byte	0x3e
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8_SNORM\0"
	.byte	0x3f
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8_SINT\0"
	.byte	0x40
	.uleb128 0xa
	.ascii "DXGI_FORMAT_A8_UNORM\0"
	.byte	0x41
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R1_UNORM\0"
	.byte	0x42
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R9G9B9E5_SHAREDEXP\0"
	.byte	0x43
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R8G8_B8G8_UNORM\0"
	.byte	0x44
	.uleb128 0xa
	.ascii "DXGI_FORMAT_G8R8_G8B8_UNORM\0"
	.byte	0x45
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC1_TYPELESS\0"
	.byte	0x46
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC1_UNORM\0"
	.byte	0x47
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC1_UNORM_SRGB\0"
	.byte	0x48
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC2_TYPELESS\0"
	.byte	0x49
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC2_UNORM\0"
	.byte	0x4a
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC2_UNORM_SRGB\0"
	.byte	0x4b
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC3_TYPELESS\0"
	.byte	0x4c
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC3_UNORM\0"
	.byte	0x4d
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC3_UNORM_SRGB\0"
	.byte	0x4e
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC4_TYPELESS\0"
	.byte	0x4f
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC4_UNORM\0"
	.byte	0x50
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC4_SNORM\0"
	.byte	0x51
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC5_TYPELESS\0"
	.byte	0x52
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC5_UNORM\0"
	.byte	0x53
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC5_SNORM\0"
	.byte	0x54
	.uleb128 0xa
	.ascii "DXGI_FORMAT_B5G6R5_UNORM\0"
	.byte	0x55
	.uleb128 0xa
	.ascii "DXGI_FORMAT_B5G5R5A1_UNORM\0"
	.byte	0x56
	.uleb128 0xa
	.ascii "DXGI_FORMAT_B8G8R8A8_UNORM\0"
	.byte	0x57
	.uleb128 0xa
	.ascii "DXGI_FORMAT_B8G8R8X8_UNORM\0"
	.byte	0x58
	.uleb128 0xa
	.ascii "DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM\0"
	.byte	0x59
	.uleb128 0xa
	.ascii "DXGI_FORMAT_B8G8R8A8_TYPELESS\0"
	.byte	0x5a
	.uleb128 0xa
	.ascii "DXGI_FORMAT_B8G8R8A8_UNORM_SRGB\0"
	.byte	0x5b
	.uleb128 0xa
	.ascii "DXGI_FORMAT_B8G8R8X8_TYPELESS\0"
	.byte	0x5c
	.uleb128 0xa
	.ascii "DXGI_FORMAT_B8G8R8X8_UNORM_SRGB\0"
	.byte	0x5d
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC6H_TYPELESS\0"
	.byte	0x5e
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC6H_UF16\0"
	.byte	0x5f
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC6H_SF16\0"
	.byte	0x60
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC7_TYPELESS\0"
	.byte	0x61
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC7_UNORM\0"
	.byte	0x62
	.uleb128 0xa
	.ascii "DXGI_FORMAT_BC7_UNORM_SRGB\0"
	.byte	0x63
	.uleb128 0xa
	.ascii "DXGI_FORMAT_AYUV\0"
	.byte	0x64
	.uleb128 0xa
	.ascii "DXGI_FORMAT_Y410\0"
	.byte	0x65
	.uleb128 0xa
	.ascii "DXGI_FORMAT_Y416\0"
	.byte	0x66
	.uleb128 0xa
	.ascii "DXGI_FORMAT_NV12\0"
	.byte	0x67
	.uleb128 0xa
	.ascii "DXGI_FORMAT_P010\0"
	.byte	0x68
	.uleb128 0xa
	.ascii "DXGI_FORMAT_P016\0"
	.byte	0x69
	.uleb128 0xa
	.ascii "DXGI_FORMAT_420_OPAQUE\0"
	.byte	0x6a
	.uleb128 0xa
	.ascii "DXGI_FORMAT_YUY2\0"
	.byte	0x6b
	.uleb128 0xa
	.ascii "DXGI_FORMAT_Y210\0"
	.byte	0x6c
	.uleb128 0xa
	.ascii "DXGI_FORMAT_Y216\0"
	.byte	0x6d
	.uleb128 0xa
	.ascii "DXGI_FORMAT_NV11\0"
	.byte	0x6e
	.uleb128 0xa
	.ascii "DXGI_FORMAT_AI44\0"
	.byte	0x6f
	.uleb128 0xa
	.ascii "DXGI_FORMAT_IA44\0"
	.byte	0x70
	.uleb128 0xa
	.ascii "DXGI_FORMAT_P8\0"
	.byte	0x71
	.uleb128 0xa
	.ascii "DXGI_FORMAT_A8P8\0"
	.byte	0x72
	.uleb128 0xa
	.ascii "DXGI_FORMAT_B4G4R4A4_UNORM\0"
	.byte	0x73
	.uleb128 0xa
	.ascii "DXGI_FORMAT_P208\0"
	.byte	0x82
	.uleb128 0xa
	.ascii "DXGI_FORMAT_V208\0"
	.byte	0x83
	.uleb128 0xa
	.ascii "DXGI_FORMAT_V408\0"
	.byte	0x84
	.uleb128 0xc
	.ascii "DXGI_FORMAT_FORCE_UINT\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF153
	.byte	0x4c
	.byte	0x97
	.byte	0x3
	.long	0x197ce
	.uleb128 0x6f
	.secrel32	.LASF154
	.long	0x1e6
	.byte	0x4d
	.byte	0x3a
	.long	0x1a52f
	.uleb128 0xa
	.ascii "D2D1_ALPHA_MODE_UNKNOWN\0"
	.byte	0
	.uleb128 0xa
	.ascii "D2D1_ALPHA_MODE_PREMULTIPLIED\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "D2D1_ALPHA_MODE_STRAIGHT\0"
	.byte	0x2
	.uleb128 0xa
	.ascii "D2D1_ALPHA_MODE_IGNORE\0"
	.byte	0x3
	.uleb128 0xc
	.ascii "D2D1_ALPHA_MODE_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF154
	.byte	0x4d
	.byte	0x40
	.byte	0x3
	.long	0x1a490
	.uleb128 0x74
	.secrel32	.LASF155
	.byte	0x8
	.byte	0x4d
	.byte	0x41
	.byte	0x10
	.long	0x1a566
	.uleb128 0x13
	.ascii "format\0"
	.byte	0x4d
	.byte	0x42
	.byte	0x11
	.long	0x1a484
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF156
	.byte	0x4d
	.byte	0x43
	.byte	0x15
	.long	0x1a52f
	.byte	0x4
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF155
	.byte	0x4d
	.byte	0x44
	.byte	0x3
	.long	0x1a53b
	.uleb128 0x4
	.long	0x1a566
	.uleb128 0x19
	.ascii "D2D_SIZE_U\0"
	.byte	0x8
	.byte	0x4d
	.byte	0x5d
	.byte	0x10
	.long	0x1a5a6
	.uleb128 0x2c
	.secrel32	.LASF157
	.byte	0x4d
	.byte	0x5e
	.byte	0xc
	.long	0x566
	.byte	0
	.uleb128 0x2c
	.secrel32	.LASF158
	.byte	0x4d
	.byte	0x5f
	.byte	0xc
	.long	0x566
	.byte	0x4
	.byte	0
	.uleb128 0xf
	.ascii "D2D1_SIZE_U\0"
	.byte	0x4d
	.byte	0x61
	.byte	0x1b
	.long	0x1a577
	.uleb128 0x4
	.long	0x1a5a6
	.uleb128 0x19
	.ascii "_D3DCOLORVALUE\0"
	.byte	0x10
	.byte	0x4e
	.byte	0x36
	.byte	0x10
	.long	0x1a604
	.uleb128 0x13
	.ascii "r\0"
	.byte	0x4e
	.byte	0x37
	.byte	0xb
	.long	0x4fd
	.byte	0
	.uleb128 0x13
	.ascii "g\0"
	.byte	0x4e
	.byte	0x38
	.byte	0xb
	.long	0x4fd
	.byte	0x4
	.uleb128 0x13
	.ascii "b\0"
	.byte	0x4e
	.byte	0x39
	.byte	0xb
	.long	0x4fd
	.byte	0x8
	.uleb128 0x13
	.ascii "a\0"
	.byte	0x4e
	.byte	0x3a
	.byte	0xb
	.long	0x4fd
	.byte	0xc
	.byte	0
	.uleb128 0xf
	.ascii "D3DCOLORVALUE\0"
	.byte	0x4e
	.byte	0x3b
	.byte	0x3
	.long	0x1a5bf
	.uleb128 0xf
	.ascii "D2D_COLOR_F\0"
	.byte	0x4f
	.byte	0x21
	.byte	0x17
	.long	0x1a604
	.uleb128 0x74
	.secrel32	.LASF159
	.byte	0x10
	.byte	0x4f
	.byte	0x23
	.byte	0x10
	.long	0x1a671
	.uleb128 0x13
	.ascii "left\0"
	.byte	0x4f
	.byte	0x25
	.byte	0xb
	.long	0x4fd
	.byte	0
	.uleb128 0x13
	.ascii "top\0"
	.byte	0x4f
	.byte	0x26
	.byte	0xb
	.long	0x4fd
	.byte	0x4
	.uleb128 0x2c
	.secrel32	.LASF143
	.byte	0x4f
	.byte	0x27
	.byte	0xb
	.long	0x4fd
	.byte	0x8
	.uleb128 0x2c
	.secrel32	.LASF144
	.byte	0x4f
	.byte	0x28
	.byte	0xb
	.long	0x4fd
	.byte	0xc
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF159
	.byte	0x4f
	.byte	0x29
	.byte	0x3
	.long	0x1a62e
	.uleb128 0x6f
	.secrel32	.LASF160
	.long	0x1e6
	.byte	0xd
	.byte	0x5f
	.long	0x1a717
	.uleb128 0xa
	.ascii "D2D1_BITMAP_INTERPOLATION_MODE_NEAREST_NEIGHBOR\0"
	.byte	0
	.uleb128 0xa
	.ascii "D2D1_BITMAP_INTERPOLATION_MODE_LINEAR\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "D2D1_BITMAP_INTERPOLATION_MODE_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF160
	.byte	0xd
	.byte	0x63
	.byte	0x3
	.long	0x1a67d
	.uleb128 0x95
	.ascii "D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS\0"
	.long	0x1e6
	.byte	0xd
	.byte	0x75
	.byte	0xe
	.long	0x1a7f2
	.uleb128 0xa
	.ascii "D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_NONE\0"
	.byte	0
	.uleb128 0xa
	.ascii "D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_GDI_COMPATIBLE\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x6f
	.secrel32	.LASF161
	.long	0x1e6
	.byte	0xd
	.byte	0x8b
	.long	0x1a88f
	.uleb128 0xa
	.ascii "D2D1_DEBUG_LEVEL_NONE\0"
	.byte	0
	.uleb128 0xa
	.ascii "D2D1_DEBUG_LEVEL_ERROR\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "D2D1_DEBUG_LEVEL_WARNING\0"
	.byte	0x2
	.uleb128 0xa
	.ascii "D2D1_DEBUG_LEVEL_INFORMATION\0"
	.byte	0x3
	.uleb128 0xc
	.ascii "D2D1_DEBUG_LEVEL_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF161
	.byte	0xd
	.byte	0x91
	.byte	0x3
	.long	0x1a7f2
	.uleb128 0x6f
	.secrel32	.LASF162
	.long	0x1e6
	.byte	0xd
	.byte	0xa3
	.long	0x1a915
	.uleb128 0xa
	.ascii "D2D1_FACTORY_TYPE_SINGLE_THREADED\0"
	.byte	0
	.uleb128 0xa
	.ascii "D2D1_FACTORY_TYPE_MULTI_THREADED\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "D2D1_FACTORY_TYPE_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF162
	.byte	0xd
	.byte	0xa7
	.byte	0x3
	.long	0x1a89b
	.uleb128 0x6f
	.secrel32	.LASF163
	.long	0x1e6
	.byte	0xd
	.byte	0xa9
	.long	0x1a9a3
	.uleb128 0xa
	.ascii "D2D1_FEATURE_LEVEL_DEFAULT\0"
	.byte	0
	.uleb128 0x4f
	.ascii "D2D1_FEATURE_LEVEL_9\0"
	.word	0x9100
	.uleb128 0x4f
	.ascii "D2D1_FEATURE_LEVEL_10\0"
	.word	0xa000
	.uleb128 0xc
	.ascii "D2D1_FEATURE_LEVEL_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF163
	.byte	0xd
	.byte	0xae
	.byte	0x3
	.long	0x1a921
	.uleb128 0x6f
	.secrel32	.LASF164
	.long	0x1e6
	.byte	0xd
	.byte	0xf3
	.long	0x1aa4b
	.uleb128 0xa
	.ascii "D2D1_PRESENT_OPTIONS_NONE\0"
	.byte	0
	.uleb128 0xa
	.ascii "D2D1_PRESENT_OPTIONS_RETAIN_CONTENTS\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "D2D1_PRESENT_OPTIONS_IMMEDIATELY\0"
	.byte	0x2
	.uleb128 0xc
	.ascii "D2D1_PRESENT_OPTIONS_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF164
	.byte	0xd
	.byte	0xf8
	.byte	0x3
	.long	0x1a9af
	.uleb128 0x6f
	.secrel32	.LASF165
	.long	0x1e6
	.byte	0xd
	.byte	0xfa
	.long	0x1aaf8
	.uleb128 0xa
	.ascii "D2D1_RENDER_TARGET_TYPE_DEFAULT\0"
	.byte	0
	.uleb128 0xa
	.ascii "D2D1_RENDER_TARGET_TYPE_SOFTWARE\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "D2D1_RENDER_TARGET_TYPE_HARDWARE\0"
	.byte	0x2
	.uleb128 0xc
	.ascii "D2D1_RENDER_TARGET_TYPE_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF165
	.byte	0xd
	.byte	0xff
	.byte	0x3
	.long	0x1aa57
	.uleb128 0x132
	.secrel32	.LASF166
	.byte	0x7
	.byte	0x4
	.long	0x1e6
	.byte	0xd
	.word	0x101
	.byte	0xe
	.long	0x1abbe
	.uleb128 0xa
	.ascii "D2D1_RENDER_TARGET_USAGE_NONE\0"
	.byte	0
	.uleb128 0xa
	.ascii "D2D1_RENDER_TARGET_USAGE_FORCE_BITMAP_REMOTING\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "D2D1_RENDER_TARGET_USAGE_GDI_COMPATIBLE\0"
	.byte	0x2
	.uleb128 0xc
	.ascii "D2D1_RENDER_TARGET_USAGE_FORCE_DWORD\0"
	.long	0xffffffff
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF166
	.byte	0xd
	.word	0x106
	.byte	0x3
	.long	0x1ab04
	.uleb128 0x23
	.secrel32	.LASF167
	.byte	0xd
	.word	0x124
	.byte	0x24
	.long	0x1abd8
	.uleb128 0xbb
	.secrel32	.LASF167
	.uleb128 0x23
	.secrel32	.LASF168
	.byte	0xd
	.word	0x126
	.byte	0x30
	.long	0x1abeb
	.uleb128 0xbb
	.secrel32	.LASF168
	.uleb128 0x23
	.secrel32	.LASF169
	.byte	0xd
	.word	0x12b
	.byte	0x25
	.long	0x1abfe
	.uleb128 0xe2
	.secrel32	.LASF169
	.long	0x1accc
	.uleb128 0xbc
	.ascii "CreateHwndRenderTarget\0"
	.word	0x64a
	.ascii "_ZN12ID2D1Factory22CreateHwndRenderTargetERK29D2D1_RENDER_TARGET_PROPERTIESRK34D2D1_HWND_RENDER_TARGET_PROPERTIESPP21ID2D1HwndRenderTarget\0"
	.long	0x672
	.long	0x1acb6
	.uleb128 0x2
	.long	0x21f89
	.uleb128 0x1
	.long	0x24944
	.uleb128 0x1
	.long	0x24949
	.uleb128 0x1
	.long	0x2494e
	.byte	0
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF170
	.byte	0xd
	.word	0x131
	.byte	0x2e
	.long	0x1acd9
	.uleb128 0xe2
	.secrel32	.LASF170
	.long	0x1ad33
	.uleb128 0xbc
	.ascii "Resize\0"
	.word	0x733
	.ascii "_ZN21ID2D1HwndRenderTarget6ResizeERK10D2D_SIZE_U\0"
	.long	0x672
	.long	0x1ad27
	.uleb128 0x2
	.long	0x248f9
	.uleb128 0x1
	.long	0x24903
	.byte	0
	.byte	0
	.uleb128 0xd4
	.ascii "ID2D1RenderTarget\0"
	.long	0x1af4b
	.uleb128 0x76
	.ascii "Clear\0"
	.byte	0xd
	.word	0x397
	.byte	0xa
	.ascii "_ZN17ID2D1RenderTarget5ClearERK14_D3DCOLORVALUE\0"
	.long	0x1ad8e
	.long	0x1ad99
	.uleb128 0x2
	.long	0x249e6
	.uleb128 0x1
	.long	0x249f0
	.byte	0
	.uleb128 0x76
	.ascii "DrawBitmap\0"
	.byte	0xd
	.word	0x383
	.byte	0xa
	.ascii "_ZN17ID2D1RenderTarget10DrawBitmapEP11ID2D1BitmapRK10D2D_RECT_Ff30D2D1_BITMAP_INTERPOLATION_MODEPS3_\0"
	.long	0x1ae16
	.long	0x1ae35
	.uleb128 0x2
	.long	0x249e6
	.uleb128 0x1
	.long	0x1be1f
	.uleb128 0x1
	.long	0x24a38
	.uleb128 0x1
	.long	0x4ef
	.uleb128 0x1
	.long	0x1a717
	.uleb128 0x1
	.long	0x24a3d
	.byte	0
	.uleb128 0x46
	.ascii "CreateCompatibleRenderTarget\0"
	.byte	0xd
	.word	0x34b
	.byte	0xd
	.ascii "_ZN17ID2D1RenderTarget28CreateCompatibleRenderTargetEPP23ID2D1BitmapRenderTarget\0"
	.long	0x672
	.long	0x1aeb4
	.long	0x1aebf
	.uleb128 0x2
	.long	0x249e6
	.uleb128 0x1
	.long	0x24af0
	.byte	0
	.uleb128 0xbc
	.ascii "CreateSolidColorBrush\0"
	.word	0x32f
	.ascii "_ZN17ID2D1RenderTarget21CreateSolidColorBrushERK14_D3DCOLORVALUEPP20ID2D1SolidColorBrush\0"
	.long	0x672
	.long	0x1af3a
	.uleb128 0x2
	.long	0x249e6
	.uleb128 0x1
	.long	0x249f0
	.uleb128 0x1
	.long	0x1be40
	.byte	0
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF171
	.byte	0xd
	.word	0x13c
	.byte	0x2d
	.long	0x1af58
	.uleb128 0xbb
	.secrel32	.LASF171
	.uleb128 0x23
	.secrel32	.LASF172
	.byte	0xd
	.word	0x14c
	.byte	0x25
	.long	0x1af70
	.uleb128 0x4
	.long	0x1af5e
	.uleb128 0x87
	.secrel32	.LASF172
	.byte	0x4
	.byte	0xd
	.word	0x18d
	.byte	0x8
	.long	0x1af95
	.uleb128 0x1c
	.ascii "debugLevel\0"
	.byte	0xd
	.word	0x18e
	.byte	0x14
	.long	0x1a88f
	.byte	0
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF173
	.byte	0xd
	.word	0x14e
	.byte	0x33
	.long	0x1afa7
	.uleb128 0x4
	.long	0x1af95
	.uleb128 0x87
	.secrel32	.LASF173
	.byte	0x18
	.byte	0xd
	.word	0x196
	.byte	0x8
	.long	0x1afec
	.uleb128 0x3e
	.secrel32	.LASF146
	.byte	0xd
	.word	0x197
	.byte	0x18
	.long	0x17746
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF174
	.byte	0xd
	.word	0x198
	.byte	0x18
	.long	0x1a5a6
	.byte	0x8
	.uleb128 0x1c
	.ascii "presentOptions\0"
	.byte	0xd
	.word	0x199
	.byte	0x18
	.long	0x1aa4b
	.byte	0x10
	.byte	0
	.uleb128 0x23
	.secrel32	.LASF175
	.byte	0xd
	.word	0x153
	.byte	0x2e
	.long	0x1affe
	.uleb128 0x4
	.long	0x1afec
	.uleb128 0x87
	.secrel32	.LASF175
	.byte	0x1c
	.byte	0xd
	.word	0x1b7
	.byte	0x8
	.long	0x1b066
	.uleb128 0x3e
	.secrel32	.LASF2
	.byte	0xd
	.word	0x1b8
	.byte	0x1c
	.long	0x1aaf8
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF176
	.byte	0xd
	.word	0x1b9
	.byte	0x1c
	.long	0x1a566
	.byte	0x4
	.uleb128 0x1c
	.ascii "dpiX\0"
	.byte	0xd
	.word	0x1ba
	.byte	0x1c
	.long	0x4ef
	.byte	0xc
	.uleb128 0x1c
	.ascii "dpiY\0"
	.byte	0xd
	.word	0x1bb
	.byte	0x1c
	.long	0x4ef
	.byte	0x10
	.uleb128 0x1c
	.ascii "usage\0"
	.byte	0xd
	.word	0x1bc
	.byte	0x1c
	.long	0x1abbe
	.byte	0x14
	.uleb128 0x3e
	.secrel32	.LASF177
	.byte	0xd
	.word	0x1bd
	.byte	0x1c
	.long	0x1a9a3
	.byte	0x18
	.byte	0
	.uleb128 0x21
	.ascii "D2D1_RECT_F\0"
	.byte	0xd
	.word	0x159
	.byte	0x14
	.long	0x1a671
	.uleb128 0x4
	.long	0x1b066
	.uleb128 0x21
	.ascii "D2D1_COLOR_F\0"
	.byte	0xd
	.word	0x15e
	.byte	0x15
	.long	0x1a61a
	.uleb128 0x4
	.long	0x1b080
	.uleb128 0x1d
	.ascii "__mingw_uuidof_s<ID2D1Factory>\0"
	.byte	0x1
	.byte	0xd
	.word	0x994
	.byte	0x1
	.long	0x1b128
	.uleb128 0x133
	.ascii "__uuid_inst\0"
	.byte	0xd
	.word	0x994
	.byte	0x1
	.ascii "_ZN16__mingw_uuidof_sI12ID2D1FactoryE11__uuid_instE\0"
	.long	0x6fe
	.byte	0x10
	.byte	0x47
	.byte	0x22
	.byte	0x15
	.byte	0x6
	.byte	0x50
	.byte	0x6f
	.byte	0x5a
	.byte	0x46
	.byte	0x92
	.byte	0x45
	.byte	0x11
	.byte	0x8b
	.byte	0xfd
	.byte	0x3b
	.byte	0x60
	.byte	0x7
	.byte	0x1
	.uleb128 0x9
	.ascii "T\0"
	.long	0x1abfe
	.byte	0
	.uleb128 0x63
	.long	0x1b0c4
	.uleb128 0x71
	.ascii "D2D1\0"
	.byte	0x10
	.byte	0xb
	.byte	0xb
	.long	0x1bd0b
	.uleb128 0x19
	.ascii "TypeTraits<unsigned int>\0"
	.byte	0x1
	.byte	0x10
	.byte	0x15
	.byte	0x13
	.long	0x1b171
	.uleb128 0xf
	.ascii "Size\0"
	.byte	0x10
	.byte	0x17
	.byte	0x1c
	.long	0x1a5a6
	.uleb128 0x9
	.ascii "T\0"
	.long	0x1e6
	.byte	0
	.uleb128 0x19
	.ascii "TypeTraits<float>\0"
	.byte	0x1
	.byte	0x10
	.byte	0xf
	.byte	0x1d
	.long	0x1b1a1
	.uleb128 0xf
	.ascii "Rect\0"
	.byte	0x10
	.byte	0x12
	.byte	0x1c
	.long	0x1b066
	.uleb128 0x9
	.ascii "T\0"
	.long	0x4fd
	.byte	0
	.uleb128 0x73
	.secrel32	.LASF178
	.byte	0x10
	.byte	0x10
	.byte	0xc7
	.byte	0x7
	.long	0x1babc
	.uleb128 0x134
	.ascii "Enum\0"
	.byte	0x7
	.byte	0x4
	.long	0x1e6
	.byte	0x10
	.byte	0xc9
	.byte	0xa
	.byte	0x1
	.long	0x1b9c4
	.uleb128 0xc
	.ascii "AliceBlue\0"
	.long	0xf0f8ff
	.uleb128 0xc
	.ascii "AntiqueWhite\0"
	.long	0xfaebd7
	.uleb128 0x4f
	.ascii "Aqua\0"
	.word	0xffff
	.uleb128 0xc
	.ascii "Aquamarine\0"
	.long	0x7fffd4
	.uleb128 0xc
	.ascii "Azure\0"
	.long	0xf0ffff
	.uleb128 0xc
	.ascii "Beige\0"
	.long	0xf5f5dc
	.uleb128 0xc
	.ascii "Bisque\0"
	.long	0xffe4c4
	.uleb128 0xa
	.ascii "Black\0"
	.byte	0
	.uleb128 0xc
	.ascii "BlanchedAlmond\0"
	.long	0xffebcd
	.uleb128 0xa
	.ascii "Blue\0"
	.byte	0xff
	.uleb128 0xc
	.ascii "BlueViolet\0"
	.long	0x8a2be2
	.uleb128 0xc
	.ascii "Brown\0"
	.long	0xa52a2a
	.uleb128 0xc
	.ascii "BurlyWood\0"
	.long	0xdeb887
	.uleb128 0xc
	.ascii "CadetBlue\0"
	.long	0x5f9ea0
	.uleb128 0xc
	.ascii "Chartreuse\0"
	.long	0x7fff00
	.uleb128 0xc
	.ascii "Chocolate\0"
	.long	0xd2691e
	.uleb128 0xc
	.ascii "Coral\0"
	.long	0xff7f50
	.uleb128 0xc
	.ascii "CornflowerBlue\0"
	.long	0x6495ed
	.uleb128 0xc
	.ascii "Cornsilk\0"
	.long	0xfff8dc
	.uleb128 0xc
	.ascii "Crimson\0"
	.long	0xdc143c
	.uleb128 0x4f
	.ascii "Cyan\0"
	.word	0xffff
	.uleb128 0xa
	.ascii "DarkBlue\0"
	.byte	0x8b
	.uleb128 0x4f
	.ascii "DarkCyan\0"
	.word	0x8b8b
	.uleb128 0xc
	.ascii "DarkGoldenrod\0"
	.long	0xb8860b
	.uleb128 0xc
	.ascii "DarkGray\0"
	.long	0xa9a9a9
	.uleb128 0x4f
	.ascii "DarkGreen\0"
	.word	0x6400
	.uleb128 0xc
	.ascii "DarkKhaki\0"
	.long	0xbdb76b
	.uleb128 0xc
	.ascii "DarkMagenta\0"
	.long	0x8b008b
	.uleb128 0xc
	.ascii "DarkOliveGreen\0"
	.long	0x556b2f
	.uleb128 0xc
	.ascii "DarkOrange\0"
	.long	0xff8c00
	.uleb128 0xc
	.ascii "DarkOrchid\0"
	.long	0x9932cc
	.uleb128 0xc
	.ascii "DarkRed\0"
	.long	0x8b0000
	.uleb128 0xc
	.ascii "DarkSalmon\0"
	.long	0xe9967a
	.uleb128 0xc
	.ascii "DarkSeaGreen\0"
	.long	0x8fbc8f
	.uleb128 0xc
	.ascii "DarkSlateBlue\0"
	.long	0x483d8b
	.uleb128 0xc
	.ascii "DarkSlateGray\0"
	.long	0x2f4f4f
	.uleb128 0x4f
	.ascii "DarkTurquoise\0"
	.word	0xced1
	.uleb128 0xc
	.ascii "DarkViolet\0"
	.long	0x9400d3
	.uleb128 0xc
	.ascii "DeepPink\0"
	.long	0xff1493
	.uleb128 0x4f
	.ascii "DeepSkyBlue\0"
	.word	0xbfff
	.uleb128 0xc
	.ascii "DimGray\0"
	.long	0x696969
	.uleb128 0xc
	.ascii "DodgerBlue\0"
	.long	0x1e90ff
	.uleb128 0xc
	.ascii "Firebrick\0"
	.long	0xb22222
	.uleb128 0xc
	.ascii "FloralWhite\0"
	.long	0xfffaf0
	.uleb128 0xc
	.ascii "ForestGreen\0"
	.long	0x228b22
	.uleb128 0xc
	.ascii "Fuchsia\0"
	.long	0xff00ff
	.uleb128 0xc
	.ascii "Gainsboro\0"
	.long	0xdcdcdc
	.uleb128 0xc
	.ascii "GhostWhite\0"
	.long	0xf8f8ff
	.uleb128 0xc
	.ascii "Gold\0"
	.long	0xffd700
	.uleb128 0xc
	.ascii "Goldenrod\0"
	.long	0xdaa520
	.uleb128 0xc
	.ascii "Gray\0"
	.long	0x808080
	.uleb128 0x4f
	.ascii "Green\0"
	.word	0x8000
	.uleb128 0xc
	.ascii "GreenYellow\0"
	.long	0xadff2f
	.uleb128 0xc
	.ascii "Honeydew\0"
	.long	0xf0fff0
	.uleb128 0xc
	.ascii "HotPink\0"
	.long	0xff69b4
	.uleb128 0xc
	.ascii "IndianRed\0"
	.long	0xcd5c5c
	.uleb128 0xc
	.ascii "Indigo\0"
	.long	0x4b0082
	.uleb128 0xc
	.ascii "Ivory\0"
	.long	0xfffff0
	.uleb128 0xc
	.ascii "Khaki\0"
	.long	0xf0e68c
	.uleb128 0xc
	.ascii "Lavender\0"
	.long	0xe6e6fa
	.uleb128 0xc
	.ascii "LavenderBlush\0"
	.long	0xfff0f5
	.uleb128 0xc
	.ascii "LawnGreen\0"
	.long	0x7cfc00
	.uleb128 0xc
	.ascii "LemonChiffon\0"
	.long	0xfffacd
	.uleb128 0xc
	.ascii "LightBlue\0"
	.long	0xadd8e6
	.uleb128 0xc
	.ascii "LightCoral\0"
	.long	0xf08080
	.uleb128 0xc
	.ascii "LightCyan\0"
	.long	0xe0ffff
	.uleb128 0xc
	.ascii "LightGoldenrodYellow\0"
	.long	0xfafad2
	.uleb128 0xc
	.ascii "LightGreen\0"
	.long	0x90ee90
	.uleb128 0xc
	.ascii "LightGray\0"
	.long	0xd3d3d3
	.uleb128 0xc
	.ascii "LightPink\0"
	.long	0xffb6c1
	.uleb128 0xc
	.ascii "LightSalmon\0"
	.long	0xffa07a
	.uleb128 0xc
	.ascii "LightSeaGreen\0"
	.long	0x20b2aa
	.uleb128 0xc
	.ascii "LightSkyBlue\0"
	.long	0x87cefa
	.uleb128 0xc
	.ascii "LightSlateGray\0"
	.long	0x778899
	.uleb128 0xc
	.ascii "LightSteelBlue\0"
	.long	0xb0c4de
	.uleb128 0xc
	.ascii "LightYellow\0"
	.long	0xffffe0
	.uleb128 0x4f
	.ascii "Lime\0"
	.word	0xff00
	.uleb128 0xc
	.ascii "LimeGreen\0"
	.long	0x32cd32
	.uleb128 0xc
	.ascii "Linen\0"
	.long	0xfaf0e6
	.uleb128 0xc
	.ascii "Magenta\0"
	.long	0xff00ff
	.uleb128 0xc
	.ascii "Maroon\0"
	.long	0x800000
	.uleb128 0xc
	.ascii "MediumAquamarine\0"
	.long	0x66cdaa
	.uleb128 0xa
	.ascii "MediumBlue\0"
	.byte	0xcd
	.uleb128 0xc
	.ascii "MediumOrchid\0"
	.long	0xba55d3
	.uleb128 0xc
	.ascii "MediumPurple\0"
	.long	0x9370db
	.uleb128 0xc
	.ascii "MediumSeaGreen\0"
	.long	0x3cb371
	.uleb128 0xc
	.ascii "MediumSlateBlue\0"
	.long	0x7b68ee
	.uleb128 0x4f
	.ascii "MediumSpringGreen\0"
	.word	0xfa9a
	.uleb128 0xc
	.ascii "MediumTurquoise\0"
	.long	0x48d1cc
	.uleb128 0xc
	.ascii "MediumVioletRed\0"
	.long	0xc71585
	.uleb128 0xc
	.ascii "MidnightBlue\0"
	.long	0x191970
	.uleb128 0xc
	.ascii "MintCream\0"
	.long	0xf5fffa
	.uleb128 0xc
	.ascii "MistyRose\0"
	.long	0xffe4e1
	.uleb128 0xc
	.ascii "Moccasin\0"
	.long	0xffe4b5
	.uleb128 0xc
	.ascii "NavajoWhite\0"
	.long	0xffdead
	.uleb128 0xa
	.ascii "Navy\0"
	.byte	0x80
	.uleb128 0xc
	.ascii "OldLace\0"
	.long	0xfdf5e6
	.uleb128 0xc
	.ascii "Olive\0"
	.long	0x808000
	.uleb128 0xc
	.ascii "OliveDrab\0"
	.long	0x6b8e23
	.uleb128 0xc
	.ascii "Orange\0"
	.long	0xffa500
	.uleb128 0xc
	.ascii "OrangeRed\0"
	.long	0xff4500
	.uleb128 0xc
	.ascii "Orchid\0"
	.long	0xda70d6
	.uleb128 0xc
	.ascii "PaleGoldenrod\0"
	.long	0xeee8aa
	.uleb128 0xc
	.ascii "PaleGreen\0"
	.long	0x98fb98
	.uleb128 0xc
	.ascii "PaleTurquoise\0"
	.long	0xafeeee
	.uleb128 0xc
	.ascii "PaleVioletRed\0"
	.long	0xdb7093
	.uleb128 0xc
	.ascii "PapayaWhip\0"
	.long	0xffefd5
	.uleb128 0xc
	.ascii "PeachPuff\0"
	.long	0xffdab9
	.uleb128 0xc
	.ascii "Peru\0"
	.long	0xcd853f
	.uleb128 0xc
	.ascii "Pink\0"
	.long	0xffc0cb
	.uleb128 0xc
	.ascii "Plum\0"
	.long	0xdda0dd
	.uleb128 0xc
	.ascii "PowderBlue\0"
	.long	0xb0e0e6
	.uleb128 0xc
	.ascii "Purple\0"
	.long	0x800080
	.uleb128 0xc
	.ascii "Red\0"
	.long	0xff0000
	.uleb128 0xc
	.ascii "RosyBrown\0"
	.long	0xbc8f8f
	.uleb128 0xc
	.ascii "RoyalBlue\0"
	.long	0x4169e1
	.uleb128 0xc
	.ascii "SaddleBrown\0"
	.long	0x8b4513
	.uleb128 0xc
	.ascii "Salmon\0"
	.long	0xfa8072
	.uleb128 0xc
	.ascii "SandyBrown\0"
	.long	0xf4a460
	.uleb128 0xc
	.ascii "SeaGreen\0"
	.long	0x2e8b57
	.uleb128 0xc
	.ascii "SeaShell\0"
	.long	0xfff5ee
	.uleb128 0xc
	.ascii "Sienna\0"
	.long	0xa0522d
	.uleb128 0xc
	.ascii "Silver\0"
	.long	0xc0c0c0
	.uleb128 0xc
	.ascii "SkyBlue\0"
	.long	0x87ceeb
	.uleb128 0xc
	.ascii "SlateBlue\0"
	.long	0x6a5acd
	.uleb128 0xc
	.ascii "SlateGray\0"
	.long	0x708090
	.uleb128 0xc
	.ascii "Snow\0"
	.long	0xfffafa
	.uleb128 0x4f
	.ascii "SpringGreen\0"
	.word	0xff7f
	.uleb128 0xc
	.ascii "SteelBlue\0"
	.long	0x4682b4
	.uleb128 0xc
	.ascii "Tan\0"
	.long	0xd2b48c
	.uleb128 0x4f
	.ascii "Teal\0"
	.word	0x8080
	.uleb128 0xc
	.ascii "Thistle\0"
	.long	0xd8bfd8
	.uleb128 0xc
	.ascii "Tomato\0"
	.long	0xff6347
	.uleb128 0xc
	.ascii "Turquoise\0"
	.long	0x40e0d0
	.uleb128 0xc
	.ascii "Violet\0"
	.long	0xee82ee
	.uleb128 0xc
	.ascii "Wheat\0"
	.long	0xf5deb3
	.uleb128 0xc
	.ascii "White\0"
	.long	0xffffff
	.uleb128 0xc
	.ascii "WhiteSmoke\0"
	.long	0xf5f5f5
	.uleb128 0xc
	.ascii "Yellow\0"
	.long	0xffff00
	.uleb128 0xc
	.ascii "YellowGreen\0"
	.long	0x9acd32
	.byte	0
	.uleb128 0x44
	.long	0x1a5bf
	.byte	0x1
	.uleb128 0x32
	.secrel32	.LASF178
	.byte	0x10
	.word	0x158
	.byte	0x11
	.ascii "_ZN4D2D16ColorFC4Ejf\0"
	.byte	0x1
	.long	0x1b9f1
	.long	0x1ba01
	.uleb128 0x2
	.long	0x1bd0b
	.uleb128 0x1
	.long	0x566
	.uleb128 0x1
	.long	0x4ef
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF178
	.byte	0x10
	.word	0x15c
	.byte	0x15
	.ascii "_ZN4D2D16ColorFC4ENS0_4EnumEf\0"
	.byte	0x1
	.long	0x1ba31
	.long	0x1ba41
	.uleb128 0x2
	.long	0x1bd0b
	.uleb128 0x1
	.long	0x1b1ae
	.uleb128 0x1
	.long	0x4ef
	.byte	0
	.uleb128 0x32
	.secrel32	.LASF178
	.byte	0x10
	.word	0x160
	.byte	0x15
	.ascii "_ZN4D2D16ColorFC4Effff\0"
	.byte	0x1
	.long	0x1ba6a
	.long	0x1ba84
	.uleb128 0x2
	.long	0x1bd0b
	.uleb128 0x1
	.long	0x4ef
	.uleb128 0x1
	.long	0x4ef
	.uleb128 0x1
	.long	0x4ef
	.uleb128 0x1
	.long	0x4ef
	.byte	0
	.uleb128 0x135
	.ascii "init\0"
	.byte	0x10
	.word	0x167
	.byte	0x1a
	.ascii "_ZN4D2D16ColorF4initEjf\0"
	.long	0x1baab
	.uleb128 0x2
	.long	0x1bd0b
	.uleb128 0x1
	.long	0x566
	.uleb128 0x1
	.long	0x4ef
	.byte	0
	.byte	0
	.uleb128 0x29
	.ascii "Rect<float>\0"
	.byte	0x10
	.byte	0x39
	.byte	0x43
	.ascii "_ZN4D2D14RectIfEENS_10TypeTraitsIT_E4RectES2_S2_S2_S2_\0"
	.long	0x1b18c
	.long	0x1bb27
	.uleb128 0x9
	.ascii "T\0"
	.long	0x4fd
	.uleb128 0x1
	.long	0x4fd
	.uleb128 0x1
	.long	0x4fd
	.uleb128 0x1
	.long	0x4fd
	.uleb128 0x1
	.long	0x4fd
	.byte	0
	.uleb128 0x29
	.ascii "Size<unsigned int>\0"
	.byte	0x10
	.byte	0x2c
	.byte	0x43
	.ascii "_ZN4D2D14SizeIjEENS_10TypeTraitsIT_E4SizeES2_S2_\0"
	.long	0x1b15c
	.long	0x1bb89
	.uleb128 0x9
	.ascii "T\0"
	.long	0x1e6
	.uleb128 0x1
	.long	0x1e6
	.uleb128 0x1
	.long	0x1e6
	.byte	0
	.uleb128 0x29
	.ascii "RenderTargetProperties\0"
	.byte	0x10
	.byte	0x9c
	.byte	0x2f
	.ascii "_ZN4D2D122RenderTargetPropertiesE23D2D1_RENDER_TARGET_TYPERK17D2D1_PIXEL_FORMATff24D2D1_RENDER_TARGET_USAGE18D2D1_FEATURE_LEVEL\0"
	.long	0x1afec
	.long	0x1bc4b
	.uleb128 0x1
	.long	0x1aaf8
	.uleb128 0x1
	.long	0x2478e
	.uleb128 0x1
	.long	0x4ef
	.uleb128 0x1
	.long	0x4ef
	.uleb128 0x1
	.long	0x1abbe
	.uleb128 0x1
	.long	0x1a9a3
	.byte	0
	.uleb128 0x29
	.ascii "PixelFormat\0"
	.byte	0x10
	.byte	0x8e
	.byte	0x23
	.ascii "_ZN4D2D111PixelFormatE11DXGI_FORMAT15D2D1_ALPHA_MODE\0"
	.long	0x1a566
	.long	0x1bca3
	.uleb128 0x1
	.long	0x1a484
	.uleb128 0x1
	.long	0x1a52f
	.byte	0
	.uleb128 0x29
	.ascii "RectF\0"
	.byte	0x10
	.byte	0x3e
	.byte	0x1d
	.ascii "_ZN4D2D15RectFEffff\0"
	.long	0x1b066
	.long	0x1bcde
	.uleb128 0x1
	.long	0x4ef
	.uleb128 0x1
	.long	0x4ef
	.uleb128 0x1
	.long	0x4ef
	.uleb128 0x1
	.long	0x4ef
	.byte	0
	.uleb128 0xcc
	.ascii "SizeU\0"
	.byte	0x10
	.byte	0x35
	.byte	0x1d
	.ascii "_ZN4D2D15SizeUEjj\0"
	.long	0x1a5a6
	.uleb128 0x1
	.long	0x566
	.uleb128 0x1
	.long	0x566
	.byte	0
	.byte	0
	.uleb128 0x6
	.long	0x1b1a1
	.uleb128 0x4
	.long	0x1bd0b
	.uleb128 0x7
	.long	0xaa76
	.uleb128 0x6
	.long	0xaa76
	.uleb128 0x4
	.long	0x1bd1a
	.uleb128 0x7
	.long	0xb1b7
	.uleb128 0x7
	.long	0xaa56
	.uleb128 0x6
	.long	0xb1b7
	.uleb128 0x4
	.long	0x1bd2e
	.uleb128 0x6
	.long	0xaa56
	.uleb128 0x7
	.long	0x1bd42
	.uleb128 0x70
	.long	0xaa56
	.long	0x1bd53
	.uleb128 0x84
	.long	0xf5
	.byte	0x3f
	.byte	0
	.uleb128 0x6
	.long	0xb2d0
	.uleb128 0x4
	.long	0x1bd53
	.uleb128 0x7
	.long	0xb368
	.uleb128 0x7
	.long	0xb2d0
	.uleb128 0x6
	.long	0xb35c
	.uleb128 0x6
	.long	0xb368
	.uleb128 0x6
	.long	0xbc00
	.uleb128 0x7
	.long	0xb35c
	.uleb128 0x7
	.long	0xbc63
	.uleb128 0x6
	.long	0xbc63
	.uleb128 0x4
	.long	0x1bd80
	.uleb128 0x7
	.long	0xc3c0
	.uleb128 0x7
	.long	0xaa71
	.uleb128 0x6
	.long	0xc3c0
	.uleb128 0x4
	.long	0x1bd94
	.uleb128 0x6
	.long	0xaa71
	.uleb128 0x80
	.ascii "Factory\0"
	.byte	0x21
	.byte	0xf
	.long	0x1bdbd
	.uleb128 0x9
	.byte	0x3
	.quad	Factory
	.uleb128 0x6
	.long	0x1abf1
	.uleb128 0x80
	.ascii "RenderTarget\0"
	.byte	0x22
	.byte	0x18
	.long	0x1bde1
	.uleb128 0x9
	.byte	0x3
	.quad	RenderTarget
	.uleb128 0x6
	.long	0x1accc
	.uleb128 0x80
	.ascii "BitmapRT\0"
	.byte	0x23
	.byte	0x1a
	.long	0x1be01
	.uleb128 0x9
	.byte	0x3
	.quad	BitmapRT
	.uleb128 0x6
	.long	0x1abde
	.uleb128 0x80
	.ascii "Bitmap\0"
	.byte	0x24
	.byte	0xe
	.long	0x1be1f
	.uleb128 0x9
	.byte	0x3
	.quad	Bitmap
	.uleb128 0x6
	.long	0x1abcb
	.uleb128 0x80
	.ascii "brushPool\0"
	.byte	0x25
	.byte	0x18
	.long	0x1be40
	.uleb128 0x9
	.byte	0x3
	.quad	brushPool
	.uleb128 0x6
	.long	0x1be45
	.uleb128 0x6
	.long	0x1af4b
	.uleb128 0x80
	.ascii "memory\0"
	.byte	0x27
	.byte	0x8
	.long	0x17bcd
	.uleb128 0x9
	.byte	0x3
	.quad	memory
	.uleb128 0x19
	.ascii "Vec3D\0"
	.byte	0xc
	.byte	0xe
	.byte	0x37
	.byte	0x8
	.long	0x1bf8f
	.uleb128 0x13
	.ascii "x\0"
	.byte	0xe
	.byte	0x39
	.byte	0x8
	.long	0x4fd
	.byte	0
	.uleb128 0x13
	.ascii "y\0"
	.byte	0xe
	.byte	0x39
	.byte	0x11
	.long	0x4fd
	.byte	0x4
	.uleb128 0x13
	.ascii "z\0"
	.byte	0xe
	.byte	0x39
	.byte	0x1a
	.long	0x4fd
	.byte	0x8
	.uleb128 0x5a
	.ascii "Vec3D\0"
	.byte	0xe
	.byte	0x39
	.byte	0x1d
	.ascii "_ZN5Vec3DC4Efff\0"
	.long	0x1beb5
	.long	0x1beca
	.uleb128 0x2
	.long	0x1bf94
	.uleb128 0x1
	.long	0x4fd
	.uleb128 0x1
	.long	0x4fd
	.uleb128 0x1
	.long	0x4fd
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF80
	.byte	0xe
	.byte	0x3b
	.byte	0x8
	.ascii "_ZNK5Vec3DmiERKS_\0"
	.long	0x1be63
	.long	0x1bef0
	.long	0x1befb
	.uleb128 0x2
	.long	0x1bf9e
	.uleb128 0x1
	.long	0x1bfa3
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF67
	.byte	0xe
	.byte	0x3c
	.byte	0xb
	.ascii "_ZNK5Vec3DmlEf\0"
	.long	0x1be63
	.long	0x1bf1e
	.long	0x1bf29
	.uleb128 0x2
	.long	0x1bf9e
	.uleb128 0x1
	.long	0x4fd
	.byte	0
	.uleb128 0x30
	.secrel32	.LASF79
	.byte	0xe
	.byte	0x3d
	.byte	0xb
	.ascii "_ZNK5Vec3DplERKS_\0"
	.long	0x1be63
	.long	0x1bf4f
	.long	0x1bf5a
	.uleb128 0x2
	.long	0x1bf9e
	.uleb128 0x1
	.long	0x1bfa3
	.byte	0
	.uleb128 0x136
	.ascii "operator/\0"
	.byte	0xe
	.byte	0x3e
	.byte	0x8
	.ascii "_ZNK5Vec3DdvERKS_\0"
	.long	0x1be63
	.long	0x1bf83
	.uleb128 0x2
	.long	0x1bf9e
	.uleb128 0x1
	.long	0x1bfa3
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x1be63
	.uleb128 0x6
	.long	0x1be63
	.uleb128 0x4
	.long	0x1bf94
	.uleb128 0x6
	.long	0x1bf8f
	.uleb128 0x7
	.long	0x1bf8f
	.uleb128 0x19
	.ascii "MATRIX\0"
	.byte	0x40
	.byte	0xe
	.byte	0x4a
	.byte	0x8
	.long	0x1c737
	.uleb128 0x95
	.ascii "element\0"
	.long	0x1e6
	.byte	0xe
	.byte	0x4d
	.byte	0x7
	.long	0x1c002
	.uleb128 0xa
	.ascii "air\0"
	.byte	0
	.uleb128 0xa
	.ascii "water\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "wood\0"
	.byte	0x2
	.uleb128 0xa
	.ascii "fire\0"
	.byte	0x3
	.uleb128 0xa
	.ascii "metal\0"
	.byte	0x4
	.uleb128 0xa
	.ascii "Custom\0"
	.byte	0x5
	.uleb128 0xa
	.ascii "size\0"
	.byte	0x6
	.byte	0
	.uleb128 0x74
	.secrel32	.LASF179
	.byte	0x28
	.byte	0xe
	.byte	0x4f
	.byte	0x9
	.long	0x1c0de
	.uleb128 0x13
	.ascii "density\0"
	.byte	0xe
	.byte	0x51
	.byte	0x9
	.long	0x4fd
	.byte	0
	.uleb128 0x13
	.ascii "friction\0"
	.byte	0xe
	.byte	0x52
	.byte	0x9
	.long	0x4fd
	.byte	0x4
	.uleb128 0x13
	.ascii "thermalConductivity\0"
	.byte	0xe
	.byte	0x53
	.byte	0x9
	.long	0x4fd
	.byte	0x8
	.uleb128 0x13
	.ascii "specificHeat\0"
	.byte	0xe
	.byte	0x54
	.byte	0x9
	.long	0x4fd
	.byte	0xc
	.uleb128 0x13
	.ascii "restitution\0"
	.byte	0xe
	.byte	0x55
	.byte	0x9
	.long	0x4fd
	.byte	0x10
	.uleb128 0x13
	.ascii "hardness\0"
	.byte	0xe
	.byte	0x56
	.byte	0x9
	.long	0x4fd
	.byte	0x14
	.uleb128 0x13
	.ascii "liquid\0"
	.byte	0xe
	.byte	0x57
	.byte	0x9
	.long	0x184a1
	.byte	0x18
	.uleb128 0x13
	.ascii "name\0"
	.byte	0xe
	.byte	0x59
	.byte	0xf
	.long	0x1713c
	.byte	0x20
	.uleb128 0x137
	.secrel32	.LASF179
	.ascii "_ZN6MATRIX18MaterialAttributesC4Ev\0"
	.long	0x1c0d7
	.uleb128 0x2
	.long	0x1c746
	.byte	0
	.byte	0
	.uleb128 0x74
	.secrel32	.LASF180
	.byte	0x20
	.byte	0xe
	.byte	0x5b
	.byte	0x9
	.long	0x1c272
	.uleb128 0x3a
	.secrel32	.LASF180
	.byte	0xe
	.byte	0x5d
	.byte	0x3
	.ascii "_ZN6MATRIX4cellC4Ev\0"
	.long	0x1c10f
	.long	0x1c115
	.uleb128 0x2
	.long	0x1c737
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF180
	.byte	0xe
	.byte	0x5e
	.byte	0x3
	.ascii "_ZN6MATRIX4cellC4ENS_7elementE\0"
	.long	0x1c144
	.long	0x1c14f
	.uleb128 0x2
	.long	0x1c737
	.uleb128 0x1
	.long	0x1bfb8
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF180
	.byte	0xe
	.byte	0x5f
	.byte	0x3
	.ascii "_ZN6MATRIX4cellC4Ef\0"
	.long	0x1c173
	.long	0x1c17e
	.uleb128 0x2
	.long	0x1c737
	.uleb128 0x1
	.long	0x4fd
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF180
	.byte	0xe
	.byte	0x60
	.byte	0x3
	.ascii "_ZN6MATRIX4cellC4E5Vec3D\0"
	.long	0x1c1a7
	.long	0x1c1b2
	.uleb128 0x2
	.long	0x1c737
	.uleb128 0x1
	.long	0x1be63
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF180
	.byte	0xe
	.byte	0x61
	.byte	0x3
	.ascii "_ZN6MATRIX4cellC4Ed\0"
	.long	0x1c1d6
	.long	0x1c1e1
	.uleb128 0x2
	.long	0x1c737
	.uleb128 0x1
	.long	0x788
	.byte	0
	.uleb128 0x5a
	.ascii "~cell\0"
	.byte	0xe
	.byte	0x63
	.byte	0x3
	.ascii "_ZN6MATRIX4cellD4Ev\0"
	.long	0x1c207
	.long	0x1c212
	.uleb128 0x2
	.long	0x1c737
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x13
	.ascii "temperature\0"
	.byte	0xe
	.byte	0x6b
	.byte	0x9
	.long	0x4fd
	.byte	0
	.uleb128 0x13
	.ascii "velocity\0"
	.byte	0xe
	.byte	0x6c
	.byte	0x9
	.long	0x1be63
	.byte	0x4
	.uleb128 0x13
	.ascii "pressure\0"
	.byte	0xe
	.byte	0x6d
	.byte	0xa
	.long	0x788
	.byte	0x10
	.uleb128 0x13
	.ascii "active\0"
	.byte	0xe
	.byte	0x6e
	.byte	0x8
	.long	0x184a1
	.byte	0x18
	.uleb128 0x13
	.ascii "MaterialType\0"
	.byte	0xe
	.byte	0x70
	.byte	0xb
	.long	0x1bfb8
	.byte	0x1c
	.byte	0
	.uleb128 0x4
	.long	0x1c0de
	.uleb128 0x2e
	.ascii "InitMatrix\0"
	.byte	0xe
	.byte	0x73
	.byte	0xb
	.ascii "_ZN6MATRIX10InitMatrixEjjj\0"
	.long	0x182e6
	.long	0x1c2ad
	.long	0x1c2c2
	.uleb128 0x2
	.long	0x1c854
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.byte	0
	.uleb128 0x2e
	.ascii "AccessDataAt\0"
	.byte	0xe
	.byte	0xe2
	.byte	0x7
	.ascii "_ZN6MATRIX12AccessDataAtEjjj\0"
	.long	0x1c0de
	.long	0x1c2fc
	.long	0x1c311
	.uleb128 0x2
	.long	0x1c854
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.byte	0
	.uleb128 0x2e
	.ascii "WriteDataTo\0"
	.byte	0xe
	.byte	0xe8
	.byte	0x7
	.ascii "_ZN6MATRIX11WriteDataToEjjjRKNS_4cellE\0"
	.long	0x1c0de
	.long	0x1c354
	.long	0x1c36e
	.uleb128 0x2
	.long	0x1c854
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x1c85e
	.byte	0
	.uleb128 0x5a
	.ascii "UpdateWorldView\0"
	.byte	0xe
	.byte	0xef
	.byte	0xe
	.ascii "_ZN6MATRIX15UpdateWorldViewEP6HWND__RSt6atomicIbE\0"
	.long	0x1c3bc
	.long	0x1c3cc
	.uleb128 0x2
	.long	0x1c854
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x195db
	.byte	0
	.uleb128 0x76
	.ascii "FlushMatrix\0"
	.byte	0xe
	.word	0x102
	.byte	0xe
	.ascii "_ZN6MATRIX11FlushMatrixERSt6atomicIbEjjjjjj\0"
	.long	0x1c411
	.long	0x1c43a
	.uleb128 0x2
	.long	0x1c854
	.uleb128 0x1
	.long	0x195db
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.byte	0
	.uleb128 0x46
	.ascii "ExGetElement\0"
	.byte	0xe
	.word	0x146
	.byte	0xa
	.ascii "_ZN6MATRIX12ExGetElementENS_4cellE\0"
	.long	0x1bfb8
	.long	0x1c47b
	.long	0x1c486
	.uleb128 0x2
	.long	0x1c854
	.uleb128 0x1
	.long	0x1c0de
	.byte	0
	.uleb128 0x46
	.ascii "FlattenedIndex\0"
	.byte	0xe
	.word	0x148
	.byte	0xb
	.ascii "_ZN6MATRIX14FlattenedIndexEjjj\0"
	.long	0x182e6
	.long	0x1c4c5
	.long	0x1c4da
	.uleb128 0x2
	.long	0x1c854
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.byte	0
	.uleb128 0x1c
	.ascii "memoryfb\0"
	.byte	0xe
	.word	0x14e
	.byte	0x8
	.long	0x4b4
	.byte	0
	.uleb128 0x1c
	.ascii "CELL_FRONT_BUFFER\0"
	.byte	0xe
	.word	0x14f
	.byte	0x8
	.long	0x1c737
	.byte	0x8
	.uleb128 0x52
	.ascii "memorybb\0"
	.byte	0xe
	.word	0x152
	.byte	0x8
	.long	0x4b4
	.byte	0x10
	.byte	0x3
	.uleb128 0x52
	.ascii "CELL_BACK_BUFFER\0"
	.byte	0xe
	.word	0x153
	.byte	0x8
	.long	0x1c737
	.byte	0x18
	.byte	0x3
	.uleb128 0x52
	.ascii "matAtt\0"
	.byte	0xe
	.word	0x155
	.byte	0x28
	.long	0xe234
	.byte	0x20
	.byte	0x3
	.uleb128 0x1c
	.ascii "w\0"
	.byte	0xe
	.word	0x158
	.byte	0xb
	.long	0x182e6
	.byte	0x28
	.uleb128 0x1c
	.ascii "h\0"
	.byte	0xe
	.word	0x159
	.byte	0xb
	.long	0x182e6
	.byte	0x2c
	.uleb128 0x1c
	.ascii "d\0"
	.byte	0xe
	.word	0x15a
	.byte	0xb
	.long	0x182e6
	.byte	0x30
	.uleb128 0x1c
	.ascii "_pixelWidth\0"
	.byte	0xe
	.word	0x15c
	.byte	0xb
	.long	0x182c5
	.byte	0x34
	.uleb128 0x1c
	.ascii "_pixelHeight\0"
	.byte	0xe
	.word	0x15d
	.byte	0xb
	.long	0x182c5
	.byte	0x36
	.uleb128 0x1c
	.ascii "_zLevel\0"
	.byte	0xe
	.word	0x15f
	.byte	0xb
	.long	0x182c5
	.byte	0x38
	.uleb128 0x46
	.ascii "ReadCellAttributes\0"
	.byte	0xe
	.word	0x161
	.byte	0x15
	.ascii "_ZN6MATRIX18ReadCellAttributesENS_4cellE\0"
	.long	0x1c002
	.long	0x1c5fb
	.long	0x1c606
	.uleb128 0x2
	.long	0x1c854
	.uleb128 0x1
	.long	0x1c0de
	.byte	0
	.uleb128 0x76
	.ascii "DestroyMatrix\0"
	.byte	0xe
	.word	0x167
	.byte	0xe
	.ascii "_ZN6MATRIX13DestroyMatrixEv\0"
	.long	0x1c63d
	.long	0x1c643
	.uleb128 0x2
	.long	0x1c854
	.byte	0
	.uleb128 0xc8
	.ascii "UpdateSimulationState<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
	.byte	0xe
	.word	0x117
	.byte	0xe
	.long	0x1c6a6
	.long	0x1c6e8
	.uleb128 0x9
	.ascii "C\0"
	.long	0x22c1f
	.uleb128 0x2
	.long	0x1c854
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x1cd33
	.uleb128 0x1
	.long	0x195cc
	.uleb128 0x1
	.long	0x195cc
	.uleb128 0x1
	.long	0x195cc
	.uleb128 0x1
	.long	0x195db
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.byte	0
	.uleb128 0x138
	.ascii "MATRIX\0"
	.ascii "_ZN6MATRIXC4Ev\0"
	.long	0x1c708
	.long	0x1c70e
	.uleb128 0x2
	.long	0x1c854
	.byte	0
	.uleb128 0xa3
	.ascii "~MATRIX\0"
	.ascii "_ZN6MATRIXD4Ev\0"
	.long	0x1c72b
	.uleb128 0x2
	.long	0x1c854
	.uleb128 0x2
	.long	0x188
	.byte	0
	.byte	0
	.uleb128 0x6
	.long	0x1c0de
	.uleb128 0x4
	.long	0x1c737
	.uleb128 0x6
	.long	0xc3c5
	.uleb128 0x6
	.long	0x1c002
	.uleb128 0x4
	.long	0x1c746
	.uleb128 0x6
	.long	0xcba3
	.uleb128 0x4
	.long	0x1c750
	.uleb128 0x7
	.long	0xc51f
	.uleb128 0x7
	.long	0xcf4e
	.uleb128 0x1f
	.long	0xcba3
	.uleb128 0x7
	.long	0xc3c5
	.uleb128 0x7
	.long	0xcba3
	.uleb128 0x7
	.long	0xcf53
	.uleb128 0x7
	.long	0xd34c
	.uleb128 0x6
	.long	0xcf53
	.uleb128 0x4
	.long	0x1c77d
	.uleb128 0x1f
	.long	0xcf53
	.uleb128 0x6
	.long	0xd351
	.uleb128 0x4
	.long	0x1c78c
	.uleb128 0x7
	.long	0x1c74b
	.uleb128 0x7
	.long	0xd653
	.uleb128 0x1f
	.long	0xd351
	.uleb128 0x7
	.long	0x1c746
	.uleb128 0x7
	.long	0xd351
	.uleb128 0x7
	.long	0xd658
	.uleb128 0x7
	.long	0xdb9f
	.uleb128 0x7
	.long	0xd7b9
	.uleb128 0x7
	.long	0xd7c6
	.uleb128 0x6
	.long	0xd658
	.uleb128 0x4
	.long	0x1c7c3
	.uleb128 0x1f
	.long	0xd658
	.uleb128 0x6
	.long	0xdba4
	.uleb128 0x4
	.long	0x1c7d2
	.uleb128 0x7
	.long	0xdf17
	.uleb128 0x1f
	.long	0xdba4
	.uleb128 0x7
	.long	0xdba4
	.uleb128 0x6
	.long	0xc58b
	.uleb128 0x4
	.long	0x1c7eb
	.uleb128 0x1f
	.long	0xc58b
	.uleb128 0x7
	.long	0xc58b
	.uleb128 0x7
	.long	0xc754
	.uleb128 0x6
	.long	0xcb9e
	.uleb128 0x4
	.long	0x1c804
	.uleb128 0x6
	.long	0xdf34
	.uleb128 0x4
	.long	0x1c80e
	.uleb128 0x1f
	.long	0xdf34
	.uleb128 0x7
	.long	0xdf34
	.uleb128 0x7
	.long	0x1c002
	.uleb128 0x6
	.long	0xe234
	.uleb128 0x4
	.long	0x1c827
	.uleb128 0x1f
	.long	0xe234
	.uleb128 0x7
	.long	0xe234
	.uleb128 0x6
	.long	0xea10
	.uleb128 0x4
	.long	0x1c83b
	.uleb128 0x7
	.long	0xe54b
	.uleb128 0x7
	.long	0xe559
	.uleb128 0x7
	.long	0xea10
	.uleb128 0x6
	.long	0x1bfa8
	.uleb128 0x4
	.long	0x1c854
	.uleb128 0x7
	.long	0x1c272
	.uleb128 0x1d
	.ascii "Camera\0"
	.byte	0x4c
	.byte	0xe
	.word	0x174
	.byte	0x8
	.long	0x1cab2
	.uleb128 0x76
	.ascii "Camera\0"
	.byte	0xe
	.word	0x176
	.byte	0x2
	.ascii "_ZN6CameraC4Ev\0"
	.long	0x1c897
	.long	0x1c89d
	.uleb128 0x2
	.long	0x1cab2
	.byte	0
	.uleb128 0x46
	.ascii "TraceRayThroughMatrix\0"
	.byte	0xe
	.word	0x178
	.byte	0x7
	.ascii "_ZN6Camera21TraceRayThroughMatrixE5Vec3DS0_fPFbiiiE\0"
	.long	0x184a1
	.long	0x1c8f8
	.long	0x1c912
	.uleb128 0x2
	.long	0x1cab2
	.uleb128 0x1
	.long	0x1be63
	.uleb128 0x1
	.long	0x1be63
	.uleb128 0x1
	.long	0x4fd
	.uleb128 0x1
	.long	0x1cabc
	.byte	0
	.uleb128 0x76
	.ascii "SetViewPosition\0"
	.byte	0xe
	.word	0x1ad
	.byte	0xe
	.ascii "_ZN6Camera15SetViewPositionEf5Vec3DS0_\0"
	.long	0x1c956
	.long	0x1c96b
	.uleb128 0x2
	.long	0x1cab2
	.uleb128 0x1
	.long	0x4fd
	.uleb128 0x1
	.long	0x1be63
	.uleb128 0x1
	.long	0x1be63
	.byte	0
	.uleb128 0x76
	.ascii "CastRay\0"
	.byte	0xe
	.word	0x1b6
	.byte	0xe
	.ascii "_ZN6Camera7CastRayEjjPFbiiiE\0"
	.long	0x1c99d
	.long	0x1c9b2
	.uleb128 0x2
	.long	0x1cab2
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x1cabc
	.byte	0
	.uleb128 0x7d
	.ascii "normalize\0"
	.byte	0xe
	.word	0x1d8
	.byte	0x8
	.ascii "_ZN6Camera9normalizeE5Vec3D\0"
	.long	0x1be63
	.byte	0x3
	.long	0x1c9ea
	.long	0x1c9f5
	.uleb128 0x2
	.long	0x1cab2
	.uleb128 0x1
	.long	0x1be63
	.byte	0
	.uleb128 0x7d
	.ascii "Cross\0"
	.byte	0xe
	.word	0x1dd
	.byte	0x8
	.ascii "_ZN6Camera5CrossE5Vec3DS0_\0"
	.long	0x1be63
	.byte	0x3
	.long	0x1ca28
	.long	0x1ca38
	.uleb128 0x2
	.long	0x1cab2
	.uleb128 0x1
	.long	0x1be63
	.uleb128 0x1
	.long	0x1be63
	.byte	0
	.uleb128 0x52
	.ascii "forward\0"
	.byte	0xe
	.word	0x1e7
	.byte	0x8
	.long	0x1be63
	.byte	0
	.byte	0x2
	.uleb128 0x52
	.ascii "worldUp\0"
	.byte	0xe
	.word	0x1e8
	.byte	0x8
	.long	0x1be63
	.byte	0xc
	.byte	0x2
	.uleb128 0xb4
	.secrel32	.LASF143
	.byte	0xe
	.word	0x1e9
	.byte	0x8
	.long	0x1be63
	.byte	0x18
	.byte	0x2
	.uleb128 0x52
	.ascii "up\0"
	.byte	0xe
	.word	0x1ea
	.byte	0x8
	.long	0x1be63
	.byte	0x24
	.byte	0x2
	.uleb128 0x52
	.ascii "position\0"
	.byte	0xe
	.word	0x1eb
	.byte	0x8
	.long	0x1be63
	.byte	0x30
	.byte	0x2
	.uleb128 0x52
	.ascii "lookAt\0"
	.byte	0xe
	.word	0x1ec
	.byte	0x8
	.long	0x1be63
	.byte	0x3c
	.byte	0x2
	.uleb128 0x52
	.ascii "FOV\0"
	.byte	0xe
	.word	0x1ed
	.byte	0x8
	.long	0x4fd
	.byte	0x48
	.byte	0x2
	.byte	0
	.uleb128 0x6
	.long	0x1c863
	.uleb128 0x4
	.long	0x1cab2
	.uleb128 0x6
	.long	0x1cac1
	.uleb128 0xb9
	.long	0x184a1
	.long	0x1cadb
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0x6
	.long	0xeac3
	.uleb128 0x6
	.long	0xf0d7
	.uleb128 0x4
	.long	0x1cae0
	.uleb128 0x7
	.long	0xebd7
	.uleb128 0x7
	.long	0xf3e7
	.uleb128 0x1f
	.long	0xf0d7
	.uleb128 0x7
	.long	0xeac3
	.uleb128 0x7
	.long	0xf0d7
	.uleb128 0x7
	.long	0xf3ec
	.uleb128 0x7
	.long	0xf736
	.uleb128 0x6
	.long	0xf3ec
	.uleb128 0x4
	.long	0x1cb0d
	.uleb128 0x1f
	.long	0xf3ec
	.uleb128 0x6
	.long	0xf73b
	.uleb128 0x4
	.long	0x1cb1c
	.uleb128 0x7
	.long	0x19635
	.uleb128 0x7
	.long	0xf9a2
	.uleb128 0x1f
	.long	0xf73b
	.uleb128 0x7
	.long	0x19630
	.uleb128 0x7
	.long	0xf73b
	.uleb128 0x7
	.long	0xf9a7
	.uleb128 0x7
	.long	0xfe08
	.uleb128 0x7
	.long	0xfac2
	.uleb128 0x7
	.long	0xfacf
	.uleb128 0x6
	.long	0xf9a7
	.uleb128 0x4
	.long	0x1cb53
	.uleb128 0x1f
	.long	0xf9a7
	.uleb128 0x6
	.long	0xfe0d
	.uleb128 0x4
	.long	0x1cb62
	.uleb128 0x7
	.long	0x100d6
	.uleb128 0x1f
	.long	0xfe0d
	.uleb128 0x7
	.long	0xfe0d
	.uleb128 0x6
	.long	0xebdc
	.uleb128 0x4
	.long	0x1cb7b
	.uleb128 0x1f
	.long	0xebdc
	.uleb128 0x7
	.long	0xebdc
	.uleb128 0x7
	.long	0xed41
	.uleb128 0x6
	.long	0xf0d2
	.uleb128 0x4
	.long	0x1cb94
	.uleb128 0x6
	.long	0x100f3
	.uleb128 0x4
	.long	0x1cb9e
	.uleb128 0x1f
	.long	0x100f3
	.uleb128 0x7
	.long	0x100f3
	.uleb128 0x6
	.long	0x102ff
	.uleb128 0x4
	.long	0x1cbb2
	.uleb128 0x1f
	.long	0x102ff
	.uleb128 0x7
	.long	0x102ff
	.uleb128 0x6
	.long	0x1090d
	.uleb128 0x4
	.long	0x1cbc6
	.uleb128 0x7
	.long	0x10580
	.uleb128 0x7
	.long	0x1058e
	.uleb128 0x7
	.long	0x1090d
	.uleb128 0x6
	.long	0x10912
	.uleb128 0x6
	.long	0x10e50
	.uleb128 0x4
	.long	0x1cbe4
	.uleb128 0x6
	.long	0x11058
	.uleb128 0x4
	.long	0x1cbee
	.uleb128 0x7
	.long	0x10a29
	.uleb128 0x7
	.long	0x111b9
	.uleb128 0x1f
	.long	0x11058
	.uleb128 0x7
	.long	0x10912
	.uleb128 0x7
	.long	0x11058
	.uleb128 0x7
	.long	0x111be
	.uleb128 0x7
	.long	0x11336
	.uleb128 0x6
	.long	0x111be
	.uleb128 0x4
	.long	0x1cc1b
	.uleb128 0x1f
	.long	0x111be
	.uleb128 0x6
	.long	0x1133b
	.uleb128 0x4
	.long	0x1cc2a
	.uleb128 0x7
	.long	0x1cbe9
	.uleb128 0x7
	.long	0x11486
	.uleb128 0x1f
	.long	0x1133b
	.uleb128 0x7
	.long	0x1cbe4
	.uleb128 0x7
	.long	0x1133b
	.uleb128 0x7
	.long	0x1148b
	.uleb128 0x7
	.long	0x116a9
	.uleb128 0x7
	.long	0x115a5
	.uleb128 0x7
	.long	0x115b2
	.uleb128 0x6
	.long	0x1148b
	.uleb128 0x4
	.long	0x1cc61
	.uleb128 0x1f
	.long	0x1148b
	.uleb128 0x6
	.long	0x116ae
	.uleb128 0x4
	.long	0x1cc70
	.uleb128 0x7
	.long	0x11853
	.uleb128 0x1f
	.long	0x116ae
	.uleb128 0x7
	.long	0x116ae
	.uleb128 0x6
	.long	0x10ad1
	.uleb128 0x4
	.long	0x1cc89
	.uleb128 0x1f
	.long	0x10ad1
	.uleb128 0x7
	.long	0x10ad1
	.uleb128 0x7
	.long	0x10ce0
	.uleb128 0x6
	.long	0x10dfd
	.uleb128 0x4
	.long	0x1cca2
	.uleb128 0x6
	.long	0x11870
	.uleb128 0x4
	.long	0x1ccac
	.uleb128 0x1f
	.long	0x11870
	.uleb128 0x7
	.long	0x11870
	.uleb128 0x7
	.long	0x10e50
	.uleb128 0x6
	.long	0x11a79
	.uleb128 0x4
	.long	0x1ccc5
	.uleb128 0x1f
	.long	0x11a79
	.uleb128 0x7
	.long	0x11a79
	.uleb128 0x6
	.long	0x11de8
	.uleb128 0x4
	.long	0x1ccd9
	.uleb128 0x7
	.long	0x11c2c
	.uleb128 0x7
	.long	0x11c3a
	.uleb128 0x7
	.long	0x11de8
	.uleb128 0x63
	.long	0x10e7a
	.uleb128 0x6
	.long	0x22c1f
	.uleb128 0x1f
	.long	0x22c1f
	.uleb128 0x7
	.long	0x22c59
	.uleb128 0x6
	.long	0x22c59
	.uleb128 0x6
	.long	0x10e02
	.uleb128 0x4
	.long	0x1cd0b
	.uleb128 0x6
	.long	0x11053
	.uleb128 0x4
	.long	0x1cd15
	.uleb128 0x1f
	.long	0x10f68
	.uleb128 0x6
	.long	0x11ded
	.uleb128 0x4
	.long	0x1cd24
	.uleb128 0x7
	.long	0x1201c
	.uleb128 0x7
	.long	0x11ded
	.uleb128 0x6
	.long	0x1201c
	.uleb128 0x4
	.long	0x1cd38
	.uleb128 0x1f
	.long	0x11ece
	.uleb128 0x6
	.long	0x22e56
	.uleb128 0xe3
	.long	0x43d7
	.byte	0x1
	.long	0x1cd5f
	.uleb128 0x84
	.long	0xf5
	.byte	0xfe
	.byte	0
	.uleb128 0x7
	.long	0x1cd4c
	.uleb128 0x6
	.long	0x22f56
	.uleb128 0x70
	.long	0x1c002
	.long	0x1cd75
	.uleb128 0xbd
	.byte	0
	.uleb128 0x70
	.long	0x5de9
	.long	0x1cd81
	.uleb128 0xbd
	.byte	0
	.uleb128 0x70
	.long	0x10e50
	.long	0x1cd8d
	.uleb128 0xbd
	.byte	0
	.uleb128 0x6
	.long	0x1236a
	.uleb128 0x4
	.long	0x1cd8d
	.uleb128 0x7
	.long	0x22f56
	.uleb128 0x7
	.long	0x124f7
	.uleb128 0x1f
	.long	0x1236a
	.uleb128 0x7
	.long	0x22e56
	.uleb128 0x7
	.long	0x1236a
	.uleb128 0x7
	.long	0x124fc
	.uleb128 0x7
	.long	0x126a1
	.uleb128 0x6
	.long	0x124fc
	.uleb128 0x4
	.long	0x1cdba
	.uleb128 0x1f
	.long	0x124fc
	.uleb128 0x6
	.long	0x126a6
	.uleb128 0x4
	.long	0x1cdc9
	.uleb128 0x7
	.long	0x12788
	.uleb128 0x1f
	.long	0x126a6
	.uleb128 0x7
	.long	0x126a6
	.uleb128 0x1f
	.long	0xea7
	.uleb128 0x6
	.long	0x6231
	.uleb128 0x4
	.long	0x1cde7
	.uleb128 0x6
	.long	0x127a5
	.uleb128 0x6
	.long	0x1286d
	.uleb128 0x4
	.long	0x1cdf6
	.uleb128 0x6
	.long	0x61ba
	.uleb128 0x4
	.long	0x1ce00
	.uleb128 0x6
	.long	0x12dd4
	.uleb128 0x4
	.long	0x1ce0a
	.uleb128 0x7
	.long	0x1286d
	.uleb128 0x7
	.long	0x1311a
	.uleb128 0x1f
	.long	0x12dd4
	.uleb128 0x7
	.long	0x127a5
	.uleb128 0x7
	.long	0x12dd4
	.uleb128 0x7
	.long	0x1311f
	.uleb128 0x7
	.long	0x134a6
	.uleb128 0x6
	.long	0x1311f
	.uleb128 0x4
	.long	0x1ce37
	.uleb128 0x1f
	.long	0x1311f
	.uleb128 0x6
	.long	0x134ab
	.uleb128 0x4
	.long	0x1ce46
	.uleb128 0x7
	.long	0x1ce05
	.uleb128 0x7
	.long	0x13759
	.uleb128 0x1f
	.long	0x134ab
	.uleb128 0x7
	.long	0x1ce00
	.uleb128 0x7
	.long	0x134ab
	.uleb128 0x7
	.long	0x1375e
	.uleb128 0x7
	.long	0x13c12
	.uleb128 0x7
	.long	0x13894
	.uleb128 0x7
	.long	0x138a1
	.uleb128 0x6
	.long	0x1375e
	.uleb128 0x4
	.long	0x1ce7d
	.uleb128 0x1f
	.long	0x1375e
	.uleb128 0x6
	.long	0x13c17
	.uleb128 0x4
	.long	0x1ce8c
	.uleb128 0x7
	.long	0x13f1e
	.uleb128 0x1f
	.long	0x13c17
	.uleb128 0x7
	.long	0x13c17
	.uleb128 0x6
	.long	0x12872
	.uleb128 0x4
	.long	0x1cea5
	.uleb128 0x1f
	.long	0x12872
	.uleb128 0x7
	.long	0x12872
	.uleb128 0x7
	.long	0x129ff
	.uleb128 0x6
	.long	0x12dcf
	.uleb128 0x6
	.long	0x13f3b
	.uleb128 0x4
	.long	0x1cec3
	.uleb128 0x1f
	.long	0x13f3b
	.uleb128 0x7
	.long	0x13f3b
	.uleb128 0x7
	.long	0x61ba
	.uleb128 0x6
	.long	0x64d8
	.uleb128 0x4
	.long	0x1cedc
	.uleb128 0x1f
	.long	0x64d8
	.uleb128 0x7
	.long	0x64d8
	.uleb128 0x6
	.long	0x6b9f
	.uleb128 0x7
	.long	0x67ed
	.uleb128 0x7
	.long	0x67fb
	.uleb128 0x7
	.long	0x6b9f
	.uleb128 0x6
	.long	0x11ece
	.uleb128 0x4
	.long	0x1cf04
	.uleb128 0x7
	.long	0x11ece
	.uleb128 0x6
	.long	0x62f0
	.uleb128 0x4
	.long	0x1cf13
	.uleb128 0x1f
	.long	0x62f0
	.uleb128 0x7
	.long	0x646b
	.uleb128 0x8e
	.ascii "sched_yield\0"
	.byte	0x48
	.byte	0xea
	.byte	0x14
	.long	0x188
	.uleb128 0xe
	.ascii "pthread_mutex_unlock\0"
	.byte	0x48
	.word	0x14c
	.byte	0x14
	.long	0x188
	.long	0x1cf64
	.uleb128 0x1
	.long	0x1cf64
	.byte	0
	.uleb128 0x6
	.long	0x18f0c
	.uleb128 0xe
	.ascii "pthread_cond_wait\0"
	.byte	0x48
	.word	0x146
	.byte	0x14
	.long	0x188
	.long	0x1cf93
	.uleb128 0x1
	.long	0x1cf93
	.uleb128 0x1
	.long	0x1cf64
	.byte	0
	.uleb128 0x6
	.long	0x18f25
	.uleb128 0xe
	.ascii "pthread_mutex_lock\0"
	.byte	0x48
	.word	0x14a
	.byte	0x14
	.long	0x188
	.long	0x1cfbe
	.uleb128 0x1
	.long	0x1cf64
	.byte	0
	.uleb128 0xbe
	.secrel32	.LASF181
	.byte	0x89
	.ascii "_ZdaPvy\0"
	.long	0x1cfdc
	.uleb128 0x1
	.long	0x4b4
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0xe4
	.long	0x61c7
	.ascii "_ZNSt6thread6_StateD2Ev\0"
	.long	0x1d002
	.long	0x1d00c
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ce05
	.byte	0
	.uleb128 0x8e
	.ascii "_errno\0"
	.byte	0x50
	.byte	0x12
	.byte	0x1f
	.long	0x1e1
	.uleb128 0x2d
	.ascii "nanosleep\0"
	.byte	0x51
	.byte	0x58
	.byte	0x1c
	.long	0x188
	.long	0x1d03d
	.uleb128 0x1
	.long	0x1d03d
	.uleb128 0x1
	.long	0x1d042
	.byte	0
	.uleb128 0x6
	.long	0x18ec4
	.uleb128 0x6
	.long	0x18e95
	.uleb128 0xe
	.ascii "pthread_cond_signal\0"
	.byte	0x48
	.word	0x144
	.byte	0x14
	.long	0x188
	.long	0x1d06e
	.uleb128 0x1
	.long	0x1cf93
	.byte	0
	.uleb128 0xe
	.ascii "pthread_cond_broadcast\0"
	.byte	0x48
	.word	0x145
	.byte	0x14
	.long	0x188
	.long	0x1d098
	.uleb128 0x1
	.long	0x1cf93
	.byte	0
	.uleb128 0xe
	.ascii "pthread_mutex_init\0"
	.byte	0x48
	.word	0x14e
	.byte	0x14
	.long	0x188
	.long	0x1d0c3
	.uleb128 0x1
	.long	0x1cf64
	.uleb128 0x1
	.long	0x1d0c3
	.byte	0
	.uleb128 0x6
	.long	0x18ef5
	.uleb128 0xe
	.ascii "pthread_mutex_destroy\0"
	.byte	0x48
	.word	0x14f
	.byte	0x14
	.long	0x188
	.long	0x1d0f1
	.uleb128 0x1
	.long	0x1cf64
	.byte	0
	.uleb128 0xe
	.ascii "pthread_cond_destroy\0"
	.byte	0x48
	.word	0x143
	.byte	0x14
	.long	0x188
	.long	0x1d119
	.uleb128 0x1
	.long	0x1cf93
	.byte	0
	.uleb128 0x139
	.ascii "__cxa_guard_release\0"
	.long	0x1d139
	.uleb128 0x1
	.long	0x561
	.byte	0
	.uleb128 0x13a
	.ascii "__cxa_guard_acquire\0"
	.long	0x188
	.long	0x1d15d
	.uleb128 0x1
	.long	0x561
	.byte	0
	.uleb128 0xbe
	.secrel32	.LASF181
	.byte	0xa1
	.ascii "_ZdaPvSt11align_val_t\0"
	.long	0x1d189
	.uleb128 0x1
	.long	0x4b4
	.uleb128 0x1
	.long	0x2095
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF182
	.byte	0x4
	.byte	0x9d
	.byte	0x1a
	.ascii "_ZnaySt11align_val_t\0"
	.long	0x4b4
	.long	0x1d1b9
	.uleb128 0x1
	.long	0xe33
	.uleb128 0x1
	.long	0x2095
	.byte	0
	.uleb128 0x7f
	.ascii "pthread_self\0"
	.byte	0x48
	.word	0x120
	.byte	0x1a
	.long	0x18efa
	.uleb128 0xe
	.ascii "malloc\0"
	.byte	0x20
	.word	0x21a
	.byte	0x11
	.long	0x4b4
	.long	0x1d1e9
	.uleb128 0x1
	.long	0xe6
	.byte	0
	.uleb128 0xe
	.ascii "PeekMessageW\0"
	.byte	0x3f
	.word	0x7b6
	.byte	0x1d
	.long	0x4b7
	.long	0x1d21d
	.uleb128 0x1
	.long	0x17b91
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x538
	.uleb128 0x1
	.long	0x538
	.uleb128 0x1
	.long	0x538
	.byte	0
	.uleb128 0xe
	.ascii "DispatchMessageW\0"
	.byte	0x3f
	.word	0x7b3
	.byte	0x1d
	.long	0x176b2
	.long	0x1d241
	.uleb128 0x1
	.long	0x1d241
	.byte	0
	.uleb128 0x6
	.long	0x17b87
	.uleb128 0xe
	.ascii "TranslateMessage\0"
	.byte	0x3f
	.word	0x7b1
	.byte	0x1d
	.long	0x4b7
	.long	0x1d26a
	.uleb128 0x1
	.long	0x1d241
	.byte	0
	.uleb128 0xe
	.ascii "GetAsyncKeyState\0"
	.byte	0x3f
	.word	0xa15
	.byte	0x1b
	.long	0x5ce
	.long	0x1d28e
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "round\0"
	.byte	0x41
	.word	0x405
	.byte	0x19
	.long	0x788
	.long	0x1d2a7
	.uleb128 0x1
	.long	0x788
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF183
	.byte	0x4
	.byte	0x7e
	.byte	0x1a
	.ascii "_Znwy\0"
	.long	0x4b4
	.long	0x1d2c3
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0xe
	.ascii "UpdateWindow\0"
	.byte	0x3f
	.word	0xdac
	.byte	0x1d
	.long	0x4b7
	.long	0x1d2e3
	.uleb128 0x1
	.long	0x17746
	.byte	0
	.uleb128 0xe
	.ascii "ShowWindow\0"
	.byte	0x3f
	.word	0x8a5
	.byte	0x1d
	.long	0x4b7
	.long	0x1d306
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "LocalFree\0"
	.byte	0x52
	.word	0x467
	.byte	0x1c
	.long	0x176c2
	.long	0x1d323
	.uleb128 0x1
	.long	0x176c2
	.byte	0
	.uleb128 0xe
	.ascii "FormatMessageW\0"
	.byte	0x52
	.word	0x5a1
	.byte	0x1b
	.long	0x4e1
	.long	0x1d363
	.uleb128 0x1
	.long	0x4e1
	.uleb128 0x1
	.long	0x515
	.uleb128 0x1
	.long	0x4e1
	.uleb128 0x1
	.long	0x4e1
	.uleb128 0x1
	.long	0x609
	.uleb128 0x1
	.long	0x4e1
	.uleb128 0x1
	.long	0x1d363
	.byte	0
	.uleb128 0x6
	.long	0xd6
	.uleb128 0x8e
	.ascii "GetLastError\0"
	.byte	0x53
	.byte	0x30
	.byte	0x1b
	.long	0x4e1
	.uleb128 0xe
	.ascii "CreateWindowExW\0"
	.byte	0x3f
	.word	0x89c
	.byte	0x1a
	.long	0x17746
	.long	0x1d3d8
	.uleb128 0x1
	.long	0x4e1
	.uleb128 0x1
	.long	0x619
	.uleb128 0x1
	.long	0x619
	.uleb128 0x1
	.long	0x4e1
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x177e2
	.uleb128 0x1
	.long	0x17701
	.uleb128 0x1
	.long	0x506
	.byte	0
	.uleb128 0xe
	.ascii "RegisterClassExW\0"
	.byte	0x3f
	.word	0x86c
	.byte	0x1a
	.long	0x176d1
	.long	0x1d3fc
	.uleb128 0x1
	.long	0x1d3fc
	.byte	0
	.uleb128 0x6
	.long	0x17af1
	.uleb128 0xe
	.ascii "LoadCursorW\0"
	.byte	0x3f
	.word	0x1012
	.byte	0x1d
	.long	0x177f5
	.long	0x1d425
	.uleb128 0x1
	.long	0x17701
	.uleb128 0x1
	.long	0x619
	.byte	0
	.uleb128 0x2d
	.ascii "GetModuleHandleW\0"
	.byte	0x54
	.byte	0x8c
	.byte	0x1b
	.long	0x17718
	.long	0x1d448
	.uleb128 0x1
	.long	0x619
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF182
	.byte	0x4
	.byte	0x80
	.byte	0x1a
	.ascii "_Znay\0"
	.long	0x4b4
	.long	0x1d464
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0x13b
	.ascii "__cxa_throw_bad_array_new_length\0"
	.long	0xf5
	.uleb128 0x2d
	.ascii "MultiByteToWideChar\0"
	.byte	0x55
	.byte	0x29
	.byte	0x19
	.long	0x188
	.long	0x1d4ca
	.uleb128 0x1
	.long	0x538
	.uleb128 0x1
	.long	0x4e1
	.uleb128 0x1
	.long	0x62f
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x609
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0x13c
	.secrel32	.LASF184
	.byte	0xd
	.word	0x9ac
	.byte	0x10
	.long	0x672
	.long	0x1d4f1
	.uleb128 0x1
	.long	0x1a915
	.uleb128 0x1
	.long	0x17bd2
	.uleb128 0x1
	.long	0x1d4f1
	.uleb128 0x1
	.long	0x17bcd
	.byte	0
	.uleb128 0x6
	.long	0x1af6b
	.uleb128 0xbe
	.secrel32	.LASF181
	.byte	0x84
	.ascii "_ZdaPv\0"
	.long	0x1d50e
	.uleb128 0x1
	.long	0x4b4
	.byte	0
	.uleb128 0x6e
	.ascii "PostQuitMessage\0"
	.byte	0x3f
	.word	0x860
	.byte	0x1a
	.long	0x1d52d
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0xe
	.ascii "ValidateRect\0"
	.byte	0x3f
	.word	0xde6
	.byte	0x1d
	.long	0x4b7
	.long	0x1d552
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x17883
	.byte	0
	.uleb128 0xe
	.ascii "InvalidateRect\0"
	.byte	0x3f
	.word	0xde5
	.byte	0x1d
	.long	0x4b7
	.long	0x1d57e
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x17883
	.uleb128 0x1
	.long	0x4b7
	.byte	0
	.uleb128 0xe
	.ascii "DefWindowProcW\0"
	.byte	0x3f
	.word	0x85f
	.byte	0x1d
	.long	0x176b2
	.long	0x1d5af
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x538
	.uleb128 0x1
	.long	0x17694
	.uleb128 0x1
	.long	0x176a3
	.byte	0
	.uleb128 0xe
	.ascii "GetClientRect\0"
	.byte	0x3f
	.word	0xe39
	.byte	0x1d
	.long	0x4b7
	.long	0x1d5d5
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x17874
	.byte	0
	.uleb128 0x6e
	.ascii "free\0"
	.byte	0x20
	.word	0x219
	.byte	0x10
	.long	0x1d5e9
	.uleb128 0x1
	.long	0x4b4
	.byte	0
	.uleb128 0x8d
	.ascii "operator delete\0"
	.byte	0x4
	.byte	0x87
	.byte	0x6
	.ascii "_ZdlPvy\0"
	.long	0x1d615
	.uleb128 0x1
	.long	0x4b4
	.uleb128 0x1
	.long	0xe33
	.byte	0
	.uleb128 0xe
	.ascii "SetWindowLongPtrW\0"
	.byte	0x3f
	.word	0xf36
	.byte	0x1e
	.long	0x586
	.long	0x1d644
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x188
	.uleb128 0x1
	.long	0x586
	.byte	0
	.uleb128 0xe
	.ascii "vswprintf_s\0"
	.byte	0x14
	.word	0x319
	.byte	0xf
	.long	0x188
	.long	0x1d672
	.uleb128 0x1
	.long	0x1cc
	.uleb128 0x1
	.long	0xe6
	.uleb128 0x1
	.long	0x799
	.uleb128 0x1
	.long	0xd6
	.byte	0
	.uleb128 0xe
	.ascii "MessageBoxW\0"
	.byte	0x3f
	.word	0xe83
	.byte	0x19
	.long	0x188
	.long	0x1d6a0
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x619
	.uleb128 0x1
	.long	0x619
	.uleb128 0x1
	.long	0x538
	.byte	0
	.uleb128 0x2d
	.ascii "__mingw_vfprintf\0"
	.byte	0x2
	.byte	0xc1
	.byte	0xf
	.long	0x188
	.long	0x1d6cd
	.uleb128 0x1
	.long	0x17ca0
	.uleb128 0x1
	.long	0x1713c
	.uleb128 0x1
	.long	0xd6
	.byte	0
	.uleb128 0x2d
	.ascii "__acrt_iob_func\0"
	.byte	0x43
	.byte	0x38
	.byte	0x17
	.long	0x17ca0
	.long	0x1d6ef
	.uleb128 0x1
	.long	0x1e6
	.byte	0
	.uleb128 0xe
	.ascii "GetWindowLongPtrW\0"
	.byte	0x3f
	.word	0xf34
	.byte	0x1e
	.long	0x586
	.long	0x1d719
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x188
	.byte	0
	.uleb128 0x2a
	.long	0x12446
	.quad	.LFB12414
	.quad	.LFE12414-.LFB12414
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d744
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0xe9
	.byte	0x1b
	.long	0x1cdab
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x12553
	.quad	.LFB12413
	.quad	.LFE12413-.LFB12413
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d770
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x1a8
	.byte	0x1c
	.long	0x1cdb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x14f53
	.quad	.LFB12412
	.quad	.LFE12412-.LFB12412
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d7bd
	.uleb128 0xe1
	.ascii "_Res\0"
	.uleb128 0x9
	.ascii "_Fn\0"
	.long	0x22e56
	.uleb128 0x43
	.secrel32	.LASF128
	.uleb128 0x53
	.long	0xe48
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__f\0"
	.byte	0x18
	.byte	0x3c
	.byte	0x29
	.long	0x14fc5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9c
	.byte	0x18
	.byte	0x3c
	.byte	0x35
	.byte	0
	.uleb128 0x15
	.long	0x14fcb
	.quad	.LFB12411
	.quad	.LFE12411-.LFB12411
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d801
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x22e56
	.uleb128 0x43
	.secrel32	.LASF133
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x554
	.byte	0x35
	.long	0x1cdb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1503e
	.quad	.LFB12410
	.quad	.LFE12410-.LFB12410
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d840
	.uleb128 0x3
	.secrel32	.LASF64
	.long	0x22e56
	.uleb128 0x43
	.secrel32	.LASF128
	.uleb128 0x18
	.ascii "__fn\0"
	.byte	0x18
	.byte	0x5a
	.byte	0x1a
	.long	0x14fc5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9c
	.byte	0x18
	.byte	0x5a
	.byte	0x27
	.byte	0
	.uleb128 0x1f
	.long	0x1509a
	.uleb128 0x15
	.long	0x150a6
	.quad	.LFB12409
	.quad	.LFE12409-.LFB12409
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d88a
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x1d879
	.uleb128 0x10
	.long	0x22e56
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x570
	.byte	0x1f
	.long	0x1cdd8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1f
	.long	0x14dbf
	.uleb128 0x2a
	.long	0x15111
	.quad	.LFB12408
	.quad	.LFE12408-.LFB12408
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d8c3
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cddd
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x12
	.byte	0x68
	.byte	0x10
	.long	0x1cddd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x62ab
	.long	0x1d8f5
	.quad	.LFB12406
	.quad	.LFE12406-.LFB12406
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d90a
	.uleb128 0xd5
	.ascii "_Ind\0"
	.byte	0xf9
	.long	0x1d8f5
	.uleb128 0xa9
	.long	0xf5
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cdec
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x53
	.long	0x14d30
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x6295
	.long	0x1d929
	.quad	.LFB12405
	.quad	.LFE12405-.LFB12405
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d936
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cdec
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x63ad
	.long	0x1d955
	.quad	.LFB12404
	.quad	.LFE12404-.LFB12404
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d962
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cf18
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x50
	.long	0x63cf
	.byte	0xb
	.byte	0xc8
	.byte	0xe
	.long	0x1d972
	.long	0x1d985
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cf18
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x3c
	.long	0x1d962
	.long	0x1d9a4
	.quad	.LFB12387
	.quad	.LFE12387-.LFB12387
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d9ad
	.uleb128 0x8
	.long	0x1d972
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x3c
	.long	0x1d962
	.long	0x1d9cc
	.quad	.LFB12385
	.quad	.LFE12385-.LFB12385
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d9d5
	.uleb128 0x8
	.long	0x1d972
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2a
	.long	0x1144f
	.quad	.LFB12383
	.quad	.LFE12383-.LFB12383
	.uleb128 0x1
	.byte	0x9c
	.long	0x1da00
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0xec
	.byte	0x21
	.long	0x1cc39
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1158f
	.quad	.LFB12382
	.quad	.LFE12382-.LFB12382
	.uleb128 0x1
	.byte	0x9c
	.long	0x1da2c
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x10f
	.byte	0x22
	.long	0x1cc52
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x15177
	.quad	.LFB12381
	.quad	.LFE12381-.LFB12381
	.uleb128 0x1
	.byte	0x9c
	.long	0x1da7a
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1cbe4
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x1da69
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x559
	.byte	0x3b
	.long	0x1cc52
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x151bb
	.uleb128 0x15
	.long	0x151c0
	.quad	.LFB12380
	.quad	.LFE12380-.LFB12380
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dac9
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x1dab8
	.uleb128 0x10
	.long	0x1cbe4
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x56a
	.byte	0x24
	.long	0x1cc7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1eea
	.quad	.LFB12379
	.quad	.LFE12379-.LFB12379
	.uleb128 0x1
	.byte	0x9c
	.long	0x1db36
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x1f68f
	.uleb128 0x3
	.secrel32	.LASF17
	.long	0x1366
	.uleb128 0x3d
	.secrel32	.LASF187
	.byte	0x8
	.byte	0x9e
	.byte	0x1c
	.long	0x1fb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF188
	.byte	0x8
	.byte	0x9e
	.byte	0x2a
	.long	0x1366
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3f
	.quad	.LBB333
	.quad	.LBE333-.LBB333
	.uleb128 0x24
	.ascii "__i\0"
	.byte	0x8
	.byte	0xa0
	.byte	0xc
	.long	0x188
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	0x1302e
	.quad	.LFB12378
	.quad	.LFE12378-.LFB12378
	.uleb128 0x1
	.byte	0x9c
	.long	0x1db61
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0x7c
	.byte	0x1b
	.long	0x1ce28
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x1ddd
	.long	0x1db78
	.byte	0x2
	.long	0x1db8f
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19109
	.uleb128 0x4c
	.secrel32	.LASF189
	.byte	0x8
	.word	0x173
	.byte	0x21
	.long	0x1bd9e
	.byte	0
	.uleb128 0x20
	.long	0x1db61
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEEC1ISt17__barrier_phase_tEEPKT_\0"
	.long	0x1dc0b
	.quad	.LFB12377
	.quad	.LFE12377-.LFB12377
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dc1c
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x8
	.long	0x1db78
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1db81
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7
	.long	0x152ec
	.uleb128 0x64
	.long	0x1520c
	.long	0x1dc75
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x4c
	.secrel32	.LASF190
	.byte	0x9
	.word	0x3e7
	.byte	0x24
	.long	0x1bd38
	.uleb128 0x4c
	.secrel32	.LASF191
	.byte	0x9
	.word	0x3e7
	.byte	0x36
	.long	0x1dc1c
	.uleb128 0x4c
	.secrel32	.LASF192
	.byte	0x9
	.word	0x3e8
	.byte	0x14
	.long	0x152ec
	.uleb128 0x4c
	.secrel32	.LASF193
	.byte	0x9
	.word	0x3e8
	.byte	0x2c
	.long	0x318c
	.uleb128 0x4c
	.secrel32	.LASF194
	.byte	0x9
	.word	0x3e9
	.byte	0x17
	.long	0x318c
	.byte	0
	.uleb128 0x16
	.long	0x10d43
	.long	0x1dc94
	.quad	.LFB12373
	.quad	.LFE12373-.LFB12373
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dca1
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cca7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x1687
	.uleb128 0x15
	.long	0x18a9
	.quad	.LFB12372
	.quad	.LFE12372-.LFB12372
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dd14
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x1f68f
	.uleb128 0x3
	.secrel32	.LASF17
	.long	0x1366
	.uleb128 0x1e
	.secrel32	.LASF189
	.byte	0x8
	.word	0x15c
	.byte	0x28
	.long	0x190af
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF187
	.byte	0x8
	.word	0x15d
	.byte	0xe
	.long	0x1f68f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1e
	.secrel32	.LASF195
	.byte	0x8
	.word	0x15e
	.byte	0x1b
	.long	0x1dca1
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1e
	.secrel32	.LASF188
	.byte	0x8
	.word	0x15f
	.byte	0xe
	.long	0x1366
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x2a
	.long	0x1984
	.quad	.LFB12371
	.quad	.LFE12371-.LFB12371
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dd59
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0xaa56
	.uleb128 0x11
	.ascii "__a\0"
	.byte	0x8
	.word	0x116
	.byte	0x1c
	.long	0x1bd9e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__b\0"
	.byte	0x8
	.word	0x116
	.byte	0x34
	.long	0x190e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x13169
	.quad	.LFB12370
	.quad	.LFE12370-.LFB12370
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dd85
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x1a8
	.byte	0x1c
	.long	0x1ce2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2a
	.long	0x13693
	.quad	.LFB12369
	.quad	.LFE12369-.LFB12369
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ddb0
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0xe9
	.byte	0x1b
	.long	0x1ce64
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x12e1b
	.long	0x1ddbe
	.byte	0x2
	.long	0x1ddc8
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ce0f
	.byte	0
	.uleb128 0x40
	.long	0x1ddb0
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteINSt6thread6_StateEELb1EEC2Ev\0"
	.long	0x1de2d
	.quad	.LFB12367
	.quad	.LFE12367-.LFB12367
	.uleb128 0x1
	.byte	0x9c
	.long	0x1de36
	.uleb128 0x8
	.long	0x1ddbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x154d6
	.quad	.LFB12365
	.quad	.LFE12365-.LFB12365
	.uleb128 0x1
	.byte	0x9c
	.long	0x1de8d
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x1e
	.secrel32	.LASF189
	.byte	0x8
	.word	0x1c9
	.byte	0x28
	.long	0x1bd9e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__all\0"
	.byte	0x8
	.word	0x1c9
	.byte	0x35
	.long	0x184a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x17
	.ascii "__w\0"
	.byte	0x8
	.word	0x1cb
	.byte	0x1d
	.long	0x1fc3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x16
	.long	0xaeca
	.long	0x1deac
	.quad	.LFB12364
	.quad	.LFE12364-.LFB12364
	.uleb128 0x1
	.byte	0x9c
	.long	0x1df3b
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1bd33
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF191
	.byte	0x9
	.word	0x58c
	.byte	0x24
	.long	0x1bd29
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1e
	.secrel32	.LASF192
	.byte	0x9
	.word	0x58c
	.byte	0x34
	.long	0xaa56
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1e
	.secrel32	.LASF193
	.byte	0x9
	.word	0x58d
	.byte	0x15
	.long	0x318c
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1e
	.secrel32	.LASF194
	.byte	0x9
	.word	0x58e
	.byte	0x15
	.long	0x318c
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x69
	.long	0x1dc21
	.quad	.LBB330
	.quad	.LBE330-.LBB330
	.byte	0x9
	.word	0x590
	.byte	0x2f
	.uleb128 0x8
	.long	0x1dc67
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x8
	.long	0x1dc5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x8
	.long	0x1dc4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -57
	.uleb128 0x8
	.long	0x1dc40
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x8
	.long	0x1dc33
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	0xb1f0
	.quad	.LFB12363
	.quad	.LFE12363-.LFB12363
	.uleb128 0x1
	.byte	0x9c
	.long	0x1df75
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x17
	.byte	0x3c
	.byte	0x1b
	.long	0x1bd3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__n\0"
	.byte	0x17
	.byte	0x3c
	.byte	0x2c
	.long	0xe33
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x11c0f
	.long	0x1df94
	.quad	.LFB12362
	.quad	.LFE12362-.LFB12362
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dfa1
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1ccde
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x1a2c
	.long	0x1dfd2
	.quad	.LFB12361
	.quad	.LFE12361-.LFB12361
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e00f
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x1f68f
	.uleb128 0x55
	.secrel32	.LASF17
	.long	0x1366
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x190f5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF187
	.byte	0x8
	.word	0x168
	.byte	0x15
	.long	0x1f68f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1e
	.secrel32	.LASF195
	.byte	0x8
	.word	0x168
	.byte	0x30
	.long	0x1dca1
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1e
	.secrel32	.LASF188
	.byte	0x8
	.word	0x169
	.byte	0xe
	.long	0x1366
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x14
	.long	0x1ae7
	.long	0x1e026
	.byte	0x2
	.long	0x1e03d
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0xaa56
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x190f5
	.uleb128 0x4c
	.secrel32	.LASF189
	.byte	0x8
	.word	0x127
	.byte	0x26
	.long	0x1bd9e
	.byte	0
	.uleb128 0x20
	.long	0x1e00f
	.ascii "_ZNSt8__detail13__waiter_baseINS_13__waiter_poolEEC2ISt17__barrier_phase_tEEPKT_\0"
	.long	0x1e0b6
	.quad	.LFB12359
	.quad	.LFE12359-.LFB12359
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e0c7
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0xaa56
	.uleb128 0x8
	.long	0x1e026
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1e02f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x2a
	.long	0xf937
	.quad	.LFB12357
	.quad	.LFE12357-.LFB12357
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e0f2
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0xec
	.byte	0x21
	.long	0x1cb2b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2a
	.long	0x1116c
	.quad	.LFB12356
	.quad	.LFE12356-.LFB12356
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e11d
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0x7c
	.byte	0x1b
	.long	0x1cc0c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x110e5
	.long	0x1e12b
	.byte	0x2
	.long	0x1e135
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cbf3
	.byte	0
	.uleb128 0xbf
	.long	0x1e11d
	.long	0x1e155
	.quad	.LFB12354
	.quad	.LFE12354-.LFB12354
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e15e
	.uleb128 0x8
	.long	0x1e12b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2a
	.long	0xf309
	.quad	.LFB12352
	.quad	.LFE12352-.LFB12352
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e189
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0x7c
	.byte	0x1b
	.long	0x1cafe
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2a
	.long	0xd5d4
	.quad	.LFB12351
	.quad	.LFE12351-.LFB12351
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e1b4
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0xec
	.byte	0x21
	.long	0x1c79b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1555f
	.quad	.LFB12341
	.quad	.LFE12341-.LFB12341
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e1f8
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x127a5
	.uleb128 0x43
	.secrel32	.LASF133
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x554
	.byte	0x35
	.long	0x1ce2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x137c3
	.quad	.LFB12340
	.quad	.LFE12340-.LFB12340
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e224
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x10c
	.byte	0x1c
	.long	0x1ce69
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x134df
	.long	0x1e232
	.byte	0x2
	.long	0x1e23c
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ce4b
	.byte	0
	.uleb128 0x40
	.long	0x1e224
	.ascii "_ZNSt10_Head_baseILy0EPNSt6thread6_StateELb0EEC2Ev\0"
	.long	0x1e28e
	.quad	.LFB12338
	.quad	.LFE12338-.LFB12338
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e297
	.uleb128 0x8
	.long	0x1e232
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x13232
	.long	0x1e2a5
	.byte	0x2
	.long	0x1e2af
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ce3c
	.byte	0
	.uleb128 0x20
	.long	0x1e297
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteINSt6thread6_StateEEEEC2Ev\0"
	.long	0x1e313
	.quad	.LFB12335
	.quad	.LFE12335-.LFB12335
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e31c
	.uleb128 0x8
	.long	0x1e2a5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x64
	.long	0x152fa
	.long	0x1e33c
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x4c
	.secrel32	.LASF190
	.byte	0x9
	.word	0x407
	.byte	0x1d
	.long	0x1bd9e
	.byte	0
	.uleb128 0x64
	.long	0x15374
	.long	0x1e376
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x4c
	.secrel32	.LASF190
	.byte	0x9
	.word	0x3c1
	.byte	0x12
	.long	0x1bd38
	.uleb128 0x35
	.ascii "__t\0"
	.byte	0x9
	.word	0x3c1
	.byte	0x23
	.long	0x152ec
	.uleb128 0x35
	.ascii "__m\0"
	.byte	0x9
	.word	0x3c1
	.byte	0x35
	.long	0x318c
	.byte	0
	.uleb128 0x16
	.long	0xafee
	.long	0x1e395
	.quad	.LFB12331
	.quad	.LFE12331-.LFB12331
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e3d6
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1bd33
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF191
	.byte	0x9
	.word	0x59f
	.byte	0x24
	.long	0x1bd29
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1e
	.secrel32	.LASF192
	.byte	0x9
	.word	0x59f
	.byte	0x34
	.long	0xaa56
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "__order\0"
	.byte	0x9
	.word	0x5a0
	.byte	0x17
	.long	0x318c
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x16
	.long	0xb8bd
	.long	0x1e3f5
	.quad	.LFB12330
	.quad	.LFE12330-.LFB12330
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e411
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1bd58
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__n\0"
	.byte	0x17
	.byte	0xce
	.byte	0x1c
	.long	0xb7ae
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x11be2
	.long	0x1e430
	.quad	.LFB12329
	.quad	.LFE12329-.LFB12329
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e44d
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1ccde
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__i\0"
	.byte	0xf
	.word	0x2cd
	.byte	0x19
	.long	0xe33
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x2a
	.long	0x1562a
	.quad	.LFB12328
	.quad	.LFE12328-.LFB12328
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e481
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x18
	.ascii "__r\0"
	.byte	0x12
	.byte	0x31
	.byte	0x16
	.long	0x1bd29
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x1c22
	.long	0x1e4a9
	.quad	.LFB12327
	.quad	.LFE12327-.LFB12327
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e4dc
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x1f68f
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x190ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF187
	.byte	0x8
	.word	0x190
	.byte	0x15
	.long	0x1f68f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x65
	.secrel32	.LLRL15
	.uleb128 0x33
	.secrel32	.LASF195
	.byte	0x8
	.word	0x194
	.byte	0x15
	.long	0x1687
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x1cc6
	.long	0x1e4f3
	.byte	0x2
	.long	0x1e50a
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x190ff
	.uleb128 0x4c
	.secrel32	.LASF189
	.byte	0x8
	.word	0x173
	.byte	0x21
	.long	0x1bd9e
	.byte	0
	.uleb128 0x20
	.long	0x1e4dc
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEEC1ISt17__barrier_phase_tEEPKT_\0"
	.long	0x1e586
	.quad	.LFB12326
	.quad	.LFE12326-.LFB12326
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e597
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x8
	.long	0x1e4f3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1e4fc
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x64
	.long	0x1541b
	.long	0x1e5e5
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x4c
	.secrel32	.LASF190
	.byte	0x9
	.word	0x3c6
	.byte	0x17
	.long	0x1bd9e
	.uleb128 0x35
	.ascii "__m\0"
	.byte	0x9
	.word	0x3c6
	.byte	0x2b
	.long	0x318c
	.uleb128 0x13d
	.ascii "__buf\0"
	.byte	0x9
	.word	0x3c8
	.byte	0x1d
	.long	0x1e5e5
	.byte	0x1
	.uleb128 0x8f
	.ascii "__dest\0"
	.word	0x3c9
	.byte	0x8
	.long	0x1bd38
	.byte	0
	.uleb128 0x70
	.long	0x49e
	.long	0x1e5f6
	.uleb128 0x84
	.long	0xf5
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	0x15699
	.quad	.LFB12322
	.quad	.LFE12322-.LFB12322
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e62a
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa71
	.uleb128 0x18
	.ascii "__r\0"
	.byte	0x12
	.byte	0x31
	.byte	0x16
	.long	0x1bd8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xfa60
	.quad	.LFB12321
	.quad	.LFE12321-.LFB12321
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e656
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x10f
	.byte	0x22
	.long	0x1cb44
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x1124e
	.quad	.LFB12320
	.quad	.LFE12320-.LFB12320
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e682
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x1a8
	.byte	0x1c
	.long	0x1cc11
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2a
	.long	0x11439
	.quad	.LFB12319
	.quad	.LFE12319-.LFB12319
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e6ad
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0xe9
	.byte	0x1b
	.long	0x1cc48
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x113b2
	.long	0x1e6bb
	.byte	0x2
	.long	0x1e6c5
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cc2f
	.byte	0
	.uleb128 0xbf
	.long	0x1e6ad
	.long	0x1e6e5
	.quad	.LFB12317
	.quad	.LFE12317-.LFB12317
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e6ee
	.uleb128 0x8
	.long	0x1e6bb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x1127a
	.long	0x1e6fc
	.byte	0x2
	.long	0x1e706
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cc20
	.byte	0
	.uleb128 0x3c
	.long	0x1e6ee
	.long	0x1e725
	.quad	.LFB12314
	.quad	.LFE12314-.LFB12314
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e72e
	.uleb128 0x8
	.long	0x1e6fc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xf431
	.quad	.LFB12312
	.quad	.LFE12312-.LFB12312
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e75a
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x1a8
	.byte	0x1c
	.long	0x1cb03
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2a
	.long	0xf8ee
	.quad	.LFB12311
	.quad	.LFE12311-.LFB12311
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e785
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0xe9
	.byte	0x1b
	.long	0x1cb3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xf119
	.long	0x1e793
	.byte	0x2
	.long	0x1e79d
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cae5
	.byte	0
	.uleb128 0x40
	.long	0x1e785
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_St6threadELb1EEC2Ev\0"
	.long	0x1e7fb
	.quad	.LFB12309
	.quad	.LFE12309-.LFB12309
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e804
	.uleb128 0x8
	.long	0x1e793
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xd743
	.quad	.LFB12307
	.quad	.LFE12307-.LFB12307
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e830
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x10f
	.byte	0x22
	.long	0x1c7b4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2a
	.long	0xce48
	.quad	.LFB12306
	.quad	.LFE12306-.LFB12306
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e85b
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0x7c
	.byte	0x1b
	.long	0x1c76e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2a
	.long	0xd577
	.quad	.LFB12305
	.quad	.LFE12305-.LFB12305
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e886
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x16
	.byte	0xe9
	.byte	0x1b
	.long	0x1c7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x1570f
	.uleb128 0x15
	.long	0x1571b
	.quad	.LFB12287
	.quad	.LFE12287-.LFB12287
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e8d5
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x1e8c4
	.uleb128 0x10
	.long	0x1ce00
	.uleb128 0x10
	.long	0x127a5
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x564
	.byte	0x1e
	.long	0x1cea0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x15803
	.quad	.LFB12286
	.quad	.LFE12286-.LFB12286
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e923
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1ce00
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x1e912
	.uleb128 0x10
	.long	0x127a5
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x554
	.byte	0x35
	.long	0x1ce69
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x13977
	.long	0x1e931
	.byte	0x2
	.long	0x1e93b
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ce82
	.byte	0
	.uleb128 0x20
	.long	0x1e923
	.ascii "_ZNSt11_Tuple_implILy0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC2Ev\0"
	.long	0x1e9a3
	.quad	.LFB12284
	.quad	.LFE12284-.LFB12284
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e9ac
	.uleb128 0x8
	.long	0x1e931
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x1247f
	.long	0x1e9c3
	.byte	0x2
	.long	0x1e9d9
	.uleb128 0x3
	.secrel32	.LASF126
	.long	0x22e56
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cd92
	.uleb128 0x39
	.ascii "__h\0"
	.byte	0x16
	.byte	0xc7
	.byte	0x27
	.long	0x14fc5
	.byte	0
	.uleb128 0x3c
	.long	0x1e9ac
	.long	0x1ea01
	.quad	.LFB12281
	.quad	.LFE12281-.LFB12281
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ea12
	.uleb128 0x3
	.secrel32	.LASF126
	.long	0x22e56
	.uleb128 0x8
	.long	0x1e9c3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1e9cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0xb144
	.long	0x1ea20
	.byte	0x3
	.long	0x1ea2a
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1bd33
	.byte	0
	.uleb128 0x16
	.long	0xace6
	.long	0x1ea49
	.quad	.LFB12278
	.quad	.LFE12278-.LFB12278
	.uleb128 0x1
	.byte	0x9c
	.long	0x1eaa8
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1bd33
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x9
	.word	0x575
	.byte	0x11
	.long	0xaa56
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "__m\0"
	.byte	0x9
	.word	0x575
	.byte	0x23
	.long	0x318c
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x69
	.long	0x1e33c
	.quad	.LBB318
	.quad	.LBE318-.LBB318
	.byte	0x9
	.word	0x576
	.byte	0x1d
	.uleb128 0x8
	.long	0x1e368
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x8
	.long	0x1e35b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -29
	.uleb128 0x8
	.long	0x1e34e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x53fd
	.long	0x1eab6
	.byte	0x3
	.long	0x1eae7
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x195fe
	.uleb128 0x35
	.ascii "__i\0"
	.byte	0x9
	.word	0x1c8
	.byte	0x18
	.long	0x4ce0
	.uleb128 0x35
	.ascii "__m\0"
	.byte	0x9
	.word	0x1c8
	.byte	0x2a
	.long	0x318c
	.uleb128 0x8f
	.ascii "__b\0"
	.word	0x1ca
	.byte	0xf
	.long	0x318c
	.byte	0
	.uleb128 0x14
	.long	0x54a0
	.long	0x1eaf5
	.byte	0x3
	.long	0x1eb19
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19617
	.uleb128 0x35
	.ascii "__m\0"
	.byte	0x9
	.word	0x1e1
	.byte	0x19
	.long	0x318c
	.uleb128 0x8f
	.ascii "__b\0"
	.word	0x1e3
	.byte	0xf
	.long	0x318c
	.byte	0
	.uleb128 0x16
	.long	0x10f08
	.long	0x1eb38
	.quad	.LFB12275
	.quad	.LFE12275-.LFB12275
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ec57
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cd10
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF196
	.byte	0x11
	.byte	0x61
	.byte	0x23
	.long	0xaa56
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3d
	.secrel32	.LASF197
	.byte	0x11
	.byte	0x61
	.byte	0x37
	.long	0xe33
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x24
	.ascii "__old_phase_val\0"
	.byte	0x11
	.byte	0x63
	.byte	0xd
	.long	0x4af
	.uleb128 0x2
	.byte	0x91
	.sleb128 -29
	.uleb128 0x24
	.ascii "__half_step\0"
	.byte	0x11
	.byte	0x64
	.byte	0xd
	.long	0xaa71
	.uleb128 0x2
	.byte	0x91
	.sleb128 -30
	.uleb128 0x24
	.ascii "__full_step\0"
	.byte	0x11
	.byte	0x66
	.byte	0xd
	.long	0xaa71
	.uleb128 0x2
	.byte	0x91
	.sleb128 -31
	.uleb128 0x24
	.ascii "__current_expected\0"
	.byte	0x11
	.byte	0x69
	.byte	0x9
	.long	0xe33
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x3f
	.quad	.LBB313
	.quad	.LBE313-.LBB313
	.uleb128 0x24
	.ascii "__round\0"
	.byte	0x11
	.byte	0x6c
	.byte	0xb
	.long	0x188
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x3f
	.quad	.LBB314
	.quad	.LBE314-.LBB314
	.uleb128 0x24
	.ascii "__end_node\0"
	.byte	0x11
	.byte	0x70
	.byte	0x13
	.long	0xe43
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.ascii "__last_node\0"
	.byte	0x11
	.byte	0x71
	.byte	0x5
	.long	0xe43
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x65
	.secrel32	.LLRL14
	.uleb128 0x24
	.ascii "__expect\0"
	.byte	0x11
	.byte	0x76
	.byte	0x8
	.long	0xaa56
	.uleb128 0x2
	.byte	0x91
	.sleb128 -49
	.uleb128 0x90
	.secrel32	.LASF198
	.byte	0x77
	.byte	0x18
	.long	0x10fcb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x51
	.long	0xad55
	.long	0x1ec76
	.quad	.LFB12274
	.quad	.LFE12274-.LFB12274
	.uleb128 0x1
	.byte	0x9c
	.long	0x1eccd
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1bd33
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__m\0"
	.byte	0x9
	.word	0x579
	.byte	0x19
	.long	0x318c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x69
	.long	0x1e597
	.quad	.LBB311
	.quad	.LBE311-.LBB311
	.byte	0x9
	.word	0x57a
	.byte	0x23
	.uleb128 0x8
	.long	0x1e5b6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x8
	.long	0x1e5a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x42
	.long	0x1e5c3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -41
	.uleb128 0x42
	.long	0x1e5d4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xab0e
	.long	0x1ecdb
	.byte	0x2
	.long	0x1ecf2
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1bd1f
	.uleb128 0x35
	.ascii "__t\0"
	.byte	0x9
	.word	0x562
	.byte	0x19
	.long	0x1bd29
	.byte	0
	.uleb128 0x20
	.long	0x1eccd
	.ascii "_ZNSt12__atomic_refISt17__barrier_phase_tLb0ELb0EEC1ERS0_\0"
	.long	0x1ed4b
	.quad	.LFB12273
	.quad	.LFE12273-.LFB12273
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ed5c
	.uleb128 0x8
	.long	0x1ecdb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1ece4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x158f2
	.quad	.LFB12270
	.quad	.LFE12270-.LFB12270
	.uleb128 0x1
	.byte	0x9c
	.long	0x1edba
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xaa56
	.uleb128 0x3
	.secrel32	.LASF16
	.long	0x1f68f
	.uleb128 0x1e
	.secrel32	.LASF189
	.byte	0x8
	.word	0x1ac
	.byte	0x26
	.long	0x1bd9e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF187
	.byte	0x8
	.word	0x1ac
	.byte	0x34
	.long	0x1f68f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x17
	.ascii "__w\0"
	.byte	0x8
	.word	0x1ae
	.byte	0x1f
	.long	0x1fd8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x51
	.long	0xbf55
	.long	0x1edd9
	.quad	.LFB12269
	.quad	.LFE12269-.LFB12269
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ee30
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1bd99
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__m\0"
	.byte	0x9
	.word	0x579
	.byte	0x19
	.long	0x318c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x69
	.long	0x1e597
	.quad	.LBB308
	.quad	.LBE308-.LBB308
	.byte	0x9
	.word	0x57a
	.byte	0x23
	.uleb128 0x8
	.long	0x1e5b6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x8
	.long	0x1e5a9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x42
	.long	0x1e5c3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -41
	.uleb128 0x42
	.long	0x1e5d4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xbd02
	.long	0x1ee3e
	.byte	0x2
	.long	0x1ee55
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1bd85
	.uleb128 0x35
	.ascii "__t\0"
	.byte	0x9
	.word	0x562
	.byte	0x19
	.long	0x1bd8f
	.byte	0
	.uleb128 0x20
	.long	0x1ee30
	.ascii "_ZNSt12__atomic_refIKSt17__barrier_phase_tLb0ELb0EEC1ERS1_\0"
	.long	0x1eeaf
	.quad	.LFB12268
	.quad	.LFE12268-.LFB12268
	.uleb128 0x1
	.byte	0x9c
	.long	0x1eec0
	.uleb128 0x8
	.long	0x1ee3e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1ee47
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x159be
	.quad	.LFB12265
	.quad	.LFE12265-.LFB12265
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ef0e
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x19630
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x1eefd
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x559
	.byte	0x3b
	.long	0x1cb44
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x15a5a
	.quad	.LFB12264
	.quad	.LFE12264-.LFB12264
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ef52
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x10912
	.uleb128 0x43
	.secrel32	.LASF133
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x554
	.byte	0x35
	.long	0x1cc11
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x11579
	.quad	.LFB12263
	.quad	.LFE12263-.LFB12263
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ef7e
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x10c
	.byte	0x1c
	.long	0x1cc4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x10cc5
	.long	0x1ef8c
	.byte	0x2
	.long	0x1efa2
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cc8e
	.uleb128 0x39
	.ascii "__p\0"
	.byte	0xf
	.byte	0xa8
	.byte	0x1f
	.long	0x10ce0
	.byte	0
	.uleb128 0x3c
	.long	0x1ef7e
	.long	0x1efc1
	.quad	.LFB12261
	.quad	.LFE12261-.LFB12261
	.uleb128 0x1
	.byte	0x9c
	.long	0x1efd2
	.uleb128 0x8
	.long	0x1ef8c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1ef95
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x115e3
	.long	0x1efe0
	.byte	0x2
	.long	0x1efea
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cc66
	.byte	0
	.uleb128 0x3c
	.long	0x1efd2
	.long	0x1f009
	.quad	.LFB12258
	.quad	.LFE12258-.LFB12258
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f012
	.uleb128 0x8
	.long	0x1efe0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x15b06
	.quad	.LFB12256
	.quad	.LFE12256-.LFB12256
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f056
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0xeac3
	.uleb128 0x43
	.secrel32	.LASF133
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x554
	.byte	0x35
	.long	0x1cb03
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xf9ff
	.quad	.LFB12255
	.quad	.LFE12255-.LFB12255
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f082
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x10c
	.byte	0x1c
	.long	0x1cb3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xf767
	.long	0x1f090
	.byte	0x2
	.long	0x1f09a
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cb21
	.byte	0
	.uleb128 0x40
	.long	0x1f082
	.ascii "_ZNSt10_Head_baseILy0EPSt6threadLb0EEC2Ev\0"
	.long	0x1f0e3
	.quad	.LFB12253
	.quad	.LFE12253-.LFB12253
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f0ec
	.uleb128 0x8
	.long	0x1f090
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xf4ec
	.long	0x1f0fa
	.byte	0x2
	.long	0x1f104
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cb12
	.byte	0
	.uleb128 0x20
	.long	0x1f0ec
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_St6threadEEEC2Ev\0"
	.long	0x1f161
	.quad	.LFB12250
	.quad	.LFE12250-.LFB12250
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f16a
	.uleb128 0x8
	.long	0x1f0fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xcbf4
	.long	0x1f178
	.byte	0x2
	.long	0x1f182
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c755
	.byte	0
	.uleb128 0x40
	.long	0x1f16a
	.ascii "_ZNSt10_Head_baseILy1ESt14default_deleteIA_N6MATRIX18MaterialAttributesEELb1EEC2Ev\0"
	.long	0x1f1f4
	.quad	.LFB12247
	.quad	.LFE12247-.LFB12247
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f1fd
	.uleb128 0x8
	.long	0x1f178
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x15bc5
	.quad	.LFB12245
	.quad	.LFE12245-.LFB12245
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f24b
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1c746
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x1f23a
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x559
	.byte	0x3b
	.long	0x1c7b4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xcfa7
	.quad	.LFB12244
	.quad	.LFE12244-.LFB12244
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f277
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x1a8
	.byte	0x1c
	.long	0x1c773
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xd6ce
	.quad	.LFB12243
	.quad	.LFE12243-.LFB12243
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f2a3
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x10c
	.byte	0x1c
	.long	0x1c7af
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x93ad
	.quad	.LFB12241
	.quad	.LFE12241-.LFB12241
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f2ec
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa627
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xdd
	.byte	0x2a
	.long	0x1978d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1a
	.secrel32	.LASF199
	.byte	0xc
	.byte	0xdf
	.byte	0x25
	.long	0x860a
	.byte	0
	.uleb128 0x16
	.long	0x12ba3
	.long	0x1f30b
	.quad	.LFB12204
	.quad	.LFE12204-.LFB12204
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f318
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1ceaa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x15c75
	.uleb128 0x15
	.long	0x15c81
	.quad	.LFB12203
	.quad	.LFE12203-.LFB12203
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f367
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x1f356
	.uleb128 0x10
	.long	0x1ce00
	.uleb128 0x10
	.long	0x127a5
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x564
	.byte	0x1e
	.long	0x1cea0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x13eb2
	.long	0x1f37e
	.byte	0x2
	.long	0x1f388
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ce91
	.byte	0
	.uleb128 0x20
	.long	0x1f367
	.ascii "_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv\0"
	.long	0x1f3f8
	.quad	.LFB12202
	.quad	.LFE12202-.LFB12202
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f401
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0x8
	.long	0x1f37e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x12625
	.long	0x1f418
	.byte	0x2
	.long	0x1f432
	.uleb128 0x3
	.secrel32	.LASF126
	.long	0x22e56
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cdbf
	.uleb128 0x35
	.ascii "__head\0"
	.byte	0x16
	.word	0x1b8
	.byte	0x17
	.long	0x14fc5
	.byte	0
	.uleb128 0x3c
	.long	0x1f401
	.long	0x1f45a
	.quad	.LFB12198
	.quad	.LFE12198-.LFB12198
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f46b
	.uleb128 0x3
	.secrel32	.LASF126
	.long	0x22e56
	.uleb128 0x8
	.long	0x1f418
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1f421
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x11f44
	.long	0x1f479
	.byte	0x2
	.long	0x1f491
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cf09
	.uleb128 0x39
	.ascii "__tok\0"
	.byte	0x11
	.byte	0xde
	.byte	0x21
	.long	0x11f60
	.byte	0
	.uleb128 0xbf
	.long	0x1f46b
	.long	0x1f4b1
	.quad	.LFB12195
	.quad	.LFE12195-.LFB12195
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f4c2
	.uleb128 0x8
	.long	0x1f479
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1f482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x10f79
	.long	0x1f4e1
	.quad	.LFB12193
	.quad	.LFE12193-.LFB12193
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f631
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cd10
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF200
	.byte	0x11
	.byte	0xa2
	.byte	0x18
	.long	0x20b6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x24
	.ascii "__hasher\0"
	.byte	0x11
	.byte	0xa4
	.byte	0x1d
	.long	0x6bfa
	.uleb128 0x3
	.byte	0x91
	.sleb128 -89
	.uleb128 0x90
	.secrel32	.LASF197
	.byte	0xa5
	.byte	0x9
	.long	0xe33
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x90
	.secrel32	.LASF198
	.byte	0xa6
	.byte	0x17
	.long	0x10fcb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x90
	.secrel32	.LASF196
	.byte	0xa7
	.byte	0xd
	.long	0xaa71
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.uleb128 0x24
	.ascii "__cur\0"
	.byte	0x11
	.byte	0xa8
	.byte	0xd
	.long	0x4af
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x3f
	.quad	.LBB291
	.quad	.LBE291-.LBB291
	.uleb128 0x24
	.ascii "__new_phase\0"
	.byte	0x11
	.byte	0xb0
	.byte	0x8
	.long	0xaa56
	.uleb128 0x2
	.byte	0x91
	.sleb128 -27
	.uleb128 0xe5
	.long	0x1eae7
	.quad	.LBB292
	.quad	.LBE292-.LBB292
	.byte	0xae
	.byte	0x2d
	.long	0x1f5b0
	.uleb128 0x8
	.long	0x1eafe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x8
	.long	0x1eaf5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x42
	.long	0x1eb0b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0xe5
	.long	0x1eaa8
	.quad	.LBB294
	.quad	.LBE294-.LBB294
	.byte	0xaf
	.byte	0x1f
	.long	0x1f5ed
	.uleb128 0x8
	.long	0x1eacc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x8
	.long	0x1eabf
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x8
	.long	0x1eab6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x42
	.long	0x1ead9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x81
	.long	0x1ea12
	.quad	.LBB296
	.quad	.LBE296-.LBB296
	.byte	0x11
	.byte	0xb2
	.byte	0x15
	.uleb128 0x82
	.long	0x1ea20
	.uleb128 0x69
	.long	0x1e31c
	.quad	.LBB298
	.quad	.LBE298-.LBB298
	.byte	0x9
	.word	0x5b6
	.byte	0x22
	.uleb128 0x8
	.long	0x1e32e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	0x10f9a
	.long	0x1f650
	.quad	.LFB12191
	.quad	.LFE12191-.LFB12191
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f784
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cd1a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF196
	.byte	0x11
	.byte	0xb9
	.byte	0x1c
	.long	0x1cd1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x90
	.secrel32	.LASF198
	.byte	0xbb
	.byte	0x1d
	.long	0x10fe8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x24
	.ascii "__test_fn\0"
	.byte	0x11
	.byte	0xbc
	.byte	0xd
	.long	0x1f6d3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x13e
	.byte	0x10
	.byte	0x11
	.byte	0xbc
	.byte	0x19
	.uleb128 0x5c
	.secrel32	.LASF201
	.long	0x1f6a2
	.long	0x1f6b7
	.uleb128 0x2
	.long	0x1f6a7
	.uleb128 0x6
	.long	0x1f68f
	.uleb128 0x1
	.long	0x1f6b1
	.uleb128 0x1f
	.long	0x1f68f
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF201
	.long	0x1f6c4
	.long	0x1f6d9
	.uleb128 0x2
	.long	0x1f6a7
	.uleb128 0x1
	.long	0x1f6ce
	.uleb128 0x7
	.long	0x1f6d3
	.uleb128 0x4
	.long	0x1f68f
	.byte	0
	.uleb128 0xe6
	.secrel32	.LASF201
	.long	0x1f6e7
	.long	0x1f6ed
	.uleb128 0x2
	.long	0x1f6a7
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF202
	.long	0x1f6fa
	.long	0x1f705
	.uleb128 0x2
	.long	0x1f6a7
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x13
	.ascii "____phase\0"
	.byte	0x11
	.byte	0xbe
	.byte	0xd
	.long	0x10fe8
	.byte	0
	.uleb128 0x13
	.ascii "____old_phase\0"
	.byte	0x11
	.byte	0xbe
	.byte	0x33
	.long	0x10f68
	.byte	0x8
	.uleb128 0x13f
	.secrel32	.LASF4
	.long	0x184a1
	.long	0x1f759
	.quad	.LFB12192
	.quad	.LFE12192-.LFB12192
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x6
	.long	0x1f6d3
	.uleb128 0x4
	.long	0x1f74f
	.uleb128 0x12
	.secrel32	.LASF203
	.long	0x1f754
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x5e
	.secrel32	.LASF196
	.long	0x10f74
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5e
	.secrel32	.LASF198
	.long	0x1100b
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1f
	.long	0x14ac0
	.uleb128 0x2a
	.long	0x15d69
	.quad	.LFB12190
	.quad	.LFE12190-.LFB12190
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f7bd
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1bd29
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x12
	.byte	0x68
	.byte	0x10
	.long	0x1bd29
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x15df4
	.uleb128 0x15
	.long	0x15df9
	.quad	.LFB12189
	.quad	.LFE12189-.LFB12189
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f80c
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x1f7fb
	.uleb128 0x10
	.long	0x19630
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x56a
	.byte	0x24
	.long	0x1cb6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x15e97
	.uleb128 0x15
	.long	0x15ea3
	.quad	.LFB12188
	.quad	.LFE12188-.LFB12188
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f85b
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x1f84a
	.uleb128 0x10
	.long	0x1cbe4
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x564
	.byte	0x1e
	.long	0x1cc84
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x15fa5
	.quad	.LFB12187
	.quad	.LFE12187-.LFB12187
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f8a9
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1cbe4
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x1f898
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x554
	.byte	0x35
	.long	0x1cc4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1f
	.long	0x10912
	.uleb128 0x7
	.long	0x10aba
	.uleb128 0x2a
	.long	0x15fdd
	.quad	.LFB12186
	.quad	.LFE12186-.LFB12186
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f8e7
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x10912
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x12
	.byte	0x4d
	.byte	0x38
	.long	0x1f8ae
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x10da9
	.long	0x1f906
	.quad	.LFB12185
	.quad	.LFE12185-.LFB12185
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f922
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cc8e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x24
	.ascii "__p\0"
	.byte	0xf
	.byte	0xd1
	.byte	0xa
	.long	0x10ce0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x16
	.long	0x10d8e
	.long	0x1f941
	.quad	.LFB12184
	.quad	.LFE12184-.LFB12184
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f970
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cc8e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0xf
	.byte	0xc6
	.byte	0x1a
	.long	0x10ce0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x24
	.ascii "__old_p\0"
	.byte	0xf
	.byte	0xc8
	.byte	0x10
	.long	0x10cec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x14
	.long	0x11d24
	.long	0x1f990
	.byte	0x2
	.long	0x1f9a7
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x1cbe4
	.uleb128 0x57
	.ascii "_Vp\0"
	.long	0x10912
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ccca
	.uleb128 0x35
	.ascii "__p\0"
	.byte	0xf
	.word	0x256
	.byte	0x11
	.long	0x1cbe4
	.byte	0
	.uleb128 0x3c
	.long	0x1f970
	.long	0x1f9d8
	.quad	.LFB12182
	.quad	.LFE12182-.LFB12182
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f9e9
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x1cbe4
	.uleb128 0x57
	.ascii "_Vp\0"
	.long	0x10912
	.uleb128 0x8
	.long	0x1f990
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1f999
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x50
	.long	0x1199e
	.byte	0xf
	.byte	0xe9
	.byte	0x28
	.long	0x1f9f9
	.long	0x1fa08
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ccb1
	.uleb128 0x1
	.long	0x10ce0
	.byte	0
	.uleb128 0x3c
	.long	0x1f9e9
	.long	0x1fa27
	.quad	.LFB12180
	.quad	.LFE12180-.LFB12180
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fa38
	.uleb128 0x8
	.long	0x1f9f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1fa02
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1182f
	.long	0x1fa4f
	.byte	0x2
	.long	0x1fa59
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cc75
	.byte	0
	.uleb128 0x3c
	.long	0x1fa38
	.long	0x1fa81
	.quad	.LFB12176
	.quad	.LFE12176-.LFB12176
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fa8a
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0x8
	.long	0x1fa4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x16072
	.uleb128 0x15
	.long	0x1607e
	.quad	.LFB12174
	.quad	.LFE12174-.LFB12174
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fad9
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x1fac8
	.uleb128 0x10
	.long	0x19630
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x564
	.byte	0x1e
	.long	0x1cb76
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x16152
	.quad	.LFB12173
	.quad	.LFE12173-.LFB12173
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fb27
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x19630
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x1fb16
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x554
	.byte	0x35
	.long	0x1cb3f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xfb97
	.long	0x1fb35
	.byte	0x2
	.long	0x1fb3f
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cb58
	.byte	0
	.uleb128 0x20
	.long	0x1fb27
	.ascii "_ZNSt11_Tuple_implILy0EJPSt6threadSt14default_deleteIA_S0_EEEC2Ev\0"
	.long	0x1fba0
	.quad	.LFB12171
	.quad	.LFE12171-.LFB12171
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fba9
	.uleb128 0x8
	.long	0x1fb35
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xd38c
	.long	0x1fbb7
	.byte	0x2
	.long	0x1fbc1
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c791
	.byte	0
	.uleb128 0x40
	.long	0x1fba9
	.ascii "_ZNSt10_Head_baseILy0EPN6MATRIX18MaterialAttributesELb0EEC2Ev\0"
	.long	0x1fc1e
	.quad	.LFB12168
	.quad	.LFE12168-.LFB12168
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fc27
	.uleb128 0x8
	.long	0x1fbb7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xd08a
	.long	0x1fc35
	.byte	0x2
	.long	0x1fc3f
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c782
	.byte	0
	.uleb128 0x20
	.long	0x1fc27
	.ascii "_ZNSt11_Tuple_implILy1EJSt14default_deleteIA_N6MATRIX18MaterialAttributesEEEEC2Ev\0"
	.long	0x1fcb0
	.quad	.LFB12165
	.quad	.LFE12165-.LFB12165
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fcb9
	.uleb128 0x8
	.long	0x1fc35
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x161f8
	.uleb128 0x15
	.long	0x161fd
	.quad	.LFB12163
	.quad	.LFE12163-.LFB12163
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fd08
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x1fcf7
	.uleb128 0x10
	.long	0x1c746
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x56a
	.byte	0x24
	.long	0x1c7dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x162af
	.quad	.LFB12162
	.quad	.LFE12162-.LFB12162
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fd4c
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0xc3c5
	.uleb128 0x43
	.secrel32	.LASF133
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x554
	.byte	0x35
	.long	0x1c773
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x16391
	.quad	.LFB12161
	.quad	.LFE12161-.LFB12161
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fd9a
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x3
	.secrel32	.LASF111
	.long	0x1c746
	.uleb128 0x22
	.secrel32	.LASF133
	.long	0x1fd89
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x554
	.byte	0x35
	.long	0x1c7af
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x949d
	.quad	.LFB12158
	.quad	.LFE12158-.LFB12158
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fde0
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x846e
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa627
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x34
	.long	0x1978d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x12816
	.long	0x1fdff
	.quad	.LFB12071
	.quad	.LFE12071-.LFB12071
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fe1b
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cdfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF190
	.byte	0xf
	.byte	0x59
	.byte	0x17
	.long	0x1ce00
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x1f
	.long	0x146ff
	.uleb128 0x2a
	.long	0x1643f
	.quad	.LFB12070
	.quad	.LFE12070-.LFB12070
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fe54
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1ce5f
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x12
	.byte	0x68
	.byte	0x10
	.long	0x1ce5f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x6800
	.long	0x1fe73
	.quad	.LFB12069
	.quad	.LFE12069-.LFB12069
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fe80
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cee1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x12ad8
	.long	0x1fe9f
	.quad	.LFB12068
	.quad	.LFE12068-.LFB12068
	.uleb128 0x1
	.byte	0x9c
	.long	0x1feac
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1ceaa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x1299a
	.long	0x1feba
	.byte	0x2
	.long	0x1fed0
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ceaa
	.uleb128 0x39
	.ascii "__p\0"
	.byte	0xf
	.byte	0xa8
	.byte	0x1f
	.long	0x129ff
	.byte	0
	.uleb128 0x20
	.long	0x1feac
	.ascii "_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC2EPS1_\0"
	.long	0x1ff38
	.quad	.LFB12066
	.quad	.LFE12066-.LFB12066
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ff49
	.uleb128 0x8
	.long	0x1feba
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x1fec3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x12750
	.long	0x1ff6f
	.byte	0x2
	.long	0x1ff81
	.uleb128 0x22
	.secrel32	.LASF129
	.long	0x1ff66
	.uleb128 0x10
	.long	0x22e56
	.byte	0
	.uleb128 0x48
	.secrel32	.LASF130
	.long	0x184a1
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cdce
	.uleb128 0xe7
	.uleb128 0x1
	.long	0x14fc5
	.byte	0
	.byte	0
	.uleb128 0x3c
	.long	0x1ff49
	.long	0x1ffb8
	.quad	.LFB12062
	.quad	.LFE12062-.LFB12062
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ffcc
	.uleb128 0x22
	.secrel32	.LASF129
	.long	0x1ffaf
	.uleb128 0x10
	.long	0x22e56
	.byte	0
	.uleb128 0x48
	.secrel32	.LASF130
	.long	0x184a1
	.uleb128 0x8
	.long	0x1ff6f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xe7
	.uleb128 0x8
	.long	0x1ff7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	0x11f81
	.long	0x1ffeb
	.quad	.LFB12060
	.quad	.LFE12060-.LFB12060
	.uleb128 0x1
	.byte	0x9c
	.long	0x20007
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cd29
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF200
	.byte	0x11
	.byte	0xef
	.byte	0x18
	.long	0x20b6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x11fa2
	.long	0x20026
	.quad	.LFB12059
	.quad	.LFE12059-.LFB12059
	.uleb128 0x1
	.byte	0x9c
	.long	0x20042
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cd3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF198
	.byte	0x11
	.byte	0xf3
	.byte	0x1c
	.long	0x1cd42
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0xee6a
	.long	0x20061
	.quad	.LFB12058
	.quad	.LFE12058-.LFB12058
	.uleb128 0x1
	.byte	0x9c
	.long	0x2006e
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cb99
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x10d5c
	.long	0x2008d
	.quad	.LFB12057
	.quad	.LFE12057-.LFB12057
	.uleb128 0x1
	.byte	0x9c
	.long	0x2009a
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cc8e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x151af
	.uleb128 0x15
	.long	0x164ba
	.quad	.LFB12056
	.quad	.LFE12056-.LFB12056
	.uleb128 0x1
	.byte	0x9c
	.long	0x200e9
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x200d8
	.uleb128 0x10
	.long	0x1cbe4
	.uleb128 0x10
	.long	0x10912
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x564
	.byte	0x1e
	.long	0x1cc84
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x10d0c
	.long	0x20108
	.quad	.LFB12055
	.quad	.LFE12055-.LFB12055
	.uleb128 0x1
	.byte	0x9c
	.long	0x20124
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cc8e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__u\0"
	.byte	0xf
	.byte	0xb5
	.byte	0x34
	.long	0x1cc93
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x164ee
	.quad	.LFB12054
	.quad	.LFE12054-.LFB12054
	.uleb128 0x1
	.byte	0x9c
	.long	0x2015b
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1cd81
	.uleb128 0x11
	.ascii "__num\0"
	.byte	0xf
	.word	0x437
	.byte	0x18
	.long	0xe33
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x11db4
	.long	0x20172
	.byte	0x2
	.long	0x2017c
	.uleb128 0x55
	.secrel32	.LASF73
	.long	0x10912
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ccca
	.byte	0
	.uleb128 0x3c
	.long	0x2015b
	.long	0x201a4
	.quad	.LFB12052
	.quad	.LFE12052-.LFB12052
	.uleb128 0x1
	.byte	0x9c
	.long	0x201ad
	.uleb128 0x55
	.secrel32	.LASF73
	.long	0x10912
	.uleb128 0x8
	.long	0x20172
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x50
	.long	0x119b6
	.byte	0xf
	.byte	0xe9
	.byte	0x28
	.long	0x201bd
	.long	0x201c7
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ccb1
	.byte	0
	.uleb128 0x3c
	.long	0x201ad
	.long	0x201e6
	.quad	.LFB12050
	.quad	.LFE12050-.LFB12050
	.uleb128 0x1
	.byte	0x9c
	.long	0x201ef
	.uleb128 0x8
	.long	0x201bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x10cae
	.long	0x201fd
	.byte	0x2
	.long	0x20207
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cc8e
	.byte	0
	.uleb128 0x3c
	.long	0x201ef
	.long	0x20226
	.quad	.LFB12048
	.quad	.LFE12048-.LFB12048
	.uleb128 0x1
	.byte	0x9c
	.long	0x2022f
	.uleb128 0x8
	.long	0x201fd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0xeec9
	.long	0x2024e
	.quad	.LFB12043
	.quad	.LFE12043-.LFB12043
	.uleb128 0x1
	.byte	0x9c
	.long	0x2025b
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cb80
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x15de8
	.uleb128 0x15
	.long	0x16571
	.quad	.LFB12042
	.quad	.LFE12042-.LFB12042
	.uleb128 0x1
	.byte	0x9c
	.long	0x202aa
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x20299
	.uleb128 0x10
	.long	0x19630
	.uleb128 0x10
	.long	0xeac3
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x564
	.byte	0x1e
	.long	0x1cb76
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x10071
	.long	0x202c1
	.byte	0x2
	.long	0x202cb
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cb67
	.byte	0
	.uleb128 0x20
	.long	0x202aa
	.ascii "_ZNSt5tupleIJPSt6threadSt14default_deleteIA_S0_EEEC1ILb1ELb1EEEv\0"
	.long	0x20334
	.quad	.LFB12041
	.quad	.LFE12041-.LFB12041
	.uleb128 0x1
	.byte	0x9c
	.long	0x2033d
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0x8
	.long	0x202c1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xd8b6
	.long	0x2034b
	.byte	0x2
	.long	0x20355
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c7c8
	.byte	0
	.uleb128 0x20
	.long	0x2033d
	.ascii "_ZNSt11_Tuple_implILy0EJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC2Ev\0"
	.long	0x203ca
	.quad	.LFB12037
	.quad	.LFE12037-.LFB12037
	.uleb128 0x1
	.byte	0x9c
	.long	0x203d3
	.uleb128 0x8
	.long	0x2034b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0xc8be
	.long	0x203f2
	.quad	.LFB12035
	.quad	.LFE12035-.LFB12035
	.uleb128 0x1
	.byte	0x9c
	.long	0x203ff
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c809
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x1660d
	.uleb128 0x15
	.long	0x16619
	.quad	.LFB12034
	.quad	.LFE12034-.LFB12034
	.uleb128 0x1
	.byte	0x9c
	.long	0x2044e
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0x1
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x2043d
	.uleb128 0x10
	.long	0x1c746
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x564
	.byte	0x1e
	.long	0x1c7e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x161ec
	.uleb128 0x15
	.long	0x1671f
	.quad	.LFB12033
	.quad	.LFE12033-.LFB12033
	.uleb128 0x1
	.byte	0x9c
	.long	0x2049d
	.uleb128 0x1b
	.ascii "__i\0"
	.long	0xf5
	.byte	0
	.uleb128 0x22
	.secrel32	.LASF114
	.long	0x2048c
	.uleb128 0x10
	.long	0x1c746
	.uleb128 0x10
	.long	0xc3c5
	.byte	0
	.uleb128 0x11
	.ascii "__t\0"
	.byte	0x16
	.word	0x564
	.byte	0x1e
	.long	0x1c7e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x741c
	.long	0x204bd
	.byte	0x2
	.long	0x204d4
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19742
	.uleb128 0x35
	.ascii "__d\0"
	.byte	0xc
	.word	0x201
	.byte	0x38
	.long	0x1978d
	.byte	0
	.uleb128 0x20
	.long	0x2049d
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE\0"
	.long	0x2055b
	.quad	.LFB12030
	.quad	.LFE12030-.LFB12030
	.uleb128 0x1
	.byte	0x9c
	.long	0x2056c
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.uleb128 0x8
	.long	0x204bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x204c6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x8a72
	.long	0x2058c
	.byte	0x2
	.long	0x205a3
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x197ab
	.uleb128 0x35
	.ascii "__d\0"
	.byte	0xc
	.word	0x201
	.byte	0x38
	.long	0x1978d
	.byte	0
	.uleb128 0x20
	.long	0x2056c
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxS1_ILx1ELx1EEvEERKNS0_IT_T0_EE\0"
	.long	0x20624
	.quad	.LFB12023
	.quad	.LFE12023-.LFB12023
	.uleb128 0x1
	.byte	0x9c
	.long	0x20635
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.uleb128 0x8
	.long	0x2058c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x20595
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x924b
	.quad	.LFB12020
	.quad	.LFE12020-.LFB12020
	.uleb128 0x1
	.byte	0x9c
	.long	0x2067e
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa6a3
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xd0
	.byte	0x2a
	.long	0x197b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1a
	.secrel32	.LASF199
	.byte	0xc
	.byte	0xd2
	.byte	0x25
	.long	0x7fbd
	.byte	0
	.uleb128 0x14
	.long	0x8af0
	.long	0x20695
	.byte	0x2
	.long	0x206ac
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x197ab
	.uleb128 0x4c
	.secrel32	.LASF204
	.byte	0xc
	.word	0x1f9
	.byte	0x2d
	.long	0x19760
	.byte	0
	.uleb128 0x40
	.long	0x2067e
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IxvEERKT_\0"
	.long	0x2070d
	.quad	.LFB12019
	.quad	.LFE12019-.LFB12019
	.uleb128 0x1
	.byte	0x9c
	.long	0x2071e
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x8
	.long	0x20695
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2069e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x90d3
	.quad	.LFB12015
	.quad	.LFE12015-.LFB12015
	.uleb128 0x1
	.byte	0x9c
	.long	0x20767
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa627
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xdd
	.byte	0x2a
	.long	0x1978d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1a
	.secrel32	.LASF199
	.byte	0xc
	.byte	0xdf
	.byte	0x25
	.long	0x6f60
	.byte	0
	.uleb128 0x15
	.long	0x1788
	.quad	.LFB12007
	.quad	.LFE12007-.LFB12007
	.uleb128 0x1
	.byte	0x9c
	.long	0x207a3
	.uleb128 0x1e
	.secrel32	.LASF189
	.byte	0x8
	.word	0x11f
	.byte	0x15
	.long	0x525
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x17
	.ascii "res\0"
	.byte	0x8
	.word	0x122
	.byte	0xa
	.long	0x190b4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x14
	.long	0x6599
	.long	0x207b1
	.byte	0x2
	.long	0x207d2
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cee1
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.uleb128 0x77
	.uleb128 0x9d
	.secrel32	.LASF190
	.word	0x18a
	.long	0x1ce5f
	.byte	0
	.byte	0
	.uleb128 0x20
	.long	0x207a3
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev\0"
	.long	0x20832
	.quad	.LFB11890
	.quad	.LFE11890-.LFB11890
	.uleb128 0x1
	.byte	0x9c
	.long	0x20869
	.uleb128 0x8
	.long	0x207b1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x78
	.long	0x207c3
	.long	0x20849
	.uleb128 0x66
	.long	0x207c4
	.byte	0
	.uleb128 0x83
	.long	0x207c3
	.quad	.LBB271
	.quad	.LBE271-.LBB271
	.uleb128 0x42
	.long	0x207c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x6b1b
	.long	0x20880
	.byte	0x2
	.long	0x20897
	.uleb128 0x55
	.secrel32	.LASF73
	.long	0x127a5
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cee1
	.uleb128 0x35
	.ascii "__p\0"
	.byte	0xf
	.word	0x135
	.byte	0x15
	.long	0x671a
	.byte	0
	.uleb128 0x20
	.long	0x20869
	.ascii "_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_\0"
	.long	0x20909
	.quad	.LFB11887
	.quad	.LFE11887-.LFB11887
	.uleb128 0x1
	.byte	0x9c
	.long	0x2091a
	.uleb128 0x55
	.secrel32	.LASF73
	.long	0x127a5
	.uleb128 0x8
	.long	0x20880
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x20889
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x50
	.long	0x1407e
	.byte	0xf
	.byte	0xe9
	.byte	0x28
	.long	0x2092a
	.long	0x20939
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cec8
	.uleb128 0x1
	.long	0x129ff
	.byte	0
	.uleb128 0x20
	.long	0x2091a
	.ascii "_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_\0"
	.long	0x209c5
	.quad	.LFB11885
	.quad	.LFE11885-.LFB11885
	.uleb128 0x1
	.byte	0x9c
	.long	0x209d6
	.uleb128 0x8
	.long	0x2092a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x20933
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x63f6
	.long	0x209f3
	.byte	0x2
	.long	0x20a06
	.uleb128 0x22
	.secrel32	.LASF128
	.long	0x209f3
	.uleb128 0x10
	.long	0x22e56
	.byte	0
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cf18
	.uleb128 0xe8
	.byte	0xcd
	.uleb128 0x1
	.long	0x14fc5
	.byte	0
	.byte	0
	.uleb128 0x3c
	.long	0x209d6
	.long	0x20a34
	.quad	.LFB11880
	.quad	.LFE11880-.LFB11880
	.uleb128 0x1
	.byte	0x9c
	.long	0x20a49
	.uleb128 0x22
	.secrel32	.LASF128
	.long	0x20a34
	.uleb128 0x10
	.long	0x22e56
	.byte	0
	.uleb128 0x8
	.long	0x209f3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xe8
	.byte	0xcd
	.uleb128 0x8
	.long	0x209ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x50
	.long	0x6205
	.byte	0xb
	.byte	0x43
	.byte	0xc
	.long	0x20a59
	.long	0x20a63
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ce05
	.byte	0
	.uleb128 0x40
	.long	0x20a49
	.ascii "_ZNSt6thread6_StateC2Ev\0"
	.long	0x20a9a
	.quad	.LFB11872
	.quad	.LFE11872-.LFB11872
	.uleb128 0x1
	.byte	0x9c
	.long	0x20aa3
	.uleb128 0x8
	.long	0x20a59
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x12074
	.uleb128 0x2a
	.long	0x167cf
	.quad	.LFB11869
	.quad	.LFE11869-.LFB11869
	.uleb128 0x1
	.byte	0x9c
	.long	0x20adc
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x22e56
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x12
	.byte	0x4d
	.byte	0x38
	.long	0x20aa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x95cd
	.quad	.LFB11868
	.quad	.LFE11868-.LFB11868
	.uleb128 0x1
	.byte	0x9c
	.long	0x20b4a
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0xa6a3
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0x6cca
	.uleb128 0x1e
	.secrel32	.LASF205
	.byte	0xc
	.word	0x284
	.byte	0x32
	.long	0x197b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF206
	.byte	0xc
	.word	0x285
	.byte	0x24
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "__cd\0"
	.byte	0xc
	.word	0x289
	.byte	0x34
	.long	0xea9b
	.byte	0
	.uleb128 0x16
	.long	0x11fbd
	.long	0x20b69
	.quad	.LFB11867
	.quad	.LFE11867-.LFB11867
	.uleb128 0x1
	.byte	0x9c
	.long	0x20b76
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cd29
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x10527
	.long	0x20b95
	.quad	.LFB11866
	.quad	.LFE11866-.LFB11866
	.uleb128 0x1
	.byte	0x9c
	.long	0x20ba2
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cbcb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x6
	.long	0x10a29
	.uleb128 0x4
	.long	0x20ba2
	.uleb128 0x16
	.long	0x1099b
	.long	0x20bd4
	.quad	.LFB11865
	.quad	.LFE11865-.LFB11865
	.uleb128 0x1
	.byte	0x9c
	.long	0x20bf0
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x10e50
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x20ba7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF190
	.byte	0xf
	.byte	0x80
	.byte	0x12
	.long	0x1cbe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x11c3f
	.long	0x20c0f
	.quad	.LFB11864
	.quad	.LFE11864-.LFB11864
	.uleb128 0x1
	.byte	0x9c
	.long	0x20c1c
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1ccca
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x10d2a
	.long	0x20c3b
	.quad	.LFB11863
	.quad	.LFE11863-.LFB11863
	.uleb128 0x1
	.byte	0x9c
	.long	0x20c48
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cc8e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x10f3e
	.long	0x20c56
	.byte	0x2
	.long	0x20c8a
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cd10
	.uleb128 0x4d
	.secrel32	.LASF191
	.byte	0x11
	.byte	0x97
	.byte	0x20
	.long	0x20b6
	.uleb128 0x4d
	.secrel32	.LASF207
	.byte	0x11
	.byte	0x97
	.byte	0x39
	.long	0x22c1f
	.uleb128 0x77
	.uleb128 0x79
	.ascii "__count\0"
	.byte	0x11
	.byte	0x9c
	.byte	0xf
	.long	0xe43
	.byte	0
	.byte	0
	.uleb128 0x3c
	.long	0x20c48
	.long	0x20ca9
	.quad	.LFB11861
	.quad	.LFE11861-.LFB11861
	.uleb128 0x1
	.byte	0x9c
	.long	0x20cf0
	.uleb128 0x8
	.long	0x20c56
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x20c5f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x8
	.long	0x20c6b
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x78
	.long	0x20c77
	.long	0x20cd0
	.uleb128 0x66
	.long	0x20c78
	.byte	0
	.uleb128 0x83
	.long	0x20c77
	.quad	.LBB264
	.quad	.LBE264-.LBB264
	.uleb128 0x42
	.long	0x20c78
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	0x11ba0
	.long	0x20d0f
	.quad	.LFB11859
	.quad	.LFE11859-.LFB11859
	.uleb128 0x1
	.byte	0x9c
	.long	0x20d24
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1ccca
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x53
	.long	0x1cccf
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x1197d
	.long	0x20d43
	.quad	.LFB11860
	.quad	.LFE11860-.LFB11860
	.uleb128 0x1
	.byte	0x9c
	.long	0x20d58
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1ccb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x53
	.long	0x1ccb6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x1f
	.long	0x12353
	.uleb128 0x2a
	.long	0x1682b
	.quad	.LFB11857
	.quad	.LFE11857-.LFB11857
	.uleb128 0x1
	.byte	0x9c
	.long	0x20d91
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1687e
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x12
	.byte	0x68
	.byte	0x10
	.long	0x1687e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x6
	.long	0xebd7
	.uleb128 0x4
	.long	0x20d91
	.uleb128 0x16
	.long	0xeb28
	.long	0x20dc3
	.quad	.LFB11856
	.quad	.LFE11856-.LFB11856
	.uleb128 0x1
	.byte	0x9c
	.long	0x20ddf
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x5de9
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x20d96
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF190
	.byte	0xf
	.byte	0x80
	.byte	0x12
	.long	0x19630
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x10593
	.long	0x20dfe
	.quad	.LFB11855
	.quad	.LFE11855-.LFB11855
	.uleb128 0x1
	.byte	0x9c
	.long	0x20e0b
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cbb7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0xee0c
	.long	0x20e2a
	.quad	.LFB11854
	.quad	.LFE11854-.LFB11854
	.uleb128 0x1
	.byte	0x9c
	.long	0x20e37
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cb80
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xece3
	.long	0x20e45
	.byte	0x2
	.long	0x20e5b
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cb80
	.uleb128 0x39
	.ascii "__p\0"
	.byte	0xf
	.byte	0xa8
	.byte	0x1f
	.long	0xed41
	.byte	0
	.uleb128 0x20
	.long	0x20e37
	.ascii "_ZNSt15__uniq_ptr_implISt6threadSt14default_deleteIA_S0_EEC2EPS0_\0"
	.long	0x20ebc
	.quad	.LFB11852
	.quad	.LFE11852-.LFB11852
	.uleb128 0x1
	.byte	0x9c
	.long	0x20ecd
	.uleb128 0x8
	.long	0x20e45
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x20e4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0xde9e
	.long	0x20ee4
	.byte	0x2
	.long	0x20eee
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c7d7
	.byte	0
	.uleb128 0x20
	.long	0x20ecd
	.ascii "_ZNSt5tupleIJPN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEEC1ILb1ELb1EEEv\0"
	.long	0x20f6b
	.quad	.LFB11849
	.quad	.LFE11849-.LFB11849
	.uleb128 0x1
	.byte	0x9c
	.long	0x20f74
	.uleb128 0x48
	.secrel32	.LASF120
	.long	0x184a1
	.uleb128 0x8
	.long	0x20ee4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1f
	.long	0x122e9
	.uleb128 0x7
	.long	0x1c737
	.uleb128 0x2a
	.long	0x16889
	.quad	.LFB11846
	.quad	.LFE11846-.LFB11846
	.uleb128 0x1
	.byte	0x9c
	.long	0x20fb2
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x20f79
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x12
	.byte	0x68
	.byte	0x10
	.long	0x20f79
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0xe4de
	.long	0x20fd1
	.quad	.LFB11845
	.quad	.LFE11845-.LFB11845
	.uleb128 0x1
	.byte	0x9c
	.long	0x20fde
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c840
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1f
	.long	0xc3c5
	.uleb128 0x7
	.long	0xc574
	.uleb128 0x2a
	.long	0x168f9
	.quad	.LFB11844
	.quad	.LFE11844-.LFB11844
	.uleb128 0x1
	.byte	0x9c
	.long	0x2101c
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xc3c5
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x12
	.byte	0x4d
	.byte	0x38
	.long	0x20fe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0xc931
	.long	0x2103b
	.quad	.LFB11843
	.quad	.LFE11843-.LFB11843
	.uleb128 0x1
	.byte	0x9c
	.long	0x21048
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c7f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0xca96
	.long	0x21067
	.quad	.LFB11842
	.quad	.LFE11842-.LFB11842
	.uleb128 0x1
	.byte	0x9c
	.long	0x21083
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c7f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x24
	.ascii "__p\0"
	.byte	0xf
	.byte	0xd1
	.byte	0xa
	.long	0xc754
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x16
	.long	0xca20
	.long	0x210a2
	.quad	.LFB11841
	.quad	.LFE11841-.LFB11841
	.uleb128 0x1
	.byte	0x9c
	.long	0x210d1
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c7f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0xf
	.byte	0xc6
	.byte	0x1a
	.long	0xc754
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x24
	.ascii "__old_p\0"
	.byte	0xf
	.byte	0xc8
	.byte	0x10
	.long	0xc760
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x6
	.long	0xc51f
	.uleb128 0x4
	.long	0x210d1
	.uleb128 0x16
	.long	0xc44d
	.long	0x21103
	.quad	.LFB11840
	.quad	.LFE11840-.LFB11840
	.uleb128 0x1
	.byte	0x9c
	.long	0x2111f
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x1c002
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x210d6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF190
	.byte	0xf
	.byte	0x80
	.byte	0x12
	.long	0x1c746
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0xe55e
	.long	0x2113e
	.quad	.LFB11839
	.quad	.LFE11839-.LFB11839
	.uleb128 0x1
	.byte	0x9c
	.long	0x2114b
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c82c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0xc84c
	.long	0x2116a
	.quad	.LFB11838
	.quad	.LFE11838-.LFB11838
	.uleb128 0x1
	.byte	0x9c
	.long	0x21177
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c7f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xc6e2
	.long	0x21185
	.byte	0x2
	.long	0x2119b
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c7f0
	.uleb128 0x39
	.ascii "__p\0"
	.byte	0xf
	.byte	0xa8
	.byte	0x1f
	.long	0xc754
	.byte	0
	.uleb128 0x20
	.long	0x21177
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2EPS1_\0"
	.long	0x21210
	.quad	.LFB11836
	.quad	.LFE11836-.LFB11836
	.uleb128 0x1
	.byte	0x9c
	.long	0x21221
	.uleb128 0x8
	.long	0x21185
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2118e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x8f5f
	.quad	.LFB11817
	.quad	.LFE11817-.LFB11817
	.uleb128 0x1
	.byte	0x9c
	.long	0x2126a
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0x6cca
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xc4
	.byte	0x2a
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1a
	.secrel32	.LASF199
	.byte	0xc
	.byte	0xc6
	.byte	0x25
	.long	0x6f60
	.byte	0
	.uleb128 0x15
	.long	0x96e6
	.quad	.LFB11815
	.quad	.LFE11815-.LFB11815
	.uleb128 0x1
	.byte	0x9c
	.long	0x212d8
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x6cca
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.uleb128 0x1e
	.secrel32	.LASF205
	.byte	0xc
	.word	0x284
	.byte	0x32
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF206
	.byte	0xc
	.word	0x285
	.byte	0x24
	.long	0x1978d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "__cd\0"
	.byte	0xc
	.word	0x289
	.byte	0x34
	.long	0xaa1e
	.byte	0
	.uleb128 0x15
	.long	0x97f6
	.quad	.LFB11811
	.quad	.LFE11811-.LFB11811
	.uleb128 0x1
	.byte	0x9c
	.long	0x21346
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0xa6a3
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa627
	.uleb128 0x1e
	.secrel32	.LASF205
	.byte	0xc
	.word	0x284
	.byte	0x32
	.long	0x197b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF206
	.byte	0xc
	.word	0x285
	.byte	0x24
	.long	0x1978d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "__cd\0"
	.byte	0xc
	.word	0x289
	.byte	0x34
	.long	0x12296
	.byte	0
	.uleb128 0x15
	.long	0x9906
	.quad	.LFB11810
	.quad	.LFE11810-.LFB11810
	.uleb128 0x1
	.byte	0x9c
	.long	0x2138c
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x7e0a
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa6a3
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x34
	.long	0x197b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x9e
	.long	0x899e
	.quad	.LFB11809
	.quad	.LFE11809-.LFB11809
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x15
	.long	0x8de2
	.quad	.LFB11807
	.quad	.LFE11807-.LFB11807
	.uleb128 0x1
	.byte	0x9c
	.long	0x213ed
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa6a3
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xdd
	.byte	0x2a
	.long	0x197b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1a
	.secrel32	.LASF199
	.byte	0xc
	.byte	0xdf
	.byte	0x25
	.long	0x6f60
	.byte	0
	.uleb128 0x15
	.long	0x9a26
	.quad	.LFB11805
	.quad	.LFE11805-.LFB11805
	.uleb128 0x1
	.byte	0x9c
	.long	0x2145b
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x6cca
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0x6cca
	.uleb128 0x1e
	.secrel32	.LASF205
	.byte	0xc
	.word	0x284
	.byte	0x32
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF206
	.byte	0xc
	.word	0x285
	.byte	0x24
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "__cd\0"
	.byte	0xc
	.word	0x289
	.byte	0x34
	.long	0xa59e
	.byte	0
	.uleb128 0x15
	.long	0x9b44
	.quad	.LFB11797
	.quad	.LFE11797-.LFB11797
	.uleb128 0x1
	.byte	0x9c
	.long	0x214a1
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x6d77
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa627
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x34
	.long	0x1978d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x8c71
	.quad	.LFB11796
	.quad	.LFE11796-.LFB11796
	.uleb128 0x1
	.byte	0x9c
	.long	0x214ea
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0x6cca
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xd0
	.byte	0x2a
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1a
	.secrel32	.LASF199
	.byte	0xc
	.byte	0xd2
	.byte	0x25
	.long	0x7fbd
	.byte	0
	.uleb128 0x1f
	.long	0x120b8
	.uleb128 0x7
	.long	0x5df6
	.uleb128 0x2a
	.long	0x169b7
	.quad	.LFB11795
	.quad	.LFE11795-.LFB11795
	.uleb128 0x1
	.byte	0x9c
	.long	0x21528
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x214ef
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x12
	.byte	0x68
	.byte	0x10
	.long	0x214ef
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x1bcc
	.long	0x21536
	.byte	0x2
	.long	0x21549
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x190ff
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x20
	.long	0x21528
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb1EEED1Ev\0"
	.long	0x215a2
	.quad	.LFB11789
	.quad	.LFE11789-.LFB11789
	.uleb128 0x1
	.byte	0x9c
	.long	0x215ab
	.uleb128 0x8
	.long	0x21536
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x51
	.long	0x17e0
	.long	0x215ca
	.quad	.LFB11783
	.quad	.LFE11783-.LFB11783
	.uleb128 0x1
	.byte	0x9c
	.long	0x215d7
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x190eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x6470
	.long	0x215f3
	.byte	0x2
	.long	0x21621
	.uleb128 0x3
	.secrel32	.LASF64
	.long	0x22e56
	.uleb128 0x43
	.secrel32	.LASF128
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19635
	.uleb128 0x39
	.ascii "__f\0"
	.byte	0xb
	.byte	0x7e
	.byte	0x1a
	.long	0x14fc5
	.uleb128 0x9c
	.byte	0xb
	.byte	0x7e
	.byte	0x26
	.uleb128 0x77
	.uleb128 0x79
	.ascii "__depend\0"
	.byte	0xb
	.byte	0x89
	.byte	0x7
	.long	0x18574
	.byte	0
	.byte	0
	.uleb128 0x3c
	.long	0x215d7
	.long	0x2164e
	.quad	.LFB11611
	.quad	.LFE11611-.LFB11611
	.uleb128 0x1
	.byte	0x9c
	.long	0x21686
	.uleb128 0x3
	.secrel32	.LASF64
	.long	0x22e56
	.uleb128 0x43
	.secrel32	.LASF128
	.uleb128 0x8
	.long	0x215f3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x215fc
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9c
	.byte	0xb
	.byte	0x7e
	.byte	0x26
	.uleb128 0x78
	.long	0x2160d
	.long	0x21672
	.uleb128 0x66
	.long	0x2160e
	.byte	0
	.uleb128 0x140
	.long	0x2160d
	.secrel32	.LLRL13
	.uleb128 0x42
	.long	0x2160e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	0x1c643
	.long	0x216ac
	.quad	.LFB11591
	.quad	.LFE11591-.LFB11591
	.uleb128 0x1
	.byte	0x9c
	.long	0x21852
	.uleb128 0x9
	.ascii "C\0"
	.long	0x22c1f
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c859
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF146
	.byte	0xe
	.word	0x117
	.byte	0x29
	.long	0x17746
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1e
	.secrel32	.LASF208
	.byte	0xe
	.word	0x117
	.byte	0x40
	.long	0x1cd33
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "pressed\0"
	.byte	0xe
	.word	0x117
	.byte	0x5e
	.long	0x195cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x11
	.ascii "held\0"
	.byte	0xe
	.word	0x117
	.byte	0x7a
	.long	0x195cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x11
	.ascii "released\0"
	.byte	0xe
	.word	0x117
	.byte	0x93
	.long	0x195cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x1e
	.secrel32	.LASF209
	.byte	0xe
	.word	0x117
	.byte	0xb0
	.long	0x195db
	.uleb128 0x2
	.byte	0x91
	.sleb128 48
	.uleb128 0x11
	.ascii "x1\0"
	.byte	0xe
	.word	0x117
	.byte	0xc2
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 56
	.uleb128 0x11
	.ascii "x2\0"
	.byte	0xe
	.word	0x117
	.byte	0xcf
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 64
	.uleb128 0x11
	.ascii "y1\0"
	.byte	0xe
	.word	0x117
	.byte	0xdc
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 72
	.uleb128 0x11
	.ascii "y2\0"
	.byte	0xe
	.word	0x117
	.byte	0xe9
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 80
	.uleb128 0x11
	.ascii "z1\0"
	.byte	0xe
	.word	0x117
	.byte	0xf6
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 88
	.uleb128 0x141
	.ascii "z2\0"
	.byte	0xe
	.word	0x117
	.word	0x103
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 96
	.uleb128 0x17
	.ascii "FrameDuration\0"
	.byte	0xe
	.word	0x119
	.byte	0xe
	.long	0x8bca
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x3f
	.quad	.LBB248
	.quad	.LBE248-.LBB248
	.uleb128 0x17
	.ascii "frameStart\0"
	.byte	0xe
	.word	0x11e
	.byte	0x9
	.long	0x77ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x17
	.ascii "frameEnd\0"
	.byte	0xe
	.word	0x139
	.byte	0x9
	.long	0x77ec
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x17
	.ascii "elapsed\0"
	.byte	0xe
	.word	0x13a
	.byte	0xc
	.long	0x6d77
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x3f
	.quad	.LBB249
	.quad	.LBE249-.LBB249
	.uleb128 0x17
	.ascii "z\0"
	.byte	0xe
	.word	0x125
	.byte	0x11
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x3f
	.quad	.LBB251
	.quad	.LBE251-.LBB251
	.uleb128 0x17
	.ascii "y\0"
	.byte	0xe
	.word	0x129
	.byte	0x12
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x3f
	.quad	.LBB253
	.quad	.LBE253-.LBB253
	.uleb128 0x17
	.ascii "x\0"
	.byte	0xe
	.word	0x12b
	.byte	0x13
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0x9c80
	.quad	.LFB11595
	.quad	.LFE11595-.LFB11595
	.uleb128 0x1
	.byte	0x9c
	.long	0x218ad
	.uleb128 0x3
	.secrel32	.LASF91
	.long	0x7682
	.uleb128 0x9
	.ascii "_Dur1\0"
	.long	0x6d77
	.uleb128 0x9
	.ascii "_Dur2\0"
	.long	0x6d77
	.uleb128 0x1e
	.secrel32	.LASF205
	.byte	0xc
	.word	0x402
	.byte	0x32
	.long	0x197c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF206
	.byte	0xc
	.word	0x403
	.byte	0x24
	.long	0x197c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x8b4e
	.long	0x218c4
	.byte	0x2
	.long	0x218db
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x188
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x197ab
	.uleb128 0x4c
	.secrel32	.LASF204
	.byte	0xc
	.word	0x1f9
	.byte	0x2d
	.long	0x19023
	.byte	0
	.uleb128 0x40
	.long	0x218ad
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000EEEC1IivEERKT_\0"
	.long	0x2193c
	.quad	.LFB11594
	.quad	.LFE11594-.LFB11594
	.uleb128 0x1
	.byte	0x9c
	.long	0x2194d
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x188
	.uleb128 0x8
	.long	0x218c4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x218cd
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x104be
	.long	0x2196c
	.quad	.LFB11590
	.quad	.LFE11590-.LFB11590
	.uleb128 0x1
	.byte	0x9c
	.long	0x21989
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1cbcb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__i\0"
	.byte	0xf
	.word	0x2cd
	.byte	0x19
	.long	0xe33
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x11b83
	.long	0x21997
	.byte	0x2
	.long	0x219b8
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1ccca
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.uleb128 0x77
	.uleb128 0x9d
	.secrel32	.LASF190
	.word	0x29b
	.long	0x1cc43
	.byte	0
	.byte	0
	.uleb128 0x3c
	.long	0x21989
	.long	0x219d7
	.quad	.LFB11588
	.quad	.LFE11588-.LFB11588
	.uleb128 0x1
	.byte	0x9c
	.long	0x21a0e
	.uleb128 0x8
	.long	0x21997
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x78
	.long	0x219a9
	.long	0x219ee
	.uleb128 0x66
	.long	0x219aa
	.byte	0
	.uleb128 0x83
	.long	0x219a9
	.quad	.LBB246
	.quad	.LBE246-.LBB246
	.uleb128 0x42
	.long	0x219aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x11e66
	.long	0x21a1c
	.byte	0x2
	.long	0x21a42
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cd29
	.uleb128 0x39
	.ascii "__count\0"
	.byte	0x11
	.byte	0xe7
	.byte	0x19
	.long	0x20b6
	.uleb128 0x4d
	.secrel32	.LASF207
	.byte	0x11
	.byte	0xe7
	.byte	0x2f
	.long	0x22c1f
	.byte	0
	.uleb128 0x3c
	.long	0x21a0e
	.long	0x21a61
	.quad	.LFB11585
	.quad	.LFE11585-.LFB11585
	.uleb128 0x1
	.byte	0x9c
	.long	0x21a7a
	.uleb128 0x8
	.long	0x21a1c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x21a25
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x8
	.long	0x21a35
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x16a28
	.quad	.LFB11583
	.quad	.LFE11583-.LFB11583
	.uleb128 0x1
	.byte	0x9c
	.long	0x21aaf
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1e6
	.uleb128 0x11
	.ascii "__x\0"
	.byte	0x15
	.word	0x500
	.byte	0xe
	.long	0x1e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x103af
	.long	0x21abd
	.byte	0x2
	.long	0x21ade
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cbb7
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.uleb128 0x77
	.uleb128 0x9d
	.secrel32	.LASF190
	.word	0x29b
	.long	0x1cb35
	.byte	0
	.byte	0
	.uleb128 0x20
	.long	0x21aaf
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EED1Ev\0"
	.long	0x21b37
	.quad	.LFB11582
	.quad	.LFE11582-.LFB11582
	.uleb128 0x1
	.byte	0x9c
	.long	0x21b6e
	.uleb128 0x8
	.long	0x21abd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x78
	.long	0x21acf
	.long	0x21b4e
	.uleb128 0x66
	.long	0x21ad0
	.byte	0
	.uleb128 0x83
	.long	0x21acf
	.quad	.LBB243
	.quad	.LBE243-.LBB243
	.uleb128 0x42
	.long	0x21ad0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x10874
	.long	0x21b8e
	.byte	0x2
	.long	0x21ba5
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x19630
	.uleb128 0x57
	.ascii "_Vp\0"
	.long	0xeac3
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cbb7
	.uleb128 0x35
	.ascii "__p\0"
	.byte	0xf
	.word	0x256
	.byte	0x11
	.long	0x19630
	.byte	0
	.uleb128 0x20
	.long	0x21b6e
	.ascii "_ZNSt10unique_ptrIA_St6threadSt14default_deleteIS1_EEC1IPS0_S3_vbEET_\0"
	.long	0x21c1c
	.quad	.LFB11579
	.quad	.LFE11579-.LFB11579
	.uleb128 0x1
	.byte	0x9c
	.long	0x21c2d
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x19630
	.uleb128 0x57
	.ascii "_Vp\0"
	.long	0xeac3
	.uleb128 0x8
	.long	0x21b8e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x21b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x50
	.long	0x1021b
	.byte	0xf
	.byte	0xe9
	.byte	0x28
	.long	0x21c3d
	.long	0x21c4c
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cba3
	.uleb128 0x1
	.long	0xed41
	.byte	0
	.uleb128 0x20
	.long	0x21c2d
	.ascii "_ZNSt15__uniq_ptr_dataISt6threadSt14default_deleteIA_S0_ELb1ELb1EECI1St15__uniq_ptr_implIS0_S3_EEPS0_\0"
	.long	0x21cd1
	.quad	.LFB11577
	.quad	.LFE11577-.LFB11577
	.uleb128 0x1
	.byte	0x9c
	.long	0x21ce2
	.uleb128 0x8
	.long	0x21c3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x21c46
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0xe8df
	.long	0x21cf9
	.byte	0x2
	.long	0x21d03
	.uleb128 0x55
	.secrel32	.LASF73
	.long	0xc3c5
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c82c
	.byte	0
	.uleb128 0x20
	.long	0x21ce2
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IS4_vEEv\0"
	.long	0x21d7f
	.quad	.LFB11573
	.quad	.LFE11573-.LFB11573
	.uleb128 0x1
	.byte	0x9c
	.long	0x21d88
	.uleb128 0x55
	.secrel32	.LASF73
	.long	0xc3c5
	.uleb128 0x8
	.long	0x21cf9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x50
	.long	0xe0a2
	.byte	0xf
	.byte	0xe9
	.byte	0x28
	.long	0x21d98
	.long	0x21da2
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c813
	.byte	0
	.uleb128 0x20
	.long	0x21d88
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEv\0"
	.long	0x21e38
	.quad	.LFB11571
	.quad	.LFE11571-.LFB11571
	.uleb128 0x1
	.byte	0x9c
	.long	0x21e41
	.uleb128 0x8
	.long	0x21d98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0xc678
	.long	0x21e4f
	.byte	0x2
	.long	0x21e59
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c7f0
	.byte	0
	.uleb128 0x20
	.long	0x21e41
	.ascii "_ZNSt15__uniq_ptr_implIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_EEC2Ev\0"
	.long	0x21ecb
	.quad	.LFB11568
	.quad	.LFE11568-.LFB11568
	.uleb128 0x1
	.byte	0x9c
	.long	0x21ed4
	.uleb128 0x8
	.long	0x21e4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xba
	.ascii "D2D1CreateFactory<ID2D1Factory>\0"
	.byte	0xd
	.word	0x9d8
	.byte	0x9
	.ascii "_Z17D2D1CreateFactoryI12ID2D1FactoryEl17D2D1_FACTORY_TYPEPPT_\0"
	.long	0x672
	.quad	.LFB11563
	.quad	.LFE11563-.LFB11563
	.uleb128 0x1
	.byte	0x9c
	.long	0x21f84
	.uleb128 0x9
	.ascii "Factory\0"
	.long	0x1abfe
	.uleb128 0x1e
	.secrel32	.LASF210
	.byte	0xd
	.word	0x9d8
	.byte	0x2d
	.long	0x1a915
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "factory\0"
	.byte	0xd
	.word	0x9d8
	.byte	0x44
	.long	0x21f84
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x6
	.long	0x21f89
	.uleb128 0x6
	.long	0x1abfe
	.uleb128 0x4
	.long	0x21f89
	.uleb128 0xba
	.ascii "swprintf_s<512>\0"
	.byte	0x14
	.word	0x335
	.byte	0x3
	.ascii "_Z10swprintf_sILy512EEiRAT__wPKwz\0"
	.long	0x188
	.quad	.LFB11562
	.quad	.LFE11562-.LFB11562
	.uleb128 0x1
	.byte	0x9c
	.long	0x22040
	.uleb128 0x142
	.ascii "__size\0"
	.long	0xf5
	.word	0x200
	.uleb128 0x11
	.ascii "_Dst\0"
	.byte	0x14
	.word	0x335
	.byte	0x3
	.long	0x22052
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "_Format\0"
	.byte	0x14
	.word	0x335
	.byte	0x3
	.long	0x799
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x17
	.ascii "__vaargs\0"
	.byte	0x14
	.word	0x335
	.byte	0x3
	.long	0xd6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x33
	.secrel32	.LASF147
	.byte	0x14
	.word	0x335
	.byte	0x3
	.long	0x188
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x70
	.long	0x1d1
	.long	0x22052
	.uleb128 0x143
	.long	0xf5
	.word	0x1ff
	.byte	0
	.uleb128 0x7
	.long	0x22040
	.uleb128 0x15
	.long	0x16aaa
	.quad	.LFB11561
	.quad	.LFE11561-.LFB11561
	.uleb128 0x1
	.byte	0x9c
	.long	0x220ab
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x1c737
	.uleb128 0x18
	.ascii "__a\0"
	.byte	0x12
	.byte	0xc4
	.byte	0xf
	.long	0x20f79
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x12
	.byte	0xc4
	.byte	0x19
	.long	0x20f79
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x24
	.ascii "__tmp\0"
	.byte	0x12
	.byte	0xcc
	.byte	0xb
	.long	0x1c737
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x16
	.long	0xe461
	.long	0x220ca
	.quad	.LFB11560
	.quad	.LFE11560-.LFB11560
	.uleb128 0x1
	.byte	0x9c
	.long	0x220e7
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c840
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__i\0"
	.byte	0xf
	.word	0x2cd
	.byte	0x19
	.long	0xe33
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0xc7d7
	.long	0x22106
	.quad	.LFB11559
	.quad	.LFE11559-.LFB11559
	.uleb128 0x1
	.byte	0x9c
	.long	0x22122
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c7f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__u\0"
	.byte	0xf
	.byte	0xb5
	.byte	0x34
	.long	0x1c7f5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0xe316
	.long	0x22130
	.byte	0x2
	.long	0x22151
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c82c
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.uleb128 0x77
	.uleb128 0x9d
	.secrel32	.LASF190
	.word	0x29b
	.long	0x1c7a5
	.byte	0
	.byte	0
	.uleb128 0x20
	.long	0x22122
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EED1Ev\0"
	.long	0x221be
	.quad	.LFB11558
	.quad	.LFE11558-.LFB11558
	.uleb128 0x1
	.byte	0x9c
	.long	0x221f5
	.uleb128 0x8
	.long	0x22130
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x78
	.long	0x22142
	.long	0x221d5
	.uleb128 0x66
	.long	0x22143
	.byte	0
	.uleb128 0x83
	.long	0x22142
	.quad	.LBB236
	.quad	.LBE236-.LBB236
	.uleb128 0x42
	.long	0x22143
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xe954
	.long	0x22215
	.byte	0x2
	.long	0x2222c
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x1c746
	.uleb128 0x57
	.ascii "_Vp\0"
	.long	0xc3c5
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c82c
	.uleb128 0x35
	.ascii "__p\0"
	.byte	0xf
	.word	0x256
	.byte	0x11
	.long	0x1c746
	.byte	0
	.uleb128 0x20
	.long	0x221f5
	.ascii "_ZNSt10unique_ptrIA_N6MATRIX18MaterialAttributesESt14default_deleteIS2_EEC1IPS1_S4_vbEET_\0"
	.long	0x222b7
	.quad	.LFB11555
	.quad	.LFE11555-.LFB11555
	.uleb128 0x1
	.byte	0x9c
	.long	0x222c8
	.uleb128 0x9
	.ascii "_Up\0"
	.long	0x1c746
	.uleb128 0x57
	.ascii "_Vp\0"
	.long	0xc3c5
	.uleb128 0x8
	.long	0x22215
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2221e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x50
	.long	0xe12d
	.byte	0xf
	.byte	0xe9
	.byte	0x28
	.long	0x222d8
	.long	0x222e7
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c813
	.uleb128 0x1
	.long	0xc754
	.byte	0
	.uleb128 0x20
	.long	0x222c8
	.ascii "_ZNSt15__uniq_ptr_dataIN6MATRIX18MaterialAttributesESt14default_deleteIA_S1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S4_EEPS1_\0"
	.long	0x22380
	.quad	.LFB11553
	.quad	.LFE11553-.LFB11553
	.uleb128 0x1
	.byte	0x9c
	.long	0x22391
	.uleb128 0x8
	.long	0x222d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x222e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x64
	.long	0x1babc
	.long	0x223dd
	.uleb128 0x9
	.ascii "T\0"
	.long	0x4fd
	.uleb128 0x39
	.ascii "left\0"
	.byte	0x10
	.byte	0x39
	.byte	0x4a
	.long	0x4fd
	.uleb128 0x39
	.ascii "top\0"
	.byte	0x10
	.byte	0x39
	.byte	0x52
	.long	0x4fd
	.uleb128 0x4d
	.secrel32	.LASF143
	.byte	0x10
	.byte	0x39
	.byte	0x59
	.long	0x4fd
	.uleb128 0x4d
	.secrel32	.LASF144
	.byte	0x10
	.byte	0x39
	.byte	0x62
	.long	0x4fd
	.uleb128 0x79
	.ascii "r\0"
	.byte	0x10
	.byte	0x3a
	.byte	0x22
	.long	0x1b18c
	.byte	0
	.uleb128 0x64
	.long	0x1bb27
	.long	0x22410
	.uleb128 0x9
	.ascii "T\0"
	.long	0x1e6
	.uleb128 0x4d
	.secrel32	.LASF157
	.byte	0x10
	.byte	0x2c
	.byte	0x4a
	.long	0x1e6
	.uleb128 0x4d
	.secrel32	.LASF158
	.byte	0x10
	.byte	0x2c
	.byte	0x53
	.long	0x1e6
	.uleb128 0x79
	.ascii "r\0"
	.byte	0x10
	.byte	0x2d
	.byte	0x22
	.long	0x1b15c
	.byte	0
	.uleb128 0x15
	.long	0x9e04
	.quad	.LFB11488
	.quad	.LFE11488-.LFB11488
	.uleb128 0x1
	.byte	0x9c
	.long	0x22456
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x6d77
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0x6cca
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x34
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x16b9b
	.quad	.LFB11484
	.quad	.LFE11484-.LFB11484
	.uleb128 0x1
	.byte	0x9c
	.long	0x224d4
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0x6cca
	.uleb128 0x18
	.ascii "__rtime\0"
	.byte	0x13
	.byte	0x44
	.byte	0x38
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x24
	.ascii "__s\0"
	.byte	0x13
	.byte	0x48
	.byte	0x7
	.long	0x7e0a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.ascii "__ns\0"
	.byte	0x13
	.byte	0x49
	.byte	0x7
	.long	0x6d77
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.ascii "__ts\0"
	.byte	0x13
	.byte	0x4b
	.byte	0x14
	.long	0x18e95
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x26
	.quad	.LVL55
	.long	0x1d00c
	.byte	0
	.uleb128 0x15
	.long	0x16c4b
	.quad	.LFB11478
	.quad	.LFE11478-.LFB11478
	.uleb128 0x1
	.byte	0x9c
	.long	0x22552
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa6a3
	.uleb128 0x18
	.ascii "__rtime\0"
	.byte	0x13
	.byte	0x44
	.byte	0x38
	.long	0x197b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x24
	.ascii "__s\0"
	.byte	0x13
	.byte	0x48
	.byte	0x7
	.long	0x7e0a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x24
	.ascii "__ns\0"
	.byte	0x13
	.byte	0x49
	.byte	0x7
	.long	0x6d77
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x24
	.ascii "__ts\0"
	.byte	0x13
	.byte	0x4b
	.byte	0x14
	.long	0x18e95
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x26
	.quad	.LVL54
	.long	0x1d00c
	.byte	0
	.uleb128 0x15
	.long	0x9f42
	.quad	.LFB11479
	.quad	.LFE11479-.LFB11479
	.uleb128 0x1
	.byte	0x9c
	.long	0x225c0
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0xa6a3
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa6a3
	.uleb128 0x1e
	.secrel32	.LASF205
	.byte	0xc
	.word	0x302
	.byte	0x34
	.long	0x197b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF206
	.byte	0xc
	.word	0x303
	.byte	0x26
	.long	0x197b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "__ct\0"
	.byte	0xc
	.word	0x305
	.byte	0x8
	.long	0x16d1c
	.byte	0
	.uleb128 0x51
	.long	0x861c
	.long	0x225df
	.quad	.LFB11480
	.quad	.LFE11480-.LFB11480
	.uleb128 0x1
	.byte	0x9c
	.long	0x225ec
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x197bf
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xa026
	.quad	.LFB11476
	.quad	.LFE11476-.LFB11476
	.uleb128 0x1
	.byte	0x9c
	.long	0x22632
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x6d77
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0xa6a3
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x34
	.long	0x197b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x51
	.long	0x7fcf
	.long	0x22651
	.quad	.LFB11449
	.quad	.LFE11449-.LFB11449
	.uleb128 0x1
	.byte	0x9c
	.long	0x2265e
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1979c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xa16b
	.quad	.LFB11448
	.quad	.LFE11448-.LFB11448
	.uleb128 0x1
	.byte	0x9c
	.long	0x226a4
	.uleb128 0x3
	.secrel32	.LASF93
	.long	0x7e0a
	.uleb128 0x3
	.secrel32	.LASF88
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF89
	.long	0x6cca
	.uleb128 0x18
	.ascii "__d\0"
	.byte	0xc
	.byte	0xfc
	.byte	0x34
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x51
	.long	0x796d
	.long	0x226c3
	.quad	.LFB11447
	.quad	.LFE11447-.LFB11447
	.uleb128 0x1
	.byte	0x9c
	.long	0x226d0
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x19779
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7
	.long	0x10f
	.uleb128 0x15
	.long	0x21f5
	.quad	.LFB11446
	.quad	.LFE11446-.LFB11446
	.uleb128 0x1
	.byte	0x9c
	.long	0x22709
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0xf5
	.uleb128 0x3d
	.secrel32	.LASF195
	.byte	0x5
	.byte	0xd2
	.byte	0x17
	.long	0x226d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x16d29
	.quad	.LFB11445
	.quad	.LFE11445-.LFB11445
	.uleb128 0x1
	.byte	0x9c
	.long	0x2275d
	.uleb128 0x9
	.ascii "_Tp\0"
	.long	0x5df6
	.uleb128 0x18
	.ascii "__a\0"
	.byte	0x12
	.byte	0xc4
	.byte	0xf
	.long	0x214ef
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x12
	.byte	0xc4
	.byte	0x19
	.long	0x214ef
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x24
	.ascii "__tmp\0"
	.byte	0x12
	.byte	0xcc
	.byte	0xb
	.long	0x5df6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x14
	.long	0x4e23
	.long	0x2276b
	.byte	0x2
	.long	0x22782
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x195fe
	.uleb128 0x35
	.ascii "__i\0"
	.byte	0x9
	.word	0x159
	.byte	0x2a
	.long	0x4ce0
	.byte	0
	.uleb128 0x40
	.long	0x2275d
	.ascii "_ZNSt13__atomic_baseIxEC1Ex\0"
	.long	0x227bd
	.quad	.LFB11420
	.quad	.LFE11420-.LFB11420
	.uleb128 0x1
	.byte	0x9c
	.long	0x227ce
	.uleb128 0x8
	.long	0x2276b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x22774
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x39eb
	.long	0x227dc
	.byte	0x3
	.long	0x2280d
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x195a4
	.uleb128 0x35
	.ascii "__i\0"
	.byte	0x9
	.word	0x1c8
	.byte	0x18
	.long	0x32ce
	.uleb128 0x35
	.ascii "__m\0"
	.byte	0x9
	.word	0x1c8
	.byte	0x2a
	.long	0x318c
	.uleb128 0x8f
	.ascii "__b\0"
	.word	0x1ca
	.byte	0xf
	.long	0x318c
	.byte	0
	.uleb128 0x14
	.long	0x3a8e
	.long	0x2281b
	.byte	0x3
	.long	0x2283f
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x195bd
	.uleb128 0x35
	.ascii "__m\0"
	.byte	0x9
	.word	0x1e1
	.byte	0x19
	.long	0x318c
	.uleb128 0x8f
	.ascii "__b\0"
	.word	0x1e3
	.byte	0xf
	.long	0x318c
	.byte	0
	.uleb128 0x16
	.long	0x34bc
	.long	0x2285e
	.quad	.LFB11369
	.quad	.LFE11369-.LFB11369
	.uleb128 0x1
	.byte	0x9c
	.long	0x228b5
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x195a4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__i\0"
	.byte	0x9
	.word	0x162
	.byte	0x1c
	.long	0x32ce
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x69
	.long	0x227ce
	.quad	.LBB230
	.quad	.LBE230-.LBB230
	.byte	0x9
	.word	0x164
	.byte	0x7
	.uleb128 0x8
	.long	0x227f2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x8
	.long	0x227e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.uleb128 0x8
	.long	0x227dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x42
	.long	0x227ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	0x1848
	.long	0x228d4
	.quad	.LFB11366
	.quad	.LFE11366-.LFB11366
	.uleb128 0x1
	.byte	0x9c
	.long	0x22906
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x190f5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__all\0"
	.byte	0x8
	.word	0x131
	.byte	0x11
	.long	0x184a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "__bare\0"
	.byte	0x8
	.word	0x131
	.byte	0x1d
	.long	0x184a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x14
	.long	0x1d87
	.long	0x22914
	.byte	0x2
	.long	0x22927
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19109
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x40
	.long	0x22906
	.ascii "_ZNSt8__detail8__waiterISt17integral_constantIbLb0EEED1Ev\0"
	.long	0x22980
	.quad	.LFB11365
	.quad	.LFE11365-.LFB11365
	.uleb128 0x1
	.byte	0x9c
	.long	0x22989
	.uleb128 0x8
	.long	0x22914
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x309e
	.long	0x22997
	.byte	0x2
	.long	0x229aa
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x190c8
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x20
	.long	0x22989
	.ascii "_ZNSt10lock_guardISt5mutexED1Ev\0"
	.long	0x229e9
	.quad	.LFB11359
	.quad	.LFE11359-.LFB11359
	.uleb128 0x1
	.byte	0x9c
	.long	0x229f2
	.uleb128 0x8
	.long	0x22997
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x2ff5
	.long	0x22a00
	.byte	0x2
	.long	0x22a16
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x190c8
	.uleb128 0x39
	.ascii "__m\0"
	.byte	0x7
	.byte	0xe4
	.byte	0x27
	.long	0x190cd
	.byte	0
	.uleb128 0x20
	.long	0x229f2
	.ascii "_ZNSt10lock_guardISt5mutexEC1ERS0_\0"
	.long	0x22a58
	.quad	.LFB11356
	.quad	.LFE11356-.LFB11356
	.uleb128 0x1
	.byte	0x9c
	.long	0x22a69
	.uleb128 0x8
	.long	0x22a00
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x22a09
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x144
	.ascii "WinMain\0"
	.byte	0xe
	.word	0x312
	.byte	0xc
	.long	0x52c
	.quad	.LFB10954
	.quad	.LFE10954-.LFB10954
	.uleb128 0x1
	.byte	0x9c
	.long	0x2315a
	.uleb128 0x53
	.long	0x17701
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x53
	.long	0x17701
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x53
	.long	0x643
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x53
	.long	0x52c
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x33
	.secrel32	.LASF211
	.byte	0xe
	.word	0x314
	.byte	0xa
	.long	0x1c854
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x33
	.secrel32	.LASF157
	.byte	0xe
	.word	0x316
	.byte	0xb
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x33
	.secrel32	.LASF158
	.byte	0xe
	.word	0x317
	.byte	0xb
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x17
	.ascii "depth\0"
	.byte	0xe
	.word	0x318
	.byte	0xb
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x33
	.secrel32	.LASF212
	.byte	0xe
	.word	0x31a
	.byte	0x14
	.long	0x1cd4c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -544
	.uleb128 0x33
	.secrel32	.LASF213
	.byte	0xe
	.word	0x31b
	.byte	0x14
	.long	0x1cd4c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -800
	.uleb128 0x17
	.ascii "keyHeld\0"
	.byte	0xe
	.word	0x31c
	.byte	0x14
	.long	0x1cd4c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1056
	.uleb128 0x17
	.ascii "keyPrev\0"
	.byte	0xe
	.word	0x31d
	.byte	0x14
	.long	0x1cd4c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1312
	.uleb128 0x17
	.ascii "SizeOfMatrix\0"
	.byte	0xe
	.word	0x31f
	.byte	0xb
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x33
	.secrel32	.LASF214
	.byte	0xe
	.word	0x320
	.byte	0x7
	.long	0x17746
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x33
	.secrel32	.LASF209
	.byte	0xe
	.word	0x323
	.byte	0x14
	.long	0x43d7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1313
	.uleb128 0x17
	.ascii "ready\0"
	.byte	0xe
	.word	0x324
	.byte	0x14
	.long	0x43d7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1314
	.uleb128 0x17
	.ascii "MainThreadID\0"
	.byte	0xe
	.word	0x325
	.byte	0x12
	.long	0x5df6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1328
	.uleb128 0x17
	.ascii "msg\0"
	.byte	0xe
	.word	0x327
	.byte	0x6
	.long	0x17b7a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1376
	.uleb128 0x91
	.secrel32	.LLRL12
	.long	0x2314c
	.uleb128 0x17
	.ascii "ChunkThreads\0"
	.byte	0xe
	.word	0x32c
	.byte	0x22
	.long	0x102ff
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1384
	.uleb128 0x17
	.ascii "splitPerAxis\0"
	.byte	0xe
	.word	0x32e
	.byte	0xc
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x17
	.ascii "rondevousPointFunction\0"
	.byte	0xe
	.word	0x330
	.byte	0x8
	.long	0x22c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1408
	.uleb128 0x145
	.byte	0x18
	.byte	0xe
	.word	0x330
	.byte	0x2d
	.long	0x22d13
	.uleb128 0x5c
	.secrel32	.LASF201
	.long	0x22c37
	.long	0x22c42
	.uleb128 0x2
	.long	0x1ccf7
	.uleb128 0x1
	.long	0x1ccfc
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF201
	.long	0x22c4f
	.long	0x22c5f
	.uleb128 0x2
	.long	0x1ccf7
	.uleb128 0x1
	.long	0x1cd01
	.uleb128 0x4
	.long	0x22c1f
	.byte	0
	.uleb128 0xe6
	.secrel32	.LASF201
	.long	0x22c6d
	.long	0x22c73
	.uleb128 0x2
	.long	0x1ccf7
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF202
	.long	0x22c80
	.long	0x22c8b
	.uleb128 0x2
	.long	0x1ccf7
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF215
	.byte	0xe
	.word	0x330
	.byte	0x26
	.long	0x195db
	.byte	0
	.uleb128 0xe9
	.secrel32	.LASF4
	.long	0x22cb9
	.quad	.LFB10975
	.quad	.LFE10975-.LFB10975
	.uleb128 0x1
	.byte	0x9c
	.long	0x22cf6
	.uleb128 0x12
	.secrel32	.LASF203
	.long	0x22cc5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.long	0x1cd06
	.uleb128 0x5e
	.secrel32	.LASF209
	.long	0x195db
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.uleb128 0x5e
	.secrel32	.LASF211
	.long	0x1c859
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5e
	.secrel32	.LASF214
	.long	0x17753
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x10
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF216
	.byte	0xe
	.word	0x330
	.byte	0x31
	.long	0x1c854
	.byte	0x8
	.uleb128 0x3e
	.secrel32	.LASF217
	.byte	0xe
	.word	0x330
	.byte	0x49
	.long	0x17746
	.byte	0x10
	.byte	0
	.uleb128 0x33
	.secrel32	.LASF208
	.byte	0xe
	.word	0x331
	.byte	0x10
	.long	0x11ded
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1472
	.uleb128 0x17
	.ascii "chunkSizeX\0"
	.byte	0xe
	.word	0x333
	.byte	0xc
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x17
	.ascii "chunkSizeY\0"
	.byte	0xe
	.word	0x334
	.byte	0xc
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x17
	.ascii "chunkSizeZ\0"
	.byte	0xe
	.word	0x335
	.byte	0xc
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x17
	.ascii "threadIndex\0"
	.byte	0xe
	.word	0x337
	.byte	0xc
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x4a
	.quad	.LBB212
	.quad	.LBE212-.LBB212
	.long	0x2304d
	.uleb128 0x17
	.ascii "x\0"
	.byte	0xe
	.word	0x339
	.byte	0x11
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x3f
	.quad	.LBB214
	.quad	.LBE214-.LBB214
	.uleb128 0x17
	.ascii "y\0"
	.byte	0xe
	.word	0x33b
	.byte	0x15
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x3f
	.quad	.LBB216
	.quad	.LBE216-.LBB216
	.uleb128 0x17
	.ascii "z\0"
	.byte	0xe
	.word	0x33d
	.byte	0x19
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x3f
	.quad	.LBB217
	.quad	.LBE217-.LBB217
	.uleb128 0x17
	.ascii "x1\0"
	.byte	0xe
	.word	0x33f
	.byte	0x18
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x17
	.ascii "x2\0"
	.byte	0xe
	.word	0x340
	.byte	0x18
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x17
	.ascii "y1\0"
	.byte	0xe
	.word	0x342
	.byte	0x18
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x17
	.ascii "y2\0"
	.byte	0xe
	.word	0x343
	.byte	0x18
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x17
	.ascii "z1\0"
	.byte	0xe
	.word	0x345
	.byte	0x18
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x17
	.ascii "z2\0"
	.byte	0xe
	.word	0x346
	.byte	0x18
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x146
	.byte	0x50
	.byte	0xe
	.word	0x34a
	.byte	0x60
	.uleb128 0x5c
	.secrel32	.LASF202
	.long	0x22e6a
	.long	0x22e75
	.uleb128 0x2
	.long	0x1cd47
	.uleb128 0x2
	.long	0x188
	.byte	0
	.uleb128 0x1c
	.ascii "__SyncPoint\0"
	.byte	0xe
	.word	0x34a
	.byte	0xc
	.long	0x1cd33
	.byte	0
	.uleb128 0x1c
	.ascii "__keyPressed\0"
	.byte	0xe
	.word	0x34a
	.byte	0x18
	.long	0x1cd5f
	.byte	0x8
	.uleb128 0x1c
	.ascii "__keyHeld\0"
	.byte	0xe
	.word	0x34a
	.byte	0x25
	.long	0x1cd5f
	.byte	0x10
	.uleb128 0x1c
	.ascii "__keyReleased\0"
	.byte	0xe
	.word	0x34a
	.byte	0x2f
	.long	0x1cd5f
	.byte	0x18
	.uleb128 0x3e
	.secrel32	.LASF215
	.byte	0xe
	.word	0x34a
	.byte	0x3d
	.long	0x195db
	.byte	0x20
	.uleb128 0x1c
	.ascii "__x1\0"
	.byte	0xe
	.word	0x34a
	.byte	0x46
	.long	0x182e6
	.byte	0x28
	.uleb128 0x1c
	.ascii "__x2\0"
	.byte	0xe
	.word	0x34a
	.byte	0x4b
	.long	0x182e6
	.byte	0x2c
	.uleb128 0x1c
	.ascii "__y1\0"
	.byte	0xe
	.word	0x34a
	.byte	0x50
	.long	0x182e6
	.byte	0x30
	.uleb128 0x1c
	.ascii "__y2\0"
	.byte	0xe
	.word	0x34a
	.byte	0x55
	.long	0x182e6
	.byte	0x34
	.uleb128 0x1c
	.ascii "__z1\0"
	.byte	0xe
	.word	0x34a
	.byte	0x5a
	.long	0x182e6
	.byte	0x38
	.uleb128 0x1c
	.ascii "__z2\0"
	.byte	0xe
	.word	0x34a
	.byte	0x5e
	.long	0x182e6
	.byte	0x3c
	.uleb128 0xe9
	.secrel32	.LASF4
	.long	0x22f5b
	.quad	.LFB10990
	.quad	.LFE10990-.LFB10990
	.uleb128 0x1
	.byte	0x9c
	.long	0x2302c
	.uleb128 0x4
	.long	0x22e56
	.uleb128 0x12
	.secrel32	.LASF203
	.long	0x22f67
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.long	0x1cd64
	.uleb128 0x7a
	.ascii "z2\0"
	.long	0x182f7
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x7a
	.ascii "z1\0"
	.long	0x182f7
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x7a
	.ascii "y2\0"
	.long	0x182f7
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x7a
	.ascii "y1\0"
	.long	0x182f7
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x7a
	.ascii "x2\0"
	.long	0x182f7
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7a
	.ascii "x1\0"
	.long	0x182f7
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x5e
	.secrel32	.LASF209
	.long	0x195db
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x5e
	.secrel32	.LASF213
	.long	0x1cd5f
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7a
	.ascii "keyHeld\0"
	.long	0x1cd5f
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x5e
	.secrel32	.LASF212
	.long	0x1cd5f
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5e
	.secrel32	.LASF208
	.long	0x1cd33
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.uleb128 0x5e
	.secrel32	.LASF211
	.long	0x1c859
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x5e
	.secrel32	.LASF214
	.long	0x17753
	.uleb128 0x5
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x23
	.uleb128 0x48
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF216
	.byte	0xe
	.word	0x34a
	.byte	0x65
	.long	0x1c854
	.byte	0x40
	.uleb128 0x3e
	.secrel32	.LASF217
	.byte	0xe
	.word	0x34a
	.byte	0x83
	.long	0x17746
	.byte	0x48
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x4a
	.quad	.LBB218
	.quad	.LBE218-.LBB218
	.long	0x23093
	.uleb128 0x17
	.ascii "i\0"
	.byte	0xe
	.word	0x350
	.byte	0x10
	.long	0x182c5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -66
	.uleb128 0x3f
	.quad	.LBB219
	.quad	.LBE219-.LBB219
	.uleb128 0x17
	.ascii "n\0"
	.byte	0xe
	.word	0x352
	.byte	0xd
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.byte	0
	.byte	0
	.uleb128 0x4a
	.quad	.LBB222
	.quad	.LBE222-.LBB222
	.long	0x230ff
	.uleb128 0x17
	.ascii "i\0"
	.byte	0xe
	.word	0x361
	.byte	0xe
	.long	0x188
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x3f
	.quad	.LBB223
	.quad	.LBE223-.LBB223
	.uleb128 0x17
	.ascii "KeyState\0"
	.byte	0xe
	.word	0x363
	.byte	0xc
	.long	0x554
	.uleb128 0x3
	.byte	0x91
	.sleb128 -130
	.uleb128 0x17
	.ascii "down\0"
	.byte	0xe
	.word	0x364
	.byte	0xb
	.long	0x184a1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -131
	.uleb128 0x26
	.quad	.LVL49
	.long	0x1d26a
	.byte	0
	.byte	0
	.uleb128 0x4a
	.quad	.LBB224
	.quad	.LBE224-.LBB224
	.long	0x23124
	.uleb128 0x17
	.ascii "i\0"
	.byte	0xe
	.word	0x37f
	.byte	0x10
	.long	0x182c5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -74
	.byte	0
	.uleb128 0x26
	.quad	.LVL50
	.long	0x1d246
	.uleb128 0x26
	.quad	.LVL51
	.long	0x1d21d
	.uleb128 0x26
	.quad	.LVL52
	.long	0x1d1e9
	.byte	0
	.uleb128 0x26
	.quad	.LVL53
	.long	0x1d672
	.byte	0
	.uleb128 0x50
	.long	0x11ff4
	.byte	0x11
	.byte	0xcc
	.byte	0xb
	.long	0x2316a
	.long	0x2317d
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cd29
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x3c
	.long	0x2315a
	.long	0x2319c
	.quad	.LFB10988
	.quad	.LFE10988-.LFB10988
	.uleb128 0x1
	.byte	0x9c
	.long	0x231a5
	.uleb128 0x8
	.long	0x2316a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x50
	.long	0x11024
	.byte	0x11
	.byte	0x4c
	.byte	0xb
	.long	0x231b5
	.long	0x231c8
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cd10
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x3c
	.long	0x231a5
	.long	0x231e7
	.quad	.LFB10986
	.quad	.LFE10986-.LFB10986
	.uleb128 0x1
	.byte	0x9c
	.long	0x231f0
	.uleb128 0x8
	.long	0x231b5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x50
	.long	0x1c6e8
	.byte	0xe
	.byte	0x4a
	.byte	0x8
	.long	0x23200
	.long	0x2320a
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c859
	.byte	0
	.uleb128 0x20
	.long	0x231f0
	.ascii "_ZN6MATRIXC1Ev\0"
	.long	0x23238
	.quad	.LFB10957
	.quad	.LFE10957-.LFB10957
	.uleb128 0x1
	.byte	0x9c
	.long	0x23241
	.uleb128 0x8
	.long	0x23200
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x85
	.ascii "WINDOWGraphicsOverlay\0"
	.byte	0xe
	.word	0x1f0
	.byte	0xb
	.long	0x234da
	.uleb128 0x25
	.ascii "CreateWindowOverlay\0"
	.byte	0xe
	.word	0x2e0
	.byte	0x8
	.ascii "_ZN21WINDOWGraphicsOverlay19CreateWindowOverlayEP6MATRIXjj\0"
	.long	0x4b4
	.long	0x232cd
	.uleb128 0x1
	.long	0x1c854
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182e6
	.byte	0
	.uleb128 0x8c
	.ascii "ShowErrorMessage\0"
	.byte	0xe
	.word	0x2d8
	.byte	0x7
	.ascii "_ZN21WINDOWGraphicsOverlay16ShowErrorMessageEPKc\0"
	.long	0x2331f
	.uleb128 0x1
	.long	0x1713c
	.byte	0
	.uleb128 0x25
	.ascii "WindowProc\0"
	.byte	0xe
	.word	0x23a
	.byte	0x13
	.ascii "_ZN21WINDOWGraphicsOverlay10WindowProcEP6HWND__jyx\0"
	.long	0x176b2
	.long	0x2337f
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x538
	.uleb128 0x1
	.long	0x17694
	.uleb128 0x1
	.long	0x176a3
	.byte	0
	.uleb128 0x25
	.ascii "blitOverlay\0"
	.byte	0xe
	.word	0x21f
	.byte	0x7
	.ascii "_ZN21WINDOWGraphicsOverlay11blitOverlayEP6HWND__jii\0"
	.long	0x184a1
	.long	0x233e1
	.uleb128 0x1
	.long	0x17746
	.uleb128 0x1
	.long	0x182e6
	.uleb128 0x1
	.long	0x182d6
	.uleb128 0x1
	.long	0x182d6
	.byte	0
	.uleb128 0x8c
	.ascii "AllocBrushPool\0"
	.byte	0xe
	.word	0x208
	.byte	0xe
	.ascii "_ZN21WINDOWGraphicsOverlay14AllocBrushPoolEP6HWND__\0"
	.long	0x23434
	.uleb128 0x1
	.long	0x17746
	.byte	0
	.uleb128 0x25
	.ascii "GetMaterialColor\0"
	.byte	0xe
	.word	0x1fb
	.byte	0xb
	.ascii "_ZN21WINDOWGraphicsOverlay16GetMaterialColorEN6MATRIX7elementE\0"
	.long	0x17805
	.long	0x23497
	.uleb128 0x1
	.long	0x1bfb8
	.byte	0
	.uleb128 0x147
	.ascii "ErrorHandle\0"
	.byte	0xe
	.word	0x1f2
	.byte	0xe
	.ascii "_ZN21WINDOWGraphicsOverlay11ErrorHandleEl\0"
	.uleb128 0x1
	.long	0x672
	.byte	0
	.byte	0
	.uleb128 0x148
	.long	0x23261
	.long	0x4b4
	.quad	.LFB10953
	.quad	.LFE10953-.LFB10953
	.uleb128 0x1
	.byte	0x9c
	.long	0x2360a
	.uleb128 0x1e
	.secrel32	.LASF211
	.byte	0xe
	.word	0x2e0
	.byte	0x24
	.long	0x1c854
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF157
	.byte	0xe
	.word	0x2e0
	.byte	0x35
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1e
	.secrel32	.LASF158
	.byte	0xe
	.word	0x2e0
	.byte	0x45
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x33
	.secrel32	.LASF214
	.byte	0xe
	.word	0x2e2
	.byte	0x9
	.long	0x4b4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x17
	.ascii "wc\0"
	.byte	0xe
	.word	0x2e4
	.byte	0xe
	.long	0x17af6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x4a
	.quad	.LBB206
	.quad	.LBE206-.LBB206
	.long	0x235ae
	.uleb128 0x17
	.ascii "errorCode\0"
	.byte	0xe
	.word	0x2fb
	.byte	0xa
	.long	0x4e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x33
	.secrel32	.LASF218
	.byte	0xe
	.word	0x2fc
	.byte	0xd
	.long	0x643
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x26
	.quad	.LVL44
	.long	0x1d368
	.uleb128 0x26
	.quad	.LVL45
	.long	0x1d323
	.uleb128 0x26
	.quad	.LVL46
	.long	0x1d306
	.byte	0
	.uleb128 0x26
	.quad	.LVL39
	.long	0x1d425
	.uleb128 0x26
	.quad	.LVL40
	.long	0x1d401
	.uleb128 0x26
	.quad	.LVL41
	.long	0x1d3d8
	.uleb128 0x26
	.quad	.LVL42
	.long	0x1d425
	.uleb128 0x26
	.quad	.LVL43
	.long	0x1d37e
	.uleb128 0x26
	.quad	.LVL47
	.long	0x1d2e3
	.uleb128 0x26
	.quad	.LVL48
	.long	0x1d2c3
	.byte	0
	.uleb128 0x15
	.long	0x232cd
	.quad	.LFB10952
	.quad	.LFE10952-.LFB10952
	.uleb128 0x1
	.byte	0x9c
	.long	0x23687
	.uleb128 0x1e
	.secrel32	.LASF218
	.byte	0xe
	.word	0x2d8
	.byte	0x24
	.long	0x1713c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x17
	.ascii "len\0"
	.byte	0xe
	.word	0x2d9
	.byte	0x7
	.long	0x188
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x17
	.ascii "wideErrorText\0"
	.byte	0xe
	.word	0x2da
	.byte	0xc
	.long	0x1cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x26
	.quad	.LVL36
	.long	0x1d48b
	.uleb128 0x26
	.quad	.LVL37
	.long	0x1d48b
	.uleb128 0x26
	.quad	.LVL38
	.long	0x1d672
	.byte	0
	.uleb128 0x15
	.long	0x2331f
	.quad	.LFB10945
	.quad	.LFE10945-.LFB10945
	.uleb128 0x1
	.byte	0x9c
	.long	0x23bb0
	.uleb128 0x1e
	.secrel32	.LASF146
	.byte	0xe
	.word	0x23a
	.byte	0x23
	.long	0x17746
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "msg\0"
	.byte	0xe
	.word	0x23a
	.byte	0x2e
	.long	0x538
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "wp\0"
	.byte	0xe
	.word	0x23a
	.byte	0x3a
	.long	0x17694
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "lp\0"
	.byte	0xe
	.word	0x23a
	.byte	0x45
	.long	0x176a3
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4a
	.quad	.LBB167
	.quad	.LBE167-.LBB167
	.long	0x23725
	.uleb128 0x17
	.ascii "pcs\0"
	.byte	0xe
	.word	0x23e
	.byte	0x18
	.long	0x23bb0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x33
	.secrel32	.LASF211
	.byte	0xe
	.word	0x23f
	.byte	0x12
	.long	0x1c854
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x26
	.quad	.LVL16
	.long	0x1d615
	.byte	0
	.uleb128 0x4a
	.quad	.LBB169
	.quad	.LBE169-.LBB169
	.long	0x23789
	.uleb128 0x33
	.secrel32	.LASF211
	.byte	0xe
	.word	0x247
	.byte	0xc
	.long	0x1c854
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x4a
	.quad	.LBB170
	.quad	.LBE170-.LBB170
	.long	0x2376e
	.uleb128 0x17
	.ascii "i\0"
	.byte	0xe
	.word	0x24f
	.byte	0x11
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x26
	.quad	.LVL17
	.long	0x1d6ef
	.uleb128 0x26
	.quad	.LVL18
	.long	0x1d615
	.byte	0
	.uleb128 0x91
	.secrel32	.LLRL9
	.long	0x23948
	.uleb128 0x17
	.ascii "hr\0"
	.byte	0xe
	.word	0x260
	.byte	0xd
	.long	0x672
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x17
	.ascii "dpiX\0"
	.byte	0xe
	.word	0x268
	.byte	0xb
	.long	0x4ef
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x17
	.ascii "dpiY\0"
	.byte	0xe
	.word	0x269
	.byte	0xb
	.long	0x4ef
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x17
	.ascii "rc\0"
	.byte	0xe
	.word	0x26c
	.byte	0xa
	.long	0x1785d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -528
	.uleb128 0x17
	.ascii "size\0"
	.byte	0xe
	.word	0x26f
	.byte	0x11
	.long	0x1a5a6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -536
	.uleb128 0x17
	.ascii "props\0"
	.byte	0xe
	.word	0x271
	.byte	0x23
	.long	0x1afec
	.uleb128 0x3
	.byte	0x91
	.sleb128 -576
	.uleb128 0x17
	.ascii "hwndProps\0"
	.byte	0xe
	.word	0x277
	.byte	0x28
	.long	0x1af95
	.uleb128 0x3
	.byte	0x91
	.sleb128 -608
	.uleb128 0x4a
	.quad	.LBB175
	.quad	.LBE175-.LBB175
	.long	0x23846
	.uleb128 0x33
	.secrel32	.LASF219
	.byte	0xe
	.word	0x263
	.byte	0xe
	.long	0x22040
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1664
	.uleb128 0x26
	.quad	.LVL22
	.long	0x1d672
	.byte	0
	.uleb128 0x92
	.long	0x24861
	.quad	.LBB176
	.quad	.LBE176-.LBB176
	.word	0x26f
	.byte	0x23
	.long	0x238ab
	.uleb128 0x8
	.long	0x24876
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x8
	.long	0x2486a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x81
	.long	0x223dd
	.quad	.LBB178
	.quad	.LBE178-.LBB178
	.byte	0x10
	.byte	0x36
	.byte	0x18
	.uleb128 0x8
	.long	0x223f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x8
	.long	0x223ed
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x42
	.long	0x22405
	.uleb128 0x3
	.byte	0x91
	.sleb128 -624
	.byte	0
	.byte	0
	.uleb128 0x92
	.long	0x247f3
	.quad	.LBB180
	.quad	.LBE180-.LBB180
	.word	0x273
	.byte	0x1a
	.long	0x238e4
	.uleb128 0x8
	.long	0x2480f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x8
	.long	0x247fc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x42
	.long	0x2481b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -616
	.byte	0
	.uleb128 0x92
	.long	0x24793
	.quad	.LBB182
	.quad	.LBE182-.LBB182
	.word	0x271
	.byte	0x47
	.long	0x2393a
	.uleb128 0x8
	.long	0x247dc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x8
	.long	0x247ce
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x8
	.long	0x247c1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x8
	.long	0x247b4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x82
	.long	0x247a8
	.uleb128 0x8
	.long	0x2479c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x66
	.long	0x247e8
	.byte	0
	.uleb128 0x26
	.quad	.LVL23
	.long	0x1d5af
	.byte	0
	.uleb128 0x4a
	.quad	.LBB187
	.quad	.LBE187-.LBB187
	.long	0x239e1
	.uleb128 0x33
	.secrel32	.LASF157
	.byte	0xe
	.word	0x28f
	.byte	0x11
	.long	0x538
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x33
	.secrel32	.LASF158
	.byte	0xe
	.word	0x290
	.byte	0x11
	.long	0x538
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x69
	.long	0x24861
	.quad	.LBB188
	.quad	.LBE188-.LBB188
	.byte	0xe
	.word	0x291
	.byte	0x2c
	.uleb128 0x8
	.long	0x24876
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x8
	.long	0x2486a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x81
	.long	0x223dd
	.quad	.LBB190
	.quad	.LBE190-.LBB190
	.byte	0x10
	.byte	0x36
	.byte	0x18
	.uleb128 0x8
	.long	0x223f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x8
	.long	0x223ed
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x42
	.long	0x22405
	.uleb128 0x3
	.byte	0x91
	.sleb128 -632
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x91
	.secrel32	.LLRL10
	.long	0x23a6e
	.uleb128 0x33
	.secrel32	.LASF211
	.byte	0xe
	.word	0x29a
	.byte	0xd
	.long	0x1c854
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x17
	.ascii "x\0"
	.byte	0xe
	.word	0x29d
	.byte	0xe
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x17
	.ascii "y\0"
	.byte	0xe
	.word	0x29e
	.byte	0xe
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x17
	.ascii "xCell\0"
	.byte	0xe
	.word	0x2a0
	.byte	0xe
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x17
	.ascii "yCell\0"
	.byte	0xe
	.word	0x2a1
	.byte	0xe
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x17
	.ascii "readcell\0"
	.byte	0xe
	.word	0x2a3
	.byte	0x12
	.long	0x1c0de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1664
	.uleb128 0x26
	.quad	.LVL24
	.long	0x1d6ef
	.uleb128 0x26
	.quad	.LVL25
	.long	0x1d57e
	.byte	0
	.uleb128 0x4a
	.quad	.LBB195
	.quad	.LBE195-.LBB195
	.long	0x23abc
	.uleb128 0x33
	.secrel32	.LASF211
	.byte	0xe
	.word	0x2b4
	.byte	0xd
	.long	0x1c854
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x26
	.quad	.LVL26
	.long	0x1d6ef
	.uleb128 0x26
	.quad	.LVL27
	.long	0x1d57e
	.uleb128 0x26
	.quad	.LVL28
	.long	0x1d552
	.byte	0
	.uleb128 0x91
	.secrel32	.LLRL11
	.long	0x23b95
	.uleb128 0x33
	.secrel32	.LASF211
	.byte	0xe
	.word	0x2bf
	.byte	0xd
	.long	0x1c854
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x17
	.ascii "cam\0"
	.byte	0xe
	.word	0x2c4
	.byte	0xc
	.long	0x1c863
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1664
	.uleb128 0x92
	.long	0x24826
	.quad	.LBB197
	.quad	.LBE197-.LBB197
	.word	0x2c9
	.byte	0x32
	.long	0x23b6d
	.uleb128 0x8
	.long	0x24854
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x8
	.long	0x24848
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x8
	.long	0x2483c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x8
	.long	0x2482f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x81
	.long	0x22391
	.quad	.LBB199
	.quad	.LBE199-.LBB199
	.byte	0x10
	.byte	0x3f
	.byte	0x17
	.uleb128 0x8
	.long	0x223c6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x8
	.long	0x223ba
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x8
	.long	0x223ae
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0x8
	.long	0x223a1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x66
	.long	0x223d2
	.byte	0
	.byte	0
	.uleb128 0x26
	.quad	.LVL29
	.long	0x1d6ef
	.uleb128 0x26
	.quad	.LVL30
	.long	0x1d57e
	.uleb128 0x26
	.quad	.LVL31
	.long	0x1d52d
	.byte	0
	.uleb128 0x26
	.quad	.LVL34
	.long	0x1d50e
	.uleb128 0x26
	.quad	.LVL35
	.long	0x1d57e
	.byte	0
	.uleb128 0x6
	.long	0x17bb7
	.uleb128 0x14
	.long	0x1c0eb
	.long	0x23bc3
	.byte	0x2
	.long	0x23bcd
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c73c
	.byte	0
	.uleb128 0x20
	.long	0x23bb5
	.ascii "_ZN6MATRIX4cellC1Ev\0"
	.long	0x23c00
	.quad	.LFB10951
	.quad	.LFE10951-.LFB10951
	.uleb128 0x1
	.byte	0x9c
	.long	0x23c09
	.uleb128 0x8
	.long	0x23bc3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x50
	.long	0x1c70e
	.byte	0xe
	.byte	0x4a
	.byte	0x8
	.long	0x23c19
	.long	0x23c2c
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c859
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x20
	.long	0x23c09
	.ascii "_ZN6MATRIXD1Ev\0"
	.long	0x23c5a
	.quad	.LFB10948
	.quad	.LFE10948-.LFB10948
	.uleb128 0x1
	.byte	0x9c
	.long	0x23c63
	.uleb128 0x8
	.long	0x23c19
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x2337f
	.quad	.LFB10944
	.quad	.LFE10944-.LFB10944
	.uleb128 0x1
	.byte	0x9c
	.long	0x23e50
	.uleb128 0x1e
	.secrel32	.LASF146
	.byte	0xe
	.word	0x21f
	.byte	0x18
	.long	0x17746
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "zLevel\0"
	.byte	0xe
	.word	0x21f
	.byte	0x27
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "cellWidth\0"
	.byte	0xe
	.word	0x21f
	.byte	0x37
	.long	0x182d6
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "cellHeight\0"
	.byte	0xe
	.word	0x21f
	.byte	0x4a
	.long	0x182d6
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x33
	.secrel32	.LASF211
	.byte	0xe
	.word	0x221
	.byte	0xb
	.long	0x1c854
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x17
	.ascii "hr\0"
	.byte	0xe
	.word	0x236
	.byte	0xb
	.long	0x672
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x4a
	.quad	.LBB156
	.quad	.LBE156-.LBB156
	.long	0x23dd7
	.uleb128 0x17
	.ascii "j\0"
	.byte	0xe
	.word	0x22c
	.byte	0xc
	.long	0x188
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x3f
	.quad	.LBB158
	.quad	.LBE158-.LBB158
	.uleb128 0x17
	.ascii "i\0"
	.byte	0xe
	.word	0x22e
	.byte	0x10
	.long	0x188
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x3f
	.quad	.LBB159
	.quad	.LBE159-.LBB159
	.uleb128 0x17
	.ascii "rect\0"
	.byte	0xe
	.word	0x230
	.byte	0x11
	.long	0x1b066
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x69
	.long	0x24826
	.quad	.LBB160
	.quad	.LBE160-.LBB160
	.byte	0xe
	.word	0x230
	.byte	0x23
	.uleb128 0x8
	.long	0x24854
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x8
	.long	0x24848
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x8
	.long	0x2483c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x8
	.long	0x2482f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x81
	.long	0x22391
	.quad	.LBB162
	.quad	.LBE162-.LBB162
	.byte	0x10
	.byte	0x3f
	.byte	0x17
	.uleb128 0x8
	.long	0x223c6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x8
	.long	0x223ba
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x8
	.long	0x223ae
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x8
	.long	0x223a1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x66
	.long	0x223d2
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x92
	.long	0x24717
	.quad	.LBB151
	.quad	.LBE151-.LBB151
	.word	0x22a
	.byte	0x19
	.long	0x23e42
	.uleb128 0x8
	.long	0x24742
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x8
	.long	0x2472e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x82
	.long	0x24725
	.uleb128 0x69
	.long	0x246e6
	.quad	.LBB154
	.quad	.LBE154-.LBB154
	.byte	0x10
	.word	0x15d
	.byte	0xd
	.uleb128 0x8
	.long	0x2470a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x8
	.long	0x246fd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x8
	.long	0x246f4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.uleb128 0x26
	.quad	.LVL10
	.long	0x1d6ef
	.byte	0
	.uleb128 0x15
	.long	0x233e1
	.quad	.LFB10943
	.quad	.LFE10943-.LFB10943
	.uleb128 0x1
	.byte	0x9c
	.long	0x23f49
	.uleb128 0x1e
	.secrel32	.LASF146
	.byte	0xe
	.word	0x208
	.byte	0x22
	.long	0x17746
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x33
	.secrel32	.LASF211
	.byte	0xe
	.word	0x20b
	.byte	0xb
	.long	0x1c854
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x17
	.ascii "N\0"
	.byte	0xe
	.word	0x20d
	.byte	0xc
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x4a
	.quad	.LBB146
	.quad	.LBE146-.LBB146
	.long	0x23ebd
	.uleb128 0x17
	.ascii "i\0"
	.byte	0xe
	.word	0x212
	.byte	0x10
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x4a
	.quad	.LBB147
	.quad	.LBE147-.LBB147
	.long	0x23f3b
	.uleb128 0x17
	.ascii "i\0"
	.byte	0xe
	.word	0x217
	.byte	0x10
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x3f
	.quad	.LBB148
	.quad	.LBE148-.LBB148
	.uleb128 0x17
	.ascii "Color\0"
	.byte	0xe
	.word	0x219
	.byte	0xd
	.long	0x17805
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x17
	.ascii "d2dcolor\0"
	.byte	0xe
	.word	0x21a
	.byte	0x11
	.long	0x1b080
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x3f
	.quad	.LBB150
	.quad	.LBE150-.LBB150
	.uleb128 0x17
	.ascii "hr\0"
	.byte	0xe
	.word	0x21b
	.byte	0x1b
	.long	0x672
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x26
	.quad	.LVL9
	.long	0x1d6ef
	.byte	0
	.uleb128 0x2a
	.long	0x23434
	.quad	.LFB10942
	.quad	.LFE10942-.LFB10942
	.uleb128 0x1
	.byte	0x9c
	.long	0x23f73
	.uleb128 0x11
	.ascii "e\0"
	.byte	0xe
	.word	0x1fb
	.byte	0x2c
	.long	0x1bfb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x23497
	.quad	.LFB10941
	.quad	.LFE10941-.LFB10941
	.uleb128 0x1
	.byte	0x9c
	.long	0x23fce
	.uleb128 0x11
	.ascii "hr\0"
	.byte	0xe
	.word	0x1f2
	.byte	0x22
	.long	0x672
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3f
	.quad	.LBB145
	.quad	.LBE145-.LBB145
	.uleb128 0x33
	.secrel32	.LASF219
	.byte	0xe
	.word	0x1f6
	.byte	0xc
	.long	0x22040
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1040
	.uleb128 0x26
	.quad	.LVL8
	.long	0x1d672
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x1c874
	.long	0x23fdc
	.byte	0x2
	.long	0x23fe6
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1cab7
	.byte	0
	.uleb128 0x20
	.long	0x23fce
	.ascii "_ZN6CameraC1Ev\0"
	.long	0x24014
	.quad	.LFB10935
	.quad	.LFE10935-.LFB10935
	.uleb128 0x1
	.byte	0x9c
	.long	0x2401d
	.uleb128 0x8
	.long	0x23fdc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x1c5ae
	.long	0x2403c
	.quad	.LFB10931
	.quad	.LFE10931-.LFB10931
	.uleb128 0x1
	.byte	0x9c
	.long	0x24058
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c859
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "c\0"
	.byte	0xe
	.word	0x161
	.byte	0x2d
	.long	0x1c0de
	.uleb128 0x3
	.byte	0x91
	.sleb128 16
	.byte	0x6
	.byte	0
	.uleb128 0x51
	.long	0x1c486
	.long	0x24077
	.quad	.LFB10930
	.quad	.LFE10930-.LFB10930
	.uleb128 0x1
	.byte	0x9c
	.long	0x240ae
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c859
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "x\0"
	.byte	0xe
	.word	0x148
	.byte	0x23
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "y\0"
	.byte	0xe
	.word	0x148
	.byte	0x2f
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "z\0"
	.byte	0xe
	.word	0x148
	.byte	0x3b
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x16
	.long	0x1c3cc
	.long	0x240cd
	.quad	.LFB10927
	.quad	.LFE10927-.LFB10927
	.uleb128 0x1
	.byte	0x9c
	.long	0x241b3
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c859
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF209
	.byte	0xe
	.word	0x102
	.byte	0x2d
	.long	0x195db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "x1\0"
	.byte	0xe
	.word	0x102
	.byte	0x3f
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "x2\0"
	.byte	0xe
	.word	0x102
	.byte	0x4c
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x11
	.ascii "y1\0"
	.byte	0xe
	.word	0x102
	.byte	0x59
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x11
	.ascii "y2\0"
	.byte	0xe
	.word	0x102
	.byte	0x66
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x11
	.ascii "z1\0"
	.byte	0xe
	.word	0x102
	.byte	0x73
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 48
	.uleb128 0x11
	.ascii "z2\0"
	.byte	0xe
	.word	0x102
	.byte	0x80
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 56
	.uleb128 0x65
	.secrel32	.LLRL5
	.uleb128 0x17
	.ascii "z\0"
	.byte	0xe
	.word	0x104
	.byte	0x10
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x65
	.secrel32	.LLRL6
	.uleb128 0x17
	.ascii "y\0"
	.byte	0xe
	.word	0x108
	.byte	0x11
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x65
	.secrel32	.LLRL7
	.uleb128 0x17
	.ascii "x\0"
	.byte	0xe
	.word	0x10a
	.byte	0x12
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x65
	.secrel32	.LLRL8
	.uleb128 0x17
	.ascii "genericCellRead\0"
	.byte	0xe
	.word	0x10c
	.byte	0xb
	.long	0x1c0de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x17
	.ascii "MA\0"
	.byte	0xe
	.word	0x10d
	.byte	0x19
	.long	0x1c002
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	0x1c36e
	.long	0x241d2
	.quad	.LFB10925
	.quad	.LFE10925-.LFB10925
	.uleb128 0x1
	.byte	0x9c
	.long	0x2421d
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c859
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF146
	.byte	0xe
	.byte	0xef
	.byte	0x23
	.long	0x17746
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3d
	.secrel32	.LASF209
	.byte	0xe
	.byte	0xef
	.byte	0x3c
	.long	0x195db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x65
	.secrel32	.LLRL4
	.uleb128 0x24
	.ascii "i\0"
	.byte	0xe
	.byte	0xf3
	.byte	0x11
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x26
	.quad	.LVL7
	.long	0x1d552
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	0x1c311
	.long	0x2423c
	.quad	.LFB10924
	.quad	.LFE10924-.LFB10924
	.uleb128 0x1
	.byte	0x9c
	.long	0x24281
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c859
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "x\0"
	.byte	0xe
	.byte	0xe8
	.byte	0x1c
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x18
	.ascii "y\0"
	.byte	0xe
	.byte	0xe8
	.byte	0x28
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x18
	.ascii "z\0"
	.byte	0xe
	.byte	0xe8
	.byte	0x34
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x18
	.ascii "_data\0"
	.byte	0xe
	.byte	0xe8
	.byte	0x43
	.long	0x1c85e
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.byte	0
	.uleb128 0x16
	.long	0x1c2c2
	.long	0x242a0
	.quad	.LFB10923
	.quad	.LFE10923-.LFB10923
	.uleb128 0x1
	.byte	0x9c
	.long	0x242d4
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c859
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "x\0"
	.byte	0xe
	.byte	0xe2
	.byte	0x1d
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x18
	.ascii "y\0"
	.byte	0xe
	.byte	0xe2
	.byte	0x29
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x18
	.ascii "z\0"
	.byte	0xe
	.byte	0xe2
	.byte	0x35
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.byte	0
	.uleb128 0x16
	.long	0x1c277
	.long	0x242f3
	.quad	.LFB10917
	.quad	.LFE10917-.LFB10917
	.uleb128 0x1
	.byte	0x9c
	.long	0x2442c
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c859
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF157
	.byte	0xe
	.byte	0x73
	.byte	0x1f
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3d
	.secrel32	.LASF158
	.byte	0xe
	.byte	0x73
	.byte	0x2f
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x18
	.ascii "depth\0"
	.byte	0xe
	.byte	0x73
	.byte	0x40
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x24
	.ascii "i1\0"
	.byte	0xe
	.byte	0x93
	.byte	0xc
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x4a
	.quad	.LBB113
	.quad	.LBE113-.LBB113
	.long	0x2435f
	.uleb128 0x24
	.ascii "i\0"
	.byte	0xe
	.byte	0x7b
	.byte	0x10
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x4a
	.quad	.LBB114
	.quad	.LBE114-.LBB114
	.long	0x24382
	.uleb128 0x24
	.ascii "i\0"
	.byte	0xe
	.byte	0x84
	.byte	0x10
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x91
	.secrel32	.LLRL0
	.long	0x243e7
	.uleb128 0x24
	.ascii "i\0"
	.byte	0xe
	.byte	0x8c
	.byte	0x10
	.long	0x182e6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x65
	.secrel32	.LLRL1
	.uleb128 0x24
	.ascii "x\0"
	.byte	0xe
	.byte	0x8f
	.byte	0xd
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x24
	.ascii "y\0"
	.byte	0xe
	.byte	0x8f
	.byte	0x21
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.ascii "z\0"
	.byte	0xe
	.byte	0x8f
	.byte	0x3b
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x24
	.ascii "back_buffer_cell\0"
	.byte	0xe
	.byte	0x90
	.byte	0x9
	.long	0x1c0de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.byte	0
	.byte	0
	.uleb128 0x65
	.secrel32	.LLRL2
	.uleb128 0x24
	.ascii "i\0"
	.byte	0xe
	.byte	0x94
	.byte	0x10
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x65
	.secrel32	.LLRL3
	.uleb128 0x24
	.ascii "x\0"
	.byte	0xe
	.byte	0x97
	.byte	0xd
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x24
	.ascii "y\0"
	.byte	0xe
	.byte	0x97
	.byte	0x21
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x24
	.ascii "z\0"
	.byte	0xe
	.byte	0x97
	.byte	0x3b
	.long	0x182e6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	0xe381
	.long	0x2444b
	.quad	.LFB10921
	.quad	.LFE10921-.LFB10921
	.uleb128 0x1
	.byte	0x9c
	.long	0x24460
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c82c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x53
	.long	0x1c831
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0xe027
	.long	0x2447f
	.quad	.LFB10922
	.quad	.LFE10922-.LFB10922
	.uleb128 0x1
	.byte	0x9c
	.long	0x24494
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1c813
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x53
	.long	0x1c818
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x50
	.long	0x1c0aa
	.byte	0xe
	.byte	0x4f
	.byte	0x9
	.long	0x244a4
	.long	0x244ae
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c74b
	.byte	0
	.uleb128 0x40
	.long	0x24494
	.ascii "_ZN6MATRIX18MaterialAttributesC1Ev\0"
	.long	0x244f0
	.quad	.LFB10920
	.quad	.LFE10920-.LFB10920
	.uleb128 0x1
	.byte	0x9c
	.long	0x244f9
	.uleb128 0x8
	.long	0x244a4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x1c1e1
	.long	0x24507
	.byte	0x2
	.long	0x2451a
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c73c
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x20
	.long	0x244f9
	.ascii "_ZN6MATRIX4cellD1Ev\0"
	.long	0x2454d
	.quad	.LFB10916
	.quad	.LFE10916-.LFB10916
	.uleb128 0x1
	.byte	0x9c
	.long	0x24556
	.uleb128 0x8
	.long	0x24507
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x1c115
	.long	0x24564
	.byte	0x2
	.long	0x24584
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1c73c
	.uleb128 0x39
	.ascii "_MaterialType\0"
	.byte	0xe
	.byte	0x5e
	.byte	0x10
	.long	0x1bfb8
	.byte	0
	.uleb128 0x20
	.long	0x24556
	.ascii "_ZN6MATRIX4cellC1ENS_7elementE\0"
	.long	0x245c2
	.quad	.LFB10904
	.quad	.LFE10904-.LFB10904
	.uleb128 0x1
	.byte	0x9c
	.long	0x245d3
	.uleb128 0x8
	.long	0x24564
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x2456d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x1be93
	.long	0x245e1
	.byte	0x2
	.long	0x2460c
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1bf99
	.uleb128 0x39
	.ascii "_x\0"
	.byte	0xe
	.byte	0x39
	.byte	0x29
	.long	0x4fd
	.uleb128 0x39
	.ascii "_y\0"
	.byte	0xe
	.byte	0x39
	.byte	0x33
	.long	0x4fd
	.uleb128 0x39
	.ascii "_z\0"
	.byte	0xe
	.byte	0x39
	.byte	0x3d
	.long	0x4fd
	.byte	0
	.uleb128 0x40
	.long	0x245d3
	.ascii "_ZN5Vec3DC1Efff\0"
	.long	0x2463b
	.quad	.LFB10889
	.quad	.LFE10889-.LFB10889
	.uleb128 0x1
	.byte	0x9c
	.long	0x2465c
	.uleb128 0x8
	.long	0x245e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x245ea
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x8
	.long	0x245f5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x8
	.long	0x24600
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x149
	.secrel32	.LASF184
	.byte	0xd
	.word	0x9d3
	.byte	0x10
	.ascii "_Z17D2D1CreateFactory17D2D1_FACTORY_TYPERK5_GUIDPPv\0"
	.long	0x672
	.quad	.LFB10823
	.quad	.LFE10823-.LFB10823
	.uleb128 0x1
	.byte	0x9c
	.long	0x246e6
	.uleb128 0x1e
	.secrel32	.LASF210
	.byte	0xd
	.word	0x9d3
	.byte	0x34
	.long	0x1a915
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "riid\0"
	.byte	0xd
	.word	0x9d3
	.byte	0x48
	.long	0x17bd2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "ppv\0"
	.byte	0xd
	.word	0x9d3
	.byte	0x55
	.long	0x17bcd
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x14
	.long	0x1ba84
	.long	0x246f4
	.byte	0x3
	.long	0x24717
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1bd10
	.uleb128 0x35
	.ascii "rgb\0"
	.byte	0x10
	.word	0x167
	.byte	0x26
	.long	0x566
	.uleb128 0x35
	.ascii "_a\0"
	.byte	0x10
	.word	0x167
	.byte	0x31
	.long	0x4ef
	.byte	0
	.uleb128 0x14
	.long	0x1ba01
	.long	0x24725
	.byte	0x2
	.long	0x2474f
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1bd10
	.uleb128 0x35
	.ascii "knownColor\0"
	.byte	0x10
	.word	0x15c
	.byte	0x21
	.long	0x1b1ae
	.uleb128 0x35
	.ascii "_a\0"
	.byte	0x10
	.word	0x15c
	.byte	0x33
	.long	0x4ef
	.byte	0
	.uleb128 0xe4
	.long	0x24717
	.ascii "_ZN4D2D16ColorFC1ENS0_4EnumEf\0"
	.long	0x2477b
	.long	0x2478e
	.uleb128 0x82
	.long	0x24725
	.uleb128 0x82
	.long	0x2472e
	.uleb128 0x82
	.long	0x24742
	.byte	0
	.uleb128 0x7
	.long	0x1a572
	.uleb128 0x64
	.long	0x1bb89
	.long	0x247f3
	.uleb128 0x4d
	.secrel32	.LASF2
	.byte	0x10
	.byte	0x9d
	.byte	0x21
	.long	0x1aaf8
	.uleb128 0x4d
	.secrel32	.LASF176
	.byte	0x10
	.byte	0x9e
	.byte	0x22
	.long	0x2478e
	.uleb128 0x39
	.ascii "dpiX\0"
	.byte	0x10
	.byte	0x9f
	.byte	0xf
	.long	0x4ef
	.uleb128 0x39
	.ascii "dpiY\0"
	.byte	0x10
	.byte	0xa0
	.byte	0xf
	.long	0x4ef
	.uleb128 0x39
	.ascii "usage\0"
	.byte	0x10
	.byte	0xa1
	.byte	0x22
	.long	0x1abbe
	.uleb128 0x4d
	.secrel32	.LASF177
	.byte	0x10
	.byte	0xa2
	.byte	0x1d
	.long	0x1a9a3
	.uleb128 0x79
	.ascii "r\0"
	.byte	0x10
	.byte	0xa4
	.byte	0x23
	.long	0x1afec
	.byte	0
	.uleb128 0x64
	.long	0x1bc4b
	.long	0x24826
	.uleb128 0x39
	.ascii "dxgiFormat\0"
	.byte	0x10
	.byte	0x8f
	.byte	0x15
	.long	0x1a484
	.uleb128 0x4d
	.secrel32	.LASF156
	.byte	0x10
	.byte	0x90
	.byte	0x19
	.long	0x1a52f
	.uleb128 0x79
	.ascii "r\0"
	.byte	0x10
	.byte	0x92
	.byte	0x17
	.long	0x1a566
	.byte	0
	.uleb128 0x64
	.long	0x1bca3
	.long	0x24861
	.uleb128 0x39
	.ascii "left\0"
	.byte	0x10
	.byte	0x3e
	.byte	0x29
	.long	0x4ef
	.uleb128 0x39
	.ascii "top\0"
	.byte	0x10
	.byte	0x3e
	.byte	0x3c
	.long	0x4ef
	.uleb128 0x4d
	.secrel32	.LASF143
	.byte	0x10
	.byte	0x3e
	.byte	0x4e
	.long	0x4ef
	.uleb128 0x4d
	.secrel32	.LASF144
	.byte	0x10
	.byte	0x3e
	.byte	0x62
	.long	0x4ef
	.byte	0
	.uleb128 0x64
	.long	0x1bcde
	.long	0x24883
	.uleb128 0x4d
	.secrel32	.LASF157
	.byte	0x10
	.byte	0x35
	.byte	0x2a
	.long	0x566
	.uleb128 0x4d
	.secrel32	.LASF158
	.byte	0x10
	.byte	0x35
	.byte	0x3c
	.long	0x566
	.byte	0
	.uleb128 0x14a
	.ascii "__mingw_uuidof<ID2D1Factory>\0"
	.byte	0xd
	.word	0x994
	.byte	0x1
	.ascii "_Z14__mingw_uuidofI12ID2D1FactoryERK5_GUIDv\0"
	.long	0x248f4
	.quad	.LFB10722
	.quad	.LFE10722-.LFB10722
	.uleb128 0x1
	.byte	0x9c
	.long	0x248f4
	.uleb128 0x9
	.ascii "T\0"
	.long	0x1abfe
	.byte	0
	.uleb128 0x7
	.long	0x6ed
	.uleb128 0x6
	.long	0x1acd9
	.uleb128 0x4
	.long	0x248f9
	.uleb128 0x7
	.long	0x1a5ba
	.uleb128 0x16
	.long	0x1ace3
	.long	0x24927
	.quad	.LFB10696
	.quad	.LFE10696-.LFB10696
	.uleb128 0x1
	.byte	0x9c
	.long	0x24944
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x248fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF174
	.byte	0xd
	.word	0x733
	.byte	0x27
	.long	0x24903
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7
	.long	0x1aff9
	.uleb128 0x7
	.long	0x1afa2
	.uleb128 0x6
	.long	0x1bde1
	.uleb128 0x16
	.long	0x1ac08
	.long	0x24972
	.quad	.LFB10691
	.quad	.LFE10691-.LFB10691
	.uleb128 0x1
	.byte	0x9c
	.long	0x249e6
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x21f8e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "renderTargetProperties\0"
	.byte	0xd
	.word	0x64a
	.byte	0x49
	.long	0x24944
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "hwndRenderTargetProperties\0"
	.byte	0xd
	.word	0x64a
	.byte	0x8b
	.long	0x24949
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "hwndRenderTarget\0"
	.byte	0xd
	.word	0x64a
	.byte	0xbf
	.long	0x2494e
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x6
	.long	0x1ad33
	.uleb128 0x4
	.long	0x249e6
	.uleb128 0x7
	.long	0x1b096
	.uleb128 0x16
	.long	0x1ad4b
	.long	0x24a14
	.quad	.LFB10642
	.quad	.LFE10642-.LFB10642
	.uleb128 0x1
	.byte	0x9c
	.long	0x24a38
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x249eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "clearColor\0"
	.byte	0xd
	.word	0x397
	.byte	0x24
	.long	0x249f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7
	.long	0x1b07b
	.uleb128 0x6
	.long	0x1b07b
	.uleb128 0x16
	.long	0x1ad99
	.long	0x24a61
	.quad	.LFB10637
	.quad	.LFE10637-.LFB10637
	.uleb128 0x1
	.byte	0x9c
	.long	0x24af0
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x249eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "bitmap\0"
	.byte	0xd
	.word	0x383
	.byte	0x22
	.long	0x1be1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "destinationRectangle\0"
	.byte	0xd
	.word	0x383
	.byte	0x3d
	.long	0x24a38
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.ascii "opacity\0"
	.byte	0xd
	.word	0x383
	.byte	0x59
	.long	0x4ef
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x11
	.ascii "interpolationMode\0"
	.byte	0xd
	.word	0x383
	.byte	0x88
	.long	0x1a717
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x11
	.ascii "sourceRectangle\0"
	.byte	0xd
	.word	0x383
	.byte	0xd6
	.long	0x24a3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.byte	0
	.uleb128 0x6
	.long	0x1be01
	.uleb128 0x16
	.long	0x1ae35
	.long	0x24b14
	.quad	.LFB10623
	.quad	.LFE10623-.LFB10623
	.uleb128 0x1
	.byte	0x9c
	.long	0x24b40
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x249eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "bitmapRenderTarget\0"
	.byte	0xd
	.word	0x34b
	.byte	0x44
	.long	0x24af0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x1aebf
	.long	0x24b5f
	.quad	.LFB10616
	.quad	.LFE10616-.LFB10616
	.uleb128 0x1
	.byte	0x9c
	.long	0x24b9a
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x249eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "color\0"
	.byte	0xd
	.word	0x32f
	.byte	0x37
	.long	0x249f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x11
	.ascii "solidColorBrush\0"
	.byte	0xd
	.word	0x32f
	.byte	0x55
	.long	0x1be40
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x14
	.long	0x5e8e
	.long	0x24ba8
	.byte	0x2
	.long	0x24bb2
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19635
	.byte	0
	.uleb128 0x20
	.long	0x24b9a
	.ascii "_ZNSt6threadC1Ev\0"
	.long	0x24be2
	.quad	.LFB9886
	.quad	.LFE9886-.LFB9886
	.uleb128 0x1
	.byte	0x9c
	.long	0x24beb
	.uleb128 0x8
	.long	0x24ba8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0xa297
	.quad	.LFB9743
	.quad	.LFE9743-.LFB9743
	.uleb128 0x1
	.byte	0x9c
	.long	0x24c59
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x6cca
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa6a3
	.uleb128 0x1e
	.secrel32	.LASF205
	.byte	0xc
	.word	0x302
	.byte	0x34
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF206
	.byte	0xc
	.word	0x303
	.byte	0x26
	.long	0x197b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "__ct\0"
	.byte	0xc
	.word	0x305
	.byte	0x8
	.long	0x16e05
	.byte	0
	.uleb128 0x14
	.long	0x74a0
	.long	0x24c79
	.byte	0x2
	.long	0x24c90
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa6a3
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19742
	.uleb128 0x35
	.ascii "__d\0"
	.byte	0xc
	.word	0x201
	.byte	0x38
	.long	0x197b0
	.byte	0
	.uleb128 0x20
	.long	0x24c59
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxS1_ILx1ELx1000EEvEERKNS0_IT_T0_EE\0"
	.long	0x24d1a
	.quad	.LFB9747
	.quad	.LFE9747-.LFB9747
	.uleb128 0x1
	.byte	0x9c
	.long	0x24d2b
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0xa6a3
	.uleb128 0x8
	.long	0x24c79
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x24c82
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x83fb
	.long	0x24d42
	.byte	0x2
	.long	0x24d59
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19788
	.uleb128 0x4c
	.secrel32	.LASF204
	.byte	0xc
	.word	0x1f9
	.byte	0x2d
	.long	0x19760
	.byte	0
	.uleb128 0x40
	.long	0x24d2b
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1EEEC1IxvEERKT_\0"
	.long	0x24db7
	.quad	.LFB9727
	.quad	.LFE9727-.LFB9727
	.uleb128 0x1
	.byte	0x9c
	.long	0x24dc8
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x8
	.long	0x24d42
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x24d4b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc0
	.long	0x75cc
	.quad	.LFB9708
	.quad	.LFE9708-.LFB9708
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x14
	.long	0x7527
	.long	0x24df7
	.byte	0x2
	.long	0x24e0e
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19742
	.uleb128 0x4c
	.secrel32	.LASF204
	.byte	0xc
	.word	0x1f9
	.byte	0x2d
	.long	0x19760
	.byte	0
	.uleb128 0x40
	.long	0x24de0
	.ascii "_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_\0"
	.long	0x24e75
	.quad	.LFB9707
	.quad	.LFE9707-.LFB9707
	.uleb128 0x1
	.byte	0x9c
	.long	0x24e86
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x8
	.long	0x24df7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x24e00
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x9e
	.long	0x7336
	.quad	.LFB9703
	.quad	.LFE9703-.LFB9703
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x15
	.long	0xa394
	.quad	.LFB9700
	.quad	.LFE9700-.LFB9700
	.uleb128 0x1
	.byte	0x9c
	.long	0x24f0c
	.uleb128 0x3
	.secrel32	.LASF99
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF100
	.long	0x6cca
	.uleb128 0x3
	.secrel32	.LASF84
	.long	0x114
	.uleb128 0x3
	.secrel32	.LASF85
	.long	0x6cca
	.uleb128 0x1e
	.secrel32	.LASF205
	.byte	0xc
	.word	0x302
	.byte	0x34
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF206
	.byte	0xc
	.word	0x303
	.byte	0x26
	.long	0x19747
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "__ct\0"
	.byte	0xc
	.word	0x305
	.byte	0x8
	.long	0x16e12
	.byte	0
	.uleb128 0x51
	.long	0x6f72
	.long	0x24f2b
	.quad	.LFB9701
	.quad	.LFE9701-.LFB9701
	.uleb128 0x1
	.byte	0x9c
	.long	0x24f38
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x19756
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x9e
	.long	0x16cef
	.quad	.LFB9627
	.quad	.LFE9627-.LFB9627
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x16
	.long	0x6c1f
	.long	0x24f6f
	.quad	.LFB9626
	.quad	.LFE9626-.LFB9626
	.uleb128 0x1
	.byte	0x9c
	.long	0x24f8d
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x19658
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__id\0"
	.byte	0xb
	.word	0x12a
	.byte	0x24
	.long	0x1965d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x2a
	.long	0x16e1f
	.quad	.LFB9625
	.quad	.LFE9625-.LFB9625
	.uleb128 0x1
	.byte	0x9c
	.long	0x24fc9
	.uleb128 0x11
	.ascii "__x\0"
	.byte	0xb
	.word	0x118
	.byte	0x19
	.long	0x5df6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x11
	.ascii "__y\0"
	.byte	0xb
	.word	0x118
	.byte	0x29
	.long	0x5df6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x51
	.long	0x6073
	.long	0x24fe8
	.quad	.LFB9618
	.quad	.LFE9618-.LFB9618
	.uleb128 0x1
	.byte	0x9c
	.long	0x24ff5
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1964e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x5fdf
	.long	0x25014
	.quad	.LFB9617
	.quad	.LFE9617-.LFB9617
	.uleb128 0x1
	.byte	0x9c
	.long	0x25021
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1964e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x5fad
	.long	0x25040
	.quad	.LFB9615
	.quad	.LFE9615-.LFB9615
	.uleb128 0x1
	.byte	0x9c
	.long	0x2505c
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x19635
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0xb
	.byte	0xaa
	.byte	0x12
	.long	0x19644
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x5f7b
	.long	0x2507b
	.quad	.LFB9614
	.quad	.LFE9614-.LFB9614
	.uleb128 0x1
	.byte	0x9c
	.long	0x250ae
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x19635
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0xb
	.byte	0xa1
	.byte	0x20
	.long	0x1963f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0xea
	.long	0x25ebc
	.quad	.LBB103
	.quad	.LBE103-.LBB103
	.byte	0xa4
	.byte	0
	.uleb128 0x14
	.long	0x5eb6
	.long	0x250bc
	.byte	0x2
	.long	0x250cf
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19635
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x20
	.long	0x250ae
	.ascii "_ZNSt6threadD1Ev\0"
	.long	0x250ff
	.quad	.LFB9610
	.quad	.LFE9610-.LFB9610
	.uleb128 0x1
	.byte	0x9c
	.long	0x2511f
	.uleb128 0x8
	.long	0x250bc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xea
	.long	0x25ebc
	.quad	.LBB101
	.quad	.LBE101-.LBB101
	.byte	0x97
	.byte	0
	.uleb128 0x14
	.long	0x5e41
	.long	0x2512d
	.byte	0x2
	.long	0x25144
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1962b
	.uleb128 0x39
	.ascii "__id\0"
	.byte	0xb
	.byte	0x58
	.byte	0x1d
	.long	0x5e73
	.byte	0
	.uleb128 0x40
	.long	0x2511f
	.ascii "_ZNSt6thread2idC1Ey\0"
	.long	0x25177
	.quad	.LFB9606
	.quad	.LFE9606-.LFB9606
	.uleb128 0x1
	.byte	0x9c
	.long	0x25188
	.uleb128 0x8
	.long	0x2512d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x25136
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x5e17
	.long	0x25196
	.byte	0x2
	.long	0x251a0
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1962b
	.byte	0
	.uleb128 0x40
	.long	0x25188
	.ascii "_ZNSt6thread2idC1Ev\0"
	.long	0x251d3
	.quad	.LFB9603
	.quad	.LFE9603-.LFB9603
	.uleb128 0x1
	.byte	0x9c
	.long	0x251dc
	.uleb128 0x8
	.long	0x25196
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x4599
	.long	0x251fb
	.quad	.LFB9404
	.quad	.LFE9404-.LFB9404
	.uleb128 0x1
	.byte	0x9c
	.long	0x2523a
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x195ea
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x81
	.long	0x2280d
	.quad	.LBB96
	.quad	.LBE96-.LBB96
	.byte	0xa
	.byte	0x57
	.byte	0x1a
	.uleb128 0x8
	.long	0x22824
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x8
	.long	0x2281b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x42
	.long	0x22831
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	0x4532
	.long	0x25259
	.quad	.LFB9402
	.quad	.LFE9402-.LFB9402
	.uleb128 0x1
	.byte	0x9c
	.long	0x25275
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x195d1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__i\0"
	.byte	0xa
	.byte	0x4f
	.byte	0x14
	.long	0x184a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x15
	.long	0x16e5a
	.quad	.LFB8991
	.quad	.LFE8991-.LFB8991
	.uleb128 0x1
	.byte	0x9c
	.long	0x252a0
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0x9
	.byte	0x7d
	.byte	0x31
	.long	0x318c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x15
	.long	0x16ec4
	.quad	.LFB8990
	.quad	.LFE8990-.LFB8990
	.uleb128 0x1
	.byte	0x9c
	.long	0x252cb
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0x9
	.byte	0x76
	.byte	0x28
	.long	0x318c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2a
	.long	0x16f1c
	.quad	.LFB8989
	.quad	.LFE8989-.LFB8989
	.uleb128 0x1
	.byte	0x9c
	.long	0x252f6
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0x9
	.byte	0x6f
	.byte	0x29
	.long	0x318c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2a
	.long	0x16f76
	.quad	.LFB8988
	.quad	.LFE8988-.LFB8988
	.uleb128 0x1
	.byte	0x9c
	.long	0x25332
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0x9
	.byte	0x68
	.byte	0x1a
	.long	0x318c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__mod\0"
	.byte	0x9
	.byte	0x68
	.byte	0x37
	.long	0x31e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x2a
	.long	0x16fc9
	.quad	.LFB8987
	.quad	.LFE8987-.LFB8987
	.uleb128 0x1
	.byte	0x9c
	.long	0x2536e
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0x9
	.byte	0x62
	.byte	0x1a
	.long	0x318c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__mod\0"
	.byte	0x9
	.byte	0x62
	.byte	0x37
	.long	0x31e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x16
	.long	0x16c4
	.long	0x2538d
	.quad	.LFB8967
	.quad	.LFE8967-.LFB8967
	.uleb128 0x1
	.byte	0x9c
	.long	0x253ec
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x190be
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF189
	.byte	0x8
	.byte	0xfc
	.byte	0x2b
	.long	0x190af
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "__old\0"
	.byte	0x8
	.byte	0xfc
	.byte	0x45
	.long	0x1687
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x33
	.secrel32	.LASF195
	.byte	0x8
	.word	0x101
	.byte	0x14
	.long	0x1687
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x3f
	.quad	.LBB95
	.quad	.LBE95-.LBB95
	.uleb128 0x17
	.ascii "__l\0"
	.byte	0x8
	.word	0x105
	.byte	0x18
	.long	0x2fd5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0x15ee
	.quad	.LFB8953
	.quad	.LFE8953-.LFB8953
	.uleb128 0x1
	.byte	0x9c
	.long	0x25484
	.uleb128 0x3d
	.secrel32	.LASF189
	.byte	0x8
	.byte	0xf0
	.byte	0x1a
	.long	0x525
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x14b
	.ascii "__ct\0"
	.byte	0x8
	.byte	0xf2
	.byte	0x16
	.long	0x14d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x14c
	.ascii "__w\0"
	.byte	0x8
	.byte	0xf3
	.byte	0x1c
	.ascii "_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w\0"
	.long	0x25484
	.uleb128 0x9
	.byte	0x3
	.quad	_ZZNSt8__detail18__waiter_pool_base6_S_forEPKvE3__w
	.uleb128 0x24
	.ascii "__key\0"
	.byte	0x8
	.byte	0xf4
	.byte	0x7
	.long	0xf5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0xe3
	.long	0x13cd
	.byte	0x40
	.long	0x25497
	.uleb128 0x84
	.long	0xf5
	.byte	0xf
	.byte	0
	.uleb128 0x14d
	.ascii "__tcf_0\0"
	.quad	.LFB8966
	.quad	.LFE8966-.LFB8966
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x14
	.long	0x145e
	.long	0x254c1
	.byte	0x2
	.long	0x254cb
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x190a0
	.byte	0
	.uleb128 0x20
	.long	0x254b3
	.ascii "_ZNSt8__detail18__waiter_pool_baseC1Ev\0"
	.long	0x25511
	.quad	.LFB8965
	.quad	.LFE8965-.LFB8965
	.uleb128 0x1
	.byte	0x9c
	.long	0x2551a
	.uleb128 0x8
	.long	0x254c1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x2bd9
	.long	0x25528
	.byte	0x2
	.long	0x25532
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1904b
	.byte	0
	.uleb128 0x20
	.long	0x2551a
	.ascii "_ZNSt5mutexC1Ev\0"
	.long	0x25561
	.quad	.LFB8963
	.quad	.LFE8963-.LFB8963
	.uleb128 0x1
	.byte	0x9c
	.long	0x2556a
	.uleb128 0x8
	.long	0x25528
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x50
	.long	0x1635
	.byte	0x8
	.byte	0xbc
	.byte	0xc
	.long	0x2557a
	.long	0x2558d
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x190a0
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x20
	.long	0x2556a
	.ascii "_ZNSt8__detail18__waiter_pool_baseD1Ev\0"
	.long	0x255d3
	.quad	.LFB8959
	.quad	.LFE8959-.LFB8959
	.uleb128 0x1
	.byte	0x9c
	.long	0x255dc
	.uleb128 0x8
	.long	0x2557a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x2c00
	.long	0x255ea
	.byte	0x2
	.long	0x255fd
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1904b
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x20
	.long	0x255dc
	.ascii "_ZNSt5mutexD1Ev\0"
	.long	0x2562c
	.quad	.LFB8957
	.quad	.LFE8957-.LFB8957
	.uleb128 0x1
	.byte	0x9c
	.long	0x25635
	.uleb128 0x8
	.long	0x255ea
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x1596
	.long	0x25654
	.quad	.LFB8952
	.quad	.LFE8952-.LFB8952
	.uleb128 0x1
	.byte	0x9c
	.long	0x25693
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x190a0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3d
	.secrel32	.LASF189
	.byte	0x8
	.byte	0xe0
	.byte	0x2a
	.long	0x190af
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "__all\0"
	.byte	0x8
	.byte	0xe0
	.byte	0x37
	.long	0x184a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x18
	.ascii "__bare\0"
	.byte	0x8
	.byte	0xe0
	.byte	0x43
	.long	0x184a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x51
	.long	0x1543
	.long	0x256b2
	.quad	.LFB8951
	.quad	.LFE8951-.LFB8951
	.uleb128 0x1
	.byte	0x9c
	.long	0x256d0
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x190aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x24
	.ascii "__res\0"
	.byte	0x8
	.byte	0xda
	.byte	0x14
	.long	0x1687
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x51
	.long	0x14ef
	.long	0x256ef
	.quad	.LFB8950
	.quad	.LFE8950-.LFB8950
	.uleb128 0x1
	.byte	0x9c
	.long	0x256fc
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x190a0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x51
	.long	0x149b
	.long	0x2571b
	.quad	.LFB8949
	.quad	.LFE8949-.LFB8949
	.uleb128 0x1
	.byte	0x9c
	.long	0x25728
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x190a0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x51
	.long	0x1385
	.long	0x25747
	.quad	.LFB8946
	.quad	.LFE8946-.LFB8946
	.uleb128 0x1
	.byte	0x9c
	.long	0x25754
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x19096
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc0
	.long	0x200d
	.quad	.LFB8945
	.quad	.LFE8945-.LFB8945
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x9e
	.long	0x2040
	.quad	.LFB8944
	.quad	.LFE8944-.LFB8944
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x16
	.long	0x2f51
	.long	0x257a3
	.quad	.LFB8940
	.quad	.LFE8940-.LFB8940
	.uleb128 0x1
	.byte	0x9c
	.long	0x257bf
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x19064
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x24
	.ascii "__e\0"
	.byte	0x7
	.byte	0xb8
	.byte	0xb
	.long	0x188
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x16
	.long	0x2f1c
	.long	0x257de
	.quad	.LFB8939
	.quad	.LFE8939-.LFB8939
	.uleb128 0x1
	.byte	0x9c
	.long	0x257fa
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x19064
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x24
	.ascii "__e\0"
	.byte	0x7
	.byte	0xb1
	.byte	0xb
	.long	0x188
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x16
	.long	0x2e7d
	.long	0x25819
	.quad	.LFB8937
	.quad	.LFE8937-.LFB8937
	.uleb128 0x1
	.byte	0x9c
	.long	0x25844
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x19064
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__m\0"
	.byte	0x7
	.byte	0x98
	.byte	0x11
	.long	0x19055
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x24
	.ascii "__e\0"
	.byte	0x7
	.byte	0x9a
	.byte	0xb
	.long	0x188
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x14
	.long	0x2da0
	.long	0x25852
	.byte	0x2
	.long	0x25873
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19064
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.uleb128 0x77
	.uleb128 0x79
	.ascii "__e\0"
	.byte	0x7
	.byte	0x8d
	.byte	0xb
	.long	0x188
	.byte	0
	.byte	0
	.uleb128 0x20
	.long	0x25844
	.ascii "_ZNSt9__condvarD1Ev\0"
	.long	0x258a6
	.quad	.LFB8935
	.quad	.LFE8935-.LFB8935
	.uleb128 0x1
	.byte	0x9c
	.long	0x258dd
	.uleb128 0x8
	.long	0x25852
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x78
	.long	0x25864
	.long	0x258bd
	.uleb128 0x66
	.long	0x25865
	.byte	0
	.uleb128 0x83
	.long	0x25864
	.quad	.LBB89
	.quad	.LBE89-.LBB89
	.uleb128 0x42
	.long	0x25865
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0x2d75
	.long	0x258eb
	.byte	0x2
	.long	0x258f5
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19064
	.byte	0
	.uleb128 0x40
	.long	0x258dd
	.ascii "_ZNSt9__condvarC1Ev\0"
	.long	0x25928
	.quad	.LFB8932
	.quad	.LFE8932-.LFB8932
	.uleb128 0x1
	.byte	0x9c
	.long	0x25931
	.uleb128 0x8
	.long	0x258eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x51
	.long	0x2d2e
	.long	0x25950
	.quad	.LFB8929
	.quad	.LFE8929-.LFB8929
	.uleb128 0x1
	.byte	0x9c
	.long	0x2595d
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1904b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x2cf3
	.long	0x2597c
	.quad	.LFB8928
	.quad	.LFE8928-.LFB8928
	.uleb128 0x1
	.byte	0x9c
	.long	0x25989
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1904b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	0x2c92
	.long	0x259a8
	.quad	.LFB8926
	.quad	.LFE8926-.LFB8926
	.uleb128 0x1
	.byte	0x9c
	.long	0x259c4
	.uleb128 0x12
	.secrel32	.LASF185
	.long	0x1904b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x24
	.ascii "__e\0"
	.byte	0x7
	.byte	0x64
	.byte	0xb
	.long	0x188
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x14
	.long	0x2b11
	.long	0x259d2
	.byte	0x2
	.long	0x259e5
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19037
	.uleb128 0xd
	.secrel32	.LASF186
	.long	0x18f
	.byte	0
	.uleb128 0x20
	.long	0x259c4
	.ascii "_ZNSt12__mutex_baseD2Ev\0"
	.long	0x25a1c
	.quad	.LFB8924
	.quad	.LFE8924-.LFB8924
	.uleb128 0x1
	.byte	0x9c
	.long	0x25a25
	.uleb128 0x8
	.long	0x259d2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14
	.long	0x2ae2
	.long	0x25a33
	.byte	0x2
	.long	0x25a3d
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x19037
	.byte	0
	.uleb128 0x20
	.long	0x25a25
	.ascii "_ZNSt12__mutex_baseC2Ev\0"
	.long	0x25a74
	.quad	.LFB8921
	.quad	.LFE8921-.LFB8921
	.uleb128 0x1
	.byte	0x9c
	.long	0x25a7d
	.uleb128 0x8
	.long	0x25a33
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7b
	.ascii "__gthread_cond_destroy\0"
	.word	0x373
	.long	0x188
	.quad	.LFB7465
	.quad	.LFE7465-.LFB7465
	.uleb128 0x1
	.byte	0x9c
	.long	0x25ac2
	.uleb128 0x1e
	.secrel32	.LASF220
	.byte	0x6
	.word	0x373
	.byte	0x2b
	.long	0x19073
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7b
	.ascii "__gthread_cond_wait\0"
	.word	0x35f
	.long	0x188
	.quad	.LFB7462
	.quad	.LFE7462-.LFB7462
	.uleb128 0x1
	.byte	0x9c
	.long	0x25b14
	.uleb128 0x1e
	.secrel32	.LASF220
	.byte	0x6
	.word	0x35f
	.byte	0x28
	.long	0x19073
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1e
	.secrel32	.LASF221
	.byte	0x6
	.word	0x35f
	.byte	0x43
	.long	0x1902d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7b
	.ascii "__gthread_cond_signal\0"
	.word	0x359
	.long	0x188
	.quad	.LFB7461
	.quad	.LFE7461-.LFB7461
	.uleb128 0x1
	.byte	0x9c
	.long	0x25b58
	.uleb128 0x1e
	.secrel32	.LASF220
	.byte	0x6
	.word	0x359
	.byte	0x2a
	.long	0x19073
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7b
	.ascii "__gthread_cond_broadcast\0"
	.word	0x353
	.long	0x188
	.quad	.LFB7460
	.quad	.LFE7460-.LFB7460
	.uleb128 0x1
	.byte	0x9c
	.long	0x25b9f
	.uleb128 0x1e
	.secrel32	.LASF220
	.byte	0x6
	.word	0x353
	.byte	0x2d
	.long	0x19073
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7b
	.ascii "__gthread_mutex_unlock\0"
	.word	0x308
	.long	0x188
	.quad	.LFB7453
	.quad	.LFE7453-.LFB7453
	.uleb128 0x1
	.byte	0x9c
	.long	0x25be4
	.uleb128 0x1e
	.secrel32	.LASF221
	.byte	0x6
	.word	0x308
	.byte	0x2c
	.long	0x1902d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7b
	.ascii "__gthread_mutex_lock\0"
	.word	0x2ea
	.long	0x188
	.quad	.LFB7450
	.quad	.LFE7450-.LFB7450
	.uleb128 0x1
	.byte	0x9c
	.long	0x25c27
	.uleb128 0x1e
	.secrel32	.LASF221
	.byte	0x6
	.word	0x2ea
	.byte	0x2a
	.long	0x1902d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x7b
	.ascii "__gthread_mutex_destroy\0"
	.word	0x2e1
	.long	0x188
	.quad	.LFB7449
	.quad	.LFE7449-.LFB7449
	.uleb128 0x1
	.byte	0x9c
	.long	0x25c6d
	.uleb128 0x1e
	.secrel32	.LASF221
	.byte	0x6
	.word	0x2e1
	.byte	0x2d
	.long	0x1902d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x14e
	.ascii "__gthread_mutex_init_function\0"
	.byte	0x6
	.word	0x2da
	.byte	0x1
	.quad	.LFB7448
	.quad	.LFE7448-.LFB7448
	.uleb128 0x1
	.byte	0x9c
	.long	0x25cb8
	.uleb128 0x1e
	.secrel32	.LASF221
	.byte	0x6
	.word	0x2da
	.byte	0x33
	.long	0x1902d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xeb
	.ascii "__gthread_yield\0"
	.word	0x2b3
	.long	0x188
	.quad	.LFB7442
	.quad	.LFE7442-.LFB7442
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0xeb
	.ascii "__gthread_self\0"
	.word	0x2ad
	.long	0x18f3d
	.quad	.LFB7441
	.quad	.LFE7441-.LFB7441
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x14f
	.ascii "__gthread_active_p\0"
	.byte	0x6
	.word	0x12c
	.byte	0x1
	.long	0x188
	.quad	.LFB7436
	.quad	.LFE7436-.LFB7436
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x15
	.long	0x21b7
	.quad	.LFB7262
	.quad	.LFE7262-.LFB7262
	.uleb128 0x1
	.byte	0x9c
	.long	0x25d8c
	.uleb128 0x3d
	.secrel32	.LASF190
	.byte	0x5
	.byte	0xcc
	.byte	0x16
	.long	0x525
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__clength\0"
	.byte	0x5
	.byte	0xcc
	.byte	0x24
	.long	0xe33
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "__seed\0"
	.byte	0x5
	.byte	0xcd
	.byte	0xa
	.long	0xe33
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x150
	.secrel32	.LASF183
	.byte	0x4
	.byte	0xae
	.byte	0x21
	.ascii "_ZnwyPv\0"
	.long	0x4b4
	.quad	.LFB6076
	.quad	.LFE6076-.LFB6076
	.uleb128 0x1
	.byte	0x9c
	.long	0x25dcf
	.uleb128 0x53
	.long	0xe33
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x4
	.byte	0xae
	.byte	0x41
	.long	0x4b4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x2a
	.long	0x1701c
	.quad	.LFB5951
	.quad	.LFE5951-.LFB5951
	.uleb128 0x1
	.byte	0x9c
	.long	0x25e03
	.uleb128 0x11
	.ascii "__v\0"
	.byte	0x3
	.word	0x130
	.byte	0x20
	.long	0x11e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x53
	.long	0x1045
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x2a
	.long	0x17070
	.quad	.LFB5949
	.quad	.LFE5949-.LFB5949
	.uleb128 0x1
	.byte	0x9c
	.long	0x25e37
	.uleb128 0x11
	.ascii "__v\0"
	.byte	0x3
	.word	0x126
	.byte	0x20
	.long	0x11e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x53
	.long	0x1045
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x14
	.long	0x104f
	.long	0x25e45
	.byte	0x2
	.long	0x25e54
	.uleb128 0xd
	.secrel32	.LASF185
	.long	0x1850d
	.uleb128 0x1
	.long	0x18508
	.byte	0
	.uleb128 0x40
	.long	0x25e37
	.ascii "_ZNSt9__cmp_cat8__unspecC1EPS0_\0"
	.long	0x25e93
	.quad	.LFB5910
	.quad	.LFE5910-.LFB5910
	.uleb128 0x1
	.byte	0x9c
	.long	0x25ea4
	.uleb128 0x8
	.long	0x25e45
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x8
	.long	0x25e4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc0
	.long	0x170c3
	.quad	.LFB404
	.quad	.LFE404-.LFB404
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x151
	.long	0x170e4
	.byte	0x3
	.uleb128 0x152
	.secrel32	.LASF132
	.byte	0x1
	.word	0x137
	.byte	0xa
	.secrel32	.LASF222
	.byte	0
	.byte	0
	.section	.debug_abbrev,"dr"
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x8
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x10
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x2f
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x42
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x4107
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x48
	.byte	0
	.uleb128 0x7d
	.uleb128 0x1
	.uleb128 0x7f
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 22
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x32
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x33
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x34
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x35
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x36
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x37
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x38
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x39
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3d
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x3e
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x3f
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x40
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x41
	.uleb128 0x4107
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x42
	.uleb128 0x34
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x43
	.uleb128 0x4107
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x44
	.uleb128 0x1c
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x45
	.uleb128 0x1c
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.byte	0
	.byte	0
	.uleb128 0x46
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x47
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x48
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1e
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0x49
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x4a
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4c
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4d
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4e
	.uleb128 0x8
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4f
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x50
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x51
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x52
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x53
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x54
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x55
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1e
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x56
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x57
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1e
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x58
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 22
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x59
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 75
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x5a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5e
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x5f
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x60
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x61
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x62
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x63
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x64
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 3
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x65
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x66
	.uleb128 0x34
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x67
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x68
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x69
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0xb
	.uleb128 0x59
	.uleb128 0x5
	.uleb128 0x57
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6a
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6b
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0x6c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6f
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3e
	.uleb128 0x21
	.sleb128 7
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 4
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 14
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x70
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x71
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x72
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x73
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x74
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x75
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0x76
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x77
	.uleb128 0xb
	.byte	0x1
	.byte	0
	.byte	0
	.uleb128 0x78
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x79
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7a
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x7b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 6
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7c
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x7d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7f
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x80
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 14
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x81
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0xb
	.uleb128 0x59
	.uleb128 0xb
	.uleb128 0x57
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x82
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x83
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x84
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x85
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x86
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x87
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x88
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x89
	.uleb128 0x4107
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x8a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 22
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8e
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x8f
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 9
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x90
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x91
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x92
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0x21
	.sleb128 14
	.uleb128 0x59
	.uleb128 0x5
	.uleb128 0x57
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x93
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x94
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x95
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3e
	.uleb128 0x21
	.sleb128 7
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 4
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x96
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x97
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x98
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x99
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 22
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9b
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 75
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xa
	.uleb128 0x6c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x9c
	.uleb128 0x4108
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9e
	.uleb128 0x2e
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x9f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa0
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6d
	.uleb128 0x19
	.uleb128 0x3e
	.uleb128 0x21
	.sleb128 5
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa1
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa2
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.uleb128 0x6c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xa3
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa4
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa5
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xa6
	.uleb128 0x2
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xa7
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa9
	.uleb128 0x30
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x21
	.sleb128 0
	.byte	0
	.byte	0
	.uleb128 0xaa
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xab
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 16
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xac
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xad
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 19
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xae
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 50
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 33
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0x6
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0xaf
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0xb0
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 12
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 450
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 3
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb1
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 12
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 517
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 12
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xb3
	.uleb128 0x4107
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0xb4
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb5
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 22
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 1035
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 29
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xb6
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 235
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 24
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 22
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 22
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 20
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb9
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xba
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xbb
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xbc
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 13
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xbd
	.uleb128 0x21
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xbe
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 4
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 6
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xbf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc0
	.uleb128 0x2e
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xc1
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 37
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 10
	.byte	0
	.byte	0
	.uleb128 0xc2
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xc3
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc4
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc5
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc6
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0xc7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc9
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xca
	.uleb128 0x4
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6d
	.uleb128 0x19
	.uleb128 0x3e
	.uleb128 0x21
	.sleb128 7
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 14
	.byte	0
	.byte	0
	.uleb128 0xcb
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xcc
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xcd
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xce
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 2
	.byte	0
	.byte	0
	.uleb128 0xcf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd0
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 9
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 324
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 12
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd1
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 9
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 332
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 28
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 3
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0xd2
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 9
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 335
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 40
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 3
	.byte	0
	.byte	0
	.uleb128 0xd3
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 10
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd4
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd5
	.uleb128 0x4107
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 21
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd6
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd7
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 50
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 33
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0x21
	.sleb128 1000
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0xd8
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x21
	.sleb128 1000
	.byte	0
	.byte	0
	.uleb128 0xd9
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 598
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xda
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xdb
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 56
	.uleb128 0x88
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xdc
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xdd
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xde
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xdf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe0
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 24
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe1
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0xe2
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe3
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe4
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe5
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x59
	.uleb128 0xb
	.uleb128 0x57
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe6
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe7
	.uleb128 0x4108
	.byte	0x1
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 22
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 742
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 20
	.byte	0
	.byte	0
	.uleb128 0xe8
	.uleb128 0x4108
	.byte	0x1
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 23
	.byte	0
	.byte	0
	.uleb128 0xe9
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xea
	.uleb128 0x1d
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x59
	.uleb128 0xb
	.uleb128 0x57
	.uleb128 0x21
	.sleb128 18
	.byte	0
	.byte	0
	.uleb128 0xeb
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 6
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xec
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x1f
	.uleb128 0x1b
	.uleb128 0x1f
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xed
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xee
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xef
	.uleb128 0x26
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xf0
	.uleb128 0x15
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xf1
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf3
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf4
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf5
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0xf6
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf9
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xfa
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xfb
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xfc
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xfd
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xfe
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xff
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x100
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x101
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x102
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x103
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x104
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x105
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x106
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x107
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x108
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x109
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10b
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x10c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x4c
	.uleb128 0xb
	.uleb128 0x1d
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10d
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1d
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x4c
	.uleb128 0xb
	.uleb128 0x4d
	.uleb128 0x18
	.uleb128 0x1d
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x4c
	.uleb128 0xb
	.uleb128 0x1d
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x110
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x111
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x112
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x113
	.uleb128 0x3a
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x114
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x115
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x116
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x117
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x118
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x119
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11f
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x120
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x121
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x122
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8a
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x123
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x124
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x125
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x126
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x127
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x128
	.uleb128 0x4107
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x129
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0xe
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x12a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12b
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x12c
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x12d
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x12e
	.uleb128 0x3a
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12f
	.uleb128 0x3b
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x130
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x131
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x132
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x133
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xa
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x134
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x135
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x136
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x137
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x138
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x139
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13b
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x13c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x88
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13e
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x140
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x55
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x141
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x142
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x143
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x144
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x145
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x146
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x147
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x148
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x149
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14b
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x14c
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x14d
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x14e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14f
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x150
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x151
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x152
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0xe
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"dr"
	.long	0xe9c
	.word	0x2
	.secrel32	.Ldebug_info0
	.byte	0x8
	.byte	0
	.word	0
	.word	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	.LFB404
	.quad	.LFE404-.LFB404
	.quad	.LFB5616
	.quad	.LFE5616-.LFB5616
	.quad	.LFB5910
	.quad	.LFE5910-.LFB5910
	.quad	.LFB5949
	.quad	.LFE5949-.LFB5949
	.quad	.LFB5951
	.quad	.LFE5951-.LFB5951
	.quad	.LFB6076
	.quad	.LFE6076-.LFB6076
	.quad	.LFB7262
	.quad	.LFE7262-.LFB7262
	.quad	.LFB8921
	.quad	.LFE8921-.LFB8921
	.quad	.LFB8924
	.quad	.LFE8924-.LFB8924
	.quad	.LFB8926
	.quad	.LFE8926-.LFB8926
	.quad	.LFB8928
	.quad	.LFE8928-.LFB8928
	.quad	.LFB8929
	.quad	.LFE8929-.LFB8929
	.quad	.LFB8932
	.quad	.LFE8932-.LFB8932
	.quad	.LFB8935
	.quad	.LFE8935-.LFB8935
	.quad	.LFB8937
	.quad	.LFE8937-.LFB8937
	.quad	.LFB8939
	.quad	.LFE8939-.LFB8939
	.quad	.LFB8940
	.quad	.LFE8940-.LFB8940
	.quad	.LFB8944
	.quad	.LFE8944-.LFB8944
	.quad	.LFB8945
	.quad	.LFE8945-.LFB8945
	.quad	.LFB8946
	.quad	.LFE8946-.LFB8946
	.quad	.LFB8949
	.quad	.LFE8949-.LFB8949
	.quad	.LFB8950
	.quad	.LFE8950-.LFB8950
	.quad	.LFB8951
	.quad	.LFE8951-.LFB8951
	.quad	.LFB8952
	.quad	.LFE8952-.LFB8952
	.quad	.LFB8957
	.quad	.LFE8957-.LFB8957
	.quad	.LFB8959
	.quad	.LFE8959-.LFB8959
	.quad	.LFB8963
	.quad	.LFE8963-.LFB8963
	.quad	.LFB8965
	.quad	.LFE8965-.LFB8965
	.quad	.LFB8953
	.quad	.LFE8953-.LFB8953
	.quad	.LFB8967
	.quad	.LFE8967-.LFB8967
	.quad	.LFB8987
	.quad	.LFE8987-.LFB8987
	.quad	.LFB8988
	.quad	.LFE8988-.LFB8988
	.quad	.LFB8989
	.quad	.LFE8989-.LFB8989
	.quad	.LFB8990
	.quad	.LFE8990-.LFB8990
	.quad	.LFB8991
	.quad	.LFE8991-.LFB8991
	.quad	.LFB9402
	.quad	.LFE9402-.LFB9402
	.quad	.LFB9404
	.quad	.LFE9404-.LFB9404
	.quad	.LFB9603
	.quad	.LFE9603-.LFB9603
	.quad	.LFB9606
	.quad	.LFE9606-.LFB9606
	.quad	.LFB9610
	.quad	.LFE9610-.LFB9610
	.quad	.LFB9614
	.quad	.LFE9614-.LFB9614
	.quad	.LFB9615
	.quad	.LFE9615-.LFB9615
	.quad	.LFB9617
	.quad	.LFE9617-.LFB9617
	.quad	.LFB9618
	.quad	.LFE9618-.LFB9618
	.quad	.LFB9625
	.quad	.LFE9625-.LFB9625
	.quad	.LFB9626
	.quad	.LFE9626-.LFB9626
	.quad	.LFB9627
	.quad	.LFE9627-.LFB9627
	.quad	.LFB9701
	.quad	.LFE9701-.LFB9701
	.quad	.LFB9700
	.quad	.LFE9700-.LFB9700
	.quad	.LFB9703
	.quad	.LFE9703-.LFB9703
	.quad	.LFB9707
	.quad	.LFE9707-.LFB9707
	.quad	.LFB9708
	.quad	.LFE9708-.LFB9708
	.quad	.LFB9727
	.quad	.LFE9727-.LFB9727
	.quad	.LFB9747
	.quad	.LFE9747-.LFB9747
	.quad	.LFB9743
	.quad	.LFE9743-.LFB9743
	.quad	.LFB9886
	.quad	.LFE9886-.LFB9886
	.quad	.LFB10616
	.quad	.LFE10616-.LFB10616
	.quad	.LFB10623
	.quad	.LFE10623-.LFB10623
	.quad	.LFB10637
	.quad	.LFE10637-.LFB10637
	.quad	.LFB10642
	.quad	.LFE10642-.LFB10642
	.quad	.LFB10691
	.quad	.LFE10691-.LFB10691
	.quad	.LFB10696
	.quad	.LFE10696-.LFB10696
	.quad	.LFB10722
	.quad	.LFE10722-.LFB10722
	.quad	.LFB10823
	.quad	.LFE10823-.LFB10823
	.quad	.LFB10889
	.quad	.LFE10889-.LFB10889
	.quad	.LFB10904
	.quad	.LFE10904-.LFB10904
	.quad	.LFB10916
	.quad	.LFE10916-.LFB10916
	.quad	.LFB10920
	.quad	.LFE10920-.LFB10920
	.quad	.LFB10922
	.quad	.LFE10922-.LFB10922
	.quad	.LFB10921
	.quad	.LFE10921-.LFB10921
	.quad	.LFB10917
	.quad	.LFE10917-.LFB10917
	.quad	.LFB10923
	.quad	.LFE10923-.LFB10923
	.quad	.LFB10924
	.quad	.LFE10924-.LFB10924
	.quad	.LFB10925
	.quad	.LFE10925-.LFB10925
	.quad	.LFB10927
	.quad	.LFE10927-.LFB10927
	.quad	.LFB10930
	.quad	.LFE10930-.LFB10930
	.quad	.LFB10931
	.quad	.LFE10931-.LFB10931
	.quad	.LFB10935
	.quad	.LFE10935-.LFB10935
	.quad	.LFB10941
	.quad	.LFE10941-.LFB10941
	.quad	.LFB10943
	.quad	.LFE10943-.LFB10943
	.quad	.LFB10948
	.quad	.LFE10948-.LFB10948
	.quad	.LFB10951
	.quad	.LFE10951-.LFB10951
	.quad	.LFB10957
	.quad	.LFE10957-.LFB10957
	.quad	.LFB11356
	.quad	.LFE11356-.LFB11356
	.quad	.LFB11359
	.quad	.LFE11359-.LFB11359
	.quad	.LFB11365
	.quad	.LFE11365-.LFB11365
	.quad	.LFB11366
	.quad	.LFE11366-.LFB11366
	.quad	.LFB11369
	.quad	.LFE11369-.LFB11369
	.quad	.LFB11420
	.quad	.LFE11420-.LFB11420
	.quad	.LFB11445
	.quad	.LFE11445-.LFB11445
	.quad	.LFB11446
	.quad	.LFE11446-.LFB11446
	.quad	.LFB11447
	.quad	.LFE11447-.LFB11447
	.quad	.LFB11448
	.quad	.LFE11448-.LFB11448
	.quad	.LFB11449
	.quad	.LFE11449-.LFB11449
	.quad	.LFB11476
	.quad	.LFE11476-.LFB11476
	.quad	.LFB11480
	.quad	.LFE11480-.LFB11480
	.quad	.LFB11479
	.quad	.LFE11479-.LFB11479
	.quad	.LFB11478
	.quad	.LFE11478-.LFB11478
	.quad	.LFB11484
	.quad	.LFE11484-.LFB11484
	.quad	.LFB11488
	.quad	.LFE11488-.LFB11488
	.quad	.LFB11553
	.quad	.LFE11553-.LFB11553
	.quad	.LFB11555
	.quad	.LFE11555-.LFB11555
	.quad	.LFB11558
	.quad	.LFE11558-.LFB11558
	.quad	.LFB11559
	.quad	.LFE11559-.LFB11559
	.quad	.LFB11560
	.quad	.LFE11560-.LFB11560
	.quad	.LFB11561
	.quad	.LFE11561-.LFB11561
	.quad	.LFB11562
	.quad	.LFE11562-.LFB11562
	.quad	.LFB11563
	.quad	.LFE11563-.LFB11563
	.quad	.LFB11568
	.quad	.LFE11568-.LFB11568
	.quad	.LFB11571
	.quad	.LFE11571-.LFB11571
	.quad	.LFB11573
	.quad	.LFE11573-.LFB11573
	.quad	.LFB11577
	.quad	.LFE11577-.LFB11577
	.quad	.LFB11579
	.quad	.LFE11579-.LFB11579
	.quad	.LFB11582
	.quad	.LFE11582-.LFB11582
	.quad	.LFB11583
	.quad	.LFE11583-.LFB11583
	.quad	.LFB11590
	.quad	.LFE11590-.LFB11590
	.quad	.LFB11594
	.quad	.LFE11594-.LFB11594
	.quad	.LFB11595
	.quad	.LFE11595-.LFB11595
	.quad	.LFB11783
	.quad	.LFE11783-.LFB11783
	.quad	.LFB11789
	.quad	.LFE11789-.LFB11789
	.quad	.LFB11795
	.quad	.LFE11795-.LFB11795
	.quad	.LFB11796
	.quad	.LFE11796-.LFB11796
	.quad	.LFB11797
	.quad	.LFE11797-.LFB11797
	.quad	.LFB11805
	.quad	.LFE11805-.LFB11805
	.quad	.LFB11807
	.quad	.LFE11807-.LFB11807
	.quad	.LFB11809
	.quad	.LFE11809-.LFB11809
	.quad	.LFB11810
	.quad	.LFE11810-.LFB11810
	.quad	.LFB11811
	.quad	.LFE11811-.LFB11811
	.quad	.LFB11815
	.quad	.LFE11815-.LFB11815
	.quad	.LFB11817
	.quad	.LFE11817-.LFB11817
	.quad	.LFB11836
	.quad	.LFE11836-.LFB11836
	.quad	.LFB11838
	.quad	.LFE11838-.LFB11838
	.quad	.LFB11839
	.quad	.LFE11839-.LFB11839
	.quad	.LFB11840
	.quad	.LFE11840-.LFB11840
	.quad	.LFB11841
	.quad	.LFE11841-.LFB11841
	.quad	.LFB11842
	.quad	.LFE11842-.LFB11842
	.quad	.LFB11843
	.quad	.LFE11843-.LFB11843
	.quad	.LFB11844
	.quad	.LFE11844-.LFB11844
	.quad	.LFB11845
	.quad	.LFE11845-.LFB11845
	.quad	.LFB11846
	.quad	.LFE11846-.LFB11846
	.quad	.LFB11849
	.quad	.LFE11849-.LFB11849
	.quad	.LFB11852
	.quad	.LFE11852-.LFB11852
	.quad	.LFB11854
	.quad	.LFE11854-.LFB11854
	.quad	.LFB11855
	.quad	.LFE11855-.LFB11855
	.quad	.LFB11856
	.quad	.LFE11856-.LFB11856
	.quad	.LFB11866
	.quad	.LFE11866-.LFB11866
	.quad	.LFB11868
	.quad	.LFE11868-.LFB11868
	.quad	.LFB11872
	.quad	.LFE11872-.LFB11872
	.quad	.LFB11885
	.quad	.LFE11885-.LFB11885
	.quad	.LFB11887
	.quad	.LFE11887-.LFB11887
	.quad	.LFB11890
	.quad	.LFE11890-.LFB11890
	.quad	.LFB12007
	.quad	.LFE12007-.LFB12007
	.quad	.LFB12015
	.quad	.LFE12015-.LFB12015
	.quad	.LFB12019
	.quad	.LFE12019-.LFB12019
	.quad	.LFB12020
	.quad	.LFE12020-.LFB12020
	.quad	.LFB12023
	.quad	.LFE12023-.LFB12023
	.quad	.LFB12030
	.quad	.LFE12030-.LFB12030
	.quad	.LFB12033
	.quad	.LFE12033-.LFB12033
	.quad	.LFB12034
	.quad	.LFE12034-.LFB12034
	.quad	.LFB12035
	.quad	.LFE12035-.LFB12035
	.quad	.LFB12037
	.quad	.LFE12037-.LFB12037
	.quad	.LFB12041
	.quad	.LFE12041-.LFB12041
	.quad	.LFB12042
	.quad	.LFE12042-.LFB12042
	.quad	.LFB12043
	.quad	.LFE12043-.LFB12043
	.quad	.LFB12058
	.quad	.LFE12058-.LFB12058
	.quad	.LFB12066
	.quad	.LFE12066-.LFB12066
	.quad	.LFB12068
	.quad	.LFE12068-.LFB12068
	.quad	.LFB12069
	.quad	.LFE12069-.LFB12069
	.quad	.LFB12070
	.quad	.LFE12070-.LFB12070
	.quad	.LFB12071
	.quad	.LFE12071-.LFB12071
	.quad	.LFB12158
	.quad	.LFE12158-.LFB12158
	.quad	.LFB12161
	.quad	.LFE12161-.LFB12161
	.quad	.LFB12162
	.quad	.LFE12162-.LFB12162
	.quad	.LFB12163
	.quad	.LFE12163-.LFB12163
	.quad	.LFB12165
	.quad	.LFE12165-.LFB12165
	.quad	.LFB12168
	.quad	.LFE12168-.LFB12168
	.quad	.LFB12171
	.quad	.LFE12171-.LFB12171
	.quad	.LFB12173
	.quad	.LFE12173-.LFB12173
	.quad	.LFB12174
	.quad	.LFE12174-.LFB12174
	.quad	.LFB12189
	.quad	.LFE12189-.LFB12189
	.quad	.LFB12190
	.quad	.LFE12190-.LFB12190
	.quad	.LFB12202
	.quad	.LFE12202-.LFB12202
	.quad	.LFB12203
	.quad	.LFE12203-.LFB12203
	.quad	.LFB12204
	.quad	.LFE12204-.LFB12204
	.quad	.LFB12241
	.quad	.LFE12241-.LFB12241
	.quad	.LFB12243
	.quad	.LFE12243-.LFB12243
	.quad	.LFB12244
	.quad	.LFE12244-.LFB12244
	.quad	.LFB12245
	.quad	.LFE12245-.LFB12245
	.quad	.LFB12247
	.quad	.LFE12247-.LFB12247
	.quad	.LFB12250
	.quad	.LFE12250-.LFB12250
	.quad	.LFB12253
	.quad	.LFE12253-.LFB12253
	.quad	.LFB12255
	.quad	.LFE12255-.LFB12255
	.quad	.LFB12256
	.quad	.LFE12256-.LFB12256
	.quad	.LFB12265
	.quad	.LFE12265-.LFB12265
	.quad	.LFB12268
	.quad	.LFE12268-.LFB12268
	.quad	.LFB12269
	.quad	.LFE12269-.LFB12269
	.quad	.LFB12273
	.quad	.LFE12273-.LFB12273
	.quad	.LFB12274
	.quad	.LFE12274-.LFB12274
	.quad	.LFB12278
	.quad	.LFE12278-.LFB12278
	.quad	.LFB12284
	.quad	.LFE12284-.LFB12284
	.quad	.LFB12286
	.quad	.LFE12286-.LFB12286
	.quad	.LFB12287
	.quad	.LFE12287-.LFB12287
	.quad	.LFB12305
	.quad	.LFE12305-.LFB12305
	.quad	.LFB12306
	.quad	.LFE12306-.LFB12306
	.quad	.LFB12307
	.quad	.LFE12307-.LFB12307
	.quad	.LFB12309
	.quad	.LFE12309-.LFB12309
	.quad	.LFB12311
	.quad	.LFE12311-.LFB12311
	.quad	.LFB12312
	.quad	.LFE12312-.LFB12312
	.quad	.LFB12321
	.quad	.LFE12321-.LFB12321
	.quad	.LFB12322
	.quad	.LFE12322-.LFB12322
	.quad	.LFB12326
	.quad	.LFE12326-.LFB12326
	.quad	.LFB12328
	.quad	.LFE12328-.LFB12328
	.quad	.LFB12330
	.quad	.LFE12330-.LFB12330
	.quad	.LFB12331
	.quad	.LFE12331-.LFB12331
	.quad	.LFB12335
	.quad	.LFE12335-.LFB12335
	.quad	.LFB12338
	.quad	.LFE12338-.LFB12338
	.quad	.LFB12340
	.quad	.LFE12340-.LFB12340
	.quad	.LFB12341
	.quad	.LFE12341-.LFB12341
	.quad	.LFB12351
	.quad	.LFE12351-.LFB12351
	.quad	.LFB12352
	.quad	.LFE12352-.LFB12352
	.quad	.LFB12357
	.quad	.LFE12357-.LFB12357
	.quad	.LFB12359
	.quad	.LFE12359-.LFB12359
	.quad	.LFB12363
	.quad	.LFE12363-.LFB12363
	.quad	.LFB12364
	.quad	.LFE12364-.LFB12364
	.quad	.LFB12365
	.quad	.LFE12365-.LFB12365
	.quad	.LFB12367
	.quad	.LFE12367-.LFB12367
	.quad	.LFB12369
	.quad	.LFE12369-.LFB12369
	.quad	.LFB12370
	.quad	.LFE12370-.LFB12370
	.quad	.LFB12371
	.quad	.LFE12371-.LFB12371
	.quad	.LFB12377
	.quad	.LFE12377-.LFB12377
	.quad	.LFB12378
	.quad	.LFE12378-.LFB12378
	.quad	0
	.quad	0
	.section	.debug_rnglists,"dr"
.Ldebug_ranges0:
	.long	.Ldebug_ranges3-.Ldebug_ranges2
.Ldebug_ranges2:
	.word	0x5
	.byte	0x8
	.byte	0
	.long	0
.LLRL0:
	.byte	0x5
	.quad	.LBB115
	.byte	0x4
	.uleb128 .LBB115-.LBB115
	.uleb128 .LBE115-.LBB115
	.byte	0x4
	.uleb128 .LBB121-.LBB115
	.uleb128 .LBE121-.LBB115
	.byte	0
.LLRL1:
	.byte	0x5
	.quad	.LBB116
	.byte	0x4
	.uleb128 .LBB116-.LBB116
	.uleb128 .LBE116-.LBB116
	.byte	0x4
	.uleb128 .LBB117-.LBB116
	.uleb128 .LBE117-.LBB116
	.byte	0
.LLRL2:
	.byte	0x5
	.quad	.LBB118
	.byte	0x4
	.uleb128 .LBB118-.LBB118
	.uleb128 .LBE118-.LBB118
	.byte	0x4
	.uleb128 .LBB122-.LBB118
	.uleb128 .LBE122-.LBB118
	.byte	0
.LLRL3:
	.byte	0x5
	.quad	.LBB119
	.byte	0x4
	.uleb128 .LBB119-.LBB119
	.uleb128 .LBE119-.LBB119
	.byte	0x4
	.uleb128 .LBB120-.LBB119
	.uleb128 .LBE120-.LBB119
	.byte	0
.LLRL4:
	.byte	0x5
	.quad	.LBB125
	.byte	0x4
	.uleb128 .LBB125-.LBB125
	.uleb128 .LBE125-.LBB125
	.byte	0x4
	.uleb128 .LBB126-.LBB125
	.uleb128 .LBE126-.LBB125
	.byte	0
.LLRL5:
	.byte	0x5
	.quad	.LBB129
	.byte	0x4
	.uleb128 .LBB129-.LBB129
	.uleb128 .LBE129-.LBB129
	.byte	0x4
	.uleb128 .LBB141-.LBB129
	.uleb128 .LBE141-.LBB129
	.byte	0x4
	.uleb128 .LBB142-.LBB129
	.uleb128 .LBE142-.LBB129
	.byte	0
.LLRL6:
	.byte	0x5
	.quad	.LBB131
	.byte	0x4
	.uleb128 .LBB131-.LBB131
	.uleb128 .LBE131-.LBB131
	.byte	0x4
	.uleb128 .LBB138-.LBB131
	.uleb128 .LBE138-.LBB131
	.byte	0
.LLRL7:
	.byte	0x5
	.quad	.LBB133
	.byte	0x4
	.uleb128 .LBB133-.LBB133
	.uleb128 .LBE133-.LBB133
	.byte	0x4
	.uleb128 .LBB136-.LBB133
	.uleb128 .LBE136-.LBB133
	.byte	0
.LLRL8:
	.byte	0x5
	.quad	.LBB134
	.byte	0x4
	.uleb128 .LBB134-.LBB134
	.uleb128 .LBE134-.LBB134
	.byte	0x4
	.uleb128 .LBB135-.LBB134
	.uleb128 .LBE135-.LBB134
	.byte	0
.LLRL9:
	.byte	0x5
	.quad	.LBB173
	.byte	0x4
	.uleb128 .LBB173-.LBB173
	.uleb128 .LBE173-.LBB173
	.byte	0x4
	.uleb128 .LBB184-.LBB173
	.uleb128 .LBE184-.LBB173
	.byte	0
.LLRL10:
	.byte	0x5
	.quad	.LBB194
	.byte	0x4
	.uleb128 .LBB194-.LBB194
	.uleb128 .LBE194-.LBB194
	.byte	0x4
	.uleb128 .LBB202-.LBB194
	.uleb128 .LBE202-.LBB194
	.byte	0
.LLRL11:
	.byte	0x5
	.quad	.LBB196
	.byte	0x4
	.uleb128 .LBB196-.LBB196
	.uleb128 .LBE196-.LBB196
	.byte	0x4
	.uleb128 .LBB201-.LBB196
	.uleb128 .LBE201-.LBB196
	.byte	0
.LLRL12:
	.byte	0x5
	.quad	.LBB211
	.byte	0x4
	.uleb128 .LBB211-.LBB211
	.uleb128 .LBE211-.LBB211
	.byte	0x4
	.uleb128 .LBB225-.LBB211
	.uleb128 .LBE225-.LBB211
	.byte	0
.LLRL13:
	.byte	0x5
	.quad	.LBB256
	.byte	0x4
	.uleb128 .LBB256-.LBB256
	.uleb128 .LBE256-.LBB256
	.byte	0x4
	.uleb128 .LBB257-.LBB256
	.uleb128 .LBE257-.LBB256
	.byte	0
.LLRL14:
	.byte	0x5
	.quad	.LBB316
	.byte	0x4
	.uleb128 .LBB316-.LBB316
	.uleb128 .LBE316-.LBB316
	.byte	0x4
	.uleb128 .LBB317-.LBB316
	.uleb128 .LBE317-.LBB316
	.byte	0
.LLRL15:
	.byte	0x5
	.quad	.LBB325
	.byte	0x4
	.uleb128 .LBB325-.LBB325
	.uleb128 .LBE325-.LBB325
	.byte	0x4
	.uleb128 .LBB326-.LBB325
	.uleb128 .LBE326-.LBB325
	.byte	0
.LLRL16:
	.byte	0x7
	.quad	.Ltext0
	.uleb128 .Letext0-.Ltext0
	.byte	0x7
	.quad	.LFB404
	.uleb128 .LFE404-.LFB404
	.byte	0x7
	.quad	.LFB5616
	.uleb128 .LFE5616-.LFB5616
	.byte	0x7
	.quad	.LFB5910
	.uleb128 .LFE5910-.LFB5910
	.byte	0x7
	.quad	.LFB5949
	.uleb128 .LFE5949-.LFB5949
	.byte	0x7
	.quad	.LFB5951
	.uleb128 .LFE5951-.LFB5951
	.byte	0x7
	.quad	.LFB6076
	.uleb128 .LFE6076-.LFB6076
	.byte	0x7
	.quad	.LFB7262
	.uleb128 .LFE7262-.LFB7262
	.byte	0x7
	.quad	.LFB8921
	.uleb128 .LFE8921-.LFB8921
	.byte	0x7
	.quad	.LFB8924
	.uleb128 .LFE8924-.LFB8924
	.byte	0x7
	.quad	.LFB8926
	.uleb128 .LFE8926-.LFB8926
	.byte	0x7
	.quad	.LFB8928
	.uleb128 .LFE8928-.LFB8928
	.byte	0x7
	.quad	.LFB8929
	.uleb128 .LFE8929-.LFB8929
	.byte	0x7
	.quad	.LFB8932
	.uleb128 .LFE8932-.LFB8932
	.byte	0x7
	.quad	.LFB8935
	.uleb128 .LFE8935-.LFB8935
	.byte	0x7
	.quad	.LFB8937
	.uleb128 .LFE8937-.LFB8937
	.byte	0x7
	.quad	.LFB8939
	.uleb128 .LFE8939-.LFB8939
	.byte	0x7
	.quad	.LFB8940
	.uleb128 .LFE8940-.LFB8940
	.byte	0x7
	.quad	.LFB8944
	.uleb128 .LFE8944-.LFB8944
	.byte	0x7
	.quad	.LFB8945
	.uleb128 .LFE8945-.LFB8945
	.byte	0x7
	.quad	.LFB8946
	.uleb128 .LFE8946-.LFB8946
	.byte	0x7
	.quad	.LFB8949
	.uleb128 .LFE8949-.LFB8949
	.byte	0x7
	.quad	.LFB8950
	.uleb128 .LFE8950-.LFB8950
	.byte	0x7
	.quad	.LFB8951
	.uleb128 .LFE8951-.LFB8951
	.byte	0x7
	.quad	.LFB8952
	.uleb128 .LFE8952-.LFB8952
	.byte	0x7
	.quad	.LFB8957
	.uleb128 .LFE8957-.LFB8957
	.byte	0x7
	.quad	.LFB8959
	.uleb128 .LFE8959-.LFB8959
	.byte	0x7
	.quad	.LFB8963
	.uleb128 .LFE8963-.LFB8963
	.byte	0x7
	.quad	.LFB8965
	.uleb128 .LFE8965-.LFB8965
	.byte	0x7
	.quad	.LFB8953
	.uleb128 .LFE8953-.LFB8953
	.byte	0x7
	.quad	.LFB8967
	.uleb128 .LFE8967-.LFB8967
	.byte	0x7
	.quad	.LFB8987
	.uleb128 .LFE8987-.LFB8987
	.byte	0x7
	.quad	.LFB8988
	.uleb128 .LFE8988-.LFB8988
	.byte	0x7
	.quad	.LFB8989
	.uleb128 .LFE8989-.LFB8989
	.byte	0x7
	.quad	.LFB8990
	.uleb128 .LFE8990-.LFB8990
	.byte	0x7
	.quad	.LFB8991
	.uleb128 .LFE8991-.LFB8991
	.byte	0x7
	.quad	.LFB9402
	.uleb128 .LFE9402-.LFB9402
	.byte	0x7
	.quad	.LFB9404
	.uleb128 .LFE9404-.LFB9404
	.byte	0x7
	.quad	.LFB9603
	.uleb128 .LFE9603-.LFB9603
	.byte	0x7
	.quad	.LFB9606
	.uleb128 .LFE9606-.LFB9606
	.byte	0x7
	.quad	.LFB9610
	.uleb128 .LFE9610-.LFB9610
	.byte	0x7
	.quad	.LFB9614
	.uleb128 .LFE9614-.LFB9614
	.byte	0x7
	.quad	.LFB9615
	.uleb128 .LFE9615-.LFB9615
	.byte	0x7
	.quad	.LFB9617
	.uleb128 .LFE9617-.LFB9617
	.byte	0x7
	.quad	.LFB9618
	.uleb128 .LFE9618-.LFB9618
	.byte	0x7
	.quad	.LFB9625
	.uleb128 .LFE9625-.LFB9625
	.byte	0x7
	.quad	.LFB9626
	.uleb128 .LFE9626-.LFB9626
	.byte	0x7
	.quad	.LFB9627
	.uleb128 .LFE9627-.LFB9627
	.byte	0x7
	.quad	.LFB9701
	.uleb128 .LFE9701-.LFB9701
	.byte	0x7
	.quad	.LFB9700
	.uleb128 .LFE9700-.LFB9700
	.byte	0x7
	.quad	.LFB9703
	.uleb128 .LFE9703-.LFB9703
	.byte	0x7
	.quad	.LFB9707
	.uleb128 .LFE9707-.LFB9707
	.byte	0x7
	.quad	.LFB9708
	.uleb128 .LFE9708-.LFB9708
	.byte	0x7
	.quad	.LFB9727
	.uleb128 .LFE9727-.LFB9727
	.byte	0x7
	.quad	.LFB9747
	.uleb128 .LFE9747-.LFB9747
	.byte	0x7
	.quad	.LFB9743
	.uleb128 .LFE9743-.LFB9743
	.byte	0x7
	.quad	.LFB9886
	.uleb128 .LFE9886-.LFB9886
	.byte	0x7
	.quad	.LFB10616
	.uleb128 .LFE10616-.LFB10616
	.byte	0x7
	.quad	.LFB10623
	.uleb128 .LFE10623-.LFB10623
	.byte	0x7
	.quad	.LFB10637
	.uleb128 .LFE10637-.LFB10637
	.byte	0x7
	.quad	.LFB10642
	.uleb128 .LFE10642-.LFB10642
	.byte	0x7
	.quad	.LFB10691
	.uleb128 .LFE10691-.LFB10691
	.byte	0x7
	.quad	.LFB10696
	.uleb128 .LFE10696-.LFB10696
	.byte	0x7
	.quad	.LFB10722
	.uleb128 .LFE10722-.LFB10722
	.byte	0x7
	.quad	.LFB10823
	.uleb128 .LFE10823-.LFB10823
	.byte	0x7
	.quad	.LFB10889
	.uleb128 .LFE10889-.LFB10889
	.byte	0x7
	.quad	.LFB10904
	.uleb128 .LFE10904-.LFB10904
	.byte	0x7
	.quad	.LFB10916
	.uleb128 .LFE10916-.LFB10916
	.byte	0x7
	.quad	.LFB10920
	.uleb128 .LFE10920-.LFB10920
	.byte	0x7
	.quad	.LFB10922
	.uleb128 .LFE10922-.LFB10922
	.byte	0x7
	.quad	.LFB10921
	.uleb128 .LFE10921-.LFB10921
	.byte	0x7
	.quad	.LFB10917
	.uleb128 .LFE10917-.LFB10917
	.byte	0x7
	.quad	.LFB10923
	.uleb128 .LFE10923-.LFB10923
	.byte	0x7
	.quad	.LFB10924
	.uleb128 .LFE10924-.LFB10924
	.byte	0x7
	.quad	.LFB10925
	.uleb128 .LFE10925-.LFB10925
	.byte	0x7
	.quad	.LFB10927
	.uleb128 .LFE10927-.LFB10927
	.byte	0x7
	.quad	.LFB10930
	.uleb128 .LFE10930-.LFB10930
	.byte	0x7
	.quad	.LFB10931
	.uleb128 .LFE10931-.LFB10931
	.byte	0x7
	.quad	.LFB10935
	.uleb128 .LFE10935-.LFB10935
	.byte	0x7
	.quad	.LFB10941
	.uleb128 .LFE10941-.LFB10941
	.byte	0x7
	.quad	.LFB10943
	.uleb128 .LFE10943-.LFB10943
	.byte	0x7
	.quad	.LFB10948
	.uleb128 .LFE10948-.LFB10948
	.byte	0x7
	.quad	.LFB10951
	.uleb128 .LFE10951-.LFB10951
	.byte	0x7
	.quad	.LFB10957
	.uleb128 .LFE10957-.LFB10957
	.byte	0x7
	.quad	.LFB11356
	.uleb128 .LFE11356-.LFB11356
	.byte	0x7
	.quad	.LFB11359
	.uleb128 .LFE11359-.LFB11359
	.byte	0x7
	.quad	.LFB11365
	.uleb128 .LFE11365-.LFB11365
	.byte	0x7
	.quad	.LFB11366
	.uleb128 .LFE11366-.LFB11366
	.byte	0x7
	.quad	.LFB11369
	.uleb128 .LFE11369-.LFB11369
	.byte	0x7
	.quad	.LFB11420
	.uleb128 .LFE11420-.LFB11420
	.byte	0x7
	.quad	.LFB11445
	.uleb128 .LFE11445-.LFB11445
	.byte	0x7
	.quad	.LFB11446
	.uleb128 .LFE11446-.LFB11446
	.byte	0x7
	.quad	.LFB11447
	.uleb128 .LFE11447-.LFB11447
	.byte	0x7
	.quad	.LFB11448
	.uleb128 .LFE11448-.LFB11448
	.byte	0x7
	.quad	.LFB11449
	.uleb128 .LFE11449-.LFB11449
	.byte	0x7
	.quad	.LFB11476
	.uleb128 .LFE11476-.LFB11476
	.byte	0x7
	.quad	.LFB11480
	.uleb128 .LFE11480-.LFB11480
	.byte	0x7
	.quad	.LFB11479
	.uleb128 .LFE11479-.LFB11479
	.byte	0x7
	.quad	.LFB11478
	.uleb128 .LFE11478-.LFB11478
	.byte	0x7
	.quad	.LFB11484
	.uleb128 .LFE11484-.LFB11484
	.byte	0x7
	.quad	.LFB11488
	.uleb128 .LFE11488-.LFB11488
	.byte	0x7
	.quad	.LFB11553
	.uleb128 .LFE11553-.LFB11553
	.byte	0x7
	.quad	.LFB11555
	.uleb128 .LFE11555-.LFB11555
	.byte	0x7
	.quad	.LFB11558
	.uleb128 .LFE11558-.LFB11558
	.byte	0x7
	.quad	.LFB11559
	.uleb128 .LFE11559-.LFB11559
	.byte	0x7
	.quad	.LFB11560
	.uleb128 .LFE11560-.LFB11560
	.byte	0x7
	.quad	.LFB11561
	.uleb128 .LFE11561-.LFB11561
	.byte	0x7
	.quad	.LFB11562
	.uleb128 .LFE11562-.LFB11562
	.byte	0x7
	.quad	.LFB11563
	.uleb128 .LFE11563-.LFB11563
	.byte	0x7
	.quad	.LFB11568
	.uleb128 .LFE11568-.LFB11568
	.byte	0x7
	.quad	.LFB11571
	.uleb128 .LFE11571-.LFB11571
	.byte	0x7
	.quad	.LFB11573
	.uleb128 .LFE11573-.LFB11573
	.byte	0x7
	.quad	.LFB11577
	.uleb128 .LFE11577-.LFB11577
	.byte	0x7
	.quad	.LFB11579
	.uleb128 .LFE11579-.LFB11579
	.byte	0x7
	.quad	.LFB11582
	.uleb128 .LFE11582-.LFB11582
	.byte	0x7
	.quad	.LFB11583
	.uleb128 .LFE11583-.LFB11583
	.byte	0x7
	.quad	.LFB11590
	.uleb128 .LFE11590-.LFB11590
	.byte	0x7
	.quad	.LFB11594
	.uleb128 .LFE11594-.LFB11594
	.byte	0x7
	.quad	.LFB11595
	.uleb128 .LFE11595-.LFB11595
	.byte	0x7
	.quad	.LFB11783
	.uleb128 .LFE11783-.LFB11783
	.byte	0x7
	.quad	.LFB11789
	.uleb128 .LFE11789-.LFB11789
	.byte	0x7
	.quad	.LFB11795
	.uleb128 .LFE11795-.LFB11795
	.byte	0x7
	.quad	.LFB11796
	.uleb128 .LFE11796-.LFB11796
	.byte	0x7
	.quad	.LFB11797
	.uleb128 .LFE11797-.LFB11797
	.byte	0x7
	.quad	.LFB11805
	.uleb128 .LFE11805-.LFB11805
	.byte	0x7
	.quad	.LFB11807
	.uleb128 .LFE11807-.LFB11807
	.byte	0x7
	.quad	.LFB11809
	.uleb128 .LFE11809-.LFB11809
	.byte	0x7
	.quad	.LFB11810
	.uleb128 .LFE11810-.LFB11810
	.byte	0x7
	.quad	.LFB11811
	.uleb128 .LFE11811-.LFB11811
	.byte	0x7
	.quad	.LFB11815
	.uleb128 .LFE11815-.LFB11815
	.byte	0x7
	.quad	.LFB11817
	.uleb128 .LFE11817-.LFB11817
	.byte	0x7
	.quad	.LFB11836
	.uleb128 .LFE11836-.LFB11836
	.byte	0x7
	.quad	.LFB11838
	.uleb128 .LFE11838-.LFB11838
	.byte	0x7
	.quad	.LFB11839
	.uleb128 .LFE11839-.LFB11839
	.byte	0x7
	.quad	.LFB11840
	.uleb128 .LFE11840-.LFB11840
	.byte	0x7
	.quad	.LFB11841
	.uleb128 .LFE11841-.LFB11841
	.byte	0x7
	.quad	.LFB11842
	.uleb128 .LFE11842-.LFB11842
	.byte	0x7
	.quad	.LFB11843
	.uleb128 .LFE11843-.LFB11843
	.byte	0x7
	.quad	.LFB11844
	.uleb128 .LFE11844-.LFB11844
	.byte	0x7
	.quad	.LFB11845
	.uleb128 .LFE11845-.LFB11845
	.byte	0x7
	.quad	.LFB11846
	.uleb128 .LFE11846-.LFB11846
	.byte	0x7
	.quad	.LFB11849
	.uleb128 .LFE11849-.LFB11849
	.byte	0x7
	.quad	.LFB11852
	.uleb128 .LFE11852-.LFB11852
	.byte	0x7
	.quad	.LFB11854
	.uleb128 .LFE11854-.LFB11854
	.byte	0x7
	.quad	.LFB11855
	.uleb128 .LFE11855-.LFB11855
	.byte	0x7
	.quad	.LFB11856
	.uleb128 .LFE11856-.LFB11856
	.byte	0x7
	.quad	.LFB11866
	.uleb128 .LFE11866-.LFB11866
	.byte	0x7
	.quad	.LFB11868
	.uleb128 .LFE11868-.LFB11868
	.byte	0x7
	.quad	.LFB11872
	.uleb128 .LFE11872-.LFB11872
	.byte	0x7
	.quad	.LFB11885
	.uleb128 .LFE11885-.LFB11885
	.byte	0x7
	.quad	.LFB11887
	.uleb128 .LFE11887-.LFB11887
	.byte	0x7
	.quad	.LFB11890
	.uleb128 .LFE11890-.LFB11890
	.byte	0x7
	.quad	.LFB12007
	.uleb128 .LFE12007-.LFB12007
	.byte	0x7
	.quad	.LFB12015
	.uleb128 .LFE12015-.LFB12015
	.byte	0x7
	.quad	.LFB12019
	.uleb128 .LFE12019-.LFB12019
	.byte	0x7
	.quad	.LFB12020
	.uleb128 .LFE12020-.LFB12020
	.byte	0x7
	.quad	.LFB12023
	.uleb128 .LFE12023-.LFB12023
	.byte	0x7
	.quad	.LFB12030
	.uleb128 .LFE12030-.LFB12030
	.byte	0x7
	.quad	.LFB12033
	.uleb128 .LFE12033-.LFB12033
	.byte	0x7
	.quad	.LFB12034
	.uleb128 .LFE12034-.LFB12034
	.byte	0x7
	.quad	.LFB12035
	.uleb128 .LFE12035-.LFB12035
	.byte	0x7
	.quad	.LFB12037
	.uleb128 .LFE12037-.LFB12037
	.byte	0x7
	.quad	.LFB12041
	.uleb128 .LFE12041-.LFB12041
	.byte	0x7
	.quad	.LFB12042
	.uleb128 .LFE12042-.LFB12042
	.byte	0x7
	.quad	.LFB12043
	.uleb128 .LFE12043-.LFB12043
	.byte	0x7
	.quad	.LFB12058
	.uleb128 .LFE12058-.LFB12058
	.byte	0x7
	.quad	.LFB12066
	.uleb128 .LFE12066-.LFB12066
	.byte	0x7
	.quad	.LFB12068
	.uleb128 .LFE12068-.LFB12068
	.byte	0x7
	.quad	.LFB12069
	.uleb128 .LFE12069-.LFB12069
	.byte	0x7
	.quad	.LFB12070
	.uleb128 .LFE12070-.LFB12070
	.byte	0x7
	.quad	.LFB12071
	.uleb128 .LFE12071-.LFB12071
	.byte	0x7
	.quad	.LFB12158
	.uleb128 .LFE12158-.LFB12158
	.byte	0x7
	.quad	.LFB12161
	.uleb128 .LFE12161-.LFB12161
	.byte	0x7
	.quad	.LFB12162
	.uleb128 .LFE12162-.LFB12162
	.byte	0x7
	.quad	.LFB12163
	.uleb128 .LFE12163-.LFB12163
	.byte	0x7
	.quad	.LFB12165
	.uleb128 .LFE12165-.LFB12165
	.byte	0x7
	.quad	.LFB12168
	.uleb128 .LFE12168-.LFB12168
	.byte	0x7
	.quad	.LFB12171
	.uleb128 .LFE12171-.LFB12171
	.byte	0x7
	.quad	.LFB12173
	.uleb128 .LFE12173-.LFB12173
	.byte	0x7
	.quad	.LFB12174
	.uleb128 .LFE12174-.LFB12174
	.byte	0x7
	.quad	.LFB12189
	.uleb128 .LFE12189-.LFB12189
	.byte	0x7
	.quad	.LFB12190
	.uleb128 .LFE12190-.LFB12190
	.byte	0x7
	.quad	.LFB12202
	.uleb128 .LFE12202-.LFB12202
	.byte	0x7
	.quad	.LFB12203
	.uleb128 .LFE12203-.LFB12203
	.byte	0x7
	.quad	.LFB12204
	.uleb128 .LFE12204-.LFB12204
	.byte	0x7
	.quad	.LFB12241
	.uleb128 .LFE12241-.LFB12241
	.byte	0x7
	.quad	.LFB12243
	.uleb128 .LFE12243-.LFB12243
	.byte	0x7
	.quad	.LFB12244
	.uleb128 .LFE12244-.LFB12244
	.byte	0x7
	.quad	.LFB12245
	.uleb128 .LFE12245-.LFB12245
	.byte	0x7
	.quad	.LFB12247
	.uleb128 .LFE12247-.LFB12247
	.byte	0x7
	.quad	.LFB12250
	.uleb128 .LFE12250-.LFB12250
	.byte	0x7
	.quad	.LFB12253
	.uleb128 .LFE12253-.LFB12253
	.byte	0x7
	.quad	.LFB12255
	.uleb128 .LFE12255-.LFB12255
	.byte	0x7
	.quad	.LFB12256
	.uleb128 .LFE12256-.LFB12256
	.byte	0x7
	.quad	.LFB12265
	.uleb128 .LFE12265-.LFB12265
	.byte	0x7
	.quad	.LFB12268
	.uleb128 .LFE12268-.LFB12268
	.byte	0x7
	.quad	.LFB12269
	.uleb128 .LFE12269-.LFB12269
	.byte	0x7
	.quad	.LFB12273
	.uleb128 .LFE12273-.LFB12273
	.byte	0x7
	.quad	.LFB12274
	.uleb128 .LFE12274-.LFB12274
	.byte	0x7
	.quad	.LFB12278
	.uleb128 .LFE12278-.LFB12278
	.byte	0x7
	.quad	.LFB12284
	.uleb128 .LFE12284-.LFB12284
	.byte	0x7
	.quad	.LFB12286
	.uleb128 .LFE12286-.LFB12286
	.byte	0x7
	.quad	.LFB12287
	.uleb128 .LFE12287-.LFB12287
	.byte	0x7
	.quad	.LFB12305
	.uleb128 .LFE12305-.LFB12305
	.byte	0x7
	.quad	.LFB12306
	.uleb128 .LFE12306-.LFB12306
	.byte	0x7
	.quad	.LFB12307
	.uleb128 .LFE12307-.LFB12307
	.byte	0x7
	.quad	.LFB12309
	.uleb128 .LFE12309-.LFB12309
	.byte	0x7
	.quad	.LFB12311
	.uleb128 .LFE12311-.LFB12311
	.byte	0x7
	.quad	.LFB12312
	.uleb128 .LFE12312-.LFB12312
	.byte	0x7
	.quad	.LFB12321
	.uleb128 .LFE12321-.LFB12321
	.byte	0x7
	.quad	.LFB12322
	.uleb128 .LFE12322-.LFB12322
	.byte	0x7
	.quad	.LFB12326
	.uleb128 .LFE12326-.LFB12326
	.byte	0x7
	.quad	.LFB12328
	.uleb128 .LFE12328-.LFB12328
	.byte	0x7
	.quad	.LFB12330
	.uleb128 .LFE12330-.LFB12330
	.byte	0x7
	.quad	.LFB12331
	.uleb128 .LFE12331-.LFB12331
	.byte	0x7
	.quad	.LFB12335
	.uleb128 .LFE12335-.LFB12335
	.byte	0x7
	.quad	.LFB12338
	.uleb128 .LFE12338-.LFB12338
	.byte	0x7
	.quad	.LFB12340
	.uleb128 .LFE12340-.LFB12340
	.byte	0x7
	.quad	.LFB12341
	.uleb128 .LFE12341-.LFB12341
	.byte	0x7
	.quad	.LFB12351
	.uleb128 .LFE12351-.LFB12351
	.byte	0x7
	.quad	.LFB12352
	.uleb128 .LFE12352-.LFB12352
	.byte	0x7
	.quad	.LFB12357
	.uleb128 .LFE12357-.LFB12357
	.byte	0x7
	.quad	.LFB12359
	.uleb128 .LFE12359-.LFB12359
	.byte	0x7
	.quad	.LFB12363
	.uleb128 .LFE12363-.LFB12363
	.byte	0x7
	.quad	.LFB12364
	.uleb128 .LFE12364-.LFB12364
	.byte	0x7
	.quad	.LFB12365
	.uleb128 .LFE12365-.LFB12365
	.byte	0x7
	.quad	.LFB12367
	.uleb128 .LFE12367-.LFB12367
	.byte	0x7
	.quad	.LFB12369
	.uleb128 .LFE12369-.LFB12369
	.byte	0x7
	.quad	.LFB12370
	.uleb128 .LFE12370-.LFB12370
	.byte	0x7
	.quad	.LFB12371
	.uleb128 .LFE12371-.LFB12371
	.byte	0x7
	.quad	.LFB12377
	.uleb128 .LFE12377-.LFB12377
	.byte	0x7
	.quad	.LFB12378
	.uleb128 .LFE12378-.LFB12378
	.byte	0
.Ldebug_ranges3:
	.section	.debug_line,"dr"
.Ldebug_line0:
	.section	.debug_str,"dr"
.LASF182:
	.ascii "operator new []\0"
.LASF203:
	.ascii "__closure\0"
.LASF123:
	.ascii "arrival_token\0"
.LASF198:
	.ascii "__phase\0"
.LASF219:
	.ascii "errorMsg\0"
.LASF109:
	.ascii "_M_head_impl\0"
.LASF12:
	.ascii "strong_ordering\0"
.LASF69:
	.ascii "deleter_type\0"
.LASF142:
	.ascii "unused\0"
.LASF173:
	.ascii "D2D1_HWND_RENDER_TARGET_PROPERTIES\0"
.LASF193:
	.ascii "__success\0"
.LASF194:
	.ascii "__failure\0"
.LASF66:
	.ascii "~unique_ptr\0"
.LASF169:
	.ascii "ID2D1Factory\0"
.LASF200:
	.ascii "__update\0"
.LASF179:
	.ascii "MaterialAttributes\0"
.LASF44:
	.ascii "operator&=\0"
.LASF96:
	.ascii "__cast<long long int, std::ratio<1, 1000> >\0"
.LASF124:
	.ascii "arrive_and_drop\0"
.LASF24:
	.ascii "__mutex_base\0"
.LASF73:
	.ascii "_Del\0"
.LASF155:
	.ascii "D2D1_PIXEL_FORMAT\0"
.LASF75:
	.ascii "_Den\0"
.LASF146:
	.ascii "hwnd\0"
.LASF112:
	.ascii "_Tuple_impl\0"
.LASF58:
	.ascii "atomic\0"
.LASF74:
	.ascii "_Num\0"
.LASF160:
	.ascii "D2D1_BITMAP_INTERPOLATION_MODE\0"
.LASF102:
	.ascii "_M_ptr\0"
.LASF83:
	.ascii "duration<long long int, std::ratio<1> >\0"
.LASF184:
	.ascii "D2D1CreateFactory\0"
.LASF163:
	.ascii "D2D1_FEATURE_LEVEL\0"
.LASF153:
	.ascii "DXGI_FORMAT\0"
.LASF145:
	.ascii "hInstance\0"
.LASF135:
	.ascii "__get_helper<0, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
.LASF100:
	.ascii "_Period1\0"
.LASF85:
	.ascii "_Period2\0"
.LASF117:
	.ascii "__nothrow_default_constructible\0"
.LASF17:
	.ascii "_Spin\0"
.LASF76:
	.ascii "_S_gcd\0"
.LASF9:
	.ascii "partial_ordering\0"
.LASF208:
	.ascii "SyncPoint\0"
.LASF189:
	.ascii "__addr\0"
.LASF4:
	.ascii "operator()\0"
.LASF140:
	.ascii "get<0, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
.LASF50:
	.ascii "exchange\0"
.LASF221:
	.ascii "__mutex\0"
.LASF129:
	.ascii "_UElements\0"
.LASF170:
	.ascii "ID2D1HwndRenderTarget\0"
.LASF197:
	.ascii "__current\0"
.LASF77:
	.ascii "duration\0"
.LASF18:
	.ascii "~__waiter\0"
.LASF218:
	.ascii "errorText\0"
.LASF215:
	.ascii "__running\0"
.LASF101:
	.ascii "__atomic_ref\0"
.LASF199:
	.ascii "__to_rep\0"
.LASF178:
	.ascii "ColorF\0"
.LASF216:
	.ascii "__matrix\0"
.LASF62:
	.ascii "_M_t\0"
.LASF53:
	.ascii "fetch_add\0"
.LASF217:
	.ascii "___handle\0"
.LASF60:
	.ascii "operator std::__atomic_base<long long int>::__int_type\0"
.LASF48:
	.ascii "store\0"
.LASF90:
	.ascii "time_point\0"
.LASF120:
	.ascii "_Dummy\0"
.LASF21:
	.ascii "allocator_arg_t\0"
.LASF65:
	.ascii "unique_ptr\0"
.LASF39:
	.ascii "operator std::__atomic_base<bool>::__int_type\0"
.LASF159:
	.ascii "D2D_RECT_F\0"
.LASF151:
	.ascii "__allow_vector\0"
.LASF210:
	.ascii "factoryType\0"
.LASF157:
	.ascii "width\0"
.LASF81:
	.ascii "operator*=\0"
.LASF220:
	.ascii "__cond\0"
.LASF42:
	.ascii "operator+=\0"
.LASF107:
	.ascii "_Head_base\0"
.LASF181:
	.ascii "operator delete []\0"
.LASF119:
	.ascii "tuple<>\0"
.LASF116:
	.ascii "_M_tail\0"
.LASF49:
	.ascii "load\0"
.LASF222:
	.ascii "_ZSt9terminatev\0"
.LASF174:
	.ascii "pixelSize\0"
.LASF105:
	.ascii "__uniq_ptr_impl\0"
.LASF40:
	.ascii "operator++\0"
.LASF10:
	.ascii "weak_ordering\0"
.LASF114:
	.ascii "_Elements\0"
.LASF11:
	.ascii "operator std::partial_ordering\0"
.LASF154:
	.ascii "D2D1_ALPHA_MODE\0"
.LASF175:
	.ascii "D2D1_RENDER_TARGET_PROPERTIES\0"
.LASF30:
	.ascii "timespec\0"
.LASF122:
	.ascii "__uniq_ptr_data\0"
.LASF115:
	.ascii "_Inherited\0"
.LASF205:
	.ascii "__lhs\0"
.LASF126:
	.ascii "_UHead\0"
.LASF144:
	.ascii "bottom\0"
.LASF128:
	.ascii "_Args\0"
.LASF149:
	.ascii "vswprintf\0"
.LASF187:
	.ascii "__pred\0"
.LASF213:
	.ascii "keyReleased\0"
.LASF94:
	.ascii "_NumIsOne\0"
.LASF86:
	.ascii "duration<long long int, std::ratio<1, 1000> >\0"
.LASF70:
	.ascii "get_deleter\0"
.LASF52:
	.ascii "compare_exchange_strong\0"
.LASF80:
	.ascii "operator-\0"
.LASF172:
	.ascii "D2D1_FACTORY_OPTIONS\0"
.LASF138:
	.ascii "__get_helper<0, MATRIX::MaterialAttributes*, std::default_delete<MATRIX::MaterialAttributes []> >\0"
.LASF143:
	.ascii "right\0"
.LASF23:
	.ascii "swap\0"
.LASF89:
	.ascii "_Period\0"
.LASF165:
	.ascii "D2D1_RENDER_TARGET_TYPE\0"
.LASF186:
	.ascii "__in_chrg\0"
.LASF108:
	.ascii "_M_head\0"
.LASF27:
	.ascii "native_handle\0"
.LASF34:
	.ascii "lock_guard\0"
.LASF93:
	.ascii "_ToDur\0"
.LASF41:
	.ascii "operator--\0"
.LASF51:
	.ascii "compare_exchange_weak\0"
.LASF95:
	.ascii "_DenIsOne\0"
.LASF54:
	.ascii "fetch_sub\0"
.LASF118:
	.ascii "tuple\0"
.LASF207:
	.ascii "__completion\0"
.LASF56:
	.ascii "fetch_or\0"
.LASF64:
	.ascii "_Callable\0"
.LASF67:
	.ascii "operator*\0"
.LASF79:
	.ascii "operator+\0"
.LASF57:
	.ascii "fetch_xor\0"
.LASF14:
	.ascii "_M_notify\0"
.LASF6:
	.ascii "operator=\0"
.LASF177:
	.ascii "minLevel\0"
.LASF202:
	.ascii "~<lambda>\0"
.LASF63:
	.ascii "_State_impl\0"
.LASF5:
	.ascii "__nonesuch\0"
.LASF91:
	.ascii "_Clock\0"
.LASF103:
	.ascii "operator[]\0"
.LASF31:
	.ascii "notify_one\0"
.LASF132:
	.ascii "terminate\0"
.LASF158:
	.ascii "height\0"
.LASF59:
	.ascii "_S_alignment\0"
.LASF29:
	.ascii "wait\0"
.LASF195:
	.ascii "__val\0"
.LASF204:
	.ascii "__rep\0"
.LASF99:
	.ascii "_Rep1\0"
.LASF84:
	.ascii "_Rep2\0"
.LASF164:
	.ascii "D2D1_PRESENT_OPTIONS\0"
.LASF183:
	.ascii "operator new\0"
.LASF152:
	.ascii "__allow_parallel\0"
.LASF136:
	.ascii "get<0, std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t*, std::default_delete<std::__tree_barrier<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >::__state_t []> >\0"
.LASF88:
	.ascii "_Rep\0"
.LASF185:
	.ascii "this\0"
.LASF171:
	.ascii "ID2D1SolidColorBrush\0"
.LASF188:
	.ascii "__spin\0"
.LASF110:
	.ascii "_Idx\0"
.LASF212:
	.ascii "keyPressed\0"
.LASF13:
	.ascii "__waiter_pool_base\0"
.LASF82:
	.ascii "operator/=\0"
.LASF47:
	.ascii "is_lock_free\0"
.LASF134:
	.ascii "__tuple_element_t\0"
.LASF196:
	.ascii "__old_phase\0"
.LASF7:
	.ascii "__detail\0"
.LASF131:
	.ascii "_Types\0"
.LASF104:
	.ascii "default_delete\0"
.LASF43:
	.ascii "operator-=\0"
.LASF92:
	.ascii "__cast<long long int, std::ratio<1, 1000000000> >\0"
.LASF191:
	.ascii "__expected\0"
.LASF168:
	.ascii "ID2D1BitmapRenderTarget\0"
.LASF167:
	.ascii "ID2D1Bitmap\0"
.LASF45:
	.ascii "operator|=\0"
.LASF137:
	.ascii "__get_helper<0, std::thread*, std::default_delete<std::thread []> >\0"
.LASF166:
	.ascii "D2D1_RENDER_TARGET_USAGE\0"
.LASF68:
	.ascii "pointer\0"
.LASF71:
	.ascii "reset\0"
.LASF46:
	.ascii "operator^=\0"
.LASF98:
	.ascii "__enable_if_is_duration\0"
.LASF139:
	.ascii "get<0, std::thread*, std::default_delete<std::thread []> >\0"
.LASF133:
	.ascii "_Tail\0"
.LASF22:
	.ascii "exception_ptr\0"
.LASF25:
	.ascii "operator bool\0"
.LASF176:
	.ascii "pixelFormat\0"
.LASF20:
	.ascii "_EntersWait\0"
.LASF8:
	.ascii "_M_value\0"
.LASF156:
	.ascii "alphaMode\0"
.LASF87:
	.ascii "duration<long long int>\0"
.LASF190:
	.ascii "__ptr\0"
.LASF130:
	.ascii "_Valid\0"
.LASF206:
	.ascii "__rhs\0"
.LASF61:
	.ascii "thread\0"
.LASF28:
	.ascii "__condvar\0"
.LASF26:
	.ascii "native_handle_type\0"
.LASF127:
	.ascii "tuple<WinMain(HINSTANCE, HINSTANCE, LPSTR, INT)::<lambda()> >\0"
.LASF37:
	.ascii "__atomic_base\0"
.LASF2:
	.ascii "type\0"
.LASF201:
	.ascii "<lambda>\0"
.LASF211:
	.ascii "matrix\0"
.LASF72:
	.ascii "unique_ptr<>\0"
.LASF150:
	.ascii "__allow_unsequenced\0"
.LASF97:
	.ascii "__cast<long long int, std::ratio<1> >\0"
.LASF106:
	.ascii "_M_deleter\0"
.LASF148:
	.ascii "swprintf\0"
.LASF147:
	.ascii "__retval\0"
.LASF3:
	.ascii "value_type\0"
.LASF192:
	.ascii "__desired\0"
.LASF32:
	.ascii "notify_all\0"
.LASF111:
	.ascii "_Head\0"
.LASF35:
	.ascii "release\0"
.LASF55:
	.ascii "fetch_and\0"
.LASF180:
	.ascii "cell\0"
.LASF121:
	.ascii "__conditional_t\0"
.LASF162:
	.ascii "D2D1_FACTORY_TYPE\0"
.LASF16:
	.ascii "_Pred\0"
.LASF209:
	.ascii "running\0"
.LASF161:
	.ascii "D2D1_DEBUG_LEVEL\0"
.LASF78:
	.ascii "~duration\0"
.LASF36:
	.ascii "__int_type\0"
.LASF15:
	.ascii "__unspec\0"
.LASF141:
	.ascii "common_type_t\0"
.LASF19:
	.ascii "__waiter<std::__barrier_phase_t>\0"
.LASF214:
	.ascii "_handle\0"
.LASF33:
	.ascii "adopt_lock_t\0"
.LASF113:
	.ascii "_M_swap\0"
.LASF38:
	.ascii "~__atomic_base\0"
.LASF125:
	.ascii "_CompletionF\0"
	.section	.debug_line_str,"dr"
.LASF0:
	.ascii "src\\main.cpp\0"
.LASF1:
	.ascii "C:\\code\\redjader\\simulation\0"
	.ident	"GCC: (Rev6, Built by MSYS2 project) 12.2.0"
	.def	__mingw_vfprintf;	.scl	2;	.type	32;	.endef
	.def	_ZSt11_Hash_bytesPKvyy;	.scl	2;	.type	32;	.endef
	.def	pthread_self;	.scl	2;	.type	32;	.endef
	.def	sched_yield;	.scl	2;	.type	32;	.endef
	.def	pthread_mutex_init;	.scl	2;	.type	32;	.endef
	.def	pthread_mutex_destroy;	.scl	2;	.type	32;	.endef
	.def	pthread_mutex_lock;	.scl	2;	.type	32;	.endef
	.def	pthread_mutex_unlock;	.scl	2;	.type	32;	.endef
	.def	pthread_cond_broadcast;	.scl	2;	.type	32;	.endef
	.def	pthread_cond_signal;	.scl	2;	.type	32;	.endef
	.def	pthread_cond_wait;	.scl	2;	.type	32;	.endef
	.def	pthread_cond_destroy;	.scl	2;	.type	32;	.endef
	.def	_ZSt20__throw_system_errori;	.scl	2;	.type	32;	.endef
	.def	__cxa_guard_acquire;	.scl	2;	.type	32;	.endef
	.def	atexit;	.scl	2;	.type	32;	.endef
	.def	__cxa_guard_release;	.scl	2;	.type	32;	.endef
	.def	_ZSt9terminatev;	.scl	2;	.type	32;	.endef
	.def	D2D1CreateFactory;	.scl	2;	.type	32;	.endef
	.def	malloc;	.scl	2;	.type	32;	.endef
	.def	_Znay;	.scl	2;	.type	32;	.endef
	.def	_Unwind_Resume;	.scl	2;	.type	32;	.endef
	.def	rand;	.scl	2;	.type	32;	.endef
	.def	_ZdlPvy;	.scl	2;	.type	32;	.endef
	.def	free;	.scl	2;	.type	32;	.endef
	.def	__cxa_throw_bad_array_new_length;	.scl	2;	.type	32;	.endef
	.def	_ZdaPv;	.scl	2;	.type	32;	.endef
	.def	_Znwy;	.scl	2;	.type	32;	.endef
	.def	_ZNSt6thread20hardware_concurrencyEv;	.scl	2;	.type	32;	.endef
	.def	round;	.scl	2;	.type	32;	.endef
	.def	_ZNSt6thread4joinEv;	.scl	2;	.type	32;	.endef
	.def	nanosleep;	.scl	2;	.type	32;	.endef
	.def	vswprintf_s;	.scl	2;	.type	32;	.endef
	.def	cbrt;	.scl	2;	.type	32;	.endef
	.def	_ZNSt6chrono3_V212system_clock3nowEv;	.scl	2;	.type	32;	.endef
	.def	_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE;	.scl	2;	.type	32;	.endef
	.def	_ZdaPvy;	.scl	2;	.type	32;	.endef
	.def	_ZdaPvSt11align_val_t;	.scl	2;	.type	32;	.endef
	.def	_ZnaySt11align_val_t;	.scl	2;	.type	32;	.endef
	.def	_ZNSt6thread6_StateD2Ev;	.scl	2;	.type	32;	.endef
	.section	.rdata$.refptr._ZTVNSt6thread6_StateE, "dr"
	.globl	.refptr._ZTVNSt6thread6_StateE
	.linkonce	discard
.refptr._ZTVNSt6thread6_StateE:
	.quad	_ZTVNSt6thread6_StateE
